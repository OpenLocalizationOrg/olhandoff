<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci2\controls-and-patterns\tiles-and-notifications-adaptive-interactive-toasts.md</xliffext:olfilepath>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d866fe3963a1dc87c303f176e5ff1ead95d235f2</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-e58fd48" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Adaptive and interactive toast notifications let you create flexible pop-up notifications with more content, optional inline images, and optional user interaction.</source>
          <target state="new">Adaptive and interactive toast notifications let you create flexible pop-up notifications with more content, optional inline images, and optional user interaction.</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Adaptive and interactive toast notifications</source>
          <target state="new">Adaptive and interactive toast notifications</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Adaptive and interactive toast notifications</source>
          <target state="new">Adaptive and interactive toast notifications</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Updated for UWP apps on Windows 10.</source>
          <target state="new">Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept></source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept></target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Adaptive and interactive toast notifications let you create flexible pop-up notifications with more content, optional inline images, and optional user interaction.</source>
          <target state="new">Adaptive and interactive toast notifications let you create flexible pop-up notifications with more content, optional inline images, and optional user interaction.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The adaptive and interactive toast notifications model has these updates over the legacy toast template catalog:</source>
          <target state="new">The adaptive and interactive toast notifications model has these updates over the legacy toast template catalog:</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The option to include buttons and inputs on the notifications.</source>
          <target state="new">The option to include buttons and inputs on the notifications.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Three different activation types for the main toast notification and for each action.</source>
          <target state="new">Three different activation types for the main toast notification and for each action.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The option to create a notification for certain scenarios, including alarms, reminders, and incoming calls.</source>
          <target state="new">The option to create a notification for certain scenarios, including alarms, reminders, and incoming calls.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>   To see the legacy templates from Windows 8.1 and Windows Phone 8.1, see the <bpt id="p2">[</bpt>legacy toast template catalog<ept id="p2">](https://msdn.microsoft.com/library/windows/apps/hh761494)</ept>.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>   To see the legacy templates from Windows 8.1 and Windows Phone 8.1, see the <bpt id="p2">[</bpt>legacy toast template catalog<ept id="p2">](https://msdn.microsoft.com/library/windows/apps/hh761494)</ept>.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Toast notification structure</source>
          <target state="new">Toast notification structure</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Toast notifications are constructed using XML, which would typically contain these key elements:</source>
          <target state="new">Toast notifications are constructed using XML, which would typically contain these key elements:</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>visual<ph id="ph1">&amp;gt;</ph> covers the content available for the users to visually see, including text and images</source>
          <target state="new">visual<ph id="ph1">&amp;gt;</ph> covers the content available for the users to visually see, including text and images</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>actions<ph id="ph1">&amp;gt;</ph> contains buttons/inputs the developer wants to add inside the notification</source>
          <target state="new">actions<ph id="ph1">&amp;gt;</ph> contains buttons/inputs the developer wants to add inside the notification</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>audio<ph id="ph1">&amp;gt;</ph> specifies the sound played when the notification pops</source>
          <target state="new">audio<ph id="ph1">&amp;gt;</ph> specifies the sound played when the notification pops</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Here's a code example:</source>
          <target state="new">Here's a code example:</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>And a visual representation of the structure:</source>
          <target state="new">And a visual representation of the structure:</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>toast notification structure</source>
          <target state="new">toast notification structure</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Visual</source>
          <target state="new">Visual</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Inside the visual element, you must have exactly one binding element that contains the visual content of the toast.</source>
          <target state="new">Inside the visual element, you must have exactly one binding element that contains the visual content of the toast.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Tile notifications in Universal Windows Platform (UWP) apps support multiple templates that are based on different tile sizes.</source>
          <target state="new">Tile notifications in Universal Windows Platform (UWP) apps support multiple templates that are based on different tile sizes.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Toast notifications, however, have only one template name: <bpt id="p1">**</bpt>ToastGeneric<ept id="p1">**</ept>.</source>
          <target state="new">Toast notifications, however, have only one template name: <bpt id="p1">**</bpt>ToastGeneric<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Having just the one template name means:</source>
          <target state="new">Having just the one template name means:</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>You can change the toast content, such as adding another line of text, adding an inline image, or changing the thumbnail image from displaying the app icon to something else, and do any of these things without worrying about changing the entire template or creating an invalid payload due to a mismatch between the template name and the content.</source>
          <target state="new">You can change the toast content, such as adding another line of text, adding an inline image, or changing the thumbnail image from displaying the app icon to something else, and do any of these things without worrying about changing the entire template or creating an invalid payload due to a mismatch between the template name and the content.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>You can use the same code to construct the same payload for the <bpt id="p1">**</bpt>toast notification<ept id="p1">**</ept> that targets to deliver to different types of Microsoft Windows devices, including phones, tablets, PCs, and Xbox One.</source>
          <target state="new">You can use the same code to construct the same payload for the <bpt id="p1">**</bpt>toast notification<ept id="p1">**</ept> that targets to deliver to different types of Microsoft Windows devices, including phones, tablets, PCs, and Xbox One.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Each of these devices will accept the notification and display it to the user under their UI policies with the appropriate visual affordances and interaction model.</source>
          <target state="new">Each of these devices will accept the notification and display it to the user under their UI policies with the appropriate visual affordances and interaction model.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For all attributes supported in the visual section and its child elements, see the Schema section below.</source>
          <target state="new">For all attributes supported in the visual section and its child elements, see the Schema section below.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For more examples, see the XML examples section below.</source>
          <target state="new">For more examples, see the XML examples section below.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Actions</source>
          <target state="new">Actions</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>In UWP apps, you can add buttons and other inputs to your toast notifications, which lets users do more outside of the app.</source>
          <target state="new">In UWP apps, you can add buttons and other inputs to your toast notifications, which lets users do more outside of the app.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>These actions are specified under the <ph id="ph1">&amp;lt;</ph>actions<ph id="ph2">&amp;gt;</ph> element, of which there are two types that you can specify:</source>
          <target state="new">These actions are specified under the <ph id="ph1">&amp;lt;</ph>actions<ph id="ph2">&amp;gt;</ph> element, of which there are two types that you can specify:</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>action<ph id="ph1">&amp;gt;</ph> This appears as a button on desktop and mobile devices.</source>
          <target state="new">action<ph id="ph1">&amp;gt;</ph> This appears as a button on desktop and mobile devices.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>You can specify up to five custom or system actions inside a toast notification.</source>
          <target state="new">You can specify up to five custom or system actions inside a toast notification.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>input<ph id="ph1">&amp;gt;</ph> This allows users to provide input, such as quick replying to a message, or selecting an option from a drop-down menu.</source>
          <target state="new">input<ph id="ph1">&amp;gt;</ph> This allows users to provide input, such as quick replying to a message, or selecting an option from a drop-down menu.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Both <ph id="ph1">&amp;lt;</ph>action<ph id="ph2">&amp;gt;</ph> and <ph id="ph3">&amp;lt;</ph>input<ph id="ph4">&amp;gt;</ph> are adaptive within the Windows family of devices.</source>
          <target state="new">Both <ph id="ph1">&amp;lt;</ph>action<ph id="ph2">&amp;gt;</ph> and <ph id="ph3">&amp;lt;</ph>input<ph id="ph4">&amp;gt;</ph> are adaptive within the Windows family of devices.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>For example, on mobile or desktop devices, an <ph id="ph1">&amp;lt;</ph>action<ph id="ph2">&amp;gt;</ph> to a user is a button on which to tap/click.</source>
          <target state="new">For example, on mobile or desktop devices, an <ph id="ph1">&amp;lt;</ph>action<ph id="ph2">&amp;gt;</ph> to a user is a button on which to tap/click.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>A text <ph id="ph1">&amp;lt;</ph>input<ph id="ph2">&amp;gt;</ph> is a box in which users can input text using either a physical keyboard or an on-screen keyboard.</source>
          <target state="new">A text <ph id="ph1">&amp;lt;</ph>input<ph id="ph2">&amp;gt;</ph> is a box in which users can input text using either a physical keyboard or an on-screen keyboard.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>These elements will also adapt to future interaction scenarios, such as an action announced by voice or a text input taken by dictation.</source>
          <target state="new">These elements will also adapt to future interaction scenarios, such as an action announced by voice or a text input taken by dictation.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>When an action is taken by the user, you can do one of the following by specifying the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ActivationType<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/dn408447)</ept> attribute inside the <ph id="ph1">&amp;lt;</ph>action<ph id="ph2">&amp;gt;</ph> element:</source>
          <target state="new">When an action is taken by the user, you can do one of the following by specifying the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ActivationType<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/dn408447)</ept> attribute inside the <ph id="ph1">&amp;lt;</ph>action<ph id="ph2">&amp;gt;</ph> element:</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Activating the app in the foreground, with an action-specific argument that can be used to navigate to a specific page/context.</source>
          <target state="new">Activating the app in the foreground, with an action-specific argument that can be used to navigate to a specific page/context.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Activating the app's background task without affecting the user.</source>
          <target state="new">Activating the app's background task without affecting the user.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Activating another app via protocol launch.</source>
          <target state="new">Activating another app via protocol launch.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Specify a system action to perform.</source>
          <target state="new">Specify a system action to perform.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The current available system actions are snoozing and dismissing scheduled alarm/reminder, which will be further explained in a section below.</source>
          <target state="new">The current available system actions are snoozing and dismissing scheduled alarm/reminder, which will be further explained in a section below.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>For all attributes supported in the visual section and its child elements, see the Schema section below.</source>
          <target state="new">For all attributes supported in the visual section and its child elements, see the Schema section below.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For more examples, see the XML examples section below.</source>
          <target state="new">For more examples, see the XML examples section below.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Audio</source>
          <target state="new">Audio</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Custom sounds aren't currently supported on UWP apps that target the desktop platform; instead, you can choose from the list of ms-winsoundevents for your app on desktop.</source>
          <target state="new">Custom sounds aren't currently supported on UWP apps that target the desktop platform; instead, you can choose from the list of ms-winsoundevents for your app on desktop.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>UWP apps on mobile platforms support both ms-winsoundevents, along with custom sounds in these formats:</source>
          <target state="new">UWP apps on mobile platforms support both ms-winsoundevents, along with custom sounds in these formats:</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>ms-appx:///</source>
          <target state="new">ms-appx:///</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>ms-appdata:///</source>
          <target state="new">ms-appdata:///</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>See the <bpt id="p1">[</bpt>audio schema page<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br230842)</ept> for information on audio in toast notifications, which includes a complete list of ms-winsoundevents.</source>
          <target state="new">See the <bpt id="p1">[</bpt>audio schema page<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br230842)</ept> for information on audio in toast notifications, which includes a complete list of ms-winsoundevents.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Alarms, reminders, and incoming calls</source>
          <target state="new">Alarms, reminders, and incoming calls</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>You can use toast notifications for alarms, reminders, and incoming calls.</source>
          <target state="new">You can use toast notifications for alarms, reminders, and incoming calls.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>These special toasts have an appearance that's consistent with standard toasts, though special toasts feature some custom, scenario-based UI and patterns:</source>
          <target state="new">These special toasts have an appearance that's consistent with standard toasts, though special toasts feature some custom, scenario-based UI and patterns:</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>A reminder toast notification will stay on screen until the user dismisses it or takes action.</source>
          <target state="new">A reminder toast notification will stay on screen until the user dismisses it or takes action.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>On Windows Mobile, the reminder toast notifications will also show up pre-expanded.</source>
          <target state="new">On Windows Mobile, the reminder toast notifications will also show up pre-expanded.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>In addition to sharing the above behaviors with reminder notifications, alarm notifications also automatically play looping audio.</source>
          <target state="new">In addition to sharing the above behaviors with reminder notifications, alarm notifications also automatically play looping audio.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Incoming call notifications are displayed full screen on Windows Mobile devices.</source>
          <target state="new">Incoming call notifications are displayed full screen on Windows Mobile devices.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>This is done by specifying the scenario attribute inside the root element of a toast notification – <ph id="ph1">&amp;lt;</ph>toast<ph id="ph2">&amp;gt;</ph>: <ph id="ph3">&amp;lt;</ph>toast scenario=" { default | alarm | reminder | incomingCall } "</source>
          <target state="new">This is done by specifying the scenario attribute inside the root element of a toast notification – <ph id="ph1">&amp;lt;</ph>toast<ph id="ph2">&amp;gt;</ph>: <ph id="ph3">&amp;lt;</ph>toast scenario=" { default | alarm | reminder | incomingCall } "</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>XML examples</source>
          <target state="new">XML examples</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  The toast notification screenshots for these examples were taken from an app on desktop.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  The toast notification screenshots for these examples were taken from an app on desktop.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>On mobile devices, a toast notification may be collapsed when it pops up, with a grabber at the bottom of the toast to expand it.</source>
          <target state="new">On mobile devices, a toast notification may be collapsed when it pops up, with a grabber at the bottom of the toast to expand it.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Notification with rich visual contents</source>
          <target state="new">Notification with rich visual contents</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>This example shows how you can have multiple lines of text, an optional small image to override the application logo, and an optional inline image thumbnail.</source>
          <target state="new">This example shows how you can have multiple lines of text, an optional small image to override the application logo, and an optional inline image thumbnail.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>notification with rich visual contents</source>
          <target state="new">notification with rich visual contents</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Notification with actions, example 1</source>
          <target state="new">Notification with actions, example 1</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>This example shows...</source>
          <target state="new">This example shows...</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>notification with actions, example 1</source>
          <target state="new">notification with actions, example 1</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Notification with actions, example 2</source>
          <target state="new">Notification with actions, example 2</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>This example shows...</source>
          <target state="new">This example shows...</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>notification with actions, example 2</source>
          <target state="new">notification with actions, example 2</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Notification with text input and actions, example 1</source>
          <target state="new">Notification with text input and actions, example 1</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>This example shows...</source>
          <target state="new">This example shows...</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>notification with text and input actions</source>
          <target state="new">notification with text and input actions</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Notification with text input and actions, example 2</source>
          <target state="new">Notification with text input and actions, example 2</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>This example shows...</source>
          <target state="new">This example shows...</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>notification with text input and actions</source>
          <target state="new">notification with text input and actions</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Notification with selection input and actions</source>
          <target state="new">Notification with selection input and actions</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>This example shows...</source>
          <target state="new">This example shows...</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>notification with selection input and actions</source>
          <target state="new">notification with selection input and actions</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Reminder notification</source>
          <target state="new">Reminder notification</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>This example shows...</source>
          <target state="new">This example shows...</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>reminder notification</source>
          <target state="new">reminder notification</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Activation samples</source>
          <target state="new">Activation samples</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Like mentioned above, the body and actions in the toast are capable of activating apps in different ways.</source>
          <target state="new">Like mentioned above, the body and actions in the toast are capable of activating apps in different ways.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The below sample will show you how to handle different type of activations from the toast body and/or toast actions.</source>
          <target state="new">The below sample will show you how to handle different type of activations from the toast body and/or toast actions.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Foreground</source>
          <target state="new">Foreground</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>In this scenario, an app uses foreground activation to respond to an action inside an actionable toast notification by launching the app and navigating to the correct content.</source>
          <target state="new">In this scenario, an app uses foreground activation to respond to an action inside an actionable toast notification by launching the app and navigating to the correct content.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Activation from toast notifications used to invoke OnLaunched().</source>
          <target state="new">Activation from toast notifications used to invoke OnLaunched().</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>In Windows 10, toast has its own activation kind and will invoke OnActivated().</source>
          <target state="new">In Windows 10, toast has its own activation kind and will invoke OnActivated().</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Background</source>
          <target state="new">Background</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>In this scenario, an app uses a background task to handle an action inside an interactive toast notification.</source>
          <target state="new">In this scenario, an app uses a background task to handle an action inside an interactive toast notification.</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The below code shows how to declare this background task for handling toast activations inside your app manifest, and how to get arguments from the action and user inputs when the buttons are clicked.</source>
          <target state="new">The below code shows how to declare this background task for handling toast activations inside your app manifest, and how to get arguments from the action and user inputs when the buttons are clicked.</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Schemas: <ph id="ph1">&amp;lt;</ph>visual<ph id="ph2">&amp;gt;</ph> and <ph id="ph3">&amp;lt;</ph>audio</source>
          <target state="new">Schemas: <ph id="ph1">&amp;lt;</ph>visual<ph id="ph2">&amp;gt;</ph> and <ph id="ph3">&amp;lt;</ph>audio</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>In the following schemas, a "?" suffix means that an attribute is optional.</source>
          <target state="new">In the following schemas, a "?" suffix means that an attribute is optional.</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Attributes in <ph id="ph1">&amp;lt;</ph>toast</source>
          <target state="new">Attributes in <ph id="ph1">&amp;lt;</ph>toast</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>launch?</source>
          <target state="new">launch?</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>launch?</source>
          <target state="new">launch?</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>= string</source>
          <target state="new">= string</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>This is an optional attribute.</source>
          <target state="new">This is an optional attribute.</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>A string that is passed to the application when it is activated by the toast.</source>
          <target state="new">A string that is passed to the application when it is activated by the toast.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Depending on the value of activationType, this value can be received by the app in the foreground, inside the background task, or by another app that's protocol launched from the original app.</source>
          <target state="new">Depending on the value of activationType, this value can be received by the app in the foreground, inside the background task, or by another app that's protocol launched from the original app.</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The format and contents of this string are defined by the app for its own use.</source>
          <target state="new">The format and contents of this string are defined by the app for its own use.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>When the user taps or clicks the toast to launch its associated app, the launch string provides the context to the app that allows it to show the user a view relevant to the toast content, rather than launching in its default way.</source>
          <target state="new">When the user taps or clicks the toast to launch its associated app, the launch string provides the context to the app that allows it to show the user a view relevant to the toast content, rather than launching in its default way.</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>If the activation is happened because user clicked on an action, instead of the body of the toast, the developer retrieves back the "arguments" pre-defined in that <ph id="ph1">&amp;lt;</ph>action<ph id="ph2">&amp;gt;</ph> tag, instead of "launch" pre-defined in the <ph id="ph3">&amp;lt;</ph>toast<ph id="ph4">&amp;gt;</ph> tag.</source>
          <target state="new">If the activation is happened because user clicked on an action, instead of the body of the toast, the developer retrieves back the "arguments" pre-defined in that <ph id="ph1">&amp;lt;</ph>action<ph id="ph2">&amp;gt;</ph> tag, instead of "launch" pre-defined in the <ph id="ph3">&amp;lt;</ph>toast<ph id="ph4">&amp;gt;</ph> tag.</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>duration?</source>
          <target state="new">duration?</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>duration?</source>
          <target state="new">duration?</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>= "short|long"</source>
          <target state="new">= "short|long"</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>This is an optional attribute.</source>
          <target state="new">This is an optional attribute.</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Default value is "short".</source>
          <target state="new">Default value is "short".</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>This is only here for specific scenarios and appCompat.</source>
          <target state="new">This is only here for specific scenarios and appCompat.</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>You don't need this for the alarm scenario anymore.</source>
          <target state="new">You don't need this for the alarm scenario anymore.</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>We don't recommend using this property.</source>
          <target state="new">We don't recommend using this property.</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>activationType?</source>
          <target state="new">activationType?</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>activationType?</source>
          <target state="new">activationType?</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>= "foreground | background | protocol | system"</source>
          <target state="new">= "foreground | background | protocol | system"</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>This is an optional attribute.</source>
          <target state="new">This is an optional attribute.</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The default value is "foreground".</source>
          <target state="new">The default value is "foreground".</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>scenario?</source>
          <target state="new">scenario?</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>scenario?</source>
          <target state="new">scenario?</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>= "default | alarm | reminder | incomingCall"</source>
          <target state="new">= "default | alarm | reminder | incomingCall"</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>This is an optional attribute, default value is "default".</source>
          <target state="new">This is an optional attribute, default value is "default".</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>You do not need this unless your scenario is to pop an alarm, reminder, or incoming call.</source>
          <target state="new">You do not need this unless your scenario is to pop an alarm, reminder, or incoming call.</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Do not use this just for keeping your notification persistent on screen.</source>
          <target state="new">Do not use this just for keeping your notification persistent on screen.</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Attributes in <ph id="ph1">&amp;lt;</ph>visual</source>
          <target state="new">Attributes in <ph id="ph1">&amp;lt;</ph>visual</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>version?</source>
          <target state="new">version?</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>version?</source>
          <target state="new">version?</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>= nonNegativeInteger</source>
          <target state="new">= nonNegativeInteger</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>This attribute isn't necessary because versioning will be deprecated on <ph id="ph1">&amp;lt;</ph>visual<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="new">This attribute isn't necessary because versioning will be deprecated on <ph id="ph1">&amp;lt;</ph>visual<ph id="ph2">&amp;gt;</ph>.</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Stay tuned for a new versioning model that you'll specify from a higher hierarchy, if needed.</source>
          <target state="new">Stay tuned for a new versioning model that you'll specify from a higher hierarchy, if needed.</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>lang?</source>
          <target state="new">lang?</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>this element schema article<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br230847)</ept> for details on this optional attribute.</source>
          <target state="new">See <bpt id="p1">[</bpt>this element schema article<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br230847)</ept> for details on this optional attribute.</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>baseUri?</source>
          <target state="new">baseUri?</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>this element schema article<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br230847)</ept> for details on this optional attribute.</source>
          <target state="new">See <bpt id="p1">[</bpt>this element schema article<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br230847)</ept> for details on this optional attribute.</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>addImageQuery?</source>
          <target state="new">addImageQuery?</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>this element schema article<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br230847)</ept> for details on this optional attribute.</source>
          <target state="new">See <bpt id="p1">[</bpt>this element schema article<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br230847)</ept> for details on this optional attribute.</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Attributes in <ph id="ph1">&amp;lt;</ph>binding</source>
          <target state="new">Attributes in <ph id="ph1">&amp;lt;</ph>binding</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>template?</source>
          <target state="new">template?</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Important<ph id="ph1">\]</ph> template?</source>
          <target state="new">Important<ph id="ph1">\]</ph> template?</target>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>= "ToastGeneric"</source>
          <target state="new">= "ToastGeneric"</target>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>If you are using any of the new adaptive and interactive notification features, please make sure you start using "ToastGeneric" template instead of the legacy template.</source>
          <target state="new">If you are using any of the new adaptive and interactive notification features, please make sure you start using "ToastGeneric" template instead of the legacy template.</target>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Using the legacy templates with the new actions might work now, but that is not the intended use case, and we cannot guarantee that will continue working.</source>
          <target state="new">Using the legacy templates with the new actions might work now, but that is not the intended use case, and we cannot guarantee that will continue working.</target>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>lang?</source>
          <target state="new">lang?</target>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>this element schema article<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br230847)</ept> for details on this optional attribute.</source>
          <target state="new">See <bpt id="p1">[</bpt>this element schema article<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br230847)</ept> for details on this optional attribute.</target>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>baseUri?</source>
          <target state="new">baseUri?</target>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>this element schema article<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br230847)</ept> for details on this optional attribute.</source>
          <target state="new">See <bpt id="p1">[</bpt>this element schema article<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br230847)</ept> for details on this optional attribute.</target>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>addImageQuery?</source>
          <target state="new">addImageQuery?</target>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>this element schema article<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br230847)</ept> for details on this optional attribute.</source>
          <target state="new">See <bpt id="p1">[</bpt>this element schema article<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br230847)</ept> for details on this optional attribute.</target>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Attributes in <ph id="ph1">&amp;lt;</ph>text</source>
          <target state="new">Attributes in <ph id="ph1">&amp;lt;</ph>text</target>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>lang?</source>
          <target state="new">lang?</target>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>this element schema article<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br230847)</ept> for details on this optional attribute.</source>
          <target state="new">See <bpt id="p1">[</bpt>this element schema article<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br230847)</ept> for details on this optional attribute.</target>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Attributes in <ph id="ph1">&amp;lt;</ph>image</source>
          <target state="new">Attributes in <ph id="ph1">&amp;lt;</ph>image</target>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>src</source>
          <target state="new">src</target>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>this element schema article<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br230844)</ept> for details on this required attribute.</source>
          <target state="new">See <bpt id="p1">[</bpt>this element schema article<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br230844)</ept> for details on this required attribute.</target>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>placement?</source>
          <target state="new">placement?</target>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>placement?</source>
          <target state="new">placement?</target>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>= "inline" | "appLogoOverride"</source>
          <target state="new">= "inline" | "appLogoOverride"</target>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>This attribute is optional.</source>
          <target state="new">This attribute is optional.</target>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>This specifies where this image will be displayed.</source>
          <target state="new">This specifies where this image will be displayed.</target>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>"inline" means inside the toast body, below the text; "appLogoOverride" means replace the application icon (that shows up on the top left corner of the toast).</source>
          <target state="new">"inline" means inside the toast body, below the text; "appLogoOverride" means replace the application icon (that shows up on the top left corner of the toast).</target>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>You can have up to one image for each placement value.</source>
          <target state="new">You can have up to one image for each placement value.</target>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>alt?</source>
          <target state="new">alt?</target>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>this element schema article<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br230844)</ept> for details on this optional attribute.</source>
          <target state="new">See <bpt id="p1">[</bpt>this element schema article<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br230844)</ept> for details on this optional attribute.</target>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>addImageQuery?</source>
          <target state="new">addImageQuery?</target>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>this element schema article<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br230844)</ept> for details on this optional attribute.</source>
          <target state="new">See <bpt id="p1">[</bpt>this element schema article<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br230844)</ept> for details on this optional attribute.</target>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>hint-crop?</source>
          <target state="new">hint-crop?</target>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>hint-crop?</source>
          <target state="new">hint-crop?</target>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>= "none" | "circle"</source>
          <target state="new">= "none" | "circle"</target>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>This attribute is optional.</source>
          <target state="new">This attribute is optional.</target>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>"none" is the default value which means no cropping.</source>
          <target state="new">"none" is the default value which means no cropping.</target>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>"circle" crops the image to a circular shape.</source>
          <target state="new">"circle" crops the image to a circular shape.</target>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Use this for profile images of a contact, images of a person, and so on.</source>
          <target state="new">Use this for profile images of a contact, images of a person, and so on.</target>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Attributes in <ph id="ph1">&amp;lt;</ph>audio</source>
          <target state="new">Attributes in <ph id="ph1">&amp;lt;</ph>audio</target>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>src?</source>
          <target state="new">src?</target>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>this element schema article<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br230842)</ept> for details on this optional attribute.</source>
          <target state="new">See <bpt id="p1">[</bpt>this element schema article<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br230842)</ept> for details on this optional attribute.</target>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>loop?</source>
          <target state="new">loop?</target>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>this element schema article<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br230842)</ept> for details on this optional attribute.</source>
          <target state="new">See <bpt id="p1">[</bpt>this element schema article<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br230842)</ept> for details on this optional attribute.</target>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>silent?</source>
          <target state="new">silent?</target>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>this element schema article<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br230842)</ept> for details on this optional attribute.</source>
          <target state="new">See <bpt id="p1">[</bpt>this element schema article<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br230842)</ept> for details on this optional attribute.</target>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Schemas: <ph id="ph1">&amp;lt;</ph>action</source>
          <target state="new">Schemas: <ph id="ph1">&amp;lt;</ph>action</target>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>In the following schemas, a "?" suffix means that an attribute is optional.</source>
          <target state="new">In the following schemas, a "?" suffix means that an attribute is optional.</target>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Attributes in <ph id="ph1">&amp;lt;</ph>input</source>
          <target state="new">Attributes in <ph id="ph1">&amp;lt;</ph>input</target>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>id</source>
          <target state="new">id</target>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>id = string</source>
          <target state="new">id = string</target>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>This attribute is required.</source>
          <target state="new">This attribute is required.</target>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>The id attribute is required and is used by developers to retrieve user inputs once the app is activated (in the foreground or background).</source>
          <target state="new">The id attribute is required and is used by developers to retrieve user inputs once the app is activated (in the foreground or background).</target>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>type</source>
          <target state="new">type</target>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>type = "text | selection"</source>
          <target state="new">type = "text | selection"</target>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>This attribute is required.</source>
          <target state="new">This attribute is required.</target>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>It is used to specify a text input or input from a list of pre-defined selections.</source>
          <target state="new">It is used to specify a text input or input from a list of pre-defined selections.</target>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>On mobile and desktop, this is to specify whether you want a textbox input or a listbox input.</source>
          <target state="new">On mobile and desktop, this is to specify whether you want a textbox input or a listbox input.</target>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>title?</source>
          <target state="new">title?</target>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>title?</source>
          <target state="new">title?</target>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>= string</source>
          <target state="new">= string</target>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>The title attribute is optional and is for developers to specify a title for the input for shells to render when there is affordance.</source>
          <target state="new">The title attribute is optional and is for developers to specify a title for the input for shells to render when there is affordance.</target>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>For mobile and desktop, this title will be displayed above the input.</source>
          <target state="new">For mobile and desktop, this title will be displayed above the input.</target>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>placeHolderContent?</source>
          <target state="new">placeHolderContent?</target>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>placeHolderContent?</source>
          <target state="new">placeHolderContent?</target>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>= string</source>
          <target state="new">= string</target>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>The placeHolderContent attribute is optional and is the grey-out hint text for text input type.</source>
          <target state="new">The placeHolderContent attribute is optional and is the grey-out hint text for text input type.</target>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>This attribute is ignored when the input type is not "text".</source>
          <target state="new">This attribute is ignored when the input type is not "text".</target>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>defaultInput?</source>
          <target state="new">defaultInput?</target>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>defaultInput?</source>
          <target state="new">defaultInput?</target>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>= string</source>
          <target state="new">= string</target>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>The defaultInput attribute is optional and is used to provide a default input value.</source>
          <target state="new">The defaultInput attribute is optional and is used to provide a default input value.</target>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>If the input type is "text", this will be treated as a string input.</source>
          <target state="new">If the input type is "text", this will be treated as a string input.</target>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>If the input type is "selection", this is expected to be the id of one of the available selections inside this input's elements.</source>
          <target state="new">If the input type is "selection", this is expected to be the id of one of the available selections inside this input's elements.</target>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>Attributes in <ph id="ph1">&amp;lt;</ph>selection</source>
          <target state="new">Attributes in <ph id="ph1">&amp;lt;</ph>selection</target>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>id</source>
          <target state="new">id</target>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>This attribute is required.</source>
          <target state="new">This attribute is required.</target>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>It's used to identify user selections.</source>
          <target state="new">It's used to identify user selections.</target>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>The id is returned to your app.</source>
          <target state="new">The id is returned to your app.</target>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>content</source>
          <target state="new">content</target>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>This attribute is required.</source>
          <target state="new">This attribute is required.</target>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>It provides the string to display for this selection element.</source>
          <target state="new">It provides the string to display for this selection element.</target>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Attributes in <ph id="ph1">&amp;lt;</ph>action</source>
          <target state="new">Attributes in <ph id="ph1">&amp;lt;</ph>action</target>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>content</source>
          <target state="new">content</target>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>content = string</source>
          <target state="new">content = string</target>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>The content attribute is required.</source>
          <target state="new">The content attribute is required.</target>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>It provides the text string displayed on the button.</source>
          <target state="new">It provides the text string displayed on the button.</target>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>arguments</source>
          <target state="new">arguments</target>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>arguments = string</source>
          <target state="new">arguments = string</target>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>The arguments attribute it required.</source>
          <target state="new">The arguments attribute it required.</target>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>It describes the app-defined data that the app can later retrieve once it is activated from user taking this action.</source>
          <target state="new">It describes the app-defined data that the app can later retrieve once it is activated from user taking this action.</target>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>activationType?</source>
          <target state="new">activationType?</target>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>activationType?</source>
          <target state="new">activationType?</target>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>= "foreground | background | protocol | system"</source>
          <target state="new">= "foreground | background | protocol | system"</target>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>The activationType attribute is optional and its default value is "foreground".</source>
          <target state="new">The activationType attribute is optional and its default value is "foreground".</target>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>It describes the kind of activation this action will cause: foreground, background, or launching another app via protocol launch, or invoking a system action.</source>
          <target state="new">It describes the kind of activation this action will cause: foreground, background, or launching another app via protocol launch, or invoking a system action.</target>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>imageUri?</source>
          <target state="new">imageUri?</target>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>imageUri?</source>
          <target state="new">imageUri?</target>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>= string</source>
          <target state="new">= string</target>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>imageUri is optional and is used to provide an image icon for this action to display inside the button alone with the text content.</source>
          <target state="new">imageUri is optional and is used to provide an image icon for this action to display inside the button alone with the text content.</target>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>hint-inputId</source>
          <target state="new">hint-inputId</target>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>hint-inputId = string</source>
          <target state="new">hint-inputId = string</target>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>The hint-inpudId attribute is required.</source>
          <target state="new">The hint-inpudId attribute is required.</target>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>It's specifically used for the quick reply scenario.</source>
          <target state="new">It's specifically used for the quick reply scenario.</target>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>The value needs to be the id of the input element desired to be associated with.</source>
          <target state="new">The value needs to be the id of the input element desired to be associated with.</target>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>In mobile and desktop, this will put the button right next to the input box.</source>
          <target state="new">In mobile and desktop, this will put the button right next to the input box.</target>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>Attributes for system-handled actions</source>
          <target state="new">Attributes for system-handled actions</target>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>The system can handle actions for snoozing and dismissing notifications if you don't want your app to handle the snoozing/rescheduling of notifications as a background task.</source>
          <target state="new">The system can handle actions for snoozing and dismissing notifications if you don't want your app to handle the snoozing/rescheduling of notifications as a background task.</target>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>System-handled actions can be combined (or individually specified), but we don't recommend implementing a snooze action without a dismiss action.</source>
          <target state="new">System-handled actions can be combined (or individually specified), but we don't recommend implementing a snooze action without a dismiss action.</target>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>System commands combo: SnoozeAndDismiss</source>
          <target state="new">System commands combo: SnoozeAndDismiss</target>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>Individual system-handled actions</source>
          <target state="new">Individual system-handled actions</target>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>To construct individual snooze and dismiss actions, do the following:</source>
          <target state="new">To construct individual snooze and dismiss actions, do the following:</target>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>Specify activationType = "system"</source>
          <target state="new">Specify activationType = "system"</target>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>Specify arguments = "snooze" | "dismiss"</source>
          <target state="new">Specify arguments = "snooze" | "dismiss"</target>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>Specify content:</source>
          <target state="new">Specify content:</target>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>If you want localized strings of "snooze" and "dismiss" to be displayed on the actions, specify content to be an empty string: <ph id="ph1">&amp;lt;</ph>action content = ""/</source>
          <target state="new">If you want localized strings of "snooze" and "dismiss" to be displayed on the actions, specify content to be an empty string: <ph id="ph1">&amp;lt;</ph>action content = ""/</target>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>If you want a customized string, just provide its value: <ph id="ph1">&amp;lt;</ph>action content="Remind me later" /</source>
          <target state="new">If you want a customized string, just provide its value: <ph id="ph1">&amp;lt;</ph>action content="Remind me later" /</target>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>Specify input:</source>
          <target state="new">Specify input:</target>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>If you don't want the user to select a snooze interval and instead just want your notification to snooze only once for a system-defined time interval (that is consistent across the OS), then don't construct any <ph id="ph1">&amp;lt;</ph>input<ph id="ph2">&amp;gt;</ph> at all.</source>
          <target state="new">If you don't want the user to select a snooze interval and instead just want your notification to snooze only once for a system-defined time interval (that is consistent across the OS), then don't construct any <ph id="ph1">&amp;lt;</ph>input<ph id="ph2">&amp;gt;</ph> at all.</target>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>If you want to provide snooze interval selections:</source>
          <target state="new">If you want to provide snooze interval selections:</target>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>Specify hint-inputId in the snooze action</source>
          <target state="new">Specify hint-inputId in the snooze action</target>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>Match the id of the input with the hint-inputId of the snooze action: <ph id="ph1">&amp;lt;</ph>input id="snoozeTime"<ph id="ph2">&amp;gt;&amp;lt;</ph>/input<ph id="ph3">&amp;gt;&amp;lt;</ph>action hint-inputId="snoozeTime"/</source>
          <target state="new">Match the id of the input with the hint-inputId of the snooze action: <ph id="ph1">&amp;lt;</ph>input id="snoozeTime"<ph id="ph2">&amp;gt;&amp;lt;</ph>/input<ph id="ph3">&amp;gt;&amp;lt;</ph>action hint-inputId="snoozeTime"/</target>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>Specify selection id to be a nonNegativeInteger which represents snooze interval in minutes: <ph id="ph1">&amp;lt;</ph>selection id="240" /<ph id="ph2">&amp;gt;</ph> means snoozing for 4 hours</source>
          <target state="new">Specify selection id to be a nonNegativeInteger which represents snooze interval in minutes: <ph id="ph1">&amp;lt;</ph>selection id="240" /<ph id="ph2">&amp;gt;</ph> means snoozing for 4 hours</target>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>Make sure that the value of defaultInput in <ph id="ph1">&amp;lt;</ph>input<ph id="ph2">&amp;gt;</ph> matches with one of the ids of the <ph id="ph3">&amp;lt;</ph>selection<ph id="ph4">&amp;gt;</ph> children elements</source>
          <target state="new">Make sure that the value of defaultInput in <ph id="ph1">&amp;lt;</ph>input<ph id="ph2">&amp;gt;</ph> matches with one of the ids of the <ph id="ph3">&amp;lt;</ph>selection<ph id="ph4">&amp;gt;</ph> children elements</target>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>Provide up to (but no more than) 5 <ph id="ph1">&amp;lt;</ph>selection<ph id="ph2">&amp;gt;</ph> values</source>
          <target state="new">Provide up to (but no more than) 5 <ph id="ph1">&amp;lt;</ph>selection<ph id="ph2">&amp;gt;</ph> values</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>