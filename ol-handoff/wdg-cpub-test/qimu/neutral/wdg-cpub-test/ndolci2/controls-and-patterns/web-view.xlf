<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci2\controls-and-patterns\web-view.md</xliffext:olfilepath>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">14538159188b38a173ef58a3aa954f8328c07e70</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-e58fd48" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>A web view control embeds a view into your app that renders web content using the Microsoft Edge rendering engine.</source>
          <target state="new">A web view control embeds a view into your app that renders web content using the Microsoft Edge rendering engine.</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Hyperlinks can also appear and function in a web view control.</source>
          <target state="new">Hyperlinks can also appear and function in a web view control.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Web view</source>
          <target state="new">Web view</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Web view</source>
          <target state="new">Web view</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Updated for UWP apps on Windows 10.</source>
          <target state="new">Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept></source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept></target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>A web view control embeds a view into your app that renders web content using the Microsoft Edge rendering engine.</source>
          <target state="new">A web view control embeds a view into your app that renders web content using the Microsoft Edge rendering engine.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Hyperlinks can also appear and function in a web view control.</source>
          <target state="new">Hyperlinks can also appear and function in a web view control.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Important APIs</source>
          <target state="new">Important APIs</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>WebView class</source>
          <target state="new">WebView class</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Is this the right control?</source>
          <target state="new">Is this the right control?</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Use a web view control to display richly formatted HTML content from a remote web server, dynamically generated code, or content files in your app package.</source>
          <target state="new">Use a web view control to display richly formatted HTML content from a remote web server, dynamically generated code, or content files in your app package.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Rich content can also contain script code and communicate between the script and your app's code.</source>
          <target state="new">Rich content can also contain script code and communicate between the script and your app's code.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Create a web view</source>
          <target state="new">Create a web view</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Modify the appearance of a web view</source>
          <target state="new">Modify the appearance of a web view</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>WebView<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.aspx)</ept> is not a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Control<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.control.aspx)</ept> subclass, so it doesn't have a control template.</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>WebView<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.aspx)</ept> is not a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Control<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.control.aspx)</ept> subclass, so it doesn't have a control template.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>However, you can set various properties to control some visual aspects of the web view.</source>
          <target state="new">However, you can set various properties to control some visual aspects of the web view.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To constrain the display area, set the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Width<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.frameworkelement.width.aspx)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Height<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.frameworkelement.height.aspx)</ept> properties.</source>
          <target state="new">To constrain the display area, set the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Width<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.frameworkelement.width.aspx)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Height<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.frameworkelement.height.aspx)</ept> properties.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>To translate, scale, skew, and rotate a web view, use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>RenderTransform<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.uielement.rendertransform.aspx)</ept> property.</source>
          <target state="new">To translate, scale, skew, and rotate a web view, use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>RenderTransform<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.uielement.rendertransform.aspx)</ept> property.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>To control the opacity of the web view, set the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Opacity<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.uielement.opacity.aspx)</ept> property.</source>
          <target state="new">To control the opacity of the web view, set the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Opacity<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.uielement.opacity.aspx)</ept> property.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>To specify a color to use as the web page background when the HTML content does not specify a color, set the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DefaultBackgroundColor<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.defaultbackgroundcolor.aspx)</ept> property.</source>
          <target state="new">To specify a color to use as the web page background when the HTML content does not specify a color, set the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DefaultBackgroundColor<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.defaultbackgroundcolor.aspx)</ept> property.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Get the web page title</source>
          <target state="new">Get the web page title</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You can get the title of the HTML document currently displayed in the web view by using the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DocumentTitle<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.documenttitle.aspx)</ept> property.</source>
          <target state="new">You can get the title of the HTML document currently displayed in the web view by using the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DocumentTitle<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.documenttitle.aspx)</ept> property.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Input events and tab order</source>
          <target state="new">Input events and tab order</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Although WebView is not a Control subclass, it will receive keyboard input focus and participate in the tab sequence.</source>
          <target state="new">Although WebView is not a Control subclass, it will receive keyboard input focus and participate in the tab sequence.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>It provides a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Focus<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.focus.aspx)</ept> method, and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>GotFocus<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.uielement.gotfocus.aspx)</ept> and <bpt id="p5">[</bpt><bpt id="p6">**</bpt>LostFocus<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.uielement.lostfocus.aspx)</ept> events, but it has no tab-related properties.</source>
          <target state="new">It provides a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Focus<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.focus.aspx)</ept> method, and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>GotFocus<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.uielement.gotfocus.aspx)</ept> and <bpt id="p5">[</bpt><bpt id="p6">**</bpt>LostFocus<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.uielement.lostfocus.aspx)</ept> events, but it has no tab-related properties.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Its position in the tab sequence is the same as its position in the XAML document order.</source>
          <target state="new">Its position in the tab sequence is the same as its position in the XAML document order.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The tab sequence includes all elements in the web view content that can receive input focus.</source>
          <target state="new">The tab sequence includes all elements in the web view content that can receive input focus.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>As indicated in the Events table on the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>WebView<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.aspx)</ept> class page, web view doesn’t support most of the user input events inherited from <bpt id="p3">[</bpt><bpt id="p4">**</bpt>UIElement<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.uielement.aspx)</ept>, such as <bpt id="p5">[</bpt><bpt id="p6">**</bpt>KeyDown<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.uielement.keydown.aspx)</ept>, <bpt id="p7">[</bpt><bpt id="p8">**</bpt>KeyUp<ept id="p8">**</ept><ept id="p7">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.uielement.keyup.aspx)</ept>, and <bpt id="p9">[</bpt><bpt id="p10">**</bpt>PointerPressed<ept id="p10">**</ept><ept id="p9">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.uielement.pointerpressed.aspx)</ept>.</source>
          <target state="new">As indicated in the Events table on the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>WebView<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.aspx)</ept> class page, web view doesn’t support most of the user input events inherited from <bpt id="p3">[</bpt><bpt id="p4">**</bpt>UIElement<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.uielement.aspx)</ept>, such as <bpt id="p5">[</bpt><bpt id="p6">**</bpt>KeyDown<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.uielement.keydown.aspx)</ept>, <bpt id="p7">[</bpt><bpt id="p8">**</bpt>KeyUp<ept id="p8">**</ept><ept id="p7">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.uielement.keyup.aspx)</ept>, and <bpt id="p9">[</bpt><bpt id="p10">**</bpt>PointerPressed<ept id="p10">**</ept><ept id="p9">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.uielement.pointerpressed.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Instead, you can use <bpt id="p1">[</bpt><bpt id="p2">**</bpt>InvokeScriptAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.invokescriptasync.aspx)</ept> with the JavaScript <bpt id="p3">**</bpt>eval<ept id="p3">**</ept> function to use the HTML event handlers, and to use <bpt id="p4">**</bpt>window.external.notify<ept id="p4">**</ept> from the HTML event handler to notify the application using <bpt id="p5">[</bpt><bpt id="p6">**</bpt>WebView.ScriptNotify<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.scriptnotify.aspx)</ept>.</source>
          <target state="new">Instead, you can use <bpt id="p1">[</bpt><bpt id="p2">**</bpt>InvokeScriptAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.invokescriptasync.aspx)</ept> with the JavaScript <bpt id="p3">**</bpt>eval<ept id="p3">**</ept> function to use the HTML event handlers, and to use <bpt id="p4">**</bpt>window.external.notify<ept id="p4">**</ept> from the HTML event handler to notify the application using <bpt id="p5">[</bpt><bpt id="p6">**</bpt>WebView.ScriptNotify<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.scriptnotify.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Navigating to content</source>
          <target state="new">Navigating to content</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Web view provides several APIs for basic navigation: <bpt id="p1">[</bpt><bpt id="p2">**</bpt>GoBack<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.goback.aspx)</ept>, <bpt id="p3">[</bpt><bpt id="p4">**</bpt>GoForward<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.goforward.aspx)</ept>, <bpt id="p5">[</bpt><bpt id="p6">**</bpt>Stop<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.stop.aspx)</ept>, <bpt id="p7">[</bpt><bpt id="p8">**</bpt>Refresh<ept id="p8">**</ept><ept id="p7">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.refresh.aspx)</ept>, <bpt id="p9">[</bpt><bpt id="p10">**</bpt>CanGoBack<ept id="p10">**</ept><ept id="p9">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.cangoback.aspx)</ept>, and <bpt id="p11">[</bpt><bpt id="p12">**</bpt>CanGoForward<ept id="p12">**</ept><ept id="p11">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.cangoforward.aspx)</ept>.</source>
          <target state="new">Web view provides several APIs for basic navigation: <bpt id="p1">[</bpt><bpt id="p2">**</bpt>GoBack<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.goback.aspx)</ept>, <bpt id="p3">[</bpt><bpt id="p4">**</bpt>GoForward<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.goforward.aspx)</ept>, <bpt id="p5">[</bpt><bpt id="p6">**</bpt>Stop<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.stop.aspx)</ept>, <bpt id="p7">[</bpt><bpt id="p8">**</bpt>Refresh<ept id="p8">**</ept><ept id="p7">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.refresh.aspx)</ept>, <bpt id="p9">[</bpt><bpt id="p10">**</bpt>CanGoBack<ept id="p10">**</ept><ept id="p9">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.cangoback.aspx)</ept>, and <bpt id="p11">[</bpt><bpt id="p12">**</bpt>CanGoForward<ept id="p12">**</ept><ept id="p11">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.cangoforward.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>You can use these to add typical web browsing capabilities to your app.</source>
          <target state="new">You can use these to add typical web browsing capabilities to your app.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>To set the initial content of the web view, set the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Source<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.source.aspx)</ept> property in XAML.</source>
          <target state="new">To set the initial content of the web view, set the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Source<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.source.aspx)</ept> property in XAML.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The XAML parser automatically converts the string to a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Uri<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.foundation.uri.aspx)</ept>.</source>
          <target state="new">The XAML parser automatically converts the string to a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Uri<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.foundation.uri.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The Source property can be set in code, but rather than doing so, you typically use one of the <bpt id="p1">**</bpt>Navigate<ept id="p1">**</ept> methods to load content in code.</source>
          <target state="new">The Source property can be set in code, but rather than doing so, you typically use one of the <bpt id="p1">**</bpt>Navigate<ept id="p1">**</ept> methods to load content in code.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>To load web content, use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Navigate<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.navigate.aspx)</ept> method with a <bpt id="p3">**</bpt>Uri<ept id="p3">**</ept> that uses the http or https scheme.</source>
          <target state="new">To load web content, use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Navigate<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.navigate.aspx)</ept> method with a <bpt id="p3">**</bpt>Uri<ept id="p3">**</ept> that uses the http or https scheme.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>To navigate to a URI with a POST request and HTTP headers, use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>NavigateWithHttpRequestMessage<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.navigatewithhttprequestmessage.aspx)</ept> method.</source>
          <target state="new">To navigate to a URI with a POST request and HTTP headers, use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>NavigateWithHttpRequestMessage<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.navigatewithhttprequestmessage.aspx)</ept> method.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>This method supports only <bpt id="p1">[</bpt><bpt id="p2">**</bpt>HttpMethod.Post<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.web.http.httpmethod.post.aspx)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>HttpMethod.Get<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.web.http.httpmethod.get.aspx)</ept> for the <bpt id="p5">[</bpt><bpt id="p6">**</bpt>HttpRequestMessage.Method<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.web.http.httprequestmessage.method.aspx)</ept> property value.</source>
          <target state="new">This method supports only <bpt id="p1">[</bpt><bpt id="p2">**</bpt>HttpMethod.Post<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.web.http.httpmethod.post.aspx)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>HttpMethod.Get<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.web.http.httpmethod.get.aspx)</ept> for the <bpt id="p5">[</bpt><bpt id="p6">**</bpt>HttpRequestMessage.Method<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.web.http.httprequestmessage.method.aspx)</ept> property value.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>To load uncompressed and unencrypted content from your app’s <bpt id="p1">[</bpt><bpt id="p2">**</bpt>LocalFolder<ept id="p2">**</ept><ept id="p1">]()</ept> or <bpt id="p3">[</bpt><bpt id="p4">**</bpt>TemporaryFolder<ept id="p4">**</ept><ept id="p3">]()</ept> data stores, use the <bpt id="p5">**</bpt>Navigate<ept id="p5">**</ept> method with a <bpt id="p6">**</bpt>Uri<ept id="p6">**</ept> that uses the <bpt id="p7">[</bpt>ms-appdata scheme<ept id="p7">]()</ept>.</source>
          <target state="new">To load uncompressed and unencrypted content from your app’s <bpt id="p1">[</bpt><bpt id="p2">**</bpt>LocalFolder<ept id="p2">**</ept><ept id="p1">]()</ept> or <bpt id="p3">[</bpt><bpt id="p4">**</bpt>TemporaryFolder<ept id="p4">**</ept><ept id="p3">]()</ept> data stores, use the <bpt id="p5">**</bpt>Navigate<ept id="p5">**</ept> method with a <bpt id="p6">**</bpt>Uri<ept id="p6">**</ept> that uses the <bpt id="p7">[</bpt>ms-appdata scheme<ept id="p7">]()</ept>.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The web view support for this scheme requires you to place your content in a subfolder under the local or temporary folder.</source>
          <target state="new">The web view support for this scheme requires you to place your content in a subfolder under the local or temporary folder.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>This enables navigation to URIs such as ms-appdata:///local/<bpt id="p1">*</bpt>folder<ept id="p1">*</ept><ph id="ph1">/</ph><bpt id="p2">*</bpt>file<ept id="p2">*</ept>.html and ms-appdata:///temp/<bpt id="p3">*</bpt>folder<ept id="p3">*</ept><ph id="ph2">/</ph><bpt id="p4">*</bpt>file<ept id="p4">*</ept>.html .</source>
          <target state="new">This enables navigation to URIs such as ms-appdata:///local/<bpt id="p1">*</bpt>folder<ept id="p1">*</ept><ph id="ph1">/</ph><bpt id="p2">*</bpt>file<ept id="p2">*</ept>.html and ms-appdata:///temp/<bpt id="p3">*</bpt>folder<ept id="p3">*</ept><ph id="ph2">/</ph><bpt id="p4">*</bpt>file<ept id="p4">*</ept>.html .</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>(To load compressed or encrypted files, see <bpt id="p1">[</bpt><bpt id="p2">**</bpt>NavigateToLocalStreamUri<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.navigatetolocalstreamuri.aspx)</ept>.)</source>
          <target state="new">(To load compressed or encrypted files, see <bpt id="p1">[</bpt><bpt id="p2">**</bpt>NavigateToLocalStreamUri<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.navigatetolocalstreamuri.aspx)</ept>.)</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Each of these first-level subfolders is isolated from the content in other first-level subfolders.</source>
          <target state="new">Each of these first-level subfolders is isolated from the content in other first-level subfolders.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>For example, you can navigate to ms-appdata:///temp/folder1/file.html, but you can’t have a link in this file to ms-appdata:///temp/folder2/file.html.</source>
          <target state="new">For example, you can navigate to ms-appdata:///temp/folder1/file.html, but you can’t have a link in this file to ms-appdata:///temp/folder2/file.html.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>However, you can still link to HTML content in the app package using the <bpt id="p1">**</bpt>ms-appx-web scheme<ept id="p1">**</ept>, and to web content using the <bpt id="p2">**</bpt>http<ept id="p2">**</ept> and <bpt id="p3">**</bpt>https<ept id="p3">**</ept> URI schemes.</source>
          <target state="new">However, you can still link to HTML content in the app package using the <bpt id="p1">**</bpt>ms-appx-web scheme<ept id="p1">**</ept>, and to web content using the <bpt id="p2">**</bpt>http<ept id="p2">**</ept> and <bpt id="p3">**</bpt>https<ept id="p3">**</ept> URI schemes.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>To load content from the your app package, use the <bpt id="p1">**</bpt>Navigate<ept id="p1">**</ept> method with a <bpt id="p2">**</bpt>Uri<ept id="p2">**</ept> that uses the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>ms-appx-web scheme<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/jj655406.aspx#ms_appx_web)</ept>.</source>
          <target state="new">To load content from the your app package, use the <bpt id="p1">**</bpt>Navigate<ept id="p1">**</ept> method with a <bpt id="p2">**</bpt>Uri<ept id="p2">**</ept> that uses the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>ms-appx-web scheme<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/jj655406.aspx#ms_appx_web)</ept>.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>You can load local content through a custom resolver using the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>NavigateToLocalStreamUri<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.navigatetolocalstreamuri.aspx)</ept> method.</source>
          <target state="new">You can load local content through a custom resolver using the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>NavigateToLocalStreamUri<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.navigatetolocalstreamuri.aspx)</ept> method.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>This enables advanced scenarios such as downloading and caching web-based content for offline use, or extracting content from a compressed file.</source>
          <target state="new">This enables advanced scenarios such as downloading and caching web-based content for offline use, or extracting content from a compressed file.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Responding to navigation events</source>
          <target state="new">Responding to navigation events</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The web view control provides several events that you can use to respond to navigation and content loading states.</source>
          <target state="new">The web view control provides several events that you can use to respond to navigation and content loading states.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The events occur in the following order for the root web view content: <bpt id="p1">[</bpt><bpt id="p2">**</bpt>NavigationStarting<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.navigationstarting.aspx)</ept>, <bpt id="p3">[</bpt><bpt id="p4">**</bpt>ContentLoading<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.contentloading.aspx)</ept>, <bpt id="p5">[</bpt><bpt id="p6">**</bpt>DOMContentLoaded<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.domcontentloaded.aspx)</ept>, <bpt id="p7">[</bpt><bpt id="p8">**</bpt>NavigationCompleted<ept id="p8">**</ept><ept id="p7">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.navigationcompleted.aspx)</ept></source>
          <target state="new">The events occur in the following order for the root web view content: <bpt id="p1">[</bpt><bpt id="p2">**</bpt>NavigationStarting<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.navigationstarting.aspx)</ept>, <bpt id="p3">[</bpt><bpt id="p4">**</bpt>ContentLoading<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.contentloading.aspx)</ept>, <bpt id="p5">[</bpt><bpt id="p6">**</bpt>DOMContentLoaded<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.domcontentloaded.aspx)</ept>, <bpt id="p7">[</bpt><bpt id="p8">**</bpt>NavigationCompleted<ept id="p8">**</ept><ept id="p7">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.navigationcompleted.aspx)</ept></target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>NavigationStarting<ept id="p1">**</ept> - Occurs before the web view navigates to new content.</source>
          <target state="new"><bpt id="p1">**</bpt>NavigationStarting<ept id="p1">**</ept> - Occurs before the web view navigates to new content.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>You can cancel navigation in a handler for this event by setting the WebViewNavigationStartingEventArgs.Cancel property to true.</source>
          <target state="new">You can cancel navigation in a handler for this event by setting the WebViewNavigationStartingEventArgs.Cancel property to true.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>ContentLoading<ept id="p1">**</ept> - Occurs when the web view has started loading new content.</source>
          <target state="new"><bpt id="p1">**</bpt>ContentLoading<ept id="p1">**</ept> - Occurs when the web view has started loading new content.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>DOMContentLoaded<ept id="p1">**</ept> - Occurs when the web view has finished parsing the current HTML content.</source>
          <target state="new"><bpt id="p1">**</bpt>DOMContentLoaded<ept id="p1">**</ept> - Occurs when the web view has finished parsing the current HTML content.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>NavigationCompleted<ept id="p1">**</ept> - Occurs when the web view has finished loading the current content or if navigation has failed.</source>
          <target state="new"><bpt id="p1">**</bpt>NavigationCompleted<ept id="p1">**</ept> - Occurs when the web view has finished loading the current content or if navigation has failed.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>To determine whether navigation has failed, check the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IsSuccess<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webviewnavigationcompletedeventargs.issuccess.aspx)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>WebErrorStatus<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webviewnavigationcompletedeventargs.weberrorstatus.aspx)</ept> properties of the <bpt id="p5">[</bpt><bpt id="p6">**</bpt>WebViewNavigationCompletedEventArgs<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webviewnavigationcompletedeventargs.aspx)</ept> class.</source>
          <target state="new">To determine whether navigation has failed, check the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IsSuccess<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webviewnavigationcompletedeventargs.issuccess.aspx)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>WebErrorStatus<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webviewnavigationcompletedeventargs.weberrorstatus.aspx)</ept> properties of the <bpt id="p5">[</bpt><bpt id="p6">**</bpt>WebViewNavigationCompletedEventArgs<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webviewnavigationcompletedeventargs.aspx)</ept> class.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Similar events occur in the same order for each <bpt id="p1">**</bpt>iframe<ept id="p1">**</ept> in the web view content:</source>
          <target state="new">Similar events occur in the same order for each <bpt id="p1">**</bpt>iframe<ept id="p1">**</ept> in the web view content:</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>FrameNavigationStarting<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.framenavigationstarting.aspx)</ept> - Occurs before a frame in the web view navigates to new content.</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>FrameNavigationStarting<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.framenavigationstarting.aspx)</ept> - Occurs before a frame in the web view navigates to new content.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>FrameContentLoading<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.framecontentloading.aspx)</ept> - Occurs when a frame in the web view has started loading new content.</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>FrameContentLoading<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.framecontentloading.aspx)</ept> - Occurs when a frame in the web view has started loading new content.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>FrameDOMContentLoaded<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.framedomcontentloaded.aspx)</ept> - Occurs when a frame in the web view has finished parsing its current HTML content.</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>FrameDOMContentLoaded<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.framedomcontentloaded.aspx)</ept> - Occurs when a frame in the web view has finished parsing its current HTML content.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>FrameNavigationCompleted<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.framenavigationcompleted.aspx)</ept> - Occurs when a frame in the web view has finished loading its content.</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>FrameNavigationCompleted<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.framenavigationcompleted.aspx)</ept> - Occurs when a frame in the web view has finished loading its content.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Responding to potential problems</source>
          <target state="new">Responding to potential problems</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>You can respond to potential problems with the content such as long running scripts, content that web view can't load, and warnings of unsafe content.</source>
          <target state="new">You can respond to potential problems with the content such as long running scripts, content that web view can't load, and warnings of unsafe content.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Your app might appear unresponsive while scripts are running.</source>
          <target state="new">Your app might appear unresponsive while scripts are running.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>LongRunningScriptDetected<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.longrunningscriptdetected.aspx)</ept> event occurs periodically while the web view executes JavaScript and provides an opportunity to interrupt the script.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>LongRunningScriptDetected<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.longrunningscriptdetected.aspx)</ept> event occurs periodically while the web view executes JavaScript and provides an opportunity to interrupt the script.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>To determine how long the script has been running, check the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ExecutionTime<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webviewlongrunningscriptdetectedeventargs.executiontime.aspx)</ept> property of the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>WebViewLongRunningScriptDetectedEventArgs<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webviewlongrunningscriptdetectedeventargs.aspx)</ept>.</source>
          <target state="new">To determine how long the script has been running, check the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ExecutionTime<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webviewlongrunningscriptdetectedeventargs.executiontime.aspx)</ept> property of the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>WebViewLongRunningScriptDetectedEventArgs<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webviewlongrunningscriptdetectedeventargs.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>To halt the script, set the event args <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StopPageScriptExecution<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webviewlongrunningscriptdetectedeventargs.stoppagescriptexecution.aspx)</ept> property to <bpt id="p3">**</bpt>true<ept id="p3">**</ept>.</source>
          <target state="new">To halt the script, set the event args <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StopPageScriptExecution<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webviewlongrunningscriptdetectedeventargs.stoppagescriptexecution.aspx)</ept> property to <bpt id="p3">**</bpt>true<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The halted script will not execute again unless it is reloaded during a subsequent web view navigation.</source>
          <target state="new">The halted script will not execute again unless it is reloaded during a subsequent web view navigation.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The web view control cannot host arbitrary file types.</source>
          <target state="new">The web view control cannot host arbitrary file types.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>When an attempt is made to load content that the web view can't host, the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>UnviewableContentIdentified<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.unviewablecontentidentified.aspx)</ept> event occurs.</source>
          <target state="new">When an attempt is made to load content that the web view can't host, the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>UnviewableContentIdentified<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.unviewablecontentidentified.aspx)</ept> event occurs.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>You can handle this event and notify the user, or use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Launcher<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.system.launcher.aspx)</ept> class to redirect the file to an external browser or another app.</source>
          <target state="new">You can handle this event and notify the user, or use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Launcher<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.system.launcher.aspx)</ept> class to redirect the file to an external browser or another app.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Similarly, the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>UnsupportedUriSchemeIdentified<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.unsupportedurischemeidentified.aspx)</ept> event occurs when a URI scheme that's not supported is invoked in the web content, such as fbconnect:// or mailto://.</source>
          <target state="new">Similarly, the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>UnsupportedUriSchemeIdentified<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.unsupportedurischemeidentified.aspx)</ept> event occurs when a URI scheme that's not supported is invoked in the web content, such as fbconnect:// or mailto://.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>You can handle this event to provide custom behavior instead of allowing the default system launcher to launch the URI.</source>
          <target state="new">You can handle this event to provide custom behavior instead of allowing the default system launcher to launch the URI.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>UnsafeContentWarningDisplayingevent<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.unsafecontentwarningdisplaying.aspx)</ept> occurs when the web view shows a warning page for content that was reported as unsafe by the SmartScreen Filter.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>UnsafeContentWarningDisplayingevent<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.unsafecontentwarningdisplaying.aspx)</ept> occurs when the web view shows a warning page for content that was reported as unsafe by the SmartScreen Filter.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>If the user chooses to continue the navigation, subsequent navigation to the page will not display the warning nor fire the event.</source>
          <target state="new">If the user chooses to continue the navigation, subsequent navigation to the page will not display the warning nor fire the event.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Handling special cases for web view content</source>
          <target state="new">Handling special cases for web view content</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ContainsFullScreenElement<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.containsfullscreenelement.aspx)</ept> property and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>ContainsFullScreenElementChanged<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.containsfullscreenelementchanged.aspx)</ept> event to detect, respond to, and enable full-screen experiences in web content, such as full-screen video playback.</source>
          <target state="new">You can use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ContainsFullScreenElement<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.containsfullscreenelement.aspx)</ept> property and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>ContainsFullScreenElementChanged<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.containsfullscreenelementchanged.aspx)</ept> event to detect, respond to, and enable full-screen experiences in web content, such as full-screen video playback.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>For example, you may use the ContainsFullScreenElementChanged event to resize the web view to occupy the entirety of your app view, or, as the following example illustrates, put a windowed app in full screen mode when a full screen web experience is desired.</source>
          <target state="new">For example, you may use the ContainsFullScreenElementChanged event to resize the web view to occupy the entirety of your app view, or, as the following example illustrates, put a windowed app in full screen mode when a full screen web experience is desired.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>NewWindowRequested<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.newwindowrequested.aspx)</ept> event to handle cases where hosted web content requests a new window to be displayed, such as a popup window.</source>
          <target state="new">You can use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>NewWindowRequested<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.newwindowrequested.aspx)</ept> event to handle cases where hosted web content requests a new window to be displayed, such as a popup window.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>You can use another WebView control to display the contents of the requested window.</source>
          <target state="new">You can use another WebView control to display the contents of the requested window.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Use <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PermissionRequested<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.permissionrequested.aspx)</ept> event to enable web features that require special capabilities.</source>
          <target state="new">Use <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PermissionRequested<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.permissionrequested.aspx)</ept> event to enable web features that require special capabilities.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>These currently include geolocation, IndexedDB storage, and user audio and video (for example, from a microphone or webcam).</source>
          <target state="new">These currently include geolocation, IndexedDB storage, and user audio and video (for example, from a microphone or webcam).</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>If your app accesses user location or user media, you still are required to declare this capability in the app manifest.</source>
          <target state="new">If your app accesses user location or user media, you still are required to declare this capability in the app manifest.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>For example, an app that uses geolocation needs the following capability declarations at minimum in Package.appxmanifest:</source>
          <target state="new">For example, an app that uses geolocation needs the following capability declarations at minimum in Package.appxmanifest:</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>In addition to the app handling the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PermissionRequested<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.permissionrequested.aspx)</ept> event, the user will have to approve standard system dialogs for apps requesting location or media capabilities in order for these features to be enabled.</source>
          <target state="new">In addition to the app handling the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PermissionRequested<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.permissionrequested.aspx)</ept> event, the user will have to approve standard system dialogs for apps requesting location or media capabilities in order for these features to be enabled.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Here is an example of how an app would enable geolocation in a map from Bing:</source>
          <target state="new">Here is an example of how an app would enable geolocation in a map from Bing:</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>If your app requires user input or other asynchronous operations to respond to a permission request, use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Defer<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webviewpermissionrequest.defer.aspx)</ept> method of <bpt id="p3">[</bpt><bpt id="p4">**</bpt>WebViewPermissionRequest<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webviewpermissionrequest.aspx)</ept> to create a <bpt id="p5">[</bpt><bpt id="p6">**</bpt>WebViewDeferredPermissionRequest<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webviewdeferredpermissionrequest.aspx)</ept> that can be acted upon at a later time.</source>
          <target state="new">If your app requires user input or other asynchronous operations to respond to a permission request, use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Defer<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webviewpermissionrequest.defer.aspx)</ept> method of <bpt id="p3">[</bpt><bpt id="p4">**</bpt>WebViewPermissionRequest<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webviewpermissionrequest.aspx)</ept> to create a <bpt id="p5">[</bpt><bpt id="p6">**</bpt>WebViewDeferredPermissionRequest<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webviewdeferredpermissionrequest.aspx)</ept> that can be acted upon at a later time.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt><bpt id="p2">**</bpt>WebViewPermissionRequest.Defer<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webviewpermissionrequest.defer.aspx)</ept>.</source>
          <target state="new">See <bpt id="p1">[</bpt><bpt id="p2">**</bpt>WebViewPermissionRequest.Defer<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webviewpermissionrequest.defer.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>If users must securely log out of a website hosted in a web view, or in other cases when security is important, call the static method <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ClearTemporaryWebDataAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.cleartemporarywebdataasync.aspx)</ept> to clear out all locally cached content from a web view session.</source>
          <target state="new">If users must securely log out of a website hosted in a web view, or in other cases when security is important, call the static method <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ClearTemporaryWebDataAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.cleartemporarywebdataasync.aspx)</ept> to clear out all locally cached content from a web view session.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>This prevents malicious users from accessing sensitive data.</source>
          <target state="new">This prevents malicious users from accessing sensitive data.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Interacting with web view content</source>
          <target state="new">Interacting with web view content</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>You can interact with the content of the web view by using the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>InvokeScriptAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.invokescriptasync.aspx)</ept> method to invoke or inject script into the web view content, and the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>ScriptNotify<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.scriptnotify.aspx)</ept> event to get information back from the web view content.</source>
          <target state="new">You can interact with the content of the web view by using the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>InvokeScriptAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.invokescriptasync.aspx)</ept> method to invoke or inject script into the web view content, and the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>ScriptNotify<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.scriptnotify.aspx)</ept> event to get information back from the web view content.</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>To invoke JavaScript inside the web view content, use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>InvokeScriptAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.invokescriptasync.aspx)</ept> method.</source>
          <target state="new">To invoke JavaScript inside the web view content, use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>InvokeScriptAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.invokescriptasync.aspx)</ept> method.</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The invoked script can return only string values.</source>
          <target state="new">The invoked script can return only string values.</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>For example, if the content of a web view named <ph id="ph1">`webView1`</ph> contains a function named <ph id="ph2">`setDate`</ph> that takes 3 parameters, you can invoke it like this.</source>
          <target state="new">For example, if the content of a web view named <ph id="ph1">`webView1`</ph> contains a function named <ph id="ph2">`setDate`</ph> that takes 3 parameters, you can invoke it like this.</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>You can use <bpt id="p1">**</bpt>InvokeScriptAsync<ept id="p1">**</ept> with the JavaScript <bpt id="p2">**</bpt>eval<ept id="p2">**</ept> function to inject content into the web page.</source>
          <target state="new">You can use <bpt id="p1">**</bpt>InvokeScriptAsync<ept id="p1">**</ept> with the JavaScript <bpt id="p2">**</bpt>eval<ept id="p2">**</ept> function to inject content into the web page.</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Here, the text of a XAML text box (<ph id="ph1">`nameTextBox.Text`</ph>) is written to a div in an HTML page hosted in <ph id="ph2">`webView1`</ph>.</source>
          <target state="new">Here, the text of a XAML text box (<ph id="ph1">`nameTextBox.Text`</ph>) is written to a div in an HTML page hosted in <ph id="ph2">`webView1`</ph>.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Scripts in the web view content can use <bpt id="p1">**</bpt>window.external.notify<ept id="p1">**</ept> with a string parameter to send information back to your app.</source>
          <target state="new">Scripts in the web view content can use <bpt id="p1">**</bpt>window.external.notify<ept id="p1">**</ept> with a string parameter to send information back to your app.</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>To receive these messages, handle the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ScriptNotify<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.scriptnotify.aspx)</ept> event.</source>
          <target state="new">To receive these messages, handle the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ScriptNotify<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.scriptnotify.aspx)</ept> event.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>To enable an external web page to fire the <bpt id="p1">**</bpt>ScriptNotify<ept id="p1">**</ept> event when calling window.external.notify, you must include the page's URI in the <bpt id="p2">**</bpt>ApplicationContentUriRules<ept id="p2">**</ept> section of the app manifest.</source>
          <target state="new">To enable an external web page to fire the <bpt id="p1">**</bpt>ScriptNotify<ept id="p1">**</ept> event when calling window.external.notify, you must include the page's URI in the <bpt id="p2">**</bpt>ApplicationContentUriRules<ept id="p2">**</ept> section of the app manifest.</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>(You can do this in Microsoft Visual Studio on the Content URIs tab of the Package.appxmanifest designer.) The URIs in this list must use HTTPS, and may contain subdomain wildcards (for example, <ph id="ph1">`https://*.microsoft.com`</ph>) but they cannot contain domain wildcards (for example, <ph id="ph2">`https://*.com`</ph> and <ph id="ph3">`https://*.*`</ph>).</source>
          <target state="new">(You can do this in Microsoft Visual Studio on the Content URIs tab of the Package.appxmanifest designer.) The URIs in this list must use HTTPS, and may contain subdomain wildcards (for example, <ph id="ph1">`https://*.microsoft.com`</ph>) but they cannot contain domain wildcards (for example, <ph id="ph2">`https://*.com`</ph> and <ph id="ph3">`https://*.*`</ph>).</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The manifest requirement does not apply to content that originates from the app package, uses an ms-local-stream:// URI, or is loaded using <bpt id="p1">[</bpt><bpt id="p2">**</bpt>NavigateToString<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.navigatetostring.aspx)</ept>.</source>
          <target state="new">The manifest requirement does not apply to content that originates from the app package, uses an ms-local-stream:// URI, or is loaded using <bpt id="p1">[</bpt><bpt id="p2">**</bpt>NavigateToString<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.navigatetostring.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Accessing the Windows Runtime in a web view</source>
          <target state="new">Accessing the Windows Runtime in a web view</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>AddWebAllowedObject<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.addweballowedobject.aspx)</ept> method to inject an instance of a native class from a Windows Runtime component into the JavaScript context of the web view.</source>
          <target state="new">You can use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>AddWebAllowedObject<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.addweballowedobject.aspx)</ept> method to inject an instance of a native class from a Windows Runtime component into the JavaScript context of the web view.</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>This allows full access to the native methods, properties, and events of that object in the JavaScript content of that web view.</source>
          <target state="new">This allows full access to the native methods, properties, and events of that object in the JavaScript content of that web view.</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The class must be decorated with the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>AllowForWeb<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.foundation.metadata.allowforwebattribute.aspx)</ept> attribute.</source>
          <target state="new">The class must be decorated with the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>AllowForWeb<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.foundation.metadata.allowforwebattribute.aspx)</ept> attribute.</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>For example, this code injects an instance of <ph id="ph1">`MyClass`</ph> imported from a Windows Runtime component into a web view.</source>
          <target state="new">For example, this code injects an instance of <ph id="ph1">`MyClass`</ph> imported from a Windows Runtime component into a web view.</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>For more info, see <bpt id="p1">[</bpt><bpt id="p2">**</bpt>WebView.AddWebAllowedObject<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.addweballowedobject.aspx)</ept>.</source>
          <target state="new">For more info, see <bpt id="p1">[</bpt><bpt id="p2">**</bpt>WebView.AddWebAllowedObject<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.addweballowedobject.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>In addition, trusted JavaScript content in a web view can be allowed to directly access Windows Runtime APIs.</source>
          <target state="new">In addition, trusted JavaScript content in a web view can be allowed to directly access Windows Runtime APIs.</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>This provides powerful native capabilities for web apps hosted in a web view.</source>
          <target state="new">This provides powerful native capabilities for web apps hosted in a web view.</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>To enable this feature, the URI for trusted content must be whitelisted in the ApplicationContentUriRules of the app in Package.appxmanifest, with WindowsRuntimeAccess specifically set to "all".</source>
          <target state="new">To enable this feature, the URI for trusted content must be whitelisted in the ApplicationContentUriRules of the app in Package.appxmanifest, with WindowsRuntimeAccess specifically set to "all".</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>This example shows a section of the app manifest.</source>
          <target state="new">This example shows a section of the app manifest.</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Here, a local URI is given access to the Windows Runtime.</source>
          <target state="new">Here, a local URI is given access to the Windows Runtime.</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Options for web content hosting</source>
          <target state="new">Options for web content hosting</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>WebView.Settings<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.settings.aspx)</ept> property (of type <bpt id="p3">[</bpt><bpt id="p4">**</bpt>WebViewSettings<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webviewsettings.aspx)</ept>) to control whether JavaScript and IndexedDB are enabled.</source>
          <target state="new">You can use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>WebView.Settings<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.settings.aspx)</ept> property (of type <bpt id="p3">[</bpt><bpt id="p4">**</bpt>WebViewSettings<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webviewsettings.aspx)</ept>) to control whether JavaScript and IndexedDB are enabled.</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>For example, if you use a web view to display strictly static content, you might want to disable JavaScript for best performance.</source>
          <target state="new">For example, if you use a web view to display strictly static content, you might want to disable JavaScript for best performance.</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Capturing web view content</source>
          <target state="new">Capturing web view content</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>To enable sharing web view content with other apps, use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CaptureSelectedContentToDataPackageAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.captureselectedcontenttodatapackageasync.aspx)</ept> method, which returns the selected content as a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>DataPackage<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.applicationmodel.datatransfer.datapackage.aspx)</ept>.</source>
          <target state="new">To enable sharing web view content with other apps, use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CaptureSelectedContentToDataPackageAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.captureselectedcontenttodatapackageasync.aspx)</ept> method, which returns the selected content as a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>DataPackage<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.applicationmodel.datatransfer.datapackage.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>This method is asynchronous, so you must use a deferral to prevent your <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DataRequested<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.applicationmodel.datatransfer.datatransfermanager.datarequested.aspx)</ept> event handler from returning before the asynchronous call is complete.</source>
          <target state="new">This method is asynchronous, so you must use a deferral to prevent your <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DataRequested<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.applicationmodel.datatransfer.datatransfermanager.datarequested.aspx)</ept> event handler from returning before the asynchronous call is complete.</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>To get a preview image of the web view's current content, use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CapturePreviewToStreamAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.capturepreviewtostreamasync.aspx)</ept> method.</source>
          <target state="new">To get a preview image of the web view's current content, use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CapturePreviewToStreamAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.capturepreviewtostreamasync.aspx)</ept> method.</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>This method creates an image of the current content and writes it to the specified stream.</source>
          <target state="new">This method creates an image of the current content and writes it to the specified stream.</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Threading behavior</source>
          <target state="new">Threading behavior</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>By default, web view content is hosted on the UI thread on devices in the desktop device family, and off the UI thread on all other devices.</source>
          <target state="new">By default, web view content is hosted on the UI thread on devices in the desktop device family, and off the UI thread on all other devices.</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>WebView.DefaultExecutionMode<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.defaultexecutionmode.aspx)</ept> static property to query the default threading behavior for the current client.</source>
          <target state="new">You can use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>WebView.DefaultExecutionMode<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webview.defaultexecutionmode.aspx)</ept> static property to query the default threading behavior for the current client.</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>If necessary, you can use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>WebView(WebViewExecutionMode)<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/dn932036.aspx)</ept> constructor to override this behavior.</source>
          <target state="new">If necessary, you can use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>WebView(WebViewExecutionMode)<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/dn932036.aspx)</ept> constructor to override this behavior.</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept><ph id="ph1">&amp;nbsp;&amp;nbsp;</ph>There might be performance issues when hosting content on the UI thread on mobile devices, so be sure to test on all target devices when you change DefaultExecutionMode.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept><ph id="ph1">&amp;nbsp;&amp;nbsp;</ph>There might be performance issues when hosting content on the UI thread on mobile devices, so be sure to test on all target devices when you change DefaultExecutionMode.</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>A web view that hosts content off the UI thread is not compatible with parent controls that require gestures to propagate up from the web view control to the parent, such as <bpt id="p1">[</bpt><bpt id="p2">**</bpt>FlipView<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.flipview.aspx)</ept>, <bpt id="p3">[</bpt><bpt id="p4">**</bpt>ScrollViewer<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.scrollviewer.aspx)</ept>, and other related controls.</source>
          <target state="new">A web view that hosts content off the UI thread is not compatible with parent controls that require gestures to propagate up from the web view control to the parent, such as <bpt id="p1">[</bpt><bpt id="p2">**</bpt>FlipView<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.flipview.aspx)</ept>, <bpt id="p3">[</bpt><bpt id="p4">**</bpt>ScrollViewer<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.scrollviewer.aspx)</ept>, and other related controls.</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>These controls will not be able to receive gestures initiated in the off-thread web view.</source>
          <target state="new">These controls will not be able to receive gestures initiated in the off-thread web view.</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>In addition, printing off-thread web content is not directly supported – you should print an element with <bpt id="p1">[</bpt><bpt id="p2">**</bpt>WebViewBrush<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webviewbrush.aspx)</ept> fill instead.</source>
          <target state="new">In addition, printing off-thread web content is not directly supported – you should print an element with <bpt id="p1">[</bpt><bpt id="p2">**</bpt>WebViewBrush<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.webviewbrush.aspx)</ept> fill instead.</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Recommendations</source>
          <target state="new">Recommendations</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Make sure that the website loaded is formatted correctly for the device and uses colors, typography, and navigation that are consistent with the rest of your app.</source>
          <target state="new">Make sure that the website loaded is formatted correctly for the device and uses colors, typography, and navigation that are consistent with the rest of your app.</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Input fields should be appropriately sized.</source>
          <target state="new">Input fields should be appropriately sized.</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Users may not realize that they can zoom in to enter text.</source>
          <target state="new">Users may not realize that they can zoom in to enter text.</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>If a web view doesn't look like the rest of your app, consider alternative controls or ways to accomplish relevant tasks.</source>
          <target state="new">If a web view doesn't look like the rest of your app, consider alternative controls or ways to accomplish relevant tasks.</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>If your web view matches the rest of your app, users will see it all as one seamless experience.</source>
          <target state="new">If your web view matches the rest of your app, users will see it all as one seamless experience.</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>This article contains information that is specific to Universal Windows Platform (UWP) apps and Windows 10.</source>
          <target state="new">This article contains information that is specific to Universal Windows Platform (UWP) apps and Windows 10.</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>For Windows 8.1 guidance, please download the <bpt id="p1">[</bpt>Windows 8.1 guidelines PDF<ept id="p1">](https://go.microsoft.com/fwlink/p/?linkid=258743)</ept>.</source>
          <target state="new">For Windows 8.1 guidance, please download the <bpt id="p1">[</bpt>Windows 8.1 guidelines PDF<ept id="p1">](https://go.microsoft.com/fwlink/p/?linkid=258743)</ept>.</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Related topics</source>
          <target state="new">Related topics</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>WebView class</source>
          <target state="new">WebView class</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>