<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci1\graphics\transforms-overview.md</xliffext:olfilepath>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bd147a56fcb996b5f11ae813c073f70a9c350afd</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-e58fd48" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Transforms overview</source>
          <target state="new">Transforms overview</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to use transforms in the Windows Runtime&amp;<ph id="ph1">\#</ph>160;API, by changing the relative coordinate systems of elements in the UI.</source>
          <target state="new">Learn how to use transforms in the Windows Runtime&amp;<ph id="ph1">\#</ph>160;API, by changing the relative coordinate systems of elements in the UI.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Transforms overview</source>
          <target state="new">Transforms overview</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Updated for UWP apps on Windows 10.</source>
          <target state="new">Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept></source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept></target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Learn how to use transforms in the Windows Runtime API, by changing the relative coordinate systems of elements in the UI.</source>
          <target state="new">Learn how to use transforms in the Windows Runtime API, by changing the relative coordinate systems of elements in the UI.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This can be used to adjust the appearance of individual XAML elements, such as scaling, rotating, or transforming the position in x-y space.</source>
          <target state="new">This can be used to adjust the appearance of individual XAML elements, such as scaling, rotating, or transforming the position in x-y space.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>What is a transform?</source>
          <target state="new">What is a transform?</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">*</bpt>transform<ept id="p1">*</ept> defines how to map, or transform, points from one coordinate space to another coordinate space.</source>
          <target state="new">A <bpt id="p1">*</bpt>transform<ept id="p1">*</ept> defines how to map, or transform, points from one coordinate space to another coordinate space.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>When a transform is applied to a UI element, it changes how that UI element is rendered to the screen as part of the UI.</source>
          <target state="new">When a transform is applied to a UI element, it changes how that UI element is rendered to the screen as part of the UI.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Think of transforms in four broad classifications: translation, rotation, scaling and skew (or shear).</source>
          <target state="new">Think of transforms in four broad classifications: translation, rotation, scaling and skew (or shear).</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For the purposes of using graphics APIs to change the appearance of UI elements, it's usually easiest to create transforms that define only one operation at a time.</source>
          <target state="new">For the purposes of using graphics APIs to change the appearance of UI elements, it's usually easiest to create transforms that define only one operation at a time.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>So the Windows Runtime defines a discrete class for each of these transform classifications:</source>
          <target state="new">So the Windows Runtime defines a discrete class for each of these transform classifications:</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>TranslateTransform<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243027)</ept>: translates an element in x-y space, by setting values for <bpt id="p3">[</bpt><bpt id="p4">**</bpt>X<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.media.translatetransform.x.aspx)</ept> and <bpt id="p5">[</bpt><bpt id="p6">**</bpt>Y<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.media.translatetransform.y)</ept>.</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>TranslateTransform<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243027)</ept>: translates an element in x-y space, by setting values for <bpt id="p3">[</bpt><bpt id="p4">**</bpt>X<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.media.translatetransform.x.aspx)</ept> and <bpt id="p5">[</bpt><bpt id="p6">**</bpt>Y<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.media.translatetransform.y)</ept>.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>ScaleTransform<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR242940)</ept>: scales the transform based on a center point, by setting values for <bpt id="p3">[</bpt><bpt id="p4">**</bpt>CenterX<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.media.scaletransform.centerx.aspx)</ept>, <bpt id="p5">[</bpt><bpt id="p6">**</bpt>CenterY<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.media.scaletransform.centery.aspx)</ept>, <bpt id="p7">[</bpt><bpt id="p8">**</bpt>ScaleX<ept id="p8">**</ept><ept id="p7">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.media.scaletransform.scalex.aspx)</ept> and <bpt id="p9">[</bpt><bpt id="p10">**</bpt>ScaleY<ept id="p10">**</ept><ept id="p9">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.media.scaletransform.scaleyproperty)</ept>.</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>ScaleTransform<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR242940)</ept>: scales the transform based on a center point, by setting values for <bpt id="p3">[</bpt><bpt id="p4">**</bpt>CenterX<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.media.scaletransform.centerx.aspx)</ept>, <bpt id="p5">[</bpt><bpt id="p6">**</bpt>CenterY<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.media.scaletransform.centery.aspx)</ept>, <bpt id="p7">[</bpt><bpt id="p8">**</bpt>ScaleX<ept id="p8">**</ept><ept id="p7">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.media.scaletransform.scalex.aspx)</ept> and <bpt id="p9">[</bpt><bpt id="p10">**</bpt>ScaleY<ept id="p10">**</ept><ept id="p9">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.media.scaletransform.scaleyproperty)</ept>.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>RotateTransform<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR242932)</ept>: rotates in x-y space, by setting values for <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Angle<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.media.rotatetransform.angle.aspx)</ept>, <bpt id="p5">[</bpt><bpt id="p6">**</bpt>CenterX<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.media.rotatetransform.centerx.aspx)</ept> and <bpt id="p7">[</bpt><bpt id="p8">**</bpt>CenterY<ept id="p8">**</ept><ept id="p7">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.media.rotatetransform.centery)</ept>.</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>RotateTransform<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR242932)</ept>: rotates in x-y space, by setting values for <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Angle<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.media.rotatetransform.angle.aspx)</ept>, <bpt id="p5">[</bpt><bpt id="p6">**</bpt>CenterX<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.media.rotatetransform.centerx.aspx)</ept> and <bpt id="p7">[</bpt><bpt id="p8">**</bpt>CenterY<ept id="p8">**</ept><ept id="p7">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.media.rotatetransform.centery)</ept>.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>SkewTransform<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR242950)</ept>: skews or shears in x-y space, by setting values for <bpt id="p3">[</bpt><bpt id="p4">**</bpt>AngleX<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.media.skewtransform.anglex.aspx)</ept>, <bpt id="p5">[</bpt><bpt id="p6">**</bpt>AngleY<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.media.skewtransform.angley.aspx)</ept>, <bpt id="p7">[</bpt><bpt id="p8">**</bpt>CenterX<ept id="p8">**</ept><ept id="p7">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.media.skewtransform.centerx.aspx)</ept> and <bpt id="p9">[</bpt><bpt id="p10">**</bpt>CenterY<ept id="p10">**</ept><ept id="p9">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.media.scaletransform.centeryproperty)</ept>.</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>SkewTransform<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR242950)</ept>: skews or shears in x-y space, by setting values for <bpt id="p3">[</bpt><bpt id="p4">**</bpt>AngleX<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.media.skewtransform.anglex.aspx)</ept>, <bpt id="p5">[</bpt><bpt id="p6">**</bpt>AngleY<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.media.skewtransform.angley.aspx)</ept>, <bpt id="p7">[</bpt><bpt id="p8">**</bpt>CenterX<ept id="p8">**</ept><ept id="p7">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.media.skewtransform.centerx.aspx)</ept> and <bpt id="p9">[</bpt><bpt id="p10">**</bpt>CenterY<ept id="p10">**</ept><ept id="p9">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.media.scaletransform.centeryproperty)</ept>.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Of these, you're likely to use <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TranslateTransform<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243027)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>ScaleTransform<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR242940)</ept> most often for UI scenarios.</source>
          <target state="new">Of these, you're likely to use <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TranslateTransform<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243027)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>ScaleTransform<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR242940)</ept> most often for UI scenarios.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You can combine transforms, and there are two Windows Runtime classes that support this: <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CompositeTransform<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR228105)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>TransformGroup<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR243022)</ept>.</source>
          <target state="new">You can combine transforms, and there are two Windows Runtime classes that support this: <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CompositeTransform<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR228105)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>TransformGroup<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR243022)</ept>.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>In a <bpt id="p1">**</bpt>CompositeTransform<ept id="p1">**</ept>, transforms are applied in this order: scale, skew, rotate, translate.</source>
          <target state="new">In a <bpt id="p1">**</bpt>CompositeTransform<ept id="p1">**</ept>, transforms are applied in this order: scale, skew, rotate, translate.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Use <bpt id="p1">**</bpt>TransformGroup<ept id="p1">**</ept> instead of <bpt id="p2">**</bpt>CompositeTransform<ept id="p2">**</ept> if you want the transforms applied in a different order.</source>
          <target state="new">Use <bpt id="p1">**</bpt>TransformGroup<ept id="p1">**</ept> instead of <bpt id="p2">**</bpt>CompositeTransform<ept id="p2">**</ept> if you want the transforms applied in a different order.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For more info, see <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CompositeTransform<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR228105)</ept>.</source>
          <target state="new">For more info, see <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CompositeTransform<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR228105)</ept>.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Transforms and layout</source>
          <target state="new">Transforms and layout</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>In XAML layout, transforms are applied after the layout pass is complete, so available space calculations and other layout decisions have been made before the transforms are applied.</source>
          <target state="new">In XAML layout, transforms are applied after the layout pass is complete, so available space calculations and other layout decisions have been made before the transforms are applied.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Because layout comes first, you'll sometimes get unexpected results if you transform elements that are in a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Grid<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR242704)</ept> cell or similar layout container that allocates space during layout.</source>
          <target state="new">Because layout comes first, you'll sometimes get unexpected results if you transform elements that are in a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Grid<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR242704)</ept> cell or similar layout container that allocates space during layout.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The transformed element may appear truncated or obscured because it's trying to draw into an area that didn't calculate the post-transform dimensions when dividing space within its parent container.</source>
          <target state="new">The transformed element may appear truncated or obscured because it's trying to draw into an area that didn't calculate the post-transform dimensions when dividing space within its parent container.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>You may need to experiment with the transform results and adjust some settings.</source>
          <target state="new">You may need to experiment with the transform results and adjust some settings.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For example, instead of relying on adaptive layout and star sizing, you may need to change the <bpt id="p1">**</bpt>Center<ept id="p1">**</ept> properties or declare fixed pixel measurements for layout space to make sure the parent allots enough space.</source>
          <target state="new">For example, instead of relying on adaptive layout and star sizing, you may need to change the <bpt id="p1">**</bpt>Center<ept id="p1">**</ept> properties or declare fixed pixel measurements for layout space to make sure the parent allots enough space.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Migration note:  <ept id="p1">**</ept>Windows Presentation Foundation (WPF) had a <bpt id="p2">**</bpt>LayoutTransform<ept id="p2">**</ept> property that applied transforms prior to the layout pass.</source>
          <target state="new"><bpt id="p1">**</bpt>Migration note:  <ept id="p1">**</ept>Windows Presentation Foundation (WPF) had a <bpt id="p2">**</bpt>LayoutTransform<ept id="p2">**</ept> property that applied transforms prior to the layout pass.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>But Windows Runtime XAML doesn't support a <bpt id="p1">**</bpt>LayoutTransform<ept id="p1">**</ept> property.</source>
          <target state="new">But Windows Runtime XAML doesn't support a <bpt id="p1">**</bpt>LayoutTransform<ept id="p1">**</ept> property.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>(Microsoft Silverlight didn't have this property either.)</source>
          <target state="new">(Microsoft Silverlight didn't have this property either.)</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Applying a transform to a UI element</source>
          <target state="new">Applying a transform to a UI element</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>When you apply a transform to an object, you typically do so to set the property <bpt id="p1">[</bpt><bpt id="p2">**</bpt>UIElement.RenderTransform<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR208980)</ept>.</source>
          <target state="new">When you apply a transform to an object, you typically do so to set the property <bpt id="p1">[</bpt><bpt id="p2">**</bpt>UIElement.RenderTransform<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR208980)</ept>.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Setting this property does not literally change the object pixel by pixel.</source>
          <target state="new">Setting this property does not literally change the object pixel by pixel.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>What the property really does is apply the transform within the local coordinate space in which that object exists.</source>
          <target state="new">What the property really does is apply the transform within the local coordinate space in which that object exists.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Then the rendering logic and operation (post-layout) renders the combined coordinate spaces, making it look like the object has changed appearance and also potentially its layout position (if <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TranslateTransform<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243027)</ept> was applied).</source>
          <target state="new">Then the rendering logic and operation (post-layout) renders the combined coordinate spaces, making it look like the object has changed appearance and also potentially its layout position (if <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TranslateTransform<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243027)</ept> was applied).</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>By default, each render transform is centered at the origin of the target object's local coordinate system—its (0,0).</source>
          <target state="new">By default, each render transform is centered at the origin of the target object's local coordinate system—its (0,0).</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The only exception is a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TranslateTransform<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243027)</ept>, which has no center properties to set because the translation effect is the same regardless of where it is centered.</source>
          <target state="new">The only exception is a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TranslateTransform<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243027)</ept>, which has no center properties to set because the translation effect is the same regardless of where it is centered.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>But the other transforms each have properties that set <bpt id="p1">**</bpt>CenterX<ept id="p1">**</ept> and <bpt id="p2">**</bpt>CenterY<ept id="p2">**</ept> values.</source>
          <target state="new">But the other transforms each have properties that set <bpt id="p1">**</bpt>CenterX<ept id="p1">**</ept> and <bpt id="p2">**</bpt>CenterY<ept id="p2">**</ept> values.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Whenever you use transforms with <bpt id="p1">[</bpt><bpt id="p2">**</bpt>UIElement.RenderTransform<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR208980)</ept>, remember that there's another property on <bpt id="p3">[</bpt><bpt id="p4">**</bpt>UIElement<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR208911)</ept> that affects how the transform behaves: <bpt id="p5">[</bpt><bpt id="p6">**</bpt>RenderTransformOrigin<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.uielement.rendertransformorigin.aspx)</ept>.</source>
          <target state="new">Whenever you use transforms with <bpt id="p1">[</bpt><bpt id="p2">**</bpt>UIElement.RenderTransform<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR208980)</ept>, remember that there's another property on <bpt id="p3">[</bpt><bpt id="p4">**</bpt>UIElement<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR208911)</ept> that affects how the transform behaves: <bpt id="p5">[</bpt><bpt id="p6">**</bpt>RenderTransformOrigin<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.uielement.rendertransformorigin.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>What <bpt id="p1">**</bpt>RenderTransformOrigin<ept id="p1">**</ept> declares is whether the whole transform should apply to the default (0,0) point of an element or to some other origin point within the relative coordinate space of that element.</source>
          <target state="new">What <bpt id="p1">**</bpt>RenderTransformOrigin<ept id="p1">**</ept> declares is whether the whole transform should apply to the default (0,0) point of an element or to some other origin point within the relative coordinate space of that element.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For typical elements, (0,0) places the transform to the top left corner.</source>
          <target state="new">For typical elements, (0,0) places the transform to the top left corner.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Depending on what effect you want, you might choose to change <bpt id="p1">**</bpt>RenderTransformOrigin<ept id="p1">**</ept> rather than adjusting the <bpt id="p2">**</bpt>CenterX<ept id="p2">**</ept> and <bpt id="p3">**</bpt>CenterY<ept id="p3">**</ept> values on transforms.</source>
          <target state="new">Depending on what effect you want, you might choose to change <bpt id="p1">**</bpt>RenderTransformOrigin<ept id="p1">**</ept> rather than adjusting the <bpt id="p2">**</bpt>CenterX<ept id="p2">**</ept> and <bpt id="p3">**</bpt>CenterY<ept id="p3">**</ept> values on transforms.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Note that if you apply both <bpt id="p1">**</bpt>RenderTransformOrigin<ept id="p1">**</ept> and <bpt id="p2">**</bpt>CenterX<ept id="p2">**</ept><ph id="ph1"> / </ph><bpt id="p3">**</bpt>CenterY<ept id="p3">**</ept> values, the results can be pretty confusing, especially if you're animating any of the values.</source>
          <target state="new">Note that if you apply both <bpt id="p1">**</bpt>RenderTransformOrigin<ept id="p1">**</ept> and <bpt id="p2">**</bpt>CenterX<ept id="p2">**</ept><ph id="ph1"> / </ph><bpt id="p3">**</bpt>CenterY<ept id="p3">**</ept> values, the results can be pretty confusing, especially if you're animating any of the values.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>For hit-testing purposes, an object to which a transform is applied continues to respond to input in an expected way that's consistent to its visual appearance in x-y space.</source>
          <target state="new">For hit-testing purposes, an object to which a transform is applied continues to respond to input in an expected way that's consistent to its visual appearance in x-y space.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>For example, if you've used a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TranslateTransform<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243027)</ept> to move a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Rectangle<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR243371)</ept> 400 pixels laterally in the UI, that <bpt id="p5">**</bpt>Rectangle<ept id="p5">**</ept> responds to <bpt id="p6">[</bpt><bpt id="p7">**</bpt>PointerPressed<ept id="p7">**</ept><ept id="p6">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.uielement.pointerpressed.aspx)</ept> events when the user presses the point where the <bpt id="p8">**</bpt>Rectangle<ept id="p8">**</ept> appears visually.</source>
          <target state="new">For example, if you've used a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TranslateTransform<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243027)</ept> to move a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Rectangle<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR243371)</ept> 400 pixels laterally in the UI, that <bpt id="p5">**</bpt>Rectangle<ept id="p5">**</ept> responds to <bpt id="p6">[</bpt><bpt id="p7">**</bpt>PointerPressed<ept id="p7">**</ept><ept id="p6">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.uielement.pointerpressed.aspx)</ept> events when the user presses the point where the <bpt id="p8">**</bpt>Rectangle<ept id="p8">**</ept> appears visually.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>You won't get false events if the user presses the area where the <bpt id="p1">**</bpt>Rectangle<ept id="p1">**</ept> was before being translated.</source>
          <target state="new">You won't get false events if the user presses the area where the <bpt id="p1">**</bpt>Rectangle<ept id="p1">**</ept> was before being translated.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>For any z-index considerations that affect hit testing, applying a transform makes no difference; the z-index that governs which element handles input events for a point in x-y space is still evaluated using the child order as declared in a container.</source>
          <target state="new">For any z-index considerations that affect hit testing, applying a transform makes no difference; the z-index that governs which element handles input events for a point in x-y space is still evaluated using the child order as declared in a container.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>That order is usually the same as the order in which you declare the elements in XAML, although for child elements of a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Canvas<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209267)</ept> object you can adjust the order by applying the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Canvas.ZIndex<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.canvas.zindex.aspx)</ept> attached property to child elements.</source>
          <target state="new">That order is usually the same as the order in which you declare the elements in XAML, although for child elements of a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Canvas<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209267)</ept> object you can adjust the order by applying the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Canvas.ZIndex<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.canvas.zindex.aspx)</ept> attached property to child elements.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Other transform properties</source>
          <target state="new">Other transform properties</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>Brush.Transform<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR228082)</ept>, <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Brush.RelativeTransform<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR228080)</ept>: These influence how a <bpt id="p5">[</bpt><bpt id="p6">**</bpt>Brush<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/BR228076)</ept> uses coordinate space within the area that the <bpt id="p7">**</bpt>Brush<ept id="p7">**</ept> is applied to set visual properties such as foregrounds and backgrounds.</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>Brush.Transform<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR228082)</ept>, <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Brush.RelativeTransform<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR228080)</ept>: These influence how a <bpt id="p5">[</bpt><bpt id="p6">**</bpt>Brush<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/BR228076)</ept> uses coordinate space within the area that the <bpt id="p7">**</bpt>Brush<ept id="p7">**</ept> is applied to set visual properties such as foregrounds and backgrounds.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>These transforms aren't relevant for the most common brushes (which are typically setting solid colors with <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SolidColorBrush<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR242962)</ept>) but might be occasionally useful when painting areas with an <bpt id="p3">[</bpt><bpt id="p4">**</bpt>ImageBrush<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR210101)</ept> or <bpt id="p5">[</bpt><bpt id="p6">**</bpt>LinearGradientBrush<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/BR210108)</ept>.</source>
          <target state="new">These transforms aren't relevant for the most common brushes (which are typically setting solid colors with <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SolidColorBrush<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR242962)</ept>) but might be occasionally useful when painting areas with an <bpt id="p3">[</bpt><bpt id="p4">**</bpt>ImageBrush<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR210101)</ept> or <bpt id="p5">[</bpt><bpt id="p6">**</bpt>LinearGradientBrush<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/BR210108)</ept>.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>Geometry.Transform<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR210066)</ept>: You might use this property to apply a transform to a geometry prior to using that geometry for a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Path.Data<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR243356)</ept> property value.</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>Geometry.Transform<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR210066)</ept>: You might use this property to apply a transform to a geometry prior to using that geometry for a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Path.Data<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR243356)</ept> property value.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Animating a transform</source>
          <target state="new">Animating a transform</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>Transform<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243006)</ept> objects can be animated.</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>Transform<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243006)</ept> objects can be animated.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>To animate a <bpt id="p1">**</bpt>Transform<ept id="p1">**</ept>, apply an animation of a compatible type to the property you want to animate.</source>
          <target state="new">To animate a <bpt id="p1">**</bpt>Transform<ept id="p1">**</ept>, apply an animation of a compatible type to the property you want to animate.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>This typically means you're using <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DoubleAnimation<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243136)</ept> or <bpt id="p3">[</bpt><bpt id="p4">**</bpt>DoubleAnimationUsingKeyFrames<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR243136usingkeyframes)</ept> objects to define the animation, because all of the transform properties are of type <bpt id="p5">[</bpt><bpt id="p6">**</bpt>Double<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/xaml/system.double.aspx)</ept>.</source>
          <target state="new">This typically means you're using <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DoubleAnimation<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243136)</ept> or <bpt id="p3">[</bpt><bpt id="p4">**</bpt>DoubleAnimationUsingKeyFrames<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR243136usingkeyframes)</ept> objects to define the animation, because all of the transform properties are of type <bpt id="p5">[</bpt><bpt id="p6">**</bpt>Double<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/xaml/system.double.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Animations that affect a transform that's used for a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>UIElement.RenderTransform<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR208980)</ept> value are not considered to be dependent animations, even if they have a nonzero duration.</source>
          <target state="new">Animations that affect a transform that's used for a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>UIElement.RenderTransform<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR208980)</ept> value are not considered to be dependent animations, even if they have a nonzero duration.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>For more info about dependent animations, see <bpt id="p1">[</bpt>Storyboarded animations<ept id="p1">](storyboarded-animations.md)</ept>.</source>
          <target state="new">For more info about dependent animations, see <bpt id="p1">[</bpt>Storyboarded animations<ept id="p1">](storyboarded-animations.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>If you animate properties to produce an effect similar to a transform in terms of the net visual appearance—for example, animating the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Width<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR208751)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Height<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR208718)</ept> of a <bpt id="p5">[</bpt><bpt id="p6">**</bpt>FrameworkElement<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/BR208706)</ept> rather than applying a <bpt id="p7">[</bpt><bpt id="p8">**</bpt>TranslateTransform<ept id="p8">**</ept><ept id="p7">](https://msdn.microsoft.com/library/windows/apps/BR243027)</ept>—such animations are almost always treated as dependent animations.</source>
          <target state="new">If you animate properties to produce an effect similar to a transform in terms of the net visual appearance—for example, animating the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Width<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR208751)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Height<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR208718)</ept> of a <bpt id="p5">[</bpt><bpt id="p6">**</bpt>FrameworkElement<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/BR208706)</ept> rather than applying a <bpt id="p7">[</bpt><bpt id="p8">**</bpt>TranslateTransform<ept id="p8">**</ept><ept id="p7">](https://msdn.microsoft.com/library/windows/apps/BR243027)</ept>—such animations are almost always treated as dependent animations.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>You'd have to enable the animations and there could be significant performance issues with the animation, especially if you're trying to support user interaction while that object is being animated.</source>
          <target state="new">You'd have to enable the animations and there could be significant performance issues with the animation, especially if you're trying to support user interaction while that object is being animated.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>For that reason it's preferable to use a transform and animate it rather than animating any other property where the animation would be treated as a dependent animation.</source>
          <target state="new">For that reason it's preferable to use a transform and animate it rather than animating any other property where the animation would be treated as a dependent animation.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>To target the transform, there must be an existing <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Transform<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243006)</ept> as the value for <bpt id="p3">[</bpt><bpt id="p4">**</bpt>RenderTransform<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR208980)</ept>.</source>
          <target state="new">To target the transform, there must be an existing <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Transform<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243006)</ept> as the value for <bpt id="p3">[</bpt><bpt id="p4">**</bpt>RenderTransform<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR208980)</ept>.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>You typically put an element for the appropriate transform type in the initial XAML, sometimes with no properties set on that transform.</source>
          <target state="new">You typically put an element for the appropriate transform type in the initial XAML, sometimes with no properties set on that transform.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>You typically use an indirect targeting technique to apply animations to the properties of a transform.</source>
          <target state="new">You typically use an indirect targeting technique to apply animations to the properties of a transform.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>For more info about indirect targeting syntax, see <bpt id="p1">[</bpt>Storyboarded animations<ept id="p1">](storyboarded-animations.md)</ept> and <bpt id="p2">[</bpt>Property-path syntax<ept id="p2">](https://msdn.microsoft.com/library/windows/apps/Mt185586)</ept>.</source>
          <target state="new">For more info about indirect targeting syntax, see <bpt id="p1">[</bpt>Storyboarded animations<ept id="p1">](storyboarded-animations.md)</ept> and <bpt id="p2">[</bpt>Property-path syntax<ept id="p2">](https://msdn.microsoft.com/library/windows/apps/Mt185586)</ept>.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Default styles for controls sometimes define animations of transforms as part of their visual-state behavior.</source>
          <target state="new">Default styles for controls sometimes define animations of transforms as part of their visual-state behavior.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>For example, the visual states for <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ProgressRing<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR227538)</ept> use animated <bpt id="p3">[</bpt><bpt id="p4">**</bpt>RotateTransform<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR242932)</ept> values to "spin" the dots in the ring.</source>
          <target state="new">For example, the visual states for <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ProgressRing<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR227538)</ept> use animated <bpt id="p3">[</bpt><bpt id="p4">**</bpt>RotateTransform<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR242932)</ept> values to "spin" the dots in the ring.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Here's a simple example of how to animate a transform.</source>
          <target state="new">Here's a simple example of how to animate a transform.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>In this case, it's animating the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Angle<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.media.rotatetransform.angle.aspx)</ept> of a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>RotateTransform<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR242932)</ept> to spin a <bpt id="p5">[</bpt><bpt id="p6">**</bpt>Rectangle<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/BR243371)</ept> in place around its visual center.</source>
          <target state="new">In this case, it's animating the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Angle<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.media.rotatetransform.angle.aspx)</ept> of a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>RotateTransform<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR242932)</ept> to spin a <bpt id="p5">[</bpt><bpt id="p6">**</bpt>Rectangle<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/BR243371)</ept> in place around its visual center.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>This example names the <bpt id="p1">**</bpt>RotateTransform<ept id="p1">**</ept> so doesn't need indirect animation targeting, but you could alternatively leave the transform unnamed, name the element that the transform's applied to, and use indirect targeting such as <ph id="ph1">`(UIElement.RenderTransform).(RotateTransform.Angle)`</ph>.</source>
          <target state="new">This example names the <bpt id="p1">**</bpt>RotateTransform<ept id="p1">**</ept> so doesn't need indirect animation targeting, but you could alternatively leave the transform unnamed, name the element that the transform's applied to, and use indirect targeting such as <ph id="ph1">`(UIElement.RenderTransform).(RotateTransform.Angle)`</ph>.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Accounting for coordinate frames of reference at run time</source>
          <target state="new">Accounting for coordinate frames of reference at run time</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>UIElement<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR208911)</ept> has a method named <bpt id="p3">[</bpt><bpt id="p4">**</bpt>TransformToVisual<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.uielement.transformtovisual.aspx)</ept>, which can generate a <bpt id="p5">[</bpt><bpt id="p6">**</bpt>Transform<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/BR243006)</ept> that correlates the coordinate frames of reference for two UI elements.</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>UIElement<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR208911)</ept> has a method named <bpt id="p3">[</bpt><bpt id="p4">**</bpt>TransformToVisual<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.uielement.transformtovisual.aspx)</ept>, which can generate a <bpt id="p5">[</bpt><bpt id="p6">**</bpt>Transform<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/BR243006)</ept> that correlates the coordinate frames of reference for two UI elements.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>You can use this to compare an element to the app's default coordinate frame of reference if you pass the root visual as the first parameter.</source>
          <target state="new">You can use this to compare an element to the app's default coordinate frame of reference if you pass the root visual as the first parameter.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>This can be useful if you've captured an input event from a different element, or if you are trying to predict layout behavior without actually requesting a layout pass.</source>
          <target state="new">This can be useful if you've captured an input event from a different element, or if you are trying to predict layout behavior without actually requesting a layout pass.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Event data obtained from pointer events provides access to a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>GetCurrentPoint<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR212141)</ept> method, where you can specify a <bpt id="p3">*</bpt>relativeTo<ept id="p3">*</ept> parameter to change the coordinate frame of reference to a specific element rather than the app default.</source>
          <target state="new">Event data obtained from pointer events provides access to a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>GetCurrentPoint<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR212141)</ept> method, where you can specify a <bpt id="p3">*</bpt>relativeTo<ept id="p3">*</ept> parameter to change the coordinate frame of reference to a specific element rather than the app default.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>This approach simply applies a translate transform internally and transforms the x-y coordinate data for you when it creates the returned <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PointerPoint<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR242038)</ept> object.</source>
          <target state="new">This approach simply applies a translate transform internally and transforms the x-y coordinate data for you when it creates the returned <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PointerPoint<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR242038)</ept> object.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Describing a transform mathematically</source>
          <target state="new">Describing a transform mathematically</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>A transform can be described in terms of a transformation matrix.</source>
          <target state="new">A transform can be described in terms of a transformation matrix.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>A 3×3 matrix is used to describe the transformations in a two-dimensional, x-y plane.</source>
          <target state="new">A 3×3 matrix is used to describe the transformations in a two-dimensional, x-y plane.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Affine transformation matrices can be multiplied to form any number of linear transformations, such as rotation and skew (shear), followed by translation.</source>
          <target state="new">Affine transformation matrices can be multiplied to form any number of linear transformations, such as rotation and skew (shear), followed by translation.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The final column of an affine transformation matrix is equal to (0, 0, 1), so you need to specify only the members of the first two columns in the mathematical description.</source>
          <target state="new">The final column of an affine transformation matrix is equal to (0, 0, 1), so you need to specify only the members of the first two columns in the mathematical description.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The mathematical description of a transform might be useful to you if you have a mathematical background or a familiarity with graphics-programming techniques that also use matrices to describe transformations of coordinate space.</source>
          <target state="new">The mathematical description of a transform might be useful to you if you have a mathematical background or a familiarity with graphics-programming techniques that also use matrices to describe transformations of coordinate space.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>There's a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Transform<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243006)</ept>-derived class that enables you to express a transformation directly in terms of its 3×3 matrix: <bpt id="p3">[</bpt><bpt id="p4">**</bpt>MatrixTransform<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR210137)</ept>.</source>
          <target state="new">There's a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Transform<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243006)</ept>-derived class that enables you to express a transformation directly in terms of its 3×3 matrix: <bpt id="p3">[</bpt><bpt id="p4">**</bpt>MatrixTransform<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR210137)</ept>.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>MatrixTransform<ept id="p1">**</ept> has a <bpt id="p2">[</bpt><bpt id="p3">**</bpt>Matrix<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.media.matrixtransform.matrix.aspx)</ept> property, which holds a structure that has six properties: <bpt id="p4">[</bpt><bpt id="p5">**</bpt>M11<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/Hh673847)</ept>, <bpt id="p6">[</bpt><bpt id="p7">**</bpt>M12<ept id="p7">**</ept><ept id="p6">](https://msdn.microsoft.com/library/windows/apps/Hh673853)</ept>, <bpt id="p8">[</bpt><bpt id="p9">**</bpt>M21<ept id="p9">**</ept><ept id="p8">](https://msdn.microsoft.com/library/windows/apps/Hh673851)</ept>, <bpt id="p10">[</bpt><bpt id="p11">**</bpt>M22<ept id="p11">**</ept><ept id="p10">](https://msdn.microsoft.com/library/windows/apps/Hh673849)</ept>, <bpt id="p12">[</bpt><bpt id="p13">**</bpt>OffsetX<ept id="p13">**</ept><ept id="p12">](https://msdn.microsoft.com/library/windows/apps/Hh673810)</ept> and <bpt id="p14">[</bpt><bpt id="p15">**</bpt>OffsetY<ept id="p15">**</ept><ept id="p14">](https://msdn.microsoft.com/library/windows/apps/Hh673816)</ept>.</source>
          <target state="new"><bpt id="p1">**</bpt>MatrixTransform<ept id="p1">**</ept> has a <bpt id="p2">[</bpt><bpt id="p3">**</bpt>Matrix<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.media.matrixtransform.matrix.aspx)</ept> property, which holds a structure that has six properties: <bpt id="p4">[</bpt><bpt id="p5">**</bpt>M11<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/Hh673847)</ept>, <bpt id="p6">[</bpt><bpt id="p7">**</bpt>M12<ept id="p7">**</ept><ept id="p6">](https://msdn.microsoft.com/library/windows/apps/Hh673853)</ept>, <bpt id="p8">[</bpt><bpt id="p9">**</bpt>M21<ept id="p9">**</ept><ept id="p8">](https://msdn.microsoft.com/library/windows/apps/Hh673851)</ept>, <bpt id="p10">[</bpt><bpt id="p11">**</bpt>M22<ept id="p11">**</ept><ept id="p10">](https://msdn.microsoft.com/library/windows/apps/Hh673849)</ept>, <bpt id="p12">[</bpt><bpt id="p13">**</bpt>OffsetX<ept id="p13">**</ept><ept id="p12">](https://msdn.microsoft.com/library/windows/apps/Hh673810)</ept> and <bpt id="p14">[</bpt><bpt id="p15">**</bpt>OffsetY<ept id="p15">**</ept><ept id="p14">](https://msdn.microsoft.com/library/windows/apps/Hh673816)</ept>.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Each <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Matrix<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR210127)</ept> property uses a <bpt id="p3">**</bpt>Double<ept id="p3">**</ept> value and corresponds to the six relevant values (columns 1 and 2) of an affine transformation matrix.</source>
          <target state="new">Each <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Matrix<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR210127)</ept> property uses a <bpt id="p3">**</bpt>Double<ept id="p3">**</ept> value and corresponds to the six relevant values (columns 1 and 2) of an affine transformation matrix.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>M11</source>
          <target state="new">M11</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>M21</source>
          <target state="new">M21</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>0</source>
          <target state="new">0</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>M12</source>
          <target state="new">M12</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>M22</source>
          <target state="new">M22</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>0</source>
          <target state="new">0</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>OffsetX</source>
          <target state="new">OffsetX</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>OffsetY</source>
          <target state="new">OffsetY</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>1</source>
          <target state="new">1</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Any transform that you could describe with a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TranslateTransform<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243027)</ept>, <bpt id="p3">[</bpt><bpt id="p4">**</bpt>ScaleTransform<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR242940)</ept>, <bpt id="p5">[</bpt><bpt id="p6">**</bpt>RotateTransform<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/BR242932)</ept>, or <bpt id="p7">[</bpt><bpt id="p8">**</bpt>SkewTransform<ept id="p8">**</ept><ept id="p7">](https://msdn.microsoft.com/library/windows/apps/BR242950)</ept> object could be described equally by a <bpt id="p9">[</bpt><bpt id="p10">**</bpt>MatrixTransform<ept id="p10">**</ept><ept id="p9">](https://msdn.microsoft.com/library/windows/apps/BR210137)</ept> with a <bpt id="p11">[</bpt><bpt id="p12">**</bpt>Matrix<ept id="p12">**</ept><ept id="p11">](https://msdn.microsoft.com/library/windows/apps/BR210127)</ept> value.</source>
          <target state="new">Any transform that you could describe with a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TranslateTransform<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243027)</ept>, <bpt id="p3">[</bpt><bpt id="p4">**</bpt>ScaleTransform<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR242940)</ept>, <bpt id="p5">[</bpt><bpt id="p6">**</bpt>RotateTransform<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/BR242932)</ept>, or <bpt id="p7">[</bpt><bpt id="p8">**</bpt>SkewTransform<ept id="p8">**</ept><ept id="p7">](https://msdn.microsoft.com/library/windows/apps/BR242950)</ept> object could be described equally by a <bpt id="p9">[</bpt><bpt id="p10">**</bpt>MatrixTransform<ept id="p10">**</ept><ept id="p9">](https://msdn.microsoft.com/library/windows/apps/BR210137)</ept> with a <bpt id="p11">[</bpt><bpt id="p12">**</bpt>Matrix<ept id="p12">**</ept><ept id="p11">](https://msdn.microsoft.com/library/windows/apps/BR210127)</ept> value.</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>But you typically just use <bpt id="p1">**</bpt>TranslateTransform<ept id="p1">**</ept> and the others because the properties on those transform classes are easier to conceptualize than setting the vector components in a <bpt id="p2">**</bpt>Matrix<ept id="p2">**</ept>.</source>
          <target state="new">But you typically just use <bpt id="p1">**</bpt>TranslateTransform<ept id="p1">**</ept> and the others because the properties on those transform classes are easier to conceptualize than setting the vector components in a <bpt id="p2">**</bpt>Matrix<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>It's also easier to animate the discrete properties of transforms; a <bpt id="p1">**</bpt>Matrix<ept id="p1">**</ept> is actually a structure and not a <bpt id="p2">[</bpt><bpt id="p3">**</bpt>DependencyObject<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/BR242356)</ept>, so it can't support animated individual values.</source>
          <target state="new">It's also easier to animate the discrete properties of transforms; a <bpt id="p1">**</bpt>Matrix<ept id="p1">**</ept> is actually a structure and not a <bpt id="p2">[</bpt><bpt id="p3">**</bpt>DependencyObject<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/BR242356)</ept>, so it can't support animated individual values.</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Some XAML design tools that enable you to apply transformation operations will serialize the results as a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MatrixTransform<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR210137)</ept>.</source>
          <target state="new">Some XAML design tools that enable you to apply transformation operations will serialize the results as a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MatrixTransform<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR210137)</ept>.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>In this case it may be best to use the same design tool again to change the transformation effect and serialize the XAML again, rather than trying to manipulate the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Matrix<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR210127)</ept> values yourself directly in the XAML.</source>
          <target state="new">In this case it may be best to use the same design tool again to change the transformation effect and serialize the XAML again, rather than trying to manipulate the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Matrix<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR210127)</ept> values yourself directly in the XAML.</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>3-D transforms</source>
          <target state="new">3-D transforms</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>You can apply 3-D effects to any <bpt id="p1">[</bpt><bpt id="p2">**</bpt>UIElement<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR208911)</ept> by using <bpt id="p3">*</bpt>perspective transforms<ept id="p3">*</ept>.</source>
          <target state="new">You can apply 3-D effects to any <bpt id="p1">[</bpt><bpt id="p2">**</bpt>UIElement<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR208911)</ept> by using <bpt id="p3">*</bpt>perspective transforms<ept id="p3">*</ept>.</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>For example, you can create the illusion that an object is rotated toward or away from you in a perspective plane.</source>
          <target state="new">For example, you can create the illusion that an object is rotated toward or away from you in a perspective plane.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>To do this, set the<bpt id="p1">**</bpt>UIElement<ept id="p1">**</ept> object's <bpt id="p2">[</bpt><bpt id="p3">**</bpt>Projection<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.uielement.projection.aspx)</ept> property as a <bpt id="p4">[</bpt><bpt id="p5">**</bpt>PlaneProjection<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/BR210192)</ept> value.</source>
          <target state="new">To do this, set the<bpt id="p1">**</bpt>UIElement<ept id="p1">**</ept> object's <bpt id="p2">[</bpt><bpt id="p3">**</bpt>Projection<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.uielement.projection.aspx)</ept> property as a <bpt id="p4">[</bpt><bpt id="p5">**</bpt>PlaneProjection<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/BR210192)</ept> value.</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>PlaneProjection<ept id="p1">**</ept> class defines how the transform is rendered in a simulated 3-D space.</source>
          <target state="new">The <bpt id="p1">**</bpt>PlaneProjection<ept id="p1">**</ept> class defines how the transform is rendered in a simulated 3-D space.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>This type of transform is described in more detail in <bpt id="p1">[</bpt>3-D perspective effects for XAML UI<ept id="p1">](3-d-perspective-effects.md)</ept>.</source>
          <target state="new">This type of transform is described in more detail in <bpt id="p1">[</bpt>3-D perspective effects for XAML UI<ept id="p1">](3-d-perspective-effects.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>   It's technically possible to get similar results by using the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>Transform<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/BR243006)</ept> classes in combination, but the <bpt id="p4">[</bpt><bpt id="p5">**</bpt>PlaneProjection<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/BR210192)</ept> technique usually looks better with images as brushes and it's much easier to get the property values right.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>   It's technically possible to get similar results by using the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>Transform<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/BR243006)</ept> classes in combination, but the <bpt id="p4">[</bpt><bpt id="p5">**</bpt>PlaneProjection<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/BR210192)</ept> technique usually looks better with images as brushes and it's much easier to get the property values right.</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Related topics</source>
          <target state="new">Related topics</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Drawing shapes</source>
          <target state="new">Drawing shapes</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>3-D perspective effects for XAML UI</source>
          <target state="new">3-D perspective effects for XAML UI</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Transform</source>
          <target state="new">Transform</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>