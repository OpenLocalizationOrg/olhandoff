<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci1\porting\getting-started-animation.md</xliffext:olfilepath>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f25e6aa8324bc8d80d6741fde3d3b6b24611a78e</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-e58fd48" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>ms.assetid: C1C3F5EA-B775-4700-9C45-695E78C16205 description: Getting started: Animation title: Getting started: Animation</source>
          <target state="new">ms.assetid: C1C3F5EA-B775-4700-9C45-695E78C16205 description: Getting started: Animation title: Getting started: Animation</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Getting started: Animation</source>
          <target state="new">Getting started: Animation</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Updated for UWP apps on Windows 10.</source>
          <target state="new">Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept></source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept></target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Adding animations</source>
          <target state="new">Adding animations</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>In iOS, you most often create animation effects programmatically.</source>
          <target state="new">In iOS, you most often create animation effects programmatically.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For example, you might use animations provided by the block-based <bpt id="p1">**</bpt>UIView<ept id="p1">**</ept> class's <bpt id="p2">**</bpt>animateWithDuration<ept id="p2">**</ept> methods, or the older non-block based methods.</source>
          <target state="new">For example, you might use animations provided by the block-based <bpt id="p1">**</bpt>UIView<ept id="p1">**</ept> class's <bpt id="p2">**</bpt>animateWithDuration<ept id="p2">**</ept> methods, or the older non-block based methods.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Or, you might explicitly use the <bpt id="p1">**</bpt>CALayer<ept id="p1">**</ept> class to animate layers.</source>
          <target state="new">Or, you might explicitly use the <bpt id="p1">**</bpt>CALayer<ept id="p1">**</ept> class to animate layers.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Animations in Windows apps can be created programmatically, but they can also be defined declaratively with Extensible Application Markup Language (XAML).</source>
          <target state="new">Animations in Windows apps can be created programmatically, but they can also be defined declaratively with Extensible Application Markup Language (XAML).</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You can use Microsoft Visual Studio to edit XAML code directly, but Visual Studio also comes with a tool called <bpt id="p1">**</bpt>Blend<ept id="p1">**</ept>, which creates XAML code for you as you work with animations in a designer.</source>
          <target state="new">You can use Microsoft Visual Studio to edit XAML code directly, but Visual Studio also comes with a tool called <bpt id="p1">**</bpt>Blend<ept id="p1">**</ept>, which creates XAML code for you as you work with animations in a designer.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In fact, Blend allows you to open, design, build, and run complete Visual Studio projects, graphically.</source>
          <target state="new">In fact, Blend allows you to open, design, build, and run complete Visual Studio projects, graphically.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The following walkthrough lets you try this out.</source>
          <target state="new">The following walkthrough lets you try this out.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Create a new Universal Windows Platform (UWP) app and name it something like "SimpleAnimation".</source>
          <target state="new">Create a new Universal Windows Platform (UWP) app and name it something like "SimpleAnimation".</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>In this project, we're going to move a rectangle, apply a fade effect, and then bring it back into view.</source>
          <target state="new">In this project, we're going to move a rectangle, apply a fade effect, and then bring it back into view.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Animations in XAML are based on the concept of <bpt id="p1">*</bpt>storyboards<ept id="p1">*</ept> (not to be confused with iOS storyboards).</source>
          <target state="new">Animations in XAML are based on the concept of <bpt id="p1">*</bpt>storyboards<ept id="p1">*</ept> (not to be confused with iOS storyboards).</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Storyboards use <bpt id="p1">*</bpt>keyframes<ept id="p1">*</ept> to animate property changes.</source>
          <target state="new">Storyboards use <bpt id="p1">*</bpt>keyframes<ept id="p1">*</ept> to animate property changes.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>With your project open, in <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, right-click the project's name and then select <bpt id="p2">**</bpt>Open in Blend<ept id="p2">**</ept> or <bpt id="p3">**</bpt>Design in Blend<ept id="p3">**</ept>, as shown in the following figure.</source>
          <target state="new">With your project open, in <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, right-click the project's name and then select <bpt id="p2">**</bpt>Open in Blend<ept id="p2">**</ept> or <bpt id="p3">**</bpt>Design in Blend<ept id="p3">**</ept>, as shown in the following figure.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Visual Studio continues to run in the background.</source>
          <target state="new">Visual Studio continues to run in the background.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>open in blend menu command</source>
          <target state="new">open in blend menu command</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>After Blend starts, you should see something similar to the following figure.</source>
          <target state="new">After Blend starts, you should see something similar to the following figure.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>blend development environment</source>
          <target state="new">blend development environment</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Double-click on <bpt id="p1">**</bpt>MainPage.xaml<ept id="p1">**</ept> in the <bpt id="p2">**</bpt>Solution Explorer<ept id="p2">**</ept> on the left hand side.</source>
          <target state="new">Double-click on <bpt id="p1">**</bpt>MainPage.xaml<ept id="p1">**</ept> in the <bpt id="p2">**</bpt>Solution Explorer<ept id="p2">**</ept> on the left hand side.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Next, from the vertical strip of tools on the edge of the central <bpt id="p1">**</bpt>Design View<ept id="p1">**</ept>, select the <bpt id="p2">**</bpt>Rectangle<ept id="p2">**</ept> tool, and then draw a rectangle in <bpt id="p3">**</bpt>Design View<ept id="p3">**</ept>, as shown in the following figure.</source>
          <target state="new">Next, from the vertical strip of tools on the edge of the central <bpt id="p1">**</bpt>Design View<ept id="p1">**</ept>, select the <bpt id="p2">**</bpt>Rectangle<ept id="p2">**</ept> tool, and then draw a rectangle in <bpt id="p3">**</bpt>Design View<ept id="p3">**</ept>, as shown in the following figure.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>adding a rectangle to design view</source>
          <target state="new">adding a rectangle to design view</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>To make the rectangle green, look in the <bpt id="p1">**</bpt>Properties<ept id="p1">**</ept> window, and in the <bpt id="p2">**</bpt>Brush<ept id="p2">**</ept> area, click on the <bpt id="p3">**</bpt>Solid color brush<ept id="p3">**</ept> button, and then click the <bpt id="p4">**</bpt>Color eyedropper<ept id="p4">**</ept> icon.</source>
          <target state="new">To make the rectangle green, look in the <bpt id="p1">**</bpt>Properties<ept id="p1">**</ept> window, and in the <bpt id="p2">**</bpt>Brush<ept id="p2">**</ept> area, click on the <bpt id="p3">**</bpt>Solid color brush<ept id="p3">**</ept> button, and then click the <bpt id="p4">**</bpt>Color eyedropper<ept id="p4">**</ept> icon.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Click somewhere in the green band of hues.</source>
          <target state="new">Click somewhere in the green band of hues.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>To begin animating the rectangle, in the <bpt id="p1">**</bpt>Objects and Timeline<ept id="p1">**</ept> window, tap the plus symbol (<bpt id="p2">**</bpt>New<ept id="p2">**</ept>) button as shown in the following figure, and then tap <bpt id="p3">**</bpt>OK<ept id="p3">**</ept>.</source>
          <target state="new">To begin animating the rectangle, in the <bpt id="p1">**</bpt>Objects and Timeline<ept id="p1">**</ept> window, tap the plus symbol (<bpt id="p2">**</bpt>New<ept id="p2">**</ept>) button as shown in the following figure, and then tap <bpt id="p3">**</bpt>OK<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>adding a storyboard</source>
          <target state="new">adding a storyboard</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>A storyboard appears in the <bpt id="p1">**</bpt>Objects and Timeline<ept id="p1">**</ept> window (you may need to resize the view to see it properly).</source>
          <target state="new">A storyboard appears in the <bpt id="p1">**</bpt>Objects and Timeline<ept id="p1">**</ept> window (you may need to resize the view to see it properly).</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Design View<ept id="p1">**</ept> display changes to show that <bpt id="p2">**</bpt>Storyboard1 timeline recording is on<ept id="p2">**</ept>.</source>
          <target state="new">The <bpt id="p1">**</bpt>Design View<ept id="p1">**</ept> display changes to show that <bpt id="p2">**</bpt>Storyboard1 timeline recording is on<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>To capture the current state of the rectangle, in the <bpt id="p1">**</bpt>Objects and Timeline<ept id="p1">**</ept> window, tap the <bpt id="p2">**</bpt>Record Keyframe<ept id="p2">**</ept> button just above the yellow arrow, as shown in the following figure.</source>
          <target state="new">To capture the current state of the rectangle, in the <bpt id="p1">**</bpt>Objects and Timeline<ept id="p1">**</ept> window, tap the <bpt id="p2">**</bpt>Record Keyframe<ept id="p2">**</ept> button just above the yellow arrow, as shown in the following figure.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>recording a keyframe</source>
          <target state="new">recording a keyframe</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Now, let's move the rectangle and fade it away.</source>
          <target state="new">Now, let's move the rectangle and fade it away.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>To do this, drag the orange/yellow arrow to the 2-second position, and then move your green rectangle slightly to the right.</source>
          <target state="new">To do this, drag the orange/yellow arrow to the 2-second position, and then move your green rectangle slightly to the right.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Then, in the <bpt id="p1">**</bpt>Properties<ept id="p1">**</ept> window, in the <bpt id="p2">**</bpt>Appearance<ept id="p2">**</ept> area, change the <bpt id="p3">**</bpt>Opacity<ept id="p3">**</ept> property to <bpt id="p4">**</bpt>0<ept id="p4">**</ept>, as shown in the following figure.</source>
          <target state="new">Then, in the <bpt id="p1">**</bpt>Properties<ept id="p1">**</ept> window, in the <bpt id="p2">**</bpt>Appearance<ept id="p2">**</ept> area, change the <bpt id="p3">**</bpt>Opacity<ept id="p3">**</ept> property to <bpt id="p4">**</bpt>0<ept id="p4">**</ept>, as shown in the following figure.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>To preview the animation, tap the <bpt id="p1">**</bpt>Play<ept id="p1">**</ept> button in the Storyboard panel.</source>
          <target state="new">To preview the animation, tap the <bpt id="p1">**</bpt>Play<ept id="p1">**</ept> button in the Storyboard panel.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>properties windows and play button</source>
          <target state="new">properties windows and play button</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Next, let's bring the rectangle back into view.</source>
          <target state="new">Next, let's bring the rectangle back into view.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Objects and Timeline<ept id="p1">**</ept> window, double-click <bpt id="p2">**</bpt>Storyboard1<ept id="p2">**</ept>.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Objects and Timeline<ept id="p1">**</ept> window, double-click <bpt id="p2">**</bpt>Storyboard1<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Then, in the <bpt id="p1">**</bpt>Properties<ept id="p1">**</ept> window, in the <bpt id="p2">**</bpt>Common<ept id="p2">**</ept> area, select <bpt id="p3">**</bpt>AutoReverse<ept id="p3">**</ept>, as shown in the following figure.</source>
          <target state="new">Then, in the <bpt id="p1">**</bpt>Properties<ept id="p1">**</ept> window, in the <bpt id="p2">**</bpt>Common<ept id="p2">**</ept> area, select <bpt id="p3">**</bpt>AutoReverse<ept id="p3">**</ept>, as shown in the following figure.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>selecting a storyboard</source>
          <target state="new">selecting a storyboard</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Finally, click on the <bpt id="p1">**</bpt>Play<ept id="p1">**</ept> button to see what happens.</source>
          <target state="new">Finally, click on the <bpt id="p1">**</bpt>Play<ept id="p1">**</ept> button to see what happens.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>You can build and run the project by clicking on the green run button at the top of the window (or just press F5).</source>
          <target state="new">You can build and run the project by clicking on the green run button at the top of the window (or just press F5).</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>If you do this, you'll see your project will indeed build and run, but the green rectangle will stubbornly sit perfectly still, like a toddler denied candy in a supermarket aisle.</source>
          <target state="new">If you do this, you'll see your project will indeed build and run, but the green rectangle will stubbornly sit perfectly still, like a toddler denied candy in a supermarket aisle.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>To start the animation, you'll need to add a line of code to the project.</source>
          <target state="new">To start the animation, you'll need to add a line of code to the project.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Here's how.</source>
          <target state="new">Here's how.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Save the project, by opening the <bpt id="p1">**</bpt>File<ept id="p1">**</ept> menu, and selecting <bpt id="p2">**</bpt>Save MainPage.xaml<ept id="p2">**</ept>.</source>
          <target state="new">Save the project, by opening the <bpt id="p1">**</bpt>File<ept id="p1">**</ept> menu, and selecting <bpt id="p2">**</bpt>Save MainPage.xaml<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Return to Visual Studio.</source>
          <target state="new">Return to Visual Studio.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>If Visual Studio displays a dialog box asking whether you want to reload the modified file, select <bpt id="p1">**</bpt>Yes<ept id="p1">**</ept>.</source>
          <target state="new">If Visual Studio displays a dialog box asking whether you want to reload the modified file, select <bpt id="p1">**</bpt>Yes<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Double-click the <bpt id="p1">**</bpt>MainPage.xaml.cs<ept id="p1">**</ept> file, which is hidden under <bpt id="p2">**</bpt>MainPage.xaml<ept id="p2">**</ept>, to open it, and add the following code just above the public MainPage() method:</source>
          <target state="new">Double-click the <bpt id="p1">**</bpt>MainPage.xaml.cs<ept id="p1">**</ept> file, which is hidden under <bpt id="p2">**</bpt>MainPage.xaml<ept id="p2">**</ept>, to open it, and add the following code just above the public MainPage() method:</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Run the project again, and watch the rectangle animate.</source>
          <target state="new">Run the project again, and watch the rectangle animate.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Hurrah!</source>
          <target state="new">Hurrah!</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>If you open the MainPage.xaml file, in <bpt id="p1">**</bpt>XAML<ept id="p1">**</ept> view, you'll see the XAML code that Blend added for you as you worked in the designer.</source>
          <target state="new">If you open the MainPage.xaml file, in <bpt id="p1">**</bpt>XAML<ept id="p1">**</ept> view, you'll see the XAML code that Blend added for you as you worked in the designer.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>In particular, look at the code in the <ph id="ph1">`&lt;Storyboard&gt;`</ph> and <ph id="ph2">`&lt;Rectangle&gt;`</ph> elements.</source>
          <target state="new">In particular, look at the code in the <ph id="ph1">`&lt;Storyboard&gt;`</ph> and <ph id="ph2">`&lt;Rectangle&gt;`</ph> elements.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The following code shows an example.</source>
          <target state="new">The following code shows an example.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Ellipses indicate unrelated code omitted for brevity, and line breaks have been added for code readability.)</source>
          <target state="new">Ellipses indicate unrelated code omitted for brevity, and line breaks have been added for code readability.)</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>You can edit this XAML manually, or return to Blend to continue working on it there.</source>
          <target state="new">You can edit this XAML manually, or return to Blend to continue working on it there.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Blend makes it fun to create interesting user interfaces, and the ability to animate them using a graphical tool can dramatically speed up development time.</source>
          <target state="new">Blend makes it fun to create interesting user interfaces, and the ability to animate them using a graphical tool can dramatically speed up development time.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>For more info about animations, see <bpt id="p1">[</bpt>Animations overview<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/mt187350)</ept>.</source>
          <target state="new">For more info about animations, see <bpt id="p1">[</bpt>Animations overview<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/mt187350)</ept>.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  For info about animations for Windows Store apps using JavaScript and HTML, see <bpt id="p2">[</bpt>Animating your UI (HTML)<ept id="p2">](https://msdn.microsoft.com/library/windows/apps/hh465165)</ept>.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  For info about animations for Windows Store apps using JavaScript and HTML, see <bpt id="p2">[</bpt>Animating your UI (HTML)<ept id="p2">](https://msdn.microsoft.com/library/windows/apps/hh465165)</ept>.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Next step</source>
          <target state="new">Next step</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Getting started: What next?</source>
          <target state="new">Getting started: What next?</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>