<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="zh-cn" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">windows-apps-src\input-and-devices\launch-a-foreground-app-with-voice-commands-in-cortana.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">aa4d71525d4a41382b8bbe123ca1fa830a4fc720</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-781aacf</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>In addition to using voice commands within Cortana to access system features, you can also use voice commands through Cortana to launch a foreground app and specify an action or command to execute within the app.</source>
          <target>In addition to using voice commands within Cortana to access system features, you can also use voice commands through Cortana to launch a foreground app and specify an action or command to execute within the app.</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>Launch a foreground app with voice commands in Cortana</source>
          <target>Launch a foreground app with voice commands in Cortana</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>Activate a foreground app with voice commands through Cortana</source>
          <target>Activate a foreground app with voice commands through Cortana</target>
        </segment>
      </unit>
      <unit id="104">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>In addition to using voice commands within <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Cortana</pc> to access system features, you can also extend <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Cortana</pc> with features and functionality from your app.</source>
          <target>In addition to using voice commands within <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Cortana</pc> to access system features, you can also extend <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Cortana</pc> with features and functionality from your app.</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source>Using voice commands, your app can be activated to the foreground and an action or command executed within the app.</source>
          <target>Using voice commands, your app can be activated to the foreground and an action or command executed within the app.</target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source>Important APIs</source>
          <target>Important APIs</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source>Windows.ApplicationModel.VoiceCommands</source>
          <target>Windows.ApplicationModel.VoiceCommands</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source>VCD elements and attributes v1.2</source>
          <target>VCD elements and attributes v1.2</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source>When an app handles a voice command in the foreground, it takes focus and Cortana is dismissed.</source>
          <target>When an app handles a voice command in the foreground, it takes focus and Cortana is dismissed.</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source>If you prefer, you can activate your app and execute a command as a background task.</source>
          <target>If you prefer, you can activate your app and execute a command as a background task.</target>
        </segment>
      </unit>
      <unit id="111">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>In this case, Cortana retains focus and your app returns all feedback and results through the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Cortana</pc> canvas and the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Cortana</pc> voice.</source>
          <target>In this case, Cortana retains focus and your app returns all feedback and results through the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Cortana</pc> canvas and the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Cortana</pc> voice.</target>
        </segment>
      </unit>
      <unit id="112">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Voice commands that require additional context or user input (such as sending a message to a specific contact) are best handled in a foreground app, while basic commands (such as listing upcoming trips) can be handled in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Cortana</pc> through a background app.</source>
          <target>Voice commands that require additional context or user input (such as sending a message to a specific contact) are best handled in a foreground app, while basic commands (such as listing upcoming trips) can be handled in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Cortana</pc> through a background app.</target>
        </segment>
      </unit>
      <unit id="113">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](launch-a-background-app-with-voice-commands-in-cortana.md)</data>
        </originalData>
        <segment state="initial">
          <source>If you want to activate an app in the background using voice commands, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Activate a background app with voice commands through Cortana</pc>.</source>
          <target>If you want to activate an app in the background using voice commands, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Activate a background app with voice commands through Cortana</pc>.</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source>Note</source>
          <target>Note</target>
        </segment>
      </unit>
      <unit id="115">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>A voice command is a single utterance with a specific intent, defined in a Voice Command Definition (VCD) file, directed at an installed app through <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Cortana</pc>.</source>
          <target>A voice command is a single utterance with a specific intent, defined in a Voice Command Definition (VCD) file, directed at an installed app through <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Cortana</pc>.</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source>A VCD file defines one or more voice commands, each with a unique intent.</source>
          <target>A VCD file defines one or more voice commands, each with a unique intent.</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source>A voice command definition can vary in complexity.</source>
          <target>A voice command definition can vary in complexity.</target>
        </segment>
      </unit>
      <unit id="118">
        <segment state="initial">
          <source>It can support anything from a single, constrained utterance to a collection of more flexible, natural language utterances, all denoting the same intent.</source>
          <target>It can support anything from a single, constrained utterance to a collection of more flexible, natural language utterances, all denoting the same intent.</target>
        </segment>
      </unit>
      <unit id="119">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](http://go.microsoft.com/fwlink/p/?LinkID=619899)</data>
        </originalData>
        <segment state="initial">
          <source>To demonstrate foreground app features, we'll use a trip planning and management app named <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Adventure Works</pc> from the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Cortana voice command sample</pc>.</source>
          <target>To demonstrate foreground app features, we'll use a trip planning and management app named <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Adventure Works</pc> from the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Cortana voice command sample</pc>.</target>
        </segment>
      </unit>
      <unit id="120">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>To create a new <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Adventure Works</pc> trip without <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Cortana</pc>, a user would launch the app and navigate to the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">New trip</pc> page.</source>
          <target>To create a new <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Adventure Works</pc> trip without <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Cortana</pc>, a user would launch the app and navigate to the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">New trip</pc> page.</target>
        </segment>
      </unit>
      <unit id="121">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>To view an existing trip, a user would launch the app, navigate to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Upcoming trips</pc> page, and select the trip.</source>
          <target>To view an existing trip, a user would launch the app, navigate to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Upcoming trips</pc> page, and select the trip.</target>
        </segment>
      </unit>
      <unit id="122">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>Using voice commands through <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Cortana</pc>, the user can instead just say, "Adventure Works add a trip" or "Add a trip on Adventure Works" to launch the app and navigate to the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">New trip</pc> page.</source>
          <target>Using voice commands through <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Cortana</pc>, the user can instead just say, "Adventure Works add a trip" or "Add a trip on Adventure Works" to launch the app and navigate to the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">New trip</pc> page.</target>
        </segment>
      </unit>
      <unit id="123">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>In turn, saying "Adventure Works, show my trip to London" will launch the app and navigate to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Trip</pc> detail page, shown here.</source>
          <target>In turn, saying "Adventure Works, show my trip to London" will launch the app and navigate to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Trip</pc> detail page, shown here.</target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source>cortana launching foreground app</source>
          <target>cortana launching foreground app</target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source>These are the basic steps to add voice-command functionality and integrate Cortana with your app using speech or keyboard input:</source>
          <target>These are the basic steps to add voice-command functionality and integrate Cortana with your app using speech or keyboard input:</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source>Create a VCD file.</source>
          <target>Create a VCD file.</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source>This is an XML document that defines all the spoken commands that the user can say to initiate actions or invoke commands when activating your app.</source>
          <target>This is an XML document that defines all the spoken commands that the user can say to initiate actions or invoke commands when activating your app.</target>
        </segment>
      </unit>
      <unit id="128">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn706593)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>See <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">VCD elements and attributes v1.2</pc></pc>.</source>
          <target>See <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">VCD elements and attributes v1.2</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source>Register the command sets in the VCD file when the app is launched.</source>
          <target>Register the command sets in the VCD file when the app is launched.</target>
        </segment>
      </unit>
      <unit id="130">
        <segment state="initial">
          <source>Handle the activation-by-voice-command, navigation within the app, and execution of the command.</source>
          <target>Handle the activation-by-voice-command, navigation within the app, and execution of the command.</target>
        </segment>
      </unit>
      <unit id="131">
        <segment state="initial">
          <source>Prerequisites:</source>
          <target>Prerequisites:</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source>If you're new to developing Universal Windows Platform (UWP) apps, have a look through these topics to get familiar with the technologies discussed here.</source>
          <target>If you're new to developing Universal Windows Platform (UWP) apps, have a look through these topics to get familiar with the technologies discussed here.</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source>Create your first app</source>
          <target>Create your first app</target>
        </segment>
      </unit>
      <unit id="134">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/mt185584)</data>
        </originalData>
        <segment state="initial">
          <source>Learn about events with <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Events and routed events overview</pc></source>
          <target>Learn about events with <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Events and routed events overview</pc></target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source>User experience guidelines:</source>
          <target>User experience guidelines:</target>
        </segment>
      </unit>
      <unit id="136">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn974233)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/dn596121)</data>
        </originalData>
        <segment state="initial">
          <source>See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Cortana design guidelines</pc> for info about how to integrate your app with <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Cortana</pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Speech design guidelines</pc> for helpful tips on designing a useful and engaging speech-enabled app.</source>
          <target>See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Cortana design guidelines</pc> for info about how to integrate your app with <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Cortana</pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Speech design guidelines</pc> for helpful tips on designing a useful and engaging speech-enabled app.</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source>Create a new solution with project in Visual Studio</source>
          <target>Create a new solution with project in Visual Studio</target>
        </segment>
      </unit>
      <unit id="138">
        <segment state="initial">
          <source>Launch Microsoft Visual Studio 2015.</source>
          <target>Launch Microsoft Visual Studio 2015.</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source>The Visual Studio 2015 Start page appears.</source>
          <target>The Visual Studio 2015 Start page appears.</target>
        </segment>
      </unit>
      <unit id="140">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5"> &gt; </data>
          <data id="id6">**</data>
          <data id="id7">**</data>
        </originalData>
        <segment state="initial">
          <source>On the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">File</pc> menu, select <pc dataRefEnd="id4" dataRefStart="id3" id="p2">New</pc><ph dataRef="id5" id="ph1" /><pc dataRefEnd="id7" dataRefStart="id6" id="p3">Project</pc>.</source>
          <target>On the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">File</pc> menu, select <pc dataRefEnd="id4" dataRefStart="id3" id="p2">New</pc><ph dataRef="id5" id="ph1" /><pc dataRefEnd="id7" dataRefStart="id6" id="p3">Project</pc>.</target>
        </segment>
      </unit>
      <unit id="141">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">New Project</pc> dialog appears.</source>
          <target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">New Project</pc> dialog appears.</target>
        </segment>
      </unit>
      <unit id="142">
        <segment state="initial">
          <source>The left pane of the dialog lets you select the type of templates to display.</source>
          <target>The left pane of the dialog lets you select the type of templates to display.</target>
        </segment>
      </unit>
      <unit id="143">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">\#</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
        </originalData>
        <segment state="initial">
          <source>In the left pane, expand <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Installed &gt; Templates &gt; Visual C<ph dataRef="id3" id="ph1" /> &gt; Windows</pc>, then pick the <pc dataRefEnd="id5" dataRefStart="id4" id="p2">Universal</pc> template group.</source>
          <target>In the left pane, expand <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Installed &gt; Templates &gt; Visual C<ph dataRef="id3" id="ph1" /> &gt; Windows</pc>, then pick the <pc dataRefEnd="id5" dataRefStart="id4" id="p2">Universal</pc> template group.</target>
        </segment>
      </unit>
      <unit id="144">
        <segment state="initial">
          <source>The dialog's center pane displays a list of project templates for Universal Windows Platform (UWP) apps.</source>
          <target>The dialog's center pane displays a list of project templates for Universal Windows Platform (UWP) apps.</target>
        </segment>
      </unit>
      <unit id="145">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>In the center pane, select the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Blank App (Universal Windows)</pc> template.</source>
          <target>In the center pane, select the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Blank App (Universal Windows)</pc> template.</target>
        </segment>
      </unit>
      <unit id="146">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Blank App</pc> template creates a minimal UWP app that compiles and runs, but contains no user-interface controls or data.</source>
          <target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Blank App</pc> template creates a minimal UWP app that compiles and runs, but contains no user-interface controls or data.</target>
        </segment>
      </unit>
      <unit id="147">
        <segment state="initial">
          <source>You add controls to the app over the course of this tutorial.</source>
          <target>You add controls to the app over the course of this tutorial.</target>
        </segment>
      </unit>
      <unit id="148">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Name</pc> text box, type your project name.</source>
          <target>In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Name</pc> text box, type your project name.</target>
        </segment>
      </unit>
      <unit id="149">
        <segment state="initial">
          <source>For this example, we use "AdventureWorks".</source>
          <target>For this example, we use "AdventureWorks".</target>
        </segment>
      </unit>
      <unit id="150">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">OK</pc> to create the project.</source>
          <target>Click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">OK</pc> to create the project.</target>
        </segment>
      </unit>
      <unit id="151">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Microsoft Visual Studio creates your project and displays it in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Solution Explorer</pc>.</source>
          <target>Microsoft Visual Studio creates your project and displays it in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Solution Explorer</pc>.</target>
        </segment>
      </unit>
      <unit id="152">
        <segment state="initial">
          <source>Add image assets to project and specify them in the app manifest</source>
          <target>Add image assets to project and specify them in the app manifest</target>
        </segment>
      </unit>
      <unit id="153">
        <segment state="initial">
          <source>UWP apps can automatically select the most appropriate images based on specific settings and device capabilities (high contrast, effective pixels, locale, and so on).</source>
          <target>UWP apps can automatically select the most appropriate images based on specific settings and device capabilities (high contrast, effective pixels, locale, and so on).</target>
        </segment>
      </unit>
      <unit id="154">
        <segment state="initial">
          <source>All you need to do is provide the images and ensure you use the appropriate naming convention and folder organization within the app project for the different resource versions.</source>
          <target>All you need to do is provide the images and ensure you use the appropriate naming convention and folder organization within the app project for the different resource versions.</target>
        </segment>
      </unit>
      <unit id="155">
        <segment state="initial">
          <source>If you don't provide the recommended resource versions, accessibility, localization, and image quality can suffer, depending on the user's preferences, abilities, device type, and location.</source>
          <target>If you don't provide the recommended resource versions, accessibility, localization, and image quality can suffer, depending on the user's preferences, abilities, device type, and location.</target>
        </segment>
      </unit>
      <unit id="156">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/windows/uwp/controls-and-patterns/tiles-and-notifications-app-assets)</data>
        </originalData>
        <segment state="initial">
          <source>For more detail on image resources for high contrast and scale factors, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Guidelines for tile and icon assets</pc>.</source>
          <target>For more detail on image resources for high contrast and scale factors, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Guidelines for tile and icon assets</pc>.</target>
        </segment>
      </unit>
      <unit id="157">
        <segment state="initial">
          <source>You name resources using qualifiers.</source>
          <target>You name resources using qualifiers.</target>
        </segment>
      </unit>
      <unit id="158">
        <segment state="initial">
          <source>Resource qualifiers are folder and filename modifiers that identify the context in which a particular version of a resource should be used.</source>
          <target>Resource qualifiers are folder and filename modifiers that identify the context in which a particular version of a resource should be used.</target>
        </segment>
      </unit>
      <unit id="159">
        <originalData>
          <data id="id1">`foldername/qualifiername-value[_qualifiername-value]/filename.qualifiername-value[_qualifiername-value].ext`</data>
        </originalData>
        <segment state="initial">
          <source>The standard naming convention is <ph dataRef="id1" id="ph1" />.</source>
          <target>The standard naming convention is <ph dataRef="id1" id="ph1" />.</target>
        </segment>
      </unit>
      <unit id="160">
        <originalData>
          <data id="id1">`images/en-US/logo.scale-100_contrast-white.png`</data>
          <data id="id2">`images/logo.png`</data>
        </originalData>
        <segment state="initial">
          <source>For example, <ph dataRef="id1" id="ph1" />, which can be referred to in code using just the root folder and the filename: <ph dataRef="id2" id="ph2" />.</source>
          <target>For example, <ph dataRef="id1" id="ph1" />, which can be referred to in code using just the root folder and the filename: <ph dataRef="id2" id="ph2" />.</target>
        </segment>
      </unit>
      <unit id="161">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/xaml/hh965324.aspx)</data>
        </originalData>
        <segment state="initial">
          <source>See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">How to name resources using qualifiers</pc>.</source>
          <target>See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">How to name resources using qualifiers</pc>.</target>
        </segment>
      </unit>
      <unit id="162">
        <originalData>
          <data id="id1">`en-US\resources.resw`</data>
          <data id="id2">`logo.scale-100.png`</data>
        </originalData>
        <segment state="initial">
          <source>We recommend that you mark the default language on string resource files (such as <ph dataRef="id1" id="ph1" />) and the default scale factor on images (such as <ph dataRef="id2" id="ph2" />), even if you do not currently plan to provide localized or multiple resolution resources.</source>
          <target>We recommend that you mark the default language on string resource files (such as <ph dataRef="id1" id="ph1" />) and the default scale factor on images (such as <ph dataRef="id2" id="ph2" />), even if you do not currently plan to provide localized or multiple resolution resources.</target>
        </segment>
      </unit>
      <unit id="163">
        <segment state="initial">
          <source>However, at a minimum, we recommend that you provide assets for 100, 200, and 400 scale factors.</source>
          <target>However, at a minimum, we recommend that you provide assets for 100, 200, and 400 scale factors.</target>
        </segment>
      </unit>
      <unit id="164">
        <segment state="initial">
          <source>*Important</source>
          <target>*Important</target>
        </segment>
      </unit>
      <unit id="165">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>The app icon used in the title area of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Cortana</pc> canvas is the Square44x44Logo icon specified in the "Package.appxmanifest" file.</source>
          <target>The app icon used in the title area of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Cortana</pc> canvas is the Square44x44Logo icon specified in the "Package.appxmanifest" file.</target>
        </segment>
      </unit>
      <unit id="166">
        <segment state="initial">
          <source>Create a VCD file</source>
          <target>Create a VCD file</target>
        </segment>
      </unit>
      <unit id="167">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>In Visual Studio, right-click your primary project name, select <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Add &gt; New Item</pc>.</source>
          <target>In Visual Studio, right-click your primary project name, select <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Add &gt; New Item</pc>.</target>
        </segment>
      </unit>
      <unit id="168">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Add an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">XML File</pc>.</source>
          <target>Add an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">XML File</pc>.</target>
        </segment>
      </unit>
      <unit id="169">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn706593)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>Type a name for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">VCD</pc></pc> file (for this example, "AdventureWorksCommands.xml"), and click Add.</source>
          <target>Type a name for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">VCD</pc></pc> file (for this example, "AdventureWorksCommands.xml"), and click Add.</target>
        </segment>
      </unit>
      <unit id="170">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/dn706593)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>In <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Solution Explorer</pc>, select the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">VCD</pc></pc> file.</source>
          <target>In <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Solution Explorer</pc>, select the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">VCD</pc></pc> file.</target>
        </segment>
      </unit>
      <unit id="171">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
          <data id="id9">**</data>
          <data id="id10">**</data>
        </originalData>
        <segment state="initial">
          <source>In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Properties</pc> window, set <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Build action</pc> to <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Content</pc>, and then set <pc dataRefEnd="id8" dataRefStart="id7" id="p4">Copy to output directory</pc> to <pc dataRefEnd="id10" dataRefStart="id9" id="p5">Copy if newer</pc>.</source>
          <target>In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Properties</pc> window, set <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Build action</pc> to <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Content</pc>, and then set <pc dataRefEnd="id8" dataRefStart="id7" id="p4">Copy to output directory</pc> to <pc dataRefEnd="id10" dataRefStart="id9" id="p5">Copy if newer</pc>.</target>
        </segment>
      </unit>
      <unit id="172">
        <segment state="initial">
          <source>Edit the VCD file</source>
          <target>Edit the VCD file</target>
        </segment>
      </unit>
      <unit id="173">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">`http://schemas.microsoft.com/voicecommands/1.2`</data>
        </originalData>
        <segment state="initial">
          <source>Add a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">VoiceCommands</pc> element with an <pc dataRefEnd="id4" dataRefStart="id3" id="p2">xmlns</pc> attribute pointing to <ph dataRef="id5" id="ph1" />.</source>
          <target>Add a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">VoiceCommands</pc> element with an <pc dataRefEnd="id4" dataRefStart="id3" id="p2">xmlns</pc> attribute pointing to <ph dataRef="id5" id="ph1" />.</target>
        </segment>
      </unit>
      <unit id="174">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn722331)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>For each language supported by your app, create a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CommandSet</pc></pc> element that contains the voice commands supported by your app.</source>
          <target>For each language supported by your app, create a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CommandSet</pc></pc> element that contains the voice commands supported by your app.</target>
        </segment>
      </unit>
      <unit id="175">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn722331)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/dn722331)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source>You can declare multiple <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CommandSet</pc></pc> elements, each with a different <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">xml:lang</pc></pc> attribute so your app to be used in different markets.</source>
          <target>You can declare multiple <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CommandSet</pc></pc> elements, each with a different <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">xml:lang</pc></pc> attribute so your app to be used in different markets.</target>
        </segment>
      </unit>
      <unit id="176">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn722331)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/dn722331)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source>For example, an app for the United States might have a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CommandSet</pc></pc> for English and a <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">CommandSet</pc></pc> for Spanish.</source>
          <target>For example, an app for the United States might have a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CommandSet</pc></pc> for English and a <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">CommandSet</pc></pc> for Spanish.</target>
        </segment>
      </unit>
      <unit id="177">
        <segment state="initial">
          <source>Caution</source>
          <target>Caution</target>
        </segment>
      </unit>
      <unit id="178">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn722331)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>To activate an app and initiate an action using a voice command, the app must register a VCD file that contains a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CommandSet</pc></pc> with a language that matches the speech language selected by the user for their device.</source>
          <target>To activate an app and initiate an action using a voice command, the app must register a VCD file that contains a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CommandSet</pc></pc> with a language that matches the speech language selected by the user for their device.</target>
        </segment>
      </unit>
      <unit id="179">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>The speech language is located in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Settings &gt; System &gt; Speech &gt; Speech Language</pc>.</source>
          <target>The speech language is located in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Settings &gt; System &gt; Speech &gt; Speech Language</pc>.</target>
        </segment>
      </unit>
      <unit id="180">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Add a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Command</pc> element for each command you want to support.</source>
          <target>Add a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Command</pc> element for each command you want to support.</target>
        </segment>
      </unit>
      <unit id="181">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/dn706593)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>Each <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Command</pc> declared in a <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">VCD</pc></pc> file must include this information:</source>
          <target>Each <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Command</pc> declared in a <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">VCD</pc></pc> file must include this information:</target>
        </segment>
      </unit>
      <unit id="182">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>A <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Name</pc> attribute that your application uses to identify the voice command at runtime.</source>
          <target>A <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Name</pc> attribute that your application uses to identify the voice command at runtime.</target>
        </segment>
      </unit>
      <unit id="183">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>An <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Example</pc> element that contains a phrase describing how a user can invoke the command.</source>
          <target>An <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Example</pc> element that contains a phrase describing how a user can invoke the command.</target>
        </segment>
      </unit>
      <unit id="184">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Cortana</pc> shows this example when the user says "What can I say?", "Help", or they tap <pc dataRefEnd="id4" dataRefStart="id3" id="p2">See more</pc>.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Cortana</pc> shows this example when the user says "What can I say?", "Help", or they tap <pc dataRefEnd="id4" dataRefStart="id3" id="p2">See more</pc>.</target>
        </segment>
      </unit>
      <unit id="185">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>A <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ListenFor</pc> element that contains the words or phrases that your app recognizes as a command.</source>
          <target>A <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ListenFor</pc> element that contains the words or phrases that your app recognizes as a command.</target>
        </segment>
      </unit>
      <unit id="186">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>Each <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ListenFor</pc> element can contain references to one or more <pc dataRefEnd="id4" dataRefStart="id3" id="p2">PhraseList</pc> elements that contain specific words relevant to the command.</source>
          <target>Each <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ListenFor</pc> element can contain references to one or more <pc dataRefEnd="id4" dataRefStart="id3" id="p2">PhraseList</pc> elements that contain specific words relevant to the command.</target>
        </segment>
      </unit>
      <unit id="187">
        <segment state="initial">
          <source>Note</source>
          <target>Note</target>
        </segment>
      </unit>
      <unit id="188">
        <originalData>
          <data id="id1">  **</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ListenFor</pc> elements cannot be programmatically modified.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ListenFor</pc> elements cannot be programmatically modified.</target>
        </segment>
      </unit>
      <unit id="189">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>However, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">PhraseList</pc> elements associated with <pc dataRefEnd="id4" dataRefStart="id3" id="p2">ListenFor</pc> elements can be programmatically modified.</source>
          <target>However, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">PhraseList</pc> elements associated with <pc dataRefEnd="id4" dataRefStart="id3" id="p2">ListenFor</pc> elements can be programmatically modified.</target>
        </segment>
      </unit>
      <unit id="190">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Applications should modify the content of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">PhraseList</pc> at runtime based on the data set generated as the user uses the app.</source>
          <target>Applications should modify the content of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">PhraseList</pc> at runtime based on the data set generated as the user uses the app.</target>
        </segment>
      </unit>
      <unit id="191">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](dynamically-modify-voice-command-definition--vcd--phrase-lists.md)</data>
        </originalData>
        <segment state="initial">
          <source>See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Dynamically modify Voice Command Definition (VCD) phrase lists</pc>.</source>
          <target>See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Dynamically modify Voice Command Definition (VCD) phrase lists</pc>.</target>
        </segment>
      </unit>
      <unit id="192">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>A <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Feedback</pc> element that contains the text for <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Cortana</pc> to display and speak as the application is launched.</source>
          <target>A <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Feedback</pc> element that contains the text for <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Cortana</pc> to display and speak as the application is launched.</target>
        </segment>
      </unit>
      <unit id="193">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>A <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Navigate</pc> element indicates that the voice command activates the app to the foreground.</source>
          <target>A <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Navigate</pc> element indicates that the voice command activates the app to the foreground.</target>
        </segment>
      </unit>
      <unit id="194">
        <originalData>
          <data id="id1">```showTripToDestination```</data>
        </originalData>
        <segment state="initial">
          <source>In this example, the <ph dataRef="id1" id="ph1" /> command is a foreground task.</source>
          <target>In this example, the <ph dataRef="id1" id="ph1" /> command is a foreground task.</target>
        </segment>
      </unit>
      <unit id="195">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>A <pc dataRefEnd="id2" dataRefStart="id1" id="p1">VoiceCommandService</pc> element indicates that the voice command activates the app in the background.</source>
          <target>A <pc dataRefEnd="id2" dataRefStart="id1" id="p1">VoiceCommandService</pc> element indicates that the voice command activates the app in the background.</target>
        </segment>
      </unit>
      <unit id="196">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/dn934779)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source>The value of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Target</pc> attribute of this element should match the value of the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Name</pc> attribute of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">uap:AppService</pc></pc> element in the package.appxmanifest file.</source>
          <target>The value of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Target</pc> attribute of this element should match the value of the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Name</pc> attribute of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">uap:AppService</pc></pc> element in the package.appxmanifest file.</target>
        </segment>
      </unit>
      <unit id="197">
        <originalData>
          <data id="id1">```whenIsTripToDestination```</data>
          <data id="id2">```cancelTripToDestination```</data>
        </originalData>
        <segment state="initial">
          <source>In this example, the <ph dataRef="id1" id="ph1" /> and <ph dataRef="id2" id="ph2" /> commands are background tasks that specify the name of the app service as "AdventureWorksVoiceCommandService".</source>
          <target>In this example, the <ph dataRef="id1" id="ph1" /> and <ph dataRef="id2" id="ph2" /> commands are background tasks that specify the name of the app service as "AdventureWorksVoiceCommandService".</target>
        </segment>
      </unit>
      <unit id="198">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn706593)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>For more detail, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">VCD elements and attributes v1.2</pc></pc> reference.</source>
          <target>For more detail, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">VCD elements and attributes v1.2</pc></pc> reference.</target>
        </segment>
      </unit>
      <unit id="199">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn706593)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>Here's a portion of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">VCD</pc></pc> file that defines the en-us voice commands for the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Adventure Works</pc> app.</source>
          <target>Here's a portion of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">VCD</pc></pc> file that defines the en-us voice commands for the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Adventure Works</pc> app.</target>
        </segment>
      </unit>
      <unit id="200">
        <segment state="initial">
          <source>Install the VCD commands</source>
          <target>Install the VCD commands</target>
        </segment>
      </unit>
      <unit id="201">
        <segment state="initial">
          <source>Your app must run once to install the VCD.</source>
          <target>Your app must run once to install the VCD.</target>
        </segment>
      </unit>
      <unit id="202">
        <segment state="initial">
          <source>Note</source>
          <target>Note</target>
        </segment>
      </unit>
      <unit id="203">
        <segment state="initial">
          <source>Voice command data is not preserved across app installations.</source>
          <target>Voice command data is not preserved across app installations.</target>
        </segment>
      </unit>
      <unit id="204">
        <segment state="initial">
          <source>To ensure the voice command data for your app remains intact, consider initializing your VCD file each time your app is launched or activated, or maintain a setting that indicates if the VCD is currently installed.</source>
          <target>To ensure the voice command data for your app remains intact, consider initializing your VCD file each time your app is launched or activated, or maintain a setting that indicates if the VCD is currently installed.</target>
        </segment>
      </unit>
      <unit id="205">
        <segment state="initial">
          <source>In the "app.xaml.cs" file:</source>
          <target>In the "app.xaml.cs" file:</target>
        </segment>
      </unit>
      <unit id="206">
        <segment state="initial">
          <source>Add the following using directive:</source>
          <target>Add the following using directive:</target>
        </segment>
      </unit>
      <unit id="207">
        <segment state="initial">
          <source>Mark the "OnLaunched" method with the async modifier.</source>
          <target>Mark the "OnLaunched" method with the async modifier.</target>
        </segment>
      </unit>
      <unit id="208">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn708205)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/br242335)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source>Call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">InstallCommandDefinitionsFromStorageFileAsync</pc></pc> in the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">OnLaunched</pc></pc> handler to register the voice commands that the system should recognize.</source>
          <target>Call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">InstallCommandDefinitionsFromStorageFileAsync</pc></pc> in the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">OnLaunched</pc></pc> handler to register the voice commands that the system should recognize.</target>
        </segment>
      </unit>
      <unit id="209">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227171)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>In the Adventure Works sample, we first define a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StorageFile</pc></pc> object.</source>
          <target>In the Adventure Works sample, we first define a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StorageFile</pc></pc> object.</target>
        </segment>
      </unit>
      <unit id="210">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227272)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>We then call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetFileAsync</pc></pc> to initialize it with our "AdventureWorksCommands.xml" file.</source>
          <target>We then call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetFileAsync</pc></pc> to initialize it with our "AdventureWorksCommands.xml" file.</target>
        </segment>
      </unit>
      <unit id="211">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227171)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/dn708205)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source>This <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StorageFile</pc></pc> object is then passed to <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">InstallCommandDefinitionsFromStorageFileAsync</pc></pc>.</source>
          <target>This <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StorageFile</pc></pc> object is then passed to <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">InstallCommandDefinitionsFromStorageFileAsync</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="212">
        <segment state="initial">
          <source>Handle activation and execute voice commands</source>
          <target>Handle activation and execute voice commands</target>
        </segment>
      </unit>
      <unit id="213">
        <segment state="initial">
          <source>Specify how your app responds to subsequent voice command activations (after it has been launched at least once and the voice command sets have been installed).</source>
          <target>Specify how your app responds to subsequent voice command activations (after it has been launched at least once and the voice command sets have been installed).</target>
        </segment>
      </unit>
      <unit id="214">
        <segment state="initial">
          <source>Confirm that your app was activated by a voice command.</source>
          <target>Confirm that your app was activated by a voice command.</target>
        </segment>
      </unit>
      <unit id="215">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br242330)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/br224727)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
          <data id="id9">[</data>
          <data id="id10">](https://msdn.microsoft.com/library/windows/apps/br224728)</data>
          <data id="id11">**</data>
          <data id="id12">**</data>
          <data id="id13">[</data>
          <data id="id14">](https://msdn.microsoft.com/library/windows/apps/br224693)</data>
          <data id="id15">**</data>
          <data id="id16">**</data>
        </originalData>
        <segment state="initial">
          <source>Override the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Application.OnActivated</pc></pc> event and check whether <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">IActivatedEventArgs</pc></pc>.<pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">Kind</pc></pc> is <pc dataRefEnd="id14" dataRefStart="id13" id="p7"><pc dataRefEnd="id16" dataRefStart="id15" id="p8">VoiceCommand</pc></pc>.</source>
          <target>Override the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Application.OnActivated</pc></pc> event and check whether <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">IActivatedEventArgs</pc></pc>.<pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">Kind</pc></pc> is <pc dataRefEnd="id14" dataRefStart="id13" id="p7"><pc dataRefEnd="id16" dataRefStart="id15" id="p8">VoiceCommand</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="216">
        <segment state="initial">
          <source>Determine the name of the command and what was spoken.</source>
          <target>Determine the name of the command and what was spoken.</target>
        </segment>
      </unit>
      <unit id="217">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn609755)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/br224727)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
          <data id="id9">[</data>
          <data id="id10">](https://msdn.microsoft.com/library/windows/apps/dn609758)</data>
          <data id="id11">**</data>
          <data id="id12">**</data>
          <data id="id13">[</data>
          <data id="id14">](https://msdn.microsoft.com/library/windows/apps/dn631432)</data>
          <data id="id15">**</data>
          <data id="id16">**</data>
        </originalData>
        <segment state="initial">
          <source>Get a reference to a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">VoiceCommandActivatedEventArgs</pc></pc> object from the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">IActivatedEventArgs</pc></pc> and query the <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">Result</pc></pc> property for a <pc dataRefEnd="id14" dataRefStart="id13" id="p7"><pc dataRefEnd="id16" dataRefStart="id15" id="p8">SpeechRecognitionResult</pc></pc> object.</source>
          <target>Get a reference to a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">VoiceCommandActivatedEventArgs</pc></pc> object from the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">IActivatedEventArgs</pc></pc> and query the <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">Result</pc></pc> property for a <pc dataRefEnd="id14" dataRefStart="id13" id="p7"><pc dataRefEnd="id16" dataRefStart="id15" id="p8">SpeechRecognitionResult</pc></pc> object.</target>
        </segment>
      </unit>
      <unit id="218">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn631441)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/dn631443)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source>To determine what the user said, check the value of <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Text</pc></pc> or the semantic properties of the recognized phrase in the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">SpeechRecognitionSemanticInterpretation</pc></pc> dictionary.</source>
          <target>To determine what the user said, check the value of <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Text</pc></pc> or the semantic properties of the recognized phrase in the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">SpeechRecognitionSemanticInterpretation</pc></pc> dictionary.</target>
        </segment>
      </unit>
      <unit id="219">
        <segment state="initial">
          <source>Take the appropriate action in your app, such as navigating to the desired page.</source>
          <target>Take the appropriate action in your app, such as navigating to the desired page.</target>
        </segment>
      </unit>
      <unit id="220">
        <segment state="initial">
          <source>For this example, we refer back to the VCD in Step 3: Edit the VCD file.</source>
          <target>For this example, we refer back to the VCD in Step 3: Edit the VCD file.</target>
        </segment>
      </unit>
      <unit id="221">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn631438)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>Once we get the speech-recognition result for the voice command, we get the command name from the first value in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">RulePath</pc></pc> array.</source>
          <target>Once we get the speech-recognition result for the voice command, we get the command name from the first value in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">RulePath</pc></pc> array.</target>
        </segment>
      </unit>
      <unit id="222">
        <segment state="initial">
          <source>As the VCD file defined more than one possible voice command, we need to compare the value against the command names in the VCD and take the appropriate action.</source>
          <target>As the VCD file defined more than one possible voice command, we need to compare the value against the command names in the VCD and take the appropriate action.</target>
        </segment>
      </unit>
      <unit id="223">
        <segment state="initial">
          <source>The most common action an application can take is to navigate to a page with content relevant to the context of the voice command.</source>
          <target>The most common action an application can take is to navigate to a page with content relevant to the context of the voice command.</target>
        </segment>
      </unit>
      <unit id="224">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>For this example, we navigate to a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">TripPage</pc> page and pass in the value of the voice command, how the command was input, and the recognized "destination" phrase (if applicable).</source>
          <target>For this example, we navigate to a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">TripPage</pc> page and pass in the value of the voice command, how the command was input, and the recognized "destination" phrase (if applicable).</target>
        </segment>
      </unit>
      <unit id="225">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn631432)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>Alternatively, the app could send a navigation parameter to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SpeechRecognitionResult</pc></pc> when navigating to the page.</source>
          <target>Alternatively, the app could send a navigation parameter to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SpeechRecognitionResult</pc></pc> when navigating to the page.</target>
        </segment>
      </unit>
      <unit id="226">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn631445)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>You can find out whether the voice command that launched your app was actually spoken, or whether it was typed in as text, from the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SpeechRecognitionSemanticInterpretation.Properties</pc></pc> dictionary using the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">commandMode</pc> key.</source>
          <target>You can find out whether the voice command that launched your app was actually spoken, or whether it was typed in as text, from the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SpeechRecognitionSemanticInterpretation.Properties</pc></pc> dictionary using the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">commandMode</pc> key.</target>
        </segment>
      </unit>
      <unit id="227">
        <segment state="initial">
          <source>The value of that key will be either "voice" or "text".</source>
          <target>The value of that key will be either "voice" or "text".</target>
        </segment>
      </unit>
      <unit id="228">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn278951)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>If the value of the key is "voice", consider using speech synthesis (<pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Media.SpeechSynthesis</pc></pc>) in your app to provide the user with spoken feedback.</source>
          <target>If the value of the key is "voice", consider using speech synthesis (<pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Media.SpeechSynthesis</pc></pc>) in your app to provide the user with spoken feedback.</target>
        </segment>
      </unit>
      <unit id="229">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn631445)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
          <data id="id9">**</data>
          <data id="id10">**</data>
        </originalData>
        <segment state="initial">
          <source>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SpeechRecognitionSemanticInterpretation.Properties</pc></pc> to find out the content spoken in the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">PhraseList</pc> or <pc dataRefEnd="id8" dataRefStart="id7" id="p4">PhraseTopic</pc> constraints of a <pc dataRefEnd="id10" dataRefStart="id9" id="p5">ListenFor</pc> element.</source>
          <target>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SpeechRecognitionSemanticInterpretation.Properties</pc></pc> to find out the content spoken in the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">PhraseList</pc> or <pc dataRefEnd="id8" dataRefStart="id7" id="p4">PhraseTopic</pc> constraints of a <pc dataRefEnd="id10" dataRefStart="id9" id="p5">ListenFor</pc> element.</target>
        </segment>
      </unit>
      <unit id="230">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>The dictionary key is the value of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Label</pc> attribute of the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">PhraseList</pc> or <pc dataRefEnd="id6" dataRefStart="id5" id="p3">PhraseTopic</pc> element.</source>
          <target>The dictionary key is the value of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Label</pc> attribute of the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">PhraseList</pc> or <pc dataRefEnd="id6" dataRefStart="id5" id="p3">PhraseTopic</pc> element.</target>
        </segment>
      </unit>
      <unit id="231">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Here, we show how to access the value of <pc dataRefEnd="id2" dataRefStart="id1" id="p1">{destination}</pc> phrase.</source>
          <target>Here, we show how to access the value of <pc dataRefEnd="id2" dataRefStart="id1" id="p1">{destination}</pc> phrase.</target>
        </segment>
      </unit>
      <unit id="232">
        <segment state="initial">
          <source>Related articles</source>
          <target>Related articles</target>
        </segment>
      </unit>
      <unit id="233">
        <segment state="initial">
          <source>Developers</source>
          <target>Developers</target>
        </segment>
      </unit>
      <unit id="234">
        <segment state="initial">
          <source>Cortana interactions</source>
          <target>Cortana interactions</target>
        </segment>
      </unit>
      <unit id="235">
        <segment state="initial">
          <source>Define custom recognition constraints</source>
          <target>Define custom recognition constraints</target>
        </segment>
      </unit>
      <unit id="236">
        <segment state="initial">
          <source>VCD elements and attributes v1.2</source>
          <target>VCD elements and attributes v1.2</target>
        </segment>
      </unit>
      <unit id="237">
        <segment state="initial">
          <source>Designers</source>
          <target>Designers</target>
        </segment>
      </unit>
      <unit id="238">
        <segment state="initial">
          <source>Cortana design guidelines</source>
          <target>Cortana design guidelines</target>
        </segment>
      </unit>
      <unit id="239">
        <segment state="initial">
          <source>Speech design guidelines</source>
          <target>Speech design guidelines</target>
        </segment>
      </unit>
      <unit id="240">
        <segment state="initial">
          <source>Samples</source>
          <target>Samples</target>
        </segment>
      </unit>
      <unit id="241">
        <segment state="initial">
          <source>Cortana voice command sample</source>
          <target>Cortana voice command sample</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>