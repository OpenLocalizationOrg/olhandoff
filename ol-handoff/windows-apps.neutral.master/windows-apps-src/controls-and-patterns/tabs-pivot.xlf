<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="zh-cn" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">windows-apps-src\controls-and-patterns\tabs-pivot.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">6585a75f08a64b7bb8f27fd32a227fa49bb0f3f4</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-781aacf</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>Tabs and pivots are enable users to navigate between frequently accessed content.</source>
          <target>Tabs and pivots are enable users to navigate between frequently accessed content.</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>Tabs and pivots</source>
          <target>Tabs and pivots</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>Pivot and tabs</source>
          <target>Pivot and tabs</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source>Pivot controls and the tabs pattern are used for navigating frequently accessed, distinct content categories.</source>
          <target>Pivot controls and the tabs pattern are used for navigating frequently accessed, distinct content categories.</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source>The pivots and tabs are made of two or more content panes that have corresponding category headers.</source>
          <target>The pivots and tabs are made of two or more content panes that have corresponding category headers.</target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source>The headers persist on-screen and have a selection state that's clearly shown, so users are always aware of which category they're in.</source>
          <target>The headers persist on-screen and have a selection state that's clearly shown, so users are always aware of which category they're in.</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source>An examples of tabs</source>
          <target>An examples of tabs</target>
        </segment>
      </unit>
      <unit id="108">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.pivot.aspx)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>Tabs are a visual variant of Pivot and are built using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Pivot</pc></pc> control.</source>
          <target>Tabs are a visual variant of Pivot and are built using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Pivot</pc></pc> control.</target>
        </segment>
      </unit>
      <unit id="109">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://github.com/Microsoft/Windows-universal-samples/tree/master/Samples/XamlPivot)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">
              <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Code sample</pc>
            </pc> showing how to customize pivot is available on GitHub.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">
              <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Code sample</pc>
            </pc> showing how to customize pivot is available on GitHub.</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source>Important APIs</source>
          <target>Important APIs</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source>Pivot class</source>
          <target>Pivot class</target>
        </segment>
      </unit>
      <unit id="112">
        <segment state="initial">
          <source>The tab/pivot pattern</source>
          <target>The tab/pivot pattern</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source>When building an app with the tab/pivot pattern, there are a few key design variables to consider.</source>
          <target>When building an app with the tab/pivot pattern, there are a few key design variables to consider.</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source>Header labels.</source>
          <target>Header labels.</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source>Headers can have an icon with text or text only.</source>
          <target>Headers can have an icon with text or text only.</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source>Header alignment.</source>
          <target>Header alignment.</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source>Headers can be left-justified or centered.</source>
          <target>Headers can be left-justified or centered.</target>
        </segment>
      </unit>
      <unit id="118">
        <segment state="initial">
          <source>Top-level or sub-level navigation.</source>
          <target>Top-level or sub-level navigation.</target>
        </segment>
      </unit>
      <unit id="119">
        <segment state="initial">
          <source>Tabs/pivots can be used for either level of navigation.</source>
          <target>Tabs/pivots can be used for either level of navigation.</target>
        </segment>
      </unit>
      <unit id="120">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](nav-pane.md)</data>
        </originalData>
        <segment state="initial">
          <source>Optionally, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">navigation pane</pc> can serve as the primary level with tabs/pivots acting as secondary.</source>
          <target>Optionally, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">navigation pane</pc> can serve as the primary level with tabs/pivots acting as secondary.</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source>Touch gesture support.</source>
          <target>Touch gesture support.</target>
        </segment>
      </unit>
      <unit id="122">
        <segment state="initial">
          <source>For devices that support touch gestures, you can use one of two interaction sets to navigate between content categories:</source>
          <target>For devices that support touch gestures, you can use one of two interaction sets to navigate between content categories:</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source>Tap on a tab/pivot header to navigate to that category.</source>
          <target>Tap on a tab/pivot header to navigate to that category.</target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source>Swipe left or right on the content area to navigate to the adjacent category.</source>
          <target>Swipe left or right on the content area to navigate to the adjacent category.</target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source>Examples</source>
          <target>Examples</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source>Default Pivot control in Cortana Reminders.</source>
          <target>Default Pivot control in Cortana Reminders.</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source>An example of Pivot in Cortana Reminders</source>
          <target>An example of Pivot in Cortana Reminders</target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source>Tabs pattern in the Alarms &amp; Clock app.</source>
          <target>Tabs pattern in the Alarms &amp; Clock app.</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source>An example of tabs in Alarms and Clock</source>
          <target>An example of tabs in Alarms and Clock</target>
        </segment>
      </unit>
      <unit id="130">
        <segment state="initial">
          <source>Create a pivot control</source>
          <target>Create a pivot control</target>
        </segment>
      </unit>
      <unit id="131">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.pivot.aspx)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Pivot</pc></pc> control comes with the basic functionality described in this section.</source>
          <target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Pivot</pc></pc> control comes with the basic functionality described in this section.</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source>This XAML creates a basic pivot control with 3 sections of content.</source>
          <target>This XAML creates a basic pivot control with 3 sections of content.</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source>Pivot items</source>
          <target>Pivot items</target>
        </segment>
      </unit>
      <unit id="134">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.itemscontrol.aspx)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>Pivot is an <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ItemsControl</pc></pc>, so it can contain a collection of items of any type.</source>
          <target>Pivot is an <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ItemsControl</pc></pc>, so it can contain a collection of items of any type.</target>
        </segment>
      </unit>
      <unit id="135">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.pivotitem.aspx)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>Any item you add to the Pivot that is not explicitly a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PivotItem</pc></pc> is implicitly wrapped in a PivotItem.</source>
          <target>Any item you add to the Pivot that is not explicitly a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PivotItem</pc></pc> is implicitly wrapped in a PivotItem.</target>
        </segment>
      </unit>
      <unit id="136">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.itemscontrol.items.aspx)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>Because a Pivot is often used to navigate between pages of content, it's common to populate the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Items</pc></pc> collection directly with XAML UI elements.</source>
          <target>Because a Pivot is often used to navigate between pages of content, it's common to populate the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Items</pc></pc> collection directly with XAML UI elements.</target>
        </segment>
      </unit>
      <unit id="137">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.itemscontrol.itemssource.aspx)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>Or, you can set the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ItemsSource</pc></pc> property to a data source.</source>
          <target>Or, you can set the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ItemsSource</pc></pc> property to a data source.</target>
        </segment>
      </unit>
      <unit id="138">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.itemscontrol.itemtemplate.aspx)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.pivot.headertemplate.aspx)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source>Items bound in the ItemsSource can be of any type, but if they aren't explicitly PivotItems, you must define an <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ItemTemplate</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">HeaderTemplate</pc></pc> to specify how the items are displayed.</source>
          <target>Items bound in the ItemsSource can be of any type, but if they aren't explicitly PivotItems, you must define an <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ItemTemplate</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">HeaderTemplate</pc></pc> to specify how the items are displayed.</target>
        </segment>
      </unit>
      <unit id="139">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.pivot.selecteditem.aspx)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>You can use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SelectedItem</pc></pc> property to get or set the Pivot's active item.</source>
          <target>You can use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SelectedItem</pc></pc> property to get or set the Pivot's active item.</target>
        </segment>
      </unit>
      <unit id="140">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.pivot.selectedindex.aspx)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SelectedIndex</pc></pc> property to get or set the index of the active item.</source>
          <target>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SelectedIndex</pc></pc> property to get or set the index of the active item.</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source>Pivot headers</source>
          <target>Pivot headers</target>
        </segment>
      </unit>
      <unit id="142">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.pivot.leftheader.aspx)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.pivot.rightheader.aspx)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source>You can use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">LeftHeader</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">RightHeader</pc></pc> properties to add other controls to the Pivot header.</source>
          <target>You can use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">LeftHeader</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">RightHeader</pc></pc> properties to add other controls to the Pivot header.</target>
        </segment>
      </unit>
      <unit id="143">
        <segment state="initial">
          <source>Pivot interaction</source>
          <target>Pivot interaction</target>
        </segment>
      </unit>
      <unit id="144">
        <segment state="initial">
          <source>The control features these touch gesture interactions:</source>
          <target>The control features these touch gesture interactions:</target>
        </segment>
      </unit>
      <unit id="145">
        <segment state="initial">
          <source>Tapping on a pivot item header navigates to that header's section content.</source>
          <target>Tapping on a pivot item header navigates to that header's section content.</target>
        </segment>
      </unit>
      <unit id="146">
        <segment state="initial">
          <source>Swiping left or right on a pivot item header navigates to the adjacent section.</source>
          <target>Swiping left or right on a pivot item header navigates to the adjacent section.</target>
        </segment>
      </unit>
      <unit id="147">
        <segment state="initial">
          <source>Swiping left or right on section content navigates to the adjacent section.</source>
          <target>Swiping left or right on section content navigates to the adjacent section.</target>
        </segment>
      </unit>
      <unit id="148">
        <segment state="initial">
          <source>The control comes in two modes:</source>
          <target>The control comes in two modes:</target>
        </segment>
      </unit>
      <unit id="149">
        <segment state="initial">
          <source>Stationary</source>
          <target>Stationary</target>
        </segment>
      </unit>
      <unit id="150">
        <segment state="initial">
          <source>Pivots are stationary when all pivot headers fit within the allowed space.</source>
          <target>Pivots are stationary when all pivot headers fit within the allowed space.</target>
        </segment>
      </unit>
      <unit id="151">
        <segment state="initial">
          <source>Tapping on a pivot label navigates to the corresponding page, though the pivot itself will not move.</source>
          <target>Tapping on a pivot label navigates to the corresponding page, though the pivot itself will not move.</target>
        </segment>
      </unit>
      <unit id="152">
        <segment state="initial">
          <source>The active pivot is highlighted.</source>
          <target>The active pivot is highlighted.</target>
        </segment>
      </unit>
      <unit id="153">
        <segment state="initial">
          <source>Carousel</source>
          <target>Carousel</target>
        </segment>
      </unit>
      <unit id="154">
        <segment state="initial">
          <source>Pivots carousel when all pivot headers don't fit within the allowed space.</source>
          <target>Pivots carousel when all pivot headers don't fit within the allowed space.</target>
        </segment>
      </unit>
      <unit id="155">
        <segment state="initial">
          <source>Tapping a pivot label navigates to the corresponding page, and the active pivot label will carousel into the first position.</source>
          <target>Tapping a pivot label navigates to the corresponding page, and the active pivot label will carousel into the first position.</target>
        </segment>
      </unit>
      <unit id="156">
        <segment state="initial">
          <source>Pivot items in a carousel loop from last to first pivot section.</source>
          <target>Pivot items in a carousel loop from last to first pivot section.</target>
        </segment>
      </unit>
      <unit id="157">
        <segment state="initial">
          <source>Recommendations</source>
          <target>Recommendations</target>
        </segment>
      </unit>
      <unit id="158">
        <segment state="initial">
          <source>Base the alignment of tab/pivot headers on screen size.</source>
          <target>Base the alignment of tab/pivot headers on screen size.</target>
        </segment>
      </unit>
      <unit id="159">
        <segment state="initial">
          <source>For screen widths below 720 epx, center-aligning usually works better, while left-aligning for screen widths above 720 epx is recommended in most cases.</source>
          <target>For screen widths below 720 epx, center-aligning usually works better, while left-aligning for screen widths above 720 epx is recommended in most cases.</target>
        </segment>
      </unit>
      <unit id="160">
        <segment state="initial">
          <source>Avoid using more than 5 headers when using carousel (round-trip) mode, as looping more than 5 can become confusing.</source>
          <target>Avoid using more than 5 headers when using carousel (round-trip) mode, as looping more than 5 can become confusing.</target>
        </segment>
      </unit>
      <unit id="161">
        <segment state="initial">
          <source>Use the tabs pattern only if your pivot items have distinct icons.</source>
          <target>Use the tabs pattern only if your pivot items have distinct icons.</target>
        </segment>
      </unit>
      <unit id="162">
        <segment state="initial">
          <source>Include text in pivot item headers to help users understand the meaning of each pivot section.</source>
          <target>Include text in pivot item headers to help users understand the meaning of each pivot section.</target>
        </segment>
      </unit>
      <unit id="163">
        <segment state="initial">
          <source>Icons are not necessarily self-explanatory to all users.</source>
          <target>Icons are not necessarily self-explanatory to all users.</target>
        </segment>
      </unit>
      <unit id="164">
        <segment state="initial">
          <source>Related topics</source>
          <target>Related topics</target>
        </segment>
      </unit>
      <unit id="165">
        <segment state="initial">
          <source>Navigation design basics</source>
          <target>Navigation design basics</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>