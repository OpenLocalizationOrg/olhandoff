<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="zh-cn" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">windows-apps-src\gaming\work-with-networking-in-your-directx-game.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">63a40f5853740d1053449e1b1839f5b0232ce28e</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-781aacf</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>Networking for games</source>
          <target>Networking for games</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>Learn how to develop and incorporate networking features into your DirectX game.</source>
          <target>Learn how to develop and incorporate networking features into your DirectX game.</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>Networking for games</source>
          <target>Networking for games</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source>Updated for UWP apps on Windows 10.</source>
          <target>Updated for UWP apps on Windows 10.</target>
        </segment>
      </unit>
      <unit id="105">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
        </originalData>
        <segment state="initial">
          <source>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc></source>
          <target>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc></target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source>Learn how to develop and incorporate networking features into your DirectX game.</source>
          <target>Learn how to develop and incorporate networking features into your DirectX game.</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source>Concepts at a glance</source>
          <target>Concepts at a glance</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source>A variety of networking features can be used in your DirectX game, whether it is a simple standalone game to massively multi-player games.</source>
          <target>A variety of networking features can be used in your DirectX game, whether it is a simple standalone game to massively multi-player games.</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source>The simplest use of networking would be to store user names and game scores on a central network server.</source>
          <target>The simplest use of networking would be to store user names and game scores on a central network server.</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source>Networking APIs are needed in multi-player games that use the infrastructure (client-server or internet peer-to-peer) model and also by ad hoc (local peer-to-peer) games.</source>
          <target>Networking APIs are needed in multi-player games that use the infrastructure (client-server or internet peer-to-peer) model and also by ad hoc (local peer-to-peer) games.</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source>For server-based multi-player games, a central game server usually handles most of the game operations and the client game app is used for input, displaying graphics, playing audio, and other features.</source>
          <target>For server-based multi-player games, a central game server usually handles most of the game operations and the client game app is used for input, displaying graphics, playing audio, and other features.</target>
        </segment>
      </unit>
      <unit id="112">
        <segment state="initial">
          <source>The speed and latency of network transfers is a concern for a satisfactory game experience.</source>
          <target>The speed and latency of network transfers is a concern for a satisfactory game experience.</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source>For peer-to-peer games, each player's app handles the input and graphics.</source>
          <target>For peer-to-peer games, each player's app handles the input and graphics.</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source>In most cases, the game players are located in close proximity so that network latency should be lower but is still a concern.</source>
          <target>In most cases, the game players are located in close proximity so that network latency should be lower but is still a concern.</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source>How to discovery peers and establish a connection becomes a concern.</source>
          <target>How to discovery peers and establish a connection becomes a concern.</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source>For single-player games, a central Web server or service is often used to store user names, game scores, and other miscellaneous information.</source>
          <target>For single-player games, a central Web server or service is often used to store user names, game scores, and other miscellaneous information.</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source>In these games, the speed and latency of networking transfers is less of a concern since it doesn't directly affect game operation.</source>
          <target>In these games, the speed and latency of networking transfers is less of a concern since it doesn't directly affect game operation.</target>
        </segment>
      </unit>
      <unit id="118">
        <segment state="initial">
          <source>Network conditions can change at any time, so any game that uses networking APIs needs to handle network exceptions that may occur.</source>
          <target>Network conditions can change at any time, so any game that uses networking APIs needs to handle network exceptions that may occur.</target>
        </segment>
      </unit>
      <unit id="119">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/mt280233)</data>
        </originalData>
        <segment state="initial">
          <source>To learn more about handling network exceptions, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Networking basics</pc>.</source>
          <target>To learn more about handling network exceptions, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Networking basics</pc>.</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source>Firewalls and web proxies are common and can affect the ability to use networking features.</source>
          <target>Firewalls and web proxies are common and can affect the ability to use networking features.</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source>A game that uses networking needs to be prepared to properly handle firewalls and proxies.</source>
          <target>A game that uses networking needs to be prepared to properly handle firewalls and proxies.</target>
        </segment>
      </unit>
      <unit id="122">
        <segment state="initial">
          <source>For mobile devices, it is important to monitor available network resources and behave accordingly when on metered networks where roaming or data costs can be significant.</source>
          <target>For mobile devices, it is important to monitor available network resources and behave accordingly when on metered networks where roaming or data costs can be significant.</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source>Network isolation is part of the app security model used by Windows.</source>
          <target>Network isolation is part of the app security model used by Windows.</target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source>Windows actively discovers network boundaries and enforces network access restrictions for network isolation.</source>
          <target>Windows actively discovers network boundaries and enforces network access restrictions for network isolation.</target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source>Apps must declare network isolation capabilities in order to define the scope of network access.</source>
          <target>Apps must declare network isolation capabilities in order to define the scope of network access.</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source>Without declaring these capabilities, your app will not have access to network resources.</source>
          <target>Without declaring these capabilities, your app will not have access to network resources.</target>
        </segment>
      </unit>
      <unit id="127">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh770532)</data>
        </originalData>
        <segment state="initial">
          <source>To learn more about how Windows enforces network isolation for apps, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">How to configure network isolation capabilities</pc>.</source>
          <target>To learn more about how Windows enforces network isolation for apps, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">How to configure network isolation capabilities</pc>.</target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source>Design considerations</source>
          <target>Design considerations</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source>A variety of networking APIs can be used in DirectX games.</source>
          <target>A variety of networking APIs can be used in DirectX games.</target>
        </segment>
      </unit>
      <unit id="130">
        <segment state="initial">
          <source>So, it is important to pick the right API.</source>
          <target>So, it is important to pick the right API.</target>
        </segment>
      </unit>
      <unit id="131">
        <segment state="initial">
          <source>Windows supports a variety of networking APIs that your app can use to communicate with other computers and devices over either the Internet or private networks.</source>
          <target>Windows supports a variety of networking APIs that your app can use to communicate with other computers and devices over either the Internet or private networks.</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source>Your first step is to figure out what networking features your app needs.</source>
          <target>Your first step is to figure out what networking features your app needs.</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source>The more popular network APIs for games include:</source>
          <target>The more popular network APIs for games include:</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source>TCP and sockets - Provides a reliable connection.</source>
          <target>TCP and sockets - Provides a reliable connection.</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source>Use TCP for game operations that don’t need security.</source>
          <target>Use TCP for game operations that don’t need security.</target>
        </segment>
      </unit>
      <unit id="136">
        <segment state="initial">
          <source>TCP allows the server to easily scale, so it is commonly used in games that use the infrastructure (client-server or internet peer-to-peer) model.</source>
          <target>TCP allows the server to easily scale, so it is commonly used in games that use the infrastructure (client-server or internet peer-to-peer) model.</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source>TCP can also be used by ad hoc (local peer-to-peer) games over Wi-Fi Direct and Bluetooth.</source>
          <target>TCP can also be used by ad hoc (local peer-to-peer) games over Wi-Fi Direct and Bluetooth.</target>
        </segment>
      </unit>
      <unit id="138">
        <segment state="initial">
          <source>TCP is commonly used for game object movement, character interaction, text chat, and other operations.</source>
          <target>TCP is commonly used for game object movement, character interaction, text chat, and other operations.</target>
        </segment>
      </unit>
      <unit id="139">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br226882)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StreamSocket</pc></pc> class provides a TCP socket that can be used in Windows Store games.</source>
          <target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StreamSocket</pc></pc> class provides a TCP socket that can be used in Windows Store games.</target>
        </segment>
      </unit>
      <unit id="140">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/br226960)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">StreamSocket</pc> class is used with related classes in the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">Windows::Networking::Sockets</pc></pc> namespace.</source>
          <target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">StreamSocket</pc> class is used with related classes in the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">Windows::Networking::Sockets</pc></pc> namespace.</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source>TCP and sockets using SSL - Provides a reliable connection that prevents eavesdropping.</source>
          <target>TCP and sockets using SSL - Provides a reliable connection that prevents eavesdropping.</target>
        </segment>
      </unit>
      <unit id="142">
        <segment state="initial">
          <source>Use TCP connections with SSL for game operations that need security.</source>
          <target>Use TCP connections with SSL for game operations that need security.</target>
        </segment>
      </unit>
      <unit id="143">
        <segment state="initial">
          <source>The encryption and overhead of SSL adds a cost in latency and performance, so it is only used when security is needed.</source>
          <target>The encryption and overhead of SSL adds a cost in latency and performance, so it is only used when security is needed.</target>
        </segment>
      </unit>
      <unit id="144">
        <segment state="initial">
          <source>TCP with SSL is commonly used for login, purchasing and trading assets, game character creation and management.</source>
          <target>TCP with SSL is commonly used for login, purchasing and trading assets, game character creation and management.</target>
        </segment>
      </unit>
      <unit id="145">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br226882)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StreamSocket</pc></pc> class provides a TCP socket that supports SSL.</source>
          <target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StreamSocket</pc></pc> class provides a TCP socket that supports SSL.</target>
        </segment>
      </unit>
      <unit id="146">
        <segment state="initial">
          <source>UDP and sockets - Provides unreliable network transfers with low overhead.</source>
          <target>UDP and sockets - Provides unreliable network transfers with low overhead.</target>
        </segment>
      </unit>
      <unit id="147">
        <segment state="initial">
          <source>UDP is used for game operations that require low latency and can tolerate some packet loss.</source>
          <target>UDP is used for game operations that require low latency and can tolerate some packet loss.</target>
        </segment>
      </unit>
      <unit id="148">
        <segment state="initial">
          <source>This is often used for fighting games, shooting and tracers, network audio, and voice chat.</source>
          <target>This is often used for fighting games, shooting and tracers, network audio, and voice chat.</target>
        </segment>
      </unit>
      <unit id="149">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br241319)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DatagramSocket</pc></pc> class provides a UDP socket that can be used in Windows Store games.</source>
          <target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DatagramSocket</pc></pc> class provides a UDP socket that can be used in Windows Store games.</target>
        </segment>
      </unit>
      <unit id="150">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/br226960)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">DatagramSocket</pc> class is used with related classes in the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">Windows::Networking::Sockets</pc></pc> namespace.</source>
          <target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">DatagramSocket</pc> class is used with related classes in the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">Windows::Networking::Sockets</pc></pc> namespace.</target>
        </segment>
      </unit>
      <unit id="151">
        <segment state="initial">
          <source>HTTP Client - Provides a reliable connection to HTTP servers.</source>
          <target>HTTP Client - Provides a reliable connection to HTTP servers.</target>
        </segment>
      </unit>
      <unit id="152">
        <segment state="initial">
          <source>The most common networking scenario is to access a web site to retrieve or store information.</source>
          <target>The most common networking scenario is to access a web site to retrieve or store information.</target>
        </segment>
      </unit>
      <unit id="153">
        <segment state="initial">
          <source>A simple example would be a game that uses a website to store user information and game scores.</source>
          <target>A simple example would be a game that uses a website to store user information and game scores.</target>
        </segment>
      </unit>
      <unit id="154">
        <segment state="initial">
          <source>When used with SSL for security, an HTTP client can be used for login, purchasing, trading assets, game character creation, and management.</source>
          <target>When used with SSL for security, an HTTP client can be used for login, purchasing, trading assets, game character creation, and management.</target>
        </segment>
      </unit>
      <unit id="155">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn298639)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">HttpClient</pc></pc> class provides a modern HTTP client API for use in Windows Store games.</source>
          <target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">HttpClient</pc></pc> class provides a modern HTTP client API for use in Windows Store games.</target>
        </segment>
      </unit>
      <unit id="156">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/dn279692)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">HttpClient</pc> class is used with related classes in the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">Windows::Web::Http</pc></pc> namespace.</source>
          <target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">HttpClient</pc> class is used with related classes in the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">Windows::Web::Http</pc></pc> namespace.</target>
        </segment>
      </unit>
      <unit id="157">
        <segment state="initial">
          <source>Handling network exceptions in your DirectX game</source>
          <target>Handling network exceptions in your DirectX game</target>
        </segment>
      </unit>
      <unit id="158">
        <segment state="initial">
          <source>When a network exception occurs in your DirectX game, this indicates a significant problem or failure.</source>
          <target>When a network exception occurs in your DirectX game, this indicates a significant problem or failure.</target>
        </segment>
      </unit>
      <unit id="159">
        <segment state="initial">
          <source>Exceptions can occur for many reasons when using networking APIs.</source>
          <target>Exceptions can occur for many reasons when using networking APIs.</target>
        </segment>
      </unit>
      <unit id="160">
        <segment state="initial">
          <source>Often, the exception can result from changes in network connectivity or other networking issues with the remote host or server.</source>
          <target>Often, the exception can result from changes in network connectivity or other networking issues with the remote host or server.</target>
        </segment>
      </unit>
      <unit id="161">
        <segment state="initial">
          <source>Some causes of exceptions when using networking APIs include the following:</source>
          <target>Some causes of exceptions when using networking APIs include the following:</target>
        </segment>
      </unit>
      <unit id="162">
        <segment state="initial">
          <source>Input from the user for a hostname or a URI contains errors and is not valid.</source>
          <target>Input from the user for a hostname or a URI contains errors and is not valid.</target>
        </segment>
      </unit>
      <unit id="163">
        <segment state="initial">
          <source>Name resolutions failures when looking up a hostname or a URi.</source>
          <target>Name resolutions failures when looking up a hostname or a URi.</target>
        </segment>
      </unit>
      <unit id="164">
        <segment state="initial">
          <source>Loss or change in network connectivity.</source>
          <target>Loss or change in network connectivity.</target>
        </segment>
      </unit>
      <unit id="165">
        <segment state="initial">
          <source>Network connection failures using sockets or the HTTP client APIs.</source>
          <target>Network connection failures using sockets or the HTTP client APIs.</target>
        </segment>
      </unit>
      <unit id="166">
        <segment state="initial">
          <source>Network server or remote endpoint errors.</source>
          <target>Network server or remote endpoint errors.</target>
        </segment>
      </unit>
      <unit id="167">
        <segment state="initial">
          <source>Miscellaneous networking errors.</source>
          <target>Miscellaneous networking errors.</target>
        </segment>
      </unit>
      <unit id="168">
        <segment state="initial">
          <source>Exceptions from network errors (for example, loss or change of connectivity, connection failures, and server failures) can happen at any time.</source>
          <target>Exceptions from network errors (for example, loss or change of connectivity, connection failures, and server failures) can happen at any time.</target>
        </segment>
      </unit>
      <unit id="169">
        <segment state="initial">
          <source>These errors result in exceptions being thrown.</source>
          <target>These errors result in exceptions being thrown.</target>
        </segment>
      </unit>
      <unit id="170">
        <segment state="initial">
          <source>If an exception is not handled by your app, it can cause your entire app to be terminated by the runtime.</source>
          <target>If an exception is not handled by your app, it can cause your entire app to be terminated by the runtime.</target>
        </segment>
      </unit>
      <unit id="171">
        <segment state="initial">
          <source>You must write code to handle exceptions when you call most asynchronous network methods.</source>
          <target>You must write code to handle exceptions when you call most asynchronous network methods.</target>
        </segment>
      </unit>
      <unit id="172">
        <segment state="initial">
          <source>Sometimes, when an exception occurs, a network method can be retried as a way to resolve the problem.</source>
          <target>Sometimes, when an exception occurs, a network method can be retried as a way to resolve the problem.</target>
        </segment>
      </unit>
      <unit id="173">
        <segment state="initial">
          <source>Other times, your app may need to plan to continue without network connectivity using previously cached data.</source>
          <target>Other times, your app may need to plan to continue without network connectivity using previously cached data.</target>
        </segment>
      </unit>
      <unit id="174">
        <segment state="initial">
          <source>Universal Windows Platform (UWP) apps generally throw a single exception.</source>
          <target>Universal Windows Platform (UWP) apps generally throw a single exception.</target>
        </segment>
      </unit>
      <unit id="175">
        <segment state="initial">
          <source>Your exception handler can retrieve more detailed information about the cause of the exception to better understand the failure and make appropriate decisions.</source>
          <target>Your exception handler can retrieve more detailed information about the cause of the exception to better understand the failure and make appropriate decisions.</target>
        </segment>
      </unit>
      <unit id="176">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>When an exception occurs in a DirectX game that is a UWP app, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">HRESULT</pc> value for the cause of the error can be retrieved.</source>
          <target>When an exception occurs in a DirectX game that is a UWP app, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">HRESULT</pc> value for the cause of the error can be retrieved.</target>
        </segment>
      </unit>
      <unit id="177">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Winerror.h</pc> include file contains a large list of possible <pc dataRefEnd="id4" dataRefStart="id3" id="p2">HRESULT</pc> values that includes network errors.</source>
          <target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Winerror.h</pc> include file contains a large list of possible <pc dataRefEnd="id4" dataRefStart="id3" id="p2">HRESULT</pc> values that includes network errors.</target>
        </segment>
      </unit>
      <unit id="178">
        <segment state="initial">
          <source>The networking APIs support different methods for retrieving this detailed information about the cause of an exception.</source>
          <target>The networking APIs support different methods for retrieving this detailed information about the cause of an exception.</target>
        </segment>
      </unit>
      <unit id="179">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>A method to retrieve the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">HRESULT</pc> value of the error that caused the exception.</source>
          <target>A method to retrieve the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">HRESULT</pc> value of the error that caused the exception.</target>
        </segment>
      </unit>
      <unit id="180">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>The possible list of potential <pc dataRefEnd="id2" dataRefStart="id1" id="p1">HRESULT</pc> values is large and unspecified.</source>
          <target>The possible list of potential <pc dataRefEnd="id2" dataRefStart="id1" id="p1">HRESULT</pc> values is large and unspecified.</target>
        </segment>
      </unit>
      <unit id="181">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">HRESULT</pc> value can be retrieved when using any of the networking APIs.</source>
          <target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">HRESULT</pc> value can be retrieved when using any of the networking APIs.</target>
        </segment>
      </unit>
      <unit id="182">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>A helper method that converts the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">HRESULT</pc> value to an enumeration value.</source>
          <target>A helper method that converts the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">HRESULT</pc> value to an enumeration value.</target>
        </segment>
      </unit>
      <unit id="183">
        <segment state="initial">
          <source>The list of possible enumeration values is specified and relatively small.</source>
          <target>The list of possible enumeration values is specified and relatively small.</target>
        </segment>
      </unit>
      <unit id="184">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br226960)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>A helper method is available for the socket classes in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows::Networking::Sockets</pc></pc>.</source>
          <target>A helper method is available for the socket classes in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows::Networking::Sockets</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="185">
        <segment state="initial">
          <source>Exceptions in Windows.Networking.Sockets</source>
          <target>Exceptions in Windows.Networking.Sockets</target>
        </segment>
      </unit>
      <unit id="186">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br207113)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>The constructor for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">HostName</pc></pc> class used with sockets can throw an exception if the string passed is not a valid hostname (contains characters that are not allowed in a host name).</source>
          <target>The constructor for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">HostName</pc></pc> class used with sockets can throw an exception if the string passed is not a valid hostname (contains characters that are not allowed in a host name).</target>
        </segment>
      </unit>
      <unit id="187">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>If an app gets input from the user for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">HostName</pc> for a peer connection for gaming, the constructor should be in a try/catch block.</source>
          <target>If an app gets input from the user for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">HostName</pc> for a peer connection for gaming, the constructor should be in a try/catch block.</target>
        </segment>
      </unit>
      <unit id="188">
        <segment state="initial">
          <source>If an exception is thrown, the app can notify the user and request a new hostname.</source>
          <target>If an exception is thrown, the app can notify the user and request a new hostname.</target>
        </segment>
      </unit>
      <unit id="189">
        <segment state="initial">
          <source>Add code to validate a string for a hostname from the user</source>
          <target>Add code to validate a string for a hostname from the user</target>
        </segment>
      </unit>
      <unit id="190">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br226960)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Networking.Sockets</pc></pc> namespace has convenient helper methods and enumerations for handling errors when using sockets.</source>
          <target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Networking.Sockets</pc></pc> namespace has convenient helper methods and enumerations for handling errors when using sockets.</target>
        </segment>
      </unit>
      <unit id="191">
        <segment state="initial">
          <source>This can be useful for handling specific network exceptions differently in your app.</source>
          <target>This can be useful for handling specific network exceptions differently in your app.</target>
        </segment>
      </unit>
      <unit id="192">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br241319)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/br226882)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
          <data id="id9">[</data>
          <data id="id10">](https://msdn.microsoft.com/library/windows/apps/br226906)</data>
          <data id="id11">**</data>
          <data id="id12">**</data>
        </originalData>
        <segment state="initial">
          <source>An error encountered on <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DatagramSocket</pc></pc>, <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">StreamSocket</pc></pc>, or <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">StreamSocketListener</pc></pc> operation results in an exception being thrown.</source>
          <target>An error encountered on <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DatagramSocket</pc></pc>, <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">StreamSocket</pc></pc>, or <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">StreamSocketListener</pc></pc> operation results in an exception being thrown.</target>
        </segment>
      </unit>
      <unit id="193">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>The cause of the exception is an error value represented as an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">HRESULT</pc> value.</source>
          <target>The cause of the exception is an error value represented as an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">HRESULT</pc> value.</target>
        </segment>
      </unit>
      <unit id="194">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh701462)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/hh701457)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SocketError.GetStatus</pc></pc> method is used to convert a network error from a socket operation to a <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">SocketErrorStatus</pc></pc> enumeration value.</source>
          <target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SocketError.GetStatus</pc></pc> method is used to convert a network error from a socket operation to a <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">SocketErrorStatus</pc></pc> enumeration value.</target>
        </segment>
      </unit>
      <unit id="195">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Most of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">SocketErrorStatus</pc> enumeration values correspond to an error returned by the native Windows sockets operation.</source>
          <target>Most of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">SocketErrorStatus</pc> enumeration values correspond to an error returned by the native Windows sockets operation.</target>
        </segment>
      </unit>
      <unit id="196">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>An app can filter on specific <pc dataRefEnd="id2" dataRefStart="id1" id="p1">SocketErrorStatus</pc> enumeration values to modify app behavior depending on the cause of the exception.</source>
          <target>An app can filter on specific <pc dataRefEnd="id2" dataRefStart="id1" id="p1">SocketErrorStatus</pc> enumeration values to modify app behavior depending on the cause of the exception.</target>
        </segment>
      </unit>
      <unit id="197">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>For parameter validation errors, an app can also use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">HRESULT</pc> from the exception to learn more detailed information about the error that caused the exception.</source>
          <target>For parameter validation errors, an app can also use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">HRESULT</pc> from the exception to learn more detailed information about the error that caused the exception.</target>
        </segment>
      </unit>
      <unit id="198">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">*</data>
          <data id="id4">*</data>
        </originalData>
        <segment state="initial">
          <source>Possible <pc dataRefEnd="id2" dataRefStart="id1" id="p1">HRESULT</pc> values are listed in the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Winerror.h</pc> header file.</source>
          <target>Possible <pc dataRefEnd="id2" dataRefStart="id1" id="p1">HRESULT</pc> values are listed in the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Winerror.h</pc> header file.</target>
        </segment>
      </unit>
      <unit id="199">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">\_</data>
        </originalData>
        <segment state="initial">
          <source>For most parameter validation errors, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">HRESULT</pc> returned is <pc dataRefEnd="id4" dataRefStart="id3" id="p2">E<ph dataRef="id5" id="ph1" />INVALIDARG</pc>.</source>
          <target>For most parameter validation errors, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">HRESULT</pc> returned is <pc dataRefEnd="id4" dataRefStart="id3" id="p2">E<ph dataRef="id5" id="ph1" />INVALIDARG</pc>.</target>
        </segment>
      </unit>
      <unit id="200">
        <segment state="initial">
          <source>Add code to handle exceptions when trying to make a stream socket connection</source>
          <target>Add code to handle exceptions when trying to make a stream socket connection</target>
        </segment>
      </unit>
      <unit id="201">
        <segment state="initial">
          <source>Exceptions in Windows.Web.Http</source>
          <target>Exceptions in Windows.Web.Http</target>
        </segment>
      </unit>
      <unit id="202">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br225998)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/dn298639)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source>The constructor for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows::Foundation::Uri</pc></pc> class used with <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Windows::Web::Http::HttpClient</pc></pc> can throw an exception if the string passed is not a valid URI (contains characters that are not allowed in a URI).</source>
          <target>The constructor for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows::Foundation::Uri</pc></pc> class used with <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Windows::Web::Http::HttpClient</pc></pc> can throw an exception if the string passed is not a valid URI (contains characters that are not allowed in a URI).</target>
        </segment>
      </unit>
      <unit id="203">
        <segment state="initial">
          <source>In C++, there is no method to try and parse a string to a URI.</source>
          <target>In C++, there is no method to try and parse a string to a URI.</target>
        </segment>
      </unit>
      <unit id="204">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>If an app gets input from the user for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows::Foundation::Uri</pc>, the constructor should be in a try/catch block.</source>
          <target>If an app gets input from the user for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows::Foundation::Uri</pc>, the constructor should be in a try/catch block.</target>
        </segment>
      </unit>
      <unit id="205">
        <segment state="initial">
          <source>If an exception is thrown, the app can notify the user and request a new URI.</source>
          <target>If an exception is thrown, the app can notify the user and request a new URI.</target>
        </segment>
      </unit>
      <unit id="206">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn298639)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>Your app should also check that the scheme in the URI is HTTP or HTTPS since these are the only schemes supported by the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows::Web::Http::HttpClient</pc></pc>.</source>
          <target>Your app should also check that the scheme in the URI is HTTP or HTTPS since these are the only schemes supported by the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows::Web::Http::HttpClient</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="207">
        <segment state="initial">
          <source>Add code to validate a string for a URI from the user</source>
          <target>Add code to validate a string for a URI from the user</target>
        </segment>
      </unit>
      <unit id="208">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/windows.web.http.aspx)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows::Web::Http</pc></pc> namespace lacks a convenience function.</source>
          <target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows::Web::Http</pc></pc> namespace lacks a convenience function.</target>
        </segment>
      </unit>
      <unit id="209">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn298639)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>So, an app using <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">HttpClient</pc></pc> and other classes in this namespace needs to use the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">HRESULT</pc> value.</source>
          <target>So, an app using <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">HttpClient</pc></pc> and other classes in this namespace needs to use the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">HRESULT</pc> value.</target>
        </segment>
      </unit>
      <unit id="210">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh755825.aspx)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>In apps using C++, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Platform::Exception</pc></pc> represents an error during app execution when an exception occurs.</source>
          <target>In apps using C++, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Platform::Exception</pc></pc> represents an error during app execution when an exception occurs.</target>
        </segment>
      </unit>
      <unit id="211">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh763371.aspx)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Platform::Exception::HResult</pc></pc> property returns the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">HRESULT</pc> assigned to the specific exception.</source>
          <target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Platform::Exception::HResult</pc></pc> property returns the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">HRESULT</pc> assigned to the specific exception.</target>
        </segment>
      </unit>
      <unit id="212">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh763375.aspx)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Platform::Exception::Message</pc></pc> property returns the system-provided string that is associated with the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">HRESULT</pc> value.</source>
          <target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Platform::Exception::Message</pc></pc> property returns the system-provided string that is associated with the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">HRESULT</pc> value.</target>
        </segment>
      </unit>
      <unit id="213">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">*</data>
          <data id="id4">*</data>
        </originalData>
        <segment state="initial">
          <source>Possible <pc dataRefEnd="id2" dataRefStart="id1" id="p1">HRESULT</pc> values are listed in the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Winerror.h</pc> header file.</source>
          <target>Possible <pc dataRefEnd="id2" dataRefStart="id1" id="p1">HRESULT</pc> values are listed in the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Winerror.h</pc> header file.</target>
        </segment>
      </unit>
      <unit id="214">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>An app can filter on specific <pc dataRefEnd="id2" dataRefStart="id1" id="p1">HRESULT</pc> values to modify app behavior depending on the cause of the exception.</source>
          <target>An app can filter on specific <pc dataRefEnd="id2" dataRefStart="id1" id="p1">HRESULT</pc> values to modify app behavior depending on the cause of the exception.</target>
        </segment>
      </unit>
      <unit id="215">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">\_</data>
        </originalData>
        <segment state="initial">
          <source>For most parameter validation errors, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">HRESULT</pc> returned is <pc dataRefEnd="id4" dataRefStart="id3" id="p2">E<ph dataRef="id5" id="ph1" />INVALIDARG</pc>.</source>
          <target>For most parameter validation errors, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">HRESULT</pc> returned is <pc dataRefEnd="id4" dataRefStart="id3" id="p2">E<ph dataRef="id5" id="ph1" />INVALIDARG</pc>.</target>
        </segment>
      </unit>
      <unit id="216">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">\_</data>
          <data id="id6">\_</data>
          <data id="id7">\_</data>
        </originalData>
        <segment state="initial">
          <source>For some illegal method calls, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">HRESULT</pc> returned is <pc dataRefEnd="id4" dataRefStart="id3" id="p2">E<ph dataRef="id5" id="ph1" />ILLEGAL<ph dataRef="id6" id="ph2" />METHOD<ph dataRef="id7" id="ph3" />CALL</pc>.</source>
          <target>For some illegal method calls, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">HRESULT</pc> returned is <pc dataRefEnd="id4" dataRefStart="id3" id="p2">E<ph dataRef="id5" id="ph1" />ILLEGAL<ph dataRef="id6" id="ph2" />METHOD<ph dataRef="id7" id="ph3" />CALL</pc>.</target>
        </segment>
      </unit>
      <unit id="217">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn298639)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>Add code to handle exceptions when trying to use <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">HttpClient</pc></pc> to connect to an HTTP server</source>
          <target>Add code to handle exceptions when trying to use <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">HttpClient</pc></pc> to connect to an HTTP server</target>
        </segment>
      </unit>
      <unit id="218">
        <segment state="initial">
          <source>Related topics</source>
          <target>Related topics</target>
        </segment>
      </unit>
      <unit id="219">
        <segment state="initial">
          <source>Other resources</source>
          <target>Other resources</target>
        </segment>
      </unit>
      <unit id="220">
        <segment state="initial">
          <source>Connecting with a datagram socket</source>
          <target>Connecting with a datagram socket</target>
        </segment>
      </unit>
      <unit id="221">
        <segment state="initial">
          <source>Connecting to a network resource with a stream socket</source>
          <target>Connecting to a network resource with a stream socket</target>
        </segment>
      </unit>
      <unit id="222">
        <segment state="initial">
          <source>Connecting to network services</source>
          <target>Connecting to network services</target>
        </segment>
      </unit>
      <unit id="223">
        <segment state="initial">
          <source>Connecting to web services</source>
          <target>Connecting to web services</target>
        </segment>
      </unit>
      <unit id="224">
        <segment state="initial">
          <source>Networking basics</source>
          <target>Networking basics</target>
        </segment>
      </unit>
      <unit id="225">
        <segment state="initial">
          <source>How to configure network isolation capabilities</source>
          <target>How to configure network isolation capabilities</target>
        </segment>
      </unit>
      <unit id="226">
        <segment state="initial">
          <source>How to enable loopback and debug network isolation</source>
          <target>How to enable loopback and debug network isolation</target>
        </segment>
      </unit>
      <unit id="227">
        <segment state="initial">
          <source>Reference</source>
          <target>Reference</target>
        </segment>
      </unit>
      <unit id="228">
        <segment state="initial">
          <source>DatagramSocket</source>
          <target>DatagramSocket</target>
        </segment>
      </unit>
      <unit id="229">
        <segment state="initial">
          <source>HttpClient</source>
          <target>HttpClient</target>
        </segment>
      </unit>
      <unit id="230">
        <segment state="initial">
          <source>StreamSocket</source>
          <target>StreamSocket</target>
        </segment>
      </unit>
      <unit id="231">
        <segment state="initial">
          <source>Windows::Web::Http</source>
          <target>Windows::Web::Http</target>
        </segment>
      </unit>
      <unit id="232">
        <segment state="initial">
          <source>Windows::Networking::Sockets</source>
          <target>Windows::Networking::Sockets</target>
        </segment>
      </unit>
      <unit id="233">
        <segment state="initial">
          <source>Samples</source>
          <target>Samples</target>
        </segment>
      </unit>
      <unit id="234">
        <segment state="initial">
          <source>DatagramSocket sample</source>
          <target>DatagramSocket sample</target>
        </segment>
      </unit>
      <unit id="235">
        <segment state="initial">
          <source>HttpClient Sample</source>
          <target>HttpClient Sample</target>
        </segment>
      </unit>
      <unit id="236">
        <segment state="initial">
          <source>Proximity sample</source>
          <target>Proximity sample</target>
        </segment>
      </unit>
      <unit id="237">
        <segment state="initial">
          <source>StreamSocket sample</source>
          <target>StreamSocket sample</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>