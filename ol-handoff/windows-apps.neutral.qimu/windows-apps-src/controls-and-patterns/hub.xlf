<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="zh-cn" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">windows-apps-src\controls-and-patterns\hub.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">70ce2a58b45c8514aca6641ca034caa91fb88d18</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-781aacf</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>The hub control uses a hierarchical navigation pattern to support apps with a relational information architecture.</source>
          <target>The hub control uses a hierarchical navigation pattern to support apps with a relational information architecture.</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>Hub controls</source>
          <target>Hub controls</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>Hub control/pattern</source>
          <target>Hub control/pattern</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source>A hub control lets you organize app content into distinct, yet related, sections or categories.</source>
          <target>A hub control lets you organize app content into distinct, yet related, sections or categories.</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source>Sections in a hub are meant to be traversed in a preferred order, and can serve as the starting point for more detailed experiences.</source>
          <target>Sections in a hub are meant to be traversed in a preferred order, and can serve as the starting point for more detailed experiences.</target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source>Example of a hub</source>
          <target>Example of a hub</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source>Content in a hub can be displayed in a robust panning view that allows users to get a glimpse of what's new, what's available, and what's relevant.</source>
          <target>Content in a hub can be displayed in a robust panning view that allows users to get a glimpse of what's new, what's available, and what's relevant.</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source>Hubs typically have a page header, while multiple content sections each get a section header.</source>
          <target>Hubs typically have a page header, while multiple content sections each get a section header.</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source>The hub control has several features that make it work well for building a content navigation pattern.</source>
          <target>The hub control has several features that make it work well for building a content navigation pattern.</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source>Visual navigation</source>
          <target>Visual navigation</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source>A hub allows content to be displayed in a diverse, brief, easy-to-scan array.</source>
          <target>A hub allows content to be displayed in a diverse, brief, easy-to-scan array.</target>
        </segment>
      </unit>
      <unit id="112">
        <segment state="initial">
          <source>Categorization</source>
          <target>Categorization</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source>Each hub section allows for its content to be arranged in a logical order.</source>
          <target>Each hub section allows for its content to be arranged in a logical order.</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source>Mixed content types</source>
          <target>Mixed content types</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source>With mixed content types, variable asset sizes and ratios are common.</source>
          <target>With mixed content types, variable asset sizes and ratios are common.</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source>A hub allows each content type to be uniquely and neatly laid out in each hub section.</source>
          <target>A hub allows each content type to be uniquely and neatly laid out in each hub section.</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source>Variable page and content widths</source>
          <target>Variable page and content widths</target>
        </segment>
      </unit>
      <unit id="118">
        <segment state="initial">
          <source>Being a panoramic model, the hub allows for variability in its section widths.</source>
          <target>Being a panoramic model, the hub allows for variability in its section widths.</target>
        </segment>
      </unit>
      <unit id="119">
        <segment state="initial">
          <source>This is great for content of different depths, and allows a small-to-high number of items to format equally well.</source>
          <target>This is great for content of different depths, and allows a small-to-high number of items to format equally well.</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source>Flexible architecture</source>
          <target>Flexible architecture</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source>If you'd prefer to keep your app architecture shallow, you can fit all channel content into a hub section summary.</source>
          <target>If you'd prefer to keep your app architecture shallow, you can fit all channel content into a hub section summary.</target>
        </segment>
      </unit>
      <unit id="122">
        <segment state="initial">
          <source>Important APIs</source>
          <target>Important APIs</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source>Hub class (XAML)</source>
          <target>Hub class (XAML)</target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source>HubSection class (XAML)</source>
          <target>HubSection class (XAML)</target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source>Hub object (HTML)</source>
          <target>Hub object (HTML)</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source>Is this the right control?</source>
          <target>Is this the right control?</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source>The hub control works well for displaying large amounts of content that is arranged in a hierarchy.</source>
          <target>The hub control works well for displaying large amounts of content that is arranged in a hierarchy.</target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source>Hubs prioritize the browsing and discovery of new content, making them useful for displaying items in a store or a media collection.</source>
          <target>Hubs prioritize the browsing and discovery of new content, making them useful for displaying items in a store or a media collection.</target>
        </segment>
      </unit>
      <unit id="129">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn958438)</data>
        </originalData>
        <segment state="initial">
          <source>A hub is just one of several navigation elements you can use; to learn more about navigation patterns and the other navigation elements, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Navigation design basics for Universal Windows Platform (UWP) apps</pc>.</source>
          <target>A hub is just one of several navigation elements you can use; to learn more about navigation patterns and the other navigation elements, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Navigation design basics for Universal Windows Platform (UWP) apps</pc>.</target>
        </segment>
      </unit>
      <unit id="130">
        <segment state="initial">
          <source>Hub architecture</source>
          <target>Hub architecture</target>
        </segment>
      </unit>
      <unit id="131">
        <segment state="initial">
          <source>The hub control has a hierarchical navigation pattern that support apps with a relational information architecture.</source>
          <target>The hub control has a hierarchical navigation pattern that support apps with a relational information architecture.</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source>A hub consists of different categories of content, each of which maps to the app's section pages.</source>
          <target>A hub consists of different categories of content, each of which maps to the app's section pages.</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source>Section pages can be displayed in any form that best represents the scenario and content that the section contains.</source>
          <target>Section pages can be displayed in any form that best represents the scenario and content that the section contains.</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source>wireframe of a hierarchical Food with Friends app</source>
          <target>wireframe of a hierarchical Food with Friends app</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source>Layouts and panning/scrolling</source>
          <target>Layouts and panning/scrolling</target>
        </segment>
      </unit>
      <unit id="136">
        <segment state="initial">
          <source>There are a number of ways to lay out and navigate content in a hub; just be sure that content lists in a hub always pan in a direction perpendicular to the direction in which the hub scrolls.</source>
          <target>There are a number of ways to lay out and navigate content in a hub; just be sure that content lists in a hub always pan in a direction perpendicular to the direction in which the hub scrolls.</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source>Horizontal panning</source>
          <target>Horizontal panning</target>
        </segment>
      </unit>
      <unit id="138">
        <originalData>
          <data id="id1">](images/controls_hub_horizontal_pan.png)
</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
        </originalData>
        <segment state="initial">
          <source>Example of a horizontally panning hub<ph dataRef="id1" id="ph1" /><pc dataRefEnd="id3" dataRefStart="id2" id="p1">Vertical panning</pc></source>
          <target>Example of a horizontally panning hub<ph dataRef="id1" id="ph1" /><pc dataRefEnd="id3" dataRefStart="id2" id="p1">Vertical panning</pc></target>
        </segment>
      </unit>
      <unit id="139">
        <originalData>
          <data id="id1">](images/controls_hub_vertical_pan.png)
</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
        </originalData>
        <segment state="initial">
          <source>Example of a vertically panning hub<ph dataRef="id1" id="ph1" /><pc dataRefEnd="id3" dataRefStart="id2" id="p1">Horizontal panning with vertically scrolling list/grid</pc></source>
          <target>Example of a vertically panning hub<ph dataRef="id1" id="ph1" /><pc dataRefEnd="id3" dataRefStart="id2" id="p1">Horizontal panning with vertically scrolling list/grid</pc></target>
        </segment>
      </unit>
      <unit id="140">
        <originalData>
          <data id="id1">](images/controls_hub_horizontal_vertical_scroll.png)
</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
        </originalData>
        <segment state="initial">
          <source>Example of a horizontally panning hub with a vertically scrolling list<ph dataRef="id1" id="ph1" /><pc dataRefEnd="id3" dataRefStart="id2" id="p1">Vertical panning with horizontally scrolling list/grid</pc></source>
          <target>Example of a horizontally panning hub with a vertically scrolling list<ph dataRef="id1" id="ph1" /><pc dataRefEnd="id3" dataRefStart="id2" id="p1">Vertical panning with horizontally scrolling list/grid</pc></target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source>Example of a horizontally panning hub</source>
          <target>Example of a horizontally panning hub</target>
        </segment>
      </unit>
      <unit id="142">
        <segment state="initial">
          <source>Examples</source>
          <target>Examples</target>
        </segment>
      </unit>
      <unit id="143">
        <segment state="initial">
          <source>The hub provides a great deal of design flexibility.</source>
          <target>The hub provides a great deal of design flexibility.</target>
        </segment>
      </unit>
      <unit id="144">
        <segment state="initial">
          <source>This lets you design apps that have a wide variety of compelling and visually rich experiences.</source>
          <target>This lets you design apps that have a wide variety of compelling and visually rich experiences.</target>
        </segment>
      </unit>
      <unit id="145">
        <segment state="initial">
          <source>You can use a hero image or content section for the first group; a large image for the hero can be cropped both vertically and horizontally without losing the center of interest.</source>
          <target>You can use a hero image or content section for the first group; a large image for the hero can be cropped both vertically and horizontally without losing the center of interest.</target>
        </segment>
      </unit>
      <unit id="146">
        <segment state="initial">
          <source>Here is an example of a single hero image and how that image may be cropped for landscape, portrait, and narrow width.</source>
          <target>Here is an example of a single hero image and how that image may be cropped for landscape, portrait, and narrow width.</target>
        </segment>
      </unit>
      <unit id="147">
        <segment state="initial">
          <source>hero image cropped for different window sizes</source>
          <target>hero image cropped for different window sizes</target>
        </segment>
      </unit>
      <unit id="148">
        <segment state="initial">
          <source>On mobile devices, one hub section is visible at a time.</source>
          <target>On mobile devices, one hub section is visible at a time.</target>
        </segment>
      </unit>
      <unit id="149">
        <segment state="initial">
          <source>Example of a hub pattern on a small screen</source>
          <target>Example of a hub pattern on a small screen</target>
        </segment>
      </unit>
      <unit id="150">
        <segment state="initial">
          <source>Recommendations</source>
          <target>Recommendations</target>
        </segment>
      </unit>
      <unit id="151">
        <segment state="initial">
          <source>To let users know that there's more content in a hub section, we recommend clipping the content so that a certain amount of it peeks.</source>
          <target>To let users know that there's more content in a hub section, we recommend clipping the content so that a certain amount of it peeks.</target>
        </segment>
      </unit>
      <unit id="152">
        <segment state="initial">
          <source>Based on the needs of your app, you can add several hub sections to the hub control, with each one offering its own functional purpose.</source>
          <target>Based on the needs of your app, you can add several hub sections to the hub control, with each one offering its own functional purpose.</target>
        </segment>
      </unit>
      <unit id="153">
        <segment state="initial">
          <source>For example, one section could contain a series of links and controls, while another could be a repository for thumbnails.</source>
          <target>For example, one section could contain a series of links and controls, while another could be a repository for thumbnails.</target>
        </segment>
      </unit>
      <unit id="154">
        <segment state="initial">
          <source>A user can pan between these sections using the gesture support built into the hub control.</source>
          <target>A user can pan between these sections using the gesture support built into the hub control.</target>
        </segment>
      </unit>
      <unit id="155">
        <segment state="initial">
          <source>Having content dynamically reflow is the best way to accommodate different window sizes.</source>
          <target>Having content dynamically reflow is the best way to accommodate different window sizes.</target>
        </segment>
      </unit>
      <unit id="156">
        <segment state="initial">
          <source>If you have many hub sections, consider adding semantic zoom.</source>
          <target>If you have many hub sections, consider adding semantic zoom.</target>
        </segment>
      </unit>
      <unit id="157">
        <segment state="initial">
          <source>This also makes it easier to find sections when the app is resized to a narrow width.</source>
          <target>This also makes it easier to find sections when the app is resized to a narrow width.</target>
        </segment>
      </unit>
      <unit id="158">
        <segment state="initial">
          <source>We recommend not having an item in a hub section lead to another hub; instead, you can use interactive headers to navigate to another hub section or page.</source>
          <target>We recommend not having an item in a hub section lead to another hub; instead, you can use interactive headers to navigate to another hub section or page.</target>
        </segment>
      </unit>
      <unit id="159">
        <segment state="initial">
          <source>The hub is a starting point and is meant to be customized to fit the needs of your app.</source>
          <target>The hub is a starting point and is meant to be customized to fit the needs of your app.</target>
        </segment>
      </unit>
      <unit id="160">
        <segment state="initial">
          <source>You can change the following aspects of a hub:</source>
          <target>You can change the following aspects of a hub:</target>
        </segment>
      </unit>
      <unit id="161">
        <segment state="initial">
          <source>Number of sections</source>
          <target>Number of sections</target>
        </segment>
      </unit>
      <unit id="162">
        <segment state="initial">
          <source>Type of content in each section</source>
          <target>Type of content in each section</target>
        </segment>
      </unit>
      <unit id="163">
        <segment state="initial">
          <source>Placement and order of sections</source>
          <target>Placement and order of sections</target>
        </segment>
      </unit>
      <unit id="164">
        <segment state="initial">
          <source>Size of sections</source>
          <target>Size of sections</target>
        </segment>
      </unit>
      <unit id="165">
        <segment state="initial">
          <source>Spacing between sections</source>
          <target>Spacing between sections</target>
        </segment>
      </unit>
      <unit id="166">
        <segment state="initial">
          <source>Spacing between a section and the top or bottom of the hub</source>
          <target>Spacing between a section and the top or bottom of the hub</target>
        </segment>
      </unit>
      <unit id="167">
        <segment state="initial">
          <source>Text style and size in headers and content</source>
          <target>Text style and size in headers and content</target>
        </segment>
      </unit>
      <unit id="168">
        <segment state="initial">
          <source>Color of the background, sections, section headers, and section content</source>
          <target>Color of the background, sections, section headers, and section content</target>
        </segment>
      </unit>
      <unit id="169">
        <segment state="initial">
          <source>Related articles</source>
          <target>Related articles</target>
        </segment>
      </unit>
      <unit id="170">
        <segment state="initial">
          <source>Navigation basics</source>
          <target>Navigation basics</target>
        </segment>
      </unit>
      <unit id="171">
        <segment state="initial">
          <source>Windows.UI.Xaml.Controls Hub class</source>
          <target>Windows.UI.Xaml.Controls Hub class</target>
        </segment>
      </unit>
      <unit id="172">
        <segment state="initial">
          <source>XAML Hub control sample</source>
          <target>XAML Hub control sample</target>
        </segment>
      </unit>
      <unit id="173">
        <segment state="initial">
          <source>Using a hub</source>
          <target>Using a hub</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>