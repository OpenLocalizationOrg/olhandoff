<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="zh-cn" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">windows-apps-src\gaming\how-to-suspend-an-app-directx-and-cpp.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">38e03a4a6312c5a0521c7263944897260624aa38</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-781aacf</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>How to suspend an app (DirectX and C++)</source>
          <target>How to suspend an app (DirectX and C++)</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>This topic shows how to save important system state and app data when the system suspends your Universal Windows Platform (UWP) DirectX app.</source>
          <target>This topic shows how to save important system state and app data when the system suspends your Universal Windows Platform (UWP) DirectX app.</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>How to suspend an app (DirectX and C++)</source>
          <target>How to suspend an app (DirectX and C++)</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source>Updated for UWP apps on Windows 10.</source>
          <target>Updated for UWP apps on Windows 10.</target>
        </segment>
      </unit>
      <unit id="105">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
        </originalData>
        <segment state="initial">
          <source>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc></source>
          <target>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc></target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source>This topic shows how to save important system state and app data when the system suspends your Universal Windows Platform (UWP) DirectX app.</source>
          <target>This topic shows how to save important system state and app data when the system suspends your Universal Windows Platform (UWP) DirectX app.</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source>Register the suspending event handler</source>
          <target>Register the suspending event handler</target>
        </segment>
      </unit>
      <unit id="108">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br205860)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>First, register to handle the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CoreApplication::Suspending</pc></pc> event, which is raised when your app is moved to a suspended state by a user or system action.</source>
          <target>First, register to handle the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CoreApplication::Suspending</pc></pc> event, which is raised when your app is moved to a suspended state by a user or system action.</target>
        </segment>
      </unit>
      <unit id="109">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh700495)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>Add this code to your implementation of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IFrameworkView::Initialize</pc></pc> method of your view provider:</source>
          <target>Add this code to your implementation of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IFrameworkView::Initialize</pc></pc> method of your view provider:</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source>Save any app data before suspending</source>
          <target>Save any app data before suspending</target>
        </segment>
      </unit>
      <unit id="111">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br205860)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>When your app handles the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CoreApplication::Suspending</pc></pc> event, it has the opportunity to save its important application data in the handler function.</source>
          <target>When your app handles the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CoreApplication::Suspending</pc></pc> event, it has the opportunity to save its important application data in the handler function.</target>
        </segment>
      </unit>
      <unit id="112">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br241622)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>The app should use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">LocalSettings</pc></pc> storage API to save simple application data synchronously.</source>
          <target>The app should use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">LocalSettings</pc></pc> storage API to save simple application data synchronously.</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source>If you are developing a game, save any critical game state information.</source>
          <target>If you are developing a game, save any critical game state information.</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source>Don't forget to suspend the audio processing!</source>
          <target>Don't forget to suspend the audio processing!</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source>Now, implement the callback.</source>
          <target>Now, implement the callback.</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source>Save the app data in this method.</source>
          <target>Save the app data in this method.</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source>This callback must complete with 5 seconds.</source>
          <target>This callback must complete with 5 seconds.</target>
        </segment>
      </unit>
      <unit id="118">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br224690)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>During this callback, you must request a deferral by calling <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SuspendingOperation::GetDeferral</pc></pc>, which starts the countdown.</source>
          <target>During this callback, you must request a deferral by calling <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SuspendingOperation::GetDeferral</pc></pc>, which starts the countdown.</target>
        </segment>
      </unit>
      <unit id="119">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br224685)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>When your app completes the save operation, call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SuspendingDeferral::Complete</pc></pc> to tell the system that your app is now ready to be suspended.</source>
          <target>When your app completes the save operation, call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SuspendingDeferral::Complete</pc></pc> to tell the system that your app is now ready to be suspended.</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source>If you do not request a deferral, or if your app takes longer than 5 seconds to save the data, your app is automatically suspended.</source>
          <target>If you do not request a deferral, or if your app takes longer than 5 seconds to save the data, your app is automatically suspended.</target>
        </segment>
      </unit>
      <unit id="121">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br208211)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/br208225)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source>This callback occurs as an event message processed by the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CoreDispatcher</pc></pc> for the app's <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">CoreWindow</pc></pc>.</source>
          <target>This callback occurs as an event message processed by the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CoreDispatcher</pc></pc> for the app's <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">CoreWindow</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="122">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br208215)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/hh700505)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source>This callback will not be invoked if you do not call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CoreDispatcher::ProcessEvents</pc></pc> from your app's main loop (implemented in the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">IFrameworkView::Run</pc></pc> method of your view provider).</source>
          <target>This callback will not be invoked if you do not call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CoreDispatcher::ProcessEvents</pc></pc> from your app's main loop (implemented in the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">IFrameworkView::Run</pc></pc> method of your view provider).</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source>Call Trim()</source>
          <target>Call Trim()</target>
        </segment>
      </unit>
      <unit id="124">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/desktop/dn280346)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>Starting in Windows 8.1, all DirectX Windows Store apps must call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IDXGIDevice3::Trim</pc></pc> when suspending.</source>
          <target>Starting in Windows 8.1, all DirectX Windows Store apps must call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IDXGIDevice3::Trim</pc></pc> when suspending.</target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source>This call tells the graphics driver to release all temporary buffers allocated for the app, which reduces the chance that the app will be terminated to reclaim memory resources while in the suspend state.</source>
          <target>This call tells the graphics driver to release all temporary buffers allocated for the app, which reduces the chance that the app will be terminated to reclaim memory resources while in the suspend state.</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source>This is a certification requirement for Windows 8.1.</source>
          <target>This is a certification requirement for Windows 8.1.</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source>Release any exclusive resources and file handles</source>
          <target>Release any exclusive resources and file handles</target>
        </segment>
      </unit>
      <unit id="128">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br205860)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>When your app handles the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CoreApplication::Suspending</pc></pc> event, it also has the opportunity to release exclusive resources and file handles.</source>
          <target>When your app handles the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CoreApplication::Suspending</pc></pc> event, it also has the opportunity to release exclusive resources and file handles.</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source>Explicitly releasing exclusive resources and file handles helps to ensure that other apps can access them while your app isn't using them.</source>
          <target>Explicitly releasing exclusive resources and file handles helps to ensure that other apps can access them while your app isn't using them.</target>
        </segment>
      </unit>
      <unit id="130">
        <segment state="initial">
          <source>When the app is activated after termination, it should open its exclusive resources and file handles.</source>
          <target>When the app is activated after termination, it should open its exclusive resources and file handles.</target>
        </segment>
      </unit>
      <unit id="131">
        <segment state="initial">
          <source>Remarks</source>
          <target>Remarks</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source>The system suspends your app whenever the user switches to another app or to the desktop.</source>
          <target>The system suspends your app whenever the user switches to another app or to the desktop.</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source>The system resumes your app whenever the user switches back to it.</source>
          <target>The system resumes your app whenever the user switches back to it.</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source>When the system resumes your app, the content of your variables and data structures is the same as it was before the system suspended the app.</source>
          <target>When the system resumes your app, the content of your variables and data structures is the same as it was before the system suspended the app.</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source>The system restores the app exactly where it left off, so that it appears to the user as if it's been running in the background.</source>
          <target>The system restores the app exactly where it left off, so that it appears to the user as if it's been running in the background.</target>
        </segment>
      </unit>
      <unit id="136">
        <segment state="initial">
          <source>The system attempts to keep your app and its data in memory while it's suspended.</source>
          <target>The system attempts to keep your app and its data in memory while it's suspended.</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source>However, if the system does not have the resources to keep your app in memory, the system will terminate your app.</source>
          <target>However, if the system does not have the resources to keep your app in memory, the system will terminate your app.</target>
        </segment>
      </unit>
      <unit id="138">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br225018)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>When the user switches back to a suspended app that has been terminated, the system sends an <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Activated</pc></pc> event and should restore its application data in its handler for the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">CoreApplicationView::Activated</pc> event.</source>
          <target>When the user switches back to a suspended app that has been terminated, the system sends an <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Activated</pc></pc> event and should restore its application data in its handler for the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">CoreApplicationView::Activated</pc> event.</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source>The system doesn't notify an app when it's terminated, so your app must save its application data and release exclusive resources and file handles when it's suspended, and restore them when the app is activated after termination.</source>
          <target>The system doesn't notify an app when it's terminated, so your app must save its application data and release exclusive resources and file handles when it's suspended, and restore them when the app is activated after termination.</target>
        </segment>
      </unit>
      <unit id="140">
        <segment state="initial">
          <source>Related topics</source>
          <target>Related topics</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source>How to resume an app (DirectX and C++)</source>
          <target>How to resume an app (DirectX and C++)</target>
        </segment>
      </unit>
      <unit id="142">
        <segment state="initial">
          <source>How to activate an app (DirectX and C++)</source>
          <target>How to activate an app (DirectX and C++)</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>