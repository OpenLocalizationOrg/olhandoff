<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="zh-cn" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">windows-apps-src\monetize\error-handling-in-xamlc-walkthrough.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">7cb827b4269afb55f0326eec0a0ee25b93119eb0</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-781aacf</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>Learn how to catch AdControl errors in your app.</source>
          <target>Learn how to catch AdControl errors in your app.</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>Error handling in XAML/C# walkthrough</source>
          <target>Error handling in XAML/C# walkthrough</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>Error handling in XAML/C# walkthrough</source>
          <target>Error handling in XAML/C# walkthrough</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source>Updated for UWP apps on Windows 10.</source>
          <target>Updated for UWP apps on Windows 10.</target>
        </segment>
      </unit>
      <unit id="105">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
        </originalData>
        <segment state="initial">
          <source>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc></source>
          <target>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc></target>
        </segment>
      </unit>
      <unit id="106">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/microsoft.advertising.winrt.ui.adcontrol.aspx)</data>
        </originalData>
        <segment state="initial">
          <source>This topic demonstrates how to catch <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdControl</pc> errors in your app.</source>
          <target>This topic demonstrates how to catch <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdControl</pc> errors in your app.</target>
        </segment>
      </unit>
      <unit id="107">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>These examples assume that you have a XAML/C# app that contains an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdControl</pc>.</source>
          <target>These examples assume that you have a XAML/C# app that contains an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdControl</pc>.</target>
        </segment>
      </unit>
      <unit id="108">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](adcontrol-in-xaml-and--net.md)</data>
        </originalData>
        <segment state="initial">
          <source>For step-by-step instructions that demonstrate how to add an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdControl</pc> to your app, see <pc dataRefEnd="id4" dataRefStart="id3" id="p2">AdControl in XAML and .NET</pc>.</source>
          <target>For step-by-step instructions that demonstrate how to add an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdControl</pc> to your app, see <pc dataRefEnd="id4" dataRefStart="id3" id="p2">AdControl in XAML and .NET</pc>.</target>
        </segment>
      </unit>
      <unit id="109">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://aka.ms/githubads)</data>
        </originalData>
        <segment state="initial">
          <source>For a complete sample project that demonstrates how to add banner ads to a XAML app using C# and C++, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">advertising samples on GitHub</pc>.</source>
          <target>For a complete sample project that demonstrates how to add banner ads to a XAML app using C# and C++, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">advertising samples on GitHub</pc>.</target>
        </segment>
      </unit>
      <unit id="110">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>In your MainPage.xaml file, locate the definition for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdControl</pc>.</source>
          <target>In your MainPage.xaml file, locate the definition for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdControl</pc>.</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source>That code looks like this.</source>
          <target>That code looks like this.</target>
        </segment>
      </unit>
      <unit id="112">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/microsoft.advertising.winrt.ui.adcontrol.erroroccurred.aspx)</data>
        </originalData>
        <segment state="initial">
          <source>After the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Width</pc> property, but before the closing tag, assign a name of an error event handler to the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">ErrorOccurred</pc> event.</source>
          <target>After the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Width</pc> property, but before the closing tag, assign a name of an error event handler to the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">ErrorOccurred</pc> event.</target>
        </segment>
      </unit>
      <unit id="113">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>In this walkthrough, the name of the error event handler is <pc dataRefEnd="id2" dataRefStart="id1" id="p1">OnAdError</pc>.</source>
          <target>In this walkthrough, the name of the error event handler is <pc dataRefEnd="id2" dataRefStart="id1" id="p1">OnAdError</pc>.</target>
        </segment>
      </unit>
      <unit id="114">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>The complete XAML code that defines the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdControl</pc> looks like this.</source>
          <target>The complete XAML code that defines the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdControl</pc> looks like this.</target>
        </segment>
      </unit>
      <unit id="115">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>To generate an error at runtime, create a second <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdControl</pc> with a different application ID.</source>
          <target>To generate an error at runtime, create a second <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdControl</pc> with a different application ID.</target>
        </segment>
      </unit>
      <unit id="116">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>Because all <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdControl</pc> objects in an app must use the same application ID, creating an additional <pc dataRefEnd="id4" dataRefStart="id3" id="p2">AdControl</pc> with a different application id will throw an error.</source>
          <target>Because all <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdControl</pc> objects in an app must use the same application ID, creating an additional <pc dataRefEnd="id4" dataRefStart="id3" id="p2">AdControl</pc> with a different application id will throw an error.</target>
        </segment>
      </unit>
      <unit id="117">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/microsoft.advertising.winrt.ui.adcontrol.applicationid.aspx)</data>
        </originalData>
        <segment state="initial">
          <source>Define a second <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdControl</pc> in MainPage.xaml just after the first <pc dataRefEnd="id4" dataRefStart="id3" id="p2">AdControl</pc>, and set the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">ApplicationId</pc> property to zero (“0”).</source>
          <target>Define a second <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdControl</pc> in MainPage.xaml just after the first <pc dataRefEnd="id4" dataRefStart="id3" id="p2">AdControl</pc>, and set the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">ApplicationId</pc> property to zero (“0”).</target>
        </segment>
      </unit>
      <unit id="118">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>In MainPage.xaml.cs, add the following <pc dataRefEnd="id2" dataRefStart="id1" id="p1">OnAdError</pc> event handler to the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">MainPage</pc> class.</source>
          <target>In MainPage.xaml.cs, add the following <pc dataRefEnd="id2" dataRefStart="id1" id="p1">OnAdError</pc> event handler to the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">MainPage</pc> class.</target>
        </segment>
      </unit>
      <unit id="119">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>This event handler writes information to the Visual Studio <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Output</pc> window.</source>
          <target>This event handler writes information to the Visual Studio <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Output</pc> window.</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source>Build and run the project.</source>
          <target>Build and run the project.</target>
        </segment>
      </unit>
      <unit id="121">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>After the app is running, you will see a message similar to the one below in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Output</pc> window of Visual Studio.</source>
          <target>After the app is running, you will see a message similar to the one below in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Output</pc> window of Visual Studio.</target>
        </segment>
      </unit>
      <unit id="122">
        <segment state="initial">
          <source>Related topics</source>
          <target>Related topics</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source>Advertising samples on GitHub</source>
          <target>Advertising samples on GitHub</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>