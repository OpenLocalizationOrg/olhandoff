<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="zh-cn" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">windows-apps-src\monetize\view-and-grant-products-from-a-service.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">1e17703442ce539de941890a0616fc5e08391d70</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-781aacf</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>If you have a catalog of apps and in-app products (IAPs), you can use the Windows Store collection API and Windows Store purchase API to access ownership information for these products from your services.</source>
          <target>If you have a catalog of apps and in-app products (IAPs), you can use the Windows Store collection API and Windows Store purchase API to access ownership information for these products from your services.</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>View and grant products from a service</source>
          <target>View and grant products from a service</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>View and grant products from a service</source>
          <target>View and grant products from a service</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source>Updated for UWP apps on Windows 10.</source>
          <target>Updated for UWP apps on Windows 10.</target>
        </segment>
      </unit>
      <unit id="105">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
        </originalData>
        <segment state="initial">
          <source>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc></source>
          <target>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc></target>
        </segment>
      </unit>
      <unit id="106">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
          <data id="id3">*</data>
          <data id="id4">*</data>
        </originalData>
        <segment state="initial">
          <source>If you have a catalog of apps and in-app products (IAPs), you can use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows Store collection API</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows Store purchase API</pc> to access ownership information for these products from your services.</source>
          <target>If you have a catalog of apps and in-app products (IAPs), you can use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows Store collection API</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows Store purchase API</pc> to access ownership information for these products from your services.</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source>These APIs consist of REST methods that are designed to be used by developers with IAP catalogs that are supported by cross-platform services.</source>
          <target>These APIs consist of REST methods that are designed to be used by developers with IAP catalogs that are supported by cross-platform services.</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source>These APIs enable you to do the following:</source>
          <target>These APIs enable you to do the following:</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source>Windows Store collection API: Query for apps and IAPs owned by a given user, or report a consumable product as fulfilled.</source>
          <target>Windows Store collection API: Query for apps and IAPs owned by a given user, or report a consumable product as fulfilled.</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source>Windows Store purchase API: Grant a free app or IAP to a given user.</source>
          <target>Windows Store purchase API: Grant a free app or IAP to a given user.</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source>Using the Windows Store collection API and Windows Store purchase API</source>
          <target>Using the Windows Store collection API and Windows Store purchase API</target>
        </segment>
      </unit>
      <unit id="112">
        <segment state="initial">
          <source>The Windows Store collection API and purchase API use Azure Active Directory (Azure AD) authentication to access customer ownership information.</source>
          <target>The Windows Store collection API and purchase API use Azure Active Directory (Azure AD) authentication to access customer ownership information.</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source>Before you can call these APIs, you must apply Azure AD metadata to your application in the Windows Dev Center dashboard and generate several required access tokens and keys.</source>
          <target>Before you can call these APIs, you must apply Azure AD metadata to your application in the Windows Dev Center dashboard and generate several required access tokens and keys.</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source>The following steps describe the end-to-end process:</source>
          <target>The following steps describe the end-to-end process:</target>
        </segment>
      </unit>
      <unit id="115">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](#step-1:-configure-a-web-application-in-azure-ad)</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Configure a Web application in Azure AD</pc>.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Configure a Web application in Azure AD</pc>.</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source>This application represents your cross-platform services in the context of Azure AD.</source>
          <target>This application represents your cross-platform services in the context of Azure AD.</target>
        </segment>
      </unit>
      <unit id="117">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](#step-2:-associate-your-azure-ad-client-id-with-your-application-in-the-windows-dev-denter-dashboard)</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Associate your Azure AD client ID with your application in the Windows Dev Center dashboard</pc>.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Associate your Azure AD client ID with your application in the Windows Dev Center dashboard</pc>.</target>
        </segment>
      </unit>
      <unit id="118">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](#step-3:-retrieve-access-tokens-from-azure-ad)</data>
        </originalData>
        <segment state="initial">
          <source>In your service, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">generate Azure AD access tokens</pc> that represent your publisher identity.</source>
          <target>In your service, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">generate Azure AD access tokens</pc> that represent your publisher identity.</target>
        </segment>
      </unit>
      <unit id="119">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](#step-4:-generate-a-windows-store-id-key-from-client-side-code-in-your-app)</data>
        </originalData>
        <segment state="initial">
          <source>In client-side code in your Windows app, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">generate a Windows Store ID key</pc> that represents the identity of the current user, and pass the Windows Store ID key back to your service.</source>
          <target>In client-side code in your Windows app, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">generate a Windows Store ID key</pc> that represents the identity of the current user, and pass the Windows Store ID key back to your service.</target>
        </segment>
      </unit>
      <unit id="120">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](#step-5:-call-the-windows-store-collection-api-or-purchase-api-from-your-service)</data>
        </originalData>
        <segment state="initial">
          <source>After you have the required Azure AD access token and Windows Store ID key, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">call the Windows Store collection API or purchase API from your service</pc>.</source>
          <target>After you have the required Azure AD access token and Windows Store ID key, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">call the Windows Store collection API or purchase API from your service</pc>.</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source>The following sections provide more details about each of these steps.</source>
          <target>The following sections provide more details about each of these steps.</target>
        </segment>
      </unit>
      <unit id="122">
        <segment state="initial">
          <source>Step 1: Configure a Web application in Azure AD</source>
          <target>Step 1: Configure a Web application in Azure AD</target>
        </segment>
      </unit>
      <unit id="123">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/?LinkId=722502)</data>
        </originalData>
        <segment state="initial">
          <source>Follow the instructions in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Integrating Applications with Azure Active Directory</pc> to add a Web application to Azure AD.</source>
          <target>Follow the instructions in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Integrating Applications with Azure Active Directory</pc> to add a Web application to Azure AD.</target>
        </segment>
      </unit>
      <unit id="124">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  On the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Tell us about your application page</pc>, make sure that you choose <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Web application and/or web API</pc>.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  On the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Tell us about your application page</pc>, make sure that you choose <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Web application and/or web API</pc>.</target>
        </segment>
      </unit>
      <unit id="125">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
        </originalData>
        <segment state="initial">
          <source>This is required so that you can obtain a key (also called a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">client secret</pc>) for your application.</source>
          <target>This is required so that you can obtain a key (also called a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">client secret</pc>) for your application.</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source>In order to call the Windows Store collection API or purchase API, you must provide a client secret when you request an access token from Azure AD in a later step.</source>
          <target>In order to call the Windows Store collection API or purchase API, you must provide a client secret when you request an access token from Azure AD in a later step.</target>
        </segment>
      </unit>
      <unit id="127">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://manage.windowsazure.com/)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Azure Management Portal</pc>, navigate to <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Active Directory</pc>.</source>
          <target>In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Azure Management Portal</pc>, navigate to <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Active Directory</pc>.</target>
        </segment>
      </unit>
      <unit id="128">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Select your directory, click the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Applications</pc> tab at the top, and then select your application.</source>
          <target>Select your directory, click the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Applications</pc> tab at the top, and then select your application.</target>
        </segment>
      </unit>
      <unit id="129">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Click the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Configure</pc> tab.</source>
          <target>Click the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Configure</pc> tab.</target>
        </segment>
      </unit>
      <unit id="130">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
        </originalData>
        <segment state="initial">
          <source>On this tab, obtain the client ID for your application and request a key (this is called a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">client secret</pc> in later steps).</source>
          <target>On this tab, obtain the client ID for your application and request a key (this is called a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">client secret</pc> in later steps).</target>
        </segment>
      </unit>
      <unit id="131">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>At the bottom of the screen, click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Manage manifest</pc>.</source>
          <target>At the bottom of the screen, click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Manage manifest</pc>.</target>
        </segment>
      </unit>
      <unit id="132">
        <originalData>
          <data id="id1">`"identifierUris"`</data>
        </originalData>
        <segment state="initial">
          <source>Download your Azure AD application manifest and replace the <ph dataRef="id1" id="ph1" /> section with the following text.</source>
          <target>Download your Azure AD application manifest and replace the <ph dataRef="id1" id="ph1" /> section with the following text.</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source>These strings represent the audiences supported by your application.</source>
          <target>These strings represent the audiences supported by your application.</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source>In a later step, you will create Azure AD access tokens that are associated with each of these audience values.</source>
          <target>In a later step, you will create Azure AD access tokens that are associated with each of these audience values.</target>
        </segment>
      </unit>
      <unit id="135">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">]( http://go.microsoft.com/fwlink/?LinkId=722500)</data>
        </originalData>
        <segment state="initial">
          <source>For more information about how to download your application manifest, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Understanding the Azure Active Directory application manifest</pc>.</source>
          <target>For more information about how to download your application manifest, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Understanding the Azure Active Directory application manifest</pc>.</target>
        </segment>
      </unit>
      <unit id="136">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://manage.windowsazure.com/)</data>
        </originalData>
        <segment state="initial">
          <source>Save your application manifest and upload it to your application in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Azure Management Portal</pc>.</source>
          <target>Save your application manifest and upload it to your application in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Azure Management Portal</pc>.</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source>Step 2: Associate your Azure AD client ID with your application in the Windows Dev Center dashboard</source>
          <target>Step 2: Associate your Azure AD client ID with your application in the Windows Dev Center dashboard</target>
        </segment>
      </unit>
      <unit id="138">
        <segment state="initial">
          <source>The Windows Store collection API and purchase API only provide access to a user's ownership information for apps and IAPs that you have associated with your Azure AD client ID.</source>
          <target>The Windows Store collection API and purchase API only provide access to a user's ownership information for apps and IAPs that you have associated with your Azure AD client ID.</target>
        </segment>
      </unit>
      <unit id="139">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://dev.windows.com/overview)</data>
        </originalData>
        <segment state="initial">
          <source>Sign in to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows Dev Center dashboard</pc> and select your app.</source>
          <target>Sign in to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows Dev Center dashboard</pc> and select your app.</target>
        </segment>
      </unit>
      <unit id="140">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">&amp;gt;</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
        </originalData>
        <segment state="initial">
          <source>Go to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Services</pc><ph dataRef="id3" id="ph1" /><pc dataRefEnd="id5" dataRefStart="id4" id="p2">Product collections and purchases</pc> page and enter your Azure AD client ID into one of the available fields.</source>
          <target>Go to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Services</pc><ph dataRef="id3" id="ph1" /><pc dataRefEnd="id5" dataRefStart="id4" id="p2">Product collections and purchases</pc> page and enter your Azure AD client ID into one of the available fields.</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source>Step 3: Retrieve access tokens from Azure AD</source>
          <target>Step 3: Retrieve access tokens from Azure AD</target>
        </segment>
      </unit>
      <unit id="142">
        <segment state="initial">
          <source>Before you can retrieve a Windows Store ID key or call the Windows Store collection API or purchase API, your service must request three Azure AD access tokens that represent your publisher identity.</source>
          <target>Before you can retrieve a Windows Store ID key or call the Windows Store collection API or purchase API, your service must request three Azure AD access tokens that represent your publisher identity.</target>
        </segment>
      </unit>
      <unit id="143">
        <segment state="initial">
          <source>Each of these access tokens is associated with a different audience URI, and each token will be used with a different API call.</source>
          <target>Each of these access tokens is associated with a different audience URI, and each token will be used with a different API call.</target>
        </segment>
      </unit>
      <unit id="144">
        <segment state="initial">
          <source>The lifetime of each token is 60 minutes, and you can refresh them after they expire.</source>
          <target>The lifetime of each token is 60 minutes, and you can refresh them after they expire.</target>
        </segment>
      </unit>
      <unit id="145">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/azure/dn645543.aspx)</data>
        </originalData>
        <segment state="initial">
          <source>To create the access tokens, use the OAuth 2.0 API in your service by following the instructions in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Service to Service Calls Using Client Credentials</pc>.</source>
          <target>To create the access tokens, use the OAuth 2.0 API in your service by following the instructions in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Service to Service Calls Using Client Credentials</pc>.</target>
        </segment>
      </unit>
      <unit id="146">
        <segment state="initial">
          <source>For each token, specify the following parameter data:</source>
          <target>For each token, specify the following parameter data:</target>
        </segment>
      </unit>
      <unit id="147">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
          <data id="id3">\_</data>
          <data id="id4">*</data>
          <data id="id5">*</data>
          <data id="id6">\_</data>
          <data id="id7">[</data>
          <data id="id8">](http://manage.windowsazure.com/)</data>
        </originalData>
        <segment state="initial">
          <source>For the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">client<ph dataRef="id3" id="ph1" />id</pc> and <pc dataRefEnd="id5" dataRefStart="id4" id="p2">client<ph dataRef="id6" id="ph2" />secret</pc> parameters, specify the client ID and the client secret for your application as obtained from the <pc dataRefEnd="id8" dataRefStart="id7" id="p3">Azure Management Portal</pc>.</source>
          <target>For the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">client<ph dataRef="id3" id="ph1" />id</pc> and <pc dataRefEnd="id5" dataRefStart="id4" id="p2">client<ph dataRef="id6" id="ph2" />secret</pc> parameters, specify the client ID and the client secret for your application as obtained from the <pc dataRefEnd="id8" dataRefStart="id7" id="p3">Azure Management Portal</pc>.</target>
        </segment>
      </unit>
      <unit id="148">
        <segment state="initial">
          <source>Both of these parameters are required in order to generate an access token with the level of authentication required by the Windows Store collection API or purchase API.</source>
          <target>Both of these parameters are required in order to generate an access token with the level of authentication required by the Windows Store collection API or purchase API.</target>
        </segment>
      </unit>
      <unit id="149">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
          <data id="id3">`"identifierUris"`</data>
        </originalData>
        <segment state="initial">
          <source>For the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">resource</pc> parameter, specify one of the following app ID URIs (these are the same URIs that you previously added to the <ph dataRef="id3" id="ph1" /> section of the application manifest).</source>
          <target>For the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">resource</pc> parameter, specify one of the following app ID URIs (these are the same URIs that you previously added to the <ph dataRef="id3" id="ph1" /> section of the application manifest).</target>
        </segment>
      </unit>
      <unit id="150">
        <segment state="initial">
          <source>At the end of this process, you should have three access tokens that each have one of these app ID URIs associated with them:</source>
          <target>At the end of this process, you should have three access tokens that each have one of these app ID URIs associated with them:</target>
        </segment>
      </unit>
      <unit id="151">
        <segment state="initial">
          <source>: In a later step, you will use the access token that you create with this URI to request a Windows Store ID key that you can use with the Windows Store collection API.</source>
          <target>: In a later step, you will use the access token that you create with this URI to request a Windows Store ID key that you can use with the Windows Store collection API.</target>
        </segment>
      </unit>
      <unit id="152">
        <segment state="initial">
          <source>: In a later step, you will use the access token that you create with this URI to request a Windows Store ID key that you can use with the Windows Store purchase API.</source>
          <target>: In a later step, you will use the access token that you create with this URI to request a Windows Store ID key that you can use with the Windows Store purchase API.</target>
        </segment>
      </unit>
      <unit id="153">
        <segment state="initial">
          <source>: In a later step, you will use the access token that you create with this URI in direct calls to the Windows Store collection API or purchase API.</source>
          <target>: In a later step, you will use the access token that you create with this URI in direct calls to the Windows Store collection API or purchase API.</target>
        </segment>
      </unit>
      <unit id="154">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">`https://onestore.microsoft.com`</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Important</pc>  Use the <ph dataRef="id3" id="ph1" /> audience only with access tokens that are stored securely within your service.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Important</pc>  Use the <ph dataRef="id3" id="ph1" /> audience only with access tokens that are stored securely within your service.</target>
        </segment>
      </unit>
      <unit id="155">
        <segment state="initial">
          <source>Exposing access tokens with this audience outside your service could make your service vulnerable to replay attacks.</source>
          <target>Exposing access tokens with this audience outside your service could make your service vulnerable to replay attacks.</target>
        </segment>
      </unit>
      <unit id="156">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/?LinkId=722501)</data>
        </originalData>
        <segment state="initial">
          <source>For more details about the structure of an access token, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Supported Token and Claim Types</pc>.</source>
          <target>For more details about the structure of an access token, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Supported Token and Claim Types</pc>.</target>
        </segment>
      </unit>
      <unit id="157">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Important</pc>  You should create Azure AD access tokens only in the context of your service, not in your app.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Important</pc>  You should create Azure AD access tokens only in the context of your service, not in your app.</target>
        </segment>
      </unit>
      <unit id="158">
        <segment state="initial">
          <source>Your client secret could be compromised if it is sent to your app.</source>
          <target>Your client secret could be compromised if it is sent to your app.</target>
        </segment>
      </unit>
      <unit id="159">
        <segment state="initial">
          <source>Step 4: Generate a Windows Store ID key from client-side code in your app</source>
          <target>Step 4: Generate a Windows Store ID key from client-side code in your app</target>
        </segment>
      </unit>
      <unit id="160">
        <segment state="initial">
          <source>Before you can call the Windows Store collection API or purchase API, your service must obtain a Windows Store ID key.</source>
          <target>Before you can call the Windows Store collection API or purchase API, your service must obtain a Windows Store ID key.</target>
        </segment>
      </unit>
      <unit id="161">
        <segment state="initial">
          <source>This is a JSON Web Token (JWT) that represents the identity of the user whose product ownership information you want to access.</source>
          <target>This is a JSON Web Token (JWT) that represents the identity of the user whose product ownership information you want to access.</target>
        </segment>
      </unit>
      <unit id="162">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](#windowsstorekey)</data>
        </originalData>
        <segment state="initial">
          <source>For more information about the claims in this key, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Claims in a Windows Store ID key</pc>.</source>
          <target>For more information about the claims in this key, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Claims in a Windows Store ID key</pc>.</target>
        </segment>
      </unit>
      <unit id="163">
        <segment state="initial">
          <source>Currently, the only way to obtain a Windows Store ID key is by calling a Universal Windows Platform (UWP) API from client-side code in your app to retrieve the identity of the user who is currently signed in to the Windows Store.</source>
          <target>Currently, the only way to obtain a Windows Store ID key is by calling a Universal Windows Platform (UWP) API from client-side code in your app to retrieve the identity of the user who is currently signed in to the Windows Store.</target>
        </segment>
      </unit>
      <unit id="164">
        <segment state="initial">
          <source>To generate a Windows Store ID key:</source>
          <target>To generate a Windows Store ID key:</target>
        </segment>
      </unit>
      <unit id="165">
        <segment state="initial">
          <source>Pass one of the following access tokens from your service to your client app:</source>
          <target>Pass one of the following access tokens from your service to your client app:</target>
        </segment>
      </unit>
      <unit id="166">
        <originalData>
          <data id="id1">`https://onestore.microsoft.com/b2b/keys/create/collections`</data>
        </originalData>
        <segment state="initial">
          <source>To get a Windows Store ID key that you can use with the Windows Store collection API, pass the Azure AD access token that you created with the <ph dataRef="id1" id="ph1" /> audience URI.</source>
          <target>To get a Windows Store ID key that you can use with the Windows Store collection API, pass the Azure AD access token that you created with the <ph dataRef="id1" id="ph1" /> audience URI.</target>
        </segment>
      </unit>
      <unit id="167">
        <originalData>
          <data id="id1">`https://onestore.microsoft.com/b2b/keys/create/purchase`</data>
        </originalData>
        <segment state="initial">
          <source>To get a Windows Store ID key that you can use with the Windows Store purchase API, pass the Azure AD access token that you created with the <ph dataRef="id1" id="ph1" /> audience URI.</source>
          <target>To get a Windows Store ID key that you can use with the Windows Store purchase API, pass the Azure AD access token that you created with the <ph dataRef="id1" id="ph1" /> audience URI.</target>
        </segment>
      </unit>
      <unit id="168">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh779765)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>In your app code, call one of the following methods of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CurrentApp</pc></pc> class to retrieve a Windows Store ID key.</source>
          <target>In your app code, call one of the following methods of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CurrentApp</pc></pc> class to retrieve a Windows Store ID key.</target>
        </segment>
      </unit>
      <unit id="169">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/mt608674)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">
              <pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetCustomerCollectionsIdAsync</pc>
            </pc>: Call this method if you intend to use the Windows Store collection API.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">
              <pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetCustomerCollectionsIdAsync</pc>
            </pc>: Call this method if you intend to use the Windows Store collection API.</target>
        </segment>
      </unit>
      <unit id="170">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/mt608675)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">
              <pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetCustomerPurchaseIdAsync</pc>
            </pc>: Call this method if you intend to use the Windows Store purchase API.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">
              <pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetCustomerPurchaseIdAsync</pc>
            </pc>: Call this method if you intend to use the Windows Store purchase API.</target>
        </segment>
      </unit>
      <unit id="171">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
        </originalData>
        <segment state="initial">
          <source>For either method, pass your Azure AD access token to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">serviceTicket</pc> parameter.</source>
          <target>For either method, pass your Azure AD access token to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">serviceTicket</pc> parameter.</target>
        </segment>
      </unit>
      <unit id="172">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
        </originalData>
        <segment state="initial">
          <source>You can optionally pass an ID to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">publisherUserId</pc> parameter that identifies the current user in the context of your services.</source>
          <target>You can optionally pass an ID to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">publisherUserId</pc> parameter that identifies the current user in the context of your services.</target>
        </segment>
      </unit>
      <unit id="173">
        <segment state="initial">
          <source>If you maintain user IDs for your services, you can use this parameter to correlate these user IDs with the calls you make to the Windows Store collection API or purchase API.</source>
          <target>If you maintain user IDs for your services, you can use this parameter to correlate these user IDs with the calls you make to the Windows Store collection API or purchase API.</target>
        </segment>
      </unit>
      <unit id="174">
        <segment state="initial">
          <source>After your app successfully retrieves a Windows Store ID key, pass the key back to your service.</source>
          <target>After your app successfully retrieves a Windows Store ID key, pass the key back to your service.</target>
        </segment>
      </unit>
      <unit id="175">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  Each Windows Store ID key is valid for 90 days.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  Each Windows Store ID key is valid for 90 days.</target>
        </segment>
      </unit>
      <unit id="176">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](renew-a-windows-store-id-key.md)</data>
        </originalData>
        <segment state="initial">
          <source>After a key expires, you can <pc dataRefEnd="id2" dataRefStart="id1" id="p1">renew the key</pc>.</source>
          <target>After a key expires, you can <pc dataRefEnd="id2" dataRefStart="id1" id="p1">renew the key</pc>.</target>
        </segment>
      </unit>
      <unit id="177">
        <segment state="initial">
          <source>We recommend that you renew your Windows Store ID keys rather than creating new ones.</source>
          <target>We recommend that you renew your Windows Store ID keys rather than creating new ones.</target>
        </segment>
      </unit>
      <unit id="178">
        <segment state="initial">
          <source>Step 5: Call the Windows Store collection API or purchase API from your service</source>
          <target>Step 5: Call the Windows Store collection API or purchase API from your service</target>
        </segment>
      </unit>
      <unit id="179">
        <segment state="initial">
          <source>After your service has a Windows Store ID key that enables it to access a specific user's product ownership information, your service can call the Windows Store collection API or purchase API.</source>
          <target>After your service has a Windows Store ID key that enables it to access a specific user's product ownership information, your service can call the Windows Store collection API or purchase API.</target>
        </segment>
      </unit>
      <unit id="180">
        <segment state="initial">
          <source>Use the instructions that apply to your scenario:</source>
          <target>Use the instructions that apply to your scenario:</target>
        </segment>
      </unit>
      <unit id="181">
        <segment state="initial">
          <source>Query for products</source>
          <target>Query for products</target>
        </segment>
      </unit>
      <unit id="182">
        <segment state="initial">
          <source>Report consumable products as fulfilled</source>
          <target>Report consumable products as fulfilled</target>
        </segment>
      </unit>
      <unit id="183">
        <segment state="initial">
          <source>Grant free products</source>
          <target>Grant free products</target>
        </segment>
      </unit>
      <unit id="184">
        <segment state="initial">
          <source>For each scenario, pass the following information to the API:</source>
          <target>For each scenario, pass the following information to the API:</target>
        </segment>
      </unit>
      <unit id="185">
        <originalData>
          <data id="id1">`https://onestore.microsoft.com`</data>
        </originalData>
        <segment state="initial">
          <source>The Azure AD access token that you created earlier with the <ph dataRef="id1" id="ph1" /> audience URI.</source>
          <target>The Azure AD access token that you created earlier with the <ph dataRef="id1" id="ph1" /> audience URI.</target>
        </segment>
      </unit>
      <unit id="186">
        <segment state="initial">
          <source>This token represents your publisher identity.</source>
          <target>This token represents your publisher identity.</target>
        </segment>
      </unit>
      <unit id="187">
        <segment state="initial">
          <source>Pass this token in the request header.</source>
          <target>Pass this token in the request header.</target>
        </segment>
      </unit>
      <unit id="188">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/mt608674)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/mt608675)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source>The Windows Store ID key you retrieved from <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetCustomerCollectionsIdAsync</pc></pc> or <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">GetCustomerPurchaseIdAsync</pc></pc> in your app.</source>
          <target>The Windows Store ID key you retrieved from <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetCustomerCollectionsIdAsync</pc></pc> or <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">GetCustomerPurchaseIdAsync</pc></pc> in your app.</target>
        </segment>
      </unit>
      <unit id="189">
        <segment state="initial">
          <source>This key represents the identity of the user whose product ownership information you want to access.</source>
          <target>This key represents the identity of the user whose product ownership information you want to access.</target>
        </segment>
      </unit>
      <unit id="190">
        <segment state="initial">
          <source>Claims in a Windows Store ID key</source>
          <target>Claims in a Windows Store ID key</target>
        </segment>
      </unit>
      <unit id="191">
        <segment state="initial">
          <source>A Windows Store ID key is a JSON Web Token (JWT) that represents the identity of the user whose product ownership information you want to access.</source>
          <target>A Windows Store ID key is a JSON Web Token (JWT) that represents the identity of the user whose product ownership information you want to access.</target>
        </segment>
      </unit>
      <unit id="192">
        <segment state="initial">
          <source>When decoded using Base64, a Windows Store ID key contains the following claims.</source>
          <target>When decoded using Base64, a Windows Store ID key contains the following claims.</target>
        </segment>
      </unit>
      <unit id="193">
        <segment state="initial">
          <source>Claim name</source>
          <target>Claim name</target>
        </segment>
      </unit>
      <unit id="194">
        <segment state="initial">
          <source>Description</source>
          <target>Description</target>
        </segment>
      </unit>
      <unit id="195">
        <segment state="initial">
          <source>iat</source>
          <target>iat</target>
        </segment>
      </unit>
      <unit id="196">
        <segment state="initial">
          <source>Identifies the time at which the key was issued.</source>
          <target>Identifies the time at which the key was issued.</target>
        </segment>
      </unit>
      <unit id="197">
        <segment state="initial">
          <source>This claim can be used to determine the age of the token.</source>
          <target>This claim can be used to determine the age of the token.</target>
        </segment>
      </unit>
      <unit id="198">
        <segment state="initial">
          <source>This value is expressed as epoch time.</source>
          <target>This value is expressed as epoch time.</target>
        </segment>
      </unit>
      <unit id="199">
        <segment state="initial">
          <source>iss</source>
          <target>iss</target>
        </segment>
      </unit>
      <unit id="200">
        <segment state="initial">
          <source>Identifies the issuer.</source>
          <target>Identifies the issuer.</target>
        </segment>
      </unit>
      <unit id="201">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
        </originalData>
        <segment state="initial">
          <source>This has the same value as the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">aud</pc> claim.</source>
          <target>This has the same value as the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">aud</pc> claim.</target>
        </segment>
      </unit>
      <unit id="202">
        <segment state="initial">
          <source>aud</source>
          <target>aud</target>
        </segment>
      </unit>
      <unit id="203">
        <segment state="initial">
          <source>Identifies the audience.</source>
          <target>Identifies the audience.</target>
        </segment>
      </unit>
      <unit id="204">
        <originalData>
          <data id="id1">`https://collections.mp.microsoft.com/v6.0/keys`</data>
          <data id="id2">`https://purchase.mp.microsoft.com/v6.0/keys`</data>
        </originalData>
        <segment state="initial">
          <source>Must be one of the following values: <ph dataRef="id1" id="ph1" /> or <ph dataRef="id2" id="ph2" />.</source>
          <target>Must be one of the following values: <ph dataRef="id1" id="ph1" /> or <ph dataRef="id2" id="ph2" />.</target>
        </segment>
      </unit>
      <unit id="205">
        <segment state="initial">
          <source>exp</source>
          <target>exp</target>
        </segment>
      </unit>
      <unit id="206">
        <segment state="initial">
          <source>Identifies the expiration time on or after which the key will no longer be accepted for processing anything except for renewing keys.</source>
          <target>Identifies the expiration time on or after which the key will no longer be accepted for processing anything except for renewing keys.</target>
        </segment>
      </unit>
      <unit id="207">
        <segment state="initial">
          <source>The value of this claim is expressed as epoch time.</source>
          <target>The value of this claim is expressed as epoch time.</target>
        </segment>
      </unit>
      <unit id="208">
        <segment state="initial">
          <source>nbf</source>
          <target>nbf</target>
        </segment>
      </unit>
      <unit id="209">
        <segment state="initial">
          <source>Identifies the time at which the token will be accepted for processing.</source>
          <target>Identifies the time at which the token will be accepted for processing.</target>
        </segment>
      </unit>
      <unit id="210">
        <segment state="initial">
          <source>The value of this claim is expressed as epoch time.</source>
          <target>The value of this claim is expressed as epoch time.</target>
        </segment>
      </unit>
      <unit id="211">
        <segment state="initial">
          <source>The client ID that identifies the developer.</source>
          <target>The client ID that identifies the developer.</target>
        </segment>
      </unit>
      <unit id="212">
        <segment state="initial">
          <source>An opaque payload (encrypted and Base64 encoded) that contains information that is intended only for use by Windows Store services.</source>
          <target>An opaque payload (encrypted and Base64 encoded) that contains information that is intended only for use by Windows Store services.</target>
        </segment>
      </unit>
      <unit id="213">
        <segment state="initial">
          <source>A user ID that identifies the current user in the context of your services.</source>
          <target>A user ID that identifies the current user in the context of your services.</target>
        </segment>
      </unit>
      <unit id="214">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/mt608674)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">[</data>
          <data id="id8">](https://msdn.microsoft.com/library/windows/apps/mt608675)</data>
          <data id="id9">**</data>
          <data id="id10">**</data>
        </originalData>
        <segment state="initial">
          <source>This is the same value you pass into the optional <pc dataRefEnd="id2" dataRefStart="id1" id="p1">publisherUserId</pc> parameter of the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">GetCustomerCollectionsIdAsync</pc></pc> or <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">GetCustomerPurchaseIdAsync</pc></pc> method when you create the key.</source>
          <target>This is the same value you pass into the optional <pc dataRefEnd="id2" dataRefStart="id1" id="p1">publisherUserId</pc> parameter of the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">GetCustomerCollectionsIdAsync</pc></pc> or <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">GetCustomerPurchaseIdAsync</pc></pc> method when you create the key.</target>
        </segment>
      </unit>
      <unit id="215">
        <segment state="initial">
          <source>The URI that you can use to renew the key.</source>
          <target>The URI that you can use to renew the key.</target>
        </segment>
      </unit>
      <unit id="216">
        <segment state="initial">
          <source>Here is an example of a decoded Windows Store ID key header.</source>
          <target>Here is an example of a decoded Windows Store ID key header.</target>
        </segment>
      </unit>
      <unit id="217">
        <segment state="initial">
          <source>Here is an example of a decoded Windows Store ID key claim set.</source>
          <target>Here is an example of a decoded Windows Store ID key claim set.</target>
        </segment>
      </unit>
      <unit id="218">
        <segment state="initial">
          <source>Related topics</source>
          <target>Related topics</target>
        </segment>
      </unit>
      <unit id="219">
        <segment state="initial">
          <source>Query for products</source>
          <target>Query for products</target>
        </segment>
      </unit>
      <unit id="220">
        <segment state="initial">
          <source>Report consumable products as fulfilled</source>
          <target>Report consumable products as fulfilled</target>
        </segment>
      </unit>
      <unit id="221">
        <segment state="initial">
          <source>Grant free products</source>
          <target>Grant free products</target>
        </segment>
      </unit>
      <unit id="222">
        <segment state="initial">
          <source>Renew a Windows Store ID key</source>
          <target>Renew a Windows Store ID key</target>
        </segment>
      </unit>
      <unit id="223">
        <segment state="initial">
          <source>Integrating Applications with Azure Active Directory</source>
          <target>Integrating Applications with Azure Active Directory</target>
        </segment>
      </unit>
      <unit id="224">
        <segment state="initial">
          <source>Understanding the Azure Active Directory application manifest</source>
          <target>Understanding the Azure Active Directory application manifest</target>
        </segment>
      </unit>
      <unit id="225">
        <segment state="initial">
          <source>Supported Token and Claim Types</source>
          <target>Supported Token and Claim Types</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>