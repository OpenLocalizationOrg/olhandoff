<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="zh-cn" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">windows-apps-src\monetize\xaml-and-c-troubleshooting-guide.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">ef9ad8f8056b17793d7ad8230e410e014edf2c95</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-781aacf</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>Learn about solutions to common development issues with the Microsoft advertising libraries in XAML apps.</source>
          <target>Learn about solutions to common development issues with the Microsoft advertising libraries in XAML apps.</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>XAML and C# troubleshooting guide</source>
          <target>XAML and C# troubleshooting guide</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>XAML and C# troubleshooting guide</source>
          <target>XAML and C# troubleshooting guide</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source>Updated for UWP apps on Windows 10.</source>
          <target>Updated for UWP apps on Windows 10.</target>
        </segment>
      </unit>
      <unit id="105">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
        </originalData>
        <segment state="initial">
          <source>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc></source>
          <target>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc></target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source>This topic contains solutions to common development issues with the Microsoft advertising libraries in XAML apps.</source>
          <target>This topic contains solutions to common development issues with the Microsoft advertising libraries in XAML apps.</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source>XAML</source>
          <target>XAML</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source>AdControl not appearing</source>
          <target>AdControl not appearing</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source>Black box blinks and disappears</source>
          <target>Black box blinks and disappears</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source>Ads not refreshing</source>
          <target>Ads not refreshing</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source>C</source>
          <target>C</target>
        </segment>
      </unit>
      <unit id="112">
        <segment state="initial">
          <source>AdControl not appearing</source>
          <target>AdControl not appearing</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source>Black box blinks and disappears</source>
          <target>Black box blinks and disappears</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source>Ads bot refreshing</source>
          <target>Ads bot refreshing</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source>XAML</source>
          <target>XAML</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source>AdControl not appearing</source>
          <target>AdControl not appearing</target>
        </segment>
      </unit>
      <unit id="117">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Ensure that the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Internet (Client)</pc> capability is selected in Package.appxmanifest.</source>
          <target>Ensure that the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Internet (Client)</pc> capability is selected in Package.appxmanifest.</target>
        </segment>
      </unit>
      <unit id="118">
        <segment state="initial">
          <source>Check the application ID and ad unit ID.</source>
          <target>Check the application ID and ad unit ID.</target>
        </segment>
      </unit>
      <unit id="119">
        <segment state="initial">
          <source>These IDs must match the application ID and ad unit ID that you obtained in Windows Dev Center.</source>
          <target>These IDs must match the application ID and ad unit ID that you obtained in Windows Dev Center.</target>
        </segment>
      </unit>
      <unit id="120">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](set-up-ad-units-in-your-app.md)</data>
        </originalData>
        <segment state="initial">
          <source>For more information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Set up ad units in your app</pc>.</source>
          <target>For more information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Set up ad units in your app</pc>.</target>
        </segment>
      </unit>
      <unit id="121">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>Check the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Height</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Width</pc> properties.</source>
          <target>Check the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Height</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Width</pc> properties.</target>
        </segment>
      </unit>
      <unit id="122">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](supported-ad-sizes-for-banner-ads.md)</data>
        </originalData>
        <segment state="initial">
          <source>These must be set to one of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Supported ad sizes for banner ads</pc>.</source>
          <target>These must be set to one of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Supported ad sizes for banner ads</pc>.</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source>Check the element position.</source>
          <target>Check the element position.</target>
        </segment>
      </unit>
      <unit id="124">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/microsoft.advertising.winrt.ui.adcontrol.aspx)</data>
        </originalData>
        <segment state="initial">
          <source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdControl</pc> must be inside the viewable area.</source>
          <target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdControl</pc> must be inside the viewable area.</target>
        </segment>
      </unit>
      <unit id="125">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Check the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Visibility</pc> property.</source>
          <target>Check the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Visibility</pc> property.</target>
        </segment>
      </unit>
      <unit id="126">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>The optional <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Visibility</pc> property must not be set to collapsed or hidden.</source>
          <target>The optional <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Visibility</pc> property must not be set to collapsed or hidden.</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source>This property can be set inline (as shown below) or in an external style sheet.</source>
          <target>This property can be set inline (as shown below) or in an external style sheet.</target>
        </segment>
      </unit>
      <unit id="128">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Check the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IsEnabled</pc> property.</source>
          <target>Check the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IsEnabled</pc> property.</target>
        </segment>
      </unit>
      <unit id="129">
        <originalData>
          <data id="id1">`IsEnabled`</data>
          <data id="id2">`True`</data>
        </originalData>
        <segment state="initial">
          <source>The optional <ph dataRef="id1" id="ph1" /> property must be set to <ph dataRef="id2" id="ph2" />.</source>
          <target>The optional <ph dataRef="id1" id="ph1" /> property must be set to <ph dataRef="id2" id="ph2" />.</target>
        </segment>
      </unit>
      <unit id="130">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Check the parent of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdControl</pc>.</source>
          <target>Check the parent of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdControl</pc>.</target>
        </segment>
      </unit>
      <unit id="131">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>If the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdControl</pc> element resides in a parent element, the parent must be active and visible.</source>
          <target>If the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdControl</pc> element resides in a parent element, the parent must be active and visible.</target>
        </segment>
      </unit>
      <unit id="132">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Ensure the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdControl</pc> is not hidden from the viewport.</source>
          <target>Ensure the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdControl</pc> is not hidden from the viewport.</target>
        </segment>
      </unit>
      <unit id="133">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdControl</pc> must be visible for ads to display properly.</source>
          <target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdControl</pc> must be visible for ads to display properly.</target>
        </segment>
      </unit>
      <unit id="134">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>Live values for <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ApplicationId</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">AdUnitId</pc> should not be tested in the emulator.</source>
          <target>Live values for <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ApplicationId</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">AdUnitId</pc> should not be tested in the emulator.</target>
        </segment>
      </unit>
      <unit id="135">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">[</data>
          <data id="id8">](test-mode-values.md)</data>
        </originalData>
        <segment state="initial">
          <source>To ensure the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdControl</pc> is functioning as expected, use the test IDs for both <pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationId</pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3">AdUnitId</pc> found in <pc dataRefEnd="id8" dataRefStart="id7" id="p4">Test mode values</pc>.</source>
          <target>To ensure the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdControl</pc> is functioning as expected, use the test IDs for both <pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationId</pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3">AdUnitId</pc> found in <pc dataRefEnd="id8" dataRefStart="id7" id="p4">Test mode values</pc>.</target>
        </segment>
      </unit>
      <unit id="136">
        <segment state="initial">
          <source>Black box blinks and disappears</source>
          <target>Black box blinks and disappears</target>
        </segment>
      </unit>
      <unit id="137">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](#xaml-notappearing)</data>
        </originalData>
        <segment state="initial">
          <source>Double-check all steps in the previous <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdControl not appearing</pc> section.</source>
          <target>Double-check all steps in the previous <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdControl not appearing</pc> section.</target>
        </segment>
      </unit>
      <unit id="138">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Handle the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ErrorOccurred</pc> event, and use the message that is passed to the event handler to determine whether an error occurred and what type of error was thrown.</source>
          <target>Handle the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ErrorOccurred</pc> event, and use the message that is passed to the event handler to determine whether an error occurred and what type of error was thrown.</target>
        </segment>
      </unit>
      <unit id="139">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](error-handling-in-xamlc-walkthrough.md)</data>
        </originalData>
        <segment state="initial">
          <source>See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Error handling in XAML/C# walkthrough</pc> for more information.</source>
          <target>See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Error handling in XAML/C# walkthrough</pc> for more information.</target>
        </segment>
      </unit>
      <unit id="140">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>This example demonstrates an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ErrorOccurred</pc> event handler.</source>
          <target>This example demonstrates an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ErrorOccurred</pc> event handler.</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source>The first snippet is the XAML UI markup.</source>
          <target>The first snippet is the XAML UI markup.</target>
        </segment>
      </unit>
      <unit id="142">
        <segment state="initial">
          <source>This example demonstrates of the the corresponding code.</source>
          <target>This example demonstrates of the the corresponding code.</target>
        </segment>
      </unit>
      <unit id="143">
        <segment state="initial">
          <source>The most common error that causes a black box is “No ad available.”</source>
          <target>The most common error that causes a black box is “No ad available.”</target>
        </segment>
      </unit>
      <unit id="144">
        <segment state="initial">
          <source>This error means there is no ad available to return from the request.</source>
          <target>This error means there is no ad available to return from the request.</target>
        </segment>
      </unit>
      <unit id="145">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/microsoft.advertising.winrt.ui.adcontrol.aspx)</data>
        </originalData>
        <segment state="initial">
          <source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdControl</pc> is behaving normally.</source>
          <target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdControl</pc> is behaving normally.</target>
        </segment>
      </unit>
      <unit id="146">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>By default, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdControl</pc> will collapse when it cannot display an ad.</source>
          <target>By default, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdControl</pc> will collapse when it cannot display an ad.</target>
        </segment>
      </unit>
      <unit id="147">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>If other elements are children of the same parent they may move to fill the gap of the collapsed <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdControl</pc> and expand when the next request is made.</source>
          <target>If other elements are children of the same parent they may move to fill the gap of the collapsed <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdControl</pc> and expand when the next request is made.</target>
        </segment>
      </unit>
      <unit id="148">
        <segment state="initial">
          <source>Ads not refreshing</source>
          <target>Ads not refreshing</target>
        </segment>
      </unit>
      <unit id="149">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/microsoft.advertising.winrt.ui.adcontrol.isautorefreshenabled.aspx)</data>
        </originalData>
        <segment state="initial">
          <source>Check the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IsAutoRefreshEnabled</pc> property.</source>
          <target>Check the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IsAutoRefreshEnabled</pc> property.</target>
        </segment>
      </unit>
      <unit id="150">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>By default, this optional property is set to <pc dataRefEnd="id2" dataRefStart="id1" id="p1">True</pc>.</source>
          <target>By default, this optional property is set to <pc dataRefEnd="id2" dataRefStart="id1" id="p1">True</pc>.</target>
        </segment>
      </unit>
      <unit id="151">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/microsoft.advertising.winrt.ui.adcontrol.refresh.aspx)</data>
        </originalData>
        <segment state="initial">
          <source>When set to <pc dataRefEnd="id2" dataRefStart="id1" id="p1">False</pc>, the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Refresh</pc> method must be used to retrieve another ad.</source>
          <target>When set to <pc dataRefEnd="id2" dataRefStart="id1" id="p1">False</pc>, the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Refresh</pc> method must be used to retrieve another ad.</target>
        </segment>
      </unit>
      <unit id="152">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Check calls to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Refresh</pc> method.</source>
          <target>Check calls to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Refresh</pc> method.</target>
        </segment>
      </unit>
      <unit id="153">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>When using automatic refresh, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Refresh</pc> cannot be used to retrieve another ad.</source>
          <target>When using automatic refresh, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Refresh</pc> cannot be used to retrieve another ad.</target>
        </segment>
      </unit>
      <unit id="154">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>When using manual refresh, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Refresh</pc> should be called only after a minimum of 30 to 60 seconds depending on the device’s current data connection.</source>
          <target>When using manual refresh, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Refresh</pc> should be called only after a minimum of 30 to 60 seconds depending on the device’s current data connection.</target>
        </segment>
      </unit>
      <unit id="155">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>The following code snippets show an example of how to use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Refresh</pc> method.</source>
          <target>The following code snippets show an example of how to use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Refresh</pc> method.</target>
        </segment>
      </unit>
      <unit id="156">
        <segment state="initial">
          <source>The first snippet is the XAML UI markup.</source>
          <target>The first snippet is the XAML UI markup.</target>
        </segment>
      </unit>
      <unit id="157">
        <segment state="initial">
          <source>This code snippet shows an example of the C# code behind the UI markup.</source>
          <target>This code snippet shows an example of the C# code behind the UI markup.</target>
        </segment>
      </unit>
      <unit id="158">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdControl</pc> is behaving normally.</source>
          <target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdControl</pc> is behaving normally.</target>
        </segment>
      </unit>
      <unit id="159">
        <segment state="initial">
          <source>Sometimes the same ad will appear more than once in a row giving the appearance that ads are not refreshing.</source>
          <target>Sometimes the same ad will appear more than once in a row giving the appearance that ads are not refreshing.</target>
        </segment>
      </unit>
      <unit id="160">
        <segment state="initial">
          <source>C</source>
          <target>C</target>
        </segment>
      </unit>
      <unit id="161">
        <segment state="initial">
          <source>AdControl not appearing</source>
          <target>AdControl not appearing</target>
        </segment>
      </unit>
      <unit id="162">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Ensure that the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Internet (Client)</pc> capability is selected in Package.appxmanifest.</source>
          <target>Ensure that the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Internet (Client)</pc> capability is selected in Package.appxmanifest.</target>
        </segment>
      </unit>
      <unit id="163">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Ensure the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdControl</pc> is instantiated.</source>
          <target>Ensure the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdControl</pc> is instantiated.</target>
        </segment>
      </unit>
      <unit id="164">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>If the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdControl</pc> is not instantiated it will not be available.</source>
          <target>If the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdControl</pc> is not instantiated it will not be available.</target>
        </segment>
      </unit>
      <unit id="165">
        <segment state="initial">
          <source>Check the application ID and ad unit ID.</source>
          <target>Check the application ID and ad unit ID.</target>
        </segment>
      </unit>
      <unit id="166">
        <segment state="initial">
          <source>These IDs must match the application ID and ad unit ID that you obtained in Windows Dev Center.</source>
          <target>These IDs must match the application ID and ad unit ID that you obtained in Windows Dev Center.</target>
        </segment>
      </unit>
      <unit id="167">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](set-up-ad-units-in-your-app.md)</data>
        </originalData>
        <segment state="initial">
          <source>For more information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Set up ad units in your app</pc>.</source>
          <target>For more information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Set up ad units in your app</pc>.</target>
        </segment>
      </unit>
      <unit id="168">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>Check the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Height</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Width</pc> parameters.</source>
          <target>Check the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Height</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Width</pc> parameters.</target>
        </segment>
      </unit>
      <unit id="169">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](supported-ad-sizes-for-banner-ads.md)</data>
        </originalData>
        <segment state="initial">
          <source>These must be set to one of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">supported ad sizes for banner ads</pc>.</source>
          <target>These must be set to one of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">supported ad sizes for banner ads</pc>.</target>
        </segment>
      </unit>
      <unit id="170">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Ensure the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdControl</pc> is added to a parent element.</source>
          <target>Ensure the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdControl</pc> is added to a parent element.</target>
        </segment>
      </unit>
      <unit id="171">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>To display, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdControl</pc> must be added as a child to a parent control (for example, a <pc dataRefEnd="id4" dataRefStart="id3" id="p2">StackPanel</pc> or <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Grid</pc>).</source>
          <target>To display, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdControl</pc> must be added as a child to a parent control (for example, a <pc dataRefEnd="id4" dataRefStart="id3" id="p2">StackPanel</pc> or <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Grid</pc>).</target>
        </segment>
      </unit>
      <unit id="172">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Check the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Margin</pc> parameter.</source>
          <target>Check the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Margin</pc> parameter.</target>
        </segment>
      </unit>
      <unit id="173">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdControl</pc> must be inside the viewable area.</source>
          <target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdControl</pc> must be inside the viewable area.</target>
        </segment>
      </unit>
      <unit id="174">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Check the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Visibility</pc> property.</source>
          <target>Check the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Visibility</pc> property.</target>
        </segment>
      </unit>
      <unit id="175">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>The optional <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Visibility</pc> property must be set to <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Visible</pc>.</source>
          <target>The optional <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Visibility</pc> property must be set to <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Visible</pc>.</target>
        </segment>
      </unit>
      <unit id="176">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Check the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IsEnabled</pc> property.</source>
          <target>Check the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IsEnabled</pc> property.</target>
        </segment>
      </unit>
      <unit id="177">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>The optional <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IsEnabled</pc> property must be set to <pc dataRefEnd="id4" dataRefStart="id3" id="p2">True</pc>.</source>
          <target>The optional <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IsEnabled</pc> property must be set to <pc dataRefEnd="id4" dataRefStart="id3" id="p2">True</pc>.</target>
        </segment>
      </unit>
      <unit id="178">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Check the parent of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdControl</pc>.</source>
          <target>Check the parent of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdControl</pc>.</target>
        </segment>
      </unit>
      <unit id="179">
        <segment state="initial">
          <source>The parent must be active and visible.</source>
          <target>The parent must be active and visible.</target>
        </segment>
      </unit>
      <unit id="180">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>Live values for <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ApplicationId</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">AdUnitId</pc> should not be tested in the emulator.</source>
          <target>Live values for <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ApplicationId</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">AdUnitId</pc> should not be tested in the emulator.</target>
        </segment>
      </unit>
      <unit id="181">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">[</data>
          <data id="id8">](test-mode-values.md)</data>
        </originalData>
        <segment state="initial">
          <source>To ensure the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdControl</pc> is functioning as expected, use the test IDs for both <pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationId</pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3">AdUnitId</pc> found in <pc dataRefEnd="id8" dataRefStart="id7" id="p4">Test mode values</pc>.</source>
          <target>To ensure the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdControl</pc> is functioning as expected, use the test IDs for both <pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationId</pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3">AdUnitId</pc> found in <pc dataRefEnd="id8" dataRefStart="id7" id="p4">Test mode values</pc>.</target>
        </segment>
      </unit>
      <unit id="182">
        <segment state="initial">
          <source>Black box blinks and disappears</source>
          <target>Black box blinks and disappears</target>
        </segment>
      </unit>
      <unit id="183">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](#csharp-adcontrolnotappearing)</data>
        </originalData>
        <segment state="initial">
          <source>Double-check all steps in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdControl not appearing</pc> section above.</source>
          <target>Double-check all steps in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdControl not appearing</pc> section above.</target>
        </segment>
      </unit>
      <unit id="184">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Handle the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ErrorOccurred</pc> event, and use the message that is passed to the event handler to determine whether an error occurred and what type of error was thrown.</source>
          <target>Handle the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ErrorOccurred</pc> event, and use the message that is passed to the event handler to determine whether an error occurred and what type of error was thrown.</target>
        </segment>
      </unit>
      <unit id="185">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](error-handling-in-xamlc-walkthrough.md)</data>
        </originalData>
        <segment state="initial">
          <source>See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Error handling in XAML/C# walkthrough</pc> for more information.</source>
          <target>See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Error handling in XAML/C# walkthrough</pc> for more information.</target>
        </segment>
      </unit>
      <unit id="186">
        <segment state="initial">
          <source>The following examples show the basic code needed to implement an error call.</source>
          <target>The following examples show the basic code needed to implement an error call.</target>
        </segment>
      </unit>
      <unit id="187">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>This XAML code defines a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">TextBlock</pc> that is used to display the error message.</source>
          <target>This XAML code defines a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">TextBlock</pc> that is used to display the error message.</target>
        </segment>
      </unit>
      <unit id="188">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>This C# code retrieves the error message and displays it in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">TextBlock</pc>.</source>
          <target>This C# code retrieves the error message and displays it in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">TextBlock</pc>.</target>
        </segment>
      </unit>
      <unit id="189">
        <segment state="initial">
          <source>The most common error that causes a black box is “No ad available.”</source>
          <target>The most common error that causes a black box is “No ad available.”</target>
        </segment>
      </unit>
      <unit id="190">
        <segment state="initial">
          <source>This error means there is no ad available to return from the request.</source>
          <target>This error means there is no ad available to return from the request.</target>
        </segment>
      </unit>
      <unit id="191">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdControl</pc> is behaving normally.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdControl</pc> is behaving normally.</target>
        </segment>
      </unit>
      <unit id="192">
        <segment state="initial">
          <source>Sometimes the same ad will appear more than once in a row giving the appearance that ads are not refreshing.</source>
          <target>Sometimes the same ad will appear more than once in a row giving the appearance that ads are not refreshing.</target>
        </segment>
      </unit>
      <unit id="193">
        <segment state="initial">
          <source>Ads not refreshing</source>
          <target>Ads not refreshing</target>
        </segment>
      </unit>
      <unit id="194">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Check the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IsAutoRefreshEnabled</pc> property.</source>
          <target>Check the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IsAutoRefreshEnabled</pc> property.</target>
        </segment>
      </unit>
      <unit id="195">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>By default, this optional property is set to <pc dataRefEnd="id2" dataRefStart="id1" id="p1">True</pc>.</source>
          <target>By default, this optional property is set to <pc dataRefEnd="id2" dataRefStart="id1" id="p1">True</pc>.</target>
        </segment>
      </unit>
      <unit id="196">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>When set to <pc dataRefEnd="id2" dataRefStart="id1" id="p1">False</pc>, the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Refresh</pc> method must be used to retrieve another ad.</source>
          <target>When set to <pc dataRefEnd="id2" dataRefStart="id1" id="p1">False</pc>, the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Refresh</pc> method must be used to retrieve another ad.</target>
        </segment>
      </unit>
      <unit id="197">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>The following example demonstrates how to use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IsAutoRefreshEnabled</pc> property.</source>
          <target>The following example demonstrates how to use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IsAutoRefreshEnabled</pc> property.</target>
        </segment>
      </unit>
      <unit id="198">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Check calls to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Refresh</pc> method.</source>
          <target>Check calls to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Refresh</pc> method.</target>
        </segment>
      </unit>
      <unit id="199">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>When using automatic refresh, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Refresh</pc> cannot be used to retrieve another ad.</source>
          <target>When using automatic refresh, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Refresh</pc> cannot be used to retrieve another ad.</target>
        </segment>
      </unit>
      <unit id="200">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>When using manual refresh, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Refresh</pc> should be called only after a minimum of 30 to 60 seconds depending on the device’s current data connection.</source>
          <target>When using manual refresh, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Refresh</pc> should be called only after a minimum of 30 to 60 seconds depending on the device’s current data connection.</target>
        </segment>
      </unit>
      <unit id="201">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>The following example demonstrates how to call the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Refresh</pc> method.</source>
          <target>The following example demonstrates how to call the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Refresh</pc> method.</target>
        </segment>
      </unit>
      <unit id="202">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdControl</pc> is behaving normally.</source>
          <target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdControl</pc> is behaving normally.</target>
        </segment>
      </unit>
      <unit id="203">
        <segment state="initial">
          <source>Sometimes the same ad will appear more than once in a row giving the appearance that ads are not refreshing.</source>
          <target>Sometimes the same ad will appear more than once in a row giving the appearance that ads are not refreshing.</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>