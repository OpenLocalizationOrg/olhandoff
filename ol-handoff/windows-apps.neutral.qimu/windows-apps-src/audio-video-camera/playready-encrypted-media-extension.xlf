<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="zh-cn" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">windows-apps-src\audio-video-camera\playready-encrypted-media-extension.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">79a96c4111926e63a70a31f6016d648ccb86e9fa</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-781aacf</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>This section describes how to modify your PlayReady Web app to support the changes made from the previous Windows 8.1 version to the Windows 10 version.</source>
          <target>This section describes how to modify your PlayReady Web app to support the changes made from the previous Windows 8.1 version to the Windows 10 version.</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>PlayReady Encrypted Media Extension</source>
          <target>PlayReady Encrypted Media Extension</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>PlayReady Encrypted Media Extension</source>
          <target>PlayReady Encrypted Media Extension</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source>Updated for UWP apps on Windows 10.</source>
          <target>Updated for UWP apps on Windows 10.</target>
        </segment>
      </unit>
      <unit id="105">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
        </originalData>
        <segment state="initial">
          <source>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc></source>
          <target>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc></target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source>This section describes how to modify your PlayReady Web app to support the changes made from the previous Windows 8.1 version to the Windows 10 version.</source>
          <target>This section describes how to modify your PlayReady Web app to support the changes made from the previous Windows 8.1 version to the Windows 10 version.</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source>Using PlayReady media elements in Internet Explorer enables developers to create Web apps capable of providing PlayReady content to the user while enforcing the access rules defined by the content provider.</source>
          <target>Using PlayReady media elements in Internet Explorer enables developers to create Web apps capable of providing PlayReady content to the user while enforcing the access rules defined by the content provider.</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source>This section describes how to add PlayReady media elements to your existing Web apps using only HTML5 and JavaScript.</source>
          <target>This section describes how to add PlayReady media elements to your existing Web apps using only HTML5 and JavaScript.</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source>What's New in PlayReady Encrypted Media Extension</source>
          <target>What's New in PlayReady Encrypted Media Extension</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source>This section provides a list of changes made to the PlayReady Encrypted Media Extension to enable PlayReady content protection on Windows 10.</source>
          <target>This section provides a list of changes made to the PlayReady Encrypted Media Extension to enable PlayReady content protection on Windows 10.</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source>The following list describes the new features and changes made to PlayReady Encrypted Media Extension for Windows 10:</source>
          <target>The following list describes the new features and changes made to PlayReady Encrypted Media Extension for Windows 10:</target>
        </segment>
      </unit>
      <unit id="112">
        <segment state="initial">
          <source>Added hardware digital rights management (DRM).</source>
          <target>Added hardware digital rights management (DRM).</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source>Hardware-based content protection support enables secure playback of high definition (HD) and ultra-high definition (UHD) content on multiple device platforms.</source>
          <target>Hardware-based content protection support enables secure playback of high definition (HD) and ultra-high definition (UHD) content on multiple device platforms.</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source>Key material (including private keys, content keys, and any other key material used to derive or unlock said keys), and decrypted compressed and uncompressed video samples are protected by leveraging hardware security.</source>
          <target>Key material (including private keys, content keys, and any other key material used to derive or unlock said keys), and decrypted compressed and uncompressed video samples are protected by leveraging hardware security.</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source>Provides proactive acquisition of non-persistent licenses.</source>
          <target>Provides proactive acquisition of non-persistent licenses.</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source>Provides acquisition of multiple licenses in one message.</source>
          <target>Provides acquisition of multiple licenses in one message.</target>
        </segment>
      </unit>
      <unit id="117">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://go.microsoft.com/fwlink/p/?LinkID=626819)</data>
        </originalData>
        <segment state="initial">
          <source>You can either use a PlayReady object with multiple key identifiers (KeyIDs) as in Windows 8.1, or use <pc dataRefEnd="id2" dataRefStart="id1" id="p1">content decryption model data (CDMData)</pc> with multiple KeyIDs.</source>
          <target>You can either use a PlayReady object with multiple key identifiers (KeyIDs) as in Windows 8.1, or use <pc dataRefEnd="id2" dataRefStart="id1" id="p1">content decryption model data (CDMData)</pc> with multiple KeyIDs.</target>
        </segment>
      </unit>
      <unit id="118">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">&amp;lt;</data>
          <data id="id4">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  In Windows 10, multiple key identifiers are supported under <ph dataRef="id3" id="ph1" />KeyID<ph dataRef="id4" id="ph2" /> in CDMData.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  In Windows 10, multiple key identifiers are supported under <ph dataRef="id3" id="ph1" />KeyID<ph dataRef="id4" id="ph2" /> in CDMData.</target>
        </segment>
      </unit>
      <unit id="119">
        <segment state="initial">
          <source>Added real time expiration support, or limited duration license (LDL).</source>
          <target>Added real time expiration support, or limited duration license (LDL).</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source>Provides the ability to set real-time expiration on licenses.</source>
          <target>Provides the ability to set real-time expiration on licenses.</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source>Added HDCP Type 1 (version 2.2) policy support.</source>
          <target>Added HDCP Type 1 (version 2.2) policy support.</target>
        </segment>
      </unit>
      <unit id="122">
        <segment state="initial">
          <source>Miracast is now implicit as an output.</source>
          <target>Miracast is now implicit as an output.</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source>Added secure stop.</source>
          <target>Added secure stop.</target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source>Secure stop provides the means for a PlayReady device to confidently assert to a media streaming service that media playback has stopped for any given piece of content.</source>
          <target>Secure stop provides the means for a PlayReady device to confidently assert to a media streaming service that media playback has stopped for any given piece of content.</target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source>Added audio and video license separation.</source>
          <target>Added audio and video license separation.</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source>Separate tracks prevent video from being decoded as audio; enabling more robust content protection.</source>
          <target>Separate tracks prevent video from being decoded as audio; enabling more robust content protection.</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source>Emerging standards are requiring separate keys for audio and visual tracks.</source>
          <target>Emerging standards are requiring separate keys for audio and visual tracks.</target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source>Added MaxResDecode.</source>
          <target>Added MaxResDecode.</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source>This feature was added to limit playback of content to a maximum resolution even when in possession of a more capable key (but not a license).</source>
          <target>This feature was added to limit playback of content to a maximum resolution even when in possession of a more capable key (but not a license).</target>
        </segment>
      </unit>
      <unit id="130">
        <segment state="initial">
          <source>It supports cases where multiple stream sizes are encoded with a single key.</source>
          <target>It supports cases where multiple stream sizes are encoded with a single key.</target>
        </segment>
      </unit>
      <unit id="131">
        <segment state="initial">
          <source>Encrypted Media Extension Support in PlayReady</source>
          <target>Encrypted Media Extension Support in PlayReady</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source>This section describes the version of the W3C Encrypted Media Extension supported by PlayReady.</source>
          <target>This section describes the version of the W3C Encrypted Media Extension supported by PlayReady.</target>
        </segment>
      </unit>
      <unit id="133">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://www.w3.org/TR/2013/WD-encrypted-media-20130510/)</data>
        </originalData>
        <segment state="initial">
          <source>PlayReady for Web Apps is currently bound to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">W3C Encrypted Media Extension (EME) draft of May 10, 2013</pc>.</source>
          <target>PlayReady for Web Apps is currently bound to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">W3C Encrypted Media Extension (EME) draft of May 10, 2013</pc>.</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source>This support will be changed to the updated EME specification in future versions of Windows.</source>
          <target>This support will be changed to the updated EME specification in future versions of Windows.</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source>Use Hardware DRM</source>
          <target>Use Hardware DRM</target>
        </segment>
      </unit>
      <unit id="136">
        <segment state="initial">
          <source>This section describes how your web app can use PlayReady hardware DRM, and how to disable hardware DRM if the protected content does not support it.</source>
          <target>This section describes how your web app can use PlayReady hardware DRM, and how to disable hardware DRM if the protected content does not support it.</target>
        </segment>
      </unit>
      <unit id="137">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">`com.microsoft.playready.hardware`</data>
        </originalData>
        <segment state="initial">
          <source>To use PlayReady hardware DRM, your JavaScript web app should use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">isTypeSupported</pc> EME method with a key system identifier of <ph dataRef="id3" id="ph1" /> to query for PlayReady hardware DRM support from the browser.</source>
          <target>To use PlayReady hardware DRM, your JavaScript web app should use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">isTypeSupported</pc> EME method with a key system identifier of <ph dataRef="id3" id="ph1" /> to query for PlayReady hardware DRM support from the browser.</target>
        </segment>
      </unit>
      <unit id="138">
        <segment state="initial">
          <source>Occasionally, some content is not supported in hardware DRM.</source>
          <target>Occasionally, some content is not supported in hardware DRM.</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source>Cocktail content is never supported in hardware DRM; if you want to play cocktail content, you must opt out of hardware DRM.</source>
          <target>Cocktail content is never supported in hardware DRM; if you want to play cocktail content, you must opt out of hardware DRM.</target>
        </segment>
      </unit>
      <unit id="140">
        <segment state="initial">
          <source>Some hardware DRM will support HEVC and some will not; if you want to play HEVC content and hardware DRM doesn’t support it, you will want to opt out as well.</source>
          <target>Some hardware DRM will support HEVC and some will not; if you want to play HEVC content and hardware DRM doesn’t support it, you will want to opt out as well.</target>
        </segment>
      </unit>
      <unit id="141">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">`com.microsoft.playready`</data>
          <data id="id4">[</data>
          <data id="id5">](https://msdn.microsoft.com/library/windows/apps/dn986441)</data>
          <data id="id6">**</data>
          <data id="id7">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  To determine whether HEVC content is supported, after instantiating <ph dataRef="id3" id="ph1" />, use the <pc dataRefEnd="id5" dataRefStart="id4" id="p2"><pc dataRefEnd="id7" dataRefStart="id6" id="p3">PlayReadyStatics.CheckSupportedHardware</pc></pc> method.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  To determine whether HEVC content is supported, after instantiating <ph dataRef="id3" id="ph1" />, use the <pc dataRefEnd="id5" dataRefStart="id4" id="p2"><pc dataRefEnd="id7" dataRefStart="id6" id="p3">PlayReadyStatics.CheckSupportedHardware</pc></pc> method.</target>
        </segment>
      </unit>
      <unit id="142">
        <segment state="initial">
          <source>Add Secure Stop to your Web App</source>
          <target>Add Secure Stop to your Web App</target>
        </segment>
      </unit>
      <unit id="143">
        <segment state="initial">
          <source>This section describes how to add secure stop to your web app.</source>
          <target>This section describes how to add secure stop to your web app.</target>
        </segment>
      </unit>
      <unit id="144">
        <segment state="initial">
          <source>Secure stop provides the means for a PlayReady device to confidently assert to a media streaming service that media playback has stopped for any given piece of content.</source>
          <target>Secure stop provides the means for a PlayReady device to confidently assert to a media streaming service that media playback has stopped for any given piece of content.</target>
        </segment>
      </unit>
      <unit id="145">
        <segment state="initial">
          <source>This capability ensures your media streaming services provide accurate enforcement and reporting of usage limitations on different devices for a given account.</source>
          <target>This capability ensures your media streaming services provide accurate enforcement and reporting of usage limitations on different devices for a given account.</target>
        </segment>
      </unit>
      <unit id="146">
        <segment state="initial">
          <source>There are two primary scenarios for sending a secure stop challenge:</source>
          <target>There are two primary scenarios for sending a secure stop challenge:</target>
        </segment>
      </unit>
      <unit id="147">
        <segment state="initial">
          <source>When the media presentation stops because end of content was reached or when the user stopped the media presentation somewhere in the middle.</source>
          <target>When the media presentation stops because end of content was reached or when the user stopped the media presentation somewhere in the middle.</target>
        </segment>
      </unit>
      <unit id="148">
        <segment state="initial">
          <source>When the previous session ends unexpectedly (for example, due to a system or app crash).</source>
          <target>When the previous session ends unexpectedly (for example, due to a system or app crash).</target>
        </segment>
      </unit>
      <unit id="149">
        <segment state="initial">
          <source>The app will need to query, either at startup or shutdown, for any outstanding secure stop sessions and send challenge(s) separate from any other media playback.</source>
          <target>The app will need to query, either at startup or shutdown, for any outstanding secure stop sessions and send challenge(s) separate from any other media playback.</target>
        </segment>
      </unit>
      <unit id="150">
        <segment state="initial">
          <source>The following procedures describe how to set up secure stop for various scenarios.</source>
          <target>The following procedures describe how to set up secure stop for various scenarios.</target>
        </segment>
      </unit>
      <unit id="151">
        <segment state="initial">
          <source>To set up secure stop for a normal end of a presentation:</source>
          <target>To set up secure stop for a normal end of a presentation:</target>
        </segment>
      </unit>
      <unit id="152">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Register the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">onEnded</pc> event before playback starts.</source>
          <target>Register the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">onEnded</pc> event before playback starts.</target>
        </segment>
      </unit>
      <unit id="153">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">`removeAttribute(“src”)`</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
        </originalData>
        <segment state="initial">
          <source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">onEnded</pc> event handler needs to call <ph dataRef="id3" id="ph1" /> from the video/audio element object to set the source to <pc dataRefEnd="id5" dataRefStart="id4" id="p2">NULL</pc> which will trigger the media foundation to tear down the topology, destroy the decryptor(s), and set the stop state.</source>
          <target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">onEnded</pc> event handler needs to call <ph dataRef="id3" id="ph1" /> from the video/audio element object to set the source to <pc dataRefEnd="id5" dataRefStart="id4" id="p2">NULL</pc> which will trigger the media foundation to tear down the topology, destroy the decryptor(s), and set the stop state.</target>
        </segment>
      </unit>
      <unit id="154">
        <segment state="initial">
          <source>You can start the secure stop CDM session inside the handler to send the secure stop challenge to the server to notify the playback has stopped at this time, but it can be done later as well.</source>
          <target>You can start the secure stop CDM session inside the handler to send the secure stop challenge to the server to notify the playback has stopped at this time, but it can be done later as well.</target>
        </segment>
      </unit>
      <unit id="155">
        <segment state="initial">
          <source>To set up secure stop if the user navigates away from the page or closes down the tab or browser:</source>
          <target>To set up secure stop if the user navigates away from the page or closes down the tab or browser:</target>
        </segment>
      </unit>
      <unit id="156">
        <segment state="initial">
          <source>No app action is required to record the stop state; it will be recorded for you.</source>
          <target>No app action is required to record the stop state; it will be recorded for you.</target>
        </segment>
      </unit>
      <unit id="157">
        <segment state="initial">
          <source>To set up secure stop for custom page controls or user actions (such as custom navigation buttons or starting a new presentation before the current presentation completed):</source>
          <target>To set up secure stop for custom page controls or user actions (such as custom navigation buttons or starting a new presentation before the current presentation completed):</target>
        </segment>
      </unit>
      <unit id="158">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>When custom user action occurs, the app needs to set the source to <pc dataRefEnd="id2" dataRefStart="id1" id="p1">NULL</pc> which will trigger the media foundation to tear down the topology, destroy the decryptor(s), and set the stop state.</source>
          <target>When custom user action occurs, the app needs to set the source to <pc dataRefEnd="id2" dataRefStart="id1" id="p1">NULL</pc> which will trigger the media foundation to tear down the topology, destroy the decryptor(s), and set the stop state.</target>
        </segment>
      </unit>
      <unit id="159">
        <segment state="initial">
          <source>The following example demonstrates how to use secure stop in your web app:</source>
          <target>The following example demonstrates how to use secure stop in your web app:</target>
        </segment>
      </unit>
      <unit id="160">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">`&lt;SessionID&gt;B64 encoded session ID&lt;/SessionID&gt;`</data>
          <data id="id4">\*</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  The secure stop data’s <ph dataRef="id3" id="ph1" /> in the sample above can be an asterisk (<ph dataRef="id4" id="ph2" />), which is a wild card for all the secure stop sessions recorded.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  The secure stop data’s <ph dataRef="id3" id="ph1" /> in the sample above can be an asterisk (<ph dataRef="id4" id="ph2" />), which is a wild card for all the secure stop sessions recorded.</target>
        </segment>
      </unit>
      <unit id="161">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">\*</data>
        </originalData>
        <segment state="initial">
          <source>That is, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">SessionID</pc> tag can be a specific session, or a wild card (<ph dataRef="id3" id="ph1" />) to select all the secure stop sessions.</source>
          <target>That is, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">SessionID</pc> tag can be a specific session, or a wild card (<ph dataRef="id3" id="ph1" />) to select all the secure stop sessions.</target>
        </segment>
      </unit>
      <unit id="162">
        <segment state="initial">
          <source>Programming Considerations for Encrypted Media Extension</source>
          <target>Programming Considerations for Encrypted Media Extension</target>
        </segment>
      </unit>
      <unit id="163">
        <segment state="initial">
          <source>This section lists the programming considerations that you should take into account when creating your PlayReady-enabled web app for Windows 10.</source>
          <target>This section lists the programming considerations that you should take into account when creating your PlayReady-enabled web app for Windows 10.</target>
        </segment>
      </unit>
      <unit id="164">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MSMediaKeys</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">MSMediaKeySession</pc> objects created by your app must be kept alive until your app closes.</source>
          <target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MSMediaKeys</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">MSMediaKeySession</pc> objects created by your app must be kept alive until your app closes.</target>
        </segment>
      </unit>
      <unit id="165">
        <segment state="initial">
          <source>One way of ensuring these objects stay alive is to assign them as global variables (the variables would become out of scope and subject to garbage collection if declared as a local variable inside of a function).</source>
          <target>One way of ensuring these objects stay alive is to assign them as global variables (the variables would become out of scope and subject to garbage collection if declared as a local variable inside of a function).</target>
        </segment>
      </unit>
      <unit id="166">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
          <data id="id3">\_</data>
          <data id="id4">*</data>
          <data id="id5">*</data>
          <data id="id6">\_</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
          <data id="id9">**</data>
          <data id="id10">**</data>
        </originalData>
        <segment state="initial">
          <source>For example, the following sample assigns the variables <pc dataRefEnd="id2" dataRefStart="id1" id="p1">g<ph dataRef="id3" id="ph1" />msMediaKeys</pc> and <pc dataRefEnd="id5" dataRefStart="id4" id="p2">g<ph dataRef="id6" id="ph2" />mediaKeySession</pc> as global variables, which are then assigned to the <pc dataRefEnd="id8" dataRefStart="id7" id="p3">MSMediaKeys</pc> and <pc dataRefEnd="id10" dataRefStart="id9" id="p4">MSMediaKeySession</pc> objects in the function.</source>
          <target>For example, the following sample assigns the variables <pc dataRefEnd="id2" dataRefStart="id1" id="p1">g<ph dataRef="id3" id="ph1" />msMediaKeys</pc> and <pc dataRefEnd="id5" dataRefStart="id4" id="p2">g<ph dataRef="id6" id="ph2" />mediaKeySession</pc> as global variables, which are then assigned to the <pc dataRefEnd="id8" dataRefStart="id7" id="p3">MSMediaKeys</pc> and <pc dataRefEnd="id10" dataRefStart="id9" id="p4">MSMediaKeySession</pc> objects in the function.</target>
        </segment>
      </unit>
      <unit id="167">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://code.msdn.microsoft.com/windowsapps/PlayReady-samples-for-124a3738)</data>
        </originalData>
        <segment state="initial">
          <source>Refer to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">sample applications</pc> for more information.</source>
          <target>Refer to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">sample applications</pc> for more information.</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>