<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-tw" original="1/5/2016 3:36:24 PM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6b36c9b34b8f76cbae8443058dbd949e47dbc0b2</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>DSC for Linux nxSshAuthorizedKeys Resource</source>
            <target state="new">DSC for Linux nxSshAuthorizedKeys Resource</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>The <bpt id="2">&lt;strong&gt;</bpt>nxAuthorizedKeys<ept id="2">&lt;/strong&gt;</ept> resource in PowerShell Desired State Configuration (DSC) provides a mechanism to manage authorized ssh keys for a specified user.</source>
            <target state="new">The <bpt id="2">&lt;strong&gt;</bpt>nxAuthorizedKeys<ept id="2">&lt;/strong&gt;</ept> resource in PowerShell Desired State Configuration (DSC) provides a mechanism to manage authorized ssh keys for a specified user.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>Syntax</source>
            <target state="new">Syntax</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>Properties</source>
            <target state="new">Properties</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>Property</source>
            <target state="new">Property</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>Description</source>
            <target state="new">Description</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>KeyComment</source>
            <target state="new">KeyComment</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>A unique comment for the key.</source>
            <target state="new">A unique comment for the key.</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>This is used to uniquely identify keys.</source>
            <target state="new">This is used to uniquely identify keys.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>Ensure</source>
            <target state="new">Ensure</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>Specifies whether the key is defined.</source>
            <target state="new">Specifies whether the key is defined.</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>Set this property to "Absent" to ensure the key does not exist in the user’s authorized keys file.</source>
            <target state="new">Set this property to "Absent" to ensure the key does not exist in the user’s authorized keys file.</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>Set it to "Present" to ensure the key is defined in the user’s authorized key file.</source>
            <target state="new">Set it to "Present" to ensure the key is defined in the user’s authorized key file.</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>Username</source>
            <target state="new">Username</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>The username to manage ssh authorized keys for.</source>
            <target state="new">The username to manage ssh authorized keys for.</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>If not defined, the default user is "root".</source>
            <target state="new">If not defined, the default user is "root".</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>Key</source>
            <target state="new">Key</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>The contents of the key.</source>
            <target state="new">The contents of the key.</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>This is required if <bpt id="2">&lt;strong&gt;</bpt>Ensure<ept id="2">&lt;/strong&gt;</ept> is set to "Present".</source>
            <target state="new">This is required if <bpt id="2">&lt;strong&gt;</bpt>Ensure<ept id="2">&lt;/strong&gt;</ept> is set to "Present".</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>DependsOn</source>
            <target state="new">DependsOn</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>Indicates that the configuration of another resource must run before this resource is configured.</source>
            <target state="new">Indicates that the configuration of another resource must run before this resource is configured.</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>For example, if the <bpt id="2">&lt;strong&gt;</bpt>ID<ept id="2">&lt;/strong&gt;</ept> of the resource configuration script block that you want to run first is <bpt id="4">&lt;strong&gt;</bpt>ResourceName<ept id="4">&lt;/strong&gt;</ept> and its type is <bpt id="6">&lt;strong&gt;</bpt>ResourceType<ept id="6">&lt;/strong&gt;</ept>, the syntax for using this property is <bpt id="8">&lt;code&gt;</bpt>DependsOn = "[ResourceType]ResourceName"<ept id="8">&lt;/code&gt;</ept>.</source>
            <target state="new">For example, if the <bpt id="2">&lt;strong&gt;</bpt>ID<ept id="2">&lt;/strong&gt;</ept> of the resource configuration script block that you want to run first is <bpt id="4">&lt;strong&gt;</bpt>ResourceName<ept id="4">&lt;/strong&gt;</ept> and its type is <bpt id="6">&lt;strong&gt;</bpt>ResourceType<ept id="6">&lt;/strong&gt;</ept>, the syntax for using this property is <bpt id="8">&lt;code&gt;</bpt>DependsOn = "[ResourceType]ResourceName"<ept id="8">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>Example</source>
            <target state="new">Example</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>The following example defines a public ssh authorized key for the user "monuser".</source>
            <target state="new">The following example defines a public ssh authorized key for the user "monuser".</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>