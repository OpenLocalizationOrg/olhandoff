<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">acomdc_nonhi</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">de7ec95c673a28c32c9c30c0474affeafb96e36c</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-f8f5666" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Run MPI applications in Azure Batch with multi-instance tasks | Microsoft Azure</source>
          <target state="new">Run MPI applications in Azure Batch with multi-instance tasks | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to execute Message Passing Interface (MPI) applications using the multi-instance task type in Azure Batch.</source>
          <target state="new">Learn how to execute Message Passing Interface (MPI) applications using the multi-instance task type in Azure Batch.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Use multi-instance tasks to run Message Passing Interface (MPI) applications in Azure Batch</source>
          <target state="new">Use multi-instance tasks to run Message Passing Interface (MPI) applications in Azure Batch</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>With multi-instance tasks, you can run an Azure Batch task on multiple compute nodes simultaneously to enable high performance computing scenarios like Message Passing Interface (MPI) applications.</source>
          <target state="new">With multi-instance tasks, you can run an Azure Batch task on multiple compute nodes simultaneously to enable high performance computing scenarios like Message Passing Interface (MPI) applications.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>In this article, you will learn how to execute multi-instance tasks using the <bpt id="p1">[</bpt>Batch .NET<ph id="ph1">][</ph>api_net<ept id="p1">]</ept> library.</source>
          <target state="new">In this article, you will learn how to execute multi-instance tasks using the <bpt id="p1">[</bpt>Batch .NET<ph id="ph1">][</ph>api_net<ept id="p1">]</ept> library.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Multi-instance task overview</source>
          <target state="new">Multi-instance task overview</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>In Batch, each task is normally executed on a single compute node--you submit multiple tasks to a job, and the Batch service schedules each task for execution on a node.</source>
          <target state="new">In Batch, each task is normally executed on a single compute node--you submit multiple tasks to a job, and the Batch service schedules each task for execution on a node.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>However, by configuring a task's <bpt id="p1">**</bpt>multi-instance settings<ept id="p1">**</ept>, you can instruct Batch to split that task into subtasks for execution on multiple nodes.</source>
          <target state="new">However, by configuring a task's <bpt id="p1">**</bpt>multi-instance settings<ept id="p1">**</ept>, you can instruct Batch to split that task into subtasks for execution on multiple nodes.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Multi-instance task overview</source>
          <target state="new">Multi-instance task overview</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>When you submit a task with multi-instance settings to a job, Batch performs several steps unique to multi-instance tasks:</source>
          <target state="new">When you submit a task with multi-instance settings to a job, Batch performs several steps unique to multi-instance tasks:</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The Batch service automatically splits the task into one <bpt id="p1">**</bpt>primary<ept id="p1">**</ept> and many <bpt id="p2">**</bpt>subtasks<ept id="p2">**</ept>.</source>
          <target state="new">The Batch service automatically splits the task into one <bpt id="p1">**</bpt>primary<ept id="p1">**</ept> and many <bpt id="p2">**</bpt>subtasks<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Batch then schedules the primary and subtasks for execution on the pool's compute nodes.</source>
          <target state="new">Batch then schedules the primary and subtasks for execution on the pool's compute nodes.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>These tasks, both the primary and the subtasks, download any <bpt id="p1">**</bpt>common resource files<ept id="p1">**</ept> that you specify in the multi-instance settings.</source>
          <target state="new">These tasks, both the primary and the subtasks, download any <bpt id="p1">**</bpt>common resource files<ept id="p1">**</ept> that you specify in the multi-instance settings.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>After the common resource files have been downloaded, the <bpt id="p1">**</bpt>coordination command<ept id="p1">**</ept> that you specify in the multi-instance settings is executed by the primary and subtasks.</source>
          <target state="new">After the common resource files have been downloaded, the <bpt id="p1">**</bpt>coordination command<ept id="p1">**</ept> that you specify in the multi-instance settings is executed by the primary and subtasks.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This coordination command is typically used to start a background service (such as <bpt id="p1">[</bpt>Microsoft MPI<ph id="ph1">][</ph>msmpi_msdn<ept id="p1">]</ept>'s <ph id="ph2">`smpd.exe`</ph>) and may also verify that the nodes are ready to process inter-node messages.</source>
          <target state="new">This coordination command is typically used to start a background service (such as <bpt id="p1">[</bpt>Microsoft MPI<ph id="ph1">][</ph>msmpi_msdn<ept id="p1">]</ept>'s <ph id="ph2">`smpd.exe`</ph>) and may also verify that the nodes are ready to process inter-node messages.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>When the coordination command has been completed successfully by the primary and all subtasks, the multi-instance task's <bpt id="p1">**</bpt>command line<ept id="p1">**</ept> (the "application command") is executed <bpt id="p2">*</bpt>only<ept id="p2">*</ept> by the <bpt id="p3">**</bpt>primary task<ept id="p3">**</ept>.</source>
          <target state="new">When the coordination command has been completed successfully by the primary and all subtasks, the multi-instance task's <bpt id="p1">**</bpt>command line<ept id="p1">**</ept> (the "application command") is executed <bpt id="p2">*</bpt>only<ept id="p2">*</ept> by the <bpt id="p3">**</bpt>primary task<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For example, in an <bpt id="p1">[</bpt>MS-MPI<ph id="ph1">][</ph>msmpi_msdn<ept id="p1">]</ept>-based solution, this is where you execute your MPI-enabled application using</source>
          <target state="new">For example, in an <bpt id="p1">[</bpt>MS-MPI<ph id="ph1">][</ph>msmpi_msdn<ept id="p1">]</ept>-based solution, this is where you execute your MPI-enabled application using</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Though it is functionally distinct, the "multi-instance task" is not a unique task type like the <bpt id="p1">[</bpt>StartTask<ph id="ph1">][</ph>net_starttask<ept id="p1">]</ept> or <bpt id="p2">[</bpt>JobPreparationTask<ph id="ph2">][</ph>net_jobprep<ept id="p2">]</ept>.</source>
          <target state="new">Though it is functionally distinct, the "multi-instance task" is not a unique task type like the <bpt id="p1">[</bpt>StartTask<ph id="ph1">][</ph>net_starttask<ept id="p1">]</ept> or <bpt id="p2">[</bpt>JobPreparationTask<ph id="ph2">][</ph>net_jobprep<ept id="p2">]</ept>.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The multi-instance task is simply a standard Batch task (<bpt id="p1">[</bpt>CloudTask<ph id="ph1">][</ph>net_task<ept id="p1">]</ept> in Batch .NET) whose multi-instance settings have been configured.</source>
          <target state="new">The multi-instance task is simply a standard Batch task (<bpt id="p1">[</bpt>CloudTask<ph id="ph1">][</ph>net_task<ept id="p1">]</ept> in Batch .NET) whose multi-instance settings have been configured.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>In this article, we refer to this as the <bpt id="p1">**</bpt>multi-instance task<ept id="p1">**</ept></source>
          <target state="new">In this article, we refer to this as the <bpt id="p1">**</bpt>multi-instance task<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Requirements for multi-instance tasks</source>
          <target state="new">Requirements for multi-instance tasks</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Multi-instance tasks require a pool with <bpt id="p1">**</bpt>inter-node communication enabled<ept id="p1">**</ept>, and with <bpt id="p2">**</bpt>concurrent task execution disabled<ept id="p2">**</ept>.</source>
          <target state="new">Multi-instance tasks require a pool with <bpt id="p1">**</bpt>inter-node communication enabled<ept id="p1">**</ept>, and with <bpt id="p2">**</bpt>concurrent task execution disabled<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If you try to run a multi-instance task in a pool with internode communication disabled, or with a <bpt id="p1">*</bpt>maxTasksPerNode<ept id="p1">*</ept> value greater than 1, the task will never be scheduled--it will remain indefinitely in the "active" state.</source>
          <target state="new">If you try to run a multi-instance task in a pool with internode communication disabled, or with a <bpt id="p1">*</bpt>maxTasksPerNode<ept id="p1">*</ept> value greater than 1, the task will never be scheduled--it will remain indefinitely in the "active" state.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This code snippet shows the creation of such a pool using the Batch .NET library.</source>
          <target state="new">This code snippet shows the creation of such a pool using the Batch .NET library.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Additionally, multi-instance tasks will execute <bpt id="p1">*</bpt>only<ept id="p1">*</ept> on nodes in <bpt id="p2">**</bpt>pools created after 14-Dec-2015<ept id="p2">**</ept></source>
          <target state="new">Additionally, multi-instance tasks will execute <bpt id="p1">*</bpt>only<ept id="p1">*</ept> on nodes in <bpt id="p2">**</bpt>pools created after 14-Dec-2015<ept id="p2">**</ept></target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>When you use size <bpt id="p1">[</bpt>A8 or A9 compute nodes<ept id="p1">](../virtual-machines/virtual-machines-windows-a8-a9-a10-a11-specs.md)</ept> in your Batch pool, your MPI application can take advantage of Azure's high-performance, low-latency remote direct memory access (RDMA) network.</source>
          <target state="new">When you use size <bpt id="p1">[</bpt>A8 or A9 compute nodes<ept id="p1">](../virtual-machines/virtual-machines-windows-a8-a9-a10-a11-specs.md)</ept> in your Batch pool, your MPI application can take advantage of Azure's high-performance, low-latency remote direct memory access (RDMA) network.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>You can see the full list of compute node sizes available for Batch pools in <bpt id="p1">[</bpt>Sizes for Cloud Services<ept id="p1">](./../cloud-services/cloud-services-sizes-specs.md)</ept></source>
          <target state="new">You can see the full list of compute node sizes available for Batch pools in <bpt id="p1">[</bpt>Sizes for Cloud Services<ept id="p1">](./../cloud-services/cloud-services-sizes-specs.md)</ept></target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Use a StartTask for MPI application installation</source>
          <target state="new">Use a StartTask for MPI application installation</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>To run MPI applications with a multi-instance task, you first need to get your MPI software onto the compute nodes in the pool.</source>
          <target state="new">To run MPI applications with a multi-instance task, you first need to get your MPI software onto the compute nodes in the pool.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This is a great time to use a <bpt id="p1">[</bpt>StartTask<ph id="ph1">][</ph>net_starttask<ept id="p1">]</ept>, which executes whenever a node joins a pool, or is restarted.</source>
          <target state="new">This is a great time to use a <bpt id="p1">[</bpt>StartTask<ph id="ph1">][</ph>net_starttask<ept id="p1">]</ept>, which executes whenever a node joins a pool, or is restarted.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This code snippet creates a StartTask that specifies the MS-MPI setup package as a <bpt id="p1">[</bpt>resource file<ph id="ph1">][</ph>net_resourcefile<ept id="p1">]</ept>, and the command line that will be executed after the resource file is downloaded to the node.</source>
          <target state="new">This code snippet creates a StartTask that specifies the MS-MPI setup package as a <bpt id="p1">[</bpt>resource file<ph id="ph1">][</ph>net_resourcefile<ept id="p1">]</ept>, and the command line that will be executed after the resource file is downloaded to the node.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>You are not limited to using MS-MPI when implementing an MPI solution with multi-instance tasks in Batch.</source>
          <target state="new">You are not limited to using MS-MPI when implementing an MPI solution with multi-instance tasks in Batch.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>You may use any implementation of the MPI standard that is compatible with the operating system you specify for the compute nodes in your pool.</source>
          <target state="new">You may use any implementation of the MPI standard that is compatible with the operating system you specify for the compute nodes in your pool.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Create a multi-instance task with Batch .NET</source>
          <target state="new">Create a multi-instance task with Batch .NET</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Now that we've covered the pool requirements and MPI package installation, let's create the multi-instance task.</source>
          <target state="new">Now that we've covered the pool requirements and MPI package installation, let's create the multi-instance task.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>In this snippet, we create a standard <bpt id="p1">[</bpt>CloudTask<ph id="ph1">][</ph>net_task<ept id="p1">]</ept>, then configure its <bpt id="p2">[</bpt>MultiInstanceSettings<ph id="ph2">][</ph>net_multiinstance_prop<ept id="p2">]</ept> property.</source>
          <target state="new">In this snippet, we create a standard <bpt id="p1">[</bpt>CloudTask<ph id="ph1">][</ph>net_task<ept id="p1">]</ept>, then configure its <bpt id="p2">[</bpt>MultiInstanceSettings<ph id="ph2">][</ph>net_multiinstance_prop<ept id="p2">]</ept> property.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>As mentioned above, the multi-instance task is not a distinct task type, but a standard Batch task configured with multi-instance settings.</source>
          <target state="new">As mentioned above, the multi-instance task is not a distinct task type, but a standard Batch task configured with multi-instance settings.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Primary task and subtasks</source>
          <target state="new">Primary task and subtasks</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>When you create the multi-instance settings for a task, you specify the number of number of compute nodes that are to execute the task.</source>
          <target state="new">When you create the multi-instance settings for a task, you specify the number of number of compute nodes that are to execute the task.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>When you submit the task to a job, the Batch service creates one <bpt id="p1">**</bpt>primary<ept id="p1">**</ept> task and enough <bpt id="p2">**</bpt>subtasks<ept id="p2">**</ept> that together match the number of nodes you specified.</source>
          <target state="new">When you submit the task to a job, the Batch service creates one <bpt id="p1">**</bpt>primary<ept id="p1">**</ept> task and enough <bpt id="p2">**</bpt>subtasks<ept id="p2">**</ept> that together match the number of nodes you specified.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>These tasks are assigned an integer id in the range of 0 to <bpt id="p1">*</bpt>numberOfInstances - 1<ept id="p1">*</ept>.</source>
          <target state="new">These tasks are assigned an integer id in the range of 0 to <bpt id="p1">*</bpt>numberOfInstances - 1<ept id="p1">*</ept>.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The task with id 0 is the primary task, and all other ids are subtasks.</source>
          <target state="new">The task with id 0 is the primary task, and all other ids are subtasks.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>For example, if you create the following multi-instance settings for a task, the primary task would have an id of 0, and the subtasks would have ids 1 through 9.</source>
          <target state="new">For example, if you create the following multi-instance settings for a task, the primary task would have an id of 0, and the subtasks would have ids 1 through 9.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Coordination and application commands</source>
          <target state="new">Coordination and application commands</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>coordination command<ept id="p1">**</ept> is executed by both the primary and subtasks.</source>
          <target state="new">The <bpt id="p1">**</bpt>coordination command<ept id="p1">**</ept> is executed by both the primary and subtasks.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Once the primary task and all subtasks have finished executing the coordination command, the multi-instance task's command line is executed by the primary task <bpt id="p1">*</bpt>only<ept id="p1">*</ept>.</source>
          <target state="new">Once the primary task and all subtasks have finished executing the coordination command, the multi-instance task's command line is executed by the primary task <bpt id="p1">*</bpt>only<ept id="p1">*</ept>.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>We will call this command line the <bpt id="p1">**</bpt>application command<ept id="p1">**</ept> to distinguish it from the coordination command.</source>
          <target state="new">We will call this command line the <bpt id="p1">**</bpt>application command<ept id="p1">**</ept> to distinguish it from the coordination command.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The invocation of the coordination command is blocking--Batch does not execute the application command until the coordination command has returned successfully for all subtasks.</source>
          <target state="new">The invocation of the coordination command is blocking--Batch does not execute the application command until the coordination command has returned successfully for all subtasks.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The coordination command should therefore start any required background services, verify that they are ready for use, and then exit.</source>
          <target state="new">The coordination command should therefore start any required background services, verify that they are ready for use, and then exit.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>For example, this coordination command for a solution using MS-MPI version 7 starts the SMPD service on the node, then exits:</source>
          <target state="new">For example, this coordination command for a solution using MS-MPI version 7 starts the SMPD service on the node, then exits:</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Note the use of <ph id="ph1">`start`</ph> in this coordination command.</source>
          <target state="new">Note the use of <ph id="ph1">`start`</ph> in this coordination command.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This is required because the <ph id="ph1">`smpd.exe`</ph> application does not return immediately after execution.</source>
          <target state="new">This is required because the <ph id="ph1">`smpd.exe`</ph> application does not return immediately after execution.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Without the use of the <bpt id="p1">[</bpt>start<ph id="ph1">][</ph>cmd_start<ept id="p1">]</ept> command, this coordination command would not return, and would therefore block the application command from running.</source>
          <target state="new">Without the use of the <bpt id="p1">[</bpt>start<ph id="ph1">][</ph>cmd_start<ept id="p1">]</ept> command, this coordination command would not return, and would therefore block the application command from running.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>application command<ept id="p1">**</ept>, the command line specified for the multi-instance task, is executed <bpt id="p2">*</bpt>only<ept id="p2">*</ept> by the primary task.</source>
          <target state="new">The <bpt id="p1">**</bpt>application command<ept id="p1">**</ept>, the command line specified for the multi-instance task, is executed <bpt id="p2">*</bpt>only<ept id="p2">*</ept> by the primary task.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>For MS-MPI applications, this will be the execution of your MPI-enabled application using <ph id="ph1">`mpiexec.exe`</ph>.</source>
          <target state="new">For MS-MPI applications, this will be the execution of your MPI-enabled application using <ph id="ph1">`mpiexec.exe`</ph>.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>For example, here is an application command for a solution using MS-MPI version 7:</source>
          <target state="new">For example, here is an application command for a solution using MS-MPI version 7:</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Resource files</source>
          <target state="new">Resource files</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>There are two sets of resource files to consider for multi-instance tasks: <bpt id="p1">**</bpt>common resource files<ept id="p1">**</ept> that <bpt id="p2">*</bpt>all<ept id="p2">*</ept> tasks download (both primary and subtasks), and the <bpt id="p3">**</bpt>resource files<ept id="p3">**</ept> specified for the multi-instance task itself, which <bpt id="p4">*</bpt>only the primary<ept id="p4">*</ept> task downloads.</source>
          <target state="new">There are two sets of resource files to consider for multi-instance tasks: <bpt id="p1">**</bpt>common resource files<ept id="p1">**</ept> that <bpt id="p2">*</bpt>all<ept id="p2">*</ept> tasks download (both primary and subtasks), and the <bpt id="p3">**</bpt>resource files<ept id="p3">**</ept> specified for the multi-instance task itself, which <bpt id="p4">*</bpt>only the primary<ept id="p4">*</ept> task downloads.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>You can specify one or more <bpt id="p1">**</bpt>common resource files<ept id="p1">**</ept> in the multi-instance settings for a task.</source>
          <target state="new">You can specify one or more <bpt id="p1">**</bpt>common resource files<ept id="p1">**</ept> in the multi-instance settings for a task.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>These common resource files are downloaded from <bpt id="p1">[</bpt>Azure Storage<ept id="p1">](./../storage/storage-introduction.md)</ept> into each node's task shared directory by the primary and all subtasks.</source>
          <target state="new">These common resource files are downloaded from <bpt id="p1">[</bpt>Azure Storage<ept id="p1">](./../storage/storage-introduction.md)</ept> into each node's task shared directory by the primary and all subtasks.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>You can access the task shared directory from application and coordination command lines by using the <ph id="ph1">`AZ_BATCH_TASK_SHARED_DIR`</ph> environment variable.</source>
          <target state="new">You can access the task shared directory from application and coordination command lines by using the <ph id="ph1">`AZ_BATCH_TASK_SHARED_DIR`</ph> environment variable.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Resource files that you specify for the multi-instance task itself are downloaded to the task's working directory, <ph id="ph1">`AZ_BATCH_TASK_WORKING_DIR`</ph>, by the primary task <bpt id="p1">*</bpt>only<ept id="p1">*</ept>--the subtasks do not download the resource files specified for the multi-instance task.</source>
          <target state="new">Resource files that you specify for the multi-instance task itself are downloaded to the task's working directory, <ph id="ph1">`AZ_BATCH_TASK_WORKING_DIR`</ph>, by the primary task <bpt id="p1">*</bpt>only<ept id="p1">*</ept>--the subtasks do not download the resource files specified for the multi-instance task.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The contents of the <ph id="ph1">`AZ_BATCH_TASK_SHARED_DIR`</ph> are accessible by the primary and all subtasks that execute on a node.</source>
          <target state="new">The contents of the <ph id="ph1">`AZ_BATCH_TASK_SHARED_DIR`</ph> are accessible by the primary and all subtasks that execute on a node.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>An example task shared directory is <ph id="ph1">`tasks/mybatchjob/job-1/mymultiinstancetask/`</ph>.</source>
          <target state="new">An example task shared directory is <ph id="ph1">`tasks/mybatchjob/job-1/mymultiinstancetask/`</ph>.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The primary and each subtask also have a working directory that is accessible by that task only, and is accessed by using the environment variable</source>
          <target state="new">The primary and each subtask also have a working directory that is accessible by that task only, and is accessed by using the environment variable</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Note that in the code samples in this article, we do not specify resource files for the multi-instance task itself, only for the pool's StartTask and the <bpt id="p1">[</bpt>CommonResourceFiles<ph id="ph1">][</ph>net_multiinsance_commonresfiles<ept id="p1">]</ept> of the multi-instance settings.</source>
          <target state="new">Note that in the code samples in this article, we do not specify resource files for the multi-instance task itself, only for the pool's StartTask and the <bpt id="p1">[</bpt>CommonResourceFiles<ph id="ph1">][</ph>net_multiinsance_commonresfiles<ept id="p1">]</ept> of the multi-instance settings.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Always use the environment variables <ph id="ph1">`AZ_BATCH_TASK_SHARED_DIR`</ph> and <ph id="ph2">`AZ_BATCH_TASK_WORKING_DIR`</ph> to refer to these directories in your command lines.</source>
          <target state="new">Always use the environment variables <ph id="ph1">`AZ_BATCH_TASK_SHARED_DIR`</ph> and <ph id="ph2">`AZ_BATCH_TASK_WORKING_DIR`</ph> to refer to these directories in your command lines.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Do not attempt to construct the paths manually.</source>
          <target state="new">Do not attempt to construct the paths manually.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Task lifetime</source>
          <target state="new">Task lifetime</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The lifetime of the primary task controls the lifetime of the entire multi-instance task.</source>
          <target state="new">The lifetime of the primary task controls the lifetime of the entire multi-instance task.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>When the primary exits, all of the subtasks are terminated.</source>
          <target state="new">When the primary exits, all of the subtasks are terminated.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The exit code of the primary is the exit code of the task, and is therefore used to determine the success or failure of the task for retry purposes.</source>
          <target state="new">The exit code of the primary is the exit code of the task, and is therefore used to determine the success or failure of the task for retry purposes.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>If any of the subtasks fail, exiting with a non-zero return code, for example, the entire multi-instance task fails.</source>
          <target state="new">If any of the subtasks fail, exiting with a non-zero return code, for example, the entire multi-instance task fails.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The multi-instance task is then terminated and retried, up to its retry limit.</source>
          <target state="new">The multi-instance task is then terminated and retried, up to its retry limit.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>When you delete a multi-instance task, the primary and all subtasks are also deleted by the Batch service.</source>
          <target state="new">When you delete a multi-instance task, the primary and all subtasks are also deleted by the Batch service.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>All subtask directories and their files are deleted from the compute nodes, just as for a standard task.</source>
          <target state="new">All subtask directories and their files are deleted from the compute nodes, just as for a standard task.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>TaskConstraints<ph id="ph1">][</ph>net_taskconstraints<ept id="p1">]</ept> for a multi-instance task, such as the <bpt id="p2">[</bpt>MaxTaskRetryCount<ph id="ph2">][</ph>net_taskconstraint_maxretry<ept id="p2">]</ept>, <bpt id="p3">[</bpt>MaxWallClockTime<ph id="ph3">][</ph>net_taskconstraint_maxwallclock<ept id="p3">]</ept>, and <bpt id="p4">[</bpt>RetentionTime<ph id="ph4">][</ph>net_taskconstraint_retention<ept id="p4">]</ept> properties, are honored as they are for a standard task, and apply to the primary and all subtasks.</source>
          <target state="new"><bpt id="p1">[</bpt>TaskConstraints<ph id="ph1">][</ph>net_taskconstraints<ept id="p1">]</ept> for a multi-instance task, such as the <bpt id="p2">[</bpt>MaxTaskRetryCount<ph id="ph2">][</ph>net_taskconstraint_maxretry<ept id="p2">]</ept>, <bpt id="p3">[</bpt>MaxWallClockTime<ph id="ph3">][</ph>net_taskconstraint_maxwallclock<ept id="p3">]</ept>, and <bpt id="p4">[</bpt>RetentionTime<ph id="ph4">][</ph>net_taskconstraint_retention<ept id="p4">]</ept> properties, are honored as they are for a standard task, and apply to the primary and all subtasks.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>However, if you change the <bpt id="p1">[</bpt>RetentionTime<ph id="ph1">][</ph>net_taskconstraint_retention<ept id="p1">]</ept> property after adding the multi-instance task to the job, this change is applied only to the primary task.</source>
          <target state="new">However, if you change the <bpt id="p1">[</bpt>RetentionTime<ph id="ph1">][</ph>net_taskconstraint_retention<ept id="p1">]</ept> property after adding the multi-instance task to the job, this change is applied only to the primary task.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>All of the subtasks will continue to use the original <bpt id="p1">[</bpt>RetentionTime<ph id="ph1">][</ph>net_taskconstraint_retention<ept id="p1">]</ept></source>
          <target state="new">All of the subtasks will continue to use the original <bpt id="p1">[</bpt>RetentionTime<ph id="ph1">][</ph>net_taskconstraint_retention<ept id="p1">]</ept></target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>A compute node's recent task list will reflect the id of a subtask if the recent task was part of a multi-instance task.</source>
          <target state="new">A compute node's recent task list will reflect the id of a subtask if the recent task was part of a multi-instance task.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Obtain information about subtasks</source>
          <target state="new">Obtain information about subtasks</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>To obtain information on subtasks by using the Batch .NET library, call the <bpt id="p1">[</bpt>CloudTask.ListSubtasks<ph id="ph1">][</ph>net_task_listsubtasks<ept id="p1">]</ept> method.</source>
          <target state="new">To obtain information on subtasks by using the Batch .NET library, call the <bpt id="p1">[</bpt>CloudTask.ListSubtasks<ph id="ph1">][</ph>net_task_listsubtasks<ept id="p1">]</ept> method.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>This method returns information on all subtasks, and information about the compute node that executed the tasks.</source>
          <target state="new">This method returns information on all subtasks, and information about the compute node that executed the tasks.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>From this information, you can determine each subtask's root directory, the pool id, its current state, exit code, and more.</source>
          <target state="new">From this information, you can determine each subtask's root directory, the pool id, its current state, exit code, and more.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>You can use this information in combination with the <bpt id="p1">[</bpt>PoolOperations.GetNodeFile<ph id="ph1">][</ph>poolops_getnodefile<ept id="p1">]</ept> method to obtain the subtask's files.</source>
          <target state="new">You can use this information in combination with the <bpt id="p1">[</bpt>PoolOperations.GetNodeFile<ph id="ph1">][</ph>poolops_getnodefile<ept id="p1">]</ept> method to obtain the subtask's files.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Note that this method does not return information for the primary task (id 0).</source>
          <target state="new">Note that this method does not return information for the primary task (id 0).</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Unless otherwise stated, Batch .NET methods that operate on the multi-instance <bpt id="p1">[</bpt>CloudTask<ph id="ph1">][</ph>net_task<ept id="p1">]</ept> itself apply <bpt id="p2">*</bpt>only<ept id="p2">*</ept> to the primary task.</source>
          <target state="new">Unless otherwise stated, Batch .NET methods that operate on the multi-instance <bpt id="p1">[</bpt>CloudTask<ph id="ph1">][</ph>net_task<ept id="p1">]</ept> itself apply <bpt id="p2">*</bpt>only<ept id="p2">*</ept> to the primary task.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>For example, when you call the <bpt id="p1">[</bpt>CloudTask.ListNodeFiles<ph id="ph1">][</ph>net_task_listnodefiles<ept id="p1">]</ept> method on a multi-instance task, only the primary task's files are returned.</source>
          <target state="new">For example, when you call the <bpt id="p1">[</bpt>CloudTask.ListNodeFiles<ph id="ph1">][</ph>net_task_listnodefiles<ept id="p1">]</ept> method on a multi-instance task, only the primary task's files are returned.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The following code snippet shows how to obtain subtask information, as well as request file contents from the nodes on which they executed.</source>
          <target state="new">The following code snippet shows how to obtain subtask information, as well as request file contents from the nodes on which they executed.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Next steps</source>
          <target state="new">Next steps</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>You may want to build a simple MS-MPI application to use while testing multi-instance tasks in Batch.</source>
          <target state="new">You may want to build a simple MS-MPI application to use while testing multi-instance tasks in Batch.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The Microsoft HPC &amp; Azure Batch Team blog article, <bpt id="p1">[</bpt>How to compile and run a simple MS-MPI program<ph id="ph1">][</ph>msmpi_howto<ept id="p1">]</ept>, contains a walk-through for creating a simple MPI application using MS-MPI.</source>
          <target state="new">The Microsoft HPC &amp; Azure Batch Team blog article, <bpt id="p1">[</bpt>How to compile and run a simple MS-MPI program<ph id="ph1">][</ph>msmpi_howto<ept id="p1">]</ept>, contains a walk-through for creating a simple MPI application using MS-MPI.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Check out the <bpt id="p1">[</bpt>Microsoft MPI<ph id="ph1">][</ph>msmpi_msdn<ept id="p1">]</ept> page on MSDN for the latest information on MS-MPI.</source>
          <target state="new">Check out the <bpt id="p1">[</bpt>Microsoft MPI<ph id="ph1">][</ph>msmpi_msdn<ept id="p1">]</ept> page on MSDN for the latest information on MS-MPI.</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>api_net</source>
          <target state="new">api_net</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>api_rest</source>
          <target state="new">api_rest</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>batch_explorer</source>
          <target state="new">batch_explorer</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>cmd_start</source>
          <target state="new">cmd_start</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>github_samples</source>
          <target state="new">github_samples</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>msmpi_msdn</source>
          <target state="new">msmpi_msdn</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>msmpi_sdk</source>
          <target state="new">msmpi_sdk</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>msmpi_howto</source>
          <target state="new">msmpi_howto</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>net_jobprep</source>
          <target state="new">net_jobprep</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>net_multiinstance_class</source>
          <target state="new">net_multiinstance_class</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>net_multiinstance_prop</source>
          <target state="new">net_multiinstance_prop</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>net_multiinsance_commonresfiles</source>
          <target state="new">net_multiinsance_commonresfiles</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>net_multiinstance_coordcmdline</source>
          <target state="new">net_multiinstance_coordcmdline</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>net_multiinstance_numinstances</source>
          <target state="new">net_multiinstance_numinstances</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>net_pool</source>
          <target state="new">net_pool</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>net_pool_create</source>
          <target state="new">net_pool_create</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>net_pool_starttask</source>
          <target state="new">net_pool_starttask</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>net_resourcefile</source>
          <target state="new">net_resourcefile</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>net_starttask</source>
          <target state="new">net_starttask</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>net_starttask_cmdline</source>
          <target state="new">net_starttask_cmdline</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>net_task</source>
          <target state="new">net_task</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>net_taskconstraints</source>
          <target state="new">net_taskconstraints</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>net_taskconstraint_maxretry</source>
          <target state="new">net_taskconstraint_maxretry</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>net_taskconstraint_maxwallclock</source>
          <target state="new">net_taskconstraint_maxwallclock</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>net_taskconstraint_retention</source>
          <target state="new">net_taskconstraint_retention</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>net_task_listsubtasks</source>
          <target state="new">net_task_listsubtasks</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>net_task_listnodefiles</source>
          <target state="new">net_task_listnodefiles</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>poolops_getnodefile</source>
          <target state="new">poolops_getnodefile</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>rest_multiinstance</source>
          <target state="new">rest_multiinstance</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>1<ph id="ph1">]: ./media/batch-mpi/batch_mpi_01.png "</ph>Multi-instance overview</source>
          <target state="new">1<ph id="ph1">]: ./media/batch-mpi/batch_mpi_01.png "</ph>Multi-instance overview</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>