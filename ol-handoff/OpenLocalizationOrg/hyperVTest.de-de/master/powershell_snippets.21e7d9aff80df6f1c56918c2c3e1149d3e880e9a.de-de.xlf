<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="de-de" original="foo.file" tool-id="10a1a84f-b7e9-47df-937e-891a2bb45c58" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="10a1a84f-b7e9-47df-937e-891a2bb45c58" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
      <olfilehash xmlns="">a7640c222d084ad8705adf3206cc238fc33ff331</olfilehash>
    </header>
    <body>
      <group id="f8ce5969-77b5-407d-8d03-0de6a1ab3dd6">
        <trans-unit id="831bd41e-d9de-410a-adb1-35eb7eb633e4" xml:space="preserve">
          <source>ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9</source>
          <target state="new">ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9</target>
        </trans-unit>
        <trans-unit id="931e8917-9eeb-4e61-a49c-970c8f123648" xml:space="preserve">
          <source>title: PowerShell Snippets</source>
          <target state="new">title: PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="e4046625-6cd8-4387-8044-63024550c783" xml:space="preserve">
          <source>PowerShell Snippets</source>
          <target state="new">PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="638815df-0d86-41b3-b67f-a13a64a1470f" xml:space="preserve">
          <source>Adding this sentence to validate the bug 451132 result.</source>
          <target state="new">Adding this sentence to validate the bug 451132 result.</target>
        </trans-unit>
        <trans-unit id="c0982fb8-c868-422f-841b-78107af812b8" xml:space="preserve">
          <source>PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</source>
          <target state="new">PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</target>
        </trans-unit>
        <trans-unit id="e31861d5-ba9e-4eb2-8798-c7abf2ee0232" xml:space="preserve">
          <source>All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</source>
          <target state="new">All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</target>
        </trans-unit>
        <trans-unit id="56713783-6e24-44d6-aef6-479f0c5e02cf" xml:space="preserve">
          <source>If you aren't sure if you have the right permissions, type <bpt id="367b182c-635a-4c69-9183-e5d344302ca7">&lt;code&gt;</bpt>Get-VM<ept id="367b182c-635a-4c69-9183-e5d344302ca7">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</source>
          <target state="new">If you aren't sure if you have the right permissions, type <bpt id="367b182c-635a-4c69-9183-e5d344302ca7">&lt;code&gt;</bpt>Get-VM<ept id="367b182c-635a-4c69-9183-e5d344302ca7">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</target>
        </trans-unit>
        <trans-unit id="f008b1f5-b253-4c91-b172-d87763d52a2d" xml:space="preserve">
          <source>PowerShell Direct tools</source>
          <target state="new">PowerShell Direct tools</target>
        </trans-unit>
        <trans-unit id="3f2baa0c-0c99-4bd1-9c0c-292d70dbec20" xml:space="preserve">
          <source>All of the scripts and snippets in this section will rely on the following basics.</source>
          <target state="new">All of the scripts and snippets in this section will rely on the following basics.</target>
        </trans-unit>
        <trans-unit id="5190d8e6-ea00-4c60-aa24-04e0ab6efd7f" xml:space="preserve">
          <source><bpt id="d1fcba9b-ff1d-4122-b453-25a88e92c851">&lt;strong&gt;</bpt>Requirements<ept id="d1fcba9b-ff1d-4122-b453-25a88e92c851">&lt;/strong&gt;</ept> :</source>
          <target state="new"><bpt id="d1fcba9b-ff1d-4122-b453-25a88e92c851">&lt;strong&gt;</bpt>Requirements<ept id="d1fcba9b-ff1d-4122-b453-25a88e92c851">&lt;/strong&gt;</ept> :</target>
        </trans-unit>
        <trans-unit id="88570dca-a603-4a23-926d-08758853b585" xml:space="preserve">
          <source>PowerShell Direct.</source>
          <target state="new">PowerShell Direct.</target>
        </trans-unit>
        <trans-unit id="310b3fe3-ad0b-4b02-8bb2-e6636bc716fa" xml:space="preserve">
          <source>Windows 10 guest and host OS.</source>
          <target state="new">Windows 10 guest and host OS.</target>
        </trans-unit>
        <trans-unit id="4eae4c64-cc97-4237-8a1b-7bd3d7b67195" xml:space="preserve">
          <source><bpt id="56617689-8e52-469b-b12d-a719dd7e54b1">&lt;strong&gt;</bpt>Common Variables<ept id="56617689-8e52-469b-b12d-a719dd7e54b1">&lt;/strong&gt;</ept> :</source>
          <target state="new"><bpt id="56617689-8e52-469b-b12d-a719dd7e54b1">&lt;strong&gt;</bpt>Common Variables<ept id="56617689-8e52-469b-b12d-a719dd7e54b1">&lt;/strong&gt;</ept> :</target>
        </trans-unit>
        <trans-unit id="f5bd9c96-1c83-480b-af62-85de74f2b419" xml:space="preserve">
          <source><bpt id="f0341d66-1d32-425d-b996-675b835d09d4">&lt;code&gt;</bpt>$VMName<ept id="f0341d66-1d32-425d-b996-675b835d09d4">&lt;/code&gt;</ept> -- this is a string with the VMName.</source>
          <target state="new"><bpt id="f0341d66-1d32-425d-b996-675b835d09d4">&lt;code&gt;</bpt>$VMName<ept id="f0341d66-1d32-425d-b996-675b835d09d4">&lt;/code&gt;</ept> -- this is a string with the VMName.</target>
        </trans-unit>
        <trans-unit id="5b26e44f-97b3-4b01-a983-de39f86772f2" xml:space="preserve">
          <source>See a list of available VMs with <bpt id="d6600ad5-478d-446d-967f-9fedf0283f75">&lt;code&gt;</bpt>Get-VM<ept id="d6600ad5-478d-446d-967f-9fedf0283f75">&lt;/code&gt;</ept></source>
          <target state="new">See a list of available VMs with <bpt id="d6600ad5-478d-446d-967f-9fedf0283f75">&lt;code&gt;</bpt>Get-VM<ept id="d6600ad5-478d-446d-967f-9fedf0283f75">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="a9b7cc66-b4eb-43d6-bcb2-622e60b4370d" xml:space="preserve">
          <source><bpt id="189c0620-a3fc-44d0-887a-3f435fed0953">&lt;code&gt;</bpt>$cred<ept id="189c0620-a3fc-44d0-887a-3f435fed0953">&lt;/code&gt;</ept> -- Credential for the guest OS.</source>
          <target state="new"><bpt id="189c0620-a3fc-44d0-887a-3f435fed0953">&lt;code&gt;</bpt>$cred<ept id="189c0620-a3fc-44d0-887a-3f435fed0953">&lt;/code&gt;</ept> -- Credential for the guest OS.</target>
        </trans-unit>
        <trans-unit id="cc8cfeba-980f-4ccd-bcda-38f11d8b0b13" xml:space="preserve">
          <source>Can be populated using <bpt id="2997ccd4-8fc3-418a-b843-ebce40e7c10f">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="2997ccd4-8fc3-418a-b843-ebce40e7c10f">&lt;/code&gt;</ept></source>
          <target state="new">Can be populated using <bpt id="2997ccd4-8fc3-418a-b843-ebce40e7c10f">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="2997ccd4-8fc3-418a-b843-ebce40e7c10f">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="550ee6b8-21c5-4d83-b320-0a90a2c690fb" xml:space="preserve">
          <source>Check if the guest has booted</source>
          <target state="new">Check if the guest has booted</target>
        </trans-unit>
        <trans-unit id="e5f64591-26d1-45c0-91f1-e7b631d0e013" xml:space="preserve">
          <source>Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</source>
          <target state="new">Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</target>
        </trans-unit>
        <trans-unit id="8ef23684-f638-4ea6-8a26-fce3f9077e96" xml:space="preserve">
          <source>Use this command to check whether the guest has booted.</source>
          <target state="new">Use this command to check whether the guest has booted.</target>
        </trans-unit>
        <trans-unit id="19eed320-f746-4113-ab72-52fdd78957b1" xml:space="preserve">
          <source><bpt id="4fc0b16e-46e0-4901-9519-b4f5ead665fa">&lt;strong&gt;</bpt>Outcome<ept id="4fc0b16e-46e0-4901-9519-b4f5ead665fa">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="4fc0b16e-46e0-4901-9519-b4f5ead665fa">&lt;strong&gt;</bpt>Outcome<ept id="4fc0b16e-46e0-4901-9519-b4f5ead665fa">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="96127912-ee71-4ffe-809d-bdb15c01a909" xml:space="preserve">
          <source>Prints a friendly message declaring the state of the guest OS.</source>
          <target state="new">Prints a friendly message declaring the state of the guest OS.</target>
        </trans-unit>
        <trans-unit id="facbe3d7-471b-4580-974b-13363dde8d5f" xml:space="preserve">
          <source>Script locking until the guest has booted</source>
          <target state="new">Script locking until the guest has booted</target>
        </trans-unit>
        <trans-unit id="4c6c9790-7f6a-42cf-8155-ae0254b24158" xml:space="preserve">
          <source>The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</source>
          <target state="new">The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</target>
        </trans-unit>
        <trans-unit id="151fb436-24fd-472b-b80e-dec799b9adf6" xml:space="preserve">
          <source><bpt id="9f50ed2f-3a59-4099-b1e7-470e969e9593">&lt;strong&gt;</bpt>Outcome<ept id="9f50ed2f-3a59-4099-b1e7-470e969e9593">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="9f50ed2f-3a59-4099-b1e7-470e969e9593">&lt;strong&gt;</bpt>Outcome<ept id="9f50ed2f-3a59-4099-b1e7-470e969e9593">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="93b5fec9-1ee2-4b7f-bb7a-8ae93b67a15c" xml:space="preserve">
          <source>Prints a friendly message and locks until the connection to the VM succeeds.</source>
          <target state="new">Prints a friendly message and locks until the connection to the VM succeeds.</target>
        </trans-unit>
        <trans-unit id="b2e573cf-a679-4895-9db9-f16459c8c31a" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="b60ffb98-7026-45df-90b6-7ba04aa85a86" xml:space="preserve">
          <source>Script locking until the guest has a network</source>
          <target state="new">Script locking until the guest has a network</target>
        </trans-unit>
        <trans-unit id="a170f6d5-a703-4735-aa95-ea17d8d55781" xml:space="preserve">
          <source>With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</source>
          <target state="new">With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</target>
        </trans-unit>
        <trans-unit id="cc2347f1-2e11-4034-8b8d-e903193f3638" xml:space="preserve">
          <source><bpt id="8f35c580-0585-4441-9c00-84ce03118c73">&lt;em&gt;</bpt>* Outcome *<ept id="8f35c580-0585-4441-9c00-84ce03118c73">&lt;/em&gt;</ept></source>
          <target state="new"><bpt id="8f35c580-0585-4441-9c00-84ce03118c73">&lt;em&gt;</bpt>* Outcome *<ept id="8f35c580-0585-4441-9c00-84ce03118c73">&lt;/em&gt;</ept></target>
        </trans-unit>
        <trans-unit id="8c882988-6ab2-46ec-85bb-5cf18943045b" xml:space="preserve">
          <source>Locks until a DHCP lease is recieved.</source>
          <target state="new">Locks until a DHCP lease is recieved.</target>
        </trans-unit>
        <trans-unit id="26f44dcd-fb03-4c1f-91ff-29dac93f0046" xml:space="preserve">
          <source>Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</source>
          <target state="new">Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</target>
        </trans-unit>
        <trans-unit id="ddda8541-1f94-42d2-8b97-343df5492dbd" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="e9108970-4d35-4c9b-942f-06e5a23e0c09" xml:space="preserve">
          <source>Managing credentials with PowerShell</source>
          <target state="new">Managing credentials with PowerShell</target>
        </trans-unit>
        <trans-unit id="c235e56d-ba3d-4631-b032-31d768e8e0fb" xml:space="preserve">
          <source>Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</source>
          <target state="new">Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</target>
        </trans-unit>
        <trans-unit id="d56c8f9a-78ff-46c7-ba73-a85352f4b6e9" xml:space="preserve">
          <source>There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</source>
          <target state="new">There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</target>
        </trans-unit>
        <trans-unit id="172c601e-17eb-45ef-93d4-c9298fb8a8e0" xml:space="preserve">
          <source>The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</source>
          <target state="new">The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</target>
        </trans-unit>
        <trans-unit id="1831da1c-5793-4d37-bbf1-00bfa259f2c6" xml:space="preserve">
          <source>This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</source>
          <target state="new">This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</target>
        </trans-unit>
        <trans-unit id="3709688a-7c3a-4500-94e6-9d374c811514" xml:space="preserve">
          <source>In this scenario you can just run <bpt id="4f70aa7d-33f0-4ef2-875a-c9c83209337d">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="4f70aa7d-33f0-4ef2-875a-c9c83209337d">&lt;/code&gt;</ept>.</source>
          <target state="new">In this scenario you can just run <bpt id="4f70aa7d-33f0-4ef2-875a-c9c83209337d">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="4f70aa7d-33f0-4ef2-875a-c9c83209337d">&lt;/code&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="1c0e1744-9b97-4887-870c-0ef75a5c439a" xml:space="preserve">
          <source>Let PowerShell prompt you for credentials</source>
          <target state="new">Let PowerShell prompt you for credentials</target>
        </trans-unit>
        <trans-unit id="f241d9da-7489-46fd-9fb1-8c8799f934d1" xml:space="preserve">
          <source>If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</source>
          <target state="new">If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</target>
        </trans-unit>
        <trans-unit id="49e196ca-f5ec-4353-84b5-273e3767f9ea" xml:space="preserve">
          <source>Store credentials in a variable for reuse.</source>
          <target state="new">Store credentials in a variable for reuse.</target>
        </trans-unit>
        <trans-unit id="b07b1293-3e8c-4c30-9d88-fed64b30ce96" xml:space="preserve">
          <source>Running a simple command like this:</source>
          <target state="new">Running a simple command like this:</target>
        </trans-unit>
        <trans-unit id="de23565b-8814-4ae5-aa96-4dad33c897e3" xml:space="preserve">
          <source>And then running something like this:</source>
          <target state="new">And then running something like this:</target>
        </trans-unit>
        <trans-unit id="b3f8cd98-0f75-4dbe-a6cb-6f34fffbc743" xml:space="preserve">
          <source>Will mean that you only get prompted once per script/PowerShell session for your credentials.</source>
          <target state="new">Will mean that you only get prompted once per script/PowerShell session for your credentials.</target>
        </trans-unit>
        <trans-unit id="6a1488e2-a641-4a68-8a88-4968a182ec6a" xml:space="preserve">
          <source>Code your credentials into your scripts.</source>
          <target state="new">Code your credentials into your scripts.</target>
        </trans-unit>
        <trans-unit id="8753c466-bb42-4a90-b713-874e7da6b463" xml:space="preserve">
          <source><bpt id="a0e63df9-6734-484c-9294-cb3f42f36e4a">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="a0e63df9-6734-484c-9294-cb3f42f36e4a">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="a0e63df9-6734-484c-9294-cb3f42f36e4a">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="a0e63df9-6734-484c-9294-cb3f42f36e4a">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="21a71dc7-ba15-402d-b441-1d45a66b8ef3" xml:space="preserve">
          <source>Warning:  _Do not do this in a production system.</source>
          <target state="new">Warning:  _Do not do this in a production system.</target>
        </trans-unit>
        <trans-unit id="7b40908b-a7c8-41c3-b698-4d6b5c135f5a" xml:space="preserve">
          <source>Do not do this with real passwords._</source>
          <target state="new">Do not do this with real passwords._</target>
        </trans-unit>
        <trans-unit id="c334005d-2804-4234-b199-4d12218d7035" xml:space="preserve">
          <source>You can hand craft a PSCredential object with some code like this:</source>
          <target state="new">You can hand craft a PSCredential object with some code like this:</target>
        </trans-unit>
        <trans-unit id="79868e39-4af2-4c26-9245-97bb87ae9edc" xml:space="preserve">
          <source>Grossly insecure - but useful for testing.</source>
          <target state="new">Grossly insecure - but useful for testing.</target>
        </trans-unit>
        <trans-unit id="5d9d8e88-c7ca-4ca3-99c8-c19d1145ce4b" xml:space="preserve">
          <source>Now you get no prompts at all in this session.</source>
          <target state="new">Now you get no prompts at all in this session.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>