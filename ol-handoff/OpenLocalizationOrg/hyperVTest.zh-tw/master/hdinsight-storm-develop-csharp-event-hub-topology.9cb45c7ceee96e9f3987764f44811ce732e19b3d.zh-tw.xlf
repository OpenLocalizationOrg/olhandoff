<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="main" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Process events from Event Hubs with Storm on HDInsight | Microsoft Azure</source>
          <target state="new">Process events from Event Hubs with Storm on HDInsight | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to process Event Hubs data with a C# Storm topology created in Visual Studio using the HDInsight Tools for Visual Studio.</source>
          <target state="new">Learn how to process Event Hubs data with a C# Storm topology created in Visual Studio using the HDInsight Tools for Visual Studio.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Process events from Azure Event Hubs with Storm on HDInsight (C#)</source>
          <target state="new">Process events from Azure Event Hubs with Storm on HDInsight (C#)</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Azure Event Hubs allows you to process massive amounts of data from websites, apps, and devices.</source>
          <target state="new">Azure Event Hubs allows you to process massive amounts of data from websites, apps, and devices.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The Event Hubs spout makes it easy to use Apache Storm on HDInsight to analyze this data in real time.</source>
          <target state="new">The Event Hubs spout makes it easy to use Apache Storm on HDInsight to analyze this data in real time.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>You can also write data to Event Hubs from Storm by using the Event Hubs bolt.</source>
          <target state="new">You can also write data to Event Hubs from Storm by using the Event Hubs bolt.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>In this tutorial, you will learn how to use the HDInsight Tools for Visual Studio and the Event Hubs spout and bolt to create two hybrid C#/Java topologies:</source>
          <target state="new">In this tutorial, you will learn how to use the HDInsight Tools for Visual Studio and the Event Hubs spout and bolt to create two hybrid C#/Java topologies:</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>EventHubWriter<ept id="p1">**</ept>: Randomly generates data and writes it to Event Hubs</source>
          <target state="new"><bpt id="p1">**</bpt>EventHubWriter<ept id="p1">**</ept>: Randomly generates data and writes it to Event Hubs</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p2">**</bpt>EventHubReader<ept id="p2">**</ept>: Reads data from Event Hubs and stores it in Azure Table storage</source>
          <target state="new"><bpt id="p2">**</bpt>EventHubReader<ept id="p2">**</ept>: Reads data from Event Hubs and stores it in Azure Table storage</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><ph id="ph2">[AZURE.NOTE]</ph><ph id="ph3" /> The steps in this document only work with a Windows-based HDInsight cluster.</source>
          <target state="new"><ph id="ph2">[AZURE.NOTE]</ph><ph id="ph3" /> The steps in this document only work with a Windows-based HDInsight cluster.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For a Java version of this project, which will work with either a Linux-based or Windows-based cluster, see <bpt id="p3">[</bpt>Process events from Azure Event Hubs with Storm on HDInsight (Java)<ept id="p3">](hdinsight-storm-develop-java-event-hub-topology.md)</ept>.</source>
          <target state="new">For a Java version of this project, which will work with either a Linux-based or Windows-based cluster, see <bpt id="p3">[</bpt>Process events from Azure Event Hubs with Storm on HDInsight (Java)<ept id="p3">](hdinsight-storm-develop-java-event-hub-topology.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="new">Prerequisites</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>An <bpt id="p4">[</bpt>Apache Storm on HDInsight cluster<ept id="p4">](hdinsight-apache-storm-tutorial-get-started.md)</ept></source>
          <target state="new">An <bpt id="p4">[</bpt>Apache Storm on HDInsight cluster<ept id="p4">](hdinsight-apache-storm-tutorial-get-started.md)</ept></target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>An <bpt id="p5">[</bpt>Azure Event Hub<ept id="p5">](../event-hubs/event-hubs-csharp-ephcs-getstarted.md)</ept></source>
          <target state="new">An <bpt id="p5">[</bpt>Azure Event Hub<ept id="p5">](../event-hubs/event-hubs-csharp-ephcs-getstarted.md)</ept></target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The <bpt id="p6">[</bpt>Azure .NET SDK<ept id="p6">](http://azure.microsoft.com/downloads/)</ept></source>
          <target state="new">The <bpt id="p6">[</bpt>Azure .NET SDK<ept id="p6">](http://azure.microsoft.com/downloads/)</ept></target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The <bpt id="p7">[</bpt>HDInsight Tools for Visual Studio<ept id="p7">](hdinsight-hadoop-visual-studio-tools-get-started.md)</ept></source>
          <target state="new">The <bpt id="p7">[</bpt>HDInsight Tools for Visual Studio<ept id="p7">](hdinsight-hadoop-visual-studio-tools-get-started.md)</ept></target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Completed project</source>
          <target state="new">Completed project</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You can download a complete version of the project created in this tutorial from GitHub: <bpt id="p8">[</bpt>eventhub-storm-hybrid<ept id="p8">](https://github.com/Blackmist/eventhub-storm-hybrid)</ept>.</source>
          <target state="new">You can download a complete version of the project created in this tutorial from GitHub: <bpt id="p8">[</bpt>eventhub-storm-hybrid<ept id="p8">](https://github.com/Blackmist/eventhub-storm-hybrid)</ept>.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>However, you still need to provide configuration settings by following the steps in this tutorial.</source>
          <target state="new">However, you still need to provide configuration settings by following the steps in this tutorial.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><ph id="ph4">[AZURE.NOTE]</ph><ph id="ph5" /> When you use the completed project, you must use the <bpt id="p9">**</bpt>NuGet Package Manager<ept id="p9">**</ept><ph id="ph6" /> to restore the packages that are required by this solution.</source>
          <target state="new"><ph id="ph4">[AZURE.NOTE]</ph><ph id="ph5" /> When you use the completed project, you must use the <bpt id="p9">**</bpt>NuGet Package Manager<ept id="p9">**</ept><ph id="ph6" /> to restore the packages that are required by this solution.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Event Hubs spout and bolt</source>
          <target state="new">Event Hubs spout and bolt</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The Event Hubs spout and bolt are Java components that allow you to easily work with Event Hubs from Apache Storm.</source>
          <target state="new">The Event Hubs spout and bolt are Java components that allow you to easily work with Event Hubs from Apache Storm.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Although these components are written in Java, the HDInsight Tools for Visual Studio allow you to create hybrid topologies that mix C# and Java components.</source>
          <target state="new">Although these components are written in Java, the HDInsight Tools for Visual Studio allow you to create hybrid topologies that mix C# and Java components.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The spout and bolt are distributed as a single Java archive (.jar) file named <bpt id="p10">**</bpt>eventhubs-storm-spout-0.9-jar-with-dependencies.jar<ept id="p10">**</ept>.</source>
          <target state="new">The spout and bolt are distributed as a single Java archive (.jar) file named <bpt id="p10">**</bpt>eventhubs-storm-spout-0.9-jar-with-dependencies.jar<ept id="p10">**</ept>.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Download the .jar file</source>
          <target state="new">Download the .jar file</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The most recent version of the <bpt id="p11">**</bpt>eventhubs-storm-spout-0.9-jar-with-dependencies.jar<ept id="p11">**</ept><ph id="ph7" /> file is included in the <ph id="ph8">&lt;a href="https://github.com/hdinsight/hdinsight-storm-examples" target="_blank"&gt;</ph>HDInsight Storm examples<ph id="ph9">&lt;/a&gt;</ph><ph id="ph10" /> project under the <bpt id="p12">**</bpt>lib<ept id="p12">**</ept><ph id="ph11" /> folder.</source>
          <target state="new">The most recent version of the <bpt id="p11">**</bpt>eventhubs-storm-spout-0.9-jar-with-dependencies.jar<ept id="p11">**</ept><ph id="ph7" /> file is included in the <ph id="ph8">&lt;a href="https://github.com/hdinsight/hdinsight-storm-examples" target="_blank"&gt;</ph>HDInsight Storm examples<ph id="ph9">&lt;/a&gt;</ph><ph id="ph10" /> project under the <bpt id="p12">**</bpt>lib<ept id="p12">**</ept><ph id="ph11" /> folder.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>To download the file, use one of the following methods.</source>
          <target state="new">To download the file, use one of the following methods.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><ph id="ph12">[AZURE.NOTE]</ph><ph id="ph13" /> The spout and bolt have been submitted for inclusion in the Apache Storm project.</source>
          <target state="new"><ph id="ph12">[AZURE.NOTE]</ph><ph id="ph13" /> The spout and bolt have been submitted for inclusion in the Apache Storm project.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For more information, see <ph id="ph14">&lt;a href="https://github.com/apache/storm/pull/336/files"&gt;</ph>STORM-583: Initial check-in for storm-event hubs<ph id="ph15">&lt;/a&gt;</ph><ph id="ph16" /> in GitHub.</source>
          <target state="new">For more information, see <ph id="ph14">&lt;a href="https://github.com/apache/storm/pull/336/files"&gt;</ph>STORM-583: Initial check-in for storm-event hubs<ph id="ph15">&lt;/a&gt;</ph><ph id="ph16" /> in GitHub.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p13">**</bpt>Download a ZIP file<ept id="p13">**</ept>: From the <ph id="ph17">&lt;a href="https://github.com/hdinsight/hdinsight-storm-examples" target="_blank"&gt;</ph>HDInsight Storm examples<ph id="ph18">&lt;/a&gt;</ph><ph id="ph19" /> site, select <bpt id="p14">**</bpt>Download ZIP<ept id="p14">**</ept><ph id="ph20" /> in the right pane to download a .zip file that contains the project.</source>
          <target state="new"><bpt id="p13">**</bpt>Download a ZIP file<ept id="p13">**</ept>: From the <ph id="ph17">&lt;a href="https://github.com/hdinsight/hdinsight-storm-examples" target="_blank"&gt;</ph>HDInsight Storm examples<ph id="ph18">&lt;/a&gt;</ph><ph id="ph19" /> site, select <bpt id="p14">**</bpt>Download ZIP<ept id="p14">**</ept><ph id="ph20" /> in the right pane to download a .zip file that contains the project.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><ph id="ph21">![</ph>download zip button<ph id="ph22">](./media/hdinsight-storm-develop-csharp-event-hub-topology/download.png)</ph></source>
          <target state="new"><ph id="ph21">![</ph>download zip button<ph id="ph22">](./media/hdinsight-storm-develop-csharp-event-hub-topology/download.png)</ph></target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>After the file is downloaded, you can extract the archive, and the file will be in the <bpt id="p15">**</bpt>lib<ept id="p15">**</ept><ph id="ph23" /> directory.</source>
          <target state="new">After the file is downloaded, you can extract the archive, and the file will be in the <bpt id="p15">**</bpt>lib<ept id="p15">**</ept><ph id="ph23" /> directory.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p16">**</bpt>Clone the project<ept id="p16">**</ept>: If you have <ph id="ph24">&lt;a href="http://git-scm.com/" target="_blank"&gt;</ph>Git<ph id="ph25">&lt;/a&gt;</ph><ph id="ph26" /> installed, use the following command to clone the repository locally, then find the file in the <bpt id="p17">**</bpt>lib<ept id="p17">**</ept><ph id="ph27" /> directory.</source>
          <target state="new"><bpt id="p16">**</bpt>Clone the project<ept id="p16">**</ept>: If you have <ph id="ph24">&lt;a href="http://git-scm.com/" target="_blank"&gt;</ph>Git<ph id="ph25">&lt;/a&gt;</ph><ph id="ph26" /> installed, use the following command to clone the repository locally, then find the file in the <bpt id="p17">**</bpt>lib<ept id="p17">**</ept><ph id="ph27" /> directory.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Configure Event Hub</source>
          <target state="new">Configure Event Hub</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Event Hubs is the data source for this example.</source>
          <target state="new">Event Hubs is the data source for this example.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Use the following steps to create a new Event Hub.</source>
          <target state="new">Use the following steps to create a new Event Hub.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>From the <bpt id="p18">[</bpt>Azure Classic Portal<ept id="p18">](https://manage.windowsazure.com)</ept>, select <bpt id="p19">**</bpt>NEW<ept id="p19">**</ept><ph id="ph28" /> &gt; <bpt id="p20">**</bpt>Service Bus<ept id="p20">**</ept><ph id="ph29" /> &gt; <bpt id="p21">**</bpt>Event Hub<ept id="p21">**</ept><ph id="ph30" /> &gt; <bpt id="p22">**</bpt>Custom Create<ept id="p22">**</ept>.</source>
          <target state="new">From the <bpt id="p18">[</bpt>Azure Classic Portal<ept id="p18">](https://manage.windowsazure.com)</ept>, select <bpt id="p19">**</bpt>NEW<ept id="p19">**</ept><ph id="ph28" /> &gt; <bpt id="p20">**</bpt>Service Bus<ept id="p20">**</ept><ph id="ph29" /> &gt; <bpt id="p21">**</bpt>Event Hub<ept id="p21">**</ept><ph id="ph30" /> &gt; <bpt id="p22">**</bpt>Custom Create<ept id="p22">**</ept>.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p23">**</bpt>Add a new Event Hub<ept id="p23">**</ept><ph id="ph31" /> screen, enter an <bpt id="p24">**</bpt>Event Hub Name<ept id="p24">**</ept>, select the <bpt id="p25">**</bpt>Region<ept id="p25">**</ept><ph id="ph32" /> to create the hub in, and create a new namespace or select an existing one.</source>
          <target state="new">On the <bpt id="p23">**</bpt>Add a new Event Hub<ept id="p23">**</ept><ph id="ph31" /> screen, enter an <bpt id="p24">**</bpt>Event Hub Name<ept id="p24">**</ept>, select the <bpt id="p25">**</bpt>Region<ept id="p25">**</ept><ph id="ph32" /> to create the hub in, and create a new namespace or select an existing one.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p26">**</bpt>Arrow<ept id="p26">**</ept><ph id="ph33" /> to continue.</source>
          <target state="new">Click the <bpt id="p26">**</bpt>Arrow<ept id="p26">**</ept><ph id="ph33" /> to continue.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><ph id="ph34">![</ph>wizard page 1<ph id="ph35">](./media/hdinsight-storm-develop-csharp-event-hub-topology/wiz1.png)</ph></source>
          <target state="new"><ph id="ph34">![</ph>wizard page 1<ph id="ph35">](./media/hdinsight-storm-develop-csharp-event-hub-topology/wiz1.png)</ph></target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><ph id="ph36">[AZURE.NOTE]</ph><ph id="ph37" /> You should select the same <bpt id="p27">**</bpt>Location<ept id="p27">**</ept><ph id="ph38" /> as your Storm on HDInsight server to reduce latency and costs.</source>
          <target state="new"><ph id="ph36">[AZURE.NOTE]</ph><ph id="ph37" /> You should select the same <bpt id="p27">**</bpt>Location<ept id="p27">**</ept><ph id="ph38" /> as your Storm on HDInsight server to reduce latency and costs.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p28">**</bpt>Configure Event Hub<ept id="p28">**</ept><ph id="ph39" /> screen, enter the <bpt id="p29">**</bpt>Partition count<ept id="p29">**</ept><ph id="ph40" /> and <bpt id="p30">**</bpt>Message Retention<ept id="p30">**</ept><ph id="ph41" /> values.</source>
          <target state="new">On the <bpt id="p28">**</bpt>Configure Event Hub<ept id="p28">**</ept><ph id="ph39" /> screen, enter the <bpt id="p29">**</bpt>Partition count<ept id="p29">**</ept><ph id="ph40" /> and <bpt id="p30">**</bpt>Message Retention<ept id="p30">**</ept><ph id="ph41" /> values.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>For this example, use a partition count of 10 and a message retention of 1.</source>
          <target state="new">For this example, use a partition count of 10 and a message retention of 1.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Note the partition count because you will need this value later.</source>
          <target state="new">Note the partition count because you will need this value later.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><ph id="ph42">![</ph>wizard page 2<ph id="ph43">](./media/hdinsight-storm-develop-csharp-event-hub-topology/wiz2.png)</ph></source>
          <target state="new"><ph id="ph42">![</ph>wizard page 2<ph id="ph43">](./media/hdinsight-storm-develop-csharp-event-hub-topology/wiz2.png)</ph></target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>After the event hub has been created, select the namespace, select <bpt id="p31">**</bpt>Event Hubs<ept id="p31">**</ept>, and then select the event hub that you created earlier.</source>
          <target state="new">After the event hub has been created, select the namespace, select <bpt id="p31">**</bpt>Event Hubs<ept id="p31">**</ept>, and then select the event hub that you created earlier.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p32">**</bpt>Configure<ept id="p32">**</ept>, then create two new access policies by using the following information.</source>
          <target state="new">Select <bpt id="p32">**</bpt>Configure<ept id="p32">**</ept>, then create two new access policies by using the following information.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><ph id="ph44">&lt;table&gt;</ph><ph id="ph45">
 &lt;tr&gt;</ph><ph id="ph46">&lt;th&gt;</ph>Name<ph id="ph47">&lt;/th&gt;</ph><ph id="ph48">&lt;th&gt;</ph>Permissions<ph id="ph49">&lt;/th&gt;</ph><ph id="ph50">&lt;/tr&gt;</ph><ph id="ph51">
 &lt;tr&gt;</ph><ph id="ph52">&lt;td&gt;</ph>Writer<ph id="ph53">&lt;/td&gt;</ph><ph id="ph54">&lt;td&gt;</ph>Send<ph id="ph55">&lt;/td&gt;</ph><ph id="ph56">&lt;/tr&gt;</ph><ph id="ph57">
 &lt;tr&gt;</ph><ph id="ph58">&lt;td&gt;</ph>Reader<ph id="ph59">&lt;/td&gt;</ph><ph id="ph60">&lt;td&gt;</ph>Listen<ph id="ph61">&lt;/td&gt;</ph><ph id="ph62">&lt;/tr&gt;</ph><ph id="ph63">
 &lt;/table&gt;</ph></source>
          <target state="new"><ph id="ph44">&lt;table&gt;</ph><ph id="ph45">
 &lt;tr&gt;</ph><ph id="ph46">&lt;th&gt;</ph>Name<ph id="ph47">&lt;/th&gt;</ph><ph id="ph48">&lt;th&gt;</ph>Permissions<ph id="ph49">&lt;/th&gt;</ph><ph id="ph50">&lt;/tr&gt;</ph><ph id="ph51">
 &lt;tr&gt;</ph><ph id="ph52">&lt;td&gt;</ph>Writer<ph id="ph53">&lt;/td&gt;</ph><ph id="ph54">&lt;td&gt;</ph>Send<ph id="ph55">&lt;/td&gt;</ph><ph id="ph56">&lt;/tr&gt;</ph><ph id="ph57">
 &lt;tr&gt;</ph><ph id="ph58">&lt;td&gt;</ph>Reader<ph id="ph59">&lt;/td&gt;</ph><ph id="ph60">&lt;td&gt;</ph>Listen<ph id="ph61">&lt;/td&gt;</ph><ph id="ph62">&lt;/tr&gt;</ph><ph id="ph63">
 &lt;/table&gt;</ph></target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>After You create the permissions, select the <bpt id="p33">**</bpt>Save<ept id="p33">**</ept><ph id="ph64" /> icon at the bottom of the page.</source>
          <target state="new">After You create the permissions, select the <bpt id="p33">**</bpt>Save<ept id="p33">**</ept><ph id="ph64" /> icon at the bottom of the page.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>This creates the shared access policies that will be used to send (writer) and listen (reader) to this Event Hub.</source>
          <target state="new">This creates the shared access policies that will be used to send (writer) and listen (reader) to this Event Hub.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><ph id="ph65">![</ph>policies<ph id="ph66">](./media/hdinsight-storm-develop-csharp-event-hub-topology/policy.png)</ph></source>
          <target state="new"><ph id="ph65">![</ph>policies<ph id="ph66">](./media/hdinsight-storm-develop-csharp-event-hub-topology/policy.png)</ph></target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>After you save the policies, use the <bpt id="p34">**</bpt>Shared access key generator<ept id="p34">**</ept><ph id="ph67" /> at the bottom of the page to retrieve the key for the <bpt id="p35">**</bpt>writer<ept id="p35">**</ept><ph id="ph68" /> and <bpt id="p36">**</bpt>reader<ept id="p36">**</ept><ph id="ph69" /> policies.</source>
          <target state="new">After you save the policies, use the <bpt id="p34">**</bpt>Shared access key generator<ept id="p34">**</ept><ph id="ph67" /> at the bottom of the page to retrieve the key for the <bpt id="p35">**</bpt>writer<ept id="p35">**</ept><ph id="ph68" /> and <bpt id="p36">**</bpt>reader<ept id="p36">**</ept><ph id="ph69" /> policies.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Save these because they will be used later.</source>
          <target state="new">Save these because they will be used later.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Configure Table storage</source>
          <target state="new">Configure Table storage</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Table storage will be used to hold the values that are read from Event Hubs because you can easily view Table storage from inside Visual Studio through <bpt id="p37">**</bpt>Server Explorer<ept id="p37">**</ept>.</source>
          <target state="new">Table storage will be used to hold the values that are read from Event Hubs because you can easily view Table storage from inside Visual Studio through <bpt id="p37">**</bpt>Server Explorer<ept id="p37">**</ept>.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Use the following steps to create new Table storage:</source>
          <target state="new">Use the following steps to create new Table storage:</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>From the <bpt id="p38">[</bpt>Azure Classic Portal<ept id="p38">](https://manage.windowsazure.com)</ept>, select <bpt id="p39">**</bpt>NEW<ept id="p39">**</ept><ph id="ph70" /> &gt; <bpt id="p40">**</bpt>Data Services<ept id="p40">**</ept><ph id="ph71" /> &gt; <bpt id="p41">**</bpt>Storage<ept id="p41">**</ept><ph id="ph72" /> &gt; <bpt id="p42">**</bpt>Quick Create<ept id="p42">**</ept>.</source>
          <target state="new">From the <bpt id="p38">[</bpt>Azure Classic Portal<ept id="p38">](https://manage.windowsazure.com)</ept>, select <bpt id="p39">**</bpt>NEW<ept id="p39">**</ept><ph id="ph70" /> &gt; <bpt id="p40">**</bpt>Data Services<ept id="p40">**</ept><ph id="ph71" /> &gt; <bpt id="p41">**</bpt>Storage<ept id="p41">**</ept><ph id="ph72" /> &gt; <bpt id="p42">**</bpt>Quick Create<ept id="p42">**</ept>.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><ph id="ph73">![</ph>quick create storage<ph id="ph74">](./media/hdinsight-storm-develop-csharp-event-hub-topology/storagecreate.png)</ph></source>
          <target state="new"><ph id="ph73">![</ph>quick create storage<ph id="ph74">](./media/hdinsight-storm-develop-csharp-event-hub-topology/storagecreate.png)</ph></target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Enter a <bpt id="p43">**</bpt>Name<ept id="p43">**</ept><ph id="ph75" /> for the storage account, select a <bpt id="p44">**</bpt>Location<ept id="p44">**</ept>, and then click the <bpt id="p45">**</bpt>check mark<ept id="p45">**</ept><ph id="ph76" /> to create the storage account.</source>
          <target state="new">Enter a <bpt id="p43">**</bpt>Name<ept id="p43">**</ept><ph id="ph75" /> for the storage account, select a <bpt id="p44">**</bpt>Location<ept id="p44">**</ept>, and then click the <bpt id="p45">**</bpt>check mark<ept id="p45">**</ept><ph id="ph76" /> to create the storage account.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><ph id="ph77">[AZURE.NOTE]</ph><ph id="ph78" /> You should select the same <bpt id="p46">**</bpt>Location<ept id="p46">**</ept><ph id="ph79" /> as your Event Hubs and Storm on HDInsight server to reduce latency and costs.</source>
          <target state="new"><ph id="ph77">[AZURE.NOTE]</ph><ph id="ph78" /> You should select the same <bpt id="p46">**</bpt>Location<ept id="p46">**</ept><ph id="ph79" /> as your Event Hubs and Storm on HDInsight server to reduce latency and costs.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>When the new storage account is provisioned, select the account and then use the <bpt id="p47">**</bpt>Manage Access Keys<ept id="p47">**</ept><ph id="ph80" /> link at the bottom of the page to retrieve the <bpt id="p48">**</bpt>Storage Account Name<ept id="p48">**</ept><ph id="ph81" /> and <bpt id="p49">**</bpt>Primary Access Key<ept id="p49">**</ept>.</source>
          <target state="new">When the new storage account is provisioned, select the account and then use the <bpt id="p47">**</bpt>Manage Access Keys<ept id="p47">**</ept><ph id="ph80" /> link at the bottom of the page to retrieve the <bpt id="p48">**</bpt>Storage Account Name<ept id="p48">**</ept><ph id="ph81" /> and <bpt id="p49">**</bpt>Primary Access Key<ept id="p49">**</ept>.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Save this information because it will be used later.</source>
          <target state="new">Save this information because it will be used later.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><ph id="ph82">![</ph>access keys<ph id="ph83">](./media/hdinsight-storm-develop-csharp-event-hub-topology/managekeys.png)</ph></source>
          <target state="new"><ph id="ph82">![</ph>access keys<ph id="ph83">](./media/hdinsight-storm-develop-csharp-event-hub-topology/managekeys.png)</ph></target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Create EventHubWriter</source>
          <target state="new">Create EventHubWriter</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>In this section, you will create a topology that writes data to Event Hubs by using the Event Hubs bolt.</source>
          <target state="new">In this section, you will create a topology that writes data to Event Hubs by using the Event Hubs bolt.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>If you have not already installed the latest version of the HDInsight Tools for Visual Studio, see <ph id="ph84">&lt;a href="../hdinsight-hadoop-visual-studio-tools-get-started/" target="_blank"&gt;</ph>Get started using HDInsight Tools for Visual Studio<ph id="ph85">&lt;/a&gt;</ph>.</source>
          <target state="new">If you have not already installed the latest version of the HDInsight Tools for Visual Studio, see <ph id="ph84">&lt;a href="../hdinsight-hadoop-visual-studio-tools-get-started/" target="_blank"&gt;</ph>Get started using HDInsight Tools for Visual Studio<ph id="ph85">&lt;/a&gt;</ph>.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Open Visual Studio, select <bpt id="p50">**</bpt>File<ept id="p50">**</ept><ph id="ph86" /> &gt; <bpt id="p51">**</bpt>New<ept id="p51">**</ept><ph id="ph87" /> and then <bpt id="p52">**</bpt>Project<ept id="p52">**</ept>.</source>
          <target state="new">Open Visual Studio, select <bpt id="p50">**</bpt>File<ept id="p50">**</ept><ph id="ph86" /> &gt; <bpt id="p51">**</bpt>New<ept id="p51">**</ept><ph id="ph87" /> and then <bpt id="p52">**</bpt>Project<ept id="p52">**</ept>.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>From the <bpt id="p53">**</bpt>New Project<ept id="p53">**</ept><ph id="ph88" /> screen, expand <bpt id="p54">**</bpt>Installed<ept id="p54">**</ept><ph id="ph89" /> &gt; <bpt id="p55">**</bpt>Templates<ept id="p55">**</ept>, and select <bpt id="p56">**</bpt>HDInsight<ept id="p56">**</ept>.</source>
          <target state="new">From the <bpt id="p53">**</bpt>New Project<ept id="p53">**</ept><ph id="ph88" /> screen, expand <bpt id="p54">**</bpt>Installed<ept id="p54">**</ept><ph id="ph89" /> &gt; <bpt id="p55">**</bpt>Templates<ept id="p55">**</ept>, and select <bpt id="p56">**</bpt>HDInsight<ept id="p56">**</ept>.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>From the list of templates, select <bpt id="p57">**</bpt>Storm Application<ept id="p57">**</ept>.</source>
          <target state="new">From the list of templates, select <bpt id="p57">**</bpt>Storm Application<ept id="p57">**</ept>.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>At the bottom of the screen, enter <bpt id="p58">**</bpt>EventHubWriter<ept id="p58">**</ept><ph id="ph90" /> as the name of the application.</source>
          <target state="new">At the bottom of the screen, enter <bpt id="p58">**</bpt>EventHubWriter<ept id="p58">**</ept><ph id="ph90" /> as the name of the application.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><ph id="ph91">![</ph>image<ph id="ph92">](./media/hdinsight-storm-develop-csharp-event-hub-topology/newproject.png)</ph></source>
          <target state="new"><ph id="ph91">![</ph>image<ph id="ph92">](./media/hdinsight-storm-develop-csharp-event-hub-topology/newproject.png)</ph></target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>After the project is created, you should have the following files:</source>
          <target state="new">After the project is created, you should have the following files:</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><bpt id="p59">**</bpt>Program.cs<ept id="p59">**</ept>: This defines the topology for your project.</source>
          <target state="new"><bpt id="p59">**</bpt>Program.cs<ept id="p59">**</ept>: This defines the topology for your project.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Note that a default topology that consists of one spout and one bolt is created by default.</source>
          <target state="new">Note that a default topology that consists of one spout and one bolt is created by default.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><bpt id="p60">**</bpt>Spout.cs<ept id="p60">**</ept>: An example spout.</source>
          <target state="new"><bpt id="p60">**</bpt>Spout.cs<ept id="p60">**</ept>: An example spout.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><bpt id="p61">**</bpt>Bolt.cs<ept id="p61">**</ept>: An example bolt.</source>
          <target state="new"><bpt id="p61">**</bpt>Bolt.cs<ept id="p61">**</ept>: An example bolt.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>This will be deleted because you will use the Event Hubs bolt to write to Event Hub.</source>
          <target state="new">This will be deleted because you will use the Event Hubs bolt to write to Event Hub.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Configuration</source>
          <target state="new">Configuration</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>In <bpt id="p62">**</bpt>Solution Explorer<ept id="p62">**</ept>, right-click <bpt id="p63">**</bpt>EventHubWriter<ept id="p63">**</ept>, and then select <bpt id="p64">**</bpt>Properties<ept id="p64">**</ept>.</source>
          <target state="new">In <bpt id="p62">**</bpt>Solution Explorer<ept id="p62">**</ept>, right-click <bpt id="p63">**</bpt>EventHubWriter<ept id="p63">**</ept>, and then select <bpt id="p64">**</bpt>Properties<ept id="p64">**</ept>.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>In the project properties, select <bpt id="p65">**</bpt>Settings<ept id="p65">**</ept>, and then select <bpt id="p66">**</bpt>This project does not contain a default settings file. Click here to create one.<ept id="p66">**</ept></source>
          <target state="new">In the project properties, select <bpt id="p65">**</bpt>Settings<ept id="p65">**</ept>, and then select <bpt id="p66">**</bpt>This project does not contain a default settings file. Click here to create one.<ept id="p66">**</ept></target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Enter the following settings.</source>
          <target state="new">Enter the following settings.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Use the information for the Event Hub you created earlier in the <bpt id="p67">**</bpt>Value<ept id="p67">**</ept><ph id="ph93" /> column.</source>
          <target state="new">Use the information for the Event Hub you created earlier in the <bpt id="p67">**</bpt>Value<ept id="p67">**</ept><ph id="ph93" /> column.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source><ph id="ph94">&lt;table&gt;</ph><ph id="ph95">
 &lt;tr&gt;</ph><ph id="ph96">&lt;th style="text-align:left"&gt;</ph>Name<ph id="ph97">&lt;/th&gt;</ph><ph id="ph98">&lt;th style="text-align:left"&gt;</ph>Type<ph id="ph99">&lt;/th&gt;</ph><ph id="ph100">&lt;th style="text-align:left"&gt;</ph>Scope<ph id="ph101">&lt;/th&gt;</ph><ph id="ph102">&lt;/tr&gt;</ph><ph id="ph103">
 &lt;tr&gt;</ph><ph id="ph104">&lt;td style="text-align:left"&gt;</ph>EventHubPolicyName<ph id="ph105">&lt;/td&gt;</ph><ph id="ph106">&lt;td style="text-align:left"&gt;</ph>string<ph id="ph107">&lt;/td&gt;</ph><ph id="ph108">&lt;td style="text-align:left"&gt;</ph>Application<ph id="ph109">&lt;/td&gt;</ph><ph id="ph110">&lt;/tr&gt;</ph><ph id="ph111">
 &lt;tr&gt;</ph><ph id="ph112">&lt;td style="text-align:left"&gt;</ph>EventHubPolicyKey<ph id="ph113">&lt;/td&gt;</ph><ph id="ph114">&lt;td style="text-align:left"&gt;</ph>string<ph id="ph115">&lt;/td&gt;</ph><ph id="ph116">&lt;td style="text-align:left"&gt;</ph>Application<ph id="ph117">&lt;/td&gt;</ph><ph id="ph118">&lt;/tr&gt;</ph><ph id="ph119">
 &lt;tr&gt;</ph><ph id="ph120">&lt;td style="text-align:left"&gt;</ph>EventHubNamespace<ph id="ph121">&lt;/td&gt;</ph><ph id="ph122">&lt;td style="text-align:left"&gt;</ph>string<ph id="ph123">&lt;/td&gt;</ph><ph id="ph124">&lt;td style="text-align:left"&gt;</ph>Application<ph id="ph125">&lt;/td&gt;</ph><ph id="ph126">&lt;/tr&gt;</ph><ph id="ph127">
 &lt;tr&gt;</ph><ph id="ph128">&lt;td style="text-align:left"&gt;</ph>EventHubName<ph id="ph129">&lt;/td&gt;</ph><ph id="ph130">&lt;td style="text-align:left"&gt;</ph>string<ph id="ph131">&lt;/td&gt;</ph><ph id="ph132">&lt;td style="text-align:left"&gt;</ph>Application<ph id="ph133">&lt;/td&gt;</ph><ph id="ph134">&lt;/tr&gt;</ph><ph id="ph135">
 &lt;tr&gt;</ph><ph id="ph136">&lt;td style="text-align:left"&gt;</ph>EventHubPartitionCount<ph id="ph137">&lt;/td&gt;</ph><ph id="ph138">&lt;td style="text-align:left"&gt;</ph>int<ph id="ph139">&lt;/td&gt;</ph><ph id="ph140">&lt;td style="text-align:left"&gt;</ph>Application<ph id="ph141">&lt;/td&gt;</ph><ph id="ph142">&lt;/tr&gt;</ph><ph id="ph143">
 &lt;/table&gt;</ph></source>
          <target state="new"><ph id="ph94">&lt;table&gt;</ph><ph id="ph95">
 &lt;tr&gt;</ph><ph id="ph96">&lt;th style="text-align:left"&gt;</ph>Name<ph id="ph97">&lt;/th&gt;</ph><ph id="ph98">&lt;th style="text-align:left"&gt;</ph>Type<ph id="ph99">&lt;/th&gt;</ph><ph id="ph100">&lt;th style="text-align:left"&gt;</ph>Scope<ph id="ph101">&lt;/th&gt;</ph><ph id="ph102">&lt;/tr&gt;</ph><ph id="ph103">
 &lt;tr&gt;</ph><ph id="ph104">&lt;td style="text-align:left"&gt;</ph>EventHubPolicyName<ph id="ph105">&lt;/td&gt;</ph><ph id="ph106">&lt;td style="text-align:left"&gt;</ph>string<ph id="ph107">&lt;/td&gt;</ph><ph id="ph108">&lt;td style="text-align:left"&gt;</ph>Application<ph id="ph109">&lt;/td&gt;</ph><ph id="ph110">&lt;/tr&gt;</ph><ph id="ph111">
 &lt;tr&gt;</ph><ph id="ph112">&lt;td style="text-align:left"&gt;</ph>EventHubPolicyKey<ph id="ph113">&lt;/td&gt;</ph><ph id="ph114">&lt;td style="text-align:left"&gt;</ph>string<ph id="ph115">&lt;/td&gt;</ph><ph id="ph116">&lt;td style="text-align:left"&gt;</ph>Application<ph id="ph117">&lt;/td&gt;</ph><ph id="ph118">&lt;/tr&gt;</ph><ph id="ph119">
 &lt;tr&gt;</ph><ph id="ph120">&lt;td style="text-align:left"&gt;</ph>EventHubNamespace<ph id="ph121">&lt;/td&gt;</ph><ph id="ph122">&lt;td style="text-align:left"&gt;</ph>string<ph id="ph123">&lt;/td&gt;</ph><ph id="ph124">&lt;td style="text-align:left"&gt;</ph>Application<ph id="ph125">&lt;/td&gt;</ph><ph id="ph126">&lt;/tr&gt;</ph><ph id="ph127">
 &lt;tr&gt;</ph><ph id="ph128">&lt;td style="text-align:left"&gt;</ph>EventHubName<ph id="ph129">&lt;/td&gt;</ph><ph id="ph130">&lt;td style="text-align:left"&gt;</ph>string<ph id="ph131">&lt;/td&gt;</ph><ph id="ph132">&lt;td style="text-align:left"&gt;</ph>Application<ph id="ph133">&lt;/td&gt;</ph><ph id="ph134">&lt;/tr&gt;</ph><ph id="ph135">
 &lt;tr&gt;</ph><ph id="ph136">&lt;td style="text-align:left"&gt;</ph>EventHubPartitionCount<ph id="ph137">&lt;/td&gt;</ph><ph id="ph138">&lt;td style="text-align:left"&gt;</ph>int<ph id="ph139">&lt;/td&gt;</ph><ph id="ph140">&lt;td style="text-align:left"&gt;</ph>Application<ph id="ph141">&lt;/td&gt;</ph><ph id="ph142">&lt;/tr&gt;</ph><ph id="ph143">
 &lt;/table&gt;</ph></target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Save and close the <bpt id="p68">**</bpt>Properties<ept id="p68">**</ept><ph id="ph144" /> page.</source>
          <target state="new">Save and close the <bpt id="p68">**</bpt>Properties<ept id="p68">**</ept><ph id="ph144" /> page.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Define the topology</source>
          <target state="new">Define the topology</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>In <bpt id="p69">**</bpt>Solution Explorer<ept id="p69">**</ept>, right-click <bpt id="p70">**</bpt>Bolt.cs<ept id="p70">**</ept>, and select <bpt id="p71">**</bpt>Delete<ept id="p71">**</ept>.</source>
          <target state="new">In <bpt id="p69">**</bpt>Solution Explorer<ept id="p69">**</ept>, right-click <bpt id="p70">**</bpt>Bolt.cs<ept id="p70">**</ept>, and select <bpt id="p71">**</bpt>Delete<ept id="p71">**</ept>.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>You are using the Java Event Hubs bolt, so you do not need this file.</source>
          <target state="new">You are using the Java Event Hubs bolt, so you do not need this file.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Open the <bpt id="p72">**</bpt>Program.cs<ept id="p72">**</ept><ph id="ph145" /> file and add the following code immediately after the <ph id="ph146">`TopologyBuilder topologyBuilder = new TopologyBuilder("EventHubWriter");`</ph><ph id="ph147" /> line.</source>
          <target state="new">Open the <bpt id="p72">**</bpt>Program.cs<ept id="p72">**</ept><ph id="ph145" /> file and add the following code immediately after the <ph id="ph146">`TopologyBuilder topologyBuilder = new TopologyBuilder("EventHubWriter");`</ph><ph id="ph147" /> line.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The first line reads the partition count from the properties defined earlier.</source>
          <target state="new">The first line reads the partition count from the properties defined earlier.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The second line defines a deserializer that is used to deseralize JSON data produced by the spout, into a <ph id="ph148">`java.lang.String`</ph><ph id="ph149" /> so that Java components can consume the data.</source>
          <target state="new">The second line defines a deserializer that is used to deseralize JSON data produced by the spout, into a <ph id="ph148">`java.lang.String`</ph><ph id="ph149" /> so that Java components can consume the data.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Find the following code:</source>
          <target state="new">Find the following code:</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Replace it with the following:</source>
          <target state="new">Replace it with the following:</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>This creates a spout and uses the Event Hubs partition count as the parallelism hint for this component.</source>
          <target state="new">This creates a spout and uses the Event Hubs partition count as the parallelism hint for this component.</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>This should create an instance of the spout for each partition.</source>
          <target state="new">This should create an instance of the spout for each partition.</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>This also associates the deserializer created previously with the output stream from this component.</source>
          <target state="new">This also associates the deserializer created previously with the output stream from this component.</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>This allows the downstream EventHubSpout component to consume the data produced from the C# spout.</source>
          <target state="new">This allows the downstream EventHubSpout component to consume the data produced from the C# spout.</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Immediately after the previous code, add the following:</source>
          <target state="new">Immediately after the previous code, add the following:</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>This creates a new constructor for the Java bolt, which is used at run time to configure a new instance of the bolt.</source>
          <target state="new">This creates a new constructor for the Java bolt, which is used at run time to configure a new instance of the bolt.</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>In this case, you are using the <ph id="ph150">&lt;a href="http://storm.apache.org/documentation/Clojure-DSL.html" target="_blank"&gt;</ph>Apache Storm Clojure DSL<ph id="ph151">&lt;/a&gt;</ph><ph id="ph152" /> to configure the spout with the Event Hubs configuration information you added previously.</source>
          <target state="new">In this case, you are using the <ph id="ph150">&lt;a href="http://storm.apache.org/documentation/Clojure-DSL.html" target="_blank"&gt;</ph>Apache Storm Clojure DSL<ph id="ph151">&lt;/a&gt;</ph><ph id="ph152" /> to configure the spout with the Event Hubs configuration information you added previously.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>More specifically, this code is used by HDInsight at run time to do the following:</source>
          <target state="new">More specifically, this code is used by HDInsight at run time to do the following:</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Create a new instance of <bpt id="p73">**</bpt>com.microsoft.eventhubs.bolt.EventHubBoltConfig<ept id="p73">**</ept><ph id="ph153" /> using the Event Hubs information you provide.</source>
          <target state="new">Create a new instance of <bpt id="p73">**</bpt>com.microsoft.eventhubs.bolt.EventHubBoltConfig<ept id="p73">**</ept><ph id="ph153" /> using the Event Hubs information you provide.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Create a new instance of <bpt id="p74">**</bpt>com.microsoft.eventhubs.bolt.EventHubBolt<ept id="p74">**</ept>, passing in the <bpt id="p75">**</bpt>EventHubBoltConfig<ept id="p75">**</ept><ph id="ph154" /> instance.</source>
          <target state="new">Create a new instance of <bpt id="p74">**</bpt>com.microsoft.eventhubs.bolt.EventHubBolt<ept id="p74">**</ept>, passing in the <bpt id="p75">**</bpt>EventHubBoltConfig<ept id="p75">**</ept><ph id="ph154" /> instance.</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Find the following code:</source>
          <target state="new">Find the following code:</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Replace it with the following:</source>
          <target state="new">Replace it with the following:</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>This instructs the topology to use the <bpt id="p76">**</bpt>JavaComponentConstructor<ept id="p76">**</ept><ph id="ph155" /> from the previous step as the bolt.</source>
          <target state="new">This instructs the topology to use the <bpt id="p76">**</bpt>JavaComponentConstructor<ept id="p76">**</ept><ph id="ph155" /> from the previous step as the bolt.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The component can be referred to in this topology by the friendly name of "EventHubBolt."</source>
          <target state="new">The component can be referred to in this topology by the friendly name of "EventHubBolt."</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The parallelism hint is set to the number of partitions for the Event Hub, and it subscribes to data produced by the spout ("Spout").</source>
          <target state="new">The parallelism hint is set to the number of partitions for the Event Hub, and it subscribes to data produced by the spout ("Spout").</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>At this point, you are done with the <bpt id="p77">**</bpt>Program.cs<ept id="p77">**</ept>.</source>
          <target state="new">At this point, you are done with the <bpt id="p77">**</bpt>Program.cs<ept id="p77">**</ept>.</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The topology has been defined, but now you must modify <bpt id="p78">**</bpt>Spout.cs<ept id="p78">**</ept><ph id="ph156" /> so that it produces data in a format that the Event Hubs bolt can use.</source>
          <target state="new">The topology has been defined, but now you must modify <bpt id="p78">**</bpt>Spout.cs<ept id="p78">**</ept><ph id="ph156" /> so that it produces data in a format that the Event Hubs bolt can use.</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source><ph id="ph157">[AZURE.NOTE]</ph><ph id="ph158" /> This topology will default to creating one worker process, which is sufficient for example purposes.</source>
          <target state="new"><ph id="ph157">[AZURE.NOTE]</ph><ph id="ph158" /> This topology will default to creating one worker process, which is sufficient for example purposes.</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>If you are adapting this for a production cluster, you should can add the following to change the number of workers:</source>
          <target state="new">If you are adapting this for a production cluster, you should can add the following to change the number of workers:</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Modify the spout</source>
          <target state="new">Modify the spout</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The Event Hubs bolt expects a single string value, which it will route to Event Hub.</source>
          <target state="new">The Event Hubs bolt expects a single string value, which it will route to Event Hub.</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>In the following example, you will modify the default <bpt id="p79">**</bpt>Spout.cs<ept id="p79">**</ept><ph id="ph159" /> file to produce a JSON string.</source>
          <target state="new">In the following example, you will modify the default <bpt id="p79">**</bpt>Spout.cs<ept id="p79">**</ept><ph id="ph159" /> file to produce a JSON string.</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>In <bpt id="p80">**</bpt>Solution Explorer<ept id="p80">**</ept>, open <bpt id="p81">**</bpt>Spout.cs<ept id="p81">**</ept><ph id="ph160" /> and add the following at the top of the file:</source>
          <target state="new">In <bpt id="p80">**</bpt>Solution Explorer<ept id="p80">**</ept>, open <bpt id="p81">**</bpt>Spout.cs<ept id="p81">**</ept><ph id="ph160" /> and add the following at the top of the file:</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>This allows you to more easily work with JSON data.</source>
          <target state="new">This allows you to more easily work with JSON data.</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source><ph id="ph161">[AZURE.NOTE]</ph><ph id="ph162" /> The JSON.NET package should already be installed, as it is required by the SCP.NET framework used for C# Storm topologies.</source>
          <target state="new"><ph id="ph161">[AZURE.NOTE]</ph><ph id="ph162" /> The JSON.NET package should already be installed, as it is required by the SCP.NET framework used for C# Storm topologies.</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Find the following code:</source>
          <target state="new">Find the following code:</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Replace it with the following:</source>
          <target state="new">Replace it with the following:</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>This changes the definition of the data created by the spout to use <bpt id="p82">**</bpt>string<ept id="p82">**</ept><ph id="ph163" /> data, and the <bpt id="p83">**</bpt>CustomizedInteropJSONSerializer<ept id="p83">**</ept><ph id="ph164" /> declared eariler in the topology (in program.cs).</source>
          <target state="new">This changes the definition of the data created by the spout to use <bpt id="p82">**</bpt>string<ept id="p82">**</ept><ph id="ph163" /> data, and the <bpt id="p83">**</bpt>CustomizedInteropJSONSerializer<ept id="p83">**</ept><ph id="ph164" /> declared eariler in the topology (in program.cs).</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Replace the <bpt id="p84">**</bpt>NextTuple<ept id="p84">**</ept><ph id="ph165" /> method with the following:</source>
          <target state="new">Replace the <bpt id="p84">**</bpt>NextTuple<ept id="p84">**</ept><ph id="ph165" /> method with the following:</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>This randomly generates a device ID, a value, and then uses Json.NET to emit a JSON object using these values.</source>
          <target state="new">This randomly generates a device ID, a value, and then uses Json.NET to emit a JSON object using these values.</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Save the <bpt id="p85">**</bpt>Spout.cs<ept id="p85">**</ept><ph id="ph166" /> file.</source>
          <target state="new">Save the <bpt id="p85">**</bpt>Spout.cs<ept id="p85">**</ept><ph id="ph166" /> file.</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>At this point, you have a basic topology that will generate random data and store it in Event Hubs by using the Event Hubs bolt.</source>
          <target state="new">At this point, you have a basic topology that will generate random data and store it in Event Hubs by using the Event Hubs bolt.</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Next, you will create the reader.</source>
          <target state="new">Next, you will create the reader.</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Create EventHubReader</source>
          <target state="new">Create EventHubReader</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>In this section, you will create a topology that reads data from Event Hubs by using the Event Hubs spout.</source>
          <target state="new">In this section, you will create a topology that reads data from Event Hubs by using the Event Hubs spout.</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Open Visual Studio, select <bpt id="p86">**</bpt>File<ept id="p86">**</ept><ph id="ph167" /> &gt; <bpt id="p87">**</bpt>New<ept id="p87">**</ept><ph id="ph168" /> &gt; <bpt id="p88">**</bpt>Project<ept id="p88">**</ept>.</source>
          <target state="new">Open Visual Studio, select <bpt id="p86">**</bpt>File<ept id="p86">**</ept><ph id="ph167" /> &gt; <bpt id="p87">**</bpt>New<ept id="p87">**</ept><ph id="ph168" /> &gt; <bpt id="p88">**</bpt>Project<ept id="p88">**</ept>.</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>From the <bpt id="p89">**</bpt>New Project<ept id="p89">**</ept><ph id="ph169" /> screen, expand <bpt id="p90">**</bpt>Installed<ept id="p90">**</ept><ph id="ph170" /> &gt; <bpt id="p91">**</bpt>Templates<ept id="p91">**</ept>, and select <bpt id="p92">**</bpt>HDInsight<ept id="p92">**</ept>.</source>
          <target state="new">From the <bpt id="p89">**</bpt>New Project<ept id="p89">**</ept><ph id="ph169" /> screen, expand <bpt id="p90">**</bpt>Installed<ept id="p90">**</ept><ph id="ph170" /> &gt; <bpt id="p91">**</bpt>Templates<ept id="p91">**</ept>, and select <bpt id="p92">**</bpt>HDInsight<ept id="p92">**</ept>.</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>From the list of templates, select <bpt id="p93">**</bpt>Storm Application<ept id="p93">**</ept>.</source>
          <target state="new">From the list of templates, select <bpt id="p93">**</bpt>Storm Application<ept id="p93">**</ept>.</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>At the bottom of the screen, enter <bpt id="p94">**</bpt>EventHubReader<ept id="p94">**</ept><ph id="ph171" /> as the name of the application.</source>
          <target state="new">At the bottom of the screen, enter <bpt id="p94">**</bpt>EventHubReader<ept id="p94">**</ept><ph id="ph171" /> as the name of the application.</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Configuration</source>
          <target state="new">Configuration</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>In <bpt id="p95">**</bpt>Solution Explorer<ept id="p95">**</ept>, right-click <bpt id="p96">**</bpt>EventHubReader<ept id="p96">**</ept><ph id="ph172" /> and then select <bpt id="p97">**</bpt>Properties<ept id="p97">**</ept>.</source>
          <target state="new">In <bpt id="p95">**</bpt>Solution Explorer<ept id="p95">**</ept>, right-click <bpt id="p96">**</bpt>EventHubReader<ept id="p96">**</ept><ph id="ph172" /> and then select <bpt id="p97">**</bpt>Properties<ept id="p97">**</ept>.</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>In the project properties, select <bpt id="p98">**</bpt>Settings<ept id="p98">**</ept>, and then select <bpt id="p99">**</bpt>This project does not contain a default settings file. Click here to create one.<ept id="p99">**</ept></source>
          <target state="new">In the project properties, select <bpt id="p98">**</bpt>Settings<ept id="p98">**</ept>, and then select <bpt id="p99">**</bpt>This project does not contain a default settings file. Click here to create one.<ept id="p99">**</ept></target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Enter the following settings.</source>
          <target state="new">Enter the following settings.</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Use the information for the Event Hub and storage account you created earlier in the <bpt id="p100">**</bpt>Value<ept id="p100">**</ept><ph id="ph173" /> column.</source>
          <target state="new">Use the information for the Event Hub and storage account you created earlier in the <bpt id="p100">**</bpt>Value<ept id="p100">**</ept><ph id="ph173" /> column.</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source><ph id="ph174">&lt;table&gt;</ph><ph id="ph175">
 &lt;tr&gt;</ph><ph id="ph176">&lt;th style="text-align:left"&gt;</ph>Name<ph id="ph177">&lt;/th&gt;</ph><ph id="ph178">&lt;th style="text-align:left"&gt;</ph>Type<ph id="ph179">&lt;/th&gt;</ph><ph id="ph180">&lt;th style="text-align:left"&gt;</ph>Scope<ph id="ph181">&lt;/th&gt;</ph><ph id="ph182">&lt;/tr&gt;</ph><ph id="ph183">
 &lt;tr&gt;</ph><ph id="ph184">&lt;th style="text-align:left"&gt;</ph>EventHubPolicyName<ph id="ph185">&lt;/th&gt;</ph><ph id="ph186">&lt;th style="text-align:left"&gt;</ph>string<ph id="ph187">&lt;/th&gt;</ph><ph id="ph188">&lt;th style="text-align:left"&gt;</ph>Application<ph id="ph189">&lt;/th&gt;</ph><ph id="ph190">&lt;/tr&gt;</ph><ph id="ph191">
 &lt;tr&gt;</ph><ph id="ph192">&lt;th style="text-align:left"&gt;</ph>EventHubPolicyKey<ph id="ph193">&lt;/th&gt;</ph><ph id="ph194">&lt;th style="text-align:left"&gt;</ph>string<ph id="ph195">&lt;/th&gt;</ph><ph id="ph196">&lt;th style="text-align:left"&gt;</ph>Application<ph id="ph197">&lt;/th&gt;</ph><ph id="ph198">&lt;/tr&gt;</ph><ph id="ph199">
 &lt;tr&gt;</ph><ph id="ph200">&lt;th style="text-align:left"&gt;</ph>EventHubNamespace<ph id="ph201">&lt;/th&gt;</ph><ph id="ph202">&lt;th style="text-align:left"&gt;</ph>string<ph id="ph203">&lt;/th&gt;</ph><ph id="ph204">&lt;th style="text-align:left"&gt;</ph>Application<ph id="ph205">&lt;/th&gt;</ph><ph id="ph206">&lt;/tr&gt;</ph><ph id="ph207">
 &lt;tr&gt;</ph><ph id="ph208">&lt;th style="text-align:left"&gt;</ph>EventHubName<ph id="ph209">&lt;/th&gt;</ph><ph id="ph210">&lt;th style="text-align:left"&gt;</ph>string<ph id="ph211">&lt;/th&gt;</ph><ph id="ph212">&lt;th style="text-align:left"&gt;</ph>Application<ph id="ph213">&lt;/th&gt;</ph><ph id="ph214">&lt;/tr&gt;</ph><ph id="ph215">
 &lt;tr&gt;</ph><ph id="ph216">&lt;th style="text-align:left"&gt;</ph>EventHubPartitionCount<ph id="ph217">&lt;/th&gt;</ph><ph id="ph218">&lt;th style="text-align:left"&gt;</ph>int<ph id="ph219">&lt;/th&gt;</ph><ph id="ph220">&lt;th style="text-align:left"&gt;</ph>Application<ph id="ph221">&lt;/th&gt;</ph><ph id="ph222">&lt;/tr&gt;</ph><ph id="ph223">
 &lt;tr&gt;</ph><ph id="ph224">&lt;th style="text-align:left"&gt;</ph>StorageConnection<ph id="ph225">&lt;/th&gt;</ph><ph id="ph226">&lt;th style="text-align:left"&gt;</ph>(Connection String)<ph id="ph227">&lt;/th&gt;</ph><ph id="ph228">&lt;th style="text-align:left"&gt;</ph>Application<ph id="ph229">&lt;/th&gt;</ph><ph id="ph230">&lt;/tr&gt;</ph><ph id="ph231">
 &lt;tr&gt;</ph><ph id="ph232">&lt;th style="text-align:left"&gt;</ph>TableName<ph id="ph233">&lt;/th&gt;</ph><ph id="ph234">&lt;th style="text-align:left"&gt;</ph>string<ph id="ph235">&lt;/th&gt;</ph><ph id="ph236">&lt;th style="text-align:left"&gt;</ph>Application<ph id="ph237">&lt;/th&gt;</ph><ph id="ph238">&lt;/tr&gt;</ph><ph id="ph239">
 &lt;/table&gt;</ph></source>
          <target state="new"><ph id="ph174">&lt;table&gt;</ph><ph id="ph175">
 &lt;tr&gt;</ph><ph id="ph176">&lt;th style="text-align:left"&gt;</ph>Name<ph id="ph177">&lt;/th&gt;</ph><ph id="ph178">&lt;th style="text-align:left"&gt;</ph>Type<ph id="ph179">&lt;/th&gt;</ph><ph id="ph180">&lt;th style="text-align:left"&gt;</ph>Scope<ph id="ph181">&lt;/th&gt;</ph><ph id="ph182">&lt;/tr&gt;</ph><ph id="ph183">
 &lt;tr&gt;</ph><ph id="ph184">&lt;th style="text-align:left"&gt;</ph>EventHubPolicyName<ph id="ph185">&lt;/th&gt;</ph><ph id="ph186">&lt;th style="text-align:left"&gt;</ph>string<ph id="ph187">&lt;/th&gt;</ph><ph id="ph188">&lt;th style="text-align:left"&gt;</ph>Application<ph id="ph189">&lt;/th&gt;</ph><ph id="ph190">&lt;/tr&gt;</ph><ph id="ph191">
 &lt;tr&gt;</ph><ph id="ph192">&lt;th style="text-align:left"&gt;</ph>EventHubPolicyKey<ph id="ph193">&lt;/th&gt;</ph><ph id="ph194">&lt;th style="text-align:left"&gt;</ph>string<ph id="ph195">&lt;/th&gt;</ph><ph id="ph196">&lt;th style="text-align:left"&gt;</ph>Application<ph id="ph197">&lt;/th&gt;</ph><ph id="ph198">&lt;/tr&gt;</ph><ph id="ph199">
 &lt;tr&gt;</ph><ph id="ph200">&lt;th style="text-align:left"&gt;</ph>EventHubNamespace<ph id="ph201">&lt;/th&gt;</ph><ph id="ph202">&lt;th style="text-align:left"&gt;</ph>string<ph id="ph203">&lt;/th&gt;</ph><ph id="ph204">&lt;th style="text-align:left"&gt;</ph>Application<ph id="ph205">&lt;/th&gt;</ph><ph id="ph206">&lt;/tr&gt;</ph><ph id="ph207">
 &lt;tr&gt;</ph><ph id="ph208">&lt;th style="text-align:left"&gt;</ph>EventHubName<ph id="ph209">&lt;/th&gt;</ph><ph id="ph210">&lt;th style="text-align:left"&gt;</ph>string<ph id="ph211">&lt;/th&gt;</ph><ph id="ph212">&lt;th style="text-align:left"&gt;</ph>Application<ph id="ph213">&lt;/th&gt;</ph><ph id="ph214">&lt;/tr&gt;</ph><ph id="ph215">
 &lt;tr&gt;</ph><ph id="ph216">&lt;th style="text-align:left"&gt;</ph>EventHubPartitionCount<ph id="ph217">&lt;/th&gt;</ph><ph id="ph218">&lt;th style="text-align:left"&gt;</ph>int<ph id="ph219">&lt;/th&gt;</ph><ph id="ph220">&lt;th style="text-align:left"&gt;</ph>Application<ph id="ph221">&lt;/th&gt;</ph><ph id="ph222">&lt;/tr&gt;</ph><ph id="ph223">
 &lt;tr&gt;</ph><ph id="ph224">&lt;th style="text-align:left"&gt;</ph>StorageConnection<ph id="ph225">&lt;/th&gt;</ph><ph id="ph226">&lt;th style="text-align:left"&gt;</ph>(Connection String)<ph id="ph227">&lt;/th&gt;</ph><ph id="ph228">&lt;th style="text-align:left"&gt;</ph>Application<ph id="ph229">&lt;/th&gt;</ph><ph id="ph230">&lt;/tr&gt;</ph><ph id="ph231">
 &lt;tr&gt;</ph><ph id="ph232">&lt;th style="text-align:left"&gt;</ph>TableName<ph id="ph233">&lt;/th&gt;</ph><ph id="ph234">&lt;th style="text-align:left"&gt;</ph>string<ph id="ph235">&lt;/th&gt;</ph><ph id="ph236">&lt;th style="text-align:left"&gt;</ph>Application<ph id="ph237">&lt;/th&gt;</ph><ph id="ph238">&lt;/tr&gt;</ph><ph id="ph239">
 &lt;/table&gt;</ph></target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>For <bpt id="p101">**</bpt>TableName<ept id="p101">**</ept>, enter the name of the table that you want events to be stored in.</source>
          <target state="new">For <bpt id="p101">**</bpt>TableName<ept id="p101">**</ept>, enter the name of the table that you want events to be stored in.</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>For <bpt id="p102">**</bpt>StorageConnection<ept id="p102">**</ept>, enter a value of <ph id="ph240">`DefaultEndpointsProtocol=https;AccountName=myAccount;AccountKey=myKey;`</ph>.</source>
          <target state="new">For <bpt id="p102">**</bpt>StorageConnection<ept id="p102">**</ept>, enter a value of <ph id="ph240">`DefaultEndpointsProtocol=https;AccountName=myAccount;AccountKey=myKey;`</ph>.</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Replace <bpt id="p103">**</bpt>myAccount<ept id="p103">**</ept><ph id="ph241" /> and <bpt id="p104">**</bpt>myKey<ept id="p104">**</ept><ph id="ph242" /> with the storage account name and key obtained earlier.</source>
          <target state="new">Replace <bpt id="p103">**</bpt>myAccount<ept id="p103">**</ept><ph id="ph241" /> and <bpt id="p104">**</bpt>myKey<ept id="p104">**</ept><ph id="ph242" /> with the storage account name and key obtained earlier.</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>These values will be used by the topology to communicate with Event Hubs and Table Storage.</source>
          <target state="new">These values will be used by the topology to communicate with Event Hubs and Table Storage.</target>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Save and close the <bpt id="p105">**</bpt>Properties<ept id="p105">**</ept><ph id="ph243" /> page.</source>
          <target state="new">Save and close the <bpt id="p105">**</bpt>Properties<ept id="p105">**</ept><ph id="ph243" /> page.</target>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Define the topology</source>
          <target state="new">Define the topology</target>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>In <bpt id="p106">**</bpt>Solution Explorer<ept id="p106">**</ept>, right-click <bpt id="p107">**</bpt>Spout.cs<ept id="p107">**</ept><ph id="ph244" /> and select <bpt id="p108">**</bpt>Delete<ept id="p108">**</ept>.</source>
          <target state="new">In <bpt id="p106">**</bpt>Solution Explorer<ept id="p106">**</ept>, right-click <bpt id="p107">**</bpt>Spout.cs<ept id="p107">**</ept><ph id="ph244" /> and select <bpt id="p108">**</bpt>Delete<ept id="p108">**</ept>.</target>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>You are using the Java Event Hubs spout, so you do not need this file.</source>
          <target state="new">You are using the Java Event Hubs spout, so you do not need this file.</target>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Open the <bpt id="p109">**</bpt>Program.cs<ept id="p109">**</ept><ph id="ph245" /> file and add the following code immediately after the <ph id="ph246">`TopologyBuilder topologyBuilder = new TopologyBuilder("EventHubReader");`</ph><ph id="ph247" /> line:</source>
          <target state="new">Open the <bpt id="p109">**</bpt>Program.cs<ept id="p109">**</ept><ph id="ph245" /> file and add the following code immediately after the <ph id="ph246">`TopologyBuilder topologyBuilder = new TopologyBuilder("EventHubReader");`</ph><ph id="ph247" /> line:</target>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The partition count is read and assigned to a local variable.</source>
          <target state="new">The partition count is read and assigned to a local variable.</target>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>It will be used multiple times.</source>
          <target state="new">It will be used multiple times.</target>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>The <ph id="ph248">`EventHubSpoutConfig`</ph><ph id="ph249" /> defines the configuration for the Event Hub spout.</source>
          <target state="new">The <ph id="ph248">`EventHubSpoutConfig`</ph><ph id="ph249" /> defines the configuration for the Event Hub spout.</target>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>In this case, the Event Hubs configuration information you added previously.</source>
          <target state="new">In this case, the Event Hubs configuration information you added previously.</target>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Behind the scenes this uses the Java Event Hub spout, and will create a new instance of <bpt id="p110">**</bpt>com.microsoft.eventhubs.spout.EventHubSpoutConfig<ept id="p110">**</ept><ph id="ph250" /> using the Event Hubs information.</source>
          <target state="new">Behind the scenes this uses the Java Event Hub spout, and will create a new instance of <bpt id="p110">**</bpt>com.microsoft.eventhubs.spout.EventHubSpoutConfig<ept id="p110">**</ept><ph id="ph250" /> using the Event Hubs information.</target>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Find the following code:</source>
          <target state="new">Find the following code:</target>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Replace it with the following:</source>
          <target state="new">Replace it with the following:</target>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>This instructs the topology to create a new Event Hub spout and use the <ph id="ph251">`EventHubSpoutConfig`</ph><ph id="ph252" /> from the previous step as the configuration.</source>
          <target state="new">This instructs the topology to create a new Event Hub spout and use the <ph id="ph251">`EventHubSpoutConfig`</ph><ph id="ph252" /> from the previous step as the configuration.</target>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>"EventHubSpout" sets the friendly name of the spout, and <ph id="ph253">`partitionCount`</ph><ph id="ph254" /> is used to set the parallelism hint.</source>
          <target state="new">"EventHubSpout" sets the friendly name of the spout, and <ph id="ph253">`partitionCount`</ph><ph id="ph254" /> is used to set the parallelism hint.</target>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Behind the scenes this creates a new instance of <bpt id="p111">**</bpt>com.microsoft.eventhubs.spout.EventHubSpout<ept id="p111">**</ept><ph id="ph255" /> Java component using the provided configuration information.</source>
          <target state="new">Behind the scenes this creates a new instance of <bpt id="p111">**</bpt>com.microsoft.eventhubs.spout.EventHubSpout<ept id="p111">**</ept><ph id="ph255" /> Java component using the provided configuration information.</target>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Add the following immediately after the previous code:</source>
          <target state="new">Add the following immediately after the previous code:</target>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>This creates a custom serializer, which will be used to serialize information produced by the Java components (such as the EventHubSpout) into a JSON format that downstream C# components can use.</source>
          <target state="new">This creates a custom serializer, which will be used to serialize information produced by the Java components (such as the EventHubSpout) into a JSON format that downstream C# components can use.</target>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Find the following code:</source>
          <target state="new">Find the following code:</target>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Replace it with the following:</source>
          <target state="new">Replace it with the following:</target>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>This code instructs the topology to use a bolt (defined in Bolt.cs).</source>
          <target state="new">This code instructs the topology to use a bolt (defined in Bolt.cs).</target>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The custom serializer defined earlier is used here so that this bolt can consume data produced by upstream Java components.</source>
          <target state="new">The custom serializer defined earlier is used here so that this bolt can consume data produced by upstream Java components.</target>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>In this case, the EventHubSpout.</source>
          <target state="new">In this case, the EventHubSpout.</target>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source><ph id="ph256">[AZURE.IMPORTANT]</ph><ph id="ph257" /> The last parameter for SetBolt, (with a value of <ph id="ph258">`true`</ph>,) enables ACK functionality for this bolt.</source>
          <target state="new"><ph id="ph256">[AZURE.IMPORTANT]</ph><ph id="ph257" /> The last parameter for SetBolt, (with a value of <ph id="ph258">`true`</ph>,) enables ACK functionality for this bolt.</target>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>This is required, as the EventHubSpout component expects an ACK for data that it emits.</source>
          <target state="new">This is required, as the EventHubSpout component expects an ACK for data that it emits.</target>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>If ACKs are not returned by downstream components, the spout will stop receiving after processing around 1000 messages.</source>
          <target state="new">If ACKs are not returned by downstream components, the spout will stop receiving after processing around 1000 messages.</target>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>At this point, you are done with <bpt id="p112">**</bpt>Program.cs<ept id="p112">**</ept>.</source>
          <target state="new">At this point, you are done with <bpt id="p112">**</bpt>Program.cs<ept id="p112">**</ept>.</target>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The topology has been defined, but now you must create a helper class to write data to Table storage, then you must modify <bpt id="p113">**</bpt>Bolt.cs<ept id="p113">**</ept><ph id="ph259" /> so that it can understand the data produced by the spout.</source>
          <target state="new">The topology has been defined, but now you must create a helper class to write data to Table storage, then you must modify <bpt id="p113">**</bpt>Bolt.cs<ept id="p113">**</ept><ph id="ph259" /> so that it can understand the data produced by the spout.</target>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source><ph id="ph260">[AZURE.NOTE]</ph><ph id="ph261" /> This topology will default to creating one worker process, which is sufficient for example purposes.</source>
          <target state="new"><ph id="ph260">[AZURE.NOTE]</ph><ph id="ph261" /> This topology will default to creating one worker process, which is sufficient for example purposes.</target>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>If you are adapting this for a production cluster, you should can add the following to change the number of workers:</source>
          <target state="new">If you are adapting this for a production cluster, you should can add the following to change the number of workers:</target>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Create a helper class</source>
          <target state="new">Create a helper class</target>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>When writing data to Table storage, you must create a class that describes the data that will be written.</source>
          <target state="new">When writing data to Table storage, you must create a class that describes the data that will be written.</target>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>In <bpt id="p114">**</bpt>Solution Explorer<ept id="p114">**</ept>, right-click the <bpt id="p115">**</bpt>EventHubReader<ept id="p115">**</ept><ph id="ph262" /> project, and select <bpt id="p116">**</bpt>Add<ept id="p116">**</ept>, then <bpt id="p117">**</bpt>New Class<ept id="p117">**</ept>.</source>
          <target state="new">In <bpt id="p114">**</bpt>Solution Explorer<ept id="p114">**</ept>, right-click the <bpt id="p115">**</bpt>EventHubReader<ept id="p115">**</ept><ph id="ph262" /> project, and select <bpt id="p116">**</bpt>Add<ept id="p116">**</ept>, then <bpt id="p117">**</bpt>New Class<ept id="p117">**</ept>.</target>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Name the new class <bpt id="p118">**</bpt>Devices.cs<ept id="p118">**</ept>.</source>
          <target state="new">Name the new class <bpt id="p118">**</bpt>Devices.cs<ept id="p118">**</ept>.</target>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Open <bpt id="p119">**</bpt>Devices.cs<ept id="p119">**</ept><ph id="ph263" /> and replace the default code with the following:</source>
          <target state="new">Open <bpt id="p119">**</bpt>Devices.cs<ept id="p119">**</ept><ph id="ph263" /> and replace the default code with the following:</target>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>This creates entities in Table storage that consist of a partition key (which will be set to the device ID read from Event Hub,) a unique row key, and a value that is read from Event Hub.</source>
          <target state="new">This creates entities in Table storage that consist of a partition key (which will be set to the device ID read from Event Hub,) a unique row key, and a value that is read from Event Hub.</target>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Each entity will also have a timestamp, which will be created automatically when the entity is inserted in the table.</source>
          <target state="new">Each entity will also have a timestamp, which will be created automatically when the entity is inserted in the table.</target>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Modify the bolt</source>
          <target state="new">Modify the bolt</target>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>In <bpt id="p120">**</bpt>Solution Explorer<ept id="p120">**</ept>, expand the <bpt id="p121">**</bpt>EventHubReader<ept id="p121">**</ept><ph id="ph264" /> project and open the <bpt id="p122">**</bpt>Bolt.cs<ept id="p122">**</ept><ph id="ph265" /> file.</source>
          <target state="new">In <bpt id="p120">**</bpt>Solution Explorer<ept id="p120">**</ept>, expand the <bpt id="p121">**</bpt>EventHubReader<ept id="p121">**</ept><ph id="ph264" /> project and open the <bpt id="p122">**</bpt>Bolt.cs<ept id="p122">**</ept><ph id="ph265" /> file.</target>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Add the following at the top of the file:</source>
          <target state="new">Add the following at the top of the file:</target>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>This allows you to more easily work with JSON data from the bolt and write data to Table storage.</source>
          <target state="new">This allows you to more easily work with JSON data from the bolt and write data to Table storage.</target>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Find the <ph id="ph266">`private int count;`</ph><ph id="ph267" /> statement and replace it with the following:</source>
          <target state="new">Find the <ph id="ph266">`private int count;`</ph><ph id="ph267" /> statement and replace it with the following:</target>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>This will be used when connecting to the table.</source>
          <target state="new">This will be used when connecting to the table.</target>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Find the following code:</source>
          <target state="new">Find the following code:</target>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>Replace it with the following:</source>
          <target state="new">Replace it with the following:</target>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>This instructs the bolt that it will be receiving a <bpt id="p123">**</bpt>string<ept id="p123">**</ept><ph id="ph268" /> value instead of an <bpt id="p124">**</bpt>int<ept id="p124">**</ept>, and that the data should be deserialized using the <bpt id="p125">**</bpt>CustomizedInteropJSONDeserialzer<ept id="p125">**</ept><ph id="ph269" /> that was declared in the topology earlier (in the program.cs file).</source>
          <target state="new">This instructs the bolt that it will be receiving a <bpt id="p123">**</bpt>string<ept id="p123">**</ept><ph id="ph268" /> value instead of an <bpt id="p124">**</bpt>int<ept id="p124">**</ept>, and that the data should be deserialized using the <bpt id="p125">**</bpt>CustomizedInteropJSONDeserialzer<ept id="p125">**</ept><ph id="ph269" /> that was declared in the topology earlier (in the program.cs file).</target>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Immediately after the previous code, add the following:</source>
          <target state="new">Immediately after the previous code, add the following:</target>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>This connects to the <bpt id="p126">**</bpt>events<ept id="p126">**</ept><ph id="ph270" /> table by using the connection string configured previously.</source>
          <target state="new">This connects to the <bpt id="p126">**</bpt>events<ept id="p126">**</ept><ph id="ph270" /> table by using the connection string configured previously.</target>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>If it does not exist, it will be created.</source>
          <target state="new">If it does not exist, it will be created.</target>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Find the <bpt id="p127">**</bpt>Execute<ept id="p127">**</ept><ph id="ph271" /> method and replace it with the following:</source>
          <target state="new">Find the <bpt id="p127">**</bpt>Execute<ept id="p127">**</ept><ph id="ph271" /> method and replace it with the following:</target>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>This uses Json.NET to parse the JSON data from the spout, and then picks out the <bpt id="p128">**</bpt>deviceId<ept id="p128">**</ept><ph id="ph272" /> and <bpt id="p129">**</bpt>deviceValue<ept id="p129">**</ept><ph id="ph273" /> fields.</source>
          <target state="new">This uses Json.NET to parse the JSON data from the spout, and then picks out the <bpt id="p128">**</bpt>deviceId<ept id="p128">**</ept><ph id="ph272" /> and <bpt id="p129">**</bpt>deviceValue<ept id="p129">**</ept><ph id="ph273" /> fields.</target>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>A new <bpt id="p130">**</bpt>Device<ept id="p130">**</ept><ph id="ph274" /> object is then created by using the <bpt id="p131">**</bpt>deviceId<ept id="p131">**</ept><ph id="ph275" /> during initialization to set the partition key for the table.</source>
          <target state="new">A new <bpt id="p130">**</bpt>Device<ept id="p130">**</ept><ph id="ph274" /> object is then created by using the <bpt id="p131">**</bpt>deviceId<ept id="p131">**</ept><ph id="ph275" /> during initialization to set the partition key for the table.</target>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>The value is then set to the <bpt id="p132">**</bpt>deviceValue<ept id="p132">**</ept>, and finally the entity is inserted into the table.</source>
          <target state="new">The value is then set to the <bpt id="p132">**</bpt>deviceValue<ept id="p132">**</ept>, and finally the entity is inserted into the table.</target>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>After the entity is inserted into the table, <ph id="ph276">`Ack()`</ph><ph id="ph277" /> is called for the tuple, to inform the spout that we have successfully processed the data.</source>
          <target state="new">After the entity is inserted into the table, <ph id="ph276">`Ack()`</ph><ph id="ph277" /> is called for the tuple, to inform the spout that we have successfully processed the data.</target>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source><ph id="ph278">[AZURE.IMPORTANT]</ph><ph id="ph279" /> The EventHubSpout component expects an ACK for each tuple from downstream components such as this bolt.</source>
          <target state="new"><ph id="ph278">[AZURE.IMPORTANT]</ph><ph id="ph279" /> The EventHubSpout component expects an ACK for each tuple from downstream components such as this bolt.</target>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>If ACKS are not received, the EventHubSpout will assume processing for the tuple has failed.</source>
          <target state="new">If ACKS are not received, the EventHubSpout will assume processing for the tuple has failed.</target>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>At this point, you have a complete topology that will read data from Event Hub, and store it in Table Storage in a table named <bpt id="p133">**</bpt>events<ept id="p133">**</ept>.</source>
          <target state="new">At this point, you have a complete topology that will read data from Event Hub, and store it in Table Storage in a table named <bpt id="p133">**</bpt>events<ept id="p133">**</ept>.</target>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Deploy the topologies</source>
          <target state="new">Deploy the topologies</target>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>From <bpt id="p134">**</bpt>Solution Explorer<ept id="p134">**</ept>, right-click the <bpt id="p135">**</bpt>EventHubReader<ept id="p135">**</ept><ph id="ph280" /> project and select <bpt id="p136">**</bpt>Submit to Storm on HDInsight<ept id="p136">**</ept>.</source>
          <target state="new">From <bpt id="p134">**</bpt>Solution Explorer<ept id="p134">**</ept>, right-click the <bpt id="p135">**</bpt>EventHubReader<ept id="p135">**</ept><ph id="ph280" /> project and select <bpt id="p136">**</bpt>Submit to Storm on HDInsight<ept id="p136">**</ept>.</target>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source><ph id="ph281">![</ph>submit to storm<ph id="ph282">](./media/hdinsight-storm-develop-csharp-event-hub-topology/submittostorm.png)</ph></source>
          <target state="new"><ph id="ph281">![</ph>submit to storm<ph id="ph282">](./media/hdinsight-storm-develop-csharp-event-hub-topology/submittostorm.png)</ph></target>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p137">**</bpt>Submit Topology<ept id="p137">**</ept><ph id="ph283" /> screen, select your <bpt id="p138">**</bpt>Storm Cluster<ept id="p138">**</ept>.</source>
          <target state="new">On the <bpt id="p137">**</bpt>Submit Topology<ept id="p137">**</ept><ph id="ph283" /> screen, select your <bpt id="p138">**</bpt>Storm Cluster<ept id="p138">**</ept>.</target>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Expand <bpt id="p139">**</bpt>Additional Configurations<ept id="p139">**</ept>, select <bpt id="p140">**</bpt>Java File Paths<ept id="p140">**</ept>, select <bpt id="p141">**</bpt>...<ept id="p141">**</ept><ph id="ph284" /> and select the directory that contains the <bpt id="p142">**</bpt>eventhubs-storm-spout-0.9-jar-with-dependencies.jar<ept id="p142">**</ept><ph id="ph285" /> file that you downloaded earlier.</source>
          <target state="new">Expand <bpt id="p139">**</bpt>Additional Configurations<ept id="p139">**</ept>, select <bpt id="p140">**</bpt>Java File Paths<ept id="p140">**</ept>, select <bpt id="p141">**</bpt>...<ept id="p141">**</ept><ph id="ph284" /> and select the directory that contains the <bpt id="p142">**</bpt>eventhubs-storm-spout-0.9-jar-with-dependencies.jar<ept id="p142">**</ept><ph id="ph285" /> file that you downloaded earlier.</target>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>Finally, click <bpt id="p143">**</bpt>Submit<ept id="p143">**</ept>.</source>
          <target state="new">Finally, click <bpt id="p143">**</bpt>Submit<ept id="p143">**</ept>.</target>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source><ph id="ph286">![</ph>Image of submission dialog<ph id="ph287">](./media/hdinsight-storm-develop-csharp-event-hub-topology/submit.png)</ph></source>
          <target state="new"><ph id="ph286">![</ph>Image of submission dialog<ph id="ph287">](./media/hdinsight-storm-develop-csharp-event-hub-topology/submit.png)</ph></target>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>When the topology has been submitted, the <bpt id="p144">**</bpt>Storm Topologies Viewer<ept id="p144">**</ept><ph id="ph288" /> will appear.</source>
          <target state="new">When the topology has been submitted, the <bpt id="p144">**</bpt>Storm Topologies Viewer<ept id="p144">**</ept><ph id="ph288" /> will appear.</target>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>Select the <bpt id="p145">**</bpt>EventHubReader<ept id="p145">**</ept><ph id="ph289" /> topology in the left pane to view statistics for the topology.</source>
          <target state="new">Select the <bpt id="p145">**</bpt>EventHubReader<ept id="p145">**</ept><ph id="ph289" /> topology in the left pane to view statistics for the topology.</target>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>Currently, nothing should be happening because no events have been written to Event Hubs yet.</source>
          <target state="new">Currently, nothing should be happening because no events have been written to Event Hubs yet.</target>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source><ph id="ph290">![</ph>example storage view<ph id="ph291">](./media/hdinsight-storm-develop-csharp-event-hub-topology/topologyviewer.png)</ph></source>
          <target state="new"><ph id="ph290">![</ph>example storage view<ph id="ph291">](./media/hdinsight-storm-develop-csharp-event-hub-topology/topologyviewer.png)</ph></target>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>From <bpt id="p146">**</bpt>Solution Explorer<ept id="p146">**</ept>, right-click the <bpt id="p147">**</bpt>EventHubWriter<ept id="p147">**</ept><ph id="ph292" /> project and select <bpt id="p148">**</bpt>Submit to Storm on HDInsight<ept id="p148">**</ept>.</source>
          <target state="new">From <bpt id="p146">**</bpt>Solution Explorer<ept id="p146">**</ept>, right-click the <bpt id="p147">**</bpt>EventHubWriter<ept id="p147">**</ept><ph id="ph292" /> project and select <bpt id="p148">**</bpt>Submit to Storm on HDInsight<ept id="p148">**</ept>.</target>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p149">**</bpt>Submit Topology<ept id="p149">**</ept><ph id="ph293" /> screen, select your <bpt id="p150">**</bpt>Storm Cluster<ept id="p150">**</ept>.</source>
          <target state="new">On the <bpt id="p149">**</bpt>Submit Topology<ept id="p149">**</ept><ph id="ph293" /> screen, select your <bpt id="p150">**</bpt>Storm Cluster<ept id="p150">**</ept>.</target>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Expand <bpt id="p151">**</bpt>Additional Configurations<ept id="p151">**</ept>, select <bpt id="p152">**</bpt>Java File Paths<ept id="p152">**</ept>, select <bpt id="p153">**</bpt>...<ept id="p153">**</ept><ph id="ph294" /> and select the directory that contains the <bpt id="p154">**</bpt>eventhubs-storm-spout-0.9-jar-with-dependencies.jar<ept id="p154">**</ept><ph id="ph295" /> file you downloaded earlier.</source>
          <target state="new">Expand <bpt id="p151">**</bpt>Additional Configurations<ept id="p151">**</ept>, select <bpt id="p152">**</bpt>Java File Paths<ept id="p152">**</ept>, select <bpt id="p153">**</bpt>...<ept id="p153">**</ept><ph id="ph294" /> and select the directory that contains the <bpt id="p154">**</bpt>eventhubs-storm-spout-0.9-jar-with-dependencies.jar<ept id="p154">**</ept><ph id="ph295" /> file you downloaded earlier.</target>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>Finally, click <bpt id="p155">**</bpt>Submit<ept id="p155">**</ept>.</source>
          <target state="new">Finally, click <bpt id="p155">**</bpt>Submit<ept id="p155">**</ept>.</target>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>When the topology has been submitted, refresh the topology list in the <bpt id="p156">**</bpt>Storm Topologies Viewer<ept id="p156">**</ept><ph id="ph296" /> to verify that both topologies are running on the cluster.</source>
          <target state="new">When the topology has been submitted, refresh the topology list in the <bpt id="p156">**</bpt>Storm Topologies Viewer<ept id="p156">**</ept><ph id="ph296" /> to verify that both topologies are running on the cluster.</target>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>When both topologies are running, select <bpt id="p157">**</bpt>Server Explorer<ept id="p157">**</ept>, then expand <bpt id="p158">**</bpt>Azure<ept id="p158">**</ept><ph id="ph297" /> &gt; <bpt id="p159">**</bpt>Storage<ept id="p159">**</ept>, and select the Storage Account you created earlier.</source>
          <target state="new">When both topologies are running, select <bpt id="p157">**</bpt>Server Explorer<ept id="p157">**</ept>, then expand <bpt id="p158">**</bpt>Azure<ept id="p158">**</ept><ph id="ph297" /> &gt; <bpt id="p159">**</bpt>Storage<ept id="p159">**</ept>, and select the Storage Account you created earlier.</target>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>Under the Storage Account, expand <bpt id="p160">**</bpt>Tables<ept id="p160">**</ept>.</source>
          <target state="new">Under the Storage Account, expand <bpt id="p160">**</bpt>Tables<ept id="p160">**</ept>.</target>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>Finally, double-click the <bpt id="p161">**</bpt>events<ept id="p161">**</ept><ph id="ph298" /> table to open the table.</source>
          <target state="new">Finally, double-click the <bpt id="p161">**</bpt>events<ept id="p161">**</ept><ph id="ph298" /> table to open the table.</target>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>You should see data that has been stored in the table from the <bpt id="p162">**</bpt>EventHubReader<ept id="p162">**</ept><ph id="ph299" /> topology.</source>
          <target state="new">You should see data that has been stored in the table from the <bpt id="p162">**</bpt>EventHubReader<ept id="p162">**</ept><ph id="ph299" /> topology.</target>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>The events are being generated by the <bpt id="p163">**</bpt>EventHubWriter<ept id="p163">**</ept><ph id="ph300" /> topology, which writes them to Event Hub.</source>
          <target state="new">The events are being generated by the <bpt id="p163">**</bpt>EventHubWriter<ept id="p163">**</ept><ph id="ph300" /> topology, which writes them to Event Hub.</target>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>The <bpt id="p164">**</bpt>EventHubReader<ept id="p164">**</ept><ph id="ph301" /> then reads the events from Event Hubs and stores them in Table storage in the <bpt id="p165">**</bpt>events<ept id="p165">**</ept><ph id="ph302" /> table.</source>
          <target state="new">The <bpt id="p164">**</bpt>EventHubReader<ept id="p164">**</ept><ph id="ph301" /> then reads the events from Event Hubs and stores them in Table storage in the <bpt id="p165">**</bpt>events<ept id="p165">**</ept><ph id="ph302" /> table.</target>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>Stop the topologies</source>
          <target state="new">Stop the topologies</target>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>To stop the topologies, select each topology in the <bpt id="p166">**</bpt>Storm Topology Viewer<ept id="p166">**</ept>, then click <bpt id="p167">**</bpt>Kill<ept id="p167">**</ept>.</source>
          <target state="new">To stop the topologies, select each topology in the <bpt id="p166">**</bpt>Storm Topology Viewer<ept id="p166">**</ept>, then click <bpt id="p167">**</bpt>Kill<ept id="p167">**</ept>.</target>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source><ph id="ph303">![</ph>image of killing a topology<ph id="ph304">](./media/hdinsight-storm-develop-csharp-event-hub-topology/killtopology.png)</ph></source>
          <target state="new"><ph id="ph303">![</ph>image of killing a topology<ph id="ph304">](./media/hdinsight-storm-develop-csharp-event-hub-topology/killtopology.png)</ph></target>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>Notes</source>
          <target state="new">Notes</target>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>Checkpointing</source>
          <target state="new">Checkpointing</target>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>The EventHubSpout periodically checkpoints its state to the Zookeeper node, which saves the current offset for messages read from the queue.</source>
          <target state="new">The EventHubSpout periodically checkpoints its state to the Zookeeper node, which saves the current offset for messages read from the queue.</target>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>This allows the component to start receiving messages at the saved offset in the following scenarios:</source>
          <target state="new">This allows the component to start receiving messages at the saved offset in the following scenarios:</target>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>The component instance fails and is restarted.</source>
          <target state="new">The component instance fails and is restarted.</target>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>You grow or shrink the cluster by adding or removing nodes.</source>
          <target state="new">You grow or shrink the cluster by adding or removing nodes.</target>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>The topology is killed and restarted <bpt id="p168">**</bpt>with the same name<ept id="p168">**</ept>.</source>
          <target state="new">The topology is killed and restarted <bpt id="p168">**</bpt>with the same name<ept id="p168">**</ept>.</target>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>You can also export and import the persisted checkpoints to WASB (the Azure Storage used by your HDInsight cluster.) The scripts to do this are located on the Storm on HDInsight cluster, at <bpt id="p169">**</bpt>c:\apps\dist\storm-0.9.3.2.2.1.0-2340\zkdatatool-1.0\bin<ept id="p169">**</ept>.</source>
          <target state="new">You can also export and import the persisted checkpoints to WASB (the Azure Storage used by your HDInsight cluster.) The scripts to do this are located on the Storm on HDInsight cluster, at <bpt id="p169">**</bpt>c:\apps\dist\storm-0.9.3.2.2.1.0-2340\zkdatatool-1.0\bin<ept id="p169">**</ept>.</target>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source><ph id="ph305">[AZURE.NOTE]</ph><ph id="ph306" /> The version number in the path may be different, as the version of Storm installed on the cluster may change in the future.</source>
          <target state="new"><ph id="ph305">[AZURE.NOTE]</ph><ph id="ph306" /> The version number in the path may be different, as the version of Storm installed on the cluster may change in the future.</target>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>The scripts in this directory are:</source>
          <target state="new">The scripts in this directory are:</target>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source><bpt id="p170">**</bpt>stormmeta_import.cmd<ept id="p170">**</ept>: Import all Storm metadata from the cluster default storage container into Zookeeper.</source>
          <target state="new"><bpt id="p170">**</bpt>stormmeta_import.cmd<ept id="p170">**</ept>: Import all Storm metadata from the cluster default storage container into Zookeeper.</target>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source><bpt id="p171">**</bpt>stormmeta_export.cmd<ept id="p171">**</ept>: Export all Storm metadata from Zookeeper to the cluster default storage container.</source>
          <target state="new"><bpt id="p171">**</bpt>stormmeta_export.cmd<ept id="p171">**</ept>: Export all Storm metadata from Zookeeper to the cluster default storage container.</target>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source><bpt id="p172">**</bpt>stormmeta_delete.cmd<ept id="p172">**</ept>: Delete all Storm metadata from Zookeeper.</source>
          <target state="new"><bpt id="p172">**</bpt>stormmeta_delete.cmd<ept id="p172">**</ept>: Delete all Storm metadata from Zookeeper.</target>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>Export an import allows you to persist checkpoint data when you need to delete the cluster, but want to resume processing from the current offset in the hub when you bring a new cluster back online.</source>
          <target state="new">Export an import allows you to persist checkpoint data when you need to delete the cluster, but want to resume processing from the current offset in the hub when you bring a new cluster back online.</target>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source><ph id="ph307">[AZURE.NOTE]</ph><ph id="ph308" /> Since the data is persisted to the default storage container, the new cluster <bpt id="p173">**</bpt>must<ept id="p173">**</ept><ph id="ph309" /> use the same storage account and container as the previous cluster.</source>
          <target state="new"><ph id="ph307">[AZURE.NOTE]</ph><ph id="ph308" /> Since the data is persisted to the default storage container, the new cluster <bpt id="p173">**</bpt>must<ept id="p173">**</ept><ph id="ph309" /> use the same storage account and container as the previous cluster.</target>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>Summary</source>
          <target state="new">Summary</target>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>In this document, you have learned how to use the Java Event Hubs Spout and Bolt from a C# topology to work with data in Azure Event Hub.</source>
          <target state="new">In this document, you have learned how to use the Java Event Hubs Spout and Bolt from a C# topology to work with data in Azure Event Hub.</target>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>To learn more about creating C# topologies, see the following.</source>
          <target state="new">To learn more about creating C# topologies, see the following.</target>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source><bpt id="p174">[</bpt>Develop C# topologies for Apache Storm on HDInsight using Visual Studio<ept id="p174">](hdinsight-storm-develop-csharp-visual-studio-topology.md)</ept></source>
          <target state="new"><bpt id="p174">[</bpt>Develop C# topologies for Apache Storm on HDInsight using Visual Studio<ept id="p174">](hdinsight-storm-develop-csharp-visual-studio-topology.md)</ept></target>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source><bpt id="p175">[</bpt>Example topologies for Storm on HDInsight<ept id="p175">](hdinsight-storm-example-topology.md)</ept></source>
          <target state="new"><bpt id="p175">[</bpt>Example topologies for Storm on HDInsight<ept id="p175">](hdinsight-storm-example-topology.md)</ept></target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b2ecadad4f4b6132d095bed846c770ef69b93557</xliffext:olfilehash>
  </header>
</xliff>