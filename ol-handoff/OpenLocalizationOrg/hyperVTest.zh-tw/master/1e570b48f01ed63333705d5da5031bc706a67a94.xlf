<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-tw" original="foo.file" tool-id="8e138c45-03f4-4630-95a6-d4e62950e301" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="8e138c45-03f4-4630-95a6-d4e62950e301" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group id="e5d903f3-4962-492b-986f-b7a652e23c16">
        <trans-unit id="f97b8c52-3a0a-499c-9dde-8971da5dc59e" xml:space="preserve">
          <source>ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9
title: PowerShell Snippets</source>
          <target state="new">ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9
title: PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="528eeb66-5a66-4ba2-b60c-c4a586c56ada" xml:space="preserve">
          <source>PowerShell Snippets</source>
          <target state="new">PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="98a3ba8a-50db-491d-bfe4-fff9e2e03eae" xml:space="preserve">
          <source>Adding this sentence for testing HO-HB process.</source>
          <target state="new">Adding this sentence for testing HO-HB process.</target>
        </trans-unit>
        <trans-unit id="7bc51d4f-081e-4ff2-9796-9f795a26e427" xml:space="preserve">
          <source>PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</source>
          <target state="new">PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</target>
        </trans-unit>
        <trans-unit id="44a37e38-56b6-4cc6-b159-698ae91f8c8a" xml:space="preserve">
          <source>All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</source>
          <target state="new">All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</target>
        </trans-unit>
        <trans-unit id="fa0fbbf3-3df1-4791-85bd-de3cfe50cd83" xml:space="preserve">
          <source>If you aren't sure if you have the right permissions, type <bpt id="c44f47c6-30b6-4dbe-975c-c3d00bc3e516">&lt;code&gt;</bpt>Get-VM<ept id="c44f47c6-30b6-4dbe-975c-c3d00bc3e516">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</source>
          <target state="new">If you aren't sure if you have the right permissions, type <bpt id="c44f47c6-30b6-4dbe-975c-c3d00bc3e516">&lt;code&gt;</bpt>Get-VM<ept id="c44f47c6-30b6-4dbe-975c-c3d00bc3e516">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</target>
        </trans-unit>
        <trans-unit id="e6ebfeb8-6e7e-4556-b97f-3b4d236445c8" xml:space="preserve">
          <source>PowerShell Direct tools</source>
          <target state="new">PowerShell Direct tools</target>
        </trans-unit>
        <trans-unit id="1609cc3f-3c97-4424-b301-939cbdbbf3a8" xml:space="preserve">
          <source>All of the scripts and snippets in this section will rely on the following basics.</source>
          <target state="new">All of the scripts and snippets in this section will rely on the following basics.</target>
        </trans-unit>
        <trans-unit id="8c52d163-155e-4233-9747-0da8b2a5eb75" xml:space="preserve">
          <source><bpt id="92e7a07f-b1d2-4fe1-888d-5069cbc681a6">&lt;strong&gt;</bpt>Requirements<ept id="92e7a07f-b1d2-4fe1-888d-5069cbc681a6">&lt;/strong&gt;</ept> :</source>
          <target state="new"><bpt id="92e7a07f-b1d2-4fe1-888d-5069cbc681a6">&lt;strong&gt;</bpt>Requirements<ept id="92e7a07f-b1d2-4fe1-888d-5069cbc681a6">&lt;/strong&gt;</ept> :</target>
        </trans-unit>
        <trans-unit id="b0fb077f-96a3-4328-9eb0-12dce7da986b" xml:space="preserve">
          <source>PowerShell Direct.</source>
          <target state="new">PowerShell Direct.</target>
        </trans-unit>
        <trans-unit id="d08fe654-32d3-4cef-9063-35cd3000fcf6" xml:space="preserve">
          <source>Windows 10 guest and host OS.</source>
          <target state="new">Windows 10 guest and host OS.</target>
        </trans-unit>
        <trans-unit id="47c51054-67b7-410f-b583-541bb3279d59" xml:space="preserve">
          <source><bpt id="490f6fda-b3f4-43f1-ad90-fc6ffc649ae8">&lt;strong&gt;</bpt>Common Variables<ept id="490f6fda-b3f4-43f1-ad90-fc6ffc649ae8">&lt;/strong&gt;</ept> :  
<bpt id="3f919980-4813-4b06-b08c-db61657f47d7">&lt;code&gt;</bpt>$VMName<ept id="3f919980-4813-4b06-b08c-db61657f47d7">&lt;/code&gt;</ept> -- this is a string with the VMName.</source>
          <target state="new"><bpt id="490f6fda-b3f4-43f1-ad90-fc6ffc649ae8">&lt;strong&gt;</bpt>Common Variables<ept id="490f6fda-b3f4-43f1-ad90-fc6ffc649ae8">&lt;/strong&gt;</ept> :  
<bpt id="3f919980-4813-4b06-b08c-db61657f47d7">&lt;code&gt;</bpt>$VMName<ept id="3f919980-4813-4b06-b08c-db61657f47d7">&lt;/code&gt;</ept> -- this is a string with the VMName.</target>
        </trans-unit>
        <trans-unit id="a12ea2bb-5ce1-47cb-b4aa-05425812bdf5" xml:space="preserve">
          <source>See a list of available VMs with <bpt id="2ec902b4-3af6-4651-ab18-06d4c1a1e1c1">&lt;code&gt;</bpt>Get-VM<ept id="2ec902b4-3af6-4651-ab18-06d4c1a1e1c1">&lt;/code&gt;</ept>  
<bpt id="64be8bc2-d6c0-4a34-a9e9-a38c0525b6cc">&lt;code&gt;</bpt>$cred<ept id="64be8bc2-d6c0-4a34-a9e9-a38c0525b6cc">&lt;/code&gt;</ept> -- Credential for the guest OS.</source>
          <target state="new">See a list of available VMs with <bpt id="2ec902b4-3af6-4651-ab18-06d4c1a1e1c1">&lt;code&gt;</bpt>Get-VM<ept id="2ec902b4-3af6-4651-ab18-06d4c1a1e1c1">&lt;/code&gt;</ept>  
<bpt id="64be8bc2-d6c0-4a34-a9e9-a38c0525b6cc">&lt;code&gt;</bpt>$cred<ept id="64be8bc2-d6c0-4a34-a9e9-a38c0525b6cc">&lt;/code&gt;</ept> -- Credential for the guest OS.</target>
        </trans-unit>
        <trans-unit id="634eec8a-aa11-4a2f-bbf1-d27c1f5ff289" xml:space="preserve">
          <source>Can be populated using <bpt id="3099dbf4-9fa1-4318-94d1-5d6493721f8e">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="3099dbf4-9fa1-4318-94d1-5d6493721f8e">&lt;/code&gt;</ept></source>
          <target state="new">Can be populated using <bpt id="3099dbf4-9fa1-4318-94d1-5d6493721f8e">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="3099dbf4-9fa1-4318-94d1-5d6493721f8e">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="116c193d-2d96-422d-a6ac-9ab91a257b2b" xml:space="preserve">
          <source>Check if the guest has booted</source>
          <target state="new">Check if the guest has booted</target>
        </trans-unit>
        <trans-unit id="642ae956-bfd8-4f20-bd0d-83c124231301" xml:space="preserve">
          <source>Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</source>
          <target state="new">Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</target>
        </trans-unit>
        <trans-unit id="03afd148-553c-4b08-b170-525d11ae95b2" xml:space="preserve">
          <source>Use this command to check whether the guest has booted.</source>
          <target state="new">Use this command to check whether the guest has booted.</target>
        </trans-unit>
        <trans-unit id="97b9cf57-f58f-41bd-9b0a-556a900484d2" xml:space="preserve">
          <source><bpt id="40242ba3-1734-4345-8ca4-ff9d196f4578">&lt;strong&gt;</bpt>Outcome<ept id="40242ba3-1734-4345-8ca4-ff9d196f4578">&lt;/strong&gt;</ept>  
Prints a friendly message declaring the state of the guest OS.</source>
          <target state="new"><bpt id="40242ba3-1734-4345-8ca4-ff9d196f4578">&lt;strong&gt;</bpt>Outcome<ept id="40242ba3-1734-4345-8ca4-ff9d196f4578">&lt;/strong&gt;</ept>  
Prints a friendly message declaring the state of the guest OS.</target>
        </trans-unit>
        <trans-unit id="88ac4808-eb8d-4907-bfb4-327fdb28f0e4" xml:space="preserve">
          <source>Script locking until the guest has booted</source>
          <target state="new">Script locking until the guest has booted</target>
        </trans-unit>
        <trans-unit id="4a1ec29b-0328-401f-854c-b98373f1d025" xml:space="preserve">
          <source>The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</source>
          <target state="new">The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</target>
        </trans-unit>
        <trans-unit id="eac550d2-db65-4ccc-946f-573b4147c2d4" xml:space="preserve">
          <source><bpt id="ea524a77-c5c0-4de4-840b-f33c01f717a4">&lt;strong&gt;</bpt>Outcome<ept id="ea524a77-c5c0-4de4-840b-f33c01f717a4">&lt;/strong&gt;</ept>  
Prints a friendly message and locks until the connection to the VM succeeds.</source>
          <target state="new"><bpt id="ea524a77-c5c0-4de4-840b-f33c01f717a4">&lt;strong&gt;</bpt>Outcome<ept id="ea524a77-c5c0-4de4-840b-f33c01f717a4">&lt;/strong&gt;</ept>  
Prints a friendly message and locks until the connection to the VM succeeds.</target>
        </trans-unit>
        <trans-unit id="cc99fdec-9db8-461b-b537-414a9103983d" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="2b002ea7-7eba-4f9f-b37e-4821ae8af413" xml:space="preserve">
          <source>Script locking until the guest has a network</source>
          <target state="new">Script locking until the guest has a network</target>
        </trans-unit>
        <trans-unit id="16a49c8e-d1c1-4002-b7a9-0b8171c61379" xml:space="preserve">
          <source>With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</source>
          <target state="new">With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</target>
        </trans-unit>
        <trans-unit id="15c7bcec-b6cf-4f53-9ffb-3ee581c43644" xml:space="preserve">
          <source><bpt id="0882f850-91fa-491b-ae3a-55ebe3555dfc">&lt;em&gt;</bpt>* Outcome *<ept id="0882f850-91fa-491b-ae3a-55ebe3555dfc">&lt;/em&gt;</ept>
Locks until a DHCP lease is recieved.</source>
          <target state="new"><bpt id="0882f850-91fa-491b-ae3a-55ebe3555dfc">&lt;em&gt;</bpt>* Outcome *<ept id="0882f850-91fa-491b-ae3a-55ebe3555dfc">&lt;/em&gt;</ept>
Locks until a DHCP lease is recieved.</target>
        </trans-unit>
        <trans-unit id="e4241cb8-d412-4460-9b16-1a8cce8f79ec" xml:space="preserve">
          <source>Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</source>
          <target state="new">Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</target>
        </trans-unit>
        <trans-unit id="a7f3c5fb-eabb-47e6-ac28-c4577ecb6c34" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="87fda687-187e-4a5d-bb5b-6710d69a8079" xml:space="preserve">
          <source>Managing credentials with PowerShell</source>
          <target state="new">Managing credentials with PowerShell</target>
        </trans-unit>
        <trans-unit id="28aa9839-1d8b-4ff1-b276-4bfa2f6a0b83" xml:space="preserve">
          <source>Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</source>
          <target state="new">Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</target>
        </trans-unit>
        <trans-unit id="b204b0e1-3ccc-4720-a72d-7348852e95ac" xml:space="preserve">
          <source>There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</source>
          <target state="new">There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</target>
        </trans-unit>
        <trans-unit id="e244f08b-5b6a-4061-b488-ad60a8adb561" xml:space="preserve">
          <source>The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</source>
          <target state="new">The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</target>
        </trans-unit>
        <trans-unit id="68ca3ab2-375d-430c-8aaa-e41bca5336e2" xml:space="preserve">
          <source>This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</source>
          <target state="new">This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</target>
        </trans-unit>
        <trans-unit id="4b30c04d-d3dc-4c54-bcf6-567c6cd29441" xml:space="preserve">
          <source>In this scenario you can just run <bpt id="03616c7d-50da-4215-ae38-63456cad5242">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="03616c7d-50da-4215-ae38-63456cad5242">&lt;/code&gt;</ept>.</source>
          <target state="new">In this scenario you can just run <bpt id="03616c7d-50da-4215-ae38-63456cad5242">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="03616c7d-50da-4215-ae38-63456cad5242">&lt;/code&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="9d388aa5-0cf8-4a7a-b347-0615bf4d71c3" xml:space="preserve">
          <source>Let PowerShell prompt you for credentials  
If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</source>
          <target state="new">Let PowerShell prompt you for credentials  
If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</target>
        </trans-unit>
        <trans-unit id="136b0894-b3bf-48be-9d6d-d1f89e636d7f" xml:space="preserve">
          <source>Store credentials in a variable for reuse.</source>
          <target state="new">Store credentials in a variable for reuse.</target>
        </trans-unit>
        <trans-unit id="6321e675-f11b-4bf8-a112-cf0175847a5b" xml:space="preserve">
          <source>Running a simple command like this:</source>
          <target state="new">Running a simple command like this:</target>
        </trans-unit>
        <trans-unit id="aa3fafd0-f03f-403a-98b5-569873870c42" xml:space="preserve">
          <source>  Will mean that you only get prompted once per script/PowerShell session for your credentials.</source>
          <target state="new">  Will mean that you only get prompted once per script/PowerShell session for your credentials.</target>
        </trans-unit>
        <trans-unit id="40756a8b-fa4b-4dd0-8ea1-f3245de21cfb" xml:space="preserve">
          <source>Code your credentials into your scripts.</source>
          <target state="new">Code your credentials into your scripts.</target>
        </trans-unit>
        <trans-unit id="27bd2d85-4fd7-403f-ad0a-983949749936" xml:space="preserve">
          <source><bpt id="8a288339-f236-479c-91cd-2b2d303aa56c">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="8a288339-f236-479c-91cd-2b2d303aa56c">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="8a288339-f236-479c-91cd-2b2d303aa56c">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="8a288339-f236-479c-91cd-2b2d303aa56c">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="bba5bc49-24ef-4314-aa6f-a05772273ecc" xml:space="preserve">
          <source>Warning:  _Do not do this in a production system.</source>
          <target state="new">Warning:  _Do not do this in a production system.</target>
        </trans-unit>
        <trans-unit id="9de2fe90-7945-499b-8c68-68567ecd4b61" xml:space="preserve">
          <source>Do not do this with real passwords._</source>
          <target state="new">Do not do this with real passwords._</target>
        </trans-unit>
        <trans-unit id="dafc541a-b6c0-4cc4-95b7-599b1a29a5f7" xml:space="preserve">
          <source>You can hand craft a PSCredential object with some code like this:</source>
          <target state="new">You can hand craft a PSCredential object with some code like this:</target>
        </trans-unit>
        <trans-unit id="d0e5e5c3-40cc-4dee-a201-fe43b55189bc" xml:space="preserve">
          <source>Grossly insecure - but useful for testing.</source>
          <target state="new">Grossly insecure - but useful for testing.</target>
        </trans-unit>
        <trans-unit id="f84bdc87-d31a-468d-b8b5-df10b04d8e5b" xml:space="preserve">
          <source>Now you get no prompts at all in this session.</source>
          <target state="new">Now you get no prompts at all in this session.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>