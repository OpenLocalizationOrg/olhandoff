<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-US" target-language="zh-tw">
    <body>
      <group id="main" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Handle database write conflicts with optimistic concurrency (Windows Store) | Microsoft Azure</source>
          <target state="new">Handle database write conflicts with optimistic concurrency (Windows Store) | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to handle database write conflicts on both the server and in your Windows Store application.</source>
          <target state="new">Learn how to handle database write conflicts on both the server and in your Windows Store application.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Handling database write conflicts</source>
          <target state="new">Handling database write conflicts</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>&amp;nbsp;</source>
          <target state="new">&amp;nbsp;</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="new">Overview</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This tutorial is intended to help you better understand how to handle conflicts that occur when two or more clients write to the same database record in a Windows Store app.</source>
          <target state="new">This tutorial is intended to help you better understand how to handle conflicts that occur when two or more clients write to the same database record in a Windows Store app.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Two or more clients may write changes to the same item, at the same time, in some scenarios.</source>
          <target state="new">Two or more clients may write changes to the same item, at the same time, in some scenarios.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Without any conflict detection, the last write would overwrite any previous updates even if this was not the desired result.</source>
          <target state="new">Without any conflict detection, the last write would overwrite any previous updates even if this was not the desired result.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Azure Mobile Services provides support for detecting and resolving these conflicts.</source>
          <target state="new">Azure Mobile Services provides support for detecting and resolving these conflicts.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This topic walks you through the steps that allow you to handle database write conflicts on both the server and in your application.</source>
          <target state="new">This topic walks you through the steps that allow you to handle database write conflicts on both the server and in your application.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In this tutorial you will add functionality to the quickstart app to handle contentions that can occur when updating the TodoItem database.</source>
          <target state="new">In this tutorial you will add functionality to the quickstart app to handle contentions that can occur when updating the TodoItem database.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="new">Prerequisites</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This tutorial requires the following</source>
          <target state="new">This tutorial requires the following</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Microsoft Visual Studio 2013 or later.</source>
          <target state="new">Microsoft Visual Studio 2013 or later.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This tutorial is based on the Mobile Services quickstart.</source>
          <target state="new">This tutorial is based on the Mobile Services quickstart.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Before you start this tutorial, you must first complete [Get started with Mobile Services].</source>
          <target state="new">Before you start this tutorial, you must first complete [Get started with Mobile Services].</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>[Azure Account]</source>
          <target state="new">[Azure Account]</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Azure Mobile Services NuGet Package 1.1.0 or later.</source>
          <target state="new">Azure Mobile Services NuGet Package 1.1.0 or later.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>To get the latest version, follow these steps below:</source>
          <target state="new">To get the latest version, follow these steps below:</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>In Visual Studio, open the project and right-click the project in Solution Explorer then click <bpt id="p1">**</bpt>Manage Nuget Packages<ept id="p1">**</ept>.</source>
          <target state="new">In Visual Studio, open the project and right-click the project in Solution Explorer then click <bpt id="p1">**</bpt>Manage Nuget Packages<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>![][19]</source>
          <target state="new">![][19]</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Expand <bpt id="p2">**</bpt>Online<ept id="p2">**</ept><ph id="ph3" /> and click <bpt id="p3">**</bpt>Microsoft and .NET<ept id="p3">**</ept>.</source>
          <target state="new">Expand <bpt id="p2">**</bpt>Online<ept id="p2">**</ept><ph id="ph3" /> and click <bpt id="p3">**</bpt>Microsoft and .NET<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>In the search text box enter <bpt id="p4">**</bpt>Azure Mobile Services<ept id="p4">**</ept>.</source>
          <target state="new">In the search text box enter <bpt id="p4">**</bpt>Azure Mobile Services<ept id="p4">**</ept>.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p5">**</bpt>Install<ept id="p5">**</ept><ph id="ph4" /> on the <bpt id="p6">**</bpt>Azure Mobile Services<ept id="p6">**</ept><ph id="ph5" /> NuGet Package.</source>
          <target state="new">Click <bpt id="p5">**</bpt>Install<ept id="p5">**</ept><ph id="ph4" /> on the <bpt id="p6">**</bpt>Azure Mobile Services<ept id="p6">**</ept><ph id="ph5" /> NuGet Package.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>![][20]</source>
          <target state="new">![][20]</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Update the application to allow updates</source>
          <target state="new">Update the application to allow updates</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>In this section you will update the TodoList user interface to allow updating the text of each item in a ListBox control.</source>
          <target state="new">In this section you will update the TodoList user interface to allow updating the text of each item in a ListBox control.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The ListBox will contain a CheckBox and TextBox control for each item in the database table.</source>
          <target state="new">The ListBox will contain a CheckBox and TextBox control for each item in the database table.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>You will be able to update the text field of the TodoItem.</source>
          <target state="new">You will be able to update the text field of the TodoItem.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The application will handle the <ph id="ph6">`LostFocus`</ph><ph id="ph7" /> event from that TextBox to update the item in the database.</source>
          <target state="new">The application will handle the <ph id="ph6">`LostFocus`</ph><ph id="ph7" /> event from that TextBox to update the item in the database.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>In Visual Studio, open the TodoList project you downloaded in the [Get started with Mobile Services] tutorial.</source>
          <target state="new">In Visual Studio, open the TodoList project you downloaded in the [Get started with Mobile Services] tutorial.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>In the Visual Studio Solution Explorer, open MainPage.xaml and replace the <ph id="ph8">`ListView`</ph><ph id="ph9" /> definition with the <ph id="ph10">`ListView`</ph><ph id="ph11" /> shown below and save the change.</source>
          <target state="new">In the Visual Studio Solution Explorer, open MainPage.xaml and replace the <ph id="ph8">`ListView`</ph><ph id="ph9" /> definition with the <ph id="ph10">`ListView`</ph><ph id="ph11" /> shown below and save the change.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>In the Visual Studio Solution Explorer, open MainPage.cs in the shared project.</source>
          <target state="new">In the Visual Studio Solution Explorer, open MainPage.cs in the shared project.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Add the event handler to the MainPage for the TextBox <ph id="ph12">`LostFocus`</ph><ph id="ph13" /> event as shown below.</source>
          <target state="new">Add the event handler to the MainPage for the TextBox <ph id="ph12">`LostFocus`</ph><ph id="ph13" /> event as shown below.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>In MainPage.cs for the shared project, add the definition for the MainPage <ph id="ph14">`UpdateToDoItem()`</ph><ph id="ph15" /> method referenced in the event handler as shown below.</source>
          <target state="new">In MainPage.cs for the shared project, add the definition for the MainPage <ph id="ph14">`UpdateToDoItem()`</ph><ph id="ph15" /> method referenced in the event handler as shown below.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The application now writes the text changes to each item back to the database when the TextBox loses focus.</source>
          <target state="new">The application now writes the text changes to each item back to the database when the TextBox loses focus.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Enable Conflict Detection in your application</source>
          <target state="new">Enable Conflict Detection in your application</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Two or more clients may write changes to the same item, at the same time, in some scenarios.</source>
          <target state="new">Two or more clients may write changes to the same item, at the same time, in some scenarios.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Without any conflict detection, the last write would overwrite any previous updates even if this was not the desired result.</source>
          <target state="new">Without any conflict detection, the last write would overwrite any previous updates even if this was not the desired result.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>[Optimistic Concurrency Control] assumes that each transaction can commit and therefore does not use any resource locking.</source>
          <target state="new">[Optimistic Concurrency Control] assumes that each transaction can commit and therefore does not use any resource locking.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Before committing a transaction, optimistic concurrency control verifies that no other transaction has modified the data.</source>
          <target state="new">Before committing a transaction, optimistic concurrency control verifies that no other transaction has modified the data.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>If the data has been modified, the committing transaction is rolled back.</source>
          <target state="new">If the data has been modified, the committing transaction is rolled back.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Azure Mobile Services supports optimistic concurrency control by tracking changes to each item using the <ph id="ph16">`__version`</ph><ph id="ph17" /> system property column that is added to each table.</source>
          <target state="new">Azure Mobile Services supports optimistic concurrency control by tracking changes to each item using the <ph id="ph16">`__version`</ph><ph id="ph17" /> system property column that is added to each table.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>In this section, we will enable the application to detect these write conflicts through the <ph id="ph18">`__version`</ph><ph id="ph19" /> system property.</source>
          <target state="new">In this section, we will enable the application to detect these write conflicts through the <ph id="ph18">`__version`</ph><ph id="ph19" /> system property.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The application will be notified by a <ph id="ph20">`MobileServicePreconditionFailedException`</ph><ph id="ph21" /> during an update attempt if the record has changed since the last query.</source>
          <target state="new">The application will be notified by a <ph id="ph20">`MobileServicePreconditionFailedException`</ph><ph id="ph21" /> during an update attempt if the record has changed since the last query.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>It will then be able to make a choice of whether to commit its change to the database or leave the last change to the database intact.</source>
          <target state="new">It will then be able to make a choice of whether to commit its change to the database or leave the last change to the database intact.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For more information on the System Properties for Mobile Services, see [System Properties].</source>
          <target state="new">For more information on the System Properties for Mobile Services, see [System Properties].</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Open TodoItem.cs in the shared project and update the <ph id="ph22">`TodoItem`</ph><ph id="ph23" /> class definition with the following code to include the <ph id="ph24">`__version`</ph><ph id="ph25" /> system property enabling support for write conflict detection.</source>
          <target state="new">Open TodoItem.cs in the shared project and update the <ph id="ph22">`TodoItem`</ph><ph id="ph23" /> class definition with the following code to include the <ph id="ph24">`__version`</ph><ph id="ph25" /> system property enabling support for write conflict detection.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><ph id="ph26">[AZURE.NOTE]</ph><ph id="ph27" /> When using untyped tables, enable optimistic concurrency by adding the Version flag to the SystemProperties of the table.</source>
          <target state="new"><ph id="ph26">[AZURE.NOTE]</ph><ph id="ph27" /> When using untyped tables, enable optimistic concurrency by adding the Version flag to the SystemProperties of the table.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>//Enable optimistic concurrency by retrieving __version
todoTable.SystemProperties |= MobileServiceSystemProperties.Version;</source>
          <target state="new">//Enable optimistic concurrency by retrieving __version
todoTable.SystemProperties |= MobileServiceSystemProperties.Version;</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0cadbd89aaa883256206c4892b05d9a8f9fd34b2</xliffext:olfilehash>
  </header>
</xliff>