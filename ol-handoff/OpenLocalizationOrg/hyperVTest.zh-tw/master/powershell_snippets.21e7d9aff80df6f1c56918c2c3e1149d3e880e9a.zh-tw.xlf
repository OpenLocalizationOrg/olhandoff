<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-tw" original="foo.file" tool-id="db897e40-39a7-412a-8ad1-458b788d0ebf" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="db897e40-39a7-412a-8ad1-458b788d0ebf" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
      <olfilehash xmlns="">1e570b48f01ed63333705d5da5031bc706a67a94</olfilehash>
    </header>
    <body>
      <group id="a6fe8289-b50e-4acf-be82-0e5119757166">
        <trans-unit id="312e5334-b1a4-4dfd-9614-99b7a32ce84b" xml:space="preserve">
          <source>ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9
title: PowerShell Snippets</source>
          <target state="new">ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9
title: PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="ceda38cf-2611-4a3a-8178-c0d6507b7aff" xml:space="preserve">
          <source>PowerShell Snippets</source>
          <target state="new">PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="7daa3c16-95ea-452a-a494-25e85984132e" xml:space="preserve">
          <source>Adding this sentence for testing HO-HB process.</source>
          <target state="new">Adding this sentence for testing HO-HB process.</target>
        </trans-unit>
        <trans-unit id="c6389d5b-16cf-441a-a952-49402abf901c" xml:space="preserve">
          <source>PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</source>
          <target state="new">PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</target>
        </trans-unit>
        <trans-unit id="abb5d30f-48b0-432b-8e70-d0b4884adeae" xml:space="preserve">
          <source>All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</source>
          <target state="new">All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</target>
        </trans-unit>
        <trans-unit id="694e6bcd-3c60-4742-bb3c-9f4da745bf43" xml:space="preserve">
          <source>If you aren't sure if you have the right permissions, type <bpt id="69ea626f-048c-4b69-8665-f4a116948ca2">&lt;code&gt;</bpt>Get-VM<ept id="69ea626f-048c-4b69-8665-f4a116948ca2">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</source>
          <target state="new">If you aren't sure if you have the right permissions, type <bpt id="69ea626f-048c-4b69-8665-f4a116948ca2">&lt;code&gt;</bpt>Get-VM<ept id="69ea626f-048c-4b69-8665-f4a116948ca2">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</target>
        </trans-unit>
        <trans-unit id="8e33111d-6c71-43f5-9fba-e1c40be49799" xml:space="preserve">
          <source>PowerShell Direct tools</source>
          <target state="new">PowerShell Direct tools</target>
        </trans-unit>
        <trans-unit id="519f702f-a577-4a4d-a85c-2e25cf7a642c" xml:space="preserve">
          <source>All of the scripts and snippets in this section will rely on the following basics.</source>
          <target state="new">All of the scripts and snippets in this section will rely on the following basics.</target>
        </trans-unit>
        <trans-unit id="27443e9c-d57f-4f79-882f-b209f1ed6906" xml:space="preserve">
          <source><bpt id="e5b3544f-1e5c-4992-ad91-7bc40f3dc527">&lt;strong&gt;</bpt>Requirements<ept id="e5b3544f-1e5c-4992-ad91-7bc40f3dc527">&lt;/strong&gt;</ept> :</source>
          <target state="new"><bpt id="e5b3544f-1e5c-4992-ad91-7bc40f3dc527">&lt;strong&gt;</bpt>Requirements<ept id="e5b3544f-1e5c-4992-ad91-7bc40f3dc527">&lt;/strong&gt;</ept> :</target>
        </trans-unit>
        <trans-unit id="84f19bd8-b92a-40c3-bf04-306e2746affe" xml:space="preserve">
          <source>PowerShell Direct.</source>
          <target state="new">PowerShell Direct.</target>
        </trans-unit>
        <trans-unit id="c127064b-49ac-4c0b-8865-b01ade78887e" xml:space="preserve">
          <source>Windows 10 guest and host OS.</source>
          <target state="new">Windows 10 guest and host OS.</target>
        </trans-unit>
        <trans-unit id="0df1cf11-d956-4a02-91fe-cd3cf62c1798" xml:space="preserve">
          <source><bpt id="33f1c5b8-c91b-40ff-b3e8-cc16e2e758e0">&lt;strong&gt;</bpt>Common Variables<ept id="33f1c5b8-c91b-40ff-b3e8-cc16e2e758e0">&lt;/strong&gt;</ept> :  
<bpt id="4e6408f4-d37e-400a-b4ea-03c55295bf9f">&lt;code&gt;</bpt>$VMName<ept id="4e6408f4-d37e-400a-b4ea-03c55295bf9f">&lt;/code&gt;</ept> -- this is a string with the VMName.</source>
          <target state="new"><bpt id="33f1c5b8-c91b-40ff-b3e8-cc16e2e758e0">&lt;strong&gt;</bpt>Common Variables<ept id="33f1c5b8-c91b-40ff-b3e8-cc16e2e758e0">&lt;/strong&gt;</ept> :  
<bpt id="4e6408f4-d37e-400a-b4ea-03c55295bf9f">&lt;code&gt;</bpt>$VMName<ept id="4e6408f4-d37e-400a-b4ea-03c55295bf9f">&lt;/code&gt;</ept> -- this is a string with the VMName.</target>
        </trans-unit>
        <trans-unit id="fcba8a8b-5570-40e1-a604-681ebc837ed6" xml:space="preserve">
          <source>See a list of available VMs with <bpt id="952c2142-f1d5-46e8-979c-2a7e140efc0b">&lt;code&gt;</bpt>Get-VM<ept id="952c2142-f1d5-46e8-979c-2a7e140efc0b">&lt;/code&gt;</ept>  
<bpt id="e6722d97-674b-4fa7-9ddc-711bac360149">&lt;code&gt;</bpt>$cred<ept id="e6722d97-674b-4fa7-9ddc-711bac360149">&lt;/code&gt;</ept> -- Credential for the guest OS.</source>
          <target state="new">See a list of available VMs with <bpt id="952c2142-f1d5-46e8-979c-2a7e140efc0b">&lt;code&gt;</bpt>Get-VM<ept id="952c2142-f1d5-46e8-979c-2a7e140efc0b">&lt;/code&gt;</ept>  
<bpt id="e6722d97-674b-4fa7-9ddc-711bac360149">&lt;code&gt;</bpt>$cred<ept id="e6722d97-674b-4fa7-9ddc-711bac360149">&lt;/code&gt;</ept> -- Credential for the guest OS.</target>
        </trans-unit>
        <trans-unit id="a75cbe4d-16ec-4c57-9db1-91d0c12abe02" xml:space="preserve">
          <source>Can be populated using <bpt id="cc40f2b3-bd9d-49cc-ba9f-f54ba811e787">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="cc40f2b3-bd9d-49cc-ba9f-f54ba811e787">&lt;/code&gt;</ept></source>
          <target state="new">Can be populated using <bpt id="cc40f2b3-bd9d-49cc-ba9f-f54ba811e787">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="cc40f2b3-bd9d-49cc-ba9f-f54ba811e787">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="fb8df3bf-ea51-48a3-adbf-50d0e5a93d59" xml:space="preserve">
          <source>Check if the guest has booted</source>
          <target state="new">Check if the guest has booted</target>
        </trans-unit>
        <trans-unit id="7c2f8f8e-d251-472b-b468-2b5fb9346fcb" xml:space="preserve">
          <source>Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</source>
          <target state="new">Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</target>
        </trans-unit>
        <trans-unit id="9d774e4b-5588-4bf9-b6f6-6c12e55773a4" xml:space="preserve">
          <source>Use this command to check whether the guest has booted.</source>
          <target state="new">Use this command to check whether the guest has booted.</target>
        </trans-unit>
        <trans-unit id="86335cff-88ee-4a58-a5cc-8395ed52871b" xml:space="preserve">
          <source><bpt id="84c42092-1667-4b99-9c9d-baee82e6fb94">&lt;strong&gt;</bpt>Outcome<ept id="84c42092-1667-4b99-9c9d-baee82e6fb94">&lt;/strong&gt;</ept>  
Prints a friendly message declaring the state of the guest OS.</source>
          <target state="new"><bpt id="84c42092-1667-4b99-9c9d-baee82e6fb94">&lt;strong&gt;</bpt>Outcome<ept id="84c42092-1667-4b99-9c9d-baee82e6fb94">&lt;/strong&gt;</ept>  
Prints a friendly message declaring the state of the guest OS.</target>
        </trans-unit>
        <trans-unit id="7eb54ea7-ef96-460b-b089-a2f40b6d4713" xml:space="preserve">
          <source>Script locking until the guest has booted</source>
          <target state="new">Script locking until the guest has booted</target>
        </trans-unit>
        <trans-unit id="8d03e999-ca4e-4f8c-902a-89de00d37d27" xml:space="preserve">
          <source>The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</source>
          <target state="new">The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</target>
        </trans-unit>
        <trans-unit id="4d09763c-e341-40e2-8b61-2f7d2e4932dd" xml:space="preserve">
          <source><bpt id="1b14998b-4ea8-40c6-87c1-5e0eeef91a2f">&lt;strong&gt;</bpt>Outcome<ept id="1b14998b-4ea8-40c6-87c1-5e0eeef91a2f">&lt;/strong&gt;</ept>  
Prints a friendly message and locks until the connection to the VM succeeds.</source>
          <target state="new"><bpt id="1b14998b-4ea8-40c6-87c1-5e0eeef91a2f">&lt;strong&gt;</bpt>Outcome<ept id="1b14998b-4ea8-40c6-87c1-5e0eeef91a2f">&lt;/strong&gt;</ept>  
Prints a friendly message and locks until the connection to the VM succeeds.</target>
        </trans-unit>
        <trans-unit id="a454e1c0-059e-456b-9d82-1d407f097d49" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="70944137-d1cd-41a4-8135-88fb128261c6" xml:space="preserve">
          <source>Script locking until the guest has a network</source>
          <target state="new">Script locking until the guest has a network</target>
        </trans-unit>
        <trans-unit id="4ca273f9-0390-46c8-8860-11e1e87e3cbf" xml:space="preserve">
          <source>With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</source>
          <target state="new">With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</target>
        </trans-unit>
        <trans-unit id="0dacba2c-01b0-4f91-a10c-af70231427f5" xml:space="preserve">
          <source><bpt id="a5181327-9955-4b45-8ecb-de900532cc2d">&lt;em&gt;</bpt>* Outcome *<ept id="a5181327-9955-4b45-8ecb-de900532cc2d">&lt;/em&gt;</ept>
Locks until a DHCP lease is recieved.</source>
          <target state="new"><bpt id="a5181327-9955-4b45-8ecb-de900532cc2d">&lt;em&gt;</bpt>* Outcome *<ept id="a5181327-9955-4b45-8ecb-de900532cc2d">&lt;/em&gt;</ept>
Locks until a DHCP lease is recieved.</target>
        </trans-unit>
        <trans-unit id="007cf96e-9b77-4e91-a4f2-dd3e1ec47441" xml:space="preserve">
          <source>Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</source>
          <target state="new">Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</target>
        </trans-unit>
        <trans-unit id="2eb57ca9-d3c1-45e0-abdb-4ba3f06f8532" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="650f8be5-1946-48cf-8159-23245cf970d8" xml:space="preserve">
          <source>Managing credentials with PowerShell</source>
          <target state="new">Managing credentials with PowerShell</target>
        </trans-unit>
        <trans-unit id="570f58ae-5d0d-455d-a05d-44dba5754c0d" xml:space="preserve">
          <source>Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</source>
          <target state="new">Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</target>
        </trans-unit>
        <trans-unit id="1f217055-305b-4f83-9bfd-69cda511ba31" xml:space="preserve">
          <source>There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</source>
          <target state="new">There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</target>
        </trans-unit>
        <trans-unit id="f771652f-177c-4e93-8d8f-0e6cf90181a3" xml:space="preserve">
          <source>The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</source>
          <target state="new">The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</target>
        </trans-unit>
        <trans-unit id="be827ff1-0dc9-4e4c-a8c4-ac94e2c255b4" xml:space="preserve">
          <source>This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</source>
          <target state="new">This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</target>
        </trans-unit>
        <trans-unit id="fa64503c-9a94-45fc-868e-dc28e9422a74" xml:space="preserve">
          <source>In this scenario you can just run <bpt id="1251de76-f467-44ae-bf6f-4f9f60b581b8">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="1251de76-f467-44ae-bf6f-4f9f60b581b8">&lt;/code&gt;</ept>.</source>
          <target state="new">In this scenario you can just run <bpt id="1251de76-f467-44ae-bf6f-4f9f60b581b8">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="1251de76-f467-44ae-bf6f-4f9f60b581b8">&lt;/code&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="8803da5e-2a39-45dc-9ecc-74869d8dbac4" xml:space="preserve">
          <source>Let PowerShell prompt you for credentials  
If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</source>
          <target state="new">Let PowerShell prompt you for credentials  
If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</target>
        </trans-unit>
        <trans-unit id="65c2c36a-e739-4c04-b45f-11bc9b8a5141" xml:space="preserve">
          <source>Store credentials in a variable for reuse.</source>
          <target state="new">Store credentials in a variable for reuse.</target>
        </trans-unit>
        <trans-unit id="6bb38620-eec1-47f9-9e8b-335c0c44ecd7" xml:space="preserve">
          <source>Running a simple command like this:</source>
          <target state="new">Running a simple command like this:</target>
        </trans-unit>
        <trans-unit id="ec44a44e-4083-4368-8d23-f34afa0ec045" xml:space="preserve">
          <source>  And then running something like this:</source>
          <target state="new">  And then running something like this:</target>
        </trans-unit>
        <trans-unit id="e8a40998-2a17-4f53-ae56-4003a56dee3e" xml:space="preserve">
          <source>  Will mean that you only get prompted once per script/PowerShell session for your credentials.</source>
          <target state="new">  Will mean that you only get prompted once per script/PowerShell session for your credentials.</target>
        </trans-unit>
        <trans-unit id="cdf5833f-02ca-4a6a-ab2a-2fee34fe37ee" xml:space="preserve">
          <source>Code your credentials into your scripts.</source>
          <target state="new">Code your credentials into your scripts.</target>
        </trans-unit>
        <trans-unit id="df37399f-975d-4a62-a486-c011c2dead95" xml:space="preserve">
          <source><bpt id="7afacf12-9054-45cc-9400-c9f4d05650c3">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="7afacf12-9054-45cc-9400-c9f4d05650c3">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="7afacf12-9054-45cc-9400-c9f4d05650c3">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="7afacf12-9054-45cc-9400-c9f4d05650c3">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="198f3a37-e91c-46f7-9926-81e0a6823372" xml:space="preserve">
          <source>Warning:  _Do not do this in a production system.</source>
          <target state="new">Warning:  _Do not do this in a production system.</target>
        </trans-unit>
        <trans-unit id="1d109e3e-9d70-4a5b-ad2f-ccff6ceaf50e" xml:space="preserve">
          <source>Do not do this with real passwords._</source>
          <target state="new">Do not do this with real passwords._</target>
        </trans-unit>
        <trans-unit id="9902dfd8-55ed-4013-b46f-69d0f5b36e0e" xml:space="preserve">
          <source>You can hand craft a PSCredential object with some code like this:</source>
          <target state="new">You can hand craft a PSCredential object with some code like this:</target>
        </trans-unit>
        <trans-unit id="dfd1b686-2673-48b6-baf6-ae179069966d" xml:space="preserve">
          <source>Grossly insecure - but useful for testing.</source>
          <target state="new">Grossly insecure - but useful for testing.</target>
        </trans-unit>
        <trans-unit id="60c6395b-3e03-4177-8f02-ac8cab5f596e" xml:space="preserve">
          <source>Now you get no prompts at all in this session.</source>
          <target state="new">Now you get no prompts at all in this session.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>