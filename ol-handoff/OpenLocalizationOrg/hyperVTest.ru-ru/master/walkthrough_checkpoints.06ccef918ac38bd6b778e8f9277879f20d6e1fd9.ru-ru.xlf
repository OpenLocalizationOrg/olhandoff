<?xml version="1.0" encoding="utf-8"?>
<xliff srcLang="en-US" trgLang="ru-ru" version="2.0" xmlns="urn:oasis:names:tc:xliff:document:2.0" xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">5d6cb109a4da839670b5e2f494a8d7302baa4e2e</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source xml:space="preserve">ms.ContentId: FBBAADE6-F1A1-4B5C-8FD2-BDCA3FCF81CA</source>
          <target xml:space="preserve">ms.ContentId: FBBAADE6-F1A1-4B5C-8FD2-BDCA3FCF81CA</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source xml:space="preserve">title: Step 6: Experiment with checkpoints</source>
          <target xml:space="preserve">title: Step 6: Experiment with checkpoints</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source xml:space="preserve">Step 6: Experiment with checkpoints</source>
          <target xml:space="preserve">Step 6: Experiment with checkpoints</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source xml:space="preserve">23-Nov update, Part3.</source>
          <target xml:space="preserve">23-Nov update, Part3.</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source xml:space="preserve">Checkpoints are a helpful tool when you want to save the present state of a virtual machine before making a change such as applying an update, installing software, or changing a setting.</source>
          <target xml:space="preserve">Checkpoints are a helpful tool when you want to save the present state of a virtual machine before making a change such as applying an update, installing software, or changing a setting.</target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source xml:space="preserve">If the change causes issues, you can restore the checkpoint and go back.</source>
          <target xml:space="preserve">If the change causes issues, you can restore the checkpoint and go back.</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source xml:space="preserve">There are two types of checkpoints:</source>
          <target xml:space="preserve">There are two types of checkpoints:</target>
        </segment>
      </unit>
      <unit id="108">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Production checkpoints</pc>: Used mainly on servers in production environments.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Production checkpoints</pc>: Used mainly on servers in production environments.</target>
        </segment>
      </unit>
      <unit id="109">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Standard checkpoints</pc>: Used in development or testing environments</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Standard checkpoints</pc>: Used in development or testing environments</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source xml:space="preserve">Production checkpoints are the default for Hyper-V on Windows 10.</source>
          <target xml:space="preserve">Production checkpoints are the default for Hyper-V on Windows 10.</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source xml:space="preserve">Change the checkpoint type</source>
          <target xml:space="preserve">Change the checkpoint type</target>
        </segment>
      </unit>
      <unit id="112">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">We'll start by trying out the older style of checkpoints, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">standard checkpoints</pc>.</source>
          <target xml:space="preserve">We'll start by trying out the older style of checkpoints, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">standard checkpoints</pc>.</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source xml:space="preserve">Since production checkpoints are the default, we need to go into the settings for the VM and change the checkpoint type.</source>
          <target xml:space="preserve">Since production checkpoints are the default, we need to go into the settings for the VM and change the checkpoint type.</target>
        </segment>
      </unit>
      <unit id="114">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Right-click on <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows Walkthrough VM</pc> and select <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Settings</pc>.</source>
          <target xml:space="preserve">Right-click on <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows Walkthrough VM</pc> and select <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Settings</pc>.</target>
        </segment>
      </unit>
      <unit id="115">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Management</pc> section, select <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Checkpoints</pc>.</source>
          <target xml:space="preserve">In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Management</pc> section, select <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Checkpoints</pc>.</target>
        </segment>
      </unit>
      <unit id="116">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Select <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Standard checkpoints</pc>.</source>
          <target xml:space="preserve">Select <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Standard checkpoints</pc>.</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source xml:space="preserve">The dialog should look like this:</source>
          <target xml:space="preserve">The dialog should look like this:</target>
        </segment>
      </unit>
      <unit id="118">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">OK</pc> to close the dialog box.</source>
          <target xml:space="preserve">Click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">OK</pc> to close the dialog box.</target>
        </segment>
      </unit>
      <unit id="119">
        <segment state="initial">
          <source xml:space="preserve">Open Notepad to test checkpoints</source>
          <target xml:space="preserve">Open Notepad to test checkpoints</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source xml:space="preserve">In order to see what happens with each type of checkpoint, we'll run an application in the VM.</source>
          <target xml:space="preserve">In order to see what happens with each type of checkpoint, we'll run an application in the VM.</target>
        </segment>
      </unit>
      <unit id="121">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Right-click on <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows Walkthrough VM</pc> and select <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Connect</pc>.</source>
          <target xml:space="preserve">Right-click on <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows Walkthrough VM</pc> and select <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Connect</pc>.</target>
        </segment>
      </unit>
      <unit id="122">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">In the virtual machine, open <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Notepad</pc> by clicking on the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Start</pc> menu and typing <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Notepad</pc> and then select it from the results.</source>
          <target xml:space="preserve">In the virtual machine, open <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Notepad</pc> by clicking on the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Start</pc> menu and typing <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Notepad</pc> and then select it from the results.</target>
        </segment>
      </unit>
      <unit id="123">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">In Notepad, type <pc dataRefEnd="id2" dataRefStart="id1" id="p1">This is a test of checkpoints.</pc></source>
          <target xml:space="preserve">In Notepad, type <pc dataRefEnd="id2" dataRefStart="id1" id="p1">This is a test of checkpoints.</pc></target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source xml:space="preserve">The file should look like this:</source>
          <target xml:space="preserve">The file should look like this:</target>
        </segment>
      </unit>
      <unit id="125">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Save the file as <pc dataRefEnd="id2" dataRefStart="id1" id="p1">test.txt</pc>, but don't close Notepad.</source>
          <target xml:space="preserve">Save the file as <pc dataRefEnd="id2" dataRefStart="id1" id="p1">test.txt</pc>, but don't close Notepad.</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source xml:space="preserve">Leave it running in the virtual machine.</source>
          <target xml:space="preserve">Leave it running in the virtual machine.</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source xml:space="preserve">Create a standard checkpoint</source>
          <target xml:space="preserve">Create a standard checkpoint</target>
        </segment>
      </unit>
      <unit id="128">
        <originalData>
          <data id="id1">![](media/checkpoint_button.png)</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To create the checkpoint, click on the <ph dataRef="id1" id="ph1" /> <pc dataRefEnd="id3" dataRefStart="id2" id="p1">Checkpoint</pc> button in the menu bar.</source>
          <target xml:space="preserve">To create the checkpoint, click on the <ph dataRef="id1" id="ph1" /> <pc dataRefEnd="id3" dataRefStart="id2" id="p1">Checkpoint</pc> button in the menu bar.</target>
        </segment>
      </unit>
      <unit id="129">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">In the checkpoint name dialog, type <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Standard</pc>.</source>
          <target xml:space="preserve">In the checkpoint name dialog, type <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Standard</pc>.</target>
        </segment>
      </unit>
      <unit id="130">
        <segment state="initial">
          <source xml:space="preserve">The dialog should look like this:</source>
          <target xml:space="preserve">The dialog should look like this:</target>
        </segment>
      </unit>
      <unit id="131">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">When the process is complete, the checkpoint will appear under <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Checkpoints</pc> in the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Hyper-V Manager</pc>.</source>
          <target xml:space="preserve">When the process is complete, the checkpoint will appear under <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Checkpoints</pc> in the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Hyper-V Manager</pc>.</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source xml:space="preserve">Create a production checkpoint</source>
          <target xml:space="preserve">Create a production checkpoint</target>
        </segment>
      </unit>
      <unit id="133">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Now, we need to change change the type of checkpoint that we want to take back to <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Production checkpoints</pc> before taking a second checkpoint.</source>
          <target xml:space="preserve">Now, we need to change change the type of checkpoint that we want to take back to <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Production checkpoints</pc> before taking a second checkpoint.</target>
        </segment>
      </unit>
      <unit id="134">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Right-click the virtual machine, and click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Settings</pc>.</source>
          <target xml:space="preserve">Right-click the virtual machine, and click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Settings</pc>.</target>
        </segment>
      </unit>
      <unit id="135">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Management</pc> section, select <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Checkpoints</pc>.</source>
          <target xml:space="preserve">In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Management</pc> section, select <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Checkpoints</pc>.</target>
        </segment>
      </unit>
      <unit id="136">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Select <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Production checkpoints</pc>.</source>
          <target xml:space="preserve">Select <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Production checkpoints</pc>.</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source xml:space="preserve">Clear the fall-back option.</source>
          <target xml:space="preserve">Clear the fall-back option.</target>
        </segment>
      </unit>
      <unit id="138">
        <segment state="initial">
          <source xml:space="preserve">If the system can't take a production checkpoint, we want it to fail instead of taking a standard checkpoint.</source>
          <target xml:space="preserve">If the system can't take a production checkpoint, we want it to fail instead of taking a standard checkpoint.</target>
        </segment>
      </unit>
      <unit id="139">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">OK</pc> to close the dialog box.</source>
          <target xml:space="preserve">click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">OK</pc> to close the dialog box.</target>
        </segment>
      </unit>
      <unit id="140">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Right-click on the VM again and select <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Connect</pc>.</source>
          <target xml:space="preserve">Right-click on the VM again and select <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Connect</pc>.</target>
        </segment>
      </unit>
      <unit id="141">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">In Notepad in the VM, type another line that reads <pc dataRefEnd="id2" dataRefStart="id1" id="p1">This is a test of a production checkpoint</pc> and save the file again.</source>
          <target xml:space="preserve">In Notepad in the VM, type another line that reads <pc dataRefEnd="id2" dataRefStart="id1" id="p1">This is a test of a production checkpoint</pc> and save the file again.</target>
        </segment>
      </unit>
      <unit id="142">
        <originalData>
          <data id="id1">![](media/checkpoint_button.png)</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Click on the <ph dataRef="id1" id="ph1" /> <pc dataRefEnd="id3" dataRefStart="id2" id="p1">Checkpoint</pc> button in the menu bar.</source>
          <target xml:space="preserve">Click on the <ph dataRef="id1" id="ph1" /> <pc dataRefEnd="id3" dataRefStart="id2" id="p1">Checkpoint</pc> button in the menu bar.</target>
        </segment>
      </unit>
      <unit id="143">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">When asked, name it <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Production</pc> and then click <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Yes</pc>.</source>
          <target xml:space="preserve">When asked, name it <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Production</pc> and then click <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Yes</pc>.</target>
        </segment>
      </unit>
      <unit id="144">
        <segment state="initial">
          <source xml:space="preserve">Close VMConnect.</source>
          <target xml:space="preserve">Close VMConnect.</target>
        </segment>
      </unit>
      <unit id="145">
        <segment state="initial">
          <source xml:space="preserve">The VM will continue running, you just won't be connected to it anymore.</source>
          <target xml:space="preserve">The VM will continue running, you just won't be connected to it anymore.</target>
        </segment>
      </unit>
      <unit id="146">
        <segment state="initial">
          <source xml:space="preserve">In Hyper-V manager, your list of checkpoints will now look like this:</source>
          <target xml:space="preserve">In Hyper-V manager, your list of checkpoints will now look like this:</target>
        </segment>
      </unit>
      <unit id="147">
        <segment state="initial">
          <source xml:space="preserve">Apply the standard checkpoint</source>
          <target xml:space="preserve">Apply the standard checkpoint</target>
        </segment>
      </unit>
      <unit id="148">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">In <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Hyper-V Manager</pc>, in the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Checkpoints</pc> section, right-click the one titled <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Standard</pc> and click <pc dataRefEnd="id8" dataRefStart="id7" id="p4">Apply</pc>.</source>
          <target xml:space="preserve">In <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Hyper-V Manager</pc>, in the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Checkpoints</pc> section, right-click the one titled <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Standard</pc> and click <pc dataRefEnd="id8" dataRefStart="id7" id="p4">Apply</pc>.</target>
        </segment>
      </unit>
      <unit id="149">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">In the pop-up dialog, click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Create Checkpoint and Apply</pc>.</source>
          <target xml:space="preserve">In the pop-up dialog, click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Create Checkpoint and Apply</pc>.</target>
        </segment>
      </unit>
      <unit id="150">
        <segment state="initial">
          <source xml:space="preserve">When the finished, your list of checkpoints will now look something like this:</source>
          <target xml:space="preserve">When the finished, your list of checkpoints will now look something like this:</target>
        </segment>
      </unit>
      <unit id="151">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">When this finishes, right-click the VM and the click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Connect</pc> to connect to the VM.</source>
          <target xml:space="preserve">When this finishes, right-click the VM and the click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Connect</pc> to connect to the VM.</target>
        </segment>
      </unit>
      <unit id="152">
        <segment state="initial">
          <source xml:space="preserve">When you connect to the VM, the VM should be running, with Notepad open, but the line about production checkpoints will be missing:</source>
          <target xml:space="preserve">When you connect to the VM, the VM should be running, with Notepad open, but the line about production checkpoints will be missing:</target>
        </segment>
      </unit>
      <unit id="153">
        <segment state="initial">
          <source xml:space="preserve">Close VMConnect, but leave the VM running.</source>
          <target xml:space="preserve">Close VMConnect, but leave the VM running.</target>
        </segment>
      </unit>
      <unit id="154">
        <segment state="initial">
          <source xml:space="preserve">Apply the production checkpoint</source>
          <target xml:space="preserve">Apply the production checkpoint</target>
        </segment>
      </unit>
      <unit id="155">
        <segment state="initial">
          <source xml:space="preserve">Now, let's go back to Hyper-V manager and apply the production checkpoint and see how our VM looks afterwards.</source>
          <target xml:space="preserve">Now, let's go back to Hyper-V manager and apply the production checkpoint and see how our VM looks afterwards.</target>
        </segment>
      </unit>
      <unit id="156">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">In the Checkpoints section, right-click the one titled <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Production Checkpoint</pc> and click <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Apply</pc>.</source>
          <target xml:space="preserve">In the Checkpoints section, right-click the one titled <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Production Checkpoint</pc> and click <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Apply</pc>.</target>
        </segment>
      </unit>
      <unit id="157">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">In the pop-up dialog, pick <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Create Checkpoint and Apply</pc>.</source>
          <target xml:space="preserve">In the pop-up dialog, pick <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Create Checkpoint and Apply</pc>.</target>
        </segment>
      </unit>
      <unit id="158">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">When this finishes, right-click the VM and the click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Connect</pc> to launch the VM.</source>
          <target xml:space="preserve">When this finishes, right-click the VM and the click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Connect</pc> to launch the VM.</target>
        </segment>
      </unit>
      <unit id="159">
        <segment state="initial">
          <source xml:space="preserve">You'll notice that the VM is not running.</source>
          <target xml:space="preserve">You'll notice that the VM is not running.</target>
        </segment>
      </unit>
      <unit id="160">
        <originalData>
          <data id="id1">![](media/start.png)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Click on the <ph dataRef="id1" id="ph1" /> Start button in the menu bar to start the VM.</source>
          <target xml:space="preserve">Click on the <ph dataRef="id1" id="ph1" /> Start button in the menu bar to start the VM.</target>
        </segment>
      </unit>
      <unit id="161">
        <segment state="initial">
          <source xml:space="preserve">Open open test.txt in Notepad.</source>
          <target xml:space="preserve">Open open test.txt in Notepad.</target>
        </segment>
      </unit>
      <unit id="162">
        <segment state="initial">
          <source xml:space="preserve">You should see the line in the file about testing production checkpoints:</source>
          <target xml:space="preserve">You should see the line in the file about testing production checkpoints:</target>
        </segment>
      </unit>
      <unit id="163">
        <segment state="initial">
          <source xml:space="preserve">Rename a checkpoint</source>
          <target xml:space="preserve">Rename a checkpoint</target>
        </segment>
      </unit>
      <unit id="164">
        <segment state="initial">
          <source xml:space="preserve">Right-click the last checkpoint in the tree and click Rename.</source>
          <target xml:space="preserve">Right-click the last checkpoint in the tree and click Rename.</target>
        </segment>
      </unit>
      <unit id="165">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Name the checkpoint <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Delete me</pc>.</source>
          <target xml:space="preserve">Name the checkpoint <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Delete me</pc>.</target>
        </segment>
      </unit>
      <unit id="166">
        <segment state="initial">
          <source xml:space="preserve">Delete a checkpoint</source>
          <target xml:space="preserve">Delete a checkpoint</target>
        </segment>
      </unit>
      <unit id="167">
        <segment state="initial">
          <source xml:space="preserve">The previous step has probably given you a hint about what we'll do next.</source>
          <target xml:space="preserve">The previous step has probably given you a hint about what we'll do next.</target>
        </segment>
      </unit>
      <unit id="168">
        <segment state="initial">
          <source xml:space="preserve">We are going to delete the checkpoint that you just renamed.</source>
          <target xml:space="preserve">We are going to delete the checkpoint that you just renamed.</target>
        </segment>
      </unit>
      <unit id="169">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Right-click on the checkpoint named <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Delete me</pc> and click <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Delete checkpoint</pc>.</source>
          <target xml:space="preserve">Right-click on the checkpoint named <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Delete me</pc> and click <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Delete checkpoint</pc>.</target>
        </segment>
      </unit>
      <unit id="170">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">In the warning dialog, click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Delete</pc>.</source>
          <target xml:space="preserve">In the warning dialog, click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Delete</pc>.</target>
        </segment>
      </unit>
      <unit id="171">
        <segment state="initial">
          <source xml:space="preserve">After the checkpoint is deleted, your list should look something like this:</source>
          <target xml:space="preserve">After the checkpoint is deleted, your list should look something like this:</target>
        </segment>
      </unit>
      <unit id="172">
        <segment state="initial">
          <source xml:space="preserve">Next Step:</source>
          <target xml:space="preserve">Next Step:</target>
        </segment>
      </unit>
      <unit id="173">
        <segment state="initial">
          <source xml:space="preserve">Step 7: Export and import a virtual machine</source>
          <target xml:space="preserve">Step 7: Export and import a virtual machine</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>