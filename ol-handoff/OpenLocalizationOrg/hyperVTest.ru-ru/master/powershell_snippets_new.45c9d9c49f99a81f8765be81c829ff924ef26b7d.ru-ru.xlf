<?xml version="1.0" encoding="utf-8"?>
<xliff srcLang="en-US" trgLang="ru-ru" version="2.0" xmlns="urn:oasis:names:tc:xliff:document:2.0" xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">68665870f66743f7cfd49c1e19a5707b380dc7dd</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source xml:space="preserve">More about Azure AD Connect credentials and permissions</source>
          <target xml:space="preserve">More about Azure AD Connect credentials and permissions</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source xml:space="preserve">Custom settings description of Azure AD Connect credentials and permissions.</source>
          <target xml:space="preserve">Custom settings description of Azure AD Connect credentials and permissions.</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source xml:space="preserve">ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9</source>
          <target xml:space="preserve">ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source xml:space="preserve">title: PowerShell Snippets</source>
          <target xml:space="preserve">title: PowerShell Snippets</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source xml:space="preserve">PowerShell Snippets</source>
          <target xml:space="preserve">PowerShell Snippets</target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source xml:space="preserve">22-Feb for demo.Adding this sentence to validate the bug 451132 result.</source>
          <target xml:space="preserve">22-Feb for demo.Adding this sentence to validate the bug 451132 result.</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source xml:space="preserve">PowerShell is an awesome scripting, automation, and management tool for Hyper-V.</source>
          <target xml:space="preserve">PowerShell is an awesome scripting, automation, and management tool for Hyper-V.</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source xml:space="preserve">Here is a toolbox for exploring some of the cool things it can do!</source>
          <target xml:space="preserve">Here is a toolbox for exploring some of the cool things it can do!</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source xml:space="preserve">All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</source>
          <target xml:space="preserve">All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</target>
        </segment>
      </unit>
      <unit id="110">
        <originalData>
          <data id="id1">`Get-VM`</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">If you aren't sure if you have the right permissions, type <ph dataRef="id1" id="ph1" /> and if it runs with no errors, you're ready to go.</source>
          <target xml:space="preserve">If you aren't sure if you have the right permissions, type <ph dataRef="id1" id="ph1" /> and if it runs with no errors, you're ready to go.</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source xml:space="preserve">PowerShell Direct tools</source>
          <target xml:space="preserve">PowerShell Direct tools</target>
        </segment>
      </unit>
      <unit id="112">
        <segment state="initial">
          <source xml:space="preserve">All of the scripts and snippets in this section will rely on the following basics.</source>
          <target xml:space="preserve">All of the scripts and snippets in this section will rely on the following basics.</target>
        </segment>
      </unit>
      <unit id="113">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Requirements</pc> :</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Requirements</pc> :</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source xml:space="preserve">PowerShell Direct.</source>
          <target xml:space="preserve">PowerShell Direct.</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source xml:space="preserve">Windows 10 guest and host OS.</source>
          <target xml:space="preserve">Windows 10 guest and host OS.</target>
        </segment>
      </unit>
      <unit id="116">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Common Variables</pc> :</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Common Variables</pc> :</target>
        </segment>
      </unit>
      <unit id="117">
        <originalData>
          <data id="id1">`$VMName`</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<ph dataRef="id1" id="ph1" /> -- this is a string with the VMName.</source>
          <target xml:space="preserve">
						<ph dataRef="id1" id="ph1" /> -- this is a string with the VMName.</target>
        </segment>
      </unit>
      <unit id="118">
        <originalData>
          <data id="id1">`Get-VM`</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">See a list of available VMs with <ph dataRef="id1" id="ph1" /></source>
          <target xml:space="preserve">See a list of available VMs with <ph dataRef="id1" id="ph1" /></target>
        </segment>
      </unit>
      <unit id="119">
        <originalData>
          <data id="id1">`$cred`</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<ph dataRef="id1" id="ph1" /> -- Credential for the guest OS.</source>
          <target xml:space="preserve">
						<ph dataRef="id1" id="ph1" /> -- Credential for the guest OS.</target>
        </segment>
      </unit>
      <unit id="120">
        <originalData>
          <data id="id1">`$cred = Get-Credential`</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Can be populated using <ph dataRef="id1" id="ph1" /></source>
          <target xml:space="preserve">Can be populated using <ph dataRef="id1" id="ph1" /></target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source xml:space="preserve">Check if the guest has booted</source>
          <target xml:space="preserve">Check if the guest has booted</target>
        </segment>
      </unit>
      <unit id="122">
        <segment state="initial">
          <source xml:space="preserve">Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</source>
          <target xml:space="preserve">Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source xml:space="preserve">Use this command to check whether the guest has booted.</source>
          <target xml:space="preserve">Use this command to check whether the guest has booted.</target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source xml:space="preserve">Outcome</source>
          <target xml:space="preserve">Outcome</target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source xml:space="preserve">Prints a friendly message declaring the state of the guest OS.</source>
          <target xml:space="preserve">Prints a friendly message declaring the state of the guest OS.</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source xml:space="preserve">Script locking until the guest has booted</source>
          <target xml:space="preserve">Script locking until the guest has booted</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source xml:space="preserve">The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</source>
          <target xml:space="preserve">The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source xml:space="preserve">Outcome</source>
          <target xml:space="preserve">Outcome</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source xml:space="preserve">Prints a friendly message and locks until the connection to the VM succeeds.</source>
          <target xml:space="preserve">Prints a friendly message and locks until the connection to the VM succeeds.</target>
        </segment>
      </unit>
      <unit id="130">
        <segment state="initial">
          <source xml:space="preserve">Succeeds silently.</source>
          <target xml:space="preserve">Succeeds silently.</target>
        </segment>
      </unit>
      <unit id="131">
        <segment state="initial">
          <source xml:space="preserve">Script locking until the guest has a network</source>
          <target xml:space="preserve">Script locking until the guest has a network</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source xml:space="preserve">With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</source>
          <target xml:space="preserve">With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source xml:space="preserve">** Outcome **</source>
          <target xml:space="preserve">** Outcome **</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source xml:space="preserve">Locks until a DHCP lease is recieved.</source>
          <target xml:space="preserve">Locks until a DHCP lease is recieved.</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source xml:space="preserve">Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</source>
          <target xml:space="preserve">Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</target>
        </segment>
      </unit>
      <unit id="136">
        <segment state="initial">
          <source xml:space="preserve">Succeeds silently.</source>
          <target xml:space="preserve">Succeeds silently.</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source xml:space="preserve">Managing credentials with PowerShell</source>
          <target xml:space="preserve">Managing credentials with PowerShell</target>
        </segment>
      </unit>
      <unit id="138">
        <segment state="initial">
          <source xml:space="preserve">Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</source>
          <target xml:space="preserve">Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source xml:space="preserve">There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</source>
          <target xml:space="preserve">There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</target>
        </segment>
      </unit>
      <unit id="140">
        <segment state="initial">
          <source xml:space="preserve">The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</source>
          <target xml:space="preserve">The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source xml:space="preserve">This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</source>
          <target xml:space="preserve">This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</target>
        </segment>
      </unit>
      <unit id="142">
        <originalData>
          <data id="id1">`Invoke-Command -VMName "test" {get-process}`</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">In this scenario you can just run <ph dataRef="id1" id="ph1" />.</source>
          <target xml:space="preserve">In this scenario you can just run <ph dataRef="id1" id="ph1" />.</target>
        </segment>
      </unit>
      <unit id="143">
        <segment state="initial">
          <source xml:space="preserve">Let PowerShell prompt you for credentials</source>
          <target xml:space="preserve">Let PowerShell prompt you for credentials</target>
        </segment>
      </unit>
      <unit id="144">
        <segment state="initial">
          <source xml:space="preserve">If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</source>
          <target xml:space="preserve">If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</target>
        </segment>
      </unit>
      <unit id="145">
        <segment state="initial">
          <source xml:space="preserve">Store credentials in a variable for reuse.</source>
          <target xml:space="preserve">Store credentials in a variable for reuse.</target>
        </segment>
      </unit>
      <unit id="146">
        <segment state="initial">
          <source xml:space="preserve">Running a simple command like this:</source>
          <target xml:space="preserve">Running a simple command like this:</target>
        </segment>
      </unit>
      <unit id="147">
        <segment state="initial">
          <source xml:space="preserve">And then running something like this:</source>
          <target xml:space="preserve">And then running something like this:</target>
        </segment>
      </unit>
      <unit id="148">
        <segment state="initial">
          <source xml:space="preserve">Will mean that you only get prompted once per script/PowerShell session for your credentials.</source>
          <target xml:space="preserve">Will mean that you only get prompted once per script/PowerShell session for your credentials.</target>
        </segment>
      </unit>
      <unit id="149">
        <segment state="initial">
          <source xml:space="preserve">Code your credentials into your scripts.</source>
          <target xml:space="preserve">Code your credentials into your scripts.</target>
        </segment>
      </unit>
      <unit id="150">
        <segment state="initial">
          <source xml:space="preserve">Don't do this for any real workload or system</source>
          <target xml:space="preserve">Don't do this for any real workload or system</target>
        </segment>
      </unit>
      <unit id="151">
        <originalData>
          <data id="id1">_</data>
          <data id="id2">_</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Warning:  <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Do not do this in a production system.  Do not do this with real passwords.</pc></source>
          <target xml:space="preserve">Warning:  <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Do not do this in a production system.  Do not do this with real passwords.</pc></target>
        </segment>
      </unit>
      <unit id="152">
        <segment state="initial">
          <source xml:space="preserve">You can hand craft a PSCredential object with some code like this:</source>
          <target xml:space="preserve">You can hand craft a PSCredential object with some code like this:</target>
        </segment>
      </unit>
      <unit id="153">
        <segment state="initial">
          <source xml:space="preserve">Grossly insecure - but useful for testing.</source>
          <target xml:space="preserve">Grossly insecure - but useful for testing.</target>
        </segment>
      </unit>
      <unit id="154">
        <segment state="initial">
          <source xml:space="preserve">Now you get no prompts at all in this session.</source>
          <target xml:space="preserve">Now you get no prompts at all in this session.</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>