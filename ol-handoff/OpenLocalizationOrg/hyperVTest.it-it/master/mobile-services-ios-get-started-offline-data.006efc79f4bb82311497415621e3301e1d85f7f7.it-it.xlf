<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-US" target-language="it-it">
    <body>
      <group id="main" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Get Started with Offline Data Sync in Mobile Services (iOS) | Microsoft Azure</source>
          <target state="new">Get Started with Offline Data Sync in Mobile Services (iOS) | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to use Azure Mobile Services to cache and sync offline data in your iOS application</source>
          <target state="new">Learn how to use Azure Mobile Services to cache and sync offline data in your iOS application</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Get Started with Offline Data Sync in Mobile Services</source>
          <target state="new">Get Started with Offline Data Sync in Mobile Services</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>&amp;nbsp;</source>
          <target state="new">&amp;nbsp;</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Offline sync allows you to view, add, or modify data in a mobile app even when there is no network connection.</source>
          <target state="new">Offline sync allows you to view, add, or modify data in a mobile app even when there is no network connection.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>In this tutorial, you'll learn how your app can automatically store changes in a local offline database and sync those changes whenever it's back online.</source>
          <target state="new">In this tutorial, you'll learn how your app can automatically store changes in a local offline database and sync those changes whenever it's back online.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Offline sync has several advantages:</source>
          <target state="new">Offline sync has several advantages:</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Improves app responsiveness by caching server data locally on device</source>
          <target state="new">Improves app responsiveness by caching server data locally on device</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Makes apps resilient against intermittent network connectivity</source>
          <target state="new">Makes apps resilient against intermittent network connectivity</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Allows you to create and modify data even with little or no connectivity</source>
          <target state="new">Allows you to create and modify data even with little or no connectivity</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Syncs data across multiple devices</source>
          <target state="new">Syncs data across multiple devices</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Detects conflicts when same record is modified by two devices</source>
          <target state="new">Detects conflicts when same record is modified by two devices</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><ph id="ph4">[AZURE.NOTE]</ph><ph id="ph5" /> To complete this tutorial, you need an Azure account.</source>
          <target state="new"><ph id="ph4">[AZURE.NOTE]</ph><ph id="ph5" /> To complete this tutorial, you need an Azure account.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If you don't have an account, you can sign up for an Azure trial and get <bpt id="p1">[</bpt>free mobile services that you can keep using even after your trial ends<ept id="p1">](https://azure.microsoft.com/pricing/details/mobile-services/)</ept>.</source>
          <target state="new">If you don't have an account, you can sign up for an Azure trial and get <bpt id="p1">[</bpt>free mobile services that you can keep using even after your trial ends<ept id="p1">](https://azure.microsoft.com/pricing/details/mobile-services/)</ept>.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For details, see [Azure Free Trial](https://azure.microsoft.com/pricing/free-trial/?WT.mc_id=AE564AB28 target="_blank").</source>
          <target state="new">For details, see [Azure Free Trial](https://azure.microsoft.com/pricing/free-trial/?WT.mc_id=AE564AB28 target="_blank").</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This tutorial is based on the <bpt id="p2">[</bpt><ept id="p2">Mobile Services Quick Start tutorial]</ept>, which you must complete first.</source>
          <target state="new">This tutorial is based on the <bpt id="p2">[</bpt><ept id="p2">Mobile Services Quick Start tutorial]</ept>, which you must complete first.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Let's first review the code related to offline sync already in the Quick Start.</source>
          <target state="new">Let's first review the code related to offline sync already in the Quick Start.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Review Mobile Services Sync Code</source>
          <target state="new">Review Mobile Services Sync Code</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Azure Mobile Services offline sync allows end users to interact with a local database when the network is not accessible.</source>
          <target state="new">Azure Mobile Services offline sync allows end users to interact with a local database when the network is not accessible.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>To use these features in your app, you initialize the sync context of <ph id="ph6">`MSClient`</ph><ph id="ph7" /> and reference a local store.</source>
          <target state="new">To use these features in your app, you initialize the sync context of <ph id="ph6">`MSClient`</ph><ph id="ph7" /> and reference a local store.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Then reference your table through the <ph id="ph8">`MSSyncTable`</ph><ph id="ph9" /> interface.</source>
          <target state="new">Then reference your table through the <ph id="ph8">`MSSyncTable`</ph><ph id="ph9" /> interface.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>In <bpt id="p3">**</bpt>QSTodoService.m<ept id="p3">**</ept>, notice the type of member <ph id="ph10">`syncTable`</ph><ph id="ph11" /> is <ph id="ph12">`MSSyncTable`</ph>.</source>
          <target state="new">In <bpt id="p3">**</bpt>QSTodoService.m<ept id="p3">**</ept>, notice the type of member <ph id="ph10">`syncTable`</ph><ph id="ph11" /> is <ph id="ph12">`MSSyncTable`</ph>.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Offline sync uses this instead of <ph id="ph13">`MSTable`</ph>.</source>
          <target state="new">Offline sync uses this instead of <ph id="ph13">`MSTable`</ph>.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>When a sync table is used, all operations go to the local store and are synchronized with the remote service only with explicit push and pull operations.</source>
          <target state="new">When a sync table is used, all operations go to the local store and are synchronized with the remote service only with explicit push and pull operations.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>To get a reference to a sync table, use the method <ph id="ph14">`syncTableWithName`</ph>.</source>
          <target state="new">To get a reference to a sync table, use the method <ph id="ph14">`syncTableWithName`</ph>.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>To remove offline sync functionality, use <ph id="ph15">`tableWithName`</ph><ph id="ph16" /> instead.</source>
          <target state="new">To remove offline sync functionality, use <ph id="ph15">`tableWithName`</ph><ph id="ph16" /> instead.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>In <bpt id="p4">**</bpt>QSTodoService.m<ept id="p4">**</ept>, before table operations are performed, the local store is initialized in <ph id="ph17">`QSTodoService.init`</ph>:</source>
          <target state="new">In <bpt id="p4">**</bpt>QSTodoService.m<ept id="p4">**</ept>, before table operations are performed, the local store is initialized in <ph id="ph17">`QSTodoService.init`</ph>:</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This creates a local store using the <ph id="ph18">`MSCoreDataStore`</ph><ph id="ph19" /> interface.</source>
          <target state="new">This creates a local store using the <ph id="ph18">`MSCoreDataStore`</ph><ph id="ph19" /> interface.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>You may provide a different local store by implementing the <ph id="ph20">`MSSyncContextDataSource`</ph><ph id="ph21" /> protocol.</source>
          <target state="new">You may provide a different local store by implementing the <ph id="ph20">`MSSyncContextDataSource`</ph><ph id="ph21" /> protocol.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The first parameter of <ph id="ph22">`initWithDelegate`</ph><ph id="ph23" /> specifies a conflict handler, but since we've passed <ph id="ph24">`nil`</ph>, we get the default conflict handler which fails on any conflict.</source>
          <target state="new">The first parameter of <ph id="ph22">`initWithDelegate`</ph><ph id="ph23" /> specifies a conflict handler, but since we've passed <ph id="ph24">`nil`</ph>, we get the default conflict handler which fails on any conflict.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For details on how to implement a custom conflict handler, see <bpt id="p5">[</bpt><ept id="p5">Handling Conflicts with Offline Support for Mobile Services]</ept>.</source>
          <target state="new">For details on how to implement a custom conflict handler, see <bpt id="p5">[</bpt><ept id="p5">Handling Conflicts with Offline Support for Mobile Services]</ept>.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>In <bpt id="p6">**</bpt>QSTodoService.m<ept id="p6">**</ept>, <ph id="ph25">`syncData`</ph><ph id="ph26" /> first pushes new changes, and then calls <ph id="ph27">`pullData`</ph><ph id="ph28" /> to get data from the remote service.</source>
          <target state="new">In <bpt id="p6">**</bpt>QSTodoService.m<ept id="p6">**</ept>, <ph id="ph25">`syncData`</ph><ph id="ph26" /> first pushes new changes, and then calls <ph id="ph27">`pullData`</ph><ph id="ph28" /> to get data from the remote service.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>In <ph id="ph29">`syncData`</ph>, we first call <ph id="ph30">`pushWithCompletion`</ph><ph id="ph31" /> on the sync context.</source>
          <target state="new">In <ph id="ph29">`syncData`</ph>, we first call <ph id="ph30">`pushWithCompletion`</ph><ph id="ph31" /> on the sync context.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This method is a member of <ph id="ph32">`MSSyncContext`</ph><ph id="ph33" /> -- rather than the sync table itself -- because it pushes changes across all tables.</source>
          <target state="new">This method is a member of <ph id="ph32">`MSSyncContext`</ph><ph id="ph33" /> -- rather than the sync table itself -- because it pushes changes across all tables.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Only records that are modified in some way locally -- through creation, update, or delete operations -- are sent to the server.</source>
          <target state="new">Only records that are modified in some way locally -- through creation, update, or delete operations -- are sent to the server.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>At the end of <ph id="ph34">`syncData`</ph>, we call the helper <ph id="ph35">`pullData`</ph>.</source>
          <target state="new">At the end of <ph id="ph34">`syncData`</ph>, we call the helper <ph id="ph35">`pullData`</ph>.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>In this example, the push operation is not strictly necessary.</source>
          <target state="new">In this example, the push operation is not strictly necessary.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>If there are changes pending in the sync context for the table that is doing a push operation, pull always issues a push first.</source>
          <target state="new">If there are changes pending in the sync context for the table that is doing a push operation, pull always issues a push first.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>However, if you have more than one sync table, call push explicitly to have consistency across tables.</source>
          <target state="new">However, if you have more than one sync table, call push explicitly to have consistency across tables.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Next in <bpt id="p7">**</bpt>QSTodoService.m<ept id="p7">**</ept>, <ph id="ph36">`pullData`</ph><ph id="ph37" /> gets new data that matches a query.</source>
          <target state="new">Next in <bpt id="p7">**</bpt>QSTodoService.m<ept id="p7">**</ept>, <ph id="ph36">`pullData`</ph><ph id="ph37" /> gets new data that matches a query.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><ph id="ph38">`pullData`</ph><ph id="ph39" /> calls <ph id="ph40">`MSSyncTable.pullWithQuery`</ph><ph id="ph41" /> to retrieve remote data and store it locally.</source>
          <target state="new"><ph id="ph38">`pullData`</ph><ph id="ph39" /> calls <ph id="ph40">`MSSyncTable.pullWithQuery`</ph><ph id="ph41" /> to retrieve remote data and store it locally.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><ph id="ph42">`pullWithQuery`</ph><ph id="ph43" /> also allows you to specify a query to filter the records you wish to retrieve.</source>
          <target state="new"><ph id="ph42">`pullWithQuery`</ph><ph id="ph43" /> also allows you to specify a query to filter the records you wish to retrieve.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>In this example, the query just retrieves all records in the remote <ph id="ph44">`TodoItem`</ph><ph id="ph45" /> table.</source>
          <target state="new">In this example, the query just retrieves all records in the remote <ph id="ph44">`TodoItem`</ph><ph id="ph45" /> table.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The second parameter to <ph id="ph46">`pullWithQuery`</ph><ph id="ph47" /> is a query ID for <bpt id="p8">_</bpt>incremental sync<ept id="p8">_</ept>.</source>
          <target state="new">The second parameter to <ph id="ph46">`pullWithQuery`</ph><ph id="ph47" /> is a query ID for <bpt id="p8">_</bpt>incremental sync<ept id="p8">_</ept>.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Incremental sync retrieves only those records modified since the last sync, using the record's <ph id="ph48">`UpdatedAt`</ph><ph id="ph49" /> timestamp, called <ph id="ph50">`ms_updatedAt`</ph><ph id="ph51" /> in the local store.</source>
          <target state="new">Incremental sync retrieves only those records modified since the last sync, using the record's <ph id="ph48">`UpdatedAt`</ph><ph id="ph49" /> timestamp, called <ph id="ph50">`ms_updatedAt`</ph><ph id="ph51" /> in the local store.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The query ID is descriptive string that is unique for each logical query in your app.</source>
          <target state="new">The query ID is descriptive string that is unique for each logical query in your app.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>To opt-out of incremental sync, pass <ph id="ph52">`nil`</ph><ph id="ph53" /> as the query ID.</source>
          <target state="new">To opt-out of incremental sync, pass <ph id="ph52">`nil`</ph><ph id="ph53" /> as the query ID.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>This is inefficient since it will retrieve all records on every pull operation.</source>
          <target state="new">This is inefficient since it will retrieve all records on every pull operation.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><ph id="ph54">[AZURE.NOTE]</ph><ph id="ph55" /> To remove records from the device local store when they have been deleted in your mobile service database, enable <bpt id="p9">[</bpt><ept id="p9">Soft Delete]</ept>.</source>
          <target state="new"><ph id="ph54">[AZURE.NOTE]</ph><ph id="ph55" /> To remove records from the device local store when they have been deleted in your mobile service database, enable <bpt id="p9">[</bpt><ept id="p9">Soft Delete]</ept>.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Otherwise, your app should periodically call <ph id="ph56">`MSSyncTable.purgeWithQuery`</ph><ph id="ph57" /> to purge the local store.</source>
          <target state="new">Otherwise, your app should periodically call <ph id="ph56">`MSSyncTable.purgeWithQuery`</ph><ph id="ph57" /> to purge the local store.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>In <bpt id="p10">**</bpt>QSTodoService.m<ept id="p10">**</ept>, the methods <ph id="ph58">`addItem`</ph><ph id="ph59" /> and <ph id="ph60">`completeItem`</ph><ph id="ph61" /> invoke <ph id="ph62">`syncData`</ph><ph id="ph63" /> after modifying data.</source>
          <target state="new">In <bpt id="p10">**</bpt>QSTodoService.m<ept id="p10">**</ept>, the methods <ph id="ph58">`addItem`</ph><ph id="ph59" /> and <ph id="ph60">`completeItem`</ph><ph id="ph61" /> invoke <ph id="ph62">`syncData`</ph><ph id="ph63" /> after modifying data.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>In <bpt id="p11">**</bpt>QSTodoListViewController.m<ept id="p11">**</ept>, the method <ph id="ph64">`refresh`</ph><ph id="ph65" /> also invokes <ph id="ph66">`syncData`</ph><ph id="ph67" /> so that the UI displays the latest data on every refresh and at launch (<ph id="ph68">`init`</ph><ph id="ph69" /> calls <ph id="ph70">`refresh`</ph>.)</source>
          <target state="new">In <bpt id="p11">**</bpt>QSTodoListViewController.m<ept id="p11">**</ept>, the method <ph id="ph64">`refresh`</ph><ph id="ph65" /> also invokes <ph id="ph66">`syncData`</ph><ph id="ph67" /> so that the UI displays the latest data on every refresh and at launch (<ph id="ph68">`init`</ph><ph id="ph69" /> calls <ph id="ph70">`refresh`</ph>.)</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Because the app calls <ph id="ph71">`syncData`</ph><ph id="ph72" /> whenever you modify data, the app assumes you are online whenever you edit data in the app.</source>
          <target state="new">Because the app calls <ph id="ph71">`syncData`</ph><ph id="ph72" /> whenever you modify data, the app assumes you are online whenever you edit data in the app.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Review Core Data Model</source>
          <target state="new">Review Core Data Model</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>When using the Core Data offline store, you need to define particular tables and fields in your data model.</source>
          <target state="new">When using the Core Data offline store, you need to define particular tables and fields in your data model.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The sample app already includes a data model with the right format.</source>
          <target state="new">The sample app already includes a data model with the right format.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>In this section we walk through these tables and how they are used.</source>
          <target state="new">In this section we walk through these tables and how they are used.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Open <bpt id="p12">**</bpt>QSDataModel.xcdatamodeld<ept id="p12">**</ept>.</source>
          <target state="new">Open <bpt id="p12">**</bpt>QSDataModel.xcdatamodeld<ept id="p12">**</ept>.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>There are four tables defined, three used by the SDK and one for the todo items themselves:</source>
          <target state="new">There are four tables defined, three used by the SDK and one for the todo items themselves:</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><ph id="ph73">[AZURE.NOTE]</ph><ph id="ph74" /> The Mobile Services SDK reserves column names that begin with "<bpt id="p13">**</bpt><ph id="ph75">`ms_`</ph><ept id="p13">**</ept>".</source>
          <target state="new"><ph id="ph73">[AZURE.NOTE]</ph><ph id="ph74" /> The Mobile Services SDK reserves column names that begin with "<bpt id="p13">**</bpt><ph id="ph75">`ms_`</ph><ept id="p13">**</ept>".</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Do not use this prefix on anything other than system columns.</source>
          <target state="new">Do not use this prefix on anything other than system columns.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Otherwise, your column names will be modified when using the remote service.</source>
          <target state="new">Otherwise, your column names will be modified when using the remote service.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>When using the offline sync feature, you must define the system tables as shown below.</source>
          <target state="new">When using the offline sync feature, you must define the system tables as shown below.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>System Tables</source>
          <target state="new">System Tables</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>MS_TableOperations</source>
          <target state="new">MS_TableOperations</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Attribute</source>
          <target state="new">Attribute</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="new">Type</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>id (required)</source>
          <target state="new">id (required)</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Integer 64</source>
          <target state="new">Integer 64</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>itemId</source>
          <target state="new">itemId</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>String</source>
          <target state="new">String</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>properties</source>
          <target state="new">properties</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Binary Data</source>
          <target state="new">Binary Data</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>table</source>
          <target state="new">table</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>String</source>
          <target state="new">String</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>tableKind</source>
          <target state="new">tableKind</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Integer 16</source>
          <target state="new">Integer 16</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>MS_TableOperationErrors</source>
          <target state="new">MS_TableOperationErrors</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Attribute</source>
          <target state="new">Attribute</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="new">Type</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>id (required)</source>
          <target state="new">id (required)</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>String</source>
          <target state="new">String</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>operationId</source>
          <target state="new">operationId</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Integer 64</source>
          <target state="new">Integer 64</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>properties</source>
          <target state="new">properties</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Binary Data</source>
          <target state="new">Binary Data</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>tableKind</source>
          <target state="new">tableKind</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Integer 16</source>
          <target state="new">Integer 16</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>MS_TableConfig</source>
          <target state="new">MS_TableConfig</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Change Sync Behavior of App</source>
          <target state="new">Change Sync Behavior of App</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>In this section, you modify the app so that it does not sync on app start, or when inserting and updating items, but only when the refresh gesture  is performed.</source>
          <target state="new">In this section, you modify the app so that it does not sync on app start, or when inserting and updating items, but only when the refresh gesture  is performed.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>In <bpt id="p14">**</bpt>QSTodoListViewController.m<ept id="p14">**</ept>, change <ph id="ph76">`viewDidLoad`</ph><ph id="ph77" /> to remove the call to <ph id="ph78">`[self refresh]`</ph><ph id="ph79" /> at the end of the method.</source>
          <target state="new">In <bpt id="p14">**</bpt>QSTodoListViewController.m<ept id="p14">**</ept>, change <ph id="ph76">`viewDidLoad`</ph><ph id="ph77" /> to remove the call to <ph id="ph78">`[self refresh]`</ph><ph id="ph79" /> at the end of the method.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Now, the data will not be synced with the server on app start, but instead will be only stored locally.</source>
          <target state="new">Now, the data will not be synced with the server on app start, but instead will be only stored locally.</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>In <bpt id="p15">**</bpt>QSTodoService.m<ept id="p15">**</ept>, modify <ph id="ph80">`addItem`</ph><ph id="ph81" /> so that it doesn't sync after the item is inserted.</source>
          <target state="new">In <bpt id="p15">**</bpt>QSTodoService.m<ept id="p15">**</ept>, modify <ph id="ph80">`addItem`</ph><ph id="ph81" /> so that it doesn't sync after the item is inserted.</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Remove the <ph id="ph82">`self syncData`</ph><ph id="ph83" /> block and replace it with the following:</source>
          <target state="new">Remove the <ph id="ph82">`self syncData`</ph><ph id="ph83" /> block and replace it with the following:</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Similarly, again in <bpt id="p16">**</bpt>QSTodoService.m<ept id="p16">**</ept>, in <ph id="ph84">`completeItem`</ph>, remove the block for <ph id="ph85">`self syncData`</ph><ph id="ph86" /> and replace with the following:</source>
          <target state="new">Similarly, again in <bpt id="p16">**</bpt>QSTodoService.m<ept id="p16">**</ept>, in <ph id="ph84">`completeItem`</ph>, remove the block for <ph id="ph85">`self syncData`</ph><ph id="ph86" /> and replace with the following:</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Test App</source>
          <target state="new">Test App</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>In this section, you will turn of Wi-Fi in the simulator to create an offline scenario.</source>
          <target state="new">In this section, you will turn of Wi-Fi in the simulator to create an offline scenario.</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>When you add data items, they will be held in the local Core Data store, but not synced to the mobile service.</source>
          <target state="new">When you add data items, they will be held in the local Core Data store, but not synced to the mobile service.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Turn off the internet connection on your Mac.</source>
          <target state="new">Turn off the internet connection on your Mac.</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Turning off WiFi in just iOS simulator may not have an effect, since the simulator may still use the host Mac's internet connection, so turn off internet for the computer itself.</source>
          <target state="new">Turning off WiFi in just iOS simulator may not have an effect, since the simulator may still use the host Mac's internet connection, so turn off internet for the computer itself.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>This simulates an offline scenario.</source>
          <target state="new">This simulates an offline scenario.</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Add some todo items or complete some items.</source>
          <target state="new">Add some todo items or complete some items.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Quit the simulator (or forcibly close the app) and restart.</source>
          <target state="new">Quit the simulator (or forcibly close the app) and restart.</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Verify that your changes have been persisted.</source>
          <target state="new">Verify that your changes have been persisted.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Notice that the data items are still displayed because they are held in the local Core Data store.</source>
          <target state="new">Notice that the data items are still displayed because they are held in the local Core Data store.</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>View the contents of the remote TodoItem table.</source>
          <target state="new">View the contents of the remote TodoItem table.</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Verify that the new items have <bpt id="p17">_</bpt>not<ept id="p17">_</ept><ph id="ph87" /> been synced to the server.</source>
          <target state="new">Verify that the new items have <bpt id="p17">_</bpt>not<ept id="p17">_</ept><ph id="ph87" /> been synced to the server.</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>For the JavaScript backend, go to the <bpt id="p18">[</bpt>Azure classic portal<ept id="p18">](http://manage.windowsazure.com)</ept>, and click the Data tab to view the contents of the <ph id="ph88">`TodoItem`</ph><ph id="ph89" /> table.</source>
          <target state="new">For the JavaScript backend, go to the <bpt id="p18">[</bpt>Azure classic portal<ept id="p18">](http://manage.windowsazure.com)</ept>, and click the Data tab to view the contents of the <ph id="ph88">`TodoItem`</ph><ph id="ph89" /> table.</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>For the .NET backend, view the table contents either with a SQL tool such as SQL Server Management Studio, or a REST client such as Fiddler or Postman.</source>
          <target state="new">For the .NET backend, view the table contents either with a SQL tool such as SQL Server Management Studio, or a REST client such as Fiddler or Postman.</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Turn on Wi-Fi in the iOS simulator.</source>
          <target state="new">Turn on Wi-Fi in the iOS simulator.</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Next, perform the refresh gesture by pulling down the list of items.</source>
          <target state="new">Next, perform the refresh gesture by pulling down the list of items.</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>You will see a progress spinner and the text "Syncing...".</source>
          <target state="new">You will see a progress spinner and the text "Syncing...".</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>View the TodoItem data again.</source>
          <target state="new">View the TodoItem data again.</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The new and changed TodoItems should now appear.</source>
          <target state="new">The new and changed TodoItems should now appear.</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Summary</source>
          <target state="new">Summary</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>In order to support the offline features of mobile services, you used the <ph id="ph90">`MSSyncTable`</ph><ph id="ph91" /> interface and initialized <ph id="ph92">`MSClient.syncContext`</ph><ph id="ph93" /> with a local store.</source>
          <target state="new">In order to support the offline features of mobile services, you used the <ph id="ph90">`MSSyncTable`</ph><ph id="ph91" /> interface and initialized <ph id="ph92">`MSClient.syncContext`</ph><ph id="ph93" /> with a local store.</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>In this case the local store was a Core Data-based database.</source>
          <target state="new">In this case the local store was a Core Data-based database.</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>When using a Core Data local store, you define several tables with the <bpt id="p19">[</bpt>correct system properties<ept id="p19">][Review the Core Data model]</ept>.</source>
          <target state="new">When using a Core Data local store, you define several tables with the <bpt id="p19">[</bpt>correct system properties<ept id="p19">][Review the Core Data model]</ept>.</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The normal  operations for mobile services work as if the app is still connected but all the operations occur against the local store.</source>
          <target state="new">The normal  operations for mobile services work as if the app is still connected but all the operations occur against the local store.</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>To synchronize the local store with the server, you used <ph id="ph94">`MSSyncTable.pullWithQuery`</ph><ph id="ph95" /> and <ph id="ph96">`MSClient.syncContext.pushWithCompletion`</ph>:</source>
          <target state="new">To synchronize the local store with the server, you used <ph id="ph94">`MSSyncTable.pullWithQuery`</ph><ph id="ph95" /> and <ph id="ph96">`MSClient.syncContext.pushWithCompletion`</ph>:</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Next Steps</source>
          <target state="new">Next Steps</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source><bpt id="p21">[</bpt>Using Soft Delete in Mobile Services<ept id="p21">][Soft Delete]</ept></source>
          <target state="new"><bpt id="p21">[</bpt>Using Soft Delete in Mobile Services<ept id="p21">][Soft Delete]</ept></target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Additional Resources</source>
          <target state="new">Additional Resources</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source><bpt id="p23">[</bpt><ept id="p23">Azure Friday: Offline-enabled apps in Azure Mobile Services]</ept> \(note: demos are for Windows, but feature discussion applies to all platforms\)</source>
          <target state="new"><bpt id="p23">[</bpt><ept id="p23">Azure Friday: Offline-enabled apps in Azure Mobile Services]</ept> \(note: demos are for Windows, but feature discussion applies to all platforms\)</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e54c103cba9396c1b84fedcbebfdbf86082a82b0</xliffext:olfilehash>
  </header>
</xliff>