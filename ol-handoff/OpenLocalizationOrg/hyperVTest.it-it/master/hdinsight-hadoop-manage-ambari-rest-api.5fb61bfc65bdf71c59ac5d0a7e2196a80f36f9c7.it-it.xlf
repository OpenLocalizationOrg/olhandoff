<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-US" target-language="it-it">
    <body>
      <group id="main" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Monitor and manage HDInsight clusters using the Apache Ambari REST API | Microsoft Azure</source>
          <target state="new">Monitor and manage HDInsight clusters using the Apache Ambari REST API | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to use Ambari to monitor and manage Linux-based HDInsight clusters.</source>
          <target state="new">Learn how to use Ambari to monitor and manage Linux-based HDInsight clusters.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>In this document, you will learn how to use the Ambari REST API included with HDInsight clusters.</source>
          <target state="new">In this document, you will learn how to use the Ambari REST API included with HDInsight clusters.</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Manage HDInsight clusters by using the Ambari REST API</source>
          <target state="new">Manage HDInsight clusters by using the Ambari REST API</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Apache Ambari simplifies the management and monitoring of a Hadoop cluster by providing an easy to use web UI and REST API.</source>
          <target state="new">Apache Ambari simplifies the management and monitoring of a Hadoop cluster by providing an easy to use web UI and REST API.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Ambari is included on Linux-based HDInsight clusters, and is used to monitor the cluster and make configuration changes.</source>
          <target state="new">Ambari is included on Linux-based HDInsight clusters, and is used to monitor the cluster and make configuration changes.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>In this document, you will learn the basics of working with the Ambari REST API by performing common tasks such as finding the fully qualified domain name of the cluster nodes or finding the default storage account used by the cluster.</source>
          <target state="new">In this document, you will learn the basics of working with the Ambari REST API by performing common tasks such as finding the fully qualified domain name of the cluster nodes or finding the default storage account used by the cluster.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><ph id="ph3">[AZURE.NOTE]</ph><ph id="ph4" /> The information in this article applies only to Linux-based HDInsight clusters.</source>
          <target state="new"><ph id="ph3">[AZURE.NOTE]</ph><ph id="ph4" /> The information in this article applies only to Linux-based HDInsight clusters.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For Windows-based HDInsight clusters, only a sub-set of monitoring functionality is available through the Ambari REST API.</source>
          <target state="new">For Windows-based HDInsight clusters, only a sub-set of monitoring functionality is available through the Ambari REST API.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Monitor Windows-based Hadoop on HDInsight using the Ambari API<ept id="p1">](hdinsight-monitor-use-ambari-api.md)</ept>.</source>
          <target state="new">See <bpt id="p1">[</bpt>Monitor Windows-based Hadoop on HDInsight using the Ambari API<ept id="p1">](hdinsight-monitor-use-ambari-api.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="new">Prerequisites</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p2">[</bpt>cURL<ept id="p2">](http://curl.haxx.se/)</ept>: cURL is a cross-platform utility that can be used to work with REST APIs from the command-line.</source>
          <target state="new"><bpt id="p2">[</bpt>cURL<ept id="p2">](http://curl.haxx.se/)</ept>: cURL is a cross-platform utility that can be used to work with REST APIs from the command-line.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>In this document, it is used to communicate with the Ambari REST API.</source>
          <target state="new">In this document, it is used to communicate with the Ambari REST API.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p3">[</bpt>jq<ept id="p3">](https://stedolan.github.io/jq/)</ept>: jq is a cross-platform command-line utility for working with JSON documents.</source>
          <target state="new"><bpt id="p3">[</bpt>jq<ept id="p3">](https://stedolan.github.io/jq/)</ept>: jq is a cross-platform command-line utility for working with JSON documents.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>In this document, it is used to parse the JSON documents returned from the Ambari REST API.</source>
          <target state="new">In this document, it is used to parse the JSON documents returned from the Ambari REST API.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>What is Ambari?</source>
          <target state="new">What is Ambari?</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Apache Ambari</source>
          <target state="new">Apache Ambari</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>makes Hadoop management simpler by providing an easy-to-use web UI that can be used to provision, manage, and monitor Hadoop clusters.</source>
          <target state="new">makes Hadoop management simpler by providing an easy-to-use web UI that can be used to provision, manage, and monitor Hadoop clusters.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Developers can integrate these capabilities into their applications by using the</source>
          <target state="new">Developers can integrate these capabilities into their applications by using the</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Ambari REST APIs</source>
          <target state="new">Ambari REST APIs</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Ambari is provided by default with Linux-based HDInsight clusters.</source>
          <target state="new">Ambari is provided by default with Linux-based HDInsight clusters.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>REST API</source>
          <target state="new">REST API</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The base URI for the Ambari REST API on HDInsight is https://CLUSTERNAME.azurehdinsight.net/api/v1/clusters/CLUSTERNAME, where <bpt id="p4">__</bpt>CLUSTERNAME<ept id="p4">__</ept><ph id="ph5" /> is the name of your cluster.</source>
          <target state="new">The base URI for the Ambari REST API on HDInsight is https://CLUSTERNAME.azurehdinsight.net/api/v1/clusters/CLUSTERNAME, where <bpt id="p4">__</bpt>CLUSTERNAME<ept id="p4">__</ept><ph id="ph5" /> is the name of your cluster.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><ph id="ph6">[AZURE.IMPORTANT]</ph><ph id="ph7" /> Connecting to Ambari on HDInsight requires HTTPS.</source>
          <target state="new"><ph id="ph6">[AZURE.IMPORTANT]</ph><ph id="ph7" /> Connecting to Ambari on HDInsight requires HTTPS.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>You must also authenticate to Ambari using the admin account name (the default is <bpt id="p5">__</bpt>admin<ept id="p5">__</ept>,) and password you provided when the cluster was created.</source>
          <target state="new">You must also authenticate to Ambari using the admin account name (the default is <bpt id="p5">__</bpt>admin<ept id="p5">__</ept>,) and password you provided when the cluster was created.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The following is an example of using cURL to perform a GET request against the REST API:</source>
          <target state="new">The following is an example of using cURL to perform a GET request against the REST API:</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>If you run this, replacing <bpt id="p6">__</bpt>PASSWORD<ept id="p6">__</ept><ph id="ph8" /> with the admin password for your cluster, and <bpt id="p7">__</bpt>CLUSTERNAME<ept id="p7">__</ept><ph id="ph9" /> with the cluster name, you will receive a JSON document that begins with information similar to the following:</source>
          <target state="new">If you run this, replacing <bpt id="p6">__</bpt>PASSWORD<ept id="p6">__</ept><ph id="ph8" /> with the admin password for your cluster, and <bpt id="p7">__</bpt>CLUSTERNAME<ept id="p7">__</ept><ph id="ph9" /> with the cluster name, you will receive a JSON document that begins with information similar to the following:</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Since this is JSON, it is usually easier to use a JSON parser to retrieve data.</source>
          <target state="new">Since this is JSON, it is usually easier to use a JSON parser to retrieve data.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For example, if you want to retrieve a count of alerts (contained in the <bpt id="p8">__</bpt>"Host/host_status/ALERT"<ept id="p8">__</ept><ph id="ph10" /> element,) you can use the following to directly access the value:</source>
          <target state="new">For example, if you want to retrieve a count of alerts (contained in the <bpt id="p8">__</bpt>"Host/host_status/ALERT"<ept id="p8">__</ept><ph id="ph10" /> element,) you can use the following to directly access the value:</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This retrieves the JSON document, then pipes the output to jq.</source>
          <target state="new">This retrieves the JSON document, then pipes the output to jq.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><ph id="ph11">`'.Clusters.health_report."Host/host_status/ALERT"'`</ph><ph id="ph12" /> indicates the element within the JSON document that you want to retrieve.</source>
          <target state="new"><ph id="ph11">`'.Clusters.health_report."Host/host_status/ALERT"'`</ph><ph id="ph12" /> indicates the element within the JSON document that you want to retrieve.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><ph id="ph13">[AZURE.NOTE]</ph><ph id="ph14" /> The <bpt id="p9">__</bpt>Host/host_status/ALERT<ept id="p9">__</ept><ph id="ph15" /> element is enclosed in quotes to indicate that '/' is part of the element name.</source>
          <target state="new"><ph id="ph13">[AZURE.NOTE]</ph><ph id="ph14" /> The <bpt id="p9">__</bpt>Host/host_status/ALERT<ept id="p9">__</ept><ph id="ph15" /> element is enclosed in quotes to indicate that '/' is part of the element name.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>For more information on using jq, see the <bpt id="p10">[</bpt>jq website<ept id="p10">](https://stedolan.github.io/jq/)</ept>.</source>
          <target state="new">For more information on using jq, see the <bpt id="p10">[</bpt>jq website<ept id="p10">](https://stedolan.github.io/jq/)</ept>.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Example: Get the FQDN of cluster nodes</source>
          <target state="new">Example: Get the FQDN of cluster nodes</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>When working with HDInsight, you may need to know the fully qualified domain name (FQDN) of a cluster node.</source>
          <target state="new">When working with HDInsight, you may need to know the fully qualified domain name (FQDN) of a cluster node.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>You can easily retrieve the FQDN for the various nodes in the cluster using the following:</source>
          <target state="new">You can easily retrieve the FQDN for the various nodes in the cluster using the following:</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p11">__</bpt>Head nodes<ept id="p11">__</ept>: <ph id="ph16">`curl -u admin:PASSWORD -G "https://CLUSTERNAME.azurehdinsight.net/api/v1/clusters/CLUSTERNAME/services/HDFS/components/NAMENODE" | jq '.host_components[].HostRoles.host_name'`</ph></source>
          <target state="new"><bpt id="p11">__</bpt>Head nodes<ept id="p11">__</ept>: <ph id="ph16">`curl -u admin:PASSWORD -G "https://CLUSTERNAME.azurehdinsight.net/api/v1/clusters/CLUSTERNAME/services/HDFS/components/NAMENODE" | jq '.host_components[].HostRoles.host_name'`</ph></target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p12">__</bpt>Worker nodes<ept id="p12">__</ept>: <ph id="ph17">`curl -u admin:PASSWORD -G "https://CLUSTERNAME.azurehdinsight.net/api/v1/clusters/CLUSTERNAME/services/HDFS/components/DATANODE" | jq '.host_components[].HostRoles.host_name'`</ph></source>
          <target state="new"><bpt id="p12">__</bpt>Worker nodes<ept id="p12">__</ept>: <ph id="ph17">`curl -u admin:PASSWORD -G "https://CLUSTERNAME.azurehdinsight.net/api/v1/clusters/CLUSTERNAME/services/HDFS/components/DATANODE" | jq '.host_components[].HostRoles.host_name'`</ph></target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p13">__</bpt>Zookeeper nodes<ept id="p13">__</ept>: <ph id="ph18">`curl -u admin:PASSWORD -G "https://CLUSTERNAME.azurehdinsight.net/api/v1/clusters/CLUSTERNAME/services/ZOOKEEPER/components/ZOOKEEPER_SERVER" | jq '.host_components[].HostRoles.host_name'`</ph></source>
          <target state="new"><bpt id="p13">__</bpt>Zookeeper nodes<ept id="p13">__</ept>: <ph id="ph18">`curl -u admin:PASSWORD -G "https://CLUSTERNAME.azurehdinsight.net/api/v1/clusters/CLUSTERNAME/services/ZOOKEEPER/components/ZOOKEEPER_SERVER" | jq '.host_components[].HostRoles.host_name'`</ph></target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Note that each of these follow the same pattern of querying a component that we know runs on those nodes, then retrieving the <ph id="ph19">`host_name`</ph><ph id="ph20" /> elements, which contain the FQDN for these nodes.</source>
          <target state="new">Note that each of these follow the same pattern of querying a component that we know runs on those nodes, then retrieving the <ph id="ph19">`host_name`</ph><ph id="ph20" /> elements, which contain the FQDN for these nodes.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The <ph id="ph21">`host_components`</ph><ph id="ph22" /> element of the return document contains multiple items.</source>
          <target state="new">The <ph id="ph21">`host_components`</ph><ph id="ph22" /> element of the return document contains multiple items.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Using <ph id="ph23">`.host_components[]`</ph>, and then specifying a path within the element will loop through each item and pull out the value from the specific path.</source>
          <target state="new">Using <ph id="ph23">`.host_components[]`</ph>, and then specifying a path within the element will loop through each item and pull out the value from the specific path.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>If you only want one value, such as the first FQDN entry, you can return the items as a collection and then select a specific entry:</source>
          <target state="new">If you only want one value, such as the first FQDN entry, you can return the items as a collection and then select a specific entry:</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>This will return the first FQDN from the collection.</source>
          <target state="new">This will return the first FQDN from the collection.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Example: Get the default storage account and container</source>
          <target state="new">Example: Get the default storage account and container</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>When you create an HDInsight cluster, you must use an Azure Storage Account and a blob container as the default storage for the cluster.</source>
          <target state="new">When you create an HDInsight cluster, you must use an Azure Storage Account and a blob container as the default storage for the cluster.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>You can use Ambari to retrieve this information after the cluster has been created.</source>
          <target state="new">You can use Ambari to retrieve this information after the cluster has been created.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>For example, if you want to programmatically write data directly to the container.</source>
          <target state="new">For example, if you want to programmatically write data directly to the container.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The following will retrieve the WASB URI of the clusters default storage:</source>
          <target state="new">The following will retrieve the WASB URI of the clusters default storage:</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><ph id="ph24">[AZURE.NOTE]</ph><ph id="ph25" /> This will return the first configuration applied to the server (<ph id="ph26">`service_config_version=1`</ph>,) which will contain this information.</source>
          <target state="new"><ph id="ph24">[AZURE.NOTE]</ph><ph id="ph25" /> This will return the first configuration applied to the server (<ph id="ph26">`service_config_version=1`</ph>,) which will contain this information.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>If you are retrieving a value that has been modified after cluster creation, you may need to list the configuration versions and retrieve the latest one.</source>
          <target state="new">If you are retrieving a value that has been modified after cluster creation, you may need to list the configuration versions and retrieve the latest one.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>This will return a value similar to the following, where <bpt id="p14">__</bpt>CONTAINER<ept id="p14">__</ept><ph id="ph27" /> is the default container and <bpt id="p15">__</bpt>ACCOUNTNAME<ept id="p15">__</ept><ph id="ph28" /> is the Azure Storage Account name:</source>
          <target state="new">This will return a value similar to the following, where <bpt id="p14">__</bpt>CONTAINER<ept id="p14">__</ept><ph id="ph27" /> is the default container and <bpt id="p15">__</bpt>ACCOUNTNAME<ept id="p15">__</ept><ph id="ph28" /> is the Azure Storage Account name:</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>You can then use this information with the <bpt id="p16">[</bpt>Azure CLI<ept id="p16">](../xplat-cli-install.md)</ept><ph id="ph29" /> to upload or download data from the container.</source>
          <target state="new">You can then use this information with the <bpt id="p16">[</bpt>Azure CLI<ept id="p16">](../xplat-cli-install.md)</ept><ph id="ph29" /> to upload or download data from the container.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="new">For example:</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Get the resource group for the Storage Account.</source>
          <target state="new">Get the resource group for the Storage Account.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Replace <bpt id="p17">__</bpt>ACCOUNTNAME<ept id="p17">__</ept><ph id="ph30" /> with the Storage Account name retrieved from Ambari:</source>
          <target state="new">Replace <bpt id="p17">__</bpt>ACCOUNTNAME<ept id="p17">__</ept><ph id="ph30" /> with the Storage Account name retrieved from Ambari:</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>This will return the resource group name for the account.</source>
          <target state="new">This will return the resource group name for the account.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><ph id="ph31">[AZURE.NOTE]</ph><ph id="ph32" /> If nothing is returned from this command, you may need to change the Azure CLI to Azure Resource Manager mode and run the command again.</source>
          <target state="new"><ph id="ph31">[AZURE.NOTE]</ph><ph id="ph32" /> If nothing is returned from this command, you may need to change the Azure CLI to Azure Resource Manager mode and run the command again.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>To switch to Azure Resource Manager mode, use the following command.</source>
          <target state="new">To switch to Azure Resource Manager mode, use the following command.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Get the key for the Storage account.</source>
          <target state="new">Get the key for the Storage account.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Replace <bpt id="p18">__</bpt>GROUPNAME<ept id="p18">__</ept><ph id="ph34" /> with the Resource Group from the previous step.</source>
          <target state="new">Replace <bpt id="p18">__</bpt>GROUPNAME<ept id="p18">__</ept><ph id="ph34" /> with the Resource Group from the previous step.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Replace <bpt id="p19">__</bpt>ACCOUNTNAME<ept id="p19">__</ept><ph id="ph35" /> with the Storage Account name:</source>
          <target state="new">Replace <bpt id="p19">__</bpt>ACCOUNTNAME<ept id="p19">__</ept><ph id="ph35" /> with the Storage Account name:</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>This will return the primary key for the account.</source>
          <target state="new">This will return the primary key for the account.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Use the upload command to store a file in the container:</source>
          <target state="new">Use the upload command to store a file in the container:</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Replace <bpt id="p20">__</bpt>ACCOUNTNAME<ept id="p20">__</ept><ph id="ph36" /> with the Storage Account name.</source>
          <target state="new">Replace <bpt id="p20">__</bpt>ACCOUNTNAME<ept id="p20">__</ept><ph id="ph36" /> with the Storage Account name.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Replace <bpt id="p21">__</bpt>ACCOUNTKEY<ept id="p21">__</ept><ph id="ph37" /> with the key retrieved previously.</source>
          <target state="new">Replace <bpt id="p21">__</bpt>ACCOUNTKEY<ept id="p21">__</ept><ph id="ph37" /> with the key retrieved previously.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><bpt id="p22">__</bpt>FILEPATH<ept id="p22">__</ept><ph id="ph38" /> is the path to the file you want to upload, while <bpt id="p23">__</bpt>BLOBPATH<ept id="p23">__</ept><ph id="ph39" /> is the path in the container.</source>
          <target state="new"><bpt id="p22">__</bpt>FILEPATH<ept id="p22">__</ept><ph id="ph38" /> is the path to the file you want to upload, while <bpt id="p23">__</bpt>BLOBPATH<ept id="p23">__</ept><ph id="ph39" /> is the path in the container.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>For example, if you want the file to appear in HDInsight at wasb://example/data/filename.txt, then <bpt id="p24">__</bpt>BLOBPATH<ept id="p24">__</ept><ph id="ph40" /> would be <ph id="ph41">`example/data/filename.txt`</ph>.</source>
          <target state="new">For example, if you want the file to appear in HDInsight at wasb://example/data/filename.txt, then <bpt id="p24">__</bpt>BLOBPATH<ept id="p24">__</ept><ph id="ph40" /> would be <ph id="ph41">`example/data/filename.txt`</ph>.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Next steps</source>
          <target state="new">Next steps</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>For a complete reference of the REST API, see <bpt id="p25">[</bpt>Ambari API Reference V1<ept id="p25">](https://github.com/apache/ambari/blob/trunk/ambari-server/docs/api/v1/index.md)</ept>.</source>
          <target state="new">For a complete reference of the REST API, see <bpt id="p25">[</bpt>Ambari API Reference V1<ept id="p25">](https://github.com/apache/ambari/blob/trunk/ambari-server/docs/api/v1/index.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><ph id="ph42">[AZURE.NOTE]</ph><ph id="ph43" /> Some Ambari functionality is disabled, as it is managed by the HDInsight cloud service; for example, adding or removing hosts from the cluster or adding new services.</source>
          <target state="new"><ph id="ph42">[AZURE.NOTE]</ph><ph id="ph43" /> Some Ambari functionality is disabled, as it is managed by the HDInsight cloud service; for example, adding or removing hosts from the cluster or adding new services.</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c8105c18ba8b6a8b32b7817cfc3547e72cb91f49</xliffext:olfilehash>
  </header>
</xliff>