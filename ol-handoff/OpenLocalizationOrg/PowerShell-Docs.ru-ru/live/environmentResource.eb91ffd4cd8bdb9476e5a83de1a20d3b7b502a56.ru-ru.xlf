<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="ru-ru" original="1/5/2016 8:35:54 AM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f4ce18cb2680c7d9347a1887c282c3e4707a2c8c</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>DSC Environment Resource</source>
            <target state="new">DSC Environment Resource</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>Applies To: Windows PowerShell 4.0, Windows PowerShell 5.0</source>
            <target state="new">Applies To: Windows PowerShell 4.0, Windows PowerShell 5.0</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>The <bpt id="2">&lt;strong&gt;</bpt>Environment<ept id="2">&lt;/strong&gt;</ept> resource in Windows PowerShell Desired State Configuration (DSC) provides a mechanism to manage system environment variables.</source>
            <target state="new">The <bpt id="2">&lt;strong&gt;</bpt>Environment<ept id="2">&lt;/strong&gt;</ept> resource in Windows PowerShell Desired State Configuration (DSC) provides a mechanism to manage system environment variables.</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>Syntax</source>
            <target state="new">Syntax</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>Properties</source>
            <target state="new">Properties</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>Property</source>
            <target state="new">Property</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>Description</source>
            <target state="new">Description</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>Name</source>
            <target state="new">Name</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>Indicates the name of the environment variable for which you want to ensure a specific state.</source>
            <target state="new">Indicates the name of the environment variable for which you want to ensure a specific state.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>Ensure</source>
            <target state="new">Ensure</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>Indicates if a variable exists.</source>
            <target state="new">Indicates if a variable exists.</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>Set this property to <bpt id="2">&lt;strong&gt;</bpt>Present<ept id="2">&lt;/strong&gt;</ept> to create the environment variable if it does not exist or to ensure that its value matches what is provided through the <bpt id="4">&lt;strong&gt;</bpt>Value<ept id="4">&lt;/strong&gt;</ept> property if the variable already exists.</source>
            <target state="new">Set this property to <bpt id="2">&lt;strong&gt;</bpt>Present<ept id="2">&lt;/strong&gt;</ept> to create the environment variable if it does not exist or to ensure that its value matches what is provided through the <bpt id="4">&lt;strong&gt;</bpt>Value<ept id="4">&lt;/strong&gt;</ept> property if the variable already exists.</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>Set it to <bpt id="2">&lt;strong&gt;</bpt>Absent<ept id="2">&lt;/strong&gt;</ept> to delete the variable if it exists.</source>
            <target state="new">Set it to <bpt id="2">&lt;strong&gt;</bpt>Absent<ept id="2">&lt;/strong&gt;</ept> to delete the variable if it exists.</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>Path</source>
            <target state="new">Path</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>Defines the environment variable that is being configured.</source>
            <target state="new">Defines the environment variable that is being configured.</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>Set this property to <bpt id="2">&lt;strong&gt;</bpt>$true<ept id="2">&lt;/strong&gt;</ept> if the variable is the <bpt id="4">&lt;strong&gt;</bpt>Path<ept id="4">&lt;/strong&gt;</ept> variable; otherwise, set it to <bpt id="6">&lt;strong&gt;</bpt>$false<ept id="6">&lt;/strong&gt;</ept>.</source>
            <target state="new">Set this property to <bpt id="2">&lt;strong&gt;</bpt>$true<ept id="2">&lt;/strong&gt;</ept> if the variable is the <bpt id="4">&lt;strong&gt;</bpt>Path<ept id="4">&lt;/strong&gt;</ept> variable; otherwise, set it to <bpt id="6">&lt;strong&gt;</bpt>$false<ept id="6">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>The default is <bpt id="2">&lt;strong&gt;</bpt>$false<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">The default is <bpt id="2">&lt;strong&gt;</bpt>$false<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>If the variable being configured is the <bpt id="2">&lt;strong&gt;</bpt>Path<ept id="2">&lt;/strong&gt;</ept> variable, the value provided through the <bpt id="4">&lt;strong&gt;</bpt>Value<ept id="4">&lt;/strong&gt;</ept> property will be appended to the existing value.</source>
            <target state="new">If the variable being configured is the <bpt id="2">&lt;strong&gt;</bpt>Path<ept id="2">&lt;/strong&gt;</ept> variable, the value provided through the <bpt id="4">&lt;strong&gt;</bpt>Value<ept id="4">&lt;/strong&gt;</ept> property will be appended to the existing value.</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>DependsOn</source>
            <target state="new">DependsOn</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>Indicates that the configuration of another resource must run before this resource is configured.</source>
            <target state="new">Indicates that the configuration of another resource must run before this resource is configured.</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>For example, if the ID of the resource configuration script block that you want to run first is <bpt id="2">&lt;strong&gt;</bpt>ResourceName<ept id="2">&lt;/strong&gt;</ept> and its type is <bpt id="4">&lt;strong&gt;</bpt>ResourceType<ept id="4">&lt;/strong&gt;</ept>, the syntax for using this property is <bpt id="6">&lt;code&gt;</bpt>DependsOn = "[ResourceType]ResourceName"<ept id="6">&lt;/code&gt;</ept>.</source>
            <target state="new">For example, if the ID of the resource configuration script block that you want to run first is <bpt id="2">&lt;strong&gt;</bpt>ResourceName<ept id="2">&lt;/strong&gt;</ept> and its type is <bpt id="4">&lt;strong&gt;</bpt>ResourceType<ept id="4">&lt;/strong&gt;</ept>, the syntax for using this property is <bpt id="6">&lt;code&gt;</bpt>DependsOn = "[ResourceType]ResourceName"<ept id="6">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>Value</source>
            <target state="new">Value</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>The value to assign to the environment variable.</source>
            <target state="new">The value to assign to the environment variable.</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>Example</source>
            <target state="new">Example</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>The following example ensures that <bpt id="2">&lt;strong&gt;</bpt>TestEnvironmentVariable<ept id="2">&lt;/strong&gt;</ept> is present and it has the value <bpt id="4">&lt;strong&gt;</bpt>TestValue<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">The following example ensures that <bpt id="2">&lt;strong&gt;</bpt>TestEnvironmentVariable<ept id="2">&lt;/strong&gt;</ept> is present and it has the value <bpt id="4">&lt;strong&gt;</bpt>TestValue<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>If it is not present, it creates it.</source>
            <target state="new">If it is not present, it creates it.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>