<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-cn" original="1/6/2016 2:27:49 AM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4afb6a5af36a8ec55d1f0038a7a40ac758a892e8</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>ms.ContentId: 4981828d-1a08-4d8c-a99d-874a926a153f</source>
            <target state="new">ms.ContentId: 4981828d-1a08-4d8c-a99d-874a926a153f</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>title: PowerShell to Docker Comparison</source>
            <target state="new">title: PowerShell to Docker Comparison</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>PowerShell to Docker comparison for managing Windows Server Containers</source>
            <target state="new">PowerShell to Docker comparison for managing Windows Server Containers</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>Updating contents on 27-Oct for testing, ver2.</source>
            <target state="new">Updating contents on 27-Oct for testing, ver2.</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>There are many ways to manage Windows Server Containers using both in-box Windows tools (PowerShell, in this preview) and Open Source management tools such as Docker.</source>
            <target state="new">There are many ways to manage Windows Server Containers using both in-box Windows tools (PowerShell, in this preview) and Open Source management tools such as Docker.</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>Guides outlining both individually available here:</source>
            <target state="new">Guides outlining both individually available here:</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Manage Windows Server Containers with Docker<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Manage Windows Server Containers with Docker<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Manage Windows Server Containers with PowerShell<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Manage Windows Server Containers with PowerShell<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>This page is a more in depth reference comparing the Docker tools and PowerShell management tools.</source>
            <target state="new">This page is a more in depth reference comparing the Docker tools and PowerShell management tools.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>PowerShell for containers versus Hyper-V VMs</source>
            <target state="new">PowerShell for containers versus Hyper-V VMs</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>You can create, run, and interact with Windows Server Containers using PowerShell cmdlets.</source>
            <target state="new">You can create, run, and interact with Windows Server Containers using PowerShell cmdlets.</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>Everything you need to get going is available in-box.</source>
            <target state="new">Everything you need to get going is available in-box.</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>If you’ve used Hyper-V PowerShell, the design of the cmdlets should be pretty familiar to you.</source>
            <target state="new">If you’ve used Hyper-V PowerShell, the design of the cmdlets should be pretty familiar to you.</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>A lot of the workflow is similar to how you’d manage a virtual machine using the Hyper-V module.</source>
            <target state="new">A lot of the workflow is similar to how you’d manage a virtual machine using the Hyper-V module.</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>Instead of <bpt id="2">&lt;code&gt;</bpt>New-VM<ept id="2">&lt;/code&gt;</ept>, <bpt id="4">&lt;code&gt;</bpt>Get-VM<ept id="4">&lt;/code&gt;</ept>, <bpt id="6">&lt;code&gt;</bpt>Start-VM<ept id="6">&lt;/code&gt;</ept>, <bpt id="8">&lt;code&gt;</bpt>Stop-VM<ept id="8">&lt;/code&gt;</ept>, you have <bpt id="10">&lt;code&gt;</bpt>New-Container<ept id="10">&lt;/code&gt;</ept>, <bpt id="12">&lt;code&gt;</bpt>Get-Container<ept id="12">&lt;/code&gt;</ept>, <bpt id="14">&lt;code&gt;</bpt>Start-Container<ept id="14">&lt;/code&gt;</ept>, <bpt id="16">&lt;code&gt;</bpt>Stop-Container<ept id="16">&lt;/code&gt;</ept>.</source>
            <target state="new">Instead of <bpt id="2">&lt;code&gt;</bpt>New-VM<ept id="2">&lt;/code&gt;</ept>, <bpt id="4">&lt;code&gt;</bpt>Get-VM<ept id="4">&lt;/code&gt;</ept>, <bpt id="6">&lt;code&gt;</bpt>Start-VM<ept id="6">&lt;/code&gt;</ept>, <bpt id="8">&lt;code&gt;</bpt>Stop-VM<ept id="8">&lt;/code&gt;</ept>, you have <bpt id="10">&lt;code&gt;</bpt>New-Container<ept id="10">&lt;/code&gt;</ept>, <bpt id="12">&lt;code&gt;</bpt>Get-Container<ept id="12">&lt;/code&gt;</ept>, <bpt id="14">&lt;code&gt;</bpt>Start-Container<ept id="14">&lt;/code&gt;</ept>, <bpt id="16">&lt;code&gt;</bpt>Stop-Container<ept id="16">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>There are quite a few container-specific cmdlets and parameters, but the general lifecycle and management of a Windows container looks roughly like that of a Hyper-V VM.</source>
            <target state="new">There are quite a few container-specific cmdlets and parameters, but the general lifecycle and management of a Windows container looks roughly like that of a Hyper-V VM.</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>How does PowerShell management compare to Docker?</source>
            <target state="new">How does PowerShell management compare to Docker?</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>The Containers PowerShell cmdlets expose an API that isn’t quite the same as Docker's; as a general rule, the cmdlets are more granular in operation.</source>
            <target state="new">The Containers PowerShell cmdlets expose an API that isn’t quite the same as Docker's; as a general rule, the cmdlets are more granular in operation.</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>Some Docker commands have pretty straightforward parallels in PowerShell:</source>
            <target state="new">Some Docker commands have pretty straightforward parallels in PowerShell:</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>Docker command</source>
            <target state="new">Docker command</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>PowerShell Cmdlet</source>
            <target state="new">PowerShell Cmdlet</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>docker ps -a<ept id="1">&lt;/code&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>docker ps -a<ept id="1">&lt;/code&gt;</ept></target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>Get-Container<ept id="1">&lt;/code&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>Get-Container<ept id="1">&lt;/code&gt;</ept></target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>docker images<ept id="1">&lt;/code&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>docker images<ept id="1">&lt;/code&gt;</ept></target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>Get-ContainerImage<ept id="1">&lt;/code&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>Get-ContainerImage<ept id="1">&lt;/code&gt;</ept></target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>docker rm<ept id="1">&lt;/code&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>docker rm<ept id="1">&lt;/code&gt;</ept></target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>Remove-Container<ept id="1">&lt;/code&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>Remove-Container<ept id="1">&lt;/code&gt;</ept></target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>docker rmi<ept id="1">&lt;/code&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>docker rmi<ept id="1">&lt;/code&gt;</ept></target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>Remove-ContainerImage<ept id="1">&lt;/code&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>Remove-ContainerImage<ept id="1">&lt;/code&gt;</ept></target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>docker create<ept id="1">&lt;/code&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>docker create<ept id="1">&lt;/code&gt;</ept></target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>New-Container<ept id="1">&lt;/code&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>New-Container<ept id="1">&lt;/code&gt;</ept></target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>docker commit &lt;container ID&gt;<ept id="1">&lt;/code&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>docker commit &lt;container ID&gt;<ept id="1">&lt;/code&gt;</ept></target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>New-ContainerImage -Container &lt;container&gt;<ept id="1">&lt;/code&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>New-ContainerImage -Container &lt;container&gt;<ept id="1">&lt;/code&gt;</ept></target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>docker load &lt;tarball&gt;<ept id="1">&lt;/code&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>docker load &lt;tarball&gt;<ept id="1">&lt;/code&gt;</ept></target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>Import-ContainerImage &lt;AppX package&gt;<ept id="1">&lt;/code&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>Import-ContainerImage &lt;AppX package&gt;<ept id="1">&lt;/code&gt;</ept></target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>docker save<ept id="1">&lt;/code&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>docker save<ept id="1">&lt;/code&gt;</ept></target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>Export-ContainerImage<ept id="1">&lt;/code&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>Export-ContainerImage<ept id="1">&lt;/code&gt;</ept></target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>docker start<ept id="1">&lt;/code&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>docker start<ept id="1">&lt;/code&gt;</ept></target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>Start-Container<ept id="1">&lt;/code&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>Start-Container<ept id="1">&lt;/code&gt;</ept></target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>docker stop<ept id="1">&lt;/code&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>docker stop<ept id="1">&lt;/code&gt;</ept></target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source><bpt id="1">&lt;code&gt;</bpt>Stop-Container<ept id="1">&lt;/code&gt;</ept></source>
            <target state="new"><bpt id="1">&lt;code&gt;</bpt>Stop-Container<ept id="1">&lt;/code&gt;</ept></target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source>The PowerShell cmdlets are not an exact perfect parity, and there are a fair number of commands that we’re not providing PowerShell replacements for* (notably <bpt id="2">&lt;code&gt;</bpt>docker build<ept id="2">&lt;/code&gt;</ept> and <bpt id="4">&lt;code&gt;</bpt>docker cp<ept id="4">&lt;/code&gt;</ept>).</source>
            <target state="new">The PowerShell cmdlets are not an exact perfect parity, and there are a fair number of commands that we’re not providing PowerShell replacements for* (notably <bpt id="2">&lt;code&gt;</bpt>docker build<ept id="2">&lt;/code&gt;</ept> and <bpt id="4">&lt;code&gt;</bpt>docker cp<ept id="4">&lt;/code&gt;</ept>).</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source>But what might leap out at you is that there’s no single one-line replacement for <bpt id="2">&lt;code&gt;</bpt>docker run<ept id="2">&lt;/code&gt;</ept>.</source>
            <target state="new">But what might leap out at you is that there’s no single one-line replacement for <bpt id="2">&lt;code&gt;</bpt>docker run<ept id="2">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source>\* Subject to change.</source>
            <target state="new">\* Subject to change.</target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source>But I need docker run! What’s going on?</source>
            <target state="new">But I need docker run! What’s going on?</target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source>We’re doing a couple things here to provide a slightly more familiar interaction model for users who know their way around PowerShell already.</source>
            <target state="new">We’re doing a couple things here to provide a slightly more familiar interaction model for users who know their way around PowerShell already.</target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source>Of course, if you’re used to the way docker operates, this will be a bit of a mental shift.</source>
            <target state="new">Of course, if you’re used to the way docker operates, this will be a bit of a mental shift.</target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source>The lifecycle of a container in the PowerShell model is slightly different.</source>
            <target state="new">The lifecycle of a container in the PowerShell model is slightly different.</target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source>In the Containers PowerShell module, we expose the more granular operations of <bpt id="2">&lt;code&gt;</bpt>New-Container<ept id="2">&lt;/code&gt;</ept> (which creates a new container that’s stopped) and <bpt id="4">&lt;code&gt;</bpt>Start-Container<ept id="4">&lt;/code&gt;</ept>.</source>
            <target state="new">In the Containers PowerShell module, we expose the more granular operations of <bpt id="2">&lt;code&gt;</bpt>New-Container<ept id="2">&lt;/code&gt;</ept> (which creates a new container that’s stopped) and <bpt id="4">&lt;code&gt;</bpt>Start-Container<ept id="4">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="150" xml:space="preserve">
            <source>In between creating and starting the container, you can also configure the container’s settings; for TP3, the only other configuration we’re planning to expose is the ability to set the network connection for the container.</source>
            <target state="new">In between creating and starting the container, you can also configure the container’s settings; for TP3, the only other configuration we’re planning to expose is the ability to set the network connection for the container.</target>
          </trans-unit>
          <trans-unit id="151" xml:space="preserve">
            <source>using the (Add/Remove/Connect/Disconnect/Get/Set)-ContainerNetworkAdapter cmdlets.</source>
            <target state="new">using the (Add/Remove/Connect/Disconnect/Get/Set)-ContainerNetworkAdapter cmdlets.</target>
          </trans-unit>
          <trans-unit id="152" xml:space="preserve">
            <source>You can’t currently pass a command to be run inside the container on start. However, you can still get an interactive PowerShell session to a running container using <bpt id="2">&lt;code&gt;</bpt>Enter-PSSession -ContainerId &lt;ID of a running container&gt;<ept id="2">&lt;/code&gt;</ept>, and you can execute a command inside a running container using <bpt id="4">&lt;code&gt;</bpt>Invoke-Command -ContainerId &lt;container id&gt; -ScriptBlock { code to run inside the container }<ept id="4">&lt;/code&gt;</ept> or <bpt id="6">&lt;code&gt;</bpt>Invoke-Command -ContainerId &lt;container id&gt; -FilePath &lt;path to script&gt;<ept id="6">&lt;/code&gt;</ept>.</source>
            <target state="new">You can’t currently pass a command to be run inside the container on start. However, you can still get an interactive PowerShell session to a running container using <bpt id="2">&lt;code&gt;</bpt>Enter-PSSession -ContainerId &lt;ID of a running container&gt;<ept id="2">&lt;/code&gt;</ept>, and you can execute a command inside a running container using <bpt id="4">&lt;code&gt;</bpt>Invoke-Command -ContainerId &lt;container id&gt; -ScriptBlock { code to run inside the container }<ept id="4">&lt;/code&gt;</ept> or <bpt id="6">&lt;code&gt;</bpt>Invoke-Command -ContainerId &lt;container id&gt; -FilePath &lt;path to script&gt;<ept id="6">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="153" xml:space="preserve">
            <source>Both of these commands allow the optional <bpt id="2">&lt;code&gt;</bpt>-RunAsAdministrator<ept id="2">&lt;/code&gt;</ept> flag for high privilige actions.</source>
            <target state="new">Both of these commands allow the optional <bpt id="2">&lt;code&gt;</bpt>-RunAsAdministrator<ept id="2">&lt;/code&gt;</ept> flag for high privilige actions.</target>
          </trans-unit>
          <trans-unit id="154" xml:space="preserve">
            <source>Caveats and known issues</source>
            <target state="new">Caveats and known issues</target>
          </trans-unit>
          <trans-unit id="155" xml:space="preserve">
            <source>Right now, the Containers cmdlets have no knowledge about any containers or images created through Docker, and Docker does not know anything about containers and images created through the PowerShell.</source>
            <target state="new">Right now, the Containers cmdlets have no knowledge about any containers or images created through Docker, and Docker does not know anything about containers and images created through the PowerShell.</target>
          </trans-unit>
          <trans-unit id="156" xml:space="preserve">
            <source>If you created it in Docker, manage it with Docker; if you created it through PowerShell, manage it through PowerShell.</source>
            <target state="new">If you created it in Docker, manage it with Docker; if you created it through PowerShell, manage it through PowerShell.</target>
          </trans-unit>
          <trans-unit id="157" xml:space="preserve">
            <source>We have quite a bit of work we'd like to do to improve the end user experience -- better error messages, better progress reporting, invalid event strings, and so forth.</source>
            <target state="new">We have quite a bit of work we'd like to do to improve the end user experience -- better error messages, better progress reporting, invalid event strings, and so forth.</target>
          </trans-unit>
          <trans-unit id="158" xml:space="preserve">
            <source>If you happen to run into a situation where you wish you were getting more or better info, please feel free to send suggestions to the forums.</source>
            <target state="new">If you happen to run into a situation where you wish you were getting more or better info, please feel free to send suggestions to the forums.</target>
          </trans-unit>
          <trans-unit id="159" xml:space="preserve">
            <source>A quick runthrough</source>
            <target state="new">A quick runthrough</target>
          </trans-unit>
          <trans-unit id="160" xml:space="preserve">
            <source>Here is a walk through of some common workflows.</source>
            <target state="new">Here is a walk through of some common workflows.</target>
          </trans-unit>
          <trans-unit id="161" xml:space="preserve">
            <source>This assumes you've installed an OS container image named "ServerDatacenterCore" and created a virtual switch named "Virtual Switch" (using New-VMSwitch).</source>
            <target state="new">This assumes you've installed an OS container image named "ServerDatacenterCore" and created a virtual switch named "Virtual Switch" (using New-VMSwitch).</target>
          </trans-unit>
          <trans-unit id="162" xml:space="preserve">
            <source>Build your own sample</source>
            <target state="new">Build your own sample</target>
          </trans-unit>
          <trans-unit id="163" xml:space="preserve">
            <source>You can see all the Containers cmdlets using <bpt id="2">&lt;code&gt;</bpt>Get-Command -Module Containers<ept id="2">&lt;/code&gt;</ept>.</source>
            <target state="new">You can see all the Containers cmdlets using <bpt id="2">&lt;code&gt;</bpt>Get-Command -Module Containers<ept id="2">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="164" xml:space="preserve">
            <source>There are several other cmdlets that are not described here, which we'll leave to you to learn about on your own.</source>
            <target state="new">There are several other cmdlets that are not described here, which we'll leave to you to learn about on your own.</target>
          </trans-unit>
          <trans-unit id="165" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Note<ept id="1">&lt;/strong&gt;</ept> This won't return the <bpt id="3">&lt;code&gt;</bpt>Enter-PSSession<ept id="3">&lt;/code&gt;</ept> and <bpt id="5">&lt;code&gt;</bpt>Invoke-Command<ept id="5">&lt;/code&gt;</ept> cmdlets, which are part of core PowerShell.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Note<ept id="1">&lt;/strong&gt;</ept> This won't return the <bpt id="3">&lt;code&gt;</bpt>Enter-PSSession<ept id="3">&lt;/code&gt;</ept> and <bpt id="5">&lt;code&gt;</bpt>Invoke-Command<ept id="5">&lt;/code&gt;</ept> cmdlets, which are part of core PowerShell.</target>
          </trans-unit>
          <trans-unit id="166" xml:space="preserve">
            <source>You can also get help about any cmdlet using <bpt id="2">&lt;code&gt;</bpt>Get-Help [cmdlet name]<ept id="2">&lt;/code&gt;</ept>, or equivalently <bpt id="4">&lt;code&gt;</bpt>[cmdlet name] -?<ept id="4">&lt;/code&gt;</ept>.</source>
            <target state="new">You can also get help about any cmdlet using <bpt id="2">&lt;code&gt;</bpt>Get-Help [cmdlet name]<ept id="2">&lt;/code&gt;</ept>, or equivalently <bpt id="4">&lt;code&gt;</bpt>[cmdlet name] -?<ept id="4">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="167" xml:space="preserve">
            <source>Today, the help output is auto-generated and just tells you the syntax for commands; we will be adding further documentation as we get closer to finalizing the cmdlet design.</source>
            <target state="new">Today, the help output is auto-generated and just tells you the syntax for commands; we will be adding further documentation as we get closer to finalizing the cmdlet design.</target>
          </trans-unit>
          <trans-unit id="168" xml:space="preserve">
            <source>A nicer way to discover the syntax is the PowerShell ISE, which you may not have looked at before if you haven't used PowerShell very much.</source>
            <target state="new">A nicer way to discover the syntax is the PowerShell ISE, which you may not have looked at before if you haven't used PowerShell very much.</target>
          </trans-unit>
          <trans-unit id="169" xml:space="preserve">
            <source>If you're running on a SKU that permits it, try starting the ISE, opening the Commands pane, and choosing the "Containers" module, which will show you a graphical representation of the cmdlets and their parameter sets.</source>
            <target state="new">If you're running on a SKU that permits it, try starting the ISE, opening the Commands pane, and choosing the "Containers" module, which will show you a graphical representation of the cmdlets and their parameter sets.</target>
          </trans-unit>
          <trans-unit id="170" xml:space="preserve">
            <source>PS: Just to prove it can be done, here's a PowerShell function that composes some of the cmdlets we've seen already into an ersatz <bpt id="2">&lt;code&gt;</bpt>docker run<ept id="2">&lt;/code&gt;</ept>.</source>
            <target state="new">PS: Just to prove it can be done, here's a PowerShell function that composes some of the cmdlets we've seen already into an ersatz <bpt id="2">&lt;code&gt;</bpt>docker run<ept id="2">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="171" xml:space="preserve">
            <source>(To be clear, this is a proof of concept, not under active development.)</source>
            <target state="new">(To be clear, this is a proof of concept, not under active development.)</target>
          </trans-unit>
          <trans-unit id="172" xml:space="preserve">
            <source>Docker</source>
            <target state="new">Docker</target>
          </trans-unit>
          <trans-unit id="173" xml:space="preserve">
            <source>Windows Server Containers can be managed with Docker commands.</source>
            <target state="new">Windows Server Containers can be managed with Docker commands.</target>
          </trans-unit>
          <trans-unit id="174" xml:space="preserve">
            <source>While Windows containers should be comparable to their Linux counterparts and have the same management experience through Docker, there are some Docker commands that simply don't make sense with a Windows container.</source>
            <target state="new">While Windows containers should be comparable to their Linux counterparts and have the same management experience through Docker, there are some Docker commands that simply don't make sense with a Windows container.</target>
          </trans-unit>
          <trans-unit id="175" xml:space="preserve">
            <source>Others simply haven't been tested (we're getting there).</source>
            <target state="new">Others simply haven't been tested (we're getting there).</target>
          </trans-unit>
          <trans-unit id="176" xml:space="preserve">
            <source>In an effort to not duplicate the API documentation available in Docker, here is a link to their management APIs.</source>
            <target state="new">In an effort to not duplicate the API documentation available in Docker, here is a link to their management APIs.</target>
          </trans-unit>
          <trans-unit id="177" xml:space="preserve">
            <source>Their walkthroughs are fantastic.</source>
            <target state="new">Their walkthroughs are fantastic.</target>
          </trans-unit>
          <trans-unit id="178" xml:space="preserve">
            <source>We're tracking things that do and don't work in the Docker APIs in our Work in Progress document.</source>
            <target state="new">We're tracking things that do and don't work in the Docker APIs in our Work in Progress document.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>