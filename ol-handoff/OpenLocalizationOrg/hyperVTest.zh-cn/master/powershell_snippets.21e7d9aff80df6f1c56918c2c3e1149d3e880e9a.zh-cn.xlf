<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-cn" original="foo.file" tool-id="4148c065-7d12-488d-80e4-302569c993b0" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="4148c065-7d12-488d-80e4-302569c993b0" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
      <olfilehash xmlns="">1e570b48f01ed63333705d5da5031bc706a67a94</olfilehash>
    </header>
    <body>
      <group id="522ed460-ce68-47d5-a9f8-a5ae78584422">
        <trans-unit id="e7e6afdf-80cc-4a3d-905b-be3a7258644b" xml:space="preserve">
          <source>ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9
title: PowerShell Snippets</source>
          <target state="new">ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9
title: PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="e399823f-b82e-4596-9d65-8cd8176803cf" xml:space="preserve">
          <source>PowerShell Snippets</source>
          <target state="new">PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="2692bf7c-cdcb-4979-8f29-83bd77203c6f" xml:space="preserve">
          <source>Adding this sentence for testing HO-HB process.</source>
          <target state="new">Adding this sentence for testing HO-HB process.</target>
        </trans-unit>
        <trans-unit id="cc7f7fb1-9b8c-4c7f-a4bb-f38b8a23f6c8" xml:space="preserve">
          <source>PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</source>
          <target state="new">PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</target>
        </trans-unit>
        <trans-unit id="96b126a1-88f3-47f3-b11e-81f59c370dbe" xml:space="preserve">
          <source>All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</source>
          <target state="new">All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</target>
        </trans-unit>
        <trans-unit id="b91548f5-fc00-455e-a25c-6c45bf60994e" xml:space="preserve">
          <source>If you aren't sure if you have the right permissions, type <bpt id="42287bd8-e703-434c-a432-b50cc029f061">&lt;code&gt;</bpt>Get-VM<ept id="42287bd8-e703-434c-a432-b50cc029f061">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</source>
          <target state="new">If you aren't sure if you have the right permissions, type <bpt id="42287bd8-e703-434c-a432-b50cc029f061">&lt;code&gt;</bpt>Get-VM<ept id="42287bd8-e703-434c-a432-b50cc029f061">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</target>
        </trans-unit>
        <trans-unit id="eb2b1ab4-48b0-4f57-a5ba-9cacc5a92ed8" xml:space="preserve">
          <source>PowerShell Direct tools</source>
          <target state="new">PowerShell Direct tools</target>
        </trans-unit>
        <trans-unit id="9f0b20a0-be67-493e-8850-c6f4893c5e5e" xml:space="preserve">
          <source>All of the scripts and snippets in this section will rely on the following basics.</source>
          <target state="new">All of the scripts and snippets in this section will rely on the following basics.</target>
        </trans-unit>
        <trans-unit id="dd35eb85-c4f9-4cc6-ac7d-c26036015f92" xml:space="preserve">
          <source><bpt id="8f5e577f-f18c-439c-ba8e-8e8bd726e2d3">&lt;strong&gt;</bpt>Requirements<ept id="8f5e577f-f18c-439c-ba8e-8e8bd726e2d3">&lt;/strong&gt;</ept> :</source>
          <target state="new"><bpt id="8f5e577f-f18c-439c-ba8e-8e8bd726e2d3">&lt;strong&gt;</bpt>Requirements<ept id="8f5e577f-f18c-439c-ba8e-8e8bd726e2d3">&lt;/strong&gt;</ept> :</target>
        </trans-unit>
        <trans-unit id="70804338-8821-4bae-a531-c3d755a1f8b8" xml:space="preserve">
          <source>PowerShell Direct.</source>
          <target state="new">PowerShell Direct.</target>
        </trans-unit>
        <trans-unit id="ef84ef3b-99ec-49ee-88f9-d3d44ee63fa4" xml:space="preserve">
          <source>Windows 10 guest and host OS.</source>
          <target state="new">Windows 10 guest and host OS.</target>
        </trans-unit>
        <trans-unit id="5f1cbc77-5411-4979-901e-e9ea3036dd3d" xml:space="preserve">
          <source><bpt id="479a4ca0-ff51-42c8-a0be-b53025a844d5">&lt;strong&gt;</bpt>Common Variables<ept id="479a4ca0-ff51-42c8-a0be-b53025a844d5">&lt;/strong&gt;</ept> :  
<bpt id="e08ef2fe-15b3-465d-9af3-f4d97b0a2a50">&lt;code&gt;</bpt>$VMName<ept id="e08ef2fe-15b3-465d-9af3-f4d97b0a2a50">&lt;/code&gt;</ept> -- this is a string with the VMName.</source>
          <target state="new"><bpt id="479a4ca0-ff51-42c8-a0be-b53025a844d5">&lt;strong&gt;</bpt>Common Variables<ept id="479a4ca0-ff51-42c8-a0be-b53025a844d5">&lt;/strong&gt;</ept> :  
<bpt id="e08ef2fe-15b3-465d-9af3-f4d97b0a2a50">&lt;code&gt;</bpt>$VMName<ept id="e08ef2fe-15b3-465d-9af3-f4d97b0a2a50">&lt;/code&gt;</ept> -- this is a string with the VMName.</target>
        </trans-unit>
        <trans-unit id="41e8e2a2-ccb0-49d2-845b-53d8296f99f0" xml:space="preserve">
          <source>See a list of available VMs with <bpt id="aa62ad31-f11e-4760-99a1-259f5216c252">&lt;code&gt;</bpt>Get-VM<ept id="aa62ad31-f11e-4760-99a1-259f5216c252">&lt;/code&gt;</ept>  
<bpt id="b6fa2182-5067-413f-8b2b-5ae5b1386b55">&lt;code&gt;</bpt>$cred<ept id="b6fa2182-5067-413f-8b2b-5ae5b1386b55">&lt;/code&gt;</ept> -- Credential for the guest OS.</source>
          <target state="new">See a list of available VMs with <bpt id="aa62ad31-f11e-4760-99a1-259f5216c252">&lt;code&gt;</bpt>Get-VM<ept id="aa62ad31-f11e-4760-99a1-259f5216c252">&lt;/code&gt;</ept>  
<bpt id="b6fa2182-5067-413f-8b2b-5ae5b1386b55">&lt;code&gt;</bpt>$cred<ept id="b6fa2182-5067-413f-8b2b-5ae5b1386b55">&lt;/code&gt;</ept> -- Credential for the guest OS.</target>
        </trans-unit>
        <trans-unit id="9be09343-4b57-48c2-b851-df5ab21b4135" xml:space="preserve">
          <source>Can be populated using <bpt id="90796cd7-c646-4d94-ad54-00fee2cc145d">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="90796cd7-c646-4d94-ad54-00fee2cc145d">&lt;/code&gt;</ept></source>
          <target state="new">Can be populated using <bpt id="90796cd7-c646-4d94-ad54-00fee2cc145d">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="90796cd7-c646-4d94-ad54-00fee2cc145d">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="a444c8e9-d9f9-4ef3-9fd1-6277e1da90c6" xml:space="preserve">
          <source>Check if the guest has booted</source>
          <target state="new">Check if the guest has booted</target>
        </trans-unit>
        <trans-unit id="f7c1973e-2568-4fe5-bc74-89af641414bd" xml:space="preserve">
          <source>Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</source>
          <target state="new">Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</target>
        </trans-unit>
        <trans-unit id="c305c615-8293-4747-b087-249641111122" xml:space="preserve">
          <source>Use this command to check whether the guest has booted.</source>
          <target state="new">Use this command to check whether the guest has booted.</target>
        </trans-unit>
        <trans-unit id="94dfee70-b497-418d-9b64-f128211cf911" xml:space="preserve">
          <source><bpt id="7d9a3050-c393-4ad3-bab6-37408bb85cea">&lt;strong&gt;</bpt>Outcome<ept id="7d9a3050-c393-4ad3-bab6-37408bb85cea">&lt;/strong&gt;</ept>  
Prints a friendly message declaring the state of the guest OS.</source>
          <target state="new"><bpt id="7d9a3050-c393-4ad3-bab6-37408bb85cea">&lt;strong&gt;</bpt>Outcome<ept id="7d9a3050-c393-4ad3-bab6-37408bb85cea">&lt;/strong&gt;</ept>  
Prints a friendly message declaring the state of the guest OS.</target>
        </trans-unit>
        <trans-unit id="7718cf79-e75c-4195-bd8b-8a9e96cc6450" xml:space="preserve">
          <source>Script locking until the guest has booted</source>
          <target state="new">Script locking until the guest has booted</target>
        </trans-unit>
        <trans-unit id="b80896ec-adec-455c-b1e5-5d51a7a23419" xml:space="preserve">
          <source>The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</source>
          <target state="new">The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</target>
        </trans-unit>
        <trans-unit id="12e28103-088f-4556-a7cd-17b642ed66e1" xml:space="preserve">
          <source><bpt id="2647b29a-9e56-4df2-a622-ccfb6e3a854b">&lt;strong&gt;</bpt>Outcome<ept id="2647b29a-9e56-4df2-a622-ccfb6e3a854b">&lt;/strong&gt;</ept>  
Prints a friendly message and locks until the connection to the VM succeeds.</source>
          <target state="new"><bpt id="2647b29a-9e56-4df2-a622-ccfb6e3a854b">&lt;strong&gt;</bpt>Outcome<ept id="2647b29a-9e56-4df2-a622-ccfb6e3a854b">&lt;/strong&gt;</ept>  
Prints a friendly message and locks until the connection to the VM succeeds.</target>
        </trans-unit>
        <trans-unit id="0ed4ec6d-9242-448b-9308-29c7a9e675b7" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="0fca1758-4b04-487c-a143-aabc9cd340d0" xml:space="preserve">
          <source>Script locking until the guest has a network</source>
          <target state="new">Script locking until the guest has a network</target>
        </trans-unit>
        <trans-unit id="ac0c955f-df68-4323-9c92-4219812fc3eb" xml:space="preserve">
          <source>With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</source>
          <target state="new">With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</target>
        </trans-unit>
        <trans-unit id="6cd44860-0086-49ce-bca7-ffa888f039e4" xml:space="preserve">
          <source><bpt id="8fcffa66-51a5-4993-932f-37dec218a63d">&lt;em&gt;</bpt>* Outcome *<ept id="8fcffa66-51a5-4993-932f-37dec218a63d">&lt;/em&gt;</ept>
Locks until a DHCP lease is recieved.</source>
          <target state="new"><bpt id="8fcffa66-51a5-4993-932f-37dec218a63d">&lt;em&gt;</bpt>* Outcome *<ept id="8fcffa66-51a5-4993-932f-37dec218a63d">&lt;/em&gt;</ept>
Locks until a DHCP lease is recieved.</target>
        </trans-unit>
        <trans-unit id="bd877048-445e-4181-a573-f09cf94ae43d" xml:space="preserve">
          <source>Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</source>
          <target state="new">Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</target>
        </trans-unit>
        <trans-unit id="96424664-09c4-40c1-a0bc-2502c5c31e38" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="f1b23c1f-c4f8-43a7-90cc-2988f0c1073c" xml:space="preserve">
          <source>Managing credentials with PowerShell</source>
          <target state="new">Managing credentials with PowerShell</target>
        </trans-unit>
        <trans-unit id="0d4c6529-d5c6-4536-b27a-6dd382fa89a3" xml:space="preserve">
          <source>Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</source>
          <target state="new">Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</target>
        </trans-unit>
        <trans-unit id="552a19b0-7158-43a6-8844-7fd906899b9b" xml:space="preserve">
          <source>There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</source>
          <target state="new">There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</target>
        </trans-unit>
        <trans-unit id="ce6024bd-d1f4-4c4f-9627-614801683f81" xml:space="preserve">
          <source>The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</source>
          <target state="new">The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</target>
        </trans-unit>
        <trans-unit id="a4afe207-8c52-43a7-9c6c-b56772bff053" xml:space="preserve">
          <source>This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</source>
          <target state="new">This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</target>
        </trans-unit>
        <trans-unit id="1c7d8676-b04f-4fbd-b9ef-66413eff0b4f" xml:space="preserve">
          <source>In this scenario you can just run <bpt id="39937fe1-d7f3-4795-bcf1-35f81d1d7473">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="39937fe1-d7f3-4795-bcf1-35f81d1d7473">&lt;/code&gt;</ept>.</source>
          <target state="new">In this scenario you can just run <bpt id="39937fe1-d7f3-4795-bcf1-35f81d1d7473">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="39937fe1-d7f3-4795-bcf1-35f81d1d7473">&lt;/code&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="e2ef24d5-39f8-4b53-a30a-066e3c26c353" xml:space="preserve">
          <source>Let PowerShell prompt you for credentials  
If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</source>
          <target state="new">Let PowerShell prompt you for credentials  
If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</target>
        </trans-unit>
        <trans-unit id="1a143d8f-8cc0-4485-ba9f-3e202191cb4c" xml:space="preserve">
          <source>Store credentials in a variable for reuse.</source>
          <target state="new">Store credentials in a variable for reuse.</target>
        </trans-unit>
        <trans-unit id="f681ad2d-44f8-4ec2-b4e7-ba6e1e7e08f9" xml:space="preserve">
          <source>Running a simple command like this:</source>
          <target state="new">Running a simple command like this:</target>
        </trans-unit>
        <trans-unit id="5fc4c1f1-0f25-4525-9530-f288fc38413d" xml:space="preserve">
          <source>  And then running something like this:</source>
          <target state="new">  And then running something like this:</target>
        </trans-unit>
        <trans-unit id="0ce2ee19-9998-4e9e-983c-34247334bf25" xml:space="preserve">
          <source>  Will mean that you only get prompted once per script/PowerShell session for your credentials.</source>
          <target state="new">  Will mean that you only get prompted once per script/PowerShell session for your credentials.</target>
        </trans-unit>
        <trans-unit id="e522593f-f95d-4819-9521-2d80e877d4ac" xml:space="preserve">
          <source>Code your credentials into your scripts.</source>
          <target state="new">Code your credentials into your scripts.</target>
        </trans-unit>
        <trans-unit id="9dfa6f18-f503-4473-b6e6-3d88718b8b8a" xml:space="preserve">
          <source><bpt id="61b5ade8-7e32-4d67-9c3e-2c9f058bbf2d">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="61b5ade8-7e32-4d67-9c3e-2c9f058bbf2d">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="61b5ade8-7e32-4d67-9c3e-2c9f058bbf2d">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="61b5ade8-7e32-4d67-9c3e-2c9f058bbf2d">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="b7e612b0-cc81-48c8-b668-9e615c4e0e09" xml:space="preserve">
          <source>Warning:  _Do not do this in a production system.</source>
          <target state="new">Warning:  _Do not do this in a production system.</target>
        </trans-unit>
        <trans-unit id="23173658-61cc-4a2c-ad8d-95b23f9d4698" xml:space="preserve">
          <source>Do not do this with real passwords._</source>
          <target state="new">Do not do this with real passwords._</target>
        </trans-unit>
        <trans-unit id="d1072e22-4dfd-4898-9a5d-c680ae7baa33" xml:space="preserve">
          <source>You can hand craft a PSCredential object with some code like this:</source>
          <target state="new">You can hand craft a PSCredential object with some code like this:</target>
        </trans-unit>
        <trans-unit id="7856f4e8-79bd-42f9-ba8c-9756d25a8ef1" xml:space="preserve">
          <source>Grossly insecure - but useful for testing.</source>
          <target state="new">Grossly insecure - but useful for testing.</target>
        </trans-unit>
        <trans-unit id="c0b1e703-da3b-42fb-be06-6e30179f38e2" xml:space="preserve">
          <source>Now you get no prompts at all in this session.</source>
          <target state="new">Now you get no prompts at all in this session.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>