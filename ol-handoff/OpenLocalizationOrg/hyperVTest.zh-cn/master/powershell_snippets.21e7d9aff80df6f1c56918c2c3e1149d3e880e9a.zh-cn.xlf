<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-cn" original="foo.file" tool-id="d02a5252-358c-4ebe-99db-09686ef4dcc7" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="d02a5252-358c-4ebe-99db-09686ef4dcc7" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
      <olfilehash xmlns="">1e570b48f01ed63333705d5da5031bc706a67a94</olfilehash>
    </header>
    <body>
      <group id="1ffac6dd-bc32-4e5c-b7ba-944f66a9eb87">
        <trans-unit id="4bca3b74-e32b-4b9a-b513-382d4f7ffd0c" xml:space="preserve">
          <source>ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9
title: PowerShell Snippets</source>
          <target state="new">ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9
title: PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="70ab1aa2-e865-46e7-ab5c-21357103994e" xml:space="preserve">
          <source>PowerShell Snippets</source>
          <target state="new">PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="62d8b395-fd58-4f87-8302-32fbee3d0d44" xml:space="preserve">
          <source>Adding this sentence for testing HO-HB process.</source>
          <target state="new">Adding this sentence for testing HO-HB process.</target>
        </trans-unit>
        <trans-unit id="febafeb8-d1ea-4d9a-ae0f-807a274b6ad4" xml:space="preserve">
          <source>PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</source>
          <target state="new">PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</target>
        </trans-unit>
        <trans-unit id="e8b86cb4-4340-4074-8395-93484197be2f" xml:space="preserve">
          <source>All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</source>
          <target state="new">All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</target>
        </trans-unit>
        <trans-unit id="91556406-8846-459b-8b6d-5780321f00e9" xml:space="preserve">
          <source>If you aren't sure if you have the right permissions, type <bpt id="fafb5e2c-b082-4655-9d26-a811f7265619">&lt;code&gt;</bpt>Get-VM<ept id="fafb5e2c-b082-4655-9d26-a811f7265619">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</source>
          <target state="new">If you aren't sure if you have the right permissions, type <bpt id="fafb5e2c-b082-4655-9d26-a811f7265619">&lt;code&gt;</bpt>Get-VM<ept id="fafb5e2c-b082-4655-9d26-a811f7265619">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</target>
        </trans-unit>
        <trans-unit id="78f824b7-83a3-41e2-92d9-d6151bbbcf6c" xml:space="preserve">
          <source>PowerShell Direct tools</source>
          <target state="new">PowerShell Direct tools</target>
        </trans-unit>
        <trans-unit id="13623ab4-1613-4416-a678-5462b953c7d0" xml:space="preserve">
          <source>All of the scripts and snippets in this section will rely on the following basics.</source>
          <target state="new">All of the scripts and snippets in this section will rely on the following basics.</target>
        </trans-unit>
        <trans-unit id="1dc9cfa7-8b87-437f-b3d7-942aa60a795a" xml:space="preserve">
          <source><bpt id="9e43684e-3fa7-4f48-bfb2-ff47d01544c6">&lt;strong&gt;</bpt>Requirements<ept id="9e43684e-3fa7-4f48-bfb2-ff47d01544c6">&lt;/strong&gt;</ept> :</source>
          <target state="new"><bpt id="9e43684e-3fa7-4f48-bfb2-ff47d01544c6">&lt;strong&gt;</bpt>Requirements<ept id="9e43684e-3fa7-4f48-bfb2-ff47d01544c6">&lt;/strong&gt;</ept> :</target>
        </trans-unit>
        <trans-unit id="f76267ff-a4b0-4f37-b91e-4ba9e001a317" xml:space="preserve">
          <source>PowerShell Direct.</source>
          <target state="new">PowerShell Direct.</target>
        </trans-unit>
        <trans-unit id="0ea27b2e-e4d6-4e3b-8d5d-6e4777bded5a" xml:space="preserve">
          <source>Windows 10 guest and host OS.</source>
          <target state="new">Windows 10 guest and host OS.</target>
        </trans-unit>
        <trans-unit id="8d3d1f43-0177-4da6-9b11-eb9019555929" xml:space="preserve">
          <source><bpt id="efcfe823-5b5a-47e5-82d4-98d5429b90e7">&lt;strong&gt;</bpt>Common Variables<ept id="efcfe823-5b5a-47e5-82d4-98d5429b90e7">&lt;/strong&gt;</ept> :  
<bpt id="886e5f35-4e82-437d-87cd-3915c51cff6a">&lt;code&gt;</bpt>$VMName<ept id="886e5f35-4e82-437d-87cd-3915c51cff6a">&lt;/code&gt;</ept> -- this is a string with the VMName.</source>
          <target state="new"><bpt id="efcfe823-5b5a-47e5-82d4-98d5429b90e7">&lt;strong&gt;</bpt>Common Variables<ept id="efcfe823-5b5a-47e5-82d4-98d5429b90e7">&lt;/strong&gt;</ept> :  
<bpt id="886e5f35-4e82-437d-87cd-3915c51cff6a">&lt;code&gt;</bpt>$VMName<ept id="886e5f35-4e82-437d-87cd-3915c51cff6a">&lt;/code&gt;</ept> -- this is a string with the VMName.</target>
        </trans-unit>
        <trans-unit id="922dc0a9-adf7-45ec-b9fa-5d1fbe9d1cbc" xml:space="preserve">
          <source>See a list of available VMs with <bpt id="d2d35d29-1309-48a2-8ba2-3d9582f98229">&lt;code&gt;</bpt>Get-VM<ept id="d2d35d29-1309-48a2-8ba2-3d9582f98229">&lt;/code&gt;</ept>  
<bpt id="0a60e839-b47a-4ca1-90b3-3c6a80f0ea59">&lt;code&gt;</bpt>$cred<ept id="0a60e839-b47a-4ca1-90b3-3c6a80f0ea59">&lt;/code&gt;</ept> -- Credential for the guest OS.</source>
          <target state="new">See a list of available VMs with <bpt id="d2d35d29-1309-48a2-8ba2-3d9582f98229">&lt;code&gt;</bpt>Get-VM<ept id="d2d35d29-1309-48a2-8ba2-3d9582f98229">&lt;/code&gt;</ept>  
<bpt id="0a60e839-b47a-4ca1-90b3-3c6a80f0ea59">&lt;code&gt;</bpt>$cred<ept id="0a60e839-b47a-4ca1-90b3-3c6a80f0ea59">&lt;/code&gt;</ept> -- Credential for the guest OS.</target>
        </trans-unit>
        <trans-unit id="c2ba6f74-5413-4dca-85c9-b3e89619352e" xml:space="preserve">
          <source>Can be populated using <bpt id="b976fa6f-67ba-4104-b444-47ed43fb7311">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="b976fa6f-67ba-4104-b444-47ed43fb7311">&lt;/code&gt;</ept></source>
          <target state="new">Can be populated using <bpt id="b976fa6f-67ba-4104-b444-47ed43fb7311">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="b976fa6f-67ba-4104-b444-47ed43fb7311">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="6123ab9a-499b-4270-b912-4e9afd2d68f1" xml:space="preserve">
          <source>Check if the guest has booted</source>
          <target state="new">Check if the guest has booted</target>
        </trans-unit>
        <trans-unit id="0c34ae74-fcae-4e45-8be8-66714ad963b0" xml:space="preserve">
          <source>Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</source>
          <target state="new">Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</target>
        </trans-unit>
        <trans-unit id="3b498a10-74b9-44db-b7c1-2274909ac089" xml:space="preserve">
          <source>Use this command to check whether the guest has booted.</source>
          <target state="new">Use this command to check whether the guest has booted.</target>
        </trans-unit>
        <trans-unit id="9b688d47-193a-4689-b453-d86442ba2043" xml:space="preserve">
          <source><bpt id="e1b40136-c76c-43f7-9339-bfa081c712dc">&lt;strong&gt;</bpt>Outcome<ept id="e1b40136-c76c-43f7-9339-bfa081c712dc">&lt;/strong&gt;</ept>  
Prints a friendly message declaring the state of the guest OS.</source>
          <target state="new"><bpt id="e1b40136-c76c-43f7-9339-bfa081c712dc">&lt;strong&gt;</bpt>Outcome<ept id="e1b40136-c76c-43f7-9339-bfa081c712dc">&lt;/strong&gt;</ept>  
Prints a friendly message declaring the state of the guest OS.</target>
        </trans-unit>
        <trans-unit id="1855385e-eea6-47d3-856e-4231dff39185" xml:space="preserve">
          <source>Script locking until the guest has booted</source>
          <target state="new">Script locking until the guest has booted</target>
        </trans-unit>
        <trans-unit id="ac928470-d5ea-438a-bad8-079655302bd7" xml:space="preserve">
          <source>The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</source>
          <target state="new">The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</target>
        </trans-unit>
        <trans-unit id="21a6a4f2-5d50-4d3c-a077-e8d5f4319b06" xml:space="preserve">
          <source><bpt id="ffffae0b-d657-476e-868e-fbc6ccac3e33">&lt;strong&gt;</bpt>Outcome<ept id="ffffae0b-d657-476e-868e-fbc6ccac3e33">&lt;/strong&gt;</ept>  
Prints a friendly message and locks until the connection to the VM succeeds.</source>
          <target state="new"><bpt id="ffffae0b-d657-476e-868e-fbc6ccac3e33">&lt;strong&gt;</bpt>Outcome<ept id="ffffae0b-d657-476e-868e-fbc6ccac3e33">&lt;/strong&gt;</ept>  
Prints a friendly message and locks until the connection to the VM succeeds.</target>
        </trans-unit>
        <trans-unit id="871c2648-43da-4b7c-ac15-b2b4c8d12fbf" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="bdc0ebb3-f52a-4b1d-ba58-ab0d0d843dd7" xml:space="preserve">
          <source>Script locking until the guest has a network</source>
          <target state="new">Script locking until the guest has a network</target>
        </trans-unit>
        <trans-unit id="67b13295-aca7-4e49-a7b3-d3757876175a" xml:space="preserve">
          <source>With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</source>
          <target state="new">With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</target>
        </trans-unit>
        <trans-unit id="437de214-cbaa-4220-87c2-c4eb57d880d3" xml:space="preserve">
          <source><bpt id="4dbd630b-f6b4-4121-8d37-2f0de81334ed">&lt;em&gt;</bpt>* Outcome *<ept id="4dbd630b-f6b4-4121-8d37-2f0de81334ed">&lt;/em&gt;</ept>
Locks until a DHCP lease is recieved.</source>
          <target state="new"><bpt id="4dbd630b-f6b4-4121-8d37-2f0de81334ed">&lt;em&gt;</bpt>* Outcome *<ept id="4dbd630b-f6b4-4121-8d37-2f0de81334ed">&lt;/em&gt;</ept>
Locks until a DHCP lease is recieved.</target>
        </trans-unit>
        <trans-unit id="e9b71983-5e8e-42ca-89b1-c0fc9e9035c2" xml:space="preserve">
          <source>Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</source>
          <target state="new">Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</target>
        </trans-unit>
        <trans-unit id="c5bb8753-d54d-4424-af4c-57d2e7f38fdc" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="2e9afb82-364f-4eb0-8b7c-8a3038907053" xml:space="preserve">
          <source>Managing credentials with PowerShell</source>
          <target state="new">Managing credentials with PowerShell</target>
        </trans-unit>
        <trans-unit id="762b5d97-a2de-491f-9fb1-7737c355a93d" xml:space="preserve">
          <source>Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</source>
          <target state="new">Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</target>
        </trans-unit>
        <trans-unit id="fd2649ac-af71-47fa-9199-ee4ece956cb5" xml:space="preserve">
          <source>There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</source>
          <target state="new">There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</target>
        </trans-unit>
        <trans-unit id="9cac8459-50bf-4f3f-b09a-218e1545fcad" xml:space="preserve">
          <source>The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</source>
          <target state="new">The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</target>
        </trans-unit>
        <trans-unit id="7d4ff02d-4dd4-487d-b6da-028cf7aaf87c" xml:space="preserve">
          <source>This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</source>
          <target state="new">This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</target>
        </trans-unit>
        <trans-unit id="14ef63c7-f5a9-4072-b245-a02d42df2afd" xml:space="preserve">
          <source>In this scenario you can just run <bpt id="0aef01f4-66df-4d7d-990b-4715817bf364">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="0aef01f4-66df-4d7d-990b-4715817bf364">&lt;/code&gt;</ept>.</source>
          <target state="new">In this scenario you can just run <bpt id="0aef01f4-66df-4d7d-990b-4715817bf364">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="0aef01f4-66df-4d7d-990b-4715817bf364">&lt;/code&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="9deeacb7-f202-4379-a5bd-94a6bba0c86f" xml:space="preserve">
          <source>Let PowerShell prompt you for credentials  
If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</source>
          <target state="new">Let PowerShell prompt you for credentials  
If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</target>
        </trans-unit>
        <trans-unit id="c93ac08e-f5c7-4441-a456-1d0215261b73" xml:space="preserve">
          <source>Store credentials in a variable for reuse.</source>
          <target state="new">Store credentials in a variable for reuse.</target>
        </trans-unit>
        <trans-unit id="42ae3f07-9552-43c5-b642-e4acbe2a1b06" xml:space="preserve">
          <source>Running a simple command like this:</source>
          <target state="new">Running a simple command like this:</target>
        </trans-unit>
        <trans-unit id="df31facb-9c9d-49ae-9766-63786a60b092" xml:space="preserve">
          <source>  And then running something like this:</source>
          <target state="new">  And then running something like this:</target>
        </trans-unit>
        <trans-unit id="94751347-4535-41aa-aab8-ef3ff74a1e62" xml:space="preserve">
          <source>  Will mean that you only get prompted once per script/PowerShell session for your credentials.</source>
          <target state="new">  Will mean that you only get prompted once per script/PowerShell session for your credentials.</target>
        </trans-unit>
        <trans-unit id="6c555489-3faf-4669-8434-950a6e4620f5" xml:space="preserve">
          <source>Code your credentials into your scripts.</source>
          <target state="new">Code your credentials into your scripts.</target>
        </trans-unit>
        <trans-unit id="743db017-0e32-4206-9c94-8c43d51103a2" xml:space="preserve">
          <source><bpt id="c9fe75f2-fa39-4049-8886-0cb99f3f7747">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="c9fe75f2-fa39-4049-8886-0cb99f3f7747">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="c9fe75f2-fa39-4049-8886-0cb99f3f7747">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="c9fe75f2-fa39-4049-8886-0cb99f3f7747">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="3b54014d-73c0-40e9-a12b-0267bdf721f1" xml:space="preserve">
          <source>Warning:  _Do not do this in a production system.</source>
          <target state="new">Warning:  _Do not do this in a production system.</target>
        </trans-unit>
        <trans-unit id="0ab00df1-d375-4792-b340-8832806281d9" xml:space="preserve">
          <source>Do not do this with real passwords._</source>
          <target state="new">Do not do this with real passwords._</target>
        </trans-unit>
        <trans-unit id="7d7b5c19-8859-433f-b5c3-8744c66306d0" xml:space="preserve">
          <source>You can hand craft a PSCredential object with some code like this:</source>
          <target state="new">You can hand craft a PSCredential object with some code like this:</target>
        </trans-unit>
        <trans-unit id="9a922187-f4ce-4cda-94be-7436c935adc0" xml:space="preserve">
          <source>Grossly insecure - but useful for testing.</source>
          <target state="new">Grossly insecure - but useful for testing.</target>
        </trans-unit>
        <trans-unit id="2598e858-b5dc-4f36-925c-2cff243e1474" xml:space="preserve">
          <source>Now you get no prompts at all in this session.</source>
          <target state="new">Now you get no prompts at all in this session.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>