<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-cn" original="foo.file" tool-id="b6454d13-c6e6-451e-b646-1d2630f1d04d" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="b6454d13-c6e6-451e-b646-1d2630f1d04d" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
      <olfilehash xmlns="">1e570b48f01ed63333705d5da5031bc706a67a94</olfilehash>
    </header>
    <body>
      <group id="1bac84eb-528c-4fe2-a4ab-82d15f521877">
        <trans-unit id="b55782a4-96e3-44e9-b86e-79f961f877f2" xml:space="preserve">
          <source>ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9
title: PowerShell Snippets</source>
          <target state="new">ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9
title: PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="0720ca44-5b27-4920-94e3-a72a5df1cb53" xml:space="preserve">
          <source>PowerShell Snippets</source>
          <target state="new">PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="3f2421d4-dc93-41c3-9fb6-dc77b0ae75a1" xml:space="preserve">
          <source>Adding this sentence for testing HO-HB process.</source>
          <target state="new">Adding this sentence for testing HO-HB process.</target>
        </trans-unit>
        <trans-unit id="3be032bf-dbd5-442d-ad71-ac497de1316b" xml:space="preserve">
          <source>PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</source>
          <target state="new">PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</target>
        </trans-unit>
        <trans-unit id="365b5c5c-51f7-4d48-bd54-0f2a2029a403" xml:space="preserve">
          <source>All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</source>
          <target state="new">All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</target>
        </trans-unit>
        <trans-unit id="ef2f598d-f427-4468-af10-9335079ba1d6" xml:space="preserve">
          <source>If you aren't sure if you have the right permissions, type <bpt id="20b98643-891f-4b7a-8920-19ac7a5ae1c7">&lt;code&gt;</bpt>Get-VM<ept id="20b98643-891f-4b7a-8920-19ac7a5ae1c7">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</source>
          <target state="new">If you aren't sure if you have the right permissions, type <bpt id="20b98643-891f-4b7a-8920-19ac7a5ae1c7">&lt;code&gt;</bpt>Get-VM<ept id="20b98643-891f-4b7a-8920-19ac7a5ae1c7">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</target>
        </trans-unit>
        <trans-unit id="9150aeee-ff72-466d-8600-b4c71d8e878f" xml:space="preserve">
          <source>PowerShell Direct tools</source>
          <target state="new">PowerShell Direct tools</target>
        </trans-unit>
        <trans-unit id="6ead7421-1425-42e8-b343-ceaab2a0f707" xml:space="preserve">
          <source>All of the scripts and snippets in this section will rely on the following basics.</source>
          <target state="new">All of the scripts and snippets in this section will rely on the following basics.</target>
        </trans-unit>
        <trans-unit id="07291619-bcc0-44ec-9381-73fc78393000" xml:space="preserve">
          <source><bpt id="4b5110ae-822f-4439-82cc-2a25a0595562">&lt;strong&gt;</bpt>Requirements<ept id="4b5110ae-822f-4439-82cc-2a25a0595562">&lt;/strong&gt;</ept> :</source>
          <target state="new"><bpt id="4b5110ae-822f-4439-82cc-2a25a0595562">&lt;strong&gt;</bpt>Requirements<ept id="4b5110ae-822f-4439-82cc-2a25a0595562">&lt;/strong&gt;</ept> :</target>
        </trans-unit>
        <trans-unit id="d101d9e3-f9ff-48fb-b06f-826518910e69" xml:space="preserve">
          <source>PowerShell Direct.</source>
          <target state="new">PowerShell Direct.</target>
        </trans-unit>
        <trans-unit id="2fc480a8-adb0-41c5-b7fe-df91a8bfd72e" xml:space="preserve">
          <source>Windows 10 guest and host OS.</source>
          <target state="new">Windows 10 guest and host OS.</target>
        </trans-unit>
        <trans-unit id="07ba6602-066a-4076-a865-205306bf1257" xml:space="preserve">
          <source><bpt id="59bb7076-90f8-4e37-aff1-3b7fe1c19f1d">&lt;strong&gt;</bpt>Common Variables<ept id="59bb7076-90f8-4e37-aff1-3b7fe1c19f1d">&lt;/strong&gt;</ept> :  
<bpt id="6e6faa3f-0e49-4bd4-96a6-04f78071782d">&lt;code&gt;</bpt>$VMName<ept id="6e6faa3f-0e49-4bd4-96a6-04f78071782d">&lt;/code&gt;</ept> -- this is a string with the VMName.</source>
          <target state="new"><bpt id="59bb7076-90f8-4e37-aff1-3b7fe1c19f1d">&lt;strong&gt;</bpt>Common Variables<ept id="59bb7076-90f8-4e37-aff1-3b7fe1c19f1d">&lt;/strong&gt;</ept> :  
<bpt id="6e6faa3f-0e49-4bd4-96a6-04f78071782d">&lt;code&gt;</bpt>$VMName<ept id="6e6faa3f-0e49-4bd4-96a6-04f78071782d">&lt;/code&gt;</ept> -- this is a string with the VMName.</target>
        </trans-unit>
        <trans-unit id="051a088f-086e-467b-b287-4881ae412a78" xml:space="preserve">
          <source>See a list of available VMs with <bpt id="b87e7303-7c38-4499-96bf-7c5674d63d50">&lt;code&gt;</bpt>Get-VM<ept id="b87e7303-7c38-4499-96bf-7c5674d63d50">&lt;/code&gt;</ept>  
<bpt id="8b841cd3-bbca-4531-ade1-8a1c88020707">&lt;code&gt;</bpt>$cred<ept id="8b841cd3-bbca-4531-ade1-8a1c88020707">&lt;/code&gt;</ept> -- Credential for the guest OS.</source>
          <target state="new">See a list of available VMs with <bpt id="b87e7303-7c38-4499-96bf-7c5674d63d50">&lt;code&gt;</bpt>Get-VM<ept id="b87e7303-7c38-4499-96bf-7c5674d63d50">&lt;/code&gt;</ept>  
<bpt id="8b841cd3-bbca-4531-ade1-8a1c88020707">&lt;code&gt;</bpt>$cred<ept id="8b841cd3-bbca-4531-ade1-8a1c88020707">&lt;/code&gt;</ept> -- Credential for the guest OS.</target>
        </trans-unit>
        <trans-unit id="bf2a138a-1ffa-4038-be9b-212df684f60d" xml:space="preserve">
          <source>Can be populated using <bpt id="d7bb47fd-f22f-4ab5-b1d3-ffe21fbdfbc1">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="d7bb47fd-f22f-4ab5-b1d3-ffe21fbdfbc1">&lt;/code&gt;</ept></source>
          <target state="new">Can be populated using <bpt id="d7bb47fd-f22f-4ab5-b1d3-ffe21fbdfbc1">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="d7bb47fd-f22f-4ab5-b1d3-ffe21fbdfbc1">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="6c7891d9-9d49-43dc-a5fd-6111841d1ce5" xml:space="preserve">
          <source>Check if the guest has booted</source>
          <target state="new">Check if the guest has booted</target>
        </trans-unit>
        <trans-unit id="4d955e75-8656-4e0c-b1e9-2c0b19ac974e" xml:space="preserve">
          <source>Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</source>
          <target state="new">Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</target>
        </trans-unit>
        <trans-unit id="d6246564-f2ec-41e6-a9ac-c77354ab3c62" xml:space="preserve">
          <source>Use this command to check whether the guest has booted.</source>
          <target state="new">Use this command to check whether the guest has booted.</target>
        </trans-unit>
        <trans-unit id="ac4d468b-fd4c-4a7d-8deb-287296460b31" xml:space="preserve">
          <source><bpt id="83099065-e726-4560-8211-8ab04ae12ce1">&lt;strong&gt;</bpt>Outcome<ept id="83099065-e726-4560-8211-8ab04ae12ce1">&lt;/strong&gt;</ept>  
Prints a friendly message declaring the state of the guest OS.</source>
          <target state="new"><bpt id="83099065-e726-4560-8211-8ab04ae12ce1">&lt;strong&gt;</bpt>Outcome<ept id="83099065-e726-4560-8211-8ab04ae12ce1">&lt;/strong&gt;</ept>  
Prints a friendly message declaring the state of the guest OS.</target>
        </trans-unit>
        <trans-unit id="e6c307de-a591-47e2-8b9f-92146f2a40de" xml:space="preserve">
          <source>Script locking until the guest has booted</source>
          <target state="new">Script locking until the guest has booted</target>
        </trans-unit>
        <trans-unit id="bfdeaa05-d0a3-48bb-a299-7c6e9f89cc03" xml:space="preserve">
          <source>The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</source>
          <target state="new">The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</target>
        </trans-unit>
        <trans-unit id="4391f452-c20c-496c-804d-87e691546f15" xml:space="preserve">
          <source><bpt id="bf8f45b4-2a80-4269-a27d-a94372dc6500">&lt;strong&gt;</bpt>Outcome<ept id="bf8f45b4-2a80-4269-a27d-a94372dc6500">&lt;/strong&gt;</ept>  
Prints a friendly message and locks until the connection to the VM succeeds.</source>
          <target state="new"><bpt id="bf8f45b4-2a80-4269-a27d-a94372dc6500">&lt;strong&gt;</bpt>Outcome<ept id="bf8f45b4-2a80-4269-a27d-a94372dc6500">&lt;/strong&gt;</ept>  
Prints a friendly message and locks until the connection to the VM succeeds.</target>
        </trans-unit>
        <trans-unit id="498ed4d9-6cda-4488-a519-e751c8b0525f" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="91c8ef31-8fa7-427e-82eb-ade32b4e7acb" xml:space="preserve">
          <source>Script locking until the guest has a network</source>
          <target state="new">Script locking until the guest has a network</target>
        </trans-unit>
        <trans-unit id="9b8dd6e0-b7dd-4830-bd86-f02cd5729325" xml:space="preserve">
          <source>With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</source>
          <target state="new">With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</target>
        </trans-unit>
        <trans-unit id="bafbaaff-5227-4d0d-8c68-f7efd6d05693" xml:space="preserve">
          <source><bpt id="5e1886b9-62d6-4a57-b161-35145625c36a">&lt;em&gt;</bpt>* Outcome *<ept id="5e1886b9-62d6-4a57-b161-35145625c36a">&lt;/em&gt;</ept>
Locks until a DHCP lease is recieved.</source>
          <target state="new"><bpt id="5e1886b9-62d6-4a57-b161-35145625c36a">&lt;em&gt;</bpt>* Outcome *<ept id="5e1886b9-62d6-4a57-b161-35145625c36a">&lt;/em&gt;</ept>
Locks until a DHCP lease is recieved.</target>
        </trans-unit>
        <trans-unit id="6c872347-16fb-4a6c-8c10-c33e38aadb22" xml:space="preserve">
          <source>Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</source>
          <target state="new">Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</target>
        </trans-unit>
        <trans-unit id="d8fc1a04-55e2-4b25-b39d-fc98292bcf36" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="573b23a1-e0e0-4baa-9e05-4d1069176574" xml:space="preserve">
          <source>Managing credentials with PowerShell</source>
          <target state="new">Managing credentials with PowerShell</target>
        </trans-unit>
        <trans-unit id="5fb80c31-9bcf-4ba8-a220-4fd38029e0ed" xml:space="preserve">
          <source>Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</source>
          <target state="new">Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</target>
        </trans-unit>
        <trans-unit id="bf7a6d5e-0baa-4dcd-b2ce-fae679b7ab42" xml:space="preserve">
          <source>There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</source>
          <target state="new">There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</target>
        </trans-unit>
        <trans-unit id="caa0aa25-880a-4a45-bf89-a30d7a37817d" xml:space="preserve">
          <source>The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</source>
          <target state="new">The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</target>
        </trans-unit>
        <trans-unit id="0c9372e7-8f7b-4ed7-8050-a2dda7d42705" xml:space="preserve">
          <source>This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</source>
          <target state="new">This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</target>
        </trans-unit>
        <trans-unit id="31b15559-9272-4698-8908-ddd1dcde4040" xml:space="preserve">
          <source>In this scenario you can just run <bpt id="da4c3db2-fead-4327-84f7-2dc0834fefd6">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="da4c3db2-fead-4327-84f7-2dc0834fefd6">&lt;/code&gt;</ept>.</source>
          <target state="new">In this scenario you can just run <bpt id="da4c3db2-fead-4327-84f7-2dc0834fefd6">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="da4c3db2-fead-4327-84f7-2dc0834fefd6">&lt;/code&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="e742717b-2b6b-4a24-bea5-21d2552ada82" xml:space="preserve">
          <source>Let PowerShell prompt you for credentials  
If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</source>
          <target state="new">Let PowerShell prompt you for credentials  
If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</target>
        </trans-unit>
        <trans-unit id="d0cd8c84-8fc8-44ef-8f7b-c30ea16e11a4" xml:space="preserve">
          <source>Store credentials in a variable for reuse.</source>
          <target state="new">Store credentials in a variable for reuse.</target>
        </trans-unit>
        <trans-unit id="30a66802-356c-47aa-9b0f-1a1bcecbc0a6" xml:space="preserve">
          <source>Running a simple command like this:</source>
          <target state="new">Running a simple command like this:</target>
        </trans-unit>
        <trans-unit id="137faaa0-d0dc-4078-ba4f-b06f74a34ba2" xml:space="preserve">
          <source>  And then running something like this:</source>
          <target state="new">  And then running something like this:</target>
        </trans-unit>
        <trans-unit id="cbebbe01-5d45-453f-b3fd-41558745d7a7" xml:space="preserve">
          <source>  Will mean that you only get prompted once per script/PowerShell session for your credentials.</source>
          <target state="new">  Will mean that you only get prompted once per script/PowerShell session for your credentials.</target>
        </trans-unit>
        <trans-unit id="42411212-083a-4662-a5d1-4ff623391dd1" xml:space="preserve">
          <source>Code your credentials into your scripts.</source>
          <target state="new">Code your credentials into your scripts.</target>
        </trans-unit>
        <trans-unit id="a6e40cd9-4160-433c-8f0f-f286ecfdec09" xml:space="preserve">
          <source><bpt id="14979f15-ebd6-4ad6-8b2d-8aa1e6781188">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="14979f15-ebd6-4ad6-8b2d-8aa1e6781188">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="14979f15-ebd6-4ad6-8b2d-8aa1e6781188">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="14979f15-ebd6-4ad6-8b2d-8aa1e6781188">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="3a03f992-3268-4e4a-82d3-3b59626ac452" xml:space="preserve">
          <source>Warning:  _Do not do this in a production system.</source>
          <target state="new">Warning:  _Do not do this in a production system.</target>
        </trans-unit>
        <trans-unit id="bb164934-8a9f-4e1b-baec-ceb5bb264ba2" xml:space="preserve">
          <source>Do not do this with real passwords._</source>
          <target state="new">Do not do this with real passwords._</target>
        </trans-unit>
        <trans-unit id="aae5cc9e-df5b-4168-8031-62817ef89768" xml:space="preserve">
          <source>You can hand craft a PSCredential object with some code like this:</source>
          <target state="new">You can hand craft a PSCredential object with some code like this:</target>
        </trans-unit>
        <trans-unit id="5060fa8d-4a66-4991-a4c4-5d20c10706d3" xml:space="preserve">
          <source>Grossly insecure - but useful for testing.</source>
          <target state="new">Grossly insecure - but useful for testing.</target>
        </trans-unit>
        <trans-unit id="7522ae8c-c19b-4eda-8de0-f717403b7ba3" xml:space="preserve">
          <source>Now you get no prompts at all in this session.</source>
          <target state="new">Now you get no prompts at all in this session.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>