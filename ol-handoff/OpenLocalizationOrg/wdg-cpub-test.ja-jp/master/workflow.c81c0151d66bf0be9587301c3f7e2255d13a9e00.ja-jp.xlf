<?xml version="1.0" encoding="utf-8"?>
<xliff srcLang="en-us" trgLang="ja-jp" version="2.0" xmlns="urn:oasis:names:tc:xliff:document:2.0" xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">6a21b92dfe46a00d5243914c41459fe2cf4569b1</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <group id="101">
        <unit id="101">
          <segment state="initial" id="101">
            <source xml:space="preserve">Team Workflow</source>
            <target xml:space="preserve">Team Workflow</target>
          </segment>
        </unit>
        <unit id="102">
          <segment state="initial" id="102">
            <source xml:space="preserve">This page describes the Open Publishing workflow in use by the WDG Partner &amp; ITPro CPub team.</source>
            <target xml:space="preserve">This page describes the Open Publishing workflow in use by the WDG Partner &amp; ITPro CPub team.</target>
          </segment>
        </unit>
        <unit id="103">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="103">
            <source xml:space="preserve">It is based on <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">GitHub Flow</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>, as described by Scott Chacon.</source>
            <target xml:space="preserve">It is based on <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">GitHub Flow</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>, as described by Scott Chacon.</target>
          </segment>
        </unit>
        <unit id="104">
          <segment state="initial" id="104">
            <source xml:space="preserve">The golden rule of the workflow is that anything in the master branch is deployable.</source>
            <target xml:space="preserve">The golden rule of the workflow is that anything in the master branch is deployable.</target>
          </segment>
        </unit>
        <unit id="105">
          <segment state="initial" id="105">
            <source xml:space="preserve">To make the changes on the GitHub site:</source>
            <target xml:space="preserve">To make the changes on the GitHub site:</target>
          </segment>
        </unit>
        <unit id="106">
          <segment state="initial" id="106">
            <source xml:space="preserve">Open the file you want to change and click the pencil icon to enter edit mode.</source>
            <target xml:space="preserve">Open the file you want to change and click the pencil icon to enter edit mode.</target>
          </segment>
        </unit>
        <unit id="107">
          <segment state="initial" id="107">
            <source xml:space="preserve">Make your changes.</source>
            <target xml:space="preserve">Make your changes.</target>
          </segment>
        </unit>
        <unit id="108">
          <segment state="initial" id="108">
            <source xml:space="preserve">When you're done, scroll to the bottom of the page and choose Create a new branch.</source>
            <target xml:space="preserve">When you're done, scroll to the bottom of the page and choose Create a new branch.</target>
          </segment>
        </unit>
        <unit id="109">
          <segment state="initial" id="109">
            <source xml:space="preserve">Change the name of the new branch, if you like.</source>
            <target xml:space="preserve">Change the name of the new branch, if you like.</target>
          </segment>
        </unit>
        <unit id="110">
          <segment state="initial" id="110">
            <source xml:space="preserve">Then click Propose file change.</source>
            <target xml:space="preserve">Then click Propose file change.</target>
          </segment>
        </unit>
        <unit id="111">
          <segment state="initial" id="111">
            <source xml:space="preserve">At this point, you can continue adding more changes to your new branch, or you can immediately submit a pull request.</source>
            <target xml:space="preserve">At this point, you can continue adding more changes to your new branch, or you can immediately submit a pull request.</target>
          </segment>
        </unit>
        <unit id="112">
          <segment state="initial" id="112">
            <source xml:space="preserve">To make the changes in a local clone, use the following steps:</source>
            <target xml:space="preserve">To make the changes in a local clone, use the following steps:</target>
          </segment>
        </unit>
        <unit id="113">
          <segment state="initial" id="113">
            <source xml:space="preserve">To work on something new, create a descriptively named branch off of master (ie: enterprise-wdk):</source>
            <target xml:space="preserve">To work on something new, create a descriptively named branch off of master (ie: enterprise-wdk):</target>
          </segment>
        </unit>
        <unit id="114">
          <segment state="initial" id="114">
            <source xml:space="preserve">Commit to that branch locally and regularly push your work to the same named branch on the server.</source>
            <target xml:space="preserve">Commit to that branch locally and regularly push your work to the same named branch on the server.</target>
          </segment>
        </unit>
        <unit id="115">
          <segment state="initial" id="115">
            <source xml:space="preserve">Iterate with others (tech review, edit) in your branch.</source>
            <target xml:space="preserve">Iterate with others (tech review, edit) in your branch.</target>
          </segment>
        </unit>
        <unit id="116">
          <segment state="initial" id="116">
            <source xml:space="preserve">When the branch is ready to publish, open a pull request.</source>
            <target xml:space="preserve">When the branch is ready to publish, open a pull request.</target>
          </segment>
        </unit>
        <unit id="117">
          <segment state="initial" id="117">
            <source xml:space="preserve">A peer or admin repo reviews the changes and merges the content into master.</source>
            <target xml:space="preserve">A peer or admin repo reviews the changes and merges the content into master.</target>
          </segment>
        </unit>
        <unit id="118">
          <segment state="initial" id="118">
            <source xml:space="preserve">Once it is in master, a repo admin may deploy to the live branch at any time.</source>
            <target xml:space="preserve">Once it is in master, a repo admin may deploy to the live branch at any time.</target>
          </segment>
        </unit>
      </group>
    </group>
  </file>
</xliff>