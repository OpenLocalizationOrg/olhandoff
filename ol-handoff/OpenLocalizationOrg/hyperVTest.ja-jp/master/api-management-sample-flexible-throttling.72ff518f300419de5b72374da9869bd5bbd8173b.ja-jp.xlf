<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-US" target-language="ja-jp">
    <body>
      <group id="main" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Advanced request throttling with Azure API Management</source>
          <target state="new">Advanced request throttling with Azure API Management</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to create and apply flexible quota and rate limiting policies with Azure API Management.</source>
          <target state="new">Learn how to create and apply flexible quota and rate limiting policies with Azure API Management.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Advanced request throttling with Azure API Management</source>
          <target state="new">Advanced request throttling with Azure API Management</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Being able to throttle incoming requests is a key role of Azure API Management.</source>
          <target state="new">Being able to throttle incoming requests is a key role of Azure API Management.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Either by controlling the rate of requests or the total requests/data transferred, API Management allows API providers to protect their APIs from abuse and create value for different API product tiers.</source>
          <target state="new">Either by controlling the rate of requests or the total requests/data transferred, API Management allows API providers to protect their APIs from abuse and create value for different API product tiers.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Product based throttling</source>
          <target state="new">Product based throttling</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>To date, the rate throttling capabilities have been limited to being scoped to a particular Product subscription (essentially a key), defined in the API Management publisher portal.</source>
          <target state="new">To date, the rate throttling capabilities have been limited to being scoped to a particular Product subscription (essentially a key), defined in the API Management publisher portal.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This is useful for the API provider to apply limits on the developers who have signed up to use their API, however, it does not help, for example, in throttling individual end-users of the API.</source>
          <target state="new">This is useful for the API provider to apply limits on the developers who have signed up to use their API, however, it does not help, for example, in throttling individual end-users of the API.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>It is possible that for single user of the developer's application to consume the entire quota and then prevent other customers of the developer from being able to use the application.</source>
          <target state="new">It is possible that for single user of the developer's application to consume the entire quota and then prevent other customers of the developer from being able to use the application.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Also, several customers who might generate a high volume of requests may limit access to occasional users.</source>
          <target state="new">Also, several customers who might generate a high volume of requests may limit access to occasional users.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Custom key based throttling</source>
          <target state="new">Custom key based throttling</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The new <bpt id="p1">[</bpt>rate-limit-by-key<ept id="p1">](https://msdn.microsoft.com/library/azure/dn894078.aspx#LimitCallRateByKey)</ept><ph id="ph2" /> and <bpt id="p2">[</bpt>quota-by-key<ept id="p2">](https://msdn.microsoft.com/library/azure/dn894078.aspx#SetUsageQuotaByKey)</ept><ph id="ph3" /> policies provide a significantly more flexible solution to traffic control.</source>
          <target state="new">The new <bpt id="p1">[</bpt>rate-limit-by-key<ept id="p1">](https://msdn.microsoft.com/library/azure/dn894078.aspx#LimitCallRateByKey)</ept><ph id="ph2" /> and <bpt id="p2">[</bpt>quota-by-key<ept id="p2">](https://msdn.microsoft.com/library/azure/dn894078.aspx#SetUsageQuotaByKey)</ept><ph id="ph3" /> policies provide a significantly more flexible solution to traffic control.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>These new policies allow you to define expressions to identify the keys that will be used to track traffic usage.</source>
          <target state="new">These new policies allow you to define expressions to identify the keys that will be used to track traffic usage.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The way this works is easiest illustrated with an example.</source>
          <target state="new">The way this works is easiest illustrated with an example.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>IP Address throttling</source>
          <target state="new">IP Address throttling</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The following policies restrict a single client IP address to only 10 calls every minute, with a total of 1,000,000 calls and 10,000 kilobytes of bandwidth per month.</source>
          <target state="new">The following policies restrict a single client IP address to only 10 calls every minute, with a total of 1,000,000 calls and 10,000 kilobytes of bandwidth per month.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If all clients on the Internet used a unique IP address, this might be an effective way of limiting usage by user.</source>
          <target state="new">If all clients on the Internet used a unique IP address, this might be an effective way of limiting usage by user.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>However, it is quite likely that multiple users will sharing a single public IP address due to them accessing the Internet via a NAT device.</source>
          <target state="new">However, it is quite likely that multiple users will sharing a single public IP address due to them accessing the Internet via a NAT device.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Despite this, for APIs that allow unauthenticated access the <ph id="ph4">`IpAddress`</ph><ph id="ph5" /> might be the best option.</source>
          <target state="new">Despite this, for APIs that allow unauthenticated access the <ph id="ph4">`IpAddress`</ph><ph id="ph5" /> might be the best option.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>User identity throttling</source>
          <target state="new">User identity throttling</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If an end user is authenticated then a throttling key can be generated based on information that uniquely identifies an that user.</source>
          <target state="new">If an end user is authenticated then a throttling key can be generated based on information that uniquely identifies an that user.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>In this example we extract the Authorization header, convert it to <ph id="ph6">`JWT`</ph><ph id="ph7" /> object and use the subject of the token to identify the user and use that as the rate limiting key.</source>
          <target state="new">In this example we extract the Authorization header, convert it to <ph id="ph6">`JWT`</ph><ph id="ph7" /> object and use the subject of the token to identify the user and use that as the rate limiting key.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If the user identity is stored in the <ph id="ph8">`JWT`</ph><ph id="ph9" /> as one of the other claims then that value could be used in its place.</source>
          <target state="new">If the user identity is stored in the <ph id="ph8">`JWT`</ph><ph id="ph9" /> as one of the other claims then that value could be used in its place.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Combined policies</source>
          <target state="new">Combined policies</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Although the new throttling policies provide more control than the existing throttling policies, there is still value combining both capabilities.</source>
          <target state="new">Although the new throttling policies provide more control than the existing throttling policies, there is still value combining both capabilities.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Throttling by product subscription key (<bpt id="p3">[</bpt>Limit call rate by subscription<ept id="p3">](https://msdn.microsoft.com/library/azure/dn894078.aspx#LimitCallRate)</ept><ph id="ph10" /> and <bpt id="p4">[</bpt>Set usage quota by subscription<ept id="p4">](https://msdn.microsoft.com/library/azure/dn894078.aspx#SetUsageQuota)</ept>) is a great way to enable monetizing of an API by charging based on usage levels.</source>
          <target state="new">Throttling by product subscription key (<bpt id="p3">[</bpt>Limit call rate by subscription<ept id="p3">](https://msdn.microsoft.com/library/azure/dn894078.aspx#LimitCallRate)</ept><ph id="ph10" /> and <bpt id="p4">[</bpt>Set usage quota by subscription<ept id="p4">](https://msdn.microsoft.com/library/azure/dn894078.aspx#SetUsageQuota)</ept>) is a great way to enable monetizing of an API by charging based on usage levels.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The finer grained control of being able to throttle by user is complementary and prevents one user's behavior from degrading the experience of another.</source>
          <target state="new">The finer grained control of being able to throttle by user is complementary and prevents one user's behavior from degrading the experience of another.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Client driven throttling</source>
          <target state="new">Client driven throttling</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>When the throttling key is defined using a <bpt id="p5">[</bpt>policy expression<ept id="p5">](https://msdn.microsoft.com/library/azure/dn910913.aspx)</ept>, then it is the API provider that is choosing how the throttling is scoped.</source>
          <target state="new">When the throttling key is defined using a <bpt id="p5">[</bpt>policy expression<ept id="p5">](https://msdn.microsoft.com/library/azure/dn910913.aspx)</ept>, then it is the API provider that is choosing how the throttling is scoped.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>However, a developer might want to control how they rate limit their own customers.</source>
          <target state="new">However, a developer might want to control how they rate limit their own customers.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This could be enabled by the API provider by introducing a custom header to allow the developer's client application to communicate the key to the API.</source>
          <target state="new">This could be enabled by the API provider by introducing a custom header to allow the developer's client application to communicate the key to the API.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This enables the developer's client application to choose how they want to create the rate limiting key.</source>
          <target state="new">This enables the developer's client application to choose how they want to create the rate limiting key.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>With a little bit of ingenuity a client developer could create their own rate tiers by allocating sets of keys to users and rotating the key usage.</source>
          <target state="new">With a little bit of ingenuity a client developer could create their own rate tiers by allocating sets of keys to users and rotating the key usage.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Summary</source>
          <target state="new">Summary</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Azure API Management provides rate and quote throttling to both protect and add value to your API service.</source>
          <target state="new">Azure API Management provides rate and quote throttling to both protect and add value to your API service.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The new throttling policies with custom scoping rules allow you finer grained control over those policies to enable your customers to build even better applications.</source>
          <target state="new">The new throttling policies with custom scoping rules allow you finer grained control over those policies to enable your customers to build even better applications.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The examples in this article demonstrate the use of these new policies by manufacturing rate limiting keys with client IP addresses, user identity, and client generated values.</source>
          <target state="new">The examples in this article demonstrate the use of these new policies by manufacturing rate limiting keys with client IP addresses, user identity, and client generated values.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>However, there are many other parts of the message that could be used such as user agent, URL path fragments, message size.</source>
          <target state="new">However, there are many other parts of the message that could be used such as user agent, URL path fragments, message size.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Next steps</source>
          <target state="new">Next steps</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Please give us your feedback in the Disqus thread for this topic.</source>
          <target state="new">Please give us your feedback in the Disqus thread for this topic.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>It would be great to hear about other potential key values that have been a logical choice in your scenarios.</source>
          <target state="new">It would be great to hear about other potential key values that have been a logical choice in your scenarios.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Watch a video overview of these policies</source>
          <target state="new">Watch a video overview of these policies</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>For more information on the <bpt id="p6">[</bpt>rate-limit-by-key<ept id="p6">](https://msdn.microsoft.com/library/azure/dn894078.aspx#LimitCallRateByKey)</ept><ph id="ph11" /> and <bpt id="p7">[</bpt>quota-by-key<ept id="p7">](https://msdn.microsoft.com/library/azure/dn894078.aspx#SetUsageQuotaByKey)</ept><ph id="ph12" /> policies covered in this article, please watch the following video.</source>
          <target state="new">For more information on the <bpt id="p6">[</bpt>rate-limit-by-key<ept id="p6">](https://msdn.microsoft.com/library/azure/dn894078.aspx#LimitCallRateByKey)</ept><ph id="ph11" /> and <bpt id="p7">[</bpt>quota-by-key<ept id="p7">](https://msdn.microsoft.com/library/azure/dn894078.aspx#SetUsageQuotaByKey)</ept><ph id="ph12" /> policies covered in this article, please watch the following video.</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">84e0ad6418e0dd707f9bb5dd49d52f78467324dc</xliffext:olfilehash>
  </header>
</xliff>