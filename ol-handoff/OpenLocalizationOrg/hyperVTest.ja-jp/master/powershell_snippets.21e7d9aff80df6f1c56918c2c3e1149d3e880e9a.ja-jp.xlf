<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="ja-jp" original="foo.file" tool-id="2a29a4d3-e779-4e17-9a9a-37048fcf29fd" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="2a29a4d3-e779-4e17-9a9a-37048fcf29fd" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
      <olfilehash xmlns="">a7640c222d084ad8705adf3206cc238fc33ff331</olfilehash>
    </header>
    <body>
      <group id="d794f7c2-bb86-4336-8975-c856c1a354d1">
        <trans-unit id="3c3dc99e-2457-4183-93dd-22e4fa7300c2" xml:space="preserve">
          <source>ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9</source>
          <target state="new">ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9</target>
        </trans-unit>
        <trans-unit id="666ad431-d66f-4b48-a39b-8cd774f67ae6" xml:space="preserve">
          <source>title: PowerShell Snippets</source>
          <target state="new">title: PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="33025340-02e1-479c-9c66-c186a0c81402" xml:space="preserve">
          <source>PowerShell Snippets</source>
          <target state="new">PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="2307f0dc-0601-44ce-9083-66f8bd50482e" xml:space="preserve">
          <source>Adding this sentence to validate the bug 451132 result.</source>
          <target state="new">Adding this sentence to validate the bug 451132 result.</target>
        </trans-unit>
        <trans-unit id="fea98726-8cfb-4ade-b36e-48941e3cb29a" xml:space="preserve">
          <source>PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</source>
          <target state="new">PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</target>
        </trans-unit>
        <trans-unit id="0bfe883b-6b2e-48fb-8ec5-3ffc837f2708" xml:space="preserve">
          <source>All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</source>
          <target state="new">All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</target>
        </trans-unit>
        <trans-unit id="0ec4fea3-eb92-45fc-ac7f-fcc2dfbb1296" xml:space="preserve">
          <source>If you aren't sure if you have the right permissions, type <bpt id="f425c28a-0219-46ac-abb3-a5a3a3a2ffc1">&lt;code&gt;</bpt>Get-VM<ept id="f425c28a-0219-46ac-abb3-a5a3a3a2ffc1">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</source>
          <target state="new">If you aren't sure if you have the right permissions, type <bpt id="f425c28a-0219-46ac-abb3-a5a3a3a2ffc1">&lt;code&gt;</bpt>Get-VM<ept id="f425c28a-0219-46ac-abb3-a5a3a3a2ffc1">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</target>
        </trans-unit>
        <trans-unit id="1d6f8e0c-3274-4643-a1b9-771f1a6834e7" xml:space="preserve">
          <source>PowerShell Direct tools</source>
          <target state="new">PowerShell Direct tools</target>
        </trans-unit>
        <trans-unit id="4c228ecf-1e7a-4406-829f-a1221b251c92" xml:space="preserve">
          <source>All of the scripts and snippets in this section will rely on the following basics.</source>
          <target state="new">All of the scripts and snippets in this section will rely on the following basics.</target>
        </trans-unit>
        <trans-unit id="b4752626-d4ea-4f27-960c-241edc6efa7a" xml:space="preserve">
          <source><bpt id="a2f837e9-1be2-43af-82ff-91a44b5f0ad0">&lt;strong&gt;</bpt>Requirements<ept id="a2f837e9-1be2-43af-82ff-91a44b5f0ad0">&lt;/strong&gt;</ept> :</source>
          <target state="new"><bpt id="a2f837e9-1be2-43af-82ff-91a44b5f0ad0">&lt;strong&gt;</bpt>Requirements<ept id="a2f837e9-1be2-43af-82ff-91a44b5f0ad0">&lt;/strong&gt;</ept> :</target>
        </trans-unit>
        <trans-unit id="4d58af49-b144-4341-bda4-6f6e4fef69d5" xml:space="preserve">
          <source>PowerShell Direct.</source>
          <target state="new">PowerShell Direct.</target>
        </trans-unit>
        <trans-unit id="bac9aa51-53af-43db-8918-07407a85f003" xml:space="preserve">
          <source>Windows 10 guest and host OS.</source>
          <target state="new">Windows 10 guest and host OS.</target>
        </trans-unit>
        <trans-unit id="22bc37e2-8d62-4d75-a0ce-f3d4f3de992d" xml:space="preserve">
          <source><bpt id="fbeec242-a9c6-49ed-b1d0-302e040a4222">&lt;strong&gt;</bpt>Common Variables<ept id="fbeec242-a9c6-49ed-b1d0-302e040a4222">&lt;/strong&gt;</ept> :</source>
          <target state="new"><bpt id="fbeec242-a9c6-49ed-b1d0-302e040a4222">&lt;strong&gt;</bpt>Common Variables<ept id="fbeec242-a9c6-49ed-b1d0-302e040a4222">&lt;/strong&gt;</ept> :</target>
        </trans-unit>
        <trans-unit id="6bfa387d-8f5e-43eb-8fd7-946f980d8425" xml:space="preserve">
          <source><bpt id="abfd1df5-22a4-4897-bc6a-7588da77cc9d">&lt;code&gt;</bpt>$VMName<ept id="abfd1df5-22a4-4897-bc6a-7588da77cc9d">&lt;/code&gt;</ept> -- this is a string with the VMName.</source>
          <target state="new"><bpt id="abfd1df5-22a4-4897-bc6a-7588da77cc9d">&lt;code&gt;</bpt>$VMName<ept id="abfd1df5-22a4-4897-bc6a-7588da77cc9d">&lt;/code&gt;</ept> -- this is a string with the VMName.</target>
        </trans-unit>
        <trans-unit id="027e9f8d-b4f5-4b82-b1ae-842da71a0b5a" xml:space="preserve">
          <source>See a list of available VMs with <bpt id="cf1edb0d-9b47-49de-aaef-3c1701e5439a">&lt;code&gt;</bpt>Get-VM<ept id="cf1edb0d-9b47-49de-aaef-3c1701e5439a">&lt;/code&gt;</ept></source>
          <target state="new">See a list of available VMs with <bpt id="cf1edb0d-9b47-49de-aaef-3c1701e5439a">&lt;code&gt;</bpt>Get-VM<ept id="cf1edb0d-9b47-49de-aaef-3c1701e5439a">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="ff32eb83-8698-4c96-a511-a60dcd2b0e04" xml:space="preserve">
          <source><bpt id="060b21ad-d75e-4b71-8e30-341c1ebad009">&lt;code&gt;</bpt>$cred<ept id="060b21ad-d75e-4b71-8e30-341c1ebad009">&lt;/code&gt;</ept> -- Credential for the guest OS.</source>
          <target state="new"><bpt id="060b21ad-d75e-4b71-8e30-341c1ebad009">&lt;code&gt;</bpt>$cred<ept id="060b21ad-d75e-4b71-8e30-341c1ebad009">&lt;/code&gt;</ept> -- Credential for the guest OS.</target>
        </trans-unit>
        <trans-unit id="e79220f5-84e8-475d-9a65-c3acf86ce7ef" xml:space="preserve">
          <source>Can be populated using <bpt id="83c5f6df-fb86-4606-a135-9af09d4fa2da">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="83c5f6df-fb86-4606-a135-9af09d4fa2da">&lt;/code&gt;</ept></source>
          <target state="new">Can be populated using <bpt id="83c5f6df-fb86-4606-a135-9af09d4fa2da">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="83c5f6df-fb86-4606-a135-9af09d4fa2da">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="6eb00f56-c77f-41ca-b620-2753764edf5d" xml:space="preserve">
          <source>Check if the guest has booted</source>
          <target state="new">Check if the guest has booted</target>
        </trans-unit>
        <trans-unit id="7e92af7a-1d0b-4385-ba5c-3679ae737815" xml:space="preserve">
          <source>Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</source>
          <target state="new">Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</target>
        </trans-unit>
        <trans-unit id="6b88d3cb-61ec-4f8a-806b-79ef1c30e705" xml:space="preserve">
          <source>Use this command to check whether the guest has booted.</source>
          <target state="new">Use this command to check whether the guest has booted.</target>
        </trans-unit>
        <trans-unit id="842c3014-5f53-4903-a57b-c9597908231d" xml:space="preserve">
          <source><bpt id="03642196-b638-42c7-a8e1-4526475221ac">&lt;strong&gt;</bpt>Outcome<ept id="03642196-b638-42c7-a8e1-4526475221ac">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="03642196-b638-42c7-a8e1-4526475221ac">&lt;strong&gt;</bpt>Outcome<ept id="03642196-b638-42c7-a8e1-4526475221ac">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="c08b844c-655f-452a-a30a-218ac300037e" xml:space="preserve">
          <source>Prints a friendly message declaring the state of the guest OS.</source>
          <target state="new">Prints a friendly message declaring the state of the guest OS.</target>
        </trans-unit>
        <trans-unit id="cca1d2d3-0258-405e-a497-85fd1fb047c9" xml:space="preserve">
          <source>Script locking until the guest has booted</source>
          <target state="new">Script locking until the guest has booted</target>
        </trans-unit>
        <trans-unit id="7a318c0f-b298-4a54-9107-a91bd031f01e" xml:space="preserve">
          <source>The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</source>
          <target state="new">The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</target>
        </trans-unit>
        <trans-unit id="b3bdd501-2c11-4cf7-a400-16642691f8e9" xml:space="preserve">
          <source><bpt id="ed0ba14f-032d-4e14-bf0d-d4ef8002f5f9">&lt;strong&gt;</bpt>Outcome<ept id="ed0ba14f-032d-4e14-bf0d-d4ef8002f5f9">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="ed0ba14f-032d-4e14-bf0d-d4ef8002f5f9">&lt;strong&gt;</bpt>Outcome<ept id="ed0ba14f-032d-4e14-bf0d-d4ef8002f5f9">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="800db5e4-2dd1-47a0-a2a7-a59e45aeab24" xml:space="preserve">
          <source>Prints a friendly message and locks until the connection to the VM succeeds.</source>
          <target state="new">Prints a friendly message and locks until the connection to the VM succeeds.</target>
        </trans-unit>
        <trans-unit id="7e180339-29a6-49a5-b870-502f16bb41b5" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="5cabf6f6-f1b8-49ec-a105-d7f5552799d9" xml:space="preserve">
          <source>Script locking until the guest has a network</source>
          <target state="new">Script locking until the guest has a network</target>
        </trans-unit>
        <trans-unit id="79b58047-d589-49b6-8b07-f6b118b927ff" xml:space="preserve">
          <source>With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</source>
          <target state="new">With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</target>
        </trans-unit>
        <trans-unit id="2000f51c-68dc-4094-a479-5448ff89f502" xml:space="preserve">
          <source><bpt id="f25d0946-0f28-44bb-a79f-bed057a42a7c">&lt;em&gt;</bpt>* Outcome *<ept id="f25d0946-0f28-44bb-a79f-bed057a42a7c">&lt;/em&gt;</ept></source>
          <target state="new"><bpt id="f25d0946-0f28-44bb-a79f-bed057a42a7c">&lt;em&gt;</bpt>* Outcome *<ept id="f25d0946-0f28-44bb-a79f-bed057a42a7c">&lt;/em&gt;</ept></target>
        </trans-unit>
        <trans-unit id="3ef1798a-a5b4-420b-9513-85d4fa0d3023" xml:space="preserve">
          <source>Locks until a DHCP lease is recieved.</source>
          <target state="new">Locks until a DHCP lease is recieved.</target>
        </trans-unit>
        <trans-unit id="43702f1d-08ce-4401-909f-ee1ecdab0302" xml:space="preserve">
          <source>Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</source>
          <target state="new">Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</target>
        </trans-unit>
        <trans-unit id="212199cb-88c9-4c96-8da8-d31ff1ff5085" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="37fe0220-af9a-45b5-b43b-347456c74281" xml:space="preserve">
          <source>Managing credentials with PowerShell</source>
          <target state="new">Managing credentials with PowerShell</target>
        </trans-unit>
        <trans-unit id="f3d6f873-41b1-4d7e-a469-1273c816c294" xml:space="preserve">
          <source>Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</source>
          <target state="new">Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</target>
        </trans-unit>
        <trans-unit id="68fa874c-1030-47a8-abfc-6c8b1b16a6a1" xml:space="preserve">
          <source>There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</source>
          <target state="new">There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</target>
        </trans-unit>
        <trans-unit id="1f8097be-c56a-43ad-9427-8de783377809" xml:space="preserve">
          <source>The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</source>
          <target state="new">The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</target>
        </trans-unit>
        <trans-unit id="7ea131c4-a6eb-42c6-825d-6ce9a0479f85" xml:space="preserve">
          <source>This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</source>
          <target state="new">This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</target>
        </trans-unit>
        <trans-unit id="4ab65007-9f31-4e95-afac-ce96cc12ca03" xml:space="preserve">
          <source>In this scenario you can just run <bpt id="faf48d36-096a-4196-99ab-0c25e70dcb28">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="faf48d36-096a-4196-99ab-0c25e70dcb28">&lt;/code&gt;</ept>.</source>
          <target state="new">In this scenario you can just run <bpt id="faf48d36-096a-4196-99ab-0c25e70dcb28">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="faf48d36-096a-4196-99ab-0c25e70dcb28">&lt;/code&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="1b9148d9-7745-49e4-b952-fb51e6798990" xml:space="preserve">
          <source>Let PowerShell prompt you for credentials</source>
          <target state="new">Let PowerShell prompt you for credentials</target>
        </trans-unit>
        <trans-unit id="a91332ac-fd00-46a1-a693-c93d58f74dbd" xml:space="preserve">
          <source>If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</source>
          <target state="new">If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</target>
        </trans-unit>
        <trans-unit id="0d7b2fbc-f9bd-4207-bbc0-13c93a8a5e6c" xml:space="preserve">
          <source>Store credentials in a variable for reuse.</source>
          <target state="new">Store credentials in a variable for reuse.</target>
        </trans-unit>
        <trans-unit id="f410a89b-158a-43e5-afb6-ba6637fcf348" xml:space="preserve">
          <source>Running a simple command like this:</source>
          <target state="new">Running a simple command like this:</target>
        </trans-unit>
        <trans-unit id="b3dee670-4c8e-40d8-bae2-056fac4f0131" xml:space="preserve">
          <source>And then running something like this:</source>
          <target state="new">And then running something like this:</target>
        </trans-unit>
        <trans-unit id="1aeeafb5-9dea-4f96-af26-560e2d0f554b" xml:space="preserve">
          <source>Will mean that you only get prompted once per script/PowerShell session for your credentials.</source>
          <target state="new">Will mean that you only get prompted once per script/PowerShell session for your credentials.</target>
        </trans-unit>
        <trans-unit id="da32c654-a5dc-4174-af6d-4f60a8811e4e" xml:space="preserve">
          <source>Code your credentials into your scripts.</source>
          <target state="new">Code your credentials into your scripts.</target>
        </trans-unit>
        <trans-unit id="ba011f44-ab60-4ebb-8573-b69e63b6215d" xml:space="preserve">
          <source><bpt id="7ad2f1e0-4568-4b1f-a1fb-c3e77244ec7d">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="7ad2f1e0-4568-4b1f-a1fb-c3e77244ec7d">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="7ad2f1e0-4568-4b1f-a1fb-c3e77244ec7d">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="7ad2f1e0-4568-4b1f-a1fb-c3e77244ec7d">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="741fc3dc-3ac9-4cfb-9774-c2978341aad5" xml:space="preserve">
          <source>Warning:  _Do not do this in a production system.</source>
          <target state="new">Warning:  _Do not do this in a production system.</target>
        </trans-unit>
        <trans-unit id="125a9db9-968c-4a77-ba68-132e0bbe9007" xml:space="preserve">
          <source>Do not do this with real passwords._</source>
          <target state="new">Do not do this with real passwords._</target>
        </trans-unit>
        <trans-unit id="570b813a-6e69-406e-9ab7-616c138ae67a" xml:space="preserve">
          <source>You can hand craft a PSCredential object with some code like this:</source>
          <target state="new">You can hand craft a PSCredential object with some code like this:</target>
        </trans-unit>
        <trans-unit id="2b5dbf63-42e3-46f3-9d9d-c90dedab511a" xml:space="preserve">
          <source>Grossly insecure - but useful for testing.</source>
          <target state="new">Grossly insecure - but useful for testing.</target>
        </trans-unit>
        <trans-unit id="4b73f22a-a628-4478-8a2a-e267abce4aff" xml:space="preserve">
          <source>Now you get no prompts at all in this session.</source>
          <target state="new">Now you get no prompts at all in this session.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>