<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="ja-jp" original="foo.file" tool-id="80424d9e-87d8-4f3b-a4fc-8f6a2c161e7b" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="80424d9e-87d8-4f3b-a4fc-8f6a2c161e7b" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
      <olfilehash xmlns="">25ea7bc8b398577cb2916ec833d61c38af812637</olfilehash>
    </header>
    <body>
      <group id="ea5ac34e-f3b0-4f7d-b92f-6a4ff91f3b5e">
        <trans-unit id="f099ef65-86ef-45b8-810f-b9ed33ca50e6" xml:space="preserve">
          <source>Separating Configuration and Environment Data</source>
          <target state="new">Separating Configuration and Environment Data</target>
        </trans-unit>
        <trans-unit id="33e460d4-ddd1-48b4-a593-3eb854d78b6a" xml:space="preserve">
          <source>Applies To: Windows PowerShell 4.0, Windows PowerShell 5.0</source>
          <target state="new">Applies To: Windows PowerShell 4.0, Windows PowerShell 5.0</target>
        </trans-unit>
        <trans-unit id="3b2dfe10-6c2a-4410-91a4-40513c4ef5b3" xml:space="preserve">
          <source>In Windows PowerShell Desired State Configuration (DSC), it is possible to separate configuration data from the logic of your configuration.</source>
          <target state="new">In Windows PowerShell Desired State Configuration (DSC), it is possible to separate configuration data from the logic of your configuration.</target>
        </trans-unit>
        <trans-unit id="e350633a-9080-4c38-8832-325fcfa95040" xml:space="preserve">
          <source>Another way to look at this is to consider the structural configuration (for example, a configuration might require that IIS be installed) as separate from the environmental configuration (that is, whether the situation is a test environment vs. a production one—the node names would be different, but the configuration applied to them would be the same).</source>
          <target state="new">Another way to look at this is to consider the structural configuration (for example, a configuration might require that IIS be installed) as separate from the environmental configuration (that is, whether the situation is a test environment vs. a production one—the node names would be different, but the configuration applied to them would be the same).</target>
        </trans-unit>
        <trans-unit id="124fe0a5-40b1-4a88-8b20-c44b6d4f48f0" xml:space="preserve">
          <source>This has the following advantages:</source>
          <target state="new">This has the following advantages:</target>
        </trans-unit>
        <trans-unit id="a1051320-bbcc-47da-9ea1-ab4f2eb3a55e" xml:space="preserve">
          <source>It allows you to reuse your configuration data for different resources, nodes, and configurations.</source>
          <target state="new">It allows you to reuse your configuration data for different resources, nodes, and configurations.</target>
        </trans-unit>
        <trans-unit id="7e7ee52c-97a5-40a0-8ace-d39f259c7161" xml:space="preserve">
          <source>Configuration logic is more reusable if it does not contain hard-coded data.</source>
          <target state="new">Configuration logic is more reusable if it does not contain hard-coded data.</target>
        </trans-unit>
        <trans-unit id="a0d40fd3-92b8-464b-ac7d-6f619519a04a" xml:space="preserve">
          <source>This is similar to good scripting guidelines for functions.</source>
          <target state="new">This is similar to good scripting guidelines for functions.</target>
        </trans-unit>
        <trans-unit id="5fa56f31-2e8b-4b3d-a3af-81ff20f125e6" xml:space="preserve">
          <source>If some of the data needs to change, you can make the changes in one location, thereby saving time and reducing errors.</source>
          <target state="new">If some of the data needs to change, you can make the changes in one location, thereby saving time and reducing errors.</target>
        </trans-unit>
        <trans-unit id="89274b7d-95ad-4f6b-b5bf-3ad503fdd760" xml:space="preserve">
          <source>Basic concepts and examples</source>
          <target state="new">Basic concepts and examples</target>
        </trans-unit>
        <trans-unit id="a57e8b99-7c09-44a5-a2fa-2ddd81574d7f" xml:space="preserve">
          <source>To specify the environmental part of the configuration, DSC uses the <bpt id="52e071a0-fa02-4755-b1c9-33ac7f79cb88">&lt;strong&gt;</bpt>ConfigurationData<ept id="52e071a0-fa02-4755-b1c9-33ac7f79cb88">&lt;/strong&gt;</ept> parameter, which is a hash table (or it can take a .psd1 file which contains the hash table).</source>
          <target state="new">To specify the environmental part of the configuration, DSC uses the <bpt id="52e071a0-fa02-4755-b1c9-33ac7f79cb88">&lt;strong&gt;</bpt>ConfigurationData<ept id="52e071a0-fa02-4755-b1c9-33ac7f79cb88">&lt;/strong&gt;</ept> parameter, which is a hash table (or it can take a .psd1 file which contains the hash table).</target>
        </trans-unit>
        <trans-unit id="0fa29fd0-e1f7-4017-a870-e7f75c6c231d" xml:space="preserve">
          <source>This hash table must have at least one key <bpt id="e036c4a2-2d1c-4472-a984-498a61a81853">&lt;strong&gt;</bpt>AllNodes<ept id="e036c4a2-2d1c-4472-a984-498a61a81853">&lt;/strong&gt;</ept>, which has a structured value.</source>
          <target state="new">This hash table must have at least one key <bpt id="e036c4a2-2d1c-4472-a984-498a61a81853">&lt;strong&gt;</bpt>AllNodes<ept id="e036c4a2-2d1c-4472-a984-498a61a81853">&lt;/strong&gt;</ept>, which has a structured value.</target>
        </trans-unit>
        <trans-unit id="c8e1a172-f90f-4454-86ee-b19ee921f949" xml:space="preserve">
          <source>For example:</source>
          <target state="new">For example:</target>
        </trans-unit>
        <trans-unit id="4b57005d-2981-492a-abaf-0a97ec63d168" xml:space="preserve">
          <source>Note the AllNodes key, whose value is an array.</source>
          <target state="new">Note the AllNodes key, whose value is an array.</target>
        </trans-unit>
        <trans-unit id="987961ae-fc69-4cad-ab93-c7365f3766b3" xml:space="preserve">
          <source>Each element of this array is also a hash table, which requires NodeName as a key:</source>
          <target state="new">Each element of this array is also a hash table, which requires NodeName as a key:</target>
        </trans-unit>
        <trans-unit id="1fb25384-1138-4570-911c-d0c80f61e3b7" xml:space="preserve">
          <source>Each hash table entry in AllNodes corresponds to configuration data to a node in the configuration.</source>
          <target state="new">Each hash table entry in AllNodes corresponds to configuration data to a node in the configuration.</target>
        </trans-unit>
        <trans-unit id="0cd93c0a-ad71-41bf-9f52-08dbc1a4eb88" xml:space="preserve">
          <source>In addition to the required NodeName key, you can add other keys to the hash table as well, for example:</source>
          <target state="new">In addition to the required NodeName key, you can add other keys to the hash table as well, for example:</target>
        </trans-unit>
        <trans-unit id="f9d8728e-dcfe-49d4-87f1-981d349ff32a" xml:space="preserve">
          <source>DSC offers three special variables to use in the configuration script:</source>
          <target state="new">DSC offers three special variables to use in the configuration script:</target>
        </trans-unit>
        <trans-unit id="14d49fd3-150f-40a9-9915-23cb78aa9994" xml:space="preserve">
          <source><bpt id="2a561ecf-aaa7-4b51-9c62-8a592da6b998">&lt;strong&gt;</bpt>$AllNodes<ept id="2a561ecf-aaa7-4b51-9c62-8a592da6b998">&lt;/strong&gt;</ept>: Refers to all of the nodes.</source>
          <target state="new"><bpt id="2a561ecf-aaa7-4b51-9c62-8a592da6b998">&lt;strong&gt;</bpt>$AllNodes<ept id="2a561ecf-aaa7-4b51-9c62-8a592da6b998">&lt;/strong&gt;</ept>: Refers to all of the nodes.</target>
        </trans-unit>
        <trans-unit id="c83cfdcc-6ca5-4bbc-af14-c6950216db4c" xml:space="preserve">
          <source>You can use filtering with <bpt id="9c942dc0-6c0b-4983-b7d7-c7f892b11cc1">&lt;strong&gt;</bpt>.Where()<ept id="9c942dc0-6c0b-4983-b7d7-c7f892b11cc1">&lt;/strong&gt;</ept> and <bpt id="66369d15-5903-4cf5-8cf1-fc431418a01d">&lt;strong&gt;</bpt>.ForEach()<ept id="66369d15-5903-4cf5-8cf1-fc431418a01d">&lt;/strong&gt;</ept>, so instead of hard-coding node names to select particular nodes for action, you could write something like this to select VM-1 and VM-3 in the above example:</source>
          <target state="new">You can use filtering with <bpt id="9c942dc0-6c0b-4983-b7d7-c7f892b11cc1">&lt;strong&gt;</bpt>.Where()<ept id="9c942dc0-6c0b-4983-b7d7-c7f892b11cc1">&lt;/strong&gt;</ept> and <bpt id="66369d15-5903-4cf5-8cf1-fc431418a01d">&lt;strong&gt;</bpt>.ForEach()<ept id="66369d15-5903-4cf5-8cf1-fc431418a01d">&lt;/strong&gt;</ept>, so instead of hard-coding node names to select particular nodes for action, you could write something like this to select VM-1 and VM-3 in the above example:</target>
        </trans-unit>
        <trans-unit id="a1f21b41-6aba-4779-98d5-a7dd81bf3ef5" xml:space="preserve">
          <source><bpt id="67f1fef7-f113-4057-b2a9-978a82a01b78">&lt;strong&gt;</bpt>$Node<ept id="67f1fef7-f113-4057-b2a9-978a82a01b78">&lt;/strong&gt;</ept>: Once the set of nodes is filtered, you can use $Node to refer to the particular entry.</source>
          <target state="new"><bpt id="67f1fef7-f113-4057-b2a9-978a82a01b78">&lt;strong&gt;</bpt>$Node<ept id="67f1fef7-f113-4057-b2a9-978a82a01b78">&lt;/strong&gt;</ept>: Once the set of nodes is filtered, you can use $Node to refer to the particular entry.</target>
        </trans-unit>
        <trans-unit id="0d422e7e-9eb7-43e3-a82c-5ff77dd6a7f8" xml:space="preserve">
          <source>For example:</source>
          <target state="new">For example:</target>
        </trans-unit>
        <trans-unit id="e2bf9d24-ebed-473d-b7d6-c9de5fe497a9" xml:space="preserve">
          <source>To apply a property to all nodes, you can set NodeName = “*”.</source>
          <target state="new">To apply a property to all nodes, you can set NodeName = “*”.</target>
        </trans-unit>
        <trans-unit id="eb4fef99-52f3-4305-adba-f8bbdedbe310" xml:space="preserve">
          <source>For example, to give every node the LogPath property, you could do this:</source>
          <target state="new">For example, to give every node the LogPath property, you could do this:</target>
        </trans-unit>
        <trans-unit id="92e687db-54ce-4b51-b3e6-5543ae969910" xml:space="preserve">
          <source><bpt id="cd450f36-8a3d-4310-ac4a-8c755ade17be">&lt;strong&gt;</bpt>$ConfigurationData<ept id="cd450f36-8a3d-4310-ac4a-8c755ade17be">&lt;/strong&gt;</ept>: You can use this variable inside a configuration to access the configuration data hash table passed as a parameter.</source>
          <target state="new"><bpt id="cd450f36-8a3d-4310-ac4a-8c755ade17be">&lt;strong&gt;</bpt>$ConfigurationData<ept id="cd450f36-8a3d-4310-ac4a-8c755ade17be">&lt;/strong&gt;</ept>: You can use this variable inside a configuration to access the configuration data hash table passed as a parameter.</target>
        </trans-unit>
        <trans-unit id="cd562ca9-c946-4de3-8677-6d333f6393c1" xml:space="preserve">
          <source>For example:</source>
          <target state="new">For example:</target>
        </trans-unit>
        <trans-unit id="9d8f7095-227b-4c17-aa4a-9fff9c124147" xml:space="preserve">
          <source>You can find a full example included in the <bpt id="4d3cbe7b-82c5-4178-96b7-34630ed69f34CapsExtId1">&lt;linkText&gt;</bpt>xWebAdministration module<ept id="4d3cbe7b-82c5-4178-96b7-34630ed69f34CapsExtId1">&lt;/linkText&gt;</ept><bpt id="4d3cbe7b-82c5-4178-96b7-34630ed69f34CapsExtId2">&lt;title&gt;</bpt><ept id="4d3cbe7b-82c5-4178-96b7-34630ed69f34CapsExtId2">&lt;/title&gt;</ept>.</source>
          <target state="new">You can find a full example included in the <bpt id="4d3cbe7b-82c5-4178-96b7-34630ed69f34CapsExtId1">&lt;linkText&gt;</bpt>xWebAdministration module<ept id="4d3cbe7b-82c5-4178-96b7-34630ed69f34CapsExtId1">&lt;/linkText&gt;</ept><bpt id="4d3cbe7b-82c5-4178-96b7-34630ed69f34CapsExtId2">&lt;title&gt;</bpt><ept id="4d3cbe7b-82c5-4178-96b7-34630ed69f34CapsExtId2">&lt;/title&gt;</ept>.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>