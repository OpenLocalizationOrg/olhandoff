<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-cn" original="1/5/2016 3:28:37 PM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9c9f1da0b560c44c9760583c4193bdf4eaee09f7</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>DSC Package Resource</source>
            <target state="new">DSC Package Resource</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>Applies To: Windows PowerShell 4.0, Windows PowerShell 5.0</source>
            <target state="new">Applies To: Windows PowerShell 4.0, Windows PowerShell 5.0</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>The <bpt id="2">&lt;strong&gt;</bpt>Package<ept id="2">&lt;/strong&gt;</ept> resource in Windows PowerShell Desired State Configuration (DSC) provides a mechanism to install or uninstall packages, such as Windows Installer and setup.exe packages, on a target node.</source>
            <target state="new">The <bpt id="2">&lt;strong&gt;</bpt>Package<ept id="2">&lt;/strong&gt;</ept> resource in Windows PowerShell Desired State Configuration (DSC) provides a mechanism to install or uninstall packages, such as Windows Installer and setup.exe packages, on a target node.</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>Syntax</source>
            <target state="new">Syntax</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>Properties</source>
            <target state="new">Properties</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>Property</source>
            <target state="new">Property</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>Description</source>
            <target state="new">Description</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>Name</source>
            <target state="new">Name</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>Indicates the name of the package for which you want to ensure a specific state.</source>
            <target state="new">Indicates the name of the package for which you want to ensure a specific state.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>Path</source>
            <target state="new">Path</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>Indicates the path where the package resides.</source>
            <target state="new">Indicates the path where the package resides.</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>ProductId</source>
            <target state="new">ProductId</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>Indicates the product ID that uniquely identifies the package.</source>
            <target state="new">Indicates the product ID that uniquely identifies the package.</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>Arguments</source>
            <target state="new">Arguments</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>Lists a string of arguments that will be passed to the package exactly as provided.</source>
            <target state="new">Lists a string of arguments that will be passed to the package exactly as provided.</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>Credential</source>
            <target state="new">Credential</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>Provides access to the package on a remote source.</source>
            <target state="new">Provides access to the package on a remote source.</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>This property is not used to install the package.</source>
            <target state="new">This property is not used to install the package.</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>The package is always installed on the local system.</source>
            <target state="new">The package is always installed on the local system.</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>Ensure</source>
            <target state="new">Ensure</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>Indicates if the package is installed.</source>
            <target state="new">Indicates if the package is installed.</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>Set this property to "Absent" to ensure the package is not installed (or uninstall the package if it is installed).</source>
            <target state="new">Set this property to "Absent" to ensure the package is not installed (or uninstall the package if it is installed).</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>Set it to "Present" (the default value) to ensure the package is installed.</source>
            <target state="new">Set it to "Present" (the default value) to ensure the package is installed.</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>LogPath</source>
            <target state="new">LogPath</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>Indicates the full path where you want the provider to save a log file to install or uninstall the package.</source>
            <target state="new">Indicates the full path where you want the provider to save a log file to install or uninstall the package.</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>DependsOn</source>
            <target state="new">DependsOn</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>Indicates that the configuration of another resource must run before this resource is configured.</source>
            <target state="new">Indicates that the configuration of another resource must run before this resource is configured.</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>For example, if the ID of the resource configuration script block that you want to run first is <bpt id="2">&lt;strong&gt;</bpt>ResourceName<ept id="2">&lt;/strong&gt;</ept> and its type is <bpt id="4">&lt;strong&gt;</bpt>ResourceType<ept id="4">&lt;/strong&gt;</ept>, the syntax for using this property is `DependsOn = "[ResourceType]ResourceName"``.</source>
            <target state="new">For example, if the ID of the resource configuration script block that you want to run first is <bpt id="2">&lt;strong&gt;</bpt>ResourceName<ept id="2">&lt;/strong&gt;</ept> and its type is <bpt id="4">&lt;strong&gt;</bpt>ResourceType<ept id="4">&lt;/strong&gt;</ept>, the syntax for using this property is `DependsOn = "[ResourceType]ResourceName"``.</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>ReturnCode</source>
            <target state="new">ReturnCode</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>Indicates the expected return code.</source>
            <target state="new">Indicates the expected return code.</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>If the actual return code does not match the expected value provided here, the configuration will return an error.</source>
            <target state="new">If the actual return code does not match the expected value provided here, the configuration will return an error.</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>Example</source>
            <target state="new">Example</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>This example runs the .msi installer that is located at the specified path and has the specified product ID.</source>
            <target state="new">This example runs the .msi installer that is located at the specified path and has the specified product ID.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>