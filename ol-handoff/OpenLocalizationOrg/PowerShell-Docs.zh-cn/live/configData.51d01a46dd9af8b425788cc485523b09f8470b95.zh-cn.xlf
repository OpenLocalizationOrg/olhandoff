<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-cn" original="foo.file" tool-id="ab68af9c-507f-4a63-85e3-d6d527dcbe7e" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="ab68af9c-507f-4a63-85e3-d6d527dcbe7e" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
      <olfilehash xmlns="">25ea7bc8b398577cb2916ec833d61c38af812637</olfilehash>
    </header>
    <body>
      <group id="91e856e0-bd4f-44fb-95a5-62f401aa6498">
        <trans-unit id="ca92a6bf-cc6e-4b23-bdad-9c0eddba306c" xml:space="preserve">
          <source>Separating Configuration and Environment Data</source>
          <target state="new">Separating Configuration and Environment Data</target>
        </trans-unit>
        <trans-unit id="39bbfcaf-cf1e-459b-8b07-f34fee1fce8c" xml:space="preserve">
          <source>Applies To: Windows PowerShell 4.0, Windows PowerShell 5.0</source>
          <target state="new">Applies To: Windows PowerShell 4.0, Windows PowerShell 5.0</target>
        </trans-unit>
        <trans-unit id="d2503e89-a173-4e8f-b30a-a1103174fb3c" xml:space="preserve">
          <source>In Windows PowerShell Desired State Configuration (DSC), it is possible to separate configuration data from the logic of your configuration.</source>
          <target state="new">In Windows PowerShell Desired State Configuration (DSC), it is possible to separate configuration data from the logic of your configuration.</target>
        </trans-unit>
        <trans-unit id="76999ef4-d54a-480c-8e6c-cdd4ea89217d" xml:space="preserve">
          <source>Another way to look at this is to consider the structural configuration (for example, a configuration might require that IIS be installed) as separate from the environmental configuration (that is, whether the situation is a test environment vs. a production one—the node names would be different, but the configuration applied to them would be the same).</source>
          <target state="new">Another way to look at this is to consider the structural configuration (for example, a configuration might require that IIS be installed) as separate from the environmental configuration (that is, whether the situation is a test environment vs. a production one—the node names would be different, but the configuration applied to them would be the same).</target>
        </trans-unit>
        <trans-unit id="86cd23e9-cf6c-4c2c-a3f2-7a1cd8ddf539" xml:space="preserve">
          <source>This has the following advantages:</source>
          <target state="new">This has the following advantages:</target>
        </trans-unit>
        <trans-unit id="4b74173d-72cd-4554-82a4-3e7f0104eac1" xml:space="preserve">
          <source>It allows you to reuse your configuration data for different resources, nodes, and configurations.</source>
          <target state="new">It allows you to reuse your configuration data for different resources, nodes, and configurations.</target>
        </trans-unit>
        <trans-unit id="8dbdf92d-4af9-4b4f-a59c-0e2684440bb7" xml:space="preserve">
          <source>Configuration logic is more reusable if it does not contain hard-coded data.</source>
          <target state="new">Configuration logic is more reusable if it does not contain hard-coded data.</target>
        </trans-unit>
        <trans-unit id="9d1818e6-781f-4ddb-ba75-2c16b367e058" xml:space="preserve">
          <source>This is similar to good scripting guidelines for functions.</source>
          <target state="new">This is similar to good scripting guidelines for functions.</target>
        </trans-unit>
        <trans-unit id="8cf60a44-3847-4c54-b586-5fcbbd8b2761" xml:space="preserve">
          <source>If some of the data needs to change, you can make the changes in one location, thereby saving time and reducing errors.</source>
          <target state="new">If some of the data needs to change, you can make the changes in one location, thereby saving time and reducing errors.</target>
        </trans-unit>
        <trans-unit id="a67b8d50-1c70-4f25-987e-99886f6cf03d" xml:space="preserve">
          <source>Basic concepts and examples</source>
          <target state="new">Basic concepts and examples</target>
        </trans-unit>
        <trans-unit id="afcc0d30-b679-4198-8a32-a9add06aec21" xml:space="preserve">
          <source>To specify the environmental part of the configuration, DSC uses the <bpt id="48f933a9-5b72-4014-b614-c8d30dc010d8">&lt;strong&gt;</bpt>ConfigurationData<ept id="48f933a9-5b72-4014-b614-c8d30dc010d8">&lt;/strong&gt;</ept> parameter, which is a hash table (or it can take a .psd1 file which contains the hash table).</source>
          <target state="new">To specify the environmental part of the configuration, DSC uses the <bpt id="48f933a9-5b72-4014-b614-c8d30dc010d8">&lt;strong&gt;</bpt>ConfigurationData<ept id="48f933a9-5b72-4014-b614-c8d30dc010d8">&lt;/strong&gt;</ept> parameter, which is a hash table (or it can take a .psd1 file which contains the hash table).</target>
        </trans-unit>
        <trans-unit id="2f5aef0a-6c23-4b1e-8f79-ba2bacaab0a1" xml:space="preserve">
          <source>This hash table must have at least one key <bpt id="a61520c5-40f9-47be-99dc-41aa601b5d92">&lt;strong&gt;</bpt>AllNodes<ept id="a61520c5-40f9-47be-99dc-41aa601b5d92">&lt;/strong&gt;</ept>, which has a structured value.</source>
          <target state="new">This hash table must have at least one key <bpt id="a61520c5-40f9-47be-99dc-41aa601b5d92">&lt;strong&gt;</bpt>AllNodes<ept id="a61520c5-40f9-47be-99dc-41aa601b5d92">&lt;/strong&gt;</ept>, which has a structured value.</target>
        </trans-unit>
        <trans-unit id="7ef91097-cec6-4863-b131-25aa3582d13f" xml:space="preserve">
          <source>For example:</source>
          <target state="new">For example:</target>
        </trans-unit>
        <trans-unit id="d63181ab-9d5b-47af-b74a-ae383d19bbfc" xml:space="preserve">
          <source>Note the AllNodes key, whose value is an array.</source>
          <target state="new">Note the AllNodes key, whose value is an array.</target>
        </trans-unit>
        <trans-unit id="14be881f-e8c4-4a7f-bd00-a385c17a1a15" xml:space="preserve">
          <source>Each element of this array is also a hash table, which requires NodeName as a key:</source>
          <target state="new">Each element of this array is also a hash table, which requires NodeName as a key:</target>
        </trans-unit>
        <trans-unit id="6818c940-fb35-442a-8560-3fbd92d3fbb2" xml:space="preserve">
          <source>Each hash table entry in AllNodes corresponds to configuration data to a node in the configuration.</source>
          <target state="new">Each hash table entry in AllNodes corresponds to configuration data to a node in the configuration.</target>
        </trans-unit>
        <trans-unit id="ec6a0e52-cab4-4920-a0be-0bf1821647cb" xml:space="preserve">
          <source>In addition to the required NodeName key, you can add other keys to the hash table as well, for example:</source>
          <target state="new">In addition to the required NodeName key, you can add other keys to the hash table as well, for example:</target>
        </trans-unit>
        <trans-unit id="b9834a4f-14d7-405d-93a7-7e48b22f0856" xml:space="preserve">
          <source>DSC offers three special variables to use in the configuration script:</source>
          <target state="new">DSC offers three special variables to use in the configuration script:</target>
        </trans-unit>
        <trans-unit id="c81659eb-c25f-43b7-ba5d-e23a645c5076" xml:space="preserve">
          <source><bpt id="7423a8a4-b7f2-4ab8-a6ae-9859ed9bab52">&lt;strong&gt;</bpt>$AllNodes<ept id="7423a8a4-b7f2-4ab8-a6ae-9859ed9bab52">&lt;/strong&gt;</ept>: Refers to all of the nodes.</source>
          <target state="new"><bpt id="7423a8a4-b7f2-4ab8-a6ae-9859ed9bab52">&lt;strong&gt;</bpt>$AllNodes<ept id="7423a8a4-b7f2-4ab8-a6ae-9859ed9bab52">&lt;/strong&gt;</ept>: Refers to all of the nodes.</target>
        </trans-unit>
        <trans-unit id="d991f654-baeb-4844-9d56-84b7d3a5df4d" xml:space="preserve">
          <source>You can use filtering with <bpt id="05846b1f-8717-4d6d-921d-d16767b72fbd">&lt;strong&gt;</bpt>.Where()<ept id="05846b1f-8717-4d6d-921d-d16767b72fbd">&lt;/strong&gt;</ept> and <bpt id="c8c8adab-11cf-4643-87a5-4f058b257213">&lt;strong&gt;</bpt>.ForEach()<ept id="c8c8adab-11cf-4643-87a5-4f058b257213">&lt;/strong&gt;</ept>, so instead of hard-coding node names to select particular nodes for action, you could write something like this to select VM-1 and VM-3 in the above example:</source>
          <target state="new">You can use filtering with <bpt id="05846b1f-8717-4d6d-921d-d16767b72fbd">&lt;strong&gt;</bpt>.Where()<ept id="05846b1f-8717-4d6d-921d-d16767b72fbd">&lt;/strong&gt;</ept> and <bpt id="c8c8adab-11cf-4643-87a5-4f058b257213">&lt;strong&gt;</bpt>.ForEach()<ept id="c8c8adab-11cf-4643-87a5-4f058b257213">&lt;/strong&gt;</ept>, so instead of hard-coding node names to select particular nodes for action, you could write something like this to select VM-1 and VM-3 in the above example:</target>
        </trans-unit>
        <trans-unit id="087b4098-3536-416f-b44a-267d5a76b989" xml:space="preserve">
          <source><bpt id="b9bb33f0-5510-425e-a18a-7b9582b045a1">&lt;strong&gt;</bpt>$Node<ept id="b9bb33f0-5510-425e-a18a-7b9582b045a1">&lt;/strong&gt;</ept>: Once the set of nodes is filtered, you can use $Node to refer to the particular entry.</source>
          <target state="new"><bpt id="b9bb33f0-5510-425e-a18a-7b9582b045a1">&lt;strong&gt;</bpt>$Node<ept id="b9bb33f0-5510-425e-a18a-7b9582b045a1">&lt;/strong&gt;</ept>: Once the set of nodes is filtered, you can use $Node to refer to the particular entry.</target>
        </trans-unit>
        <trans-unit id="eac43443-08f9-407a-a9bd-4b74ba2a3a4c" xml:space="preserve">
          <source>For example:</source>
          <target state="new">For example:</target>
        </trans-unit>
        <trans-unit id="a3d6c10a-c72f-4fc5-b573-a1c364329f0c" xml:space="preserve">
          <source>To apply a property to all nodes, you can set NodeName = “*”.</source>
          <target state="new">To apply a property to all nodes, you can set NodeName = “*”.</target>
        </trans-unit>
        <trans-unit id="9405b845-9703-4593-9952-32980ddcc9f7" xml:space="preserve">
          <source>For example, to give every node the LogPath property, you could do this:</source>
          <target state="new">For example, to give every node the LogPath property, you could do this:</target>
        </trans-unit>
        <trans-unit id="1dc9521a-09af-47f2-90b1-cc03b6066296" xml:space="preserve">
          <source><bpt id="1730bbfd-4b30-4e3e-b2d2-d753d8624f36">&lt;strong&gt;</bpt>$ConfigurationData<ept id="1730bbfd-4b30-4e3e-b2d2-d753d8624f36">&lt;/strong&gt;</ept>: You can use this variable inside a configuration to access the configuration data hash table passed as a parameter.</source>
          <target state="new"><bpt id="1730bbfd-4b30-4e3e-b2d2-d753d8624f36">&lt;strong&gt;</bpt>$ConfigurationData<ept id="1730bbfd-4b30-4e3e-b2d2-d753d8624f36">&lt;/strong&gt;</ept>: You can use this variable inside a configuration to access the configuration data hash table passed as a parameter.</target>
        </trans-unit>
        <trans-unit id="2238cccd-6eb4-401f-85ca-c22cf91b9664" xml:space="preserve">
          <source>For example:</source>
          <target state="new">For example:</target>
        </trans-unit>
        <trans-unit id="0fd54af1-26b5-4315-b079-7512018e29f3" xml:space="preserve">
          <source>You can find a full example included in the <bpt id="cd5dedcb-ecf4-4a9f-bf89-8fef2c157704CapsExtId1">&lt;linkText&gt;</bpt>xWebAdministration module<ept id="cd5dedcb-ecf4-4a9f-bf89-8fef2c157704CapsExtId1">&lt;/linkText&gt;</ept><bpt id="cd5dedcb-ecf4-4a9f-bf89-8fef2c157704CapsExtId2">&lt;title&gt;</bpt><ept id="cd5dedcb-ecf4-4a9f-bf89-8fef2c157704CapsExtId2">&lt;/title&gt;</ept>.</source>
          <target state="new">You can find a full example included in the <bpt id="cd5dedcb-ecf4-4a9f-bf89-8fef2c157704CapsExtId1">&lt;linkText&gt;</bpt>xWebAdministration module<ept id="cd5dedcb-ecf4-4a9f-bf89-8fef2c157704CapsExtId1">&lt;/linkText&gt;</ept><bpt id="cd5dedcb-ecf4-4a9f-bf89-8fef2c157704CapsExtId2">&lt;title&gt;</bpt><ept id="cd5dedcb-ecf4-4a9f-bf89-8fef2c157704CapsExtId2">&lt;/title&gt;</ept>.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>