<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="ko-kr">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">acomdc_hi</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8d2f63b09170266c96a385f297c11abc420d76f4</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-708c90d" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Tutorial - Get started with the Azure Batch .NET library | Microsoft Azure</source>
          <target state="new">Tutorial - Get started with the Azure Batch .NET library | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn the basic concepts of Azure Batch and how to develop for the Batch service with a simple scenario</source>
          <target state="new">Learn the basic concepts of Azure Batch and how to develop for the Batch service with a simple scenario</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Get started with the Azure Batch library for .NET</source>
          <target state="new">Get started with the Azure Batch library for .NET</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Learn the basics of <bpt id="p1">[</bpt>Azure Batch<ph id="ph1">][</ph>azure_batch<ept id="p1">]</ept> and the <bpt id="p2">[</bpt>Batch .NET<ph id="ph2">][</ph>net_api<ept id="p2">]</ept> library in this article as we discuss a C# sample application step by step.</source>
          <target state="new">Learn the basics of <bpt id="p1">[</bpt>Azure Batch<ph id="ph1">][</ph>azure_batch<ept id="p1">]</ept> and the <bpt id="p2">[</bpt>Batch .NET<ph id="ph2">][</ph>net_api<ept id="p2">]</ept> library in this article as we discuss a C# sample application step by step.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>We'll look at how this sample application leverages the Batch service to process a parallel workload in the cloud, as well as how it interacts with <bpt id="p1">[</bpt>Azure Storage<ept id="p1">](../storage/storage-introduction.md)</ept> for file staging and retrieval.</source>
          <target state="new">We'll look at how this sample application leverages the Batch service to process a parallel workload in the cloud, as well as how it interacts with <bpt id="p1">[</bpt>Azure Storage<ept id="p1">](../storage/storage-introduction.md)</ept> for file staging and retrieval.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>You'll learn common Batch application workflow techniques.</source>
          <target state="new">You'll learn common Batch application workflow techniques.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>You'll also gain a base understanding of the major components of Batch, such as jobs, tasks, pools, and compute nodes.</source>
          <target state="new">You'll also gain a base understanding of the major components of Batch, such as jobs, tasks, pools, and compute nodes.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Batch solution workflow (basic)</source>
          <target state="new">Batch solution workflow (basic)</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="new">Prerequisites</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This article assumes that you have a working knowledge of C# and Visual Studio.</source>
          <target state="new">This article assumes that you have a working knowledge of C# and Visual Studio.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>It also assumes that you're able to satisfy the account creation requirements that are specified below for Azure and the Batch and Storage services.</source>
          <target state="new">It also assumes that you're able to satisfy the account creation requirements that are specified below for Azure and the Batch and Storage services.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Accounts</source>
          <target state="new">Accounts</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Azure account<ept id="p1">**</ept>: If you don't already have an Azure subscription, <bpt id="p2">[</bpt>create a free Azure account<ph id="ph1">][</ph>azure_free_account<ept id="p2">]</ept>.</source>
          <target state="new"><bpt id="p1">**</bpt>Azure account<ept id="p1">**</ept>: If you don't already have an Azure subscription, <bpt id="p2">[</bpt>create a free Azure account<ph id="ph1">][</ph>azure_free_account<ept id="p2">]</ept>.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Batch account<ept id="p1">**</ept>: Once you have an Azure subscription, <bpt id="p2">[</bpt>create an Azure Batch account<ept id="p2">](batch-account-create-portal.md)</ept>.</source>
          <target state="new"><bpt id="p1">**</bpt>Batch account<ept id="p1">**</ept>: Once you have an Azure subscription, <bpt id="p2">[</bpt>create an Azure Batch account<ept id="p2">](batch-account-create-portal.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Storage account<ept id="p1">**</ept>: See <bpt id="p2">[</bpt>Create a storage account<ept id="p2">](../storage/storage-create-storage-account.md#create-a-storage-account)</ept> in <bpt id="p3">[</bpt>About Azure storage accounts<ept id="p3">](../storage/storage-create-storage-account.md)</ept>.</source>
          <target state="new"><bpt id="p1">**</bpt>Storage account<ept id="p1">**</ept>: See <bpt id="p2">[</bpt>Create a storage account<ept id="p2">](../storage/storage-create-storage-account.md#create-a-storage-account)</ept> in <bpt id="p3">[</bpt>About Azure storage accounts<ept id="p3">](../storage/storage-create-storage-account.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Visual Studio</source>
          <target state="new">Visual Studio</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You must have <bpt id="p1">**</bpt>Visual Studio 2013<ept id="p1">**</ept> or <bpt id="p2">**</bpt>Visual Studio 2015<ept id="p2">**</ept> to build the sample project.</source>
          <target state="new">You must have <bpt id="p1">**</bpt>Visual Studio 2013<ept id="p1">**</ept> or <bpt id="p2">**</bpt>Visual Studio 2015<ept id="p2">**</ept> to build the sample project.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You can find free and trial versions of Visual Studio in the <bpt id="p1">[</bpt>overview of Visual Studio 2015 products<ph id="ph1">][</ph>visual_studio<ept id="p1">]</ept>.</source>
          <target state="new">You can find free and trial versions of Visual Studio in the <bpt id="p1">[</bpt>overview of Visual Studio 2015 products<ph id="ph1">][</ph>visual_studio<ept id="p1">]</ept>.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>DotNetTutorial<ept id="p1">*</ept> code sample</source>
          <target state="new"><bpt id="p1">*</bpt>DotNetTutorial<ept id="p1">*</ept> code sample</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>DotNetTutorial<ph id="ph1">][</ph>github_dotnettutorial<ept id="p1">]</ept> sample is one of the many code samples found in the <bpt id="p2">[</bpt>azure-batch-samples<ph id="ph2">][</ph>github_samples<ept id="p2">]</ept> repository on GitHub.</source>
          <target state="new">The <bpt id="p1">[</bpt>DotNetTutorial<ph id="ph1">][</ph>github_dotnettutorial<ept id="p1">]</ept> sample is one of the many code samples found in the <bpt id="p2">[</bpt>azure-batch-samples<ph id="ph2">][</ph>github_samples<ept id="p2">]</ept> repository on GitHub.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You can download the sample by clicking the <bpt id="p1">**</bpt>Download ZIP<ept id="p1">**</ept> button on the repository home page, or by clicking the <bpt id="p2">[</bpt>azure-batch-samples-master.zip<ph id="ph1">][</ph>github_samples_zip<ept id="p2">]</ept> direct download link.</source>
          <target state="new">You can download the sample by clicking the <bpt id="p1">**</bpt>Download ZIP<ept id="p1">**</ept> button on the repository home page, or by clicking the <bpt id="p2">[</bpt>azure-batch-samples-master.zip<ph id="ph1">][</ph>github_samples_zip<ept id="p2">]</ept> direct download link.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Once you've extracted the contents of the ZIP file, you will find the solution in the following folder:</source>
          <target state="new">Once you've extracted the contents of the ZIP file, you will find the solution in the following folder:</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Azure Batch Explorer (optional)</source>
          <target state="new">Azure Batch Explorer (optional)</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>Azure Batch Explorer<ph id="ph1">][</ph>github_batchexplorer<ept id="p1">]</ept> is a free utility that is included in the <bpt id="p2">[</bpt>azure-batch-samples<ph id="ph2">][</ph>github_samples<ept id="p2">]</ept> repository on GitHub.</source>
          <target state="new">The <bpt id="p1">[</bpt>Azure Batch Explorer<ph id="ph1">][</ph>github_batchexplorer<ept id="p1">]</ept> is a free utility that is included in the <bpt id="p2">[</bpt>azure-batch-samples<ph id="ph2">][</ph>github_samples<ept id="p2">]</ept> repository on GitHub.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>While the Batch Explorer is not required to complete this tutorial, we highly recommend it for use in the debugging and administration of entities in your Batch account.</source>
          <target state="new">While the Batch Explorer is not required to complete this tutorial, we highly recommend it for use in the debugging and administration of entities in your Batch account.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>You can read about an older version of the Batch Explorer in the <bpt id="p1">[</bpt>Azure Batch Explorer sample walkthrough<ph id="ph1">][</ph>batch_explorer_blog<ept id="p1">]</ept> blog post.</source>
          <target state="new">You can read about an older version of the Batch Explorer in the <bpt id="p1">[</bpt>Azure Batch Explorer sample walkthrough<ph id="ph1">][</ph>batch_explorer_blog<ept id="p1">]</ept> blog post.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>DotNetTutorial sample project overview</source>
          <target state="new">DotNetTutorial sample project overview</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>DotNetTutorial<ept id="p1">*</ept> code sample is a Visual Studio 2013 solution that consists of two projects: <bpt id="p2">**</bpt>DotNetTutorial<ept id="p2">**</ept> and <bpt id="p3">**</bpt>TaskApplication<ept id="p3">**</ept>.</source>
          <target state="new">The <bpt id="p1">*</bpt>DotNetTutorial<ept id="p1">*</ept> code sample is a Visual Studio 2013 solution that consists of two projects: <bpt id="p2">**</bpt>DotNetTutorial<ept id="p2">**</ept> and <bpt id="p3">**</bpt>TaskApplication<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>DotNetTutorial<ept id="p1">**</ept> is the client application that interacts with the Batch and Storage services to execute a parallel workload on compute nodes (virtual machines).</source>
          <target state="new"><bpt id="p1">**</bpt>DotNetTutorial<ept id="p1">**</ept> is the client application that interacts with the Batch and Storage services to execute a parallel workload on compute nodes (virtual machines).</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>DotNetTutorial runs on your local workstation.</source>
          <target state="new">DotNetTutorial runs on your local workstation.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>TaskApplication<ept id="p1">**</ept> is the program that runs on compute nodes in Azure to perform the actual work.</source>
          <target state="new"><bpt id="p1">**</bpt>TaskApplication<ept id="p1">**</ept> is the program that runs on compute nodes in Azure to perform the actual work.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>In the sample, <ph id="ph1">`TaskApplication.exe`</ph> parses the text in a file downloaded from Azure Storage (the input file).</source>
          <target state="new">In the sample, <ph id="ph1">`TaskApplication.exe`</ph> parses the text in a file downloaded from Azure Storage (the input file).</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Then it produces a text file (the output file) that contains a list of the top three words that appear in the input file.</source>
          <target state="new">Then it produces a text file (the output file) that contains a list of the top three words that appear in the input file.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>After it creates the output file, TaskApplication uploads the file to Azure Storage.</source>
          <target state="new">After it creates the output file, TaskApplication uploads the file to Azure Storage.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This makes it available to the client application for download.</source>
          <target state="new">This makes it available to the client application for download.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>TaskApplication runs in parallel on multiple compute nodes in the Batch service.</source>
          <target state="new">TaskApplication runs in parallel on multiple compute nodes in the Batch service.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The following diagram illustrates the primary operations that are performed by the client application, <bpt id="p1">*</bpt>DotNetTutorial<ept id="p1">*</ept>, and the application that is executed by the tasks, <bpt id="p2">*</bpt>TaskApplication<ept id="p2">*</ept>.</source>
          <target state="new">The following diagram illustrates the primary operations that are performed by the client application, <bpt id="p1">*</bpt>DotNetTutorial<ept id="p1">*</ept>, and the application that is executed by the tasks, <bpt id="p2">*</bpt>TaskApplication<ept id="p2">*</ept>.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This basic workflow is typical of many compute solutions that are created with Batch.</source>
          <target state="new">This basic workflow is typical of many compute solutions that are created with Batch.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>While it does not demonstrate every feature available in the Batch service, nearly every Batch scenario will include similar processes.</source>
          <target state="new">While it does not demonstrate every feature available in the Batch service, nearly every Batch scenario will include similar processes.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Batch example workflow</source>
          <target state="new">Batch example workflow</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Step 1.</source>
          <target state="new">Step 1.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Create <bpt id="p1">**</bpt>containers<ept id="p1">**</ept> in Azure Blob Storage.</source>
          <target state="new">Create <bpt id="p1">**</bpt>containers<ept id="p1">**</ept> in Azure Blob Storage.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Step 2.</source>
          <target state="new">Step 2.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Upload task application files and input files to containers.</source>
          <target state="new">Upload task application files and input files to containers.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Step 3.</source>
          <target state="new">Step 3.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Create a Batch <bpt id="p1">**</bpt>pool<ept id="p1">**</ept>.</source>
          <target state="new">Create a Batch <bpt id="p1">**</bpt>pool<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;<bpt id="p1">**</bpt>3a.<ept id="p1">**</ept></source>
          <target state="new">&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;<bpt id="p1">**</bpt>3a.<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The pool <bpt id="p1">**</bpt>StartTask<ept id="p1">**</ept> downloads the task binary files (TaskApplication) to nodes as they join the pool.</source>
          <target state="new">The pool <bpt id="p1">**</bpt>StartTask<ept id="p1">**</ept> downloads the task binary files (TaskApplication) to nodes as they join the pool.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Step 4.</source>
          <target state="new">Step 4.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Create a Batch <bpt id="p1">**</bpt>job<ept id="p1">**</ept>.</source>
          <target state="new">Create a Batch <bpt id="p1">**</bpt>job<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Step 5.</source>
          <target state="new">Step 5.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Add <bpt id="p1">**</bpt>tasks<ept id="p1">**</ept> to the job.</source>
          <target state="new">Add <bpt id="p1">**</bpt>tasks<ept id="p1">**</ept> to the job.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;<bpt id="p1">**</bpt>5a.<ept id="p1">**</ept></source>
          <target state="new">&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;<bpt id="p1">**</bpt>5a.<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The tasks are scheduled to execute on nodes.</source>
          <target state="new">The tasks are scheduled to execute on nodes.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;<bpt id="p1">**</bpt>5b.<ept id="p1">**</ept></source>
          <target state="new">&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;<bpt id="p1">**</bpt>5b.<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Each task downloads its input data from Azure Storage, then begins execution.</source>
          <target state="new">Each task downloads its input data from Azure Storage, then begins execution.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Step 6.</source>
          <target state="new">Step 6.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Monitor tasks.</source>
          <target state="new">Monitor tasks.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;<bpt id="p1">**</bpt>6a.<ept id="p1">**</ept></source>
          <target state="new">&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;<bpt id="p1">**</bpt>6a.<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>As tasks are completed, they upload their output data to Azure Storage.</source>
          <target state="new">As tasks are completed, they upload their output data to Azure Storage.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Step 7.</source>
          <target state="new">Step 7.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Download task output from Storage.</source>
          <target state="new">Download task output from Storage.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>As mentioned, not every Batch solution will perform these exact steps, and may include many more, but the <bpt id="p1">*</bpt>DotNetTutorial<ept id="p1">*</ept> sample application demonstrates common processes found in a Batch solution.</source>
          <target state="new">As mentioned, not every Batch solution will perform these exact steps, and may include many more, but the <bpt id="p1">*</bpt>DotNetTutorial<ept id="p1">*</ept> sample application demonstrates common processes found in a Batch solution.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Build the <bpt id="p1">*</bpt>DotNetTutorial<ept id="p1">*</ept> sample project</source>
          <target state="new">Build the <bpt id="p1">*</bpt>DotNetTutorial<ept id="p1">*</ept> sample project</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Before you can successfully run the sample, you must specify both Batch and Storage account credentials in the <bpt id="p1">*</bpt>DotNetTutorial<ept id="p1">*</ept> project's <ph id="ph1">`Program.cs`</ph> file.</source>
          <target state="new">Before you can successfully run the sample, you must specify both Batch and Storage account credentials in the <bpt id="p1">*</bpt>DotNetTutorial<ept id="p1">*</ept> project's <ph id="ph1">`Program.cs`</ph> file.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>If you have not done so already, open the solution in Visual Studio by double-clicking on the <ph id="ph1">`DotNetTutorial.sln`</ph> solution file.</source>
          <target state="new">If you have not done so already, open the solution in Visual Studio by double-clicking on the <ph id="ph1">`DotNetTutorial.sln`</ph> solution file.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Or open it from within Visual Studio by using the <bpt id="p1">**</bpt>File &gt; Open &gt; Project/Solution<ept id="p1">**</ept> menu.</source>
          <target state="new">Or open it from within Visual Studio by using the <bpt id="p1">**</bpt>File &gt; Open &gt; Project/Solution<ept id="p1">**</ept> menu.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Open <ph id="ph1">`Program.cs`</ph> within the <bpt id="p1">*</bpt>DotNetTutorial<ept id="p1">*</ept> project.</source>
          <target state="new">Open <ph id="ph1">`Program.cs`</ph> within the <bpt id="p1">*</bpt>DotNetTutorial<ept id="p1">*</ept> project.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Then add your credentials as specified near the top of the file:</source>
          <target state="new">Then add your credentials as specified near the top of the file:</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>You can find your Batch and Storage account credentials within the account blade of each service in the <bpt id="p1">[</bpt>Azure portal<ph id="ph1">][</ph>azure_portal<ept id="p1">]</ept>:</source>
          <target state="new">You can find your Batch and Storage account credentials within the account blade of each service in the <bpt id="p1">[</bpt>Azure portal<ph id="ph1">][</ph>azure_portal<ept id="p1">]</ept>:</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Batch credentials in the portal</source>
          <target state="new">Batch credentials in the portal</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Storage credentials in the portal</source>
          <target state="new">Storage credentials in the portal</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Now that you've updated the project with your credentials, right-click the solution in Solution Explorer and click <bpt id="p1">**</bpt>Build Solution<ept id="p1">**</ept>.</source>
          <target state="new">Now that you've updated the project with your credentials, right-click the solution in Solution Explorer and click <bpt id="p1">**</bpt>Build Solution<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Confirm the restoration of any NuGet packages, if you're prompted.</source>
          <target state="new">Confirm the restoration of any NuGet packages, if you're prompted.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.TIP]</ph> If the NuGet packages are not automatically restored, or if you see errors about a failure to restore the packages, ensure that you have the <bpt id="p1">[</bpt>NuGet Package Manager<ph id="ph2">][</ph>nuget_packagemgr<ept id="p1">]</ept> installed.</source>
          <target state="new"><ph id="ph1">[AZURE.TIP]</ph> If the NuGet packages are not automatically restored, or if you see errors about a failure to restore the packages, ensure that you have the <bpt id="p1">[</bpt>NuGet Package Manager<ph id="ph2">][</ph>nuget_packagemgr<ept id="p1">]</ept> installed.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Then enable the download of missing packages.</source>
          <target state="new">Then enable the download of missing packages.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Enabling Package Restore During Build<ph id="ph1">][</ph>nuget_restore<ept id="p1">]</ept> to enable package download.</source>
          <target state="new">See <bpt id="p1">[</bpt>Enabling Package Restore During Build<ph id="ph1">][</ph>nuget_restore<ept id="p1">]</ept> to enable package download.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>In the following sections, we break down the sample application into the steps that it performs to process a workload in the Batch service, and discuss those steps in detail.</source>
          <target state="new">In the following sections, we break down the sample application into the steps that it performs to process a workload in the Batch service, and discuss those steps in detail.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>We encourage you to refer to the open solution in Visual Studio while you work your way through the rest of this article, since not every line of code in the sample is discussed.</source>
          <target state="new">We encourage you to refer to the open solution in Visual Studio while you work your way through the rest of this article, since not every line of code in the sample is discussed.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Navigate to the top of the <ph id="ph1">`MainAsync`</ph> method in the <bpt id="p1">*</bpt>DotNetTutorial<ept id="p1">*</ept> project's <ph id="ph2">`Program.cs`</ph> file to start with Step 1.</source>
          <target state="new">Navigate to the top of the <ph id="ph1">`MainAsync`</ph> method in the <bpt id="p1">*</bpt>DotNetTutorial<ept id="p1">*</ept> project's <ph id="ph2">`Program.cs`</ph> file to start with Step 1.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Each step below then roughly follows the progression of method calls in <ph id="ph1">`MainAsync`</ph>.</source>
          <target state="new">Each step below then roughly follows the progression of method calls in <ph id="ph1">`MainAsync`</ph>.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Step 1: Create Storage containers</source>
          <target state="new">Step 1: Create Storage containers</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Create containers in Azure Storage</source>
          <target state="new">Create containers in Azure Storage</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Batch includes built-in support for interacting with Azure Storage.</source>
          <target state="new">Batch includes built-in support for interacting with Azure Storage.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Containers in your Storage account will provide the files needed by the tasks that run in your Batch account.</source>
          <target state="new">Containers in your Storage account will provide the files needed by the tasks that run in your Batch account.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The containers also provide a place to store the output data that the tasks produce.</source>
          <target state="new">The containers also provide a place to store the output data that the tasks produce.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The first thing the <bpt id="p1">*</bpt>DotNetTutorial<ept id="p1">*</ept> client application does is create three containers in <bpt id="p2">[</bpt>Azure Blob Storage<ept id="p2">](../storage/storage-introduction.md)</ept>:</source>
          <target state="new">The first thing the <bpt id="p1">*</bpt>DotNetTutorial<ept id="p1">*</ept> client application does is create three containers in <bpt id="p2">[</bpt>Azure Blob Storage<ept id="p2">](../storage/storage-introduction.md)</ept>:</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>application<ept id="p1">**</ept>: This container will store the application run by the tasks, as well as any of its dependencies, such as DLLs.</source>
          <target state="new"><bpt id="p1">**</bpt>application<ept id="p1">**</ept>: This container will store the application run by the tasks, as well as any of its dependencies, such as DLLs.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>input<ept id="p1">**</ept>: Tasks will download the data files to process from the <bpt id="p2">*</bpt>input<ept id="p2">*</ept> container.</source>
          <target state="new"><bpt id="p1">**</bpt>input<ept id="p1">**</ept>: Tasks will download the data files to process from the <bpt id="p2">*</bpt>input<ept id="p2">*</ept> container.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>output<ept id="p1">**</ept>: When tasks complete input file processing, they will upload the results to the <bpt id="p2">*</bpt>output<ept id="p2">*</ept> container.</source>
          <target state="new"><bpt id="p1">**</bpt>output<ept id="p1">**</ept>: When tasks complete input file processing, they will upload the results to the <bpt id="p2">*</bpt>output<ept id="p2">*</ept> container.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>In order to interact with a Storage account and create containers, we use the <bpt id="p1">[</bpt>Azure Storage Client Library for .NET<ph id="ph1">][</ph>net_api_storage<ept id="p1">]</ept>.</source>
          <target state="new">In order to interact with a Storage account and create containers, we use the <bpt id="p1">[</bpt>Azure Storage Client Library for .NET<ph id="ph1">][</ph>net_api_storage<ept id="p1">]</ept>.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>We create a reference to the account with <bpt id="p1">[</bpt>CloudStorageAccount<ph id="ph1">][</ph>net_cloudstorageaccount<ept id="p1">]</ept>, and from that create a <bpt id="p2">[</bpt>CloudBlobClient<ph id="ph2">][</ph>net_cloudblobclient<ept id="p2">]</ept>:</source>
          <target state="new">We create a reference to the account with <bpt id="p1">[</bpt>CloudStorageAccount<ph id="ph1">][</ph>net_cloudstorageaccount<ept id="p1">]</ept>, and from that create a <bpt id="p2">[</bpt>CloudBlobClient<ph id="ph2">][</ph>net_cloudblobclient<ept id="p2">]</ept>:</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>We use the <ph id="ph1">`blobClient`</ph> reference throughout the application and pass it as a parameter to a number of methods.</source>
          <target state="new">We use the <ph id="ph1">`blobClient`</ph> reference throughout the application and pass it as a parameter to a number of methods.</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>An example of this is in the code block that immediately follows the above, where we call <ph id="ph1">`CreateContainerIfNotExistAsync`</ph> to actually create the containers.</source>
          <target state="new">An example of this is in the code block that immediately follows the above, where we call <ph id="ph1">`CreateContainerIfNotExistAsync`</ph> to actually create the containers.</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Once the containers have been created, the application can now upload the files that will be used by the tasks.</source>
          <target state="new">Once the containers have been created, the application can now upload the files that will be used by the tasks.</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.TIP]</ph> <bpt id="p1">[</bpt>How to use Blob Storage from .NET<ept id="p1">](../storage/storage-dotnet-how-to-use-blobs.md)</ept> provides a good overview of working with Azure Storage containers and blobs.</source>
          <target state="new"><ph id="ph1">[AZURE.TIP]</ph> <bpt id="p1">[</bpt>How to use Blob Storage from .NET<ept id="p1">](../storage/storage-dotnet-how-to-use-blobs.md)</ept> provides a good overview of working with Azure Storage containers and blobs.</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>It should be near the top of your reading list as you start working with Batch.</source>
          <target state="new">It should be near the top of your reading list as you start working with Batch.</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Step 2: Upload task application and data files</source>
          <target state="new">Step 2: Upload task application and data files</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Upload task application and input (data) files to containers</source>
          <target state="new">Upload task application and input (data) files to containers</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>In the file upload operation, <bpt id="p1">*</bpt>DotNetTutorial<ept id="p1">*</ept> first defines collections of <bpt id="p2">**</bpt>application<ept id="p2">**</ept> and <bpt id="p3">**</bpt>input<ept id="p3">**</ept> file paths as they exist on the local machine.</source>
          <target state="new">In the file upload operation, <bpt id="p1">*</bpt>DotNetTutorial<ept id="p1">*</ept> first defines collections of <bpt id="p2">**</bpt>application<ept id="p2">**</ept> and <bpt id="p3">**</bpt>input<ept id="p3">**</ept> file paths as they exist on the local machine.</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Then it uploads these files to the containers that you created in the previous step.</source>
          <target state="new">Then it uploads these files to the containers that you created in the previous step.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>There are two methods in <ph id="ph1">`Program.cs`</ph> that are involved in the upload process:</source>
          <target state="new">There are two methods in <ph id="ph1">`Program.cs`</ph> that are involved in the upload process:</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`UploadFilesToContainerAsync`</ph>: This method returns a collection of <bpt id="p1">[</bpt>ResourceFile<ph id="ph2">][</ph>net_resourcefile<ept id="p1">]</ept> objects (discussed below) and internally calls <ph id="ph3">`UploadFileToContainerAsync`</ph> to upload each file that is passed in the <bpt id="p2">*</bpt>filePaths<ept id="p2">*</ept> parameter.</source>
          <target state="new"><ph id="ph1">`UploadFilesToContainerAsync`</ph>: This method returns a collection of <bpt id="p1">[</bpt>ResourceFile<ph id="ph2">][</ph>net_resourcefile<ept id="p1">]</ept> objects (discussed below) and internally calls <ph id="ph3">`UploadFileToContainerAsync`</ph> to upload each file that is passed in the <bpt id="p2">*</bpt>filePaths<ept id="p2">*</ept> parameter.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`UploadFileToContainerAsync`</ph>: This is the method that actually performs the file upload and creates the <bpt id="p1">[</bpt>ResourceFile<ph id="ph2">][</ph>net_resourcefile<ept id="p1">]</ept> objects.</source>
          <target state="new"><ph id="ph1">`UploadFileToContainerAsync`</ph>: This is the method that actually performs the file upload and creates the <bpt id="p1">[</bpt>ResourceFile<ph id="ph2">][</ph>net_resourcefile<ept id="p1">]</ept> objects.</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>After uploading the file, it obtains a shared access signature (SAS) for the file and returns a ResourceFile object that represents it.</source>
          <target state="new">After uploading the file, it obtains a shared access signature (SAS) for the file and returns a ResourceFile object that represents it.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Shared access signatures are also discussed below.</source>
          <target state="new">Shared access signatures are also discussed below.</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>ResourceFiles</source>
          <target state="new">ResourceFiles</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">[</bpt>ResourceFile<ph id="ph1">][</ph>net_resourcefile<ept id="p1">]</ept> provides tasks in Batch with the URL to a file in Azure Storage that will be downloaded to a compute node before that task is run.</source>
          <target state="new">A <bpt id="p1">[</bpt>ResourceFile<ph id="ph1">][</ph>net_resourcefile<ept id="p1">]</ept> provides tasks in Batch with the URL to a file in Azure Storage that will be downloaded to a compute node before that task is run.</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>ResourceFile.BlobSource<ph id="ph1">][</ph>net_resourcefile_blobsource<ept id="p1">]</ept> property specifies the full URL of the file as it exists in Azure Storage.</source>
          <target state="new">The <bpt id="p1">[</bpt>ResourceFile.BlobSource<ph id="ph1">][</ph>net_resourcefile_blobsource<ept id="p1">]</ept> property specifies the full URL of the file as it exists in Azure Storage.</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The URL may also include a shared access signature (SAS) that provides secure access to the file.</source>
          <target state="new">The URL may also include a shared access signature (SAS) that provides secure access to the file.</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Most tasks types within Batch .NET include a <bpt id="p1">*</bpt>ResourceFiles<ept id="p1">*</ept> property, including:</source>
          <target state="new">Most tasks types within Batch .NET include a <bpt id="p1">*</bpt>ResourceFiles<ept id="p1">*</ept> property, including:</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>CloudTask<ph id="ph1">][</ph>net_task</source>
          <target state="new">CloudTask<ph id="ph1">][</ph>net_task</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>StartTask<ph id="ph1">][</ph>net_pool_starttask</source>
          <target state="new">StartTask<ph id="ph1">][</ph>net_pool_starttask</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>JobPreparationTask<ph id="ph1">][</ph>net_jobpreptask</source>
          <target state="new">JobPreparationTask<ph id="ph1">][</ph>net_jobpreptask</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>JobReleaseTask<ph id="ph1">][</ph>net_jobreltask</source>
          <target state="new">JobReleaseTask<ph id="ph1">][</ph>net_jobreltask</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The DotNetTutorial sample application does not use the JobPreparationTask or JobReleaseTask task types, but you can read more about them in <bpt id="p1">[</bpt>Run job preparation and completion tasks on Azure Batch compute nodes<ept id="p1">](batch-job-prep-release.md)</ept>.</source>
          <target state="new">The DotNetTutorial sample application does not use the JobPreparationTask or JobReleaseTask task types, but you can read more about them in <bpt id="p1">[</bpt>Run job preparation and completion tasks on Azure Batch compute nodes<ept id="p1">](batch-job-prep-release.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Shared access signature (SAS)</source>
          <target state="new">Shared access signature (SAS)</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Shared access signatures are strings which--when included as part of a URL--provide secure access to containers and blobs in Azure Storage.</source>
          <target state="new">Shared access signatures are strings which--when included as part of a URL--provide secure access to containers and blobs in Azure Storage.</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The DotNetTutorial application uses both blob and container shared access signature URLs, and demonstrates how to obtain these shared access signature strings from the Storage service.</source>
          <target state="new">The DotNetTutorial application uses both blob and container shared access signature URLs, and demonstrates how to obtain these shared access signature strings from the Storage service.</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Blob shared access signatures<ept id="p1">**</ept>: The pool's StartTask in DotNetTutorial uses blob shared access signatures when it downloads the application binaries and input data files from Storage (see Step #3 below).</source>
          <target state="new"><bpt id="p1">**</bpt>Blob shared access signatures<ept id="p1">**</ept>: The pool's StartTask in DotNetTutorial uses blob shared access signatures when it downloads the application binaries and input data files from Storage (see Step #3 below).</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`UploadFileToContainerAsync`</ph> method in DotNetTutorial's <ph id="ph2">`Program.cs`</ph> contains the code that obtains each blob's shared access signature.</source>
          <target state="new">The <ph id="ph1">`UploadFileToContainerAsync`</ph> method in DotNetTutorial's <ph id="ph2">`Program.cs`</ph> contains the code that obtains each blob's shared access signature.</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>It does so by calling <bpt id="p1">[</bpt>CloudBlob.GetSharedAccessSignature<ph id="ph1">][</ph>net_sas_blob<ept id="p1">]</ept>.</source>
          <target state="new">It does so by calling <bpt id="p1">[</bpt>CloudBlob.GetSharedAccessSignature<ph id="ph1">][</ph>net_sas_blob<ept id="p1">]</ept>.</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Container shared access signatures<ept id="p1">**</ept>: As each task finishes its work on the compute node, it uploads its output file to the <bpt id="p2">*</bpt>output<ept id="p2">*</ept> container in Azure Storage.</source>
          <target state="new"><bpt id="p1">**</bpt>Container shared access signatures<ept id="p1">**</ept>: As each task finishes its work on the compute node, it uploads its output file to the <bpt id="p2">*</bpt>output<ept id="p2">*</ept> container in Azure Storage.</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>To do so, TaskApplication uses a container shared access signature that provides write access to the container as part of the path when it uploads the file.</source>
          <target state="new">To do so, TaskApplication uses a container shared access signature that provides write access to the container as part of the path when it uploads the file.</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Obtaining the container shared access signature is done in a similar fashion as when obtaining the blob shared access signature.</source>
          <target state="new">Obtaining the container shared access signature is done in a similar fashion as when obtaining the blob shared access signature.</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>In DotNetTutorial, you will find that the <ph id="ph1">`GetContainerSasUrl`</ph> helper method calls <bpt id="p1">[</bpt>CloudBlobContainer.GetSharedAccessSignature<ph id="ph2">][</ph>net_sas_container<ept id="p1">]</ept> to do so.</source>
          <target state="new">In DotNetTutorial, you will find that the <ph id="ph1">`GetContainerSasUrl`</ph> helper method calls <bpt id="p1">[</bpt>CloudBlobContainer.GetSharedAccessSignature<ph id="ph2">][</ph>net_sas_container<ept id="p1">]</ept> to do so.</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>You'll read more about how TaskApplication uses the container shared access signature in "Step 6: Monitor Tasks."</source>
          <target state="new">You'll read more about how TaskApplication uses the container shared access signature in "Step 6: Monitor Tasks."</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.TIP]</ph> Check out the two-part series on shared access signatures, <bpt id="p1">[</bpt>Part 1: Understanding the shared access signature (SAS) model<ept id="p1">](../storage/storage-dotnet-shared-access-signature-part-1.md)</ept> and <bpt id="p2">[</bpt>Part 2: Create and use a shared access signature (SAS) with the Blob service<ept id="p2">](../storage/storage-dotnet-shared-access-signature-part-2.md)</ept>, to learn more about providing secure access to data in your Storage account.</source>
          <target state="new"><ph id="ph1">[AZURE.TIP]</ph> Check out the two-part series on shared access signatures, <bpt id="p1">[</bpt>Part 1: Understanding the shared access signature (SAS) model<ept id="p1">](../storage/storage-dotnet-shared-access-signature-part-1.md)</ept> and <bpt id="p2">[</bpt>Part 2: Create and use a shared access signature (SAS) with the Blob service<ept id="p2">](../storage/storage-dotnet-shared-access-signature-part-2.md)</ept>, to learn more about providing secure access to data in your Storage account.</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Step 3: Create Batch pool</source>
          <target state="new">Step 3: Create Batch pool</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Create a Batch pool</source>
          <target state="new">Create a Batch pool</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>After it uploads the application and data files to the Storage account, <bpt id="p1">*</bpt>DotNetTutorial<ept id="p1">*</ept> starts its interaction with the Batch service by using the Batch .NET library.</source>
          <target state="new">After it uploads the application and data files to the Storage account, <bpt id="p1">*</bpt>DotNetTutorial<ept id="p1">*</ept> starts its interaction with the Batch service by using the Batch .NET library.</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>To do so, a <bpt id="p1">[</bpt>BatchClient<ph id="ph1">][</ph>net_batchclient<ept id="p1">]</ept> is first created:</source>
          <target state="new">To do so, a <bpt id="p1">[</bpt>BatchClient<ph id="ph1">][</ph>net_batchclient<ept id="p1">]</ept> is first created:</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Next, a pool of compute nodes is created in the Batch account with a call to <ph id="ph1">`CreatePoolAsync`</ph>.</source>
          <target state="new">Next, a pool of compute nodes is created in the Batch account with a call to <ph id="ph1">`CreatePoolAsync`</ph>.</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`CreatePoolAsync`</ph> uses the <bpt id="p1">[</bpt>BatchClient.PoolOperations.CreatePool<ph id="ph2">][</ph>net_pool_create<ept id="p1">]</ept> method to actually create a pool in the Batch service.</source>
          <target state="new"><ph id="ph1">`CreatePoolAsync`</ph> uses the <bpt id="p1">[</bpt>BatchClient.PoolOperations.CreatePool<ph id="ph2">][</ph>net_pool_create<ept id="p1">]</ept> method to actually create a pool in the Batch service.</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>When you create a pool with <bpt id="p1">[</bpt>CreatePool<ph id="ph1">][</ph>net_pool_create<ept id="p1">]</ept>, you specify a number of parameters such as the number of compute nodes, the <bpt id="p2">[</bpt>size of the nodes<ept id="p2">](../cloud-services/cloud-services-sizes-specs.md)</ept>, and the nodes' operating system.</source>
          <target state="new">When you create a pool with <bpt id="p1">[</bpt>CreatePool<ph id="ph1">][</ph>net_pool_create<ept id="p1">]</ept>, you specify a number of parameters such as the number of compute nodes, the <bpt id="p2">[</bpt>size of the nodes<ept id="p2">](../cloud-services/cloud-services-sizes-specs.md)</ept>, and the nodes' operating system.</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">*</bpt>DotNetTutorial<ept id="p1">*</ept>, we use <bpt id="p2">[</bpt>CloudServiceConfiguration<ph id="ph1">][</ph>net_cloudserviceconfiguration<ept id="p2">]</ept> to specify Windows Server 2012 R2 from <bpt id="p3">[</bpt>Cloud Services<ept id="p3">](../cloud-services/cloud-services-guestos-update-matrix.md)</ept>.</source>
          <target state="new">In <bpt id="p1">*</bpt>DotNetTutorial<ept id="p1">*</ept>, we use <bpt id="p2">[</bpt>CloudServiceConfiguration<ph id="ph1">][</ph>net_cloudserviceconfiguration<ept id="p2">]</ept> to specify Windows Server 2012 R2 from <bpt id="p3">[</bpt>Cloud Services<ept id="p3">](../cloud-services/cloud-services-guestos-update-matrix.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>However, by specifying a <bpt id="p1">[</bpt>VirtualMachineConfiguration<ph id="ph1">][</ph>net_virtualmachineconfiguration<ept id="p1">]</ept> instead, you can create pools of nodes created from Marketplace images, which includes both Windows and Linux images--see <bpt id="p2">[</bpt>Introducing Linux support on Azure Batch<ph id="ph2">][</ph>blog_linux<ept id="p2">]</ept> for more information.</source>
          <target state="new">However, by specifying a <bpt id="p1">[</bpt>VirtualMachineConfiguration<ph id="ph1">][</ph>net_virtualmachineconfiguration<ept id="p1">]</ept> instead, you can create pools of nodes created from Marketplace images, which includes both Windows and Linux images--see <bpt id="p2">[</bpt>Introducing Linux support on Azure Batch<ph id="ph2">][</ph>blog_linux<ept id="p2">]</ept> for more information.</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.IMPORTANT]</ph> You are charged for compute resources in Batch.</source>
          <target state="new"><ph id="ph1">[AZURE.IMPORTANT]</ph> You are charged for compute resources in Batch.</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>To minimize costs, you can lower <ph id="ph1">`targetDedicated`</ph> to 1 before you run the sample.</source>
          <target state="new">To minimize costs, you can lower <ph id="ph1">`targetDedicated`</ph> to 1 before you run the sample.</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Along with these physical node properties, you may also specify a <bpt id="p1">[</bpt>StartTask<ph id="ph1">][</ph>net_pool_starttask<ept id="p1">]</ept> for the pool.</source>
          <target state="new">Along with these physical node properties, you may also specify a <bpt id="p1">[</bpt>StartTask<ph id="ph1">][</ph>net_pool_starttask<ept id="p1">]</ept> for the pool.</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The StartTask will execute on each node as that node joins the pool, as well as each time a node is restarted.</source>
          <target state="new">The StartTask will execute on each node as that node joins the pool, as well as each time a node is restarted.</target>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The StartTask is especially useful for installing applications on compute nodes prior to the execution of tasks.</source>
          <target state="new">The StartTask is especially useful for installing applications on compute nodes prior to the execution of tasks.</target>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>For example, if your tasks process data by using Python scripts, you could use a StartTask to install Python on the compute nodes.</source>
          <target state="new">For example, if your tasks process data by using Python scripts, you could use a StartTask to install Python on the compute nodes.</target>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>In this sample application, the StartTask copies the files that it downloads from Storage (which are specified by using the <bpt id="p1">[</bpt>StartTask<ph id="ph1">][</ph>net_starttask<ept id="p1">]</ept>.<bpt id="p2">[</bpt>ResourceFiles<ph id="ph2">][</ph>net_starttask_resourcefiles<ept id="p2">]</ept> property) from the StartTask working directory to the shared directory that <bpt id="p3">*</bpt>all<ept id="p3">*</ept> tasks running on the node can access.</source>
          <target state="new">In this sample application, the StartTask copies the files that it downloads from Storage (which are specified by using the <bpt id="p1">[</bpt>StartTask<ph id="ph1">][</ph>net_starttask<ept id="p1">]</ept>.<bpt id="p2">[</bpt>ResourceFiles<ph id="ph2">][</ph>net_starttask_resourcefiles<ept id="p2">]</ept> property) from the StartTask working directory to the shared directory that <bpt id="p3">*</bpt>all<ept id="p3">*</ept> tasks running on the node can access.</target>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Essentially, this copies <ph id="ph1">`TaskApplication.exe`</ph> and its dependencies to the shared directory on each node as the node joins the pool, so that any tasks that run on the node can access it.</source>
          <target state="new">Essentially, this copies <ph id="ph1">`TaskApplication.exe`</ph> and its dependencies to the shared directory on each node as the node joins the pool, so that any tasks that run on the node can access it.</target>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.TIP]</ph> The <bpt id="p1">**</bpt>application packages<ept id="p1">**</ept> feature of Azure Batch provides another way to get your application onto the compute nodes in a pool.</source>
          <target state="new"><ph id="ph1">[AZURE.TIP]</ph> The <bpt id="p1">**</bpt>application packages<ept id="p1">**</ept> feature of Azure Batch provides another way to get your application onto the compute nodes in a pool.</target>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Application deployment with Azure Batch application packages<ept id="p1">](batch-application-packages.md)</ept> for details.</source>
          <target state="new">See <bpt id="p1">[</bpt>Application deployment with Azure Batch application packages<ept id="p1">](batch-application-packages.md)</ept> for details.</target>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Also notable in the code snippet above is the use of two environment variables in the <bpt id="p1">*</bpt>CommandLine<ept id="p1">*</ept> property of the StartTask: <ph id="ph1">`%AZ_BATCH_TASK_WORKING_DIR%`</ph> and <ph id="ph2">`%AZ_BATCH_NODE_SHARED_DIR%`</ph>.</source>
          <target state="new">Also notable in the code snippet above is the use of two environment variables in the <bpt id="p1">*</bpt>CommandLine<ept id="p1">*</ept> property of the StartTask: <ph id="ph1">`%AZ_BATCH_TASK_WORKING_DIR%`</ph> and <ph id="ph2">`%AZ_BATCH_NODE_SHARED_DIR%`</ph>.</target>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Each compute node within a Batch pool is automatically configured with a number of environment variables that are specific to Batch.</source>
          <target state="new">Each compute node within a Batch pool is automatically configured with a number of environment variables that are specific to Batch.</target>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Any process that is executed by a task has access to these environment variables.</source>
          <target state="new">Any process that is executed by a task has access to these environment variables.</target>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.TIP]</ph> To find out more about the environment variables that are available on compute nodes in a Batch pool, as well as information on task working directories, see the "Environment settings for tasks" and "Files and directories" sections in the <bpt id="p1">[</bpt>overview of Azure Batch features<ept id="p1">](batch-api-basics.md)</ept>.</source>
          <target state="new"><ph id="ph1">[AZURE.TIP]</ph> To find out more about the environment variables that are available on compute nodes in a Batch pool, as well as information on task working directories, see the "Environment settings for tasks" and "Files and directories" sections in the <bpt id="p1">[</bpt>overview of Azure Batch features<ept id="p1">](batch-api-basics.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Step 4: Create Batch job</source>
          <target state="new">Step 4: Create Batch job</target>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Create Batch job</source>
          <target state="new">Create Batch job</target>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>A Batch job is essentially a collection of tasks that are associated with a pool of compute nodes.</source>
          <target state="new">A Batch job is essentially a collection of tasks that are associated with a pool of compute nodes.</target>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>You can use it not only for organizing and tracking tasks in related workloads, but also for imposing certain constraints--such as the maximum runtime for the job (and by extension, its tasks), as well as job priority in relation to other jobs in the Batch account.</source>
          <target state="new">You can use it not only for organizing and tracking tasks in related workloads, but also for imposing certain constraints--such as the maximum runtime for the job (and by extension, its tasks), as well as job priority in relation to other jobs in the Batch account.</target>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>In this example, however, the job is associated only with the pool that was created in step #3.</source>
          <target state="new">In this example, however, the job is associated only with the pool that was created in step #3.</target>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>No additional properties are configured.</source>
          <target state="new">No additional properties are configured.</target>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>All Batch jobs are associated with a specific pool.</source>
          <target state="new">All Batch jobs are associated with a specific pool.</target>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>This association indicates which nodes the job's tasks will execute on.</source>
          <target state="new">This association indicates which nodes the job's tasks will execute on.</target>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>You specify this by using the <bpt id="p1">[</bpt>CloudJob.PoolInformation<ph id="ph1">][</ph>net_job_poolinfo<ept id="p1">]</ept> property, as shown in the code snippet below.</source>
          <target state="new">You specify this by using the <bpt id="p1">[</bpt>CloudJob.PoolInformation<ph id="ph1">][</ph>net_job_poolinfo<ept id="p1">]</ept> property, as shown in the code snippet below.</target>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Now that a job has been created, tasks are added to perform the work.</source>
          <target state="new">Now that a job has been created, tasks are added to perform the work.</target>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Step 5: Add tasks to job</source>
          <target state="new">Step 5: Add tasks to job</target>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source><ph id="ph1">![</ph>Add tasks to job<ph id="ph2">][5]</ph></source>
          <target state="new"><ph id="ph1">![</ph>Add tasks to job<ph id="ph2">][5]</ph></target>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>(1) Tasks are added to the job, (2) the tasks are scheduled to run on nodes, and (3) the tasks download the data files to process</source>
          <target state="new">(1) Tasks are added to the job, (2) the tasks are scheduled to run on nodes, and (3) the tasks download the data files to process</target>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>To actually perform work, tasks must be added to a job.</source>
          <target state="new">To actually perform work, tasks must be added to a job.</target>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Each <bpt id="p1">[</bpt>CloudTask<ph id="ph1">][</ph>net_task<ept id="p1">]</ept> is configured by using a command-line property and <bpt id="p2">[</bpt>ResourceFiles<ph id="ph2">][</ph>net_task_resourcefiles<ept id="p2">]</ept> (as with the pool's StartTask) that the task downloads to the node before its command line is automatically executed.</source>
          <target state="new">Each <bpt id="p1">[</bpt>CloudTask<ph id="ph1">][</ph>net_task<ept id="p1">]</ept> is configured by using a command-line property and <bpt id="p2">[</bpt>ResourceFiles<ph id="ph2">][</ph>net_task_resourcefiles<ept id="p2">]</ept> (as with the pool's StartTask) that the task downloads to the node before its command line is automatically executed.</target>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">*</bpt>DotNetTutorial<ept id="p1">*</ept> sample project, each task processes only one file.</source>
          <target state="new">In the <bpt id="p1">*</bpt>DotNetTutorial<ept id="p1">*</ept> sample project, each task processes only one file.</target>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Thus, its ResourceFiles collection contains a single element.</source>
          <target state="new">Thus, its ResourceFiles collection contains a single element.</target>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.IMPORTANT]</ph> When they access environment variables such as <ph id="ph2">`%AZ_BATCH_NODE_SHARED_DIR%`</ph> or execute an application not found in the node's <ph id="ph3">`PATH`</ph>, task command lines must be prefixed with <ph id="ph4">`cmd /c`</ph>.</source>
          <target state="new"><ph id="ph1">[AZURE.IMPORTANT]</ph> When they access environment variables such as <ph id="ph2">`%AZ_BATCH_NODE_SHARED_DIR%`</ph> or execute an application not found in the node's <ph id="ph3">`PATH`</ph>, task command lines must be prefixed with <ph id="ph4">`cmd /c`</ph>.</target>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>This will explicitly execute the command interpreter and instruct it to terminate after carrying out your command.</source>
          <target state="new">This will explicitly execute the command interpreter and instruct it to terminate after carrying out your command.</target>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>This requirement is unnecessary if your tasks execute an application in the node's <ph id="ph1">`PATH`</ph> (such as <bpt id="p1">*</bpt>robocopy.exe<ept id="p1">*</ept> or <bpt id="p2">*</bpt>powershell.exe<ept id="p2">*</ept>) and no environment variables are used.</source>
          <target state="new">This requirement is unnecessary if your tasks execute an application in the node's <ph id="ph1">`PATH`</ph> (such as <bpt id="p1">*</bpt>robocopy.exe<ept id="p1">*</ept> or <bpt id="p2">*</bpt>powershell.exe<ept id="p2">*</ept>) and no environment variables are used.</target>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Within the <ph id="ph1">`foreach`</ph> loop in the code snippet above, you can see that the command line for the task is constructed such that three command-line arguments are passed to <bpt id="p1">*</bpt>TaskApplication.exe<ept id="p1">*</ept>:</source>
          <target state="new">Within the <ph id="ph1">`foreach`</ph> loop in the code snippet above, you can see that the command line for the task is constructed such that three command-line arguments are passed to <bpt id="p1">*</bpt>TaskApplication.exe<ept id="p1">*</ept>:</target>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>first argument<ept id="p1">**</ept> is the path of the file to process.</source>
          <target state="new">The <bpt id="p1">**</bpt>first argument<ept id="p1">**</ept> is the path of the file to process.</target>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>This is the local path to the file as it exists on the node.</source>
          <target state="new">This is the local path to the file as it exists on the node.</target>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>When the ResourceFile object in <ph id="ph1">`UploadFileToContainerAsync`</ph> was first created above, the file name was used for this property (as a parameter to the ResourceFile constructor).</source>
          <target state="new">When the ResourceFile object in <ph id="ph1">`UploadFileToContainerAsync`</ph> was first created above, the file name was used for this property (as a parameter to the ResourceFile constructor).</target>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>This indicates that the file can be found in the same directory as <bpt id="p1">*</bpt>TaskApplication.exe<ept id="p1">*</ept>.</source>
          <target state="new">This indicates that the file can be found in the same directory as <bpt id="p1">*</bpt>TaskApplication.exe<ept id="p1">*</ept>.</target>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>second argument<ept id="p1">**</ept> specifies that the top <bpt id="p2">*</bpt>N<ept id="p2">*</ept> words should be written to the output file.</source>
          <target state="new">The <bpt id="p1">**</bpt>second argument<ept id="p1">**</ept> specifies that the top <bpt id="p2">*</bpt>N<ept id="p2">*</ept> words should be written to the output file.</target>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>In the sample, this is hard-coded so that the top three words will be written to the output file.</source>
          <target state="new">In the sample, this is hard-coded so that the top three words will be written to the output file.</target>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>third argument<ept id="p1">**</ept> is the shared access signature (SAS) that provides write access to the <bpt id="p2">**</bpt>output<ept id="p2">**</ept> container in Azure Storage.</source>
          <target state="new">The <bpt id="p1">**</bpt>third argument<ept id="p1">**</ept> is the shared access signature (SAS) that provides write access to the <bpt id="p2">**</bpt>output<ept id="p2">**</ept> container in Azure Storage.</target>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>TaskApplication.exe<ept id="p1">*</ept> uses this shared access signature URL when it uploads the output file to Azure Storage.</source>
          <target state="new"><bpt id="p1">*</bpt>TaskApplication.exe<ept id="p1">*</ept> uses this shared access signature URL when it uploads the output file to Azure Storage.</target>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>You can find the code for this in the <ph id="ph1">`UploadFileToContainer`</ph> method in the TaskApplication project's <ph id="ph2">`Program.cs`</ph> file:</source>
          <target state="new">You can find the code for this in the <ph id="ph1">`UploadFileToContainer`</ph> method in the TaskApplication project's <ph id="ph2">`Program.cs`</ph> file:</target>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Step 6: Monitor tasks</source>
          <target state="new">Step 6: Monitor tasks</target>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source><ph id="ph1">![</ph>Monitor tasks<ph id="ph2">][6]</ph></source>
          <target state="new"><ph id="ph1">![</ph>Monitor tasks<ph id="ph2">][6]</ph></target>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>The client application (1) monitors the tasks for completion and success status, and (2) the tasks upload result data to Azure Storage</source>
          <target state="new">The client application (1) monitors the tasks for completion and success status, and (2) the tasks upload result data to Azure Storage</target>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>When tasks are added to a job, they are automatically queued and scheduled for execution on compute nodes within the pool associated with the job.</source>
          <target state="new">When tasks are added to a job, they are automatically queued and scheduled for execution on compute nodes within the pool associated with the job.</target>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Based on the settings you specify, Batch handles all task queuing, scheduling, retrying, and other task administration duties for you.</source>
          <target state="new">Based on the settings you specify, Batch handles all task queuing, scheduling, retrying, and other task administration duties for you.</target>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>There are many approaches to monitoring task execution.</source>
          <target state="new">There are many approaches to monitoring task execution.</target>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>DotNetTutorial shows a simple example that reports only on completion and task failure or success states.</source>
          <target state="new">DotNetTutorial shows a simple example that reports only on completion and task failure or success states.</target>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Within the <ph id="ph1">`MonitorTasks`</ph> method in DotNetTutorial's <ph id="ph2">`Program.cs`</ph>, there are three Batch .NET concepts that warrant discussion.</source>
          <target state="new">Within the <ph id="ph1">`MonitorTasks`</ph> method in DotNetTutorial's <ph id="ph2">`Program.cs`</ph>, there are three Batch .NET concepts that warrant discussion.</target>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>They are listed below in their order of appearance:</source>
          <target state="new">They are listed below in their order of appearance:</target>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>ODATADetailLevel<ept id="p1">**</ept>: Specifying <bpt id="p2">[</bpt>ODATADetailLevel<ph id="ph1">][</ph>net_odatadetaillevel<ept id="p2">]</ept> in list operations (such as obtaining a list of a job's tasks) is essential in ensuring Batch application performance.</source>
          <target state="new"><bpt id="p1">**</bpt>ODATADetailLevel<ept id="p1">**</ept>: Specifying <bpt id="p2">[</bpt>ODATADetailLevel<ph id="ph1">][</ph>net_odatadetaillevel<ept id="p2">]</ept> in list operations (such as obtaining a list of a job's tasks) is essential in ensuring Batch application performance.</target>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Add <bpt id="p1">[</bpt>Query the Azure Batch service efficiently<ept id="p1">](batch-efficient-list-queries.md)</ept> to your reading list if you plan on doing any sort of status monitoring within your Batch applications.</source>
          <target state="new">Add <bpt id="p1">[</bpt>Query the Azure Batch service efficiently<ept id="p1">](batch-efficient-list-queries.md)</ept> to your reading list if you plan on doing any sort of status monitoring within your Batch applications.</target>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>TaskStateMonitor<ept id="p1">**</ept>: <bpt id="p2">[</bpt>TaskStateMonitor<ph id="ph1">][</ph>net_taskstatemonitor<ept id="p2">]</ept> provides Batch .NET applications with helper utilities for monitoring task states.</source>
          <target state="new"><bpt id="p1">**</bpt>TaskStateMonitor<ept id="p1">**</ept>: <bpt id="p2">[</bpt>TaskStateMonitor<ph id="ph1">][</ph>net_taskstatemonitor<ept id="p2">]</ept> provides Batch .NET applications with helper utilities for monitoring task states.</target>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">`MonitorTasks`</ph>, <bpt id="p1">*</bpt>DotNetTutorial<ept id="p1">*</ept> waits for all tasks to reach <bpt id="p2">[</bpt>TaskState.Completed<ph id="ph2">][</ph>net_taskstate<ept id="p2">]</ept> within a time limit.</source>
          <target state="new">In <ph id="ph1">`MonitorTasks`</ph>, <bpt id="p1">*</bpt>DotNetTutorial<ept id="p1">*</ept> waits for all tasks to reach <bpt id="p2">[</bpt>TaskState.Completed<ph id="ph2">][</ph>net_taskstate<ept id="p2">]</ept> within a time limit.</target>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Then it terminates the job.</source>
          <target state="new">Then it terminates the job.</target>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>TerminateJobAsync<ept id="p1">**</ept>: Terminating a job with <bpt id="p2">[</bpt>JobOperations.TerminateJobAsync<ph id="ph1">][</ph>net_joboperations_terminatejob<ept id="p2">]</ept> (or the blocking JobOperations.TerminateJob) will mark that job as completed.</source>
          <target state="new"><bpt id="p1">**</bpt>TerminateJobAsync<ept id="p1">**</ept>: Terminating a job with <bpt id="p2">[</bpt>JobOperations.TerminateJobAsync<ph id="ph1">][</ph>net_joboperations_terminatejob<ept id="p2">]</ept> (or the blocking JobOperations.TerminateJob) will mark that job as completed.</target>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>It is essential to do so if your Batch solution uses a <bpt id="p1">[</bpt>JobReleaseTask<ph id="ph1">][</ph>net_jobreltask<ept id="p1">]</ept>.</source>
          <target state="new">It is essential to do so if your Batch solution uses a <bpt id="p1">[</bpt>JobReleaseTask<ph id="ph1">][</ph>net_jobreltask<ept id="p1">]</ept>.</target>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>This is a special type of task, which is described in <bpt id="p1">[</bpt>Job preparation and completion tasks<ept id="p1">](batch-job-prep-release.md)</ept>.</source>
          <target state="new">This is a special type of task, which is described in <bpt id="p1">[</bpt>Job preparation and completion tasks<ept id="p1">](batch-job-prep-release.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`MonitorTasks`</ph> method from <bpt id="p1">*</bpt>DotNetTutorial<ept id="p1">*</ept>'s <ph id="ph2">`Program.cs`</ph> appears below:</source>
          <target state="new">The <ph id="ph1">`MonitorTasks`</ph> method from <bpt id="p1">*</bpt>DotNetTutorial<ept id="p1">*</ept>'s <ph id="ph2">`Program.cs`</ph> appears below:</target>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Step 7: Download task output</source>
          <target state="new">Step 7: Download task output</target>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>Download task output from Storage</source>
          <target state="new">Download task output from Storage</target>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Now that the job is completed, the output from the tasks can be downloaded from Azure Storage.</source>
          <target state="new">Now that the job is completed, the output from the tasks can be downloaded from Azure Storage.</target>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>This is done with a call to <ph id="ph1">`DownloadBlobsFromContainerAsync`</ph> in <bpt id="p1">*</bpt>DotNetTutorial<ept id="p1">*</ept>'s <ph id="ph2">`Program.cs`</ph>:</source>
          <target state="new">This is done with a call to <ph id="ph1">`DownloadBlobsFromContainerAsync`</ph> in <bpt id="p1">*</bpt>DotNetTutorial<ept id="p1">*</ept>'s <ph id="ph2">`Program.cs`</ph>:</target>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> The call to <ph id="ph2">`DownloadBlobsFromContainerAsync`</ph> in the <bpt id="p1">*</bpt>DotNetTutorial<ept id="p1">*</ept> application specifies that the files should be downloaded to your <ph id="ph3">`%TEMP%`</ph> folder.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> The call to <ph id="ph2">`DownloadBlobsFromContainerAsync`</ph> in the <bpt id="p1">*</bpt>DotNetTutorial<ept id="p1">*</ept> application specifies that the files should be downloaded to your <ph id="ph3">`%TEMP%`</ph> folder.</target>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Feel free to modify this output location.</source>
          <target state="new">Feel free to modify this output location.</target>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>Step 8: Delete containers</source>
          <target state="new">Step 8: Delete containers</target>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>Because you are charged for data that resides in Azure Storage, it is always a good idea to remove any blobs that are no longer needed for your Batch jobs.</source>
          <target state="new">Because you are charged for data that resides in Azure Storage, it is always a good idea to remove any blobs that are no longer needed for your Batch jobs.</target>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>In DotNetTutorial's <ph id="ph1">`Program.cs`</ph>, this is done with three calls to the helper method <ph id="ph2">`DeleteContainerAsync`</ph>:</source>
          <target state="new">In DotNetTutorial's <ph id="ph1">`Program.cs`</ph>, this is done with three calls to the helper method <ph id="ph2">`DeleteContainerAsync`</ph>:</target>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>The method itself merely obtains a reference to the container, and then calls <bpt id="p1">[</bpt>CloudBlobContainer.DeleteIfExistsAsync<ph id="ph1">][</ph>net_container_delete<ept id="p1">]</ept>:</source>
          <target state="new">The method itself merely obtains a reference to the container, and then calls <bpt id="p1">[</bpt>CloudBlobContainer.DeleteIfExistsAsync<ph id="ph1">][</ph>net_container_delete<ept id="p1">]</ept>:</target>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>Step 9: Delete the job and the pool</source>
          <target state="new">Step 9: Delete the job and the pool</target>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>In the final step, the user is prompted to delete the job and the pool that were created by the DotNetTutorial application.</source>
          <target state="new">In the final step, the user is prompted to delete the job and the pool that were created by the DotNetTutorial application.</target>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>Although you are not charged for jobs and tasks themselves, you <bpt id="p1">*</bpt>are<ept id="p1">*</ept> charged for compute nodes.</source>
          <target state="new">Although you are not charged for jobs and tasks themselves, you <bpt id="p1">*</bpt>are<ept id="p1">*</ept> charged for compute nodes.</target>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Thus, we recommend that you allocate nodes only as needed.</source>
          <target state="new">Thus, we recommend that you allocate nodes only as needed.</target>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Deleting unused pools can be part of your maintenance process.</source>
          <target state="new">Deleting unused pools can be part of your maintenance process.</target>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>The BatchClient's <bpt id="p1">[</bpt>JobOperations<ph id="ph1">][</ph>net_joboperations<ept id="p1">]</ept> and <bpt id="p2">[</bpt>PoolOperations<ph id="ph2">][</ph>net_pooloperations<ept id="p2">]</ept> both have corresponding deletion methods, which are called if the user confirms deletion:</source>
          <target state="new">The BatchClient's <bpt id="p1">[</bpt>JobOperations<ph id="ph1">][</ph>net_joboperations<ept id="p1">]</ept> and <bpt id="p2">[</bpt>PoolOperations<ph id="ph2">][</ph>net_pooloperations<ept id="p2">]</ept> both have corresponding deletion methods, which are called if the user confirms deletion:</target>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.IMPORTANT]</ph> Keep in mind that you are charged for compute resources--deleting unused pools will minimize cost.</source>
          <target state="new"><ph id="ph1">[AZURE.IMPORTANT]</ph> Keep in mind that you are charged for compute resources--deleting unused pools will minimize cost.</target>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Also, be aware that deleting a pool deletes all compute nodes within that pool, and that any data on the nodes will be unrecoverable after the pool is deleted.</source>
          <target state="new">Also, be aware that deleting a pool deletes all compute nodes within that pool, and that any data on the nodes will be unrecoverable after the pool is deleted.</target>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Run the <bpt id="p1">*</bpt>DotNetTutorial<ept id="p1">*</ept> sample</source>
          <target state="new">Run the <bpt id="p1">*</bpt>DotNetTutorial<ept id="p1">*</ept> sample</target>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>When you run the sample application, the console output will be similar to the following.</source>
          <target state="new">When you run the sample application, the console output will be similar to the following.</target>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>During execution, you will experience a pause at <ph id="ph1">`Awaiting task completion, timeout in 00:30:00...`</ph> while the pool's compute nodes are started.</source>
          <target state="new">During execution, you will experience a pause at <ph id="ph1">`Awaiting task completion, timeout in 00:30:00...`</ph> while the pool's compute nodes are started.</target>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">[</bpt>Batch Explorer<ph id="ph1">][</ph>github_batchexplorer<ept id="p1">]</ept> to monitor your pool, compute nodes, job, and tasks during and after execution.</source>
          <target state="new">Use the <bpt id="p1">[</bpt>Batch Explorer<ph id="ph1">][</ph>github_batchexplorer<ept id="p1">]</ept> to monitor your pool, compute nodes, job, and tasks during and after execution.</target>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">[</bpt>Azure portal<ph id="ph1">][</ph>azure_portal<ept id="p1">]</ept> or one of the <bpt id="p2">[</bpt>available Azure Storage explorers<ph id="ph2">][</ph>storage_explorers<ept id="p2">]</ept> to view the Storage resources (containers and blobs) that are created by the application.</source>
          <target state="new">Use the <bpt id="p1">[</bpt>Azure portal<ph id="ph1">][</ph>azure_portal<ept id="p1">]</ept> or one of the <bpt id="p2">[</bpt>available Azure Storage explorers<ph id="ph2">][</ph>storage_explorers<ept id="p2">]</ept> to view the Storage resources (containers and blobs) that are created by the application.</target>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>Typical execution time is <bpt id="p1">**</bpt>approximately 5 minutes<ept id="p1">**</ept> when you run the application in its default configuration.</source>
          <target state="new">Typical execution time is <bpt id="p1">**</bpt>approximately 5 minutes<ept id="p1">**</ept> when you run the application in its default configuration.</target>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>Next steps</source>
          <target state="new">Next steps</target>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Feel free to make changes to <bpt id="p1">*</bpt>DotNetTutorial<ept id="p1">*</ept> and <bpt id="p2">*</bpt>TaskApplication<ept id="p2">*</ept> to experiment with different compute scenarios.</source>
          <target state="new">Feel free to make changes to <bpt id="p1">*</bpt>DotNetTutorial<ept id="p1">*</ept> and <bpt id="p2">*</bpt>TaskApplication<ept id="p2">*</ept> to experiment with different compute scenarios.</target>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>For example, try adding an execution delay to <bpt id="p1">*</bpt>TaskApplication<ept id="p1">*</ept>, such as with <bpt id="p2">[</bpt>Thread.Sleep<ph id="ph1">][</ph>net_thread_sleep<ept id="p2">]</ept>, to simulate long-running tasks and monitor them with the Batch Explorer's <bpt id="p3">*</bpt>Heat Map<ept id="p3">*</ept> feature.</source>
          <target state="new">For example, try adding an execution delay to <bpt id="p1">*</bpt>TaskApplication<ept id="p1">*</ept>, such as with <bpt id="p2">[</bpt>Thread.Sleep<ph id="ph1">][</ph>net_thread_sleep<ept id="p2">]</ept>, to simulate long-running tasks and monitor them with the Batch Explorer's <bpt id="p3">*</bpt>Heat Map<ept id="p3">*</ept> feature.</target>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Try adding more tasks or adjusting the number of compute nodes.</source>
          <target state="new">Try adding more tasks or adjusting the number of compute nodes.</target>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>Add logic to check for and allow the use of an existing pool to speed execution time (<bpt id="p1">*</bpt>hint<ept id="p1">*</ept>: check out <ph id="ph1">`ArticleHelpers.cs`</ph> in the <bpt id="p2">[</bpt>Microsoft.Azure.Batch.Samples.Common<ph id="ph2">][</ph>github_samples_common<ept id="p2">]</ept> project in <bpt id="p3">[</bpt>azure-batch-samples<ph id="ph3">][</ph>github_samples<ept id="p3">]</ept>).</source>
          <target state="new">Add logic to check for and allow the use of an existing pool to speed execution time (<bpt id="p1">*</bpt>hint<ept id="p1">*</ept>: check out <ph id="ph1">`ArticleHelpers.cs`</ph> in the <bpt id="p2">[</bpt>Microsoft.Azure.Batch.Samples.Common<ph id="ph2">][</ph>github_samples_common<ept id="p2">]</ept> project in <bpt id="p3">[</bpt>azure-batch-samples<ph id="ph3">][</ph>github_samples<ept id="p3">]</ept>).</target>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>Now that you're familiar with the basic workflow of a Batch solution, it's time to dig in to the additional features of the Batch service.</source>
          <target state="new">Now that you're familiar with the basic workflow of a Batch solution, it's time to dig in to the additional features of the Batch service.</target>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>Review the <bpt id="p1">[</bpt>Overview of Azure Batch features<ept id="p1">](batch-api-basics.md)</ept> article, which we recommend if you're new to the service.</source>
          <target state="new">Review the <bpt id="p1">[</bpt>Overview of Azure Batch features<ept id="p1">](batch-api-basics.md)</ept> article, which we recommend if you're new to the service.</target>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>Start on the other Batch development articles under <bpt id="p1">**</bpt>Development in-depth<ept id="p1">**</ept> in the <bpt id="p2">[</bpt>Batch learning path<ph id="ph1">][</ph>batch_learning_path<ept id="p2">]</ept>.</source>
          <target state="new">Start on the other Batch development articles under <bpt id="p1">**</bpt>Development in-depth<ept id="p1">**</ept> in the <bpt id="p2">[</bpt>Batch learning path<ph id="ph1">][</ph>batch_learning_path<ept id="p2">]</ept>.</target>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>Check out a different implementation of processing the "top N words" workload by using Batch in the <bpt id="p1">[</bpt>TopNWords<ph id="ph1">][</ph>github_topnwords<ept id="p1">]</ept> sample.</source>
          <target state="new">Check out a different implementation of processing the "top N words" workload by using Batch in the <bpt id="p1">[</bpt>TopNWords<ph id="ph1">][</ph>github_topnwords<ept id="p1">]</ept> sample.</target>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[</ph>azure_batch<ph id="ph2">]: https://azure.microsoft.com/services/batch/</ph></source>
          <target state="new"><ph id="ph1">[</ph>azure_batch<ph id="ph2">]: https://azure.microsoft.com/services/batch/</ph></target>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[</ph>azure_free_account<ph id="ph2">]: https://azure.microsoft.com/free/</ph></source>
          <target state="new"><ph id="ph1">[</ph>azure_free_account<ph id="ph2">]: https://azure.microsoft.com/free/</ph></target>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[</ph>azure_portal<ph id="ph2">]: https://portal.azure.com</ph></source>
          <target state="new"><ph id="ph1">[</ph>azure_portal<ph id="ph2">]: https://portal.azure.com</ph></target>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[</ph>batch_explorer_blog<ph id="ph2">]: http://blogs.technet.com/b/windowshpc/archive/2015/01/20/azure-batch-explorer-sample-walkthrough.aspx</ph></source>
          <target state="new"><ph id="ph1">[</ph>batch_explorer_blog<ph id="ph2">]: http://blogs.technet.com/b/windowshpc/archive/2015/01/20/azure-batch-explorer-sample-walkthrough.aspx</ph></target>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[</ph>batch_learning_path<ph id="ph2">]: https://azure.microsoft.com/documentation/learning-paths/batch/</ph></source>
          <target state="new"><ph id="ph1">[</ph>batch_learning_path<ph id="ph2">]: https://azure.microsoft.com/documentation/learning-paths/batch/</ph></target>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[</ph>blog_linux<ph id="ph2">]: http://blogs.technet.com/b/windowshpc/archive/2016/03/30/introducing-linux-support-on-azure-batch.aspx</ph></source>
          <target state="new"><ph id="ph1">[</ph>blog_linux<ph id="ph2">]: http://blogs.technet.com/b/windowshpc/archive/2016/03/30/introducing-linux-support-on-azure-batch.aspx</ph></target>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[</ph>github_batchexplorer<ph id="ph2">]: https://github.com/Azure/azure-batch-samples/tree/master/CSharp/BatchExplorer</ph></source>
          <target state="new"><ph id="ph1">[</ph>github_batchexplorer<ph id="ph2">]: https://github.com/Azure/azure-batch-samples/tree/master/CSharp/BatchExplorer</ph></target>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[</ph>github_dotnettutorial<ph id="ph2">]: https://github.com/Azure/azure-batch-samples/tree/master/CSharp/ArticleProjects/DotNetTutorial</ph></source>
          <target state="new"><ph id="ph1">[</ph>github_dotnettutorial<ph id="ph2">]: https://github.com/Azure/azure-batch-samples/tree/master/CSharp/ArticleProjects/DotNetTutorial</ph></target>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[</ph>github_samples<ph id="ph2">]: https://github.com/Azure/azure-batch-samples</ph></source>
          <target state="new"><ph id="ph1">[</ph>github_samples<ph id="ph2">]: https://github.com/Azure/azure-batch-samples</ph></target>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[</ph>github_samples_common<ph id="ph2">]: https://github.com/Azure/azure-batch-samples/tree/master/CSharp/Common</ph></source>
          <target state="new"><ph id="ph1">[</ph>github_samples_common<ph id="ph2">]: https://github.com/Azure/azure-batch-samples/tree/master/CSharp/Common</ph></target>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[</ph>github_samples_zip<ph id="ph2">]: https://github.com/Azure/azure-batch-samples/archive/master.zip</ph></source>
          <target state="new"><ph id="ph1">[</ph>github_samples_zip<ph id="ph2">]: https://github.com/Azure/azure-batch-samples/archive/master.zip</ph></target>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[</ph>github_topnwords<ph id="ph2">]: https://github.com/Azure/azure-batch-samples/tree/master/CSharp/TopNWords</ph></source>
          <target state="new"><ph id="ph1">[</ph>github_topnwords<ph id="ph2">]: https://github.com/Azure/azure-batch-samples/tree/master/CSharp/TopNWords</ph></target>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[</ph>net_api<ph id="ph2">]: http://msdn.microsoft.com/library/azure/mt348682.aspx</ph></source>
          <target state="new"><ph id="ph1">[</ph>net_api<ph id="ph2">]: http://msdn.microsoft.com/library/azure/mt348682.aspx</ph></target>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[</ph>net_api_storage<ph id="ph2">]: https://msdn.microsoft.com/library/azure/mt347887.aspx</ph></source>
          <target state="new"><ph id="ph1">[</ph>net_api_storage<ph id="ph2">]: https://msdn.microsoft.com/library/azure/mt347887.aspx</ph></target>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[</ph>net_batchclient<ph id="ph2">]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.batchclient.aspx</ph></source>
          <target state="new"><ph id="ph1">[</ph>net_batchclient<ph id="ph2">]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.batchclient.aspx</ph></target>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[</ph>net_cloudblobclient<ph id="ph2">]: https://msdn.microsoft.com/library/microsoft.windowsazure.storage.blob.cloudblobclient.aspx</ph></source>
          <target state="new"><ph id="ph1">[</ph>net_cloudblobclient<ph id="ph2">]: https://msdn.microsoft.com/library/microsoft.windowsazure.storage.blob.cloudblobclient.aspx</ph></target>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[</ph>net_cloudblobcontainer<ph id="ph2">]: https://msdn.microsoft.com/library/microsoft.windowsazure.storage.blob.cloudblobcontainer.aspx</ph></source>
          <target state="new"><ph id="ph1">[</ph>net_cloudblobcontainer<ph id="ph2">]: https://msdn.microsoft.com/library/microsoft.windowsazure.storage.blob.cloudblobcontainer.aspx</ph></target>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[</ph>net_cloudstorageaccount<ph id="ph2">]: https://msdn.microsoft.com/library/azure/microsoft.windowsazure.storage.cloudstorageaccount.aspx</ph></source>
          <target state="new"><ph id="ph1">[</ph>net_cloudstorageaccount<ph id="ph2">]: https://msdn.microsoft.com/library/azure/microsoft.windowsazure.storage.cloudstorageaccount.aspx</ph></target>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[</ph>net_cloudserviceconfiguration<ph id="ph2">]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.cloudserviceconfiguration.aspx</ph></source>
          <target state="new"><ph id="ph1">[</ph>net_cloudserviceconfiguration<ph id="ph2">]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.cloudserviceconfiguration.aspx</ph></target>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[</ph>net_container_delete<ph id="ph2">]: https://msdn.microsoft.com/library/microsoft.windowsazure.storage.blob.cloudblobcontainer.deleteifexistsasync.aspx</ph></source>
          <target state="new"><ph id="ph1">[</ph>net_container_delete<ph id="ph2">]: https://msdn.microsoft.com/library/microsoft.windowsazure.storage.blob.cloudblobcontainer.deleteifexistsasync.aspx</ph></target>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[</ph>net_job<ph id="ph2">]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.cloudjob.aspx</ph></source>
          <target state="new"><ph id="ph1">[</ph>net_job<ph id="ph2">]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.cloudjob.aspx</ph></target>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[</ph>net_job_poolinfo<ph id="ph2">]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.protocol.models.cloudjob.poolinformation.aspx</ph></source>
          <target state="new"><ph id="ph1">[</ph>net_job_poolinfo<ph id="ph2">]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.protocol.models.cloudjob.poolinformation.aspx</ph></target>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[</ph>net_joboperations<ph id="ph2">]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.batchclient.joboperations</ph></source>
          <target state="new"><ph id="ph1">[</ph>net_joboperations<ph id="ph2">]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.batchclient.joboperations</ph></target>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[</ph>net_joboperations_terminatejob<ph id="ph2">]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.joboperations.terminatejobasync.aspx</ph></source>
          <target state="new"><ph id="ph1">[</ph>net_joboperations_terminatejob<ph id="ph2">]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.joboperations.terminatejobasync.aspx</ph></target>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[</ph>net_jobpreptask<ph id="ph2">]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.cloudjob.jobpreparationtask.aspx</ph></source>
          <target state="new"><ph id="ph1">[</ph>net_jobpreptask<ph id="ph2">]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.cloudjob.jobpreparationtask.aspx</ph></target>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[</ph>net_jobreltask<ph id="ph2">]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.cloudjob.jobreleasetask.aspx</ph></source>
          <target state="new"><ph id="ph1">[</ph>net_jobreltask<ph id="ph2">]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.cloudjob.jobreleasetask.aspx</ph></target>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[</ph>net_node<ph id="ph2">]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.computenode.aspx</ph></source>
          <target state="new"><ph id="ph1">[</ph>net_node<ph id="ph2">]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.computenode.aspx</ph></target>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[</ph>net_odatadetaillevel<ph id="ph2">]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.odatadetaillevel.aspx</ph></source>
          <target state="new"><ph id="ph1">[</ph>net_odatadetaillevel<ph id="ph2">]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.odatadetaillevel.aspx</ph></target>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[</ph>net_pool<ph id="ph2">]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.cloudpool.aspx</ph></source>
          <target state="new"><ph id="ph1">[</ph>net_pool<ph id="ph2">]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.cloudpool.aspx</ph></target>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[</ph>net_pool_create<ph id="ph2">]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.pooloperations.createpool.aspx</ph></source>
          <target state="new"><ph id="ph1">[</ph>net_pool_create<ph id="ph2">]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.pooloperations.createpool.aspx</ph></target>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[</ph>net_pool_starttask<ph id="ph2">]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.cloudpool.starttask.aspx</ph></source>
          <target state="new"><ph id="ph1">[</ph>net_pool_starttask<ph id="ph2">]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.cloudpool.starttask.aspx</ph></target>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[</ph>net_pooloperations<ph id="ph2">]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.batchclient.pooloperations</ph></source>
          <target state="new"><ph id="ph1">[</ph>net_pooloperations<ph id="ph2">]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.batchclient.pooloperations</ph></target>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[</ph>net_resourcefile<ph id="ph2">]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.resourcefile.aspx</ph></source>
          <target state="new"><ph id="ph1">[</ph>net_resourcefile<ph id="ph2">]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.resourcefile.aspx</ph></target>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[</ph>net_resourcefile_blobsource<ph id="ph2">]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.resourcefile.blobsource.aspx</ph></source>
          <target state="new"><ph id="ph1">[</ph>net_resourcefile_blobsource<ph id="ph2">]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.resourcefile.blobsource.aspx</ph></target>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[</ph>net_sas_blob<ph id="ph2">]: https://msdn.microsoft.com/library/azure/microsoft.windowsazure.storage.blob.cloudblob.getsharedaccesssignature.aspx</ph></source>
          <target state="new"><ph id="ph1">[</ph>net_sas_blob<ph id="ph2">]: https://msdn.microsoft.com/library/azure/microsoft.windowsazure.storage.blob.cloudblob.getsharedaccesssignature.aspx</ph></target>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[</ph>net_sas_container<ph id="ph2">]: https://msdn.microsoft.com/library/azure/microsoft.windowsazure.storage.blob.cloudblobcontainer.getsharedaccesssignature.aspx</ph></source>
          <target state="new"><ph id="ph1">[</ph>net_sas_container<ph id="ph2">]: https://msdn.microsoft.com/library/azure/microsoft.windowsazure.storage.blob.cloudblobcontainer.getsharedaccesssignature.aspx</ph></target>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[</ph>net_starttask<ph id="ph2">]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.starttask.aspx</ph></source>
          <target state="new"><ph id="ph1">[</ph>net_starttask<ph id="ph2">]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.starttask.aspx</ph></target>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[</ph>net_starttask_resourcefiles<ph id="ph2">]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.starttask.resourcefiles.aspx</ph></source>
          <target state="new"><ph id="ph1">[</ph>net_starttask_resourcefiles<ph id="ph2">]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.starttask.resourcefiles.aspx</ph></target>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[</ph>net_task<ph id="ph2">]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.cloudtask.aspx</ph></source>
          <target state="new"><ph id="ph1">[</ph>net_task<ph id="ph2">]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.cloudtask.aspx</ph></target>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[</ph>net_task_resourcefiles<ph id="ph2">]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.cloudtask.resourcefiles.aspx</ph></source>
          <target state="new"><ph id="ph1">[</ph>net_task_resourcefiles<ph id="ph2">]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.cloudtask.resourcefiles.aspx</ph></target>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[</ph>net_taskstate<ph id="ph2">]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.common.taskstate.aspx</ph></source>
          <target state="new"><ph id="ph1">[</ph>net_taskstate<ph id="ph2">]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.common.taskstate.aspx</ph></target>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[</ph>net_taskstatemonitor<ph id="ph2">]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.taskstatemonitor.aspx</ph></source>
          <target state="new"><ph id="ph1">[</ph>net_taskstatemonitor<ph id="ph2">]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.taskstatemonitor.aspx</ph></target>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[</ph>net_thread_sleep<ph id="ph2">]: https://msdn.microsoft.com/library/274eh01d(v=vs.110).aspx</ph></source>
          <target state="new"><ph id="ph1">[</ph>net_thread_sleep<ph id="ph2">]: https://msdn.microsoft.com/library/274eh01d(v=vs.110).aspx</ph></target>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[</ph>net_virtualmachineconfiguration<ph id="ph2">]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.virtualmachineconfiguration.aspx</ph></source>
          <target state="new"><ph id="ph1">[</ph>net_virtualmachineconfiguration<ph id="ph2">]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.virtualmachineconfiguration.aspx</ph></target>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[</ph>nuget_packagemgr<ph id="ph2">]: https://visualstudiogallery.msdn.microsoft.com/27077b70-9dad-4c64-adcf-c7cf6bc9970c</ph></source>
          <target state="new"><ph id="ph1">[</ph>nuget_packagemgr<ph id="ph2">]: https://visualstudiogallery.msdn.microsoft.com/27077b70-9dad-4c64-adcf-c7cf6bc9970c</ph></target>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[</ph>nuget_restore<ph id="ph2">]: https://docs.nuget.org/consume/package-restore/msbuild-integrated#enabling-package-restore-during-build</ph></source>
          <target state="new"><ph id="ph1">[</ph>nuget_restore<ph id="ph2">]: https://docs.nuget.org/consume/package-restore/msbuild-integrated#enabling-package-restore-during-build</ph></target>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[</ph>storage_explorers<ph id="ph2">]: http://blogs.msdn.com/b/windowsazurestorage/archive/2014/03/11/windows-azure-storage-explorers-2014.aspx</ph></source>
          <target state="new"><ph id="ph1">[</ph>storage_explorers<ph id="ph2">]: http://blogs.msdn.com/b/windowsazurestorage/archive/2014/03/11/windows-azure-storage-explorers-2014.aspx</ph></target>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[</ph>visual_studio<ph id="ph2">]: https://www.visualstudio.com/products/vs-2015-product-editions</ph></source>
          <target state="new"><ph id="ph1">[</ph>visual_studio<ph id="ph2">]: https://www.visualstudio.com/products/vs-2015-product-editions</ph></target>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[</ph>1<ph id="ph2">]: ./media/batch-dotnet-get-started/batch_workflow_01_sm.png</ph><ph id="ph3"> "</ph>Create containers in Azure Storage<ph id="ph4">"</ph></source>
          <target state="new"><ph id="ph1">[</ph>1<ph id="ph2">]: ./media/batch-dotnet-get-started/batch_workflow_01_sm.png</ph><ph id="ph3"> "</ph>Create containers in Azure Storage<ph id="ph4">"</ph></target>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[</ph>2<ph id="ph2">]: ./media/batch-dotnet-get-started/batch_workflow_02_sm.png</ph><ph id="ph3"> "</ph>Upload task application and input (data) files to containers<ph id="ph4">"</ph></source>
          <target state="new"><ph id="ph1">[</ph>2<ph id="ph2">]: ./media/batch-dotnet-get-started/batch_workflow_02_sm.png</ph><ph id="ph3"> "</ph>Upload task application and input (data) files to containers<ph id="ph4">"</ph></target>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[</ph>3<ph id="ph2">]: ./media/batch-dotnet-get-started/batch_workflow_03_sm.png</ph><ph id="ph3"> "</ph>Create Batch pool<ph id="ph4">"</ph></source>
          <target state="new"><ph id="ph1">[</ph>3<ph id="ph2">]: ./media/batch-dotnet-get-started/batch_workflow_03_sm.png</ph><ph id="ph3"> "</ph>Create Batch pool<ph id="ph4">"</ph></target>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[</ph>4<ph id="ph2">]: ./media/batch-dotnet-get-started/batch_workflow_04_sm.png</ph><ph id="ph3"> "</ph>Create Batch job<ph id="ph4">"</ph></source>
          <target state="new"><ph id="ph1">[</ph>4<ph id="ph2">]: ./media/batch-dotnet-get-started/batch_workflow_04_sm.png</ph><ph id="ph3"> "</ph>Create Batch job<ph id="ph4">"</ph></target>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[</ph>5<ph id="ph2">]: ./media/batch-dotnet-get-started/batch_workflow_05_sm.png</ph><ph id="ph3"> "</ph>Add tasks to job<ph id="ph4">"</ph></source>
          <target state="new"><ph id="ph1">[</ph>5<ph id="ph2">]: ./media/batch-dotnet-get-started/batch_workflow_05_sm.png</ph><ph id="ph3"> "</ph>Add tasks to job<ph id="ph4">"</ph></target>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[</ph>6<ph id="ph2">]: ./media/batch-dotnet-get-started/batch_workflow_06_sm.png</ph><ph id="ph3"> "</ph>Monitor tasks<ph id="ph4">"</ph></source>
          <target state="new"><ph id="ph1">[</ph>6<ph id="ph2">]: ./media/batch-dotnet-get-started/batch_workflow_06_sm.png</ph><ph id="ph3"> "</ph>Monitor tasks<ph id="ph4">"</ph></target>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[</ph>7<ph id="ph2">]: ./media/batch-dotnet-get-started/batch_workflow_07_sm.png</ph><ph id="ph3"> "</ph>Download task output from Storage<ph id="ph4">"</ph></source>
          <target state="new"><ph id="ph1">[</ph>7<ph id="ph2">]: ./media/batch-dotnet-get-started/batch_workflow_07_sm.png</ph><ph id="ph3"> "</ph>Download task output from Storage<ph id="ph4">"</ph></target>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[</ph>8<ph id="ph2">]: ./media/batch-dotnet-get-started/batch_workflow_sm.png</ph><ph id="ph3"> "</ph>Batch solution workflow (full diagram)<ph id="ph4">"</ph></source>
          <target state="new"><ph id="ph1">[</ph>8<ph id="ph2">]: ./media/batch-dotnet-get-started/batch_workflow_sm.png</ph><ph id="ph3"> "</ph>Batch solution workflow (full diagram)<ph id="ph4">"</ph></target>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[</ph>9<ph id="ph2">]: ./media/batch-dotnet-get-started/credentials_batch_sm.png</ph><ph id="ph3"> "</ph>Batch credentials in Portal<ph id="ph4">"</ph></source>
          <target state="new"><ph id="ph1">[</ph>9<ph id="ph2">]: ./media/batch-dotnet-get-started/credentials_batch_sm.png</ph><ph id="ph3"> "</ph>Batch credentials in Portal<ph id="ph4">"</ph></target>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[</ph>10<ph id="ph2">]: ./media/batch-dotnet-get-started/credentials_storage_sm.png</ph><ph id="ph3"> "</ph>Storage credentials in Portal<ph id="ph4">"</ph></source>
          <target state="new"><ph id="ph1">[</ph>10<ph id="ph2">]: ./media/batch-dotnet-get-started/credentials_storage_sm.png</ph><ph id="ph3"> "</ph>Storage credentials in Portal<ph id="ph4">"</ph></target>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[</ph>11<ph id="ph2">]: ./media/batch-dotnet-get-started/batch_workflow_minimal_sm.png</ph><ph id="ph3"> "</ph>Batch solution workflow (minimal diagram)<ph id="ph4">"</ph></source>
          <target state="new"><ph id="ph1">[</ph>11<ph id="ph2">]: ./media/batch-dotnet-get-started/batch_workflow_minimal_sm.png</ph><ph id="ph3"> "</ph>Batch solution workflow (minimal diagram)<ph id="ph4">"</ph></target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>