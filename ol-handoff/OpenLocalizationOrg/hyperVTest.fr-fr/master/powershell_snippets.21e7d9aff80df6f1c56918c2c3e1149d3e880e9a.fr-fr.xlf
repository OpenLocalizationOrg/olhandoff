<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="fr-fr" original="foo.file" tool-id="c73d6c39-e7bb-4710-88e2-fa00575c7bf6" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="c73d6c39-e7bb-4710-88e2-fa00575c7bf6" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
      <olfilehash xmlns="">1e570b48f01ed63333705d5da5031bc706a67a94</olfilehash>
    </header>
    <body>
      <group id="5d67f97a-5bab-4f24-b85d-18ebc965af57">
        <trans-unit id="ec9e89c7-3b92-4ab4-bd05-f706224fe688" xml:space="preserve">
          <source>ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9
title: PowerShell Snippets</source>
          <target state="new">ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9
title: PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="daa55c56-e954-475e-9f3e-3de9bfd5c186" xml:space="preserve">
          <source>PowerShell Snippets</source>
          <target state="new">PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="3ffa887d-e1bf-47c3-8727-92ca15da9696" xml:space="preserve">
          <source>Adding this sentence for testing HO-HB process.</source>
          <target state="new">Adding this sentence for testing HO-HB process.</target>
        </trans-unit>
        <trans-unit id="cea5bed5-00cf-423f-8dee-4fd95253c2dc" xml:space="preserve">
          <source>PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</source>
          <target state="new">PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</target>
        </trans-unit>
        <trans-unit id="23049f34-ae83-449d-860f-04f6d05ca1b0" xml:space="preserve">
          <source>All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</source>
          <target state="new">All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</target>
        </trans-unit>
        <trans-unit id="fd12e2df-a028-4d51-b186-33d1899807aa" xml:space="preserve">
          <source>If you aren't sure if you have the right permissions, type <bpt id="725dd87f-e001-4914-a26b-be660bc5dd02">&lt;code&gt;</bpt>Get-VM<ept id="725dd87f-e001-4914-a26b-be660bc5dd02">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</source>
          <target state="new">If you aren't sure if you have the right permissions, type <bpt id="725dd87f-e001-4914-a26b-be660bc5dd02">&lt;code&gt;</bpt>Get-VM<ept id="725dd87f-e001-4914-a26b-be660bc5dd02">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</target>
        </trans-unit>
        <trans-unit id="c0d566d2-7432-4a12-8e66-5ddd86793a47" xml:space="preserve">
          <source>PowerShell Direct tools</source>
          <target state="new">PowerShell Direct tools</target>
        </trans-unit>
        <trans-unit id="6bbcfefa-7b04-4e7a-928a-02cddb669e84" xml:space="preserve">
          <source>All of the scripts and snippets in this section will rely on the following basics.</source>
          <target state="new">All of the scripts and snippets in this section will rely on the following basics.</target>
        </trans-unit>
        <trans-unit id="ed75b337-59bd-4073-ba61-5cbed2dcd78e" xml:space="preserve">
          <source><bpt id="ccd8f48b-9981-4c4b-b90f-789503bd7bfe">&lt;strong&gt;</bpt>Requirements<ept id="ccd8f48b-9981-4c4b-b90f-789503bd7bfe">&lt;/strong&gt;</ept> :</source>
          <target state="new"><bpt id="ccd8f48b-9981-4c4b-b90f-789503bd7bfe">&lt;strong&gt;</bpt>Requirements<ept id="ccd8f48b-9981-4c4b-b90f-789503bd7bfe">&lt;/strong&gt;</ept> :</target>
        </trans-unit>
        <trans-unit id="f0fd9f85-cf07-4175-b3e3-e38abb0ac5ea" xml:space="preserve">
          <source>PowerShell Direct.</source>
          <target state="new">PowerShell Direct.</target>
        </trans-unit>
        <trans-unit id="ddea06cc-7bc9-4a6e-90e3-6675eb45f239" xml:space="preserve">
          <source>Windows 10 guest and host OS.</source>
          <target state="new">Windows 10 guest and host OS.</target>
        </trans-unit>
        <trans-unit id="7fb3e254-722e-485e-bb4e-9f59b0443d65" xml:space="preserve">
          <source><bpt id="ffe1069c-31a8-45ca-99f6-d0fb2c91bf66">&lt;strong&gt;</bpt>Common Variables<ept id="ffe1069c-31a8-45ca-99f6-d0fb2c91bf66">&lt;/strong&gt;</ept> :  
<bpt id="8bf8e31c-7ce6-4418-98ab-d5f2c580b69b">&lt;code&gt;</bpt>$VMName<ept id="8bf8e31c-7ce6-4418-98ab-d5f2c580b69b">&lt;/code&gt;</ept> -- this is a string with the VMName.</source>
          <target state="new"><bpt id="ffe1069c-31a8-45ca-99f6-d0fb2c91bf66">&lt;strong&gt;</bpt>Common Variables<ept id="ffe1069c-31a8-45ca-99f6-d0fb2c91bf66">&lt;/strong&gt;</ept> :  
<bpt id="8bf8e31c-7ce6-4418-98ab-d5f2c580b69b">&lt;code&gt;</bpt>$VMName<ept id="8bf8e31c-7ce6-4418-98ab-d5f2c580b69b">&lt;/code&gt;</ept> -- this is a string with the VMName.</target>
        </trans-unit>
        <trans-unit id="08e38c70-6a6f-4b78-86ca-2b7aaa32f60a" xml:space="preserve">
          <source>See a list of available VMs with <bpt id="d742feec-ead3-45a3-8717-731f35576eb9">&lt;code&gt;</bpt>Get-VM<ept id="d742feec-ead3-45a3-8717-731f35576eb9">&lt;/code&gt;</ept>  
<bpt id="aaf8493e-3aa1-421e-bb52-8157a96e3376">&lt;code&gt;</bpt>$cred<ept id="aaf8493e-3aa1-421e-bb52-8157a96e3376">&lt;/code&gt;</ept> -- Credential for the guest OS.</source>
          <target state="new">See a list of available VMs with <bpt id="d742feec-ead3-45a3-8717-731f35576eb9">&lt;code&gt;</bpt>Get-VM<ept id="d742feec-ead3-45a3-8717-731f35576eb9">&lt;/code&gt;</ept>  
<bpt id="aaf8493e-3aa1-421e-bb52-8157a96e3376">&lt;code&gt;</bpt>$cred<ept id="aaf8493e-3aa1-421e-bb52-8157a96e3376">&lt;/code&gt;</ept> -- Credential for the guest OS.</target>
        </trans-unit>
        <trans-unit id="ab919b71-4194-4d99-a9dd-ab102e286342" xml:space="preserve">
          <source>Can be populated using <bpt id="8bebfa7c-3001-4fd3-8c28-d7617d11050b">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="8bebfa7c-3001-4fd3-8c28-d7617d11050b">&lt;/code&gt;</ept></source>
          <target state="new">Can be populated using <bpt id="8bebfa7c-3001-4fd3-8c28-d7617d11050b">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="8bebfa7c-3001-4fd3-8c28-d7617d11050b">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="19805ce4-f4e2-4f2f-916f-a218900332d6" xml:space="preserve">
          <source>Check if the guest has booted</source>
          <target state="new">Check if the guest has booted</target>
        </trans-unit>
        <trans-unit id="fac98af0-51de-4630-b956-7f98e2af88c0" xml:space="preserve">
          <source>Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</source>
          <target state="new">Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</target>
        </trans-unit>
        <trans-unit id="c99a0528-88b5-45d4-a779-43f3d4fc69c1" xml:space="preserve">
          <source>Use this command to check whether the guest has booted.</source>
          <target state="new">Use this command to check whether the guest has booted.</target>
        </trans-unit>
        <trans-unit id="a40c237d-3323-47fc-8620-76ba3a7c1747" xml:space="preserve">
          <source><bpt id="e902c245-6e2f-467f-9ba0-02bdcfddd514">&lt;strong&gt;</bpt>Outcome<ept id="e902c245-6e2f-467f-9ba0-02bdcfddd514">&lt;/strong&gt;</ept>  
Prints a friendly message declaring the state of the guest OS.</source>
          <target state="new"><bpt id="e902c245-6e2f-467f-9ba0-02bdcfddd514">&lt;strong&gt;</bpt>Outcome<ept id="e902c245-6e2f-467f-9ba0-02bdcfddd514">&lt;/strong&gt;</ept>  
Prints a friendly message declaring the state of the guest OS.</target>
        </trans-unit>
        <trans-unit id="8d4254fd-333b-4018-aea7-7a0845e2021a" xml:space="preserve">
          <source>Script locking until the guest has booted</source>
          <target state="new">Script locking until the guest has booted</target>
        </trans-unit>
        <trans-unit id="293eb5ef-3216-4348-a7fc-38c8ce55aaa8" xml:space="preserve">
          <source>The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</source>
          <target state="new">The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</target>
        </trans-unit>
        <trans-unit id="46abb7c1-7c4d-4e92-9366-7691c68815b2" xml:space="preserve">
          <source><bpt id="16f39726-2adf-4a94-a02b-27a28a97c46e">&lt;strong&gt;</bpt>Outcome<ept id="16f39726-2adf-4a94-a02b-27a28a97c46e">&lt;/strong&gt;</ept>  
Prints a friendly message and locks until the connection to the VM succeeds.</source>
          <target state="new"><bpt id="16f39726-2adf-4a94-a02b-27a28a97c46e">&lt;strong&gt;</bpt>Outcome<ept id="16f39726-2adf-4a94-a02b-27a28a97c46e">&lt;/strong&gt;</ept>  
Prints a friendly message and locks until the connection to the VM succeeds.</target>
        </trans-unit>
        <trans-unit id="662744cc-5d95-422a-9b5c-ae4fbdb4ffbd" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="a5617914-5434-487c-82c3-04372012222c" xml:space="preserve">
          <source>Script locking until the guest has a network</source>
          <target state="new">Script locking until the guest has a network</target>
        </trans-unit>
        <trans-unit id="b0492306-4134-4538-b201-ab34fe69ffa1" xml:space="preserve">
          <source>With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</source>
          <target state="new">With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</target>
        </trans-unit>
        <trans-unit id="92c592ed-0234-4c2c-9c44-9f8cc3347772" xml:space="preserve">
          <source><bpt id="b7ac5d4a-5995-44b3-8d03-0c1150a1a786">&lt;em&gt;</bpt>* Outcome *<ept id="b7ac5d4a-5995-44b3-8d03-0c1150a1a786">&lt;/em&gt;</ept>
Locks until a DHCP lease is recieved.</source>
          <target state="new"><bpt id="b7ac5d4a-5995-44b3-8d03-0c1150a1a786">&lt;em&gt;</bpt>* Outcome *<ept id="b7ac5d4a-5995-44b3-8d03-0c1150a1a786">&lt;/em&gt;</ept>
Locks until a DHCP lease is recieved.</target>
        </trans-unit>
        <trans-unit id="4a70eeb5-b922-4a02-a793-8e0af9cbef6c" xml:space="preserve">
          <source>Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</source>
          <target state="new">Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</target>
        </trans-unit>
        <trans-unit id="5bf76346-b5c1-4eba-91d8-fd4e9c0dec95" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="a290f49d-0a86-4083-8c30-ed781a8bca80" xml:space="preserve">
          <source>Managing credentials with PowerShell</source>
          <target state="new">Managing credentials with PowerShell</target>
        </trans-unit>
        <trans-unit id="90bc5b0d-a0de-4a71-b2d2-2d435f65e633" xml:space="preserve">
          <source>Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</source>
          <target state="new">Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</target>
        </trans-unit>
        <trans-unit id="052d9c4a-28f1-4d19-809c-d4f7ecd86085" xml:space="preserve">
          <source>There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</source>
          <target state="new">There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</target>
        </trans-unit>
        <trans-unit id="5a02a3b3-7016-48e0-a7bd-896c1253f09f" xml:space="preserve">
          <source>The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</source>
          <target state="new">The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</target>
        </trans-unit>
        <trans-unit id="5c56835f-d99d-44aa-ab80-f3dafb637822" xml:space="preserve">
          <source>This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</source>
          <target state="new">This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</target>
        </trans-unit>
        <trans-unit id="04628102-9065-406c-8818-755e094e7605" xml:space="preserve">
          <source>In this scenario you can just run <bpt id="05ab90f3-fe89-4271-947a-8597211e5299">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="05ab90f3-fe89-4271-947a-8597211e5299">&lt;/code&gt;</ept>.</source>
          <target state="new">In this scenario you can just run <bpt id="05ab90f3-fe89-4271-947a-8597211e5299">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="05ab90f3-fe89-4271-947a-8597211e5299">&lt;/code&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="6f3082aa-8077-4ff4-84ba-13d389e64da4" xml:space="preserve">
          <source>Let PowerShell prompt you for credentials  
If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</source>
          <target state="new">Let PowerShell prompt you for credentials  
If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</target>
        </trans-unit>
        <trans-unit id="3e8a216e-9f91-493b-bb77-a3c4c98576a0" xml:space="preserve">
          <source>Store credentials in a variable for reuse.</source>
          <target state="new">Store credentials in a variable for reuse.</target>
        </trans-unit>
        <trans-unit id="ce9b5430-e22c-437f-bc75-cf9588d179f4" xml:space="preserve">
          <source>Running a simple command like this:</source>
          <target state="new">Running a simple command like this:</target>
        </trans-unit>
        <trans-unit id="bb9b469e-71a6-4ca9-bc18-20cecc7cd384" xml:space="preserve">
          <source>  And then running something like this:</source>
          <target state="new">  And then running something like this:</target>
        </trans-unit>
        <trans-unit id="d978f2d9-d6ca-4d0e-b58b-01e97ecfafcc" xml:space="preserve">
          <source>  Will mean that you only get prompted once per script/PowerShell session for your credentials.</source>
          <target state="new">  Will mean that you only get prompted once per script/PowerShell session for your credentials.</target>
        </trans-unit>
        <trans-unit id="5aae0596-1318-4398-8710-8dc1532e5d45" xml:space="preserve">
          <source>Code your credentials into your scripts.</source>
          <target state="new">Code your credentials into your scripts.</target>
        </trans-unit>
        <trans-unit id="eaab9437-b541-467a-86d1-8379be1d55b6" xml:space="preserve">
          <source><bpt id="75ea5b3b-7228-47dc-b5ee-042f76cd7832">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="75ea5b3b-7228-47dc-b5ee-042f76cd7832">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="75ea5b3b-7228-47dc-b5ee-042f76cd7832">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="75ea5b3b-7228-47dc-b5ee-042f76cd7832">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="28fb7263-87b5-4f69-b831-5081a109248d" xml:space="preserve">
          <source>Warning:  _Do not do this in a production system.</source>
          <target state="new">Warning:  _Do not do this in a production system.</target>
        </trans-unit>
        <trans-unit id="c998a086-ab1c-47b8-bb5d-22ea215d1b66" xml:space="preserve">
          <source>Do not do this with real passwords._</source>
          <target state="new">Do not do this with real passwords._</target>
        </trans-unit>
        <trans-unit id="d7f001b9-e5a6-41d3-8bc3-99fa924ba958" xml:space="preserve">
          <source>You can hand craft a PSCredential object with some code like this:</source>
          <target state="new">You can hand craft a PSCredential object with some code like this:</target>
        </trans-unit>
        <trans-unit id="5cf16941-ca69-48c8-a5c2-748649929ed1" xml:space="preserve">
          <source>Grossly insecure - but useful for testing.</source>
          <target state="new">Grossly insecure - but useful for testing.</target>
        </trans-unit>
        <trans-unit id="2c10beed-3132-4f4c-a587-f28fa7fdf9bd" xml:space="preserve">
          <source>Now you get no prompts at all in this session.</source>
          <target state="new">Now you get no prompts at all in this session.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>