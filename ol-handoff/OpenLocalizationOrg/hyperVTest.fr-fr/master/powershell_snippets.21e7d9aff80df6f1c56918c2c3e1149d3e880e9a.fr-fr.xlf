<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="fr-fr" original="foo.file" tool-id="3738dfda-16d1-4f39-bb10-34a8e4f9a88a" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="3738dfda-16d1-4f39-bb10-34a8e4f9a88a" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
      <olfilehash xmlns="">1e570b48f01ed63333705d5da5031bc706a67a94</olfilehash>
    </header>
    <body>
      <group id="fbfdd8bd-010d-4991-8ad8-80aee5d70cc5">
        <trans-unit id="609b86f7-a2cc-4988-b783-cada116e430a" xml:space="preserve">
          <source>ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9
title: PowerShell Snippets</source>
          <target state="new">ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9
title: PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="8d86a05b-9700-4adf-91e4-19d1d1eaa0a3" xml:space="preserve">
          <source>PowerShell Snippets</source>
          <target state="new">PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="8c2c4c81-c687-4e27-960b-a7a998a7c3b2" xml:space="preserve">
          <source>Adding this sentence for testing HO-HB process.</source>
          <target state="new">Adding this sentence for testing HO-HB process.</target>
        </trans-unit>
        <trans-unit id="f60417ba-e159-4adf-8b2d-a95519a69a1c" xml:space="preserve">
          <source>PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</source>
          <target state="new">PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</target>
        </trans-unit>
        <trans-unit id="78a50211-e1c9-427e-9a5f-8d876fa9743d" xml:space="preserve">
          <source>All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</source>
          <target state="new">All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</target>
        </trans-unit>
        <trans-unit id="ef01d72d-96a2-402c-9294-439246a936f8" xml:space="preserve">
          <source>If you aren't sure if you have the right permissions, type <bpt id="ff7a484d-f3e1-4101-ad4c-ade310d61a25">&lt;code&gt;</bpt>Get-VM<ept id="ff7a484d-f3e1-4101-ad4c-ade310d61a25">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</source>
          <target state="new">If you aren't sure if you have the right permissions, type <bpt id="ff7a484d-f3e1-4101-ad4c-ade310d61a25">&lt;code&gt;</bpt>Get-VM<ept id="ff7a484d-f3e1-4101-ad4c-ade310d61a25">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</target>
        </trans-unit>
        <trans-unit id="8aa7004e-9c4a-44ce-921d-452db68864b4" xml:space="preserve">
          <source>PowerShell Direct tools</source>
          <target state="new">PowerShell Direct tools</target>
        </trans-unit>
        <trans-unit id="7edd45c9-a3e4-4dfa-9019-f723fc695d9a" xml:space="preserve">
          <source>All of the scripts and snippets in this section will rely on the following basics.</source>
          <target state="new">All of the scripts and snippets in this section will rely on the following basics.</target>
        </trans-unit>
        <trans-unit id="05204f4b-c601-4ceb-8482-27e2374918db" xml:space="preserve">
          <source><bpt id="bd196ae1-8730-4ff2-a73c-4eb87436015b">&lt;strong&gt;</bpt>Requirements<ept id="bd196ae1-8730-4ff2-a73c-4eb87436015b">&lt;/strong&gt;</ept> :</source>
          <target state="new"><bpt id="bd196ae1-8730-4ff2-a73c-4eb87436015b">&lt;strong&gt;</bpt>Requirements<ept id="bd196ae1-8730-4ff2-a73c-4eb87436015b">&lt;/strong&gt;</ept> :</target>
        </trans-unit>
        <trans-unit id="b9c0c863-de36-4dd9-9054-836602ba7981" xml:space="preserve">
          <source>PowerShell Direct.</source>
          <target state="new">PowerShell Direct.</target>
        </trans-unit>
        <trans-unit id="56fa07ca-5d31-4368-8fa1-be1ac726ab78" xml:space="preserve">
          <source>Windows 10 guest and host OS.</source>
          <target state="new">Windows 10 guest and host OS.</target>
        </trans-unit>
        <trans-unit id="8dbb3d86-a9b8-45b0-82fc-4051d4ac7237" xml:space="preserve">
          <source><bpt id="9c303cdd-8821-42db-b212-0e5953cb0c60">&lt;strong&gt;</bpt>Common Variables<ept id="9c303cdd-8821-42db-b212-0e5953cb0c60">&lt;/strong&gt;</ept> :  
<bpt id="76c5c360-610b-48c9-9599-46bc12aec6ba">&lt;code&gt;</bpt>$VMName<ept id="76c5c360-610b-48c9-9599-46bc12aec6ba">&lt;/code&gt;</ept> -- this is a string with the VMName.</source>
          <target state="new"><bpt id="9c303cdd-8821-42db-b212-0e5953cb0c60">&lt;strong&gt;</bpt>Common Variables<ept id="9c303cdd-8821-42db-b212-0e5953cb0c60">&lt;/strong&gt;</ept> :  
<bpt id="76c5c360-610b-48c9-9599-46bc12aec6ba">&lt;code&gt;</bpt>$VMName<ept id="76c5c360-610b-48c9-9599-46bc12aec6ba">&lt;/code&gt;</ept> -- this is a string with the VMName.</target>
        </trans-unit>
        <trans-unit id="3d0e90dc-4dc2-452d-b2a1-f200b726b148" xml:space="preserve">
          <source>See a list of available VMs with <bpt id="39c45f6b-578e-4a60-bd08-7830b3b9d0a1">&lt;code&gt;</bpt>Get-VM<ept id="39c45f6b-578e-4a60-bd08-7830b3b9d0a1">&lt;/code&gt;</ept>  
<bpt id="42ed3745-810e-4376-b5f2-a497ea25188c">&lt;code&gt;</bpt>$cred<ept id="42ed3745-810e-4376-b5f2-a497ea25188c">&lt;/code&gt;</ept> -- Credential for the guest OS.</source>
          <target state="new">See a list of available VMs with <bpt id="39c45f6b-578e-4a60-bd08-7830b3b9d0a1">&lt;code&gt;</bpt>Get-VM<ept id="39c45f6b-578e-4a60-bd08-7830b3b9d0a1">&lt;/code&gt;</ept>  
<bpt id="42ed3745-810e-4376-b5f2-a497ea25188c">&lt;code&gt;</bpt>$cred<ept id="42ed3745-810e-4376-b5f2-a497ea25188c">&lt;/code&gt;</ept> -- Credential for the guest OS.</target>
        </trans-unit>
        <trans-unit id="2fd3e27b-1ce3-4693-9daf-d69c88096182" xml:space="preserve">
          <source>Can be populated using <bpt id="565585cb-8b37-4191-878b-8eb2a16630b3">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="565585cb-8b37-4191-878b-8eb2a16630b3">&lt;/code&gt;</ept></source>
          <target state="new">Can be populated using <bpt id="565585cb-8b37-4191-878b-8eb2a16630b3">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="565585cb-8b37-4191-878b-8eb2a16630b3">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="f7a9aa53-283e-4d4b-8552-0475995d8f0d" xml:space="preserve">
          <source>Check if the guest has booted</source>
          <target state="new">Check if the guest has booted</target>
        </trans-unit>
        <trans-unit id="276a7145-8199-48d8-8758-2b99a60395e6" xml:space="preserve">
          <source>Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</source>
          <target state="new">Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</target>
        </trans-unit>
        <trans-unit id="1acc7799-f5da-4bb9-b24e-ce043df06c6c" xml:space="preserve">
          <source>Use this command to check whether the guest has booted.</source>
          <target state="new">Use this command to check whether the guest has booted.</target>
        </trans-unit>
        <trans-unit id="2d2e8a6e-ecce-4919-8f87-65c18f34caa6" xml:space="preserve">
          <source><bpt id="38a7f3b5-0418-4916-add5-d3e7cba829bc">&lt;strong&gt;</bpt>Outcome<ept id="38a7f3b5-0418-4916-add5-d3e7cba829bc">&lt;/strong&gt;</ept>  
Prints a friendly message declaring the state of the guest OS.</source>
          <target state="new"><bpt id="38a7f3b5-0418-4916-add5-d3e7cba829bc">&lt;strong&gt;</bpt>Outcome<ept id="38a7f3b5-0418-4916-add5-d3e7cba829bc">&lt;/strong&gt;</ept>  
Prints a friendly message declaring the state of the guest OS.</target>
        </trans-unit>
        <trans-unit id="151cc3d7-b6f8-4c9b-9b49-9d7982fb2615" xml:space="preserve">
          <source>Script locking until the guest has booted</source>
          <target state="new">Script locking until the guest has booted</target>
        </trans-unit>
        <trans-unit id="2c4bf06a-16a1-415f-9077-a1db0dbd4454" xml:space="preserve">
          <source>The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</source>
          <target state="new">The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</target>
        </trans-unit>
        <trans-unit id="f8504e5b-9551-4945-80d8-91b02167e062" xml:space="preserve">
          <source><bpt id="7a27836b-78fc-42e6-818f-c18c000a35bf">&lt;strong&gt;</bpt>Outcome<ept id="7a27836b-78fc-42e6-818f-c18c000a35bf">&lt;/strong&gt;</ept>  
Prints a friendly message and locks until the connection to the VM succeeds.</source>
          <target state="new"><bpt id="7a27836b-78fc-42e6-818f-c18c000a35bf">&lt;strong&gt;</bpt>Outcome<ept id="7a27836b-78fc-42e6-818f-c18c000a35bf">&lt;/strong&gt;</ept>  
Prints a friendly message and locks until the connection to the VM succeeds.</target>
        </trans-unit>
        <trans-unit id="d433a2db-94c7-4e38-a41e-78e4ae5b9632" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="676b9fdf-da57-4539-8b63-8a53779fa743" xml:space="preserve">
          <source>Script locking until the guest has a network</source>
          <target state="new">Script locking until the guest has a network</target>
        </trans-unit>
        <trans-unit id="6c12f7e3-3a72-48a4-9013-500f597ae9db" xml:space="preserve">
          <source>With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</source>
          <target state="new">With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</target>
        </trans-unit>
        <trans-unit id="16f8cca5-3c03-4376-850e-911f2831eaae" xml:space="preserve">
          <source><bpt id="28400d03-d291-414e-8b79-e67cf257a9f8">&lt;em&gt;</bpt>* Outcome *<ept id="28400d03-d291-414e-8b79-e67cf257a9f8">&lt;/em&gt;</ept>
Locks until a DHCP lease is recieved.</source>
          <target state="new"><bpt id="28400d03-d291-414e-8b79-e67cf257a9f8">&lt;em&gt;</bpt>* Outcome *<ept id="28400d03-d291-414e-8b79-e67cf257a9f8">&lt;/em&gt;</ept>
Locks until a DHCP lease is recieved.</target>
        </trans-unit>
        <trans-unit id="4be969f4-d9cd-44c5-a083-0f99ee2966a8" xml:space="preserve">
          <source>Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</source>
          <target state="new">Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</target>
        </trans-unit>
        <trans-unit id="d99daebb-9730-43f5-8f40-9c28f6d4c4aa" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="bd31842f-91a6-4a6f-b675-1eef89f6c458" xml:space="preserve">
          <source>Managing credentials with PowerShell</source>
          <target state="new">Managing credentials with PowerShell</target>
        </trans-unit>
        <trans-unit id="8e9cffb4-5d31-4d33-aa7e-911b95a66abc" xml:space="preserve">
          <source>Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</source>
          <target state="new">Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</target>
        </trans-unit>
        <trans-unit id="6f75e04f-37f2-4960-b8dc-fab7d765172d" xml:space="preserve">
          <source>There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</source>
          <target state="new">There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</target>
        </trans-unit>
        <trans-unit id="98911193-191e-4c92-b21f-e66c83dbf807" xml:space="preserve">
          <source>The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</source>
          <target state="new">The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</target>
        </trans-unit>
        <trans-unit id="b731f278-096c-46a2-af5e-82a0b3d26afd" xml:space="preserve">
          <source>This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</source>
          <target state="new">This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</target>
        </trans-unit>
        <trans-unit id="2ecbe154-4509-4664-a7a0-7f49400e9fc3" xml:space="preserve">
          <source>In this scenario you can just run <bpt id="a2a45351-43b7-481f-942a-3af308eaa0c8">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="a2a45351-43b7-481f-942a-3af308eaa0c8">&lt;/code&gt;</ept>.</source>
          <target state="new">In this scenario you can just run <bpt id="a2a45351-43b7-481f-942a-3af308eaa0c8">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="a2a45351-43b7-481f-942a-3af308eaa0c8">&lt;/code&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="2bd4a6f6-3821-46e6-bba6-e507b6ae2244" xml:space="preserve">
          <source>Let PowerShell prompt you for credentials  
If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</source>
          <target state="new">Let PowerShell prompt you for credentials  
If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</target>
        </trans-unit>
        <trans-unit id="f1b00938-edee-4b5c-8d40-b68e22e06827" xml:space="preserve">
          <source>Store credentials in a variable for reuse.</source>
          <target state="new">Store credentials in a variable for reuse.</target>
        </trans-unit>
        <trans-unit id="9734a57d-7cf1-409d-b006-5059a0ff7311" xml:space="preserve">
          <source>Running a simple command like this:</source>
          <target state="new">Running a simple command like this:</target>
        </trans-unit>
        <trans-unit id="338d88c4-3fd8-41c1-a7bf-e25336cd8dee" xml:space="preserve">
          <source>  And then running something like this:</source>
          <target state="new">  And then running something like this:</target>
        </trans-unit>
        <trans-unit id="47198e8e-4b12-43ac-97bf-f91d2c1cf031" xml:space="preserve">
          <source>  Will mean that you only get prompted once per script/PowerShell session for your credentials.</source>
          <target state="new">  Will mean that you only get prompted once per script/PowerShell session for your credentials.</target>
        </trans-unit>
        <trans-unit id="8b85b2c2-9c6e-4b5d-b92c-c4e614d03856" xml:space="preserve">
          <source>Code your credentials into your scripts.</source>
          <target state="new">Code your credentials into your scripts.</target>
        </trans-unit>
        <trans-unit id="6c137f1a-8ee9-4907-9809-76b37704dadd" xml:space="preserve">
          <source><bpt id="ae5689a1-bfdd-4ba0-9702-248eb51ecc26">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="ae5689a1-bfdd-4ba0-9702-248eb51ecc26">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="ae5689a1-bfdd-4ba0-9702-248eb51ecc26">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="ae5689a1-bfdd-4ba0-9702-248eb51ecc26">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="dab48c6e-f7f0-4889-b555-353590f3bc43" xml:space="preserve">
          <source>Warning:  _Do not do this in a production system.</source>
          <target state="new">Warning:  _Do not do this in a production system.</target>
        </trans-unit>
        <trans-unit id="cb2061dd-d397-44af-8e74-877efcb6c1c5" xml:space="preserve">
          <source>Do not do this with real passwords._</source>
          <target state="new">Do not do this with real passwords._</target>
        </trans-unit>
        <trans-unit id="fa155719-2c30-4807-bef6-73dffd4fb9bb" xml:space="preserve">
          <source>You can hand craft a PSCredential object with some code like this:</source>
          <target state="new">You can hand craft a PSCredential object with some code like this:</target>
        </trans-unit>
        <trans-unit id="356bd198-8fec-44fc-a4bd-ee84e3bc31f1" xml:space="preserve">
          <source>Grossly insecure - but useful for testing.</source>
          <target state="new">Grossly insecure - but useful for testing.</target>
        </trans-unit>
        <trans-unit id="ee5ae955-811e-463e-ab74-a09eabf37bad" xml:space="preserve">
          <source>Now you get no prompts at all in this session.</source>
          <target state="new">Now you get no prompts at all in this session.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>