<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="fr-fr" original="foo.file" tool-id="300c0ee6-146f-408c-9c91-d9e2479cec1c" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="300c0ee6-146f-408c-9c91-d9e2479cec1c" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
      <olfilehash xmlns="">1e570b48f01ed63333705d5da5031bc706a67a94</olfilehash>
    </header>
    <body>
      <group id="0ee62e8b-0fae-4060-b2cc-95c43cf49bae">
        <trans-unit id="170b6e2d-2aa4-4c64-92a3-4d3d8f4736f1" xml:space="preserve">
          <source>ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9
title: PowerShell Snippets</source>
          <target state="new">ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9
title: PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="494b58e7-26c2-4355-8769-0ad80f017acc" xml:space="preserve">
          <source>PowerShell Snippets</source>
          <target state="new">PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="3a6cd88d-e019-4a12-be0a-b327d7e6164a" xml:space="preserve">
          <source>Adding this sentence for testing HO-HB process.</source>
          <target state="new">Adding this sentence for testing HO-HB process.</target>
        </trans-unit>
        <trans-unit id="3d0dc81d-b954-4230-968f-757222451080" xml:space="preserve">
          <source>PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</source>
          <target state="new">PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</target>
        </trans-unit>
        <trans-unit id="f5fc4f3d-614b-4926-bfab-da711b742b81" xml:space="preserve">
          <source>All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</source>
          <target state="new">All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</target>
        </trans-unit>
        <trans-unit id="957e2234-b5ec-4ec4-8f3a-e0efa70c6781" xml:space="preserve">
          <source>If you aren't sure if you have the right permissions, type <bpt id="d55d5e8e-327a-4ec4-b3a9-a343c46374d8">&lt;code&gt;</bpt>Get-VM<ept id="d55d5e8e-327a-4ec4-b3a9-a343c46374d8">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</source>
          <target state="new">If you aren't sure if you have the right permissions, type <bpt id="d55d5e8e-327a-4ec4-b3a9-a343c46374d8">&lt;code&gt;</bpt>Get-VM<ept id="d55d5e8e-327a-4ec4-b3a9-a343c46374d8">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</target>
        </trans-unit>
        <trans-unit id="13d865d9-ad57-42bf-8ad6-cde12650c8d6" xml:space="preserve">
          <source>PowerShell Direct tools</source>
          <target state="new">PowerShell Direct tools</target>
        </trans-unit>
        <trans-unit id="0fc657d5-415e-4d64-91de-c70e82f7f6fe" xml:space="preserve">
          <source>All of the scripts and snippets in this section will rely on the following basics.</source>
          <target state="new">All of the scripts and snippets in this section will rely on the following basics.</target>
        </trans-unit>
        <trans-unit id="12d03f95-5e88-47aa-b0cf-fc238ab22628" xml:space="preserve">
          <source><bpt id="d7c208c0-6e4a-4a44-a645-174192b17ab9">&lt;strong&gt;</bpt>Requirements<ept id="d7c208c0-6e4a-4a44-a645-174192b17ab9">&lt;/strong&gt;</ept> :</source>
          <target state="new"><bpt id="d7c208c0-6e4a-4a44-a645-174192b17ab9">&lt;strong&gt;</bpt>Requirements<ept id="d7c208c0-6e4a-4a44-a645-174192b17ab9">&lt;/strong&gt;</ept> :</target>
        </trans-unit>
        <trans-unit id="a91cc408-69b3-4e9f-a787-263ea2a2a2d4" xml:space="preserve">
          <source>PowerShell Direct.</source>
          <target state="new">PowerShell Direct.</target>
        </trans-unit>
        <trans-unit id="79762990-668f-49ab-b0fe-c86fed068a99" xml:space="preserve">
          <source>Windows 10 guest and host OS.</source>
          <target state="new">Windows 10 guest and host OS.</target>
        </trans-unit>
        <trans-unit id="2caa7843-0f99-41aa-a11d-50a00ae6ebf7" xml:space="preserve">
          <source><bpt id="52d68181-4b19-4b07-9478-10cee5c07484">&lt;strong&gt;</bpt>Common Variables<ept id="52d68181-4b19-4b07-9478-10cee5c07484">&lt;/strong&gt;</ept> :  
<bpt id="f88c4a42-0488-45a9-944a-97407988f27d">&lt;code&gt;</bpt>$VMName<ept id="f88c4a42-0488-45a9-944a-97407988f27d">&lt;/code&gt;</ept> -- this is a string with the VMName.</source>
          <target state="new"><bpt id="52d68181-4b19-4b07-9478-10cee5c07484">&lt;strong&gt;</bpt>Common Variables<ept id="52d68181-4b19-4b07-9478-10cee5c07484">&lt;/strong&gt;</ept> :  
<bpt id="f88c4a42-0488-45a9-944a-97407988f27d">&lt;code&gt;</bpt>$VMName<ept id="f88c4a42-0488-45a9-944a-97407988f27d">&lt;/code&gt;</ept> -- this is a string with the VMName.</target>
        </trans-unit>
        <trans-unit id="91af41db-01ae-425d-9dec-25f9386df5e7" xml:space="preserve">
          <source>See a list of available VMs with <bpt id="68e04d54-d393-461a-b08e-221cb93d3562">&lt;code&gt;</bpt>Get-VM<ept id="68e04d54-d393-461a-b08e-221cb93d3562">&lt;/code&gt;</ept>  
<bpt id="310148bc-dbed-4fff-9cb0-584c9ba1eb98">&lt;code&gt;</bpt>$cred<ept id="310148bc-dbed-4fff-9cb0-584c9ba1eb98">&lt;/code&gt;</ept> -- Credential for the guest OS.</source>
          <target state="new">See a list of available VMs with <bpt id="68e04d54-d393-461a-b08e-221cb93d3562">&lt;code&gt;</bpt>Get-VM<ept id="68e04d54-d393-461a-b08e-221cb93d3562">&lt;/code&gt;</ept>  
<bpt id="310148bc-dbed-4fff-9cb0-584c9ba1eb98">&lt;code&gt;</bpt>$cred<ept id="310148bc-dbed-4fff-9cb0-584c9ba1eb98">&lt;/code&gt;</ept> -- Credential for the guest OS.</target>
        </trans-unit>
        <trans-unit id="d17b72d0-5ed6-4705-83fb-b61fa2bd2c3c" xml:space="preserve">
          <source>Can be populated using <bpt id="4e9eab4e-ab9a-4c59-aad9-b95af4de8885">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="4e9eab4e-ab9a-4c59-aad9-b95af4de8885">&lt;/code&gt;</ept></source>
          <target state="new">Can be populated using <bpt id="4e9eab4e-ab9a-4c59-aad9-b95af4de8885">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="4e9eab4e-ab9a-4c59-aad9-b95af4de8885">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="ecff4b5f-4e97-45d0-a739-374573d643a4" xml:space="preserve">
          <source>Check if the guest has booted</source>
          <target state="new">Check if the guest has booted</target>
        </trans-unit>
        <trans-unit id="464c2445-4fa8-4209-a696-73a3a3b61722" xml:space="preserve">
          <source>Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</source>
          <target state="new">Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</target>
        </trans-unit>
        <trans-unit id="1e86d7dc-7dfc-485e-a173-0cce637d3e9c" xml:space="preserve">
          <source>Use this command to check whether the guest has booted.</source>
          <target state="new">Use this command to check whether the guest has booted.</target>
        </trans-unit>
        <trans-unit id="cca74502-7e0c-4125-8bad-1865e08d01dd" xml:space="preserve">
          <source><bpt id="4232a1f7-ada2-45fa-b99d-a7de63fdf983">&lt;strong&gt;</bpt>Outcome<ept id="4232a1f7-ada2-45fa-b99d-a7de63fdf983">&lt;/strong&gt;</ept>  
Prints a friendly message declaring the state of the guest OS.</source>
          <target state="new"><bpt id="4232a1f7-ada2-45fa-b99d-a7de63fdf983">&lt;strong&gt;</bpt>Outcome<ept id="4232a1f7-ada2-45fa-b99d-a7de63fdf983">&lt;/strong&gt;</ept>  
Prints a friendly message declaring the state of the guest OS.</target>
        </trans-unit>
        <trans-unit id="6f27d82d-6425-4605-9693-1026c16ca461" xml:space="preserve">
          <source>Script locking until the guest has booted</source>
          <target state="new">Script locking until the guest has booted</target>
        </trans-unit>
        <trans-unit id="5f804adc-0188-426f-8f3a-e0465f74fac4" xml:space="preserve">
          <source>The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</source>
          <target state="new">The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</target>
        </trans-unit>
        <trans-unit id="7e234c51-5f2a-4b95-8702-c3c86966077d" xml:space="preserve">
          <source><bpt id="08555837-734c-4a35-983d-37fabdf381b5">&lt;strong&gt;</bpt>Outcome<ept id="08555837-734c-4a35-983d-37fabdf381b5">&lt;/strong&gt;</ept>  
Prints a friendly message and locks until the connection to the VM succeeds.</source>
          <target state="new"><bpt id="08555837-734c-4a35-983d-37fabdf381b5">&lt;strong&gt;</bpt>Outcome<ept id="08555837-734c-4a35-983d-37fabdf381b5">&lt;/strong&gt;</ept>  
Prints a friendly message and locks until the connection to the VM succeeds.</target>
        </trans-unit>
        <trans-unit id="05322c66-ff44-4c1b-91d1-3f105a6999e1" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="5e8222af-d499-4c84-b3c7-b10865766ca9" xml:space="preserve">
          <source>Script locking until the guest has a network</source>
          <target state="new">Script locking until the guest has a network</target>
        </trans-unit>
        <trans-unit id="99c57edc-adb2-44fb-83f1-a530287ade3b" xml:space="preserve">
          <source>With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</source>
          <target state="new">With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</target>
        </trans-unit>
        <trans-unit id="985115ce-752d-4b85-a705-a34badae88e6" xml:space="preserve">
          <source><bpt id="1e89756f-b6f6-4c30-a587-975748746edd">&lt;em&gt;</bpt>* Outcome *<ept id="1e89756f-b6f6-4c30-a587-975748746edd">&lt;/em&gt;</ept>
Locks until a DHCP lease is recieved.</source>
          <target state="new"><bpt id="1e89756f-b6f6-4c30-a587-975748746edd">&lt;em&gt;</bpt>* Outcome *<ept id="1e89756f-b6f6-4c30-a587-975748746edd">&lt;/em&gt;</ept>
Locks until a DHCP lease is recieved.</target>
        </trans-unit>
        <trans-unit id="5952b76a-de0f-4851-854d-acdb7d357dfa" xml:space="preserve">
          <source>Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</source>
          <target state="new">Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</target>
        </trans-unit>
        <trans-unit id="8dcf2230-504c-4b70-9f44-0cc50f744056" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="21ac565e-7177-4a4c-9e8e-34963c7f6035" xml:space="preserve">
          <source>Managing credentials with PowerShell</source>
          <target state="new">Managing credentials with PowerShell</target>
        </trans-unit>
        <trans-unit id="eb49d7cd-6549-4ac1-8e58-eaa84c953f78" xml:space="preserve">
          <source>Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</source>
          <target state="new">Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</target>
        </trans-unit>
        <trans-unit id="9133d4c2-2267-4036-91cb-e82500040d56" xml:space="preserve">
          <source>There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</source>
          <target state="new">There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</target>
        </trans-unit>
        <trans-unit id="c253ecba-112e-4286-a83d-439d775da8af" xml:space="preserve">
          <source>The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</source>
          <target state="new">The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</target>
        </trans-unit>
        <trans-unit id="cf9c0e5a-a0eb-4fa2-bf20-aae724400d95" xml:space="preserve">
          <source>This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</source>
          <target state="new">This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</target>
        </trans-unit>
        <trans-unit id="e5bbbacc-9748-4c79-9ba2-368e0f19b2cd" xml:space="preserve">
          <source>In this scenario you can just run <bpt id="4fd56c96-29ca-4ec5-b4b5-b94611f0651e">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="4fd56c96-29ca-4ec5-b4b5-b94611f0651e">&lt;/code&gt;</ept>.</source>
          <target state="new">In this scenario you can just run <bpt id="4fd56c96-29ca-4ec5-b4b5-b94611f0651e">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="4fd56c96-29ca-4ec5-b4b5-b94611f0651e">&lt;/code&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="3e78efdf-fbd3-4504-86f8-72fd8bcccc72" xml:space="preserve">
          <source>Let PowerShell prompt you for credentials  
If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</source>
          <target state="new">Let PowerShell prompt you for credentials  
If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</target>
        </trans-unit>
        <trans-unit id="d7eb84a9-1ae1-403a-9efe-454ac9d0cd03" xml:space="preserve">
          <source>Store credentials in a variable for reuse.</source>
          <target state="new">Store credentials in a variable for reuse.</target>
        </trans-unit>
        <trans-unit id="386a37cd-7341-4488-845f-180067bec863" xml:space="preserve">
          <source>Running a simple command like this:</source>
          <target state="new">Running a simple command like this:</target>
        </trans-unit>
        <trans-unit id="2425860a-f087-4df4-96e4-584ef5e74eb0" xml:space="preserve">
          <source>  And then running something like this:</source>
          <target state="new">  And then running something like this:</target>
        </trans-unit>
        <trans-unit id="b9b19d75-ed38-4669-92c4-f03b04777e1b" xml:space="preserve">
          <source>  Will mean that you only get prompted once per script/PowerShell session for your credentials.</source>
          <target state="new">  Will mean that you only get prompted once per script/PowerShell session for your credentials.</target>
        </trans-unit>
        <trans-unit id="f0d9813a-c36c-43e3-a118-11581975eb05" xml:space="preserve">
          <source>Code your credentials into your scripts.</source>
          <target state="new">Code your credentials into your scripts.</target>
        </trans-unit>
        <trans-unit id="ab006e54-8c2f-4005-9dda-249718cb4d61" xml:space="preserve">
          <source><bpt id="613410c6-ec02-4c3e-af5e-dc276374008f">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="613410c6-ec02-4c3e-af5e-dc276374008f">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="613410c6-ec02-4c3e-af5e-dc276374008f">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="613410c6-ec02-4c3e-af5e-dc276374008f">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="b009983b-9e72-4089-8b6d-d88eb7ae5fba" xml:space="preserve">
          <source>Warning:  _Do not do this in a production system.</source>
          <target state="new">Warning:  _Do not do this in a production system.</target>
        </trans-unit>
        <trans-unit id="e6da8996-94db-4564-bc27-5eb72046151f" xml:space="preserve">
          <source>Do not do this with real passwords._</source>
          <target state="new">Do not do this with real passwords._</target>
        </trans-unit>
        <trans-unit id="39c796c3-56bb-4cad-b60e-89e42cf1b18f" xml:space="preserve">
          <source>You can hand craft a PSCredential object with some code like this:</source>
          <target state="new">You can hand craft a PSCredential object with some code like this:</target>
        </trans-unit>
        <trans-unit id="e1b9e63f-8ade-4a80-bf60-e6d24a73f7a7" xml:space="preserve">
          <source>Grossly insecure - but useful for testing.</source>
          <target state="new">Grossly insecure - but useful for testing.</target>
        </trans-unit>
        <trans-unit id="d01d5b80-8e5c-410c-a814-e9824dcb2e8a" xml:space="preserve">
          <source>Now you get no prompts at all in this session.</source>
          <target state="new">Now you get no prompts at all in this session.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>