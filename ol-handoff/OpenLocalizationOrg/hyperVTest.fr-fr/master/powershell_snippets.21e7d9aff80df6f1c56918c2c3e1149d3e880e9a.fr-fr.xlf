<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="fr-fr" original="foo.file" tool-id="8375aafb-3184-4cb9-a3d3-1cba9c929eab" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="8375aafb-3184-4cb9-a3d3-1cba9c929eab" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
      <olfilehash xmlns="">1e570b48f01ed63333705d5da5031bc706a67a94</olfilehash>
    </header>
    <body>
      <group id="f29f1a53-9382-4e32-be18-74b6b5985b04">
        <trans-unit id="ef37dd3a-df68-4ad2-a26a-0de2c59924ac" xml:space="preserve">
          <source>ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9
title: PowerShell Snippets</source>
          <target state="new">ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9
title: PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="f2555a79-18c3-473f-9c02-33e01912b59d" xml:space="preserve">
          <source>PowerShell Snippets</source>
          <target state="new">PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="bb087c04-85e4-45cb-b18c-b0d2ba110ca6" xml:space="preserve">
          <source>Adding this sentence for testing HO-HB process.</source>
          <target state="new">Adding this sentence for testing HO-HB process.</target>
        </trans-unit>
        <trans-unit id="ac2e71a0-22da-4829-b7bc-6a51cb30fcac" xml:space="preserve">
          <source>PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</source>
          <target state="new">PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</target>
        </trans-unit>
        <trans-unit id="a7bf6cb2-eb89-420f-a3f3-7cb9eef0f030" xml:space="preserve">
          <source>All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</source>
          <target state="new">All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</target>
        </trans-unit>
        <trans-unit id="1550edd7-50cb-4240-9792-2f855a360fd0" xml:space="preserve">
          <source>If you aren't sure if you have the right permissions, type <bpt id="f4c1de67-679a-4529-ac17-f4eb937211fe">&lt;code&gt;</bpt>Get-VM<ept id="f4c1de67-679a-4529-ac17-f4eb937211fe">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</source>
          <target state="new">If you aren't sure if you have the right permissions, type <bpt id="f4c1de67-679a-4529-ac17-f4eb937211fe">&lt;code&gt;</bpt>Get-VM<ept id="f4c1de67-679a-4529-ac17-f4eb937211fe">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</target>
        </trans-unit>
        <trans-unit id="5a143b29-9ee9-465c-a8df-f6f83eca9f6f" xml:space="preserve">
          <source>PowerShell Direct tools</source>
          <target state="new">PowerShell Direct tools</target>
        </trans-unit>
        <trans-unit id="fff45496-c808-4e67-b4e8-812acc51e10c" xml:space="preserve">
          <source>All of the scripts and snippets in this section will rely on the following basics.</source>
          <target state="new">All of the scripts and snippets in this section will rely on the following basics.</target>
        </trans-unit>
        <trans-unit id="b1edddd7-ac65-4c18-b822-b7764cece149" xml:space="preserve">
          <source><bpt id="984930b8-e851-4aa9-9c5d-b55b6554faa6">&lt;strong&gt;</bpt>Requirements<ept id="984930b8-e851-4aa9-9c5d-b55b6554faa6">&lt;/strong&gt;</ept> :</source>
          <target state="new"><bpt id="984930b8-e851-4aa9-9c5d-b55b6554faa6">&lt;strong&gt;</bpt>Requirements<ept id="984930b8-e851-4aa9-9c5d-b55b6554faa6">&lt;/strong&gt;</ept> :</target>
        </trans-unit>
        <trans-unit id="6d222fa5-36d9-467e-8a6a-bd017a4b2d0d" xml:space="preserve">
          <source>PowerShell Direct.</source>
          <target state="new">PowerShell Direct.</target>
        </trans-unit>
        <trans-unit id="70d97293-ff14-414f-b40d-e8a5d6bb27bb" xml:space="preserve">
          <source>Windows 10 guest and host OS.</source>
          <target state="new">Windows 10 guest and host OS.</target>
        </trans-unit>
        <trans-unit id="b8537aec-aaae-4302-87ee-bc85299b95b5" xml:space="preserve">
          <source><bpt id="2163453f-6b3f-424f-ad0b-2d2a7c681b47">&lt;strong&gt;</bpt>Common Variables<ept id="2163453f-6b3f-424f-ad0b-2d2a7c681b47">&lt;/strong&gt;</ept> :  
<bpt id="3fd03206-6d69-4570-ad2c-30888bfb612a">&lt;code&gt;</bpt>$VMName<ept id="3fd03206-6d69-4570-ad2c-30888bfb612a">&lt;/code&gt;</ept> -- this is a string with the VMName.</source>
          <target state="new"><bpt id="2163453f-6b3f-424f-ad0b-2d2a7c681b47">&lt;strong&gt;</bpt>Common Variables<ept id="2163453f-6b3f-424f-ad0b-2d2a7c681b47">&lt;/strong&gt;</ept> :  
<bpt id="3fd03206-6d69-4570-ad2c-30888bfb612a">&lt;code&gt;</bpt>$VMName<ept id="3fd03206-6d69-4570-ad2c-30888bfb612a">&lt;/code&gt;</ept> -- this is a string with the VMName.</target>
        </trans-unit>
        <trans-unit id="6651fa88-ed4e-4d36-a1c2-1dc3902bb47c" xml:space="preserve">
          <source>See a list of available VMs with <bpt id="56fa0c10-d847-4da8-820d-f9a87ce5bfaa">&lt;code&gt;</bpt>Get-VM<ept id="56fa0c10-d847-4da8-820d-f9a87ce5bfaa">&lt;/code&gt;</ept>  
<bpt id="0dda6895-355a-416b-8dd8-0d21a36dcb82">&lt;code&gt;</bpt>$cred<ept id="0dda6895-355a-416b-8dd8-0d21a36dcb82">&lt;/code&gt;</ept> -- Credential for the guest OS.</source>
          <target state="new">See a list of available VMs with <bpt id="56fa0c10-d847-4da8-820d-f9a87ce5bfaa">&lt;code&gt;</bpt>Get-VM<ept id="56fa0c10-d847-4da8-820d-f9a87ce5bfaa">&lt;/code&gt;</ept>  
<bpt id="0dda6895-355a-416b-8dd8-0d21a36dcb82">&lt;code&gt;</bpt>$cred<ept id="0dda6895-355a-416b-8dd8-0d21a36dcb82">&lt;/code&gt;</ept> -- Credential for the guest OS.</target>
        </trans-unit>
        <trans-unit id="8090e1bf-b087-4312-b9ea-350350bf8024" xml:space="preserve">
          <source>Can be populated using <bpt id="e4afc0aa-fa4a-4a47-ae3d-bacf37d30933">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="e4afc0aa-fa4a-4a47-ae3d-bacf37d30933">&lt;/code&gt;</ept></source>
          <target state="new">Can be populated using <bpt id="e4afc0aa-fa4a-4a47-ae3d-bacf37d30933">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="e4afc0aa-fa4a-4a47-ae3d-bacf37d30933">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="ff60b682-1fdc-4cce-adfb-4ca41d7672ac" xml:space="preserve">
          <source>Check if the guest has booted</source>
          <target state="new">Check if the guest has booted</target>
        </trans-unit>
        <trans-unit id="5d247991-3303-4db6-b034-fe30b12afd90" xml:space="preserve">
          <source>Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</source>
          <target state="new">Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</target>
        </trans-unit>
        <trans-unit id="6f855773-8749-4af1-949b-8e31cf36882c" xml:space="preserve">
          <source>Use this command to check whether the guest has booted.</source>
          <target state="new">Use this command to check whether the guest has booted.</target>
        </trans-unit>
        <trans-unit id="945c4487-1525-4dfc-808e-74e0fe302cde" xml:space="preserve">
          <source><bpt id="264fd961-d7a7-4afe-b68e-5d21f6a1da91">&lt;strong&gt;</bpt>Outcome<ept id="264fd961-d7a7-4afe-b68e-5d21f6a1da91">&lt;/strong&gt;</ept>  
Prints a friendly message declaring the state of the guest OS.</source>
          <target state="new"><bpt id="264fd961-d7a7-4afe-b68e-5d21f6a1da91">&lt;strong&gt;</bpt>Outcome<ept id="264fd961-d7a7-4afe-b68e-5d21f6a1da91">&lt;/strong&gt;</ept>  
Prints a friendly message declaring the state of the guest OS.</target>
        </trans-unit>
        <trans-unit id="e3a37583-02c9-4d4f-a223-cbab6b75dc1b" xml:space="preserve">
          <source>Script locking until the guest has booted</source>
          <target state="new">Script locking until the guest has booted</target>
        </trans-unit>
        <trans-unit id="2730bdc2-853b-4480-b9d5-5e001ef3c2b6" xml:space="preserve">
          <source>The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</source>
          <target state="new">The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</target>
        </trans-unit>
        <trans-unit id="0ce44ec0-dd1c-491b-a971-7b300bbc63d4" xml:space="preserve">
          <source><bpt id="fbb54a6b-cf1e-4000-a236-a7578de75eee">&lt;strong&gt;</bpt>Outcome<ept id="fbb54a6b-cf1e-4000-a236-a7578de75eee">&lt;/strong&gt;</ept>  
Prints a friendly message and locks until the connection to the VM succeeds.</source>
          <target state="new"><bpt id="fbb54a6b-cf1e-4000-a236-a7578de75eee">&lt;strong&gt;</bpt>Outcome<ept id="fbb54a6b-cf1e-4000-a236-a7578de75eee">&lt;/strong&gt;</ept>  
Prints a friendly message and locks until the connection to the VM succeeds.</target>
        </trans-unit>
        <trans-unit id="1458b4ea-beb6-4c58-a176-f78dcb203443" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="c906db6c-79d2-471c-885b-1c43d17feee3" xml:space="preserve">
          <source>Script locking until the guest has a network</source>
          <target state="new">Script locking until the guest has a network</target>
        </trans-unit>
        <trans-unit id="d793fed5-dea2-4395-ba44-70cc638baaab" xml:space="preserve">
          <source>With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</source>
          <target state="new">With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</target>
        </trans-unit>
        <trans-unit id="3e3b9ea8-863f-4a05-891c-bb7b3269b8a1" xml:space="preserve">
          <source><bpt id="dfd3cb04-d782-408c-ba08-42076409c91a">&lt;em&gt;</bpt>* Outcome *<ept id="dfd3cb04-d782-408c-ba08-42076409c91a">&lt;/em&gt;</ept>
Locks until a DHCP lease is recieved.</source>
          <target state="new"><bpt id="dfd3cb04-d782-408c-ba08-42076409c91a">&lt;em&gt;</bpt>* Outcome *<ept id="dfd3cb04-d782-408c-ba08-42076409c91a">&lt;/em&gt;</ept>
Locks until a DHCP lease is recieved.</target>
        </trans-unit>
        <trans-unit id="e51165f3-36f6-4f9f-a91e-a9248bac45a1" xml:space="preserve">
          <source>Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</source>
          <target state="new">Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</target>
        </trans-unit>
        <trans-unit id="524e5e74-24d3-4ef9-998a-885db789b018" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="adf2b41f-b50f-4e0e-9522-2aedf94240d7" xml:space="preserve">
          <source>Managing credentials with PowerShell</source>
          <target state="new">Managing credentials with PowerShell</target>
        </trans-unit>
        <trans-unit id="5c010711-a994-4644-8c18-1302722dc7ae" xml:space="preserve">
          <source>Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</source>
          <target state="new">Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</target>
        </trans-unit>
        <trans-unit id="739bb528-415a-47b2-8183-40539847c9d0" xml:space="preserve">
          <source>There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</source>
          <target state="new">There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</target>
        </trans-unit>
        <trans-unit id="440d7de0-e357-4fae-bb2f-48f829610eb2" xml:space="preserve">
          <source>The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</source>
          <target state="new">The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</target>
        </trans-unit>
        <trans-unit id="1642ccf8-e9ed-4f29-aff8-a52fce2b60ca" xml:space="preserve">
          <source>This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</source>
          <target state="new">This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</target>
        </trans-unit>
        <trans-unit id="f1496269-e09d-4398-97fd-e0a6ebeb1977" xml:space="preserve">
          <source>In this scenario you can just run <bpt id="5b3ecb8d-1d6c-4fbe-aded-9d28c3185fde">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="5b3ecb8d-1d6c-4fbe-aded-9d28c3185fde">&lt;/code&gt;</ept>.</source>
          <target state="new">In this scenario you can just run <bpt id="5b3ecb8d-1d6c-4fbe-aded-9d28c3185fde">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="5b3ecb8d-1d6c-4fbe-aded-9d28c3185fde">&lt;/code&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="ee4671ec-1595-4613-a31f-164951d2b0a7" xml:space="preserve">
          <source>Let PowerShell prompt you for credentials  
If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</source>
          <target state="new">Let PowerShell prompt you for credentials  
If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</target>
        </trans-unit>
        <trans-unit id="703bdf02-3987-4a6f-a76f-179aa1d3ccca" xml:space="preserve">
          <source>Store credentials in a variable for reuse.</source>
          <target state="new">Store credentials in a variable for reuse.</target>
        </trans-unit>
        <trans-unit id="5719b350-1013-462b-a47d-18c8f41621de" xml:space="preserve">
          <source>Running a simple command like this:</source>
          <target state="new">Running a simple command like this:</target>
        </trans-unit>
        <trans-unit id="50924021-38ae-406a-b52a-aa5d67957c8c" xml:space="preserve">
          <source>  And then running something like this:</source>
          <target state="new">  And then running something like this:</target>
        </trans-unit>
        <trans-unit id="19d96858-1b93-4846-bf8e-e1bd339fe89d" xml:space="preserve">
          <source>  Will mean that you only get prompted once per script/PowerShell session for your credentials.</source>
          <target state="new">  Will mean that you only get prompted once per script/PowerShell session for your credentials.</target>
        </trans-unit>
        <trans-unit id="24c463dc-ef33-4b60-ba1c-e9d0bbf13c8b" xml:space="preserve">
          <source>Code your credentials into your scripts.</source>
          <target state="new">Code your credentials into your scripts.</target>
        </trans-unit>
        <trans-unit id="86cf15d4-98a3-4269-b408-f15155e74902" xml:space="preserve">
          <source><bpt id="8d92aec4-4c78-45e9-b797-ea4a62630cb5">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="8d92aec4-4c78-45e9-b797-ea4a62630cb5">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="8d92aec4-4c78-45e9-b797-ea4a62630cb5">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="8d92aec4-4c78-45e9-b797-ea4a62630cb5">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="b1ac1a3c-fe48-416f-a112-e3fe0a660299" xml:space="preserve">
          <source>Warning:  _Do not do this in a production system.</source>
          <target state="new">Warning:  _Do not do this in a production system.</target>
        </trans-unit>
        <trans-unit id="faf25258-f172-4933-8cbc-e539307b3dda" xml:space="preserve">
          <source>Do not do this with real passwords._</source>
          <target state="new">Do not do this with real passwords._</target>
        </trans-unit>
        <trans-unit id="ab97578b-f505-4444-aa7c-f2d122f0e830" xml:space="preserve">
          <source>You can hand craft a PSCredential object with some code like this:</source>
          <target state="new">You can hand craft a PSCredential object with some code like this:</target>
        </trans-unit>
        <trans-unit id="08d01ee7-a13c-429c-bbf2-c4b0d31702bc" xml:space="preserve">
          <source>Grossly insecure - but useful for testing.</source>
          <target state="new">Grossly insecure - but useful for testing.</target>
        </trans-unit>
        <trans-unit id="125f2cc0-836c-4e70-b919-a06d5df257cc" xml:space="preserve">
          <source>Now you get no prompts at all in this session.</source>
          <target state="new">Now you get no prompts at all in this session.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>