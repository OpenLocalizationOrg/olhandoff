<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="fr-fr" original="foo.file" tool-id="8971bb7a-d6b0-403f-8522-b9e1b364c74f" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="8971bb7a-d6b0-403f-8522-b9e1b364c74f" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
      <olfilehash xmlns="">1e570b48f01ed63333705d5da5031bc706a67a94</olfilehash>
    </header>
    <body>
      <group id="97c6f17a-c2f3-4dbd-b5b5-19745f6118f3">
        <trans-unit id="38d0d84c-ea9a-4b02-a353-b1cb6c34855d" xml:space="preserve">
          <source>ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9
title: PowerShell Snippets</source>
          <target state="new">ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9
title: PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="4d3f4a29-f8f0-47c5-9139-eaff5e85d0e4" xml:space="preserve">
          <source>PowerShell Snippets</source>
          <target state="new">PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="fe98ca30-c83d-42b6-8646-dd046f9c1cfd" xml:space="preserve">
          <source>Adding this sentence for testing HO-HB process.</source>
          <target state="new">Adding this sentence for testing HO-HB process.</target>
        </trans-unit>
        <trans-unit id="1617c986-450f-4cf6-8661-37367b38b6f4" xml:space="preserve">
          <source>PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</source>
          <target state="new">PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</target>
        </trans-unit>
        <trans-unit id="62805ca8-ad7c-4eab-8f38-1ac1d667ae03" xml:space="preserve">
          <source>All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</source>
          <target state="new">All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</target>
        </trans-unit>
        <trans-unit id="fe8234e1-52bb-4594-b911-776365099d90" xml:space="preserve">
          <source>If you aren't sure if you have the right permissions, type <bpt id="31a1f0a9-5083-4848-962e-27a3e8d5e527">&lt;code&gt;</bpt>Get-VM<ept id="31a1f0a9-5083-4848-962e-27a3e8d5e527">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</source>
          <target state="new">If you aren't sure if you have the right permissions, type <bpt id="31a1f0a9-5083-4848-962e-27a3e8d5e527">&lt;code&gt;</bpt>Get-VM<ept id="31a1f0a9-5083-4848-962e-27a3e8d5e527">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</target>
        </trans-unit>
        <trans-unit id="6cd991b3-d6b5-43ff-bd57-941fd2d58624" xml:space="preserve">
          <source>PowerShell Direct tools</source>
          <target state="new">PowerShell Direct tools</target>
        </trans-unit>
        <trans-unit id="2478420e-ae61-4b04-b48a-49e64f185c79" xml:space="preserve">
          <source>All of the scripts and snippets in this section will rely on the following basics.</source>
          <target state="new">All of the scripts and snippets in this section will rely on the following basics.</target>
        </trans-unit>
        <trans-unit id="0cc35abc-f132-4fa9-99ea-17180c53a07a" xml:space="preserve">
          <source><bpt id="61d760c4-7a14-403a-9cb4-042959dc0018">&lt;strong&gt;</bpt>Requirements<ept id="61d760c4-7a14-403a-9cb4-042959dc0018">&lt;/strong&gt;</ept> :</source>
          <target state="new"><bpt id="61d760c4-7a14-403a-9cb4-042959dc0018">&lt;strong&gt;</bpt>Requirements<ept id="61d760c4-7a14-403a-9cb4-042959dc0018">&lt;/strong&gt;</ept> :</target>
        </trans-unit>
        <trans-unit id="c58aaaff-775c-486b-9ae8-75161ede927e" xml:space="preserve">
          <source>PowerShell Direct.</source>
          <target state="new">PowerShell Direct.</target>
        </trans-unit>
        <trans-unit id="06356af3-7f32-4870-a848-ddcbf68b45f2" xml:space="preserve">
          <source>Windows 10 guest and host OS.</source>
          <target state="new">Windows 10 guest and host OS.</target>
        </trans-unit>
        <trans-unit id="23e2dce1-efd9-4445-9b12-e0a0eb52be59" xml:space="preserve">
          <source><bpt id="e9e67433-6889-4cd2-9518-9dd2b082c659">&lt;strong&gt;</bpt>Common Variables<ept id="e9e67433-6889-4cd2-9518-9dd2b082c659">&lt;/strong&gt;</ept> :  
<bpt id="832b8aa9-3a68-4b98-9b7d-82dce4c75b9f">&lt;code&gt;</bpt>$VMName<ept id="832b8aa9-3a68-4b98-9b7d-82dce4c75b9f">&lt;/code&gt;</ept> -- this is a string with the VMName.</source>
          <target state="new"><bpt id="e9e67433-6889-4cd2-9518-9dd2b082c659">&lt;strong&gt;</bpt>Common Variables<ept id="e9e67433-6889-4cd2-9518-9dd2b082c659">&lt;/strong&gt;</ept> :  
<bpt id="832b8aa9-3a68-4b98-9b7d-82dce4c75b9f">&lt;code&gt;</bpt>$VMName<ept id="832b8aa9-3a68-4b98-9b7d-82dce4c75b9f">&lt;/code&gt;</ept> -- this is a string with the VMName.</target>
        </trans-unit>
        <trans-unit id="70264645-dda5-4a6e-b6cb-3f0ad337a8aa" xml:space="preserve">
          <source>See a list of available VMs with <bpt id="8c977556-cbfa-47fd-8130-bf74a927df66">&lt;code&gt;</bpt>Get-VM<ept id="8c977556-cbfa-47fd-8130-bf74a927df66">&lt;/code&gt;</ept>  
<bpt id="0ab1bf8f-df8f-40f5-89d2-6d7bdaac5e8c">&lt;code&gt;</bpt>$cred<ept id="0ab1bf8f-df8f-40f5-89d2-6d7bdaac5e8c">&lt;/code&gt;</ept> -- Credential for the guest OS.</source>
          <target state="new">See a list of available VMs with <bpt id="8c977556-cbfa-47fd-8130-bf74a927df66">&lt;code&gt;</bpt>Get-VM<ept id="8c977556-cbfa-47fd-8130-bf74a927df66">&lt;/code&gt;</ept>  
<bpt id="0ab1bf8f-df8f-40f5-89d2-6d7bdaac5e8c">&lt;code&gt;</bpt>$cred<ept id="0ab1bf8f-df8f-40f5-89d2-6d7bdaac5e8c">&lt;/code&gt;</ept> -- Credential for the guest OS.</target>
        </trans-unit>
        <trans-unit id="6fb44818-ec86-4e5b-8112-b22cc31eb429" xml:space="preserve">
          <source>Can be populated using <bpt id="c3616269-d9b9-4ad4-8926-0dbc607433ac">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="c3616269-d9b9-4ad4-8926-0dbc607433ac">&lt;/code&gt;</ept></source>
          <target state="new">Can be populated using <bpt id="c3616269-d9b9-4ad4-8926-0dbc607433ac">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="c3616269-d9b9-4ad4-8926-0dbc607433ac">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="9e113119-fb75-453d-a1c1-87b6ed1561d9" xml:space="preserve">
          <source>Check if the guest has booted</source>
          <target state="new">Check if the guest has booted</target>
        </trans-unit>
        <trans-unit id="4e32a3a1-9804-425e-a3fc-76b062dbd19f" xml:space="preserve">
          <source>Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</source>
          <target state="new">Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</target>
        </trans-unit>
        <trans-unit id="32a0b273-432a-44c7-8340-ff3a533fb8d7" xml:space="preserve">
          <source>Use this command to check whether the guest has booted.</source>
          <target state="new">Use this command to check whether the guest has booted.</target>
        </trans-unit>
        <trans-unit id="74582476-7525-455b-a3d5-b13ba2117a17" xml:space="preserve">
          <source><bpt id="297b6c3e-948b-48fd-847f-65c6ffa8f438">&lt;strong&gt;</bpt>Outcome<ept id="297b6c3e-948b-48fd-847f-65c6ffa8f438">&lt;/strong&gt;</ept>  
Prints a friendly message declaring the state of the guest OS.</source>
          <target state="new"><bpt id="297b6c3e-948b-48fd-847f-65c6ffa8f438">&lt;strong&gt;</bpt>Outcome<ept id="297b6c3e-948b-48fd-847f-65c6ffa8f438">&lt;/strong&gt;</ept>  
Prints a friendly message declaring the state of the guest OS.</target>
        </trans-unit>
        <trans-unit id="d45a073a-a1a3-4918-96c3-89b6b6c254ee" xml:space="preserve">
          <source>Script locking until the guest has booted</source>
          <target state="new">Script locking until the guest has booted</target>
        </trans-unit>
        <trans-unit id="18d7b2ad-bae9-4552-9cc9-0c1beacae1df" xml:space="preserve">
          <source>The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</source>
          <target state="new">The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</target>
        </trans-unit>
        <trans-unit id="a5e2af4d-6d1e-4ffc-a1cd-f37bb89461c4" xml:space="preserve">
          <source><bpt id="d104f0af-0861-47d7-9ad9-18a981b26798">&lt;strong&gt;</bpt>Outcome<ept id="d104f0af-0861-47d7-9ad9-18a981b26798">&lt;/strong&gt;</ept>  
Prints a friendly message and locks until the connection to the VM succeeds.</source>
          <target state="new"><bpt id="d104f0af-0861-47d7-9ad9-18a981b26798">&lt;strong&gt;</bpt>Outcome<ept id="d104f0af-0861-47d7-9ad9-18a981b26798">&lt;/strong&gt;</ept>  
Prints a friendly message and locks until the connection to the VM succeeds.</target>
        </trans-unit>
        <trans-unit id="57575225-8161-4d09-9eb0-f25af5483d8a" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="06e198bb-63f7-47a4-94f3-5940c5e27046" xml:space="preserve">
          <source>Script locking until the guest has a network</source>
          <target state="new">Script locking until the guest has a network</target>
        </trans-unit>
        <trans-unit id="447c3cb4-1d9f-4fa7-92a2-714708b905ef" xml:space="preserve">
          <source>With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</source>
          <target state="new">With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</target>
        </trans-unit>
        <trans-unit id="6bd13483-a62d-4667-8b53-12d3d2dbac73" xml:space="preserve">
          <source><bpt id="c0f45cfb-02b5-4680-b4b1-e7a00c455fdd">&lt;em&gt;</bpt>* Outcome *<ept id="c0f45cfb-02b5-4680-b4b1-e7a00c455fdd">&lt;/em&gt;</ept>
Locks until a DHCP lease is recieved.</source>
          <target state="new"><bpt id="c0f45cfb-02b5-4680-b4b1-e7a00c455fdd">&lt;em&gt;</bpt>* Outcome *<ept id="c0f45cfb-02b5-4680-b4b1-e7a00c455fdd">&lt;/em&gt;</ept>
Locks until a DHCP lease is recieved.</target>
        </trans-unit>
        <trans-unit id="f6615073-4b91-4e47-84e0-a56d8e1cbd6f" xml:space="preserve">
          <source>Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</source>
          <target state="new">Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</target>
        </trans-unit>
        <trans-unit id="4ccb9baa-b025-4056-9b22-711cdb69177d" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="4befacd2-aeb3-4d7b-b73d-55d74f99280b" xml:space="preserve">
          <source>Managing credentials with PowerShell</source>
          <target state="new">Managing credentials with PowerShell</target>
        </trans-unit>
        <trans-unit id="840c9447-7861-435e-b998-8aae0b243c20" xml:space="preserve">
          <source>Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</source>
          <target state="new">Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</target>
        </trans-unit>
        <trans-unit id="ea7cb027-4a28-47bf-bf7e-464076d42497" xml:space="preserve">
          <source>There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</source>
          <target state="new">There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</target>
        </trans-unit>
        <trans-unit id="d4b3cd92-db91-4431-89cf-4fad7226f2bb" xml:space="preserve">
          <source>The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</source>
          <target state="new">The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</target>
        </trans-unit>
        <trans-unit id="e38d0b74-9783-4183-904f-186d12a4d978" xml:space="preserve">
          <source>This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</source>
          <target state="new">This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</target>
        </trans-unit>
        <trans-unit id="18bf1b1e-fbef-4edc-ac73-1c22709f7d89" xml:space="preserve">
          <source>In this scenario you can just run <bpt id="0dc0514b-962a-4e39-aeda-1c23fb0eeb83">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="0dc0514b-962a-4e39-aeda-1c23fb0eeb83">&lt;/code&gt;</ept>.</source>
          <target state="new">In this scenario you can just run <bpt id="0dc0514b-962a-4e39-aeda-1c23fb0eeb83">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="0dc0514b-962a-4e39-aeda-1c23fb0eeb83">&lt;/code&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="b3618ed2-246f-452a-a143-9cb974f542a5" xml:space="preserve">
          <source>Let PowerShell prompt you for credentials  
If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</source>
          <target state="new">Let PowerShell prompt you for credentials  
If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</target>
        </trans-unit>
        <trans-unit id="9ed7ea3b-211a-45d9-9a46-58c1a4bfeda4" xml:space="preserve">
          <source>Store credentials in a variable for reuse.</source>
          <target state="new">Store credentials in a variable for reuse.</target>
        </trans-unit>
        <trans-unit id="a0533602-db1f-4da7-8453-b3db40137030" xml:space="preserve">
          <source>Running a simple command like this:</source>
          <target state="new">Running a simple command like this:</target>
        </trans-unit>
        <trans-unit id="2e133252-4bb1-451f-a948-51d260f7ec9d" xml:space="preserve">
          <source>  And then running something like this:</source>
          <target state="new">  And then running something like this:</target>
        </trans-unit>
        <trans-unit id="89053523-da4c-4ee1-b3b5-4ed09e24727a" xml:space="preserve">
          <source>  Will mean that you only get prompted once per script/PowerShell session for your credentials.</source>
          <target state="new">  Will mean that you only get prompted once per script/PowerShell session for your credentials.</target>
        </trans-unit>
        <trans-unit id="3d7cbd13-85a1-43be-b74a-6b0ab18a198d" xml:space="preserve">
          <source>Code your credentials into your scripts.</source>
          <target state="new">Code your credentials into your scripts.</target>
        </trans-unit>
        <trans-unit id="a0c149c7-bcbd-4ec1-aa0c-28d7e4b0635b" xml:space="preserve">
          <source><bpt id="2cfeb69a-4cfb-408c-ac29-95bd3e3952ec">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="2cfeb69a-4cfb-408c-ac29-95bd3e3952ec">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="2cfeb69a-4cfb-408c-ac29-95bd3e3952ec">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="2cfeb69a-4cfb-408c-ac29-95bd3e3952ec">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="a2c2e319-3bc2-4cb9-b6d7-ad87a5e6fd76" xml:space="preserve">
          <source>Warning:  _Do not do this in a production system.</source>
          <target state="new">Warning:  _Do not do this in a production system.</target>
        </trans-unit>
        <trans-unit id="87b567bc-f30a-4d71-9439-88eeeb539e0f" xml:space="preserve">
          <source>Do not do this with real passwords._</source>
          <target state="new">Do not do this with real passwords._</target>
        </trans-unit>
        <trans-unit id="390687a1-99ca-45fd-b2b6-0b5e8696a623" xml:space="preserve">
          <source>You can hand craft a PSCredential object with some code like this:</source>
          <target state="new">You can hand craft a PSCredential object with some code like this:</target>
        </trans-unit>
        <trans-unit id="83ce0a5d-3f61-41a5-991b-afacec9442d3" xml:space="preserve">
          <source>Grossly insecure - but useful for testing.</source>
          <target state="new">Grossly insecure - but useful for testing.</target>
        </trans-unit>
        <trans-unit id="a912d994-0eff-4abd-854b-2553edd5b58a" xml:space="preserve">
          <source>Now you get no prompts at all in this session.</source>
          <target state="new">Now you get no prompts at all in this session.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>