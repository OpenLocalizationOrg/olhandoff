<?xml version="1.0" encoding="utf-8"?>
<xliff srcLang="en-us" trgLang="de-de" version="2.0" xmlns="urn:oasis:names:tc:xliff:document:2.0" xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">8958b5d1320d93bb3a4eb45902a845b0132f2c1b</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <group id="101">
        <unit id="101">
          <segment state="initial" id="101">
            <source xml:space="preserve">Porting Windows Runtime 8.x XAML and UI to UWP</source>
            <target xml:space="preserve">Porting Windows Runtime 8.x XAML and UI to UWP</target>
          </segment>
        </unit>
        <unit id="102">
          <segment state="initial" id="102">
            <source xml:space="preserve">\[ Updated for UWP apps on Windows 10.</source>
            <target xml:space="preserve">\[ Updated for UWP apps on Windows 10.</target>
          </segment>
        </unit>
        <unit id="103">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="103">
            <source xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">archive</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> \]</source>
            <target xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">archive</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> \]</target>
          </segment>
        </unit>
        <unit id="104">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="104">
            <source xml:space="preserve">The previous topic was <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Troubleshooting</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>.</source>
            <target xml:space="preserve">The previous topic was <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Troubleshooting</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>.</target>
          </segment>
        </unit>
        <unit id="105">
          <segment state="initial" id="105">
            <source xml:space="preserve">The practice of defining UI in the form of declarative XAML markup translates extremely well from Universal 8.1 apps to Universal Windows Platform (UWP) apps.</source>
            <target xml:space="preserve">The practice of defining UI in the form of declarative XAML markup translates extremely well from Universal 8.1 apps to Universal Windows Platform (UWP) apps.</target>
          </segment>
        </unit>
        <unit id="106">
          <segment state="initial" id="106">
            <source xml:space="preserve">You'll find that most of your markup is compatible, although you may need to make some adjustments to the system Resource keys or custom templates that you're using.</source>
            <target xml:space="preserve">You'll find that most of your markup is compatible, although you may need to make some adjustments to the system Resource keys or custom templates that you're using.</target>
          </segment>
        </unit>
        <unit id="107">
          <segment state="initial" id="107">
            <source xml:space="preserve">The imperative code in your view models will require little or no change.</source>
            <target xml:space="preserve">The imperative code in your view models will require little or no change.</target>
          </segment>
        </unit>
        <unit id="108">
          <segment state="initial" id="108">
            <source xml:space="preserve">Even much, or most, of the code in your presentation layer that manipulates UI elements should also be straightforward to port.</source>
            <target xml:space="preserve">Even much, or most, of the code in your presentation layer that manipulates UI elements should also be straightforward to port.</target>
          </segment>
        </unit>
        <unit id="109">
          <segment state="initial" id="109">
            <source xml:space="preserve">Imperative code</source>
            <target xml:space="preserve">Imperative code</target>
          </segment>
        </unit>
        <unit id="110">
          <segment state="initial" id="110">
            <source xml:space="preserve">If you just want to get to the stage where your project builds, you can comment or stub out any non-essential code.</source>
            <target xml:space="preserve">If you just want to get to the stage where your project builds, you can comment or stub out any non-essential code.</target>
          </segment>
        </unit>
        <unit id="111">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="111">
            <source xml:space="preserve">Then iterate, one issue at a time, and refer to the following topics in this section (and the previous topic: <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Troubleshooting</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>, until any build and runtime issues are ironed-out and your port is complete.</source>
            <target xml:space="preserve">Then iterate, one issue at a time, and refer to the following topics in this section (and the previous topic: <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Troubleshooting</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>, until any build and runtime issues are ironed-out and your port is complete.</target>
          </segment>
        </unit>
        <unit id="112">
          <segment state="initial" id="112">
            <source xml:space="preserve">Adaptive/responsive UI</source>
            <target xml:space="preserve">Adaptive/responsive UI</target>
          </segment>
        </unit>
        <unit id="113">
          <segment state="initial" id="113">
            <source xml:space="preserve">Because your app can run on a potentially wide range of devices—each with its own screen size and resolution—you'll want to go beyond the minimal steps to port your app and you'll want to tailor your UI to look its best on those devices.</source>
            <target xml:space="preserve">Because your app can run on a potentially wide range of devices—each with its own screen size and resolution—you'll want to go beyond the minimal steps to port your app and you'll want to tailor your UI to look its best on those devices.</target>
          </segment>
        </unit>
        <unit id="114">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="114">
            <source xml:space="preserve">You can use the adaptive Visual State Manager feature to dynamically detect window size and to change layout in response, and an example of how to do that is shown in the section <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Adaptive UI</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> in the Bookstore2 case study topic.</source>
            <target xml:space="preserve">You can use the adaptive Visual State Manager feature to dynamically detect window size and to change layout in response, and an example of how to do that is shown in the section <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Adaptive UI</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> in the Bookstore2 case study topic.</target>
          </segment>
        </unit>
        <unit id="115">
          <segment state="initial" id="115">
            <source xml:space="preserve">Back button handling</source>
            <target xml:space="preserve">Back button handling</target>
          </segment>
        </unit>
        <unit id="116">
          <segment state="initial" id="116">
            <source xml:space="preserve">For Universal 8.1 apps, Windows Store apps and Windows Phone Store apps have different approaches to the UI you show and the events you handle for the back button.</source>
            <target xml:space="preserve">For Universal 8.1 apps, Windows Store apps and Windows Phone Store apps have different approaches to the UI you show and the events you handle for the back button.</target>
          </segment>
        </unit>
        <unit id="117">
          <segment state="initial" id="117">
            <source xml:space="preserve">But, for Windows 10 apps, you can use a single approach in your app.</source>
            <target xml:space="preserve">But, for Windows 10 apps, you can use a single approach in your app.</target>
          </segment>
        </unit>
        <unit id="118">
          <segment state="initial" id="118">
            <source xml:space="preserve">On mobile devices, the button is provided for you as a capacitive button on the device, or as a button in the shell.</source>
            <target xml:space="preserve">On mobile devices, the button is provided for you as a capacitive button on the device, or as a button in the shell.</target>
          </segment>
        </unit>
        <unit id="119">
          <segment state="initial" id="119">
            <source xml:space="preserve">On a desktop device, you add a button to your app's chrome whenever back-navigation is possible within the app, and this appears in the title bar for windowed apps or in the task bar for Tablet mode.</source>
            <target xml:space="preserve">On a desktop device, you add a button to your app's chrome whenever back-navigation is possible within the app, and this appears in the title bar for windowed apps or in the task bar for Tablet mode.</target>
          </segment>
        </unit>
        <unit id="120">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="120">
            <source xml:space="preserve">The back button event is a universal concept across all device families, and buttons implemented in hardware or in software raise the same <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**BackRequested**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> event.</source>
            <target xml:space="preserve">The back button event is a universal concept across all device families, and buttons implemented in hardware or in software raise the same <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**BackRequested**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> event.</target>
          </segment>
        </unit>
        <unit id="121">
          <segment state="initial" id="121">
            <source xml:space="preserve">The example below works for all device families and it is good for cases where the same processing applies to all pages, and where you do not need to confirm navigation (for example, to warn about unsaved changes).</source>
            <target xml:space="preserve">The example below works for all device families and it is good for cases where the same processing applies to all pages, and where you do not need to confirm navigation (for example, to warn about unsaved changes).</target>
          </segment>
        </unit>
        <unit id="122">
          <segment state="initial" id="122">
            <source xml:space="preserve">There's also a single approach for all device families for programmatically exiting the app.</source>
            <target xml:space="preserve">There's also a single approach for all device families for programmatically exiting the app.</target>
          </segment>
        </unit>
        <unit id="123">
          <segment state="initial" id="123">
            <source xml:space="preserve">Charms</source>
            <target xml:space="preserve">Charms</target>
          </segment>
        </unit>
        <unit id="124">
          <segment state="initial" id="124">
            <source xml:space="preserve">You don't need to change any of your code that integrates with charms, but you do need to add some UI to your app to take the place of the Charms bar, which is not a part of the Windows 10 shell.</source>
            <target xml:space="preserve">You don't need to change any of your code that integrates with charms, but you do need to add some UI to your app to take the place of the Charms bar, which is not a part of the Windows 10 shell.</target>
          </segment>
        </unit>
        <unit id="125">
          <segment state="initial" id="125">
            <source xml:space="preserve">A Universal 8.1 app running on Windows 10 has its own replacement UI provided by system-rendered chrome in the app's title bar.</source>
            <target xml:space="preserve">A Universal 8.1 app running on Windows 10 has its own replacement UI provided by system-rendered chrome in the app's title bar.</target>
          </segment>
        </unit>
        <unit id="126">
          <segment state="initial" id="126">
            <source xml:space="preserve">Controls, and control styles/templates</source>
            <target xml:space="preserve">Controls, and control styles/templates</target>
          </segment>
        </unit>
        <unit id="127">
          <segment state="initial" id="127">
            <source xml:space="preserve">A Universal 8.1 app running on Windows 10 will retain the 8.1 appearance and behavior with respect to controls.</source>
            <target xml:space="preserve">A Universal 8.1 app running on Windows 10 will retain the 8.1 appearance and behavior with respect to controls.</target>
          </segment>
        </unit>
        <unit id="128">
          <segment state="initial" id="128">
            <source xml:space="preserve">But, when you port that app to a Windows 10 app, there are some differences in appearance and behavior to be aware of.</source>
            <target xml:space="preserve">But, when you port that app to a Windows 10 app, there are some differences in appearance and behavior to be aware of.</target>
          </segment>
        </unit>
        <unit id="129">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="129">
            <source xml:space="preserve">The architecture and design of controls is essentially unchanged for Windows 10 apps, so the changes are mostly around <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">design language</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>, simplification, and usability improvements.</source>
            <target xml:space="preserve">The architecture and design of controls is essentially unchanged for Windows 10 apps, so the changes are mostly around <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">design language</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>, simplification, and usability improvements.</target>
          </segment>
        </unit>
        <unit id="130">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="130">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Note</pc>   The PointerOver visual state is relevant in custom styles/templates in Windows 10 apps and in Windows Store apps, but not in Windows Phone Store apps.</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Note</pc>   The PointerOver visual state is relevant in custom styles/templates in Windows 10 apps and in Windows Store apps, but not in Windows Phone Store apps.</target>
          </segment>
        </unit>
        <unit id="131">
          <segment state="initial" id="131">
            <source xml:space="preserve">For this reason (and because of the system resource keys that are supported for Windows 10 apps), we recommend that you re-use the custom styles/templates from your Windows Store apps when you're porting your app to Windows 10.</source>
            <target xml:space="preserve">For this reason (and because of the system resource keys that are supported for Windows 10 apps), we recommend that you re-use the custom styles/templates from your Windows Store apps when you're porting your app to Windows 10.</target>
          </segment>
        </unit>
        <unit id="132">
          <segment state="initial" id="132">
            <source xml:space="preserve">If you want to be certain that your custom styles/templates are using the latest set of visual states, and are benefitting from performance improvements made to the default styles/templates, then edit a copy of the new Windows 10 default template and re-apply your customization to that.</source>
            <target xml:space="preserve">If you want to be certain that your custom styles/templates are using the latest set of visual states, and are benefitting from performance improvements made to the default styles/templates, then edit a copy of the new Windows 10 default template and re-apply your customization to that.</target>
          </segment>
        </unit>
        <unit id="133">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;strong&gt;</data>
            <data id="id4">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="133">
            <source xml:space="preserve">One example of a performance improvement is that any <pc dataRefEnd="id2" dataRefStart="id1" id="2">Border</pc> that formerly enclosed a <pc dataRefEnd="id4" dataRefStart="id3" id="4">ContentPresenter</pc> or a Panel has been removed and a child element now renders the border.</source>
            <target xml:space="preserve">One example of a performance improvement is that any <pc dataRefEnd="id2" dataRefStart="id1" id="2">Border</pc> that formerly enclosed a <pc dataRefEnd="id4" dataRefStart="id3" id="4">ContentPresenter</pc> or a Panel has been removed and a child element now renders the border.</target>
          </segment>
        </unit>
        <unit id="134">
          <segment state="initial" id="134">
            <source xml:space="preserve">Here are some more specific examples of changes to controls.</source>
            <target xml:space="preserve">Here are some more specific examples of changes to controls.</target>
          </segment>
        </unit>
        <unit id="135">
          <segment state="initial" id="135">
            <source xml:space="preserve">Control name</source>
            <target xml:space="preserve">Control name</target>
          </segment>
        </unit>
        <unit id="136">
          <segment state="initial" id="136">
            <source xml:space="preserve">Change</source>
            <target xml:space="preserve">Change</target>
          </segment>
        </unit>
        <unit id="137">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="137">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">AppBar</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">AppBar</pc>
						</target>
          </segment>
        </unit>
        <unit id="138">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;link&gt;</data>
            <data id="id4">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="138">
            <source xml:space="preserve">If you are using the <pc dataRefEnd="id2" dataRefStart="id1" id="2">AppBar</pc> control (<pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**CommandBar**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc> is recommended instead), then it is not hidden by default in a Windows 10 app.</source>
            <target xml:space="preserve">If you are using the <pc dataRefEnd="id2" dataRefStart="id1" id="2">AppBar</pc> control (<pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**CommandBar**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc> is recommended instead), then it is not hidden by default in a Windows 10 app.</target>
          </segment>
        </unit>
        <unit id="139">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="139">
            <source xml:space="preserve">You can control this with the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**AppBar.ClosedDisplayMode**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> property.</source>
            <target xml:space="preserve">You can control this with the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**AppBar.ClosedDisplayMode**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> property.</target>
          </segment>
        </unit>
        <unit id="140">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;link&gt;</data>
            <data id="id4">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="140">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">AppBar</pc>, <pc dataRefEnd="id4" dataRefStart="id3" id="3CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="3CapsExtId2">**CommandBar**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="3CapsExtId3"></pc></pc></source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">AppBar</pc>, <pc dataRefEnd="id4" dataRefStart="id3" id="3CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="3CapsExtId2">**CommandBar**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="3CapsExtId3"></pc></pc></target>
          </segment>
        </unit>
        <unit id="141">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;link&gt;</data>
            <data id="id4">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id9">&lt;strong&gt;</data>
            <data id="id10">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="141">
            <source xml:space="preserve">In a Windows 10 app, <pc dataRefEnd="id2" dataRefStart="id1" id="2">AppBar</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**CommandBar**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc> have a <pc dataRefEnd="id10" dataRefStart="id9" id="6">See more</pc> button (the ellipsis).</source>
            <target xml:space="preserve">In a Windows 10 app, <pc dataRefEnd="id2" dataRefStart="id1" id="2">AppBar</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**CommandBar**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc> have a <pc dataRefEnd="id10" dataRefStart="id9" id="6">See more</pc> button (the ellipsis).</target>
          </segment>
        </unit>
        <unit id="142">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="142">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**CommandBar**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**CommandBar**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</target>
          </segment>
        </unit>
        <unit id="143">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="143">
            <source xml:space="preserve">In a Windows Store app, the secondary commands of a <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**CommandBar**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> are always visible.</source>
            <target xml:space="preserve">In a Windows Store app, the secondary commands of a <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**CommandBar**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> are always visible.</target>
          </segment>
        </unit>
        <unit id="144">
          <segment state="initial" id="144">
            <source xml:space="preserve">In a Windows Phone Store app, and in a Windows 10 app, the don't appear until the command bar opens.</source>
            <target xml:space="preserve">In a Windows Phone Store app, and in a Windows 10 app, the don't appear until the command bar opens.</target>
          </segment>
        </unit>
        <unit id="145">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="145">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**CommandBar**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**CommandBar**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</target>
          </segment>
        </unit>
        <unit id="146">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="146">
            <source xml:space="preserve">For a Windows Phone Store app, the value of <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**CommandBar.IsSticky**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> does not affect whether or not the bar is light-dismissible.</source>
            <target xml:space="preserve">For a Windows Phone Store app, the value of <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**CommandBar.IsSticky**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> does not affect whether or not the bar is light-dismissible.</target>
          </segment>
        </unit>
        <unit id="147">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;strong&gt;</data>
            <data id="id4">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="147">
            <source xml:space="preserve">For a Windows 10 app, if <pc dataRefEnd="id2" dataRefStart="id1" id="2">IsSticky</pc> is set to true, then the <pc dataRefEnd="id4" dataRefStart="id3" id="4">CommandBar</pc> disregards a light dismiss gesture.</source>
            <target xml:space="preserve">For a Windows 10 app, if <pc dataRefEnd="id2" dataRefStart="id1" id="2">IsSticky</pc> is set to true, then the <pc dataRefEnd="id4" dataRefStart="id3" id="4">CommandBar</pc> disregards a light dismiss gesture.</target>
          </segment>
        </unit>
        <unit id="148">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="148">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**CommandBar**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**CommandBar**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</target>
          </segment>
        </unit>
        <unit id="149">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;link&gt;</data>
            <data id="id8">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id13">&lt;link&gt;</data>
            <data id="id14">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="149">
            <source xml:space="preserve">In a Windows 10 app, <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**CommandBar**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> does not handle the <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**EdgeGesture.Completed**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc> nor <pc dataRefEnd="id14" dataRefStart="id13" id="6CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="6CapsExtId2">**UIElement.RightTapped**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="6CapsExtId3"></pc></pc> events.</source>
            <target xml:space="preserve">In a Windows 10 app, <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**CommandBar**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> does not handle the <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**EdgeGesture.Completed**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc> nor <pc dataRefEnd="id14" dataRefStart="id13" id="6CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="6CapsExtId2">**UIElement.RightTapped**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="6CapsExtId3"></pc></pc> events.</target>
          </segment>
        </unit>
        <unit id="150">
          <segment state="initial" id="150">
            <source xml:space="preserve">Nor does it respond to a tap nor a swipe up.</source>
            <target xml:space="preserve">Nor does it respond to a tap nor a swipe up.</target>
          </segment>
        </unit>
        <unit id="151">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="151">
            <source xml:space="preserve">You still have the option to handle these events and set <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**IsOpen**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>.</source>
            <target xml:space="preserve">You still have the option to handle these events and set <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**IsOpen**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>.</target>
          </segment>
        </unit>
        <unit id="152">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;link&gt;</data>
            <data id="id8">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="152">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**DatePicker**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>, <pc dataRefEnd="id8" dataRefStart="id7" id="3CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="3CapsExtId2">**TimePicker**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="3CapsExtId3"></pc></pc></source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**DatePicker**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>, <pc dataRefEnd="id8" dataRefStart="id7" id="3CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="3CapsExtId2">**TimePicker**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="3CapsExtId3"></pc></pc></target>
          </segment>
        </unit>
        <unit id="153">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;link&gt;</data>
            <data id="id8">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="153">
            <source xml:space="preserve">Review how your app looks with the visual changes to <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**DatePicker**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> and <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**TimePicker**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc>.</source>
            <target xml:space="preserve">Review how your app looks with the visual changes to <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**DatePicker**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> and <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**TimePicker**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc>.</target>
          </segment>
        </unit>
        <unit id="154">
          <segment state="initial" id="154">
            <source xml:space="preserve">For a Windows 10 app running on a mobile device, these controls no longer navigate to a selection page but instead use a light-dismissible popup.</source>
            <target xml:space="preserve">For a Windows 10 app running on a mobile device, these controls no longer navigate to a selection page but instead use a light-dismissible popup.</target>
          </segment>
        </unit>
        <unit id="155">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;link&gt;</data>
            <data id="id8">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="155">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**DatePicker**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>, <pc dataRefEnd="id8" dataRefStart="id7" id="3CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="3CapsExtId2">**TimePicker**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="3CapsExtId3"></pc></pc></source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**DatePicker**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>, <pc dataRefEnd="id8" dataRefStart="id7" id="3CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="3CapsExtId2">**TimePicker**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="3CapsExtId3"></pc></pc></target>
          </segment>
        </unit>
        <unit id="156">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;link&gt;</data>
            <data id="id8">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="156">
            <source xml:space="preserve">In a Windows 10 app, you can't put <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**DatePicker**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> or <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**TimePicker**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc> inside a fly-out.</source>
            <target xml:space="preserve">In a Windows 10 app, you can't put <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**DatePicker**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> or <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**TimePicker**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc> inside a fly-out.</target>
          </segment>
        </unit>
        <unit id="157">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;link&gt;</data>
            <data id="id8">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="157">
            <source xml:space="preserve">If you want those controls to be displayed in a popup-type control, then you can use <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**DatePickerFlyout**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> and <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**TimePickerFlyout**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc>.</source>
            <target xml:space="preserve">If you want those controls to be displayed in a popup-type control, then you can use <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**DatePickerFlyout**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> and <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**TimePickerFlyout**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc>.</target>
          </segment>
        </unit>
        <unit id="158">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;strong&gt;</data>
            <data id="id4">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="158">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">GridView</pc>, <pc dataRefEnd="id4" dataRefStart="id3" id="3">ListView</pc></source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">GridView</pc>, <pc dataRefEnd="id4" dataRefStart="id3" id="3">ListView</pc></target>
          </segment>
        </unit>
        <unit id="159">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;strong&gt;</data>
            <data id="id4">&lt;/strong&gt;</data>
            <data id="id5">&lt;link&gt;</data>
            <data id="id6">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="159">
            <source xml:space="preserve">For <pc dataRefEnd="id2" dataRefStart="id1" id="2">GridView</pc>/<pc dataRefEnd="id4" dataRefStart="id3" id="4">ListView</pc>, see <pc dataRefEnd="id6" dataRefStart="id5" id="6CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="6CapsExtId2">GridView/ListView changes</pc><pc dataRefEnd="id6" dataRefStart="id5" id="6CapsExtId3"></pc></pc>.</source>
            <target xml:space="preserve">For <pc dataRefEnd="id2" dataRefStart="id1" id="2">GridView</pc>/<pc dataRefEnd="id4" dataRefStart="id3" id="4">ListView</pc>, see <pc dataRefEnd="id6" dataRefStart="id5" id="6CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="6CapsExtId2">GridView/ListView changes</pc><pc dataRefEnd="id6" dataRefStart="id5" id="6CapsExtId3"></pc></pc>.</target>
          </segment>
        </unit>
        <unit id="160">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="160">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**Hub**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**Hub**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</target>
          </segment>
        </unit>
        <unit id="161">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="161">
            <source xml:space="preserve">In a Windows Phone Store app, a <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**Hub**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> control wraps around from the last section to the first.</source>
            <target xml:space="preserve">In a Windows Phone Store app, a <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**Hub**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> control wraps around from the last section to the first.</target>
          </segment>
        </unit>
        <unit id="162">
          <segment state="initial" id="162">
            <source xml:space="preserve">In a Windows Store app, and in a Windows 10 app, hub sections do not wrap around.</source>
            <target xml:space="preserve">In a Windows Store app, and in a Windows 10 app, hub sections do not wrap around.</target>
          </segment>
        </unit>
        <unit id="163">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="163">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**Hub**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**Hub**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</target>
          </segment>
        </unit>
        <unit id="164">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="164">
            <source xml:space="preserve">In a Windows Phone Store app, a <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**Hub**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> control's background image moves in parallax relative to the hub sections.</source>
            <target xml:space="preserve">In a Windows Phone Store app, a <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**Hub**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> control's background image moves in parallax relative to the hub sections.</target>
          </segment>
        </unit>
        <unit id="165">
          <segment state="initial" id="165">
            <source xml:space="preserve">In a Windows Store app, and in a Windows 10 app, parallax is not used.</source>
            <target xml:space="preserve">In a Windows Store app, and in a Windows 10 app, parallax is not used.</target>
          </segment>
        </unit>
        <unit id="166">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="166">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**Hub**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**Hub**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</target>
          </segment>
        </unit>
        <unit id="167">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="167">
            <source xml:space="preserve">In a Universal 8.1 app, the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**HubSection.IsHeaderInteractive**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> property causes the section header—and a chevron glyph rendered next to it—to become interactive.</source>
            <target xml:space="preserve">In a Universal 8.1 app, the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**HubSection.IsHeaderInteractive**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> property causes the section header—and a chevron glyph rendered next to it—to become interactive.</target>
          </segment>
        </unit>
        <unit id="168">
          <segment state="initial" id="168">
            <source xml:space="preserve">In a Windows 10 app, there is an interactive "See more" affordance beside the header, but the header itself is not interactive.</source>
            <target xml:space="preserve">In a Windows 10 app, there is an interactive "See more" affordance beside the header, but the header itself is not interactive.</target>
          </segment>
        </unit>
        <unit id="169">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;link&gt;</data>
            <data id="id4">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="169">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">IsHeaderInteractive</pc> still determines whether interaction raises the <pc dataRefEnd="id4" dataRefStart="id3" id="3CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="3CapsExtId2">**Hub.SectionHeaderClick**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="3CapsExtId3"></pc></pc> event.</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">IsHeaderInteractive</pc> still determines whether interaction raises the <pc dataRefEnd="id4" dataRefStart="id3" id="3CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="3CapsExtId2">**Hub.SectionHeaderClick**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="3CapsExtId3"></pc></pc> event.</target>
          </segment>
        </unit>
        <unit id="170">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="170">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">MessageDialog</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">MessageDialog</pc>
						</target>
          </segment>
        </unit>
        <unit id="171">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;link&gt;</data>
            <data id="id4">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="171">
            <source xml:space="preserve">If you're using <pc dataRefEnd="id2" dataRefStart="id1" id="2">MessageDialog</pc>, then consider instead using the more flexible <pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**ContentDialog**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc>.</source>
            <target xml:space="preserve">If you're using <pc dataRefEnd="id2" dataRefStart="id1" id="2">MessageDialog</pc>, then consider instead using the more flexible <pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**ContentDialog**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc>.</target>
          </segment>
        </unit>
        <unit id="172">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="172">
            <source xml:space="preserve">Also, see the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">XAML UI Basics</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> sample.</source>
            <target xml:space="preserve">Also, see the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">XAML UI Basics</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> sample.</target>
          </segment>
        </unit>
        <unit id="173">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;strong&gt;</data>
            <data id="id4">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="173">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">ListPickerFlyout</pc>, <pc dataRefEnd="id4" dataRefStart="id3" id="3">PickerFlyout</pc></source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">ListPickerFlyout</pc>, <pc dataRefEnd="id4" dataRefStart="id3" id="3">PickerFlyout</pc></target>
          </segment>
        </unit>
        <unit id="174">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;strong&gt;</data>
            <data id="id4">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="174">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">ListPickerFlyout</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="3">PickerFlyout</pc> are deprecated for a Windows 10 app.</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">ListPickerFlyout</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="3">PickerFlyout</pc> are deprecated for a Windows 10 app.</target>
          </segment>
        </unit>
        <unit id="175">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;link&gt;</data>
            <data id="id8">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="175">
            <source xml:space="preserve">For a single selection fly-out, use <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**MenuFlyout**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>; for more complex experiences, use <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**Flyout**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc>.</source>
            <target xml:space="preserve">For a single selection fly-out, use <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**MenuFlyout**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>; for more complex experiences, use <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**Flyout**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc>.</target>
          </segment>
        </unit>
        <unit id="176">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="176">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**PasswordBox**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**PasswordBox**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</target>
          </segment>
        </unit>
        <unit id="177">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="177">
            <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**PasswordBox.IsPasswordRevealButtonEnabled**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> property is deprecated in a Windows 10 app, and setting it has no effect.</source>
            <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**PasswordBox.IsPasswordRevealButtonEnabled**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> property is deprecated in a Windows 10 app, and setting it has no effect.</target>
          </segment>
        </unit>
        <unit id="178">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;strong&gt;</data>
            <data id="id8">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="178">
            <source xml:space="preserve">Use <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**PasswordBox.PasswordRevealMode**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> instead, which defaults to <pc dataRefEnd="id8" dataRefStart="id7" id="4">Peek</pc> (in which an eye glyph is displayed, like in a Windows Store app).</source>
            <target xml:space="preserve">Use <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**PasswordBox.PasswordRevealMode**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> instead, which defaults to <pc dataRefEnd="id8" dataRefStart="id7" id="4">Peek</pc> (in which an eye glyph is displayed, like in a Windows Store app).</target>
          </segment>
        </unit>
        <unit id="179">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="179">
            <source xml:space="preserve">Also, see <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Guidelines for password boxes</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>.</source>
            <target xml:space="preserve">Also, see <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Guidelines for password boxes</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>.</target>
          </segment>
        </unit>
        <unit id="180">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="180">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**Pivot**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**Pivot**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</target>
          </segment>
        </unit>
        <unit id="181">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="181">
            <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**Pivot**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> control is now universal, it is no longer limited to use on mobile devices.</source>
            <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**Pivot**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> control is now universal, it is no longer limited to use on mobile devices.</target>
          </segment>
        </unit>
        <unit id="182">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="182">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**SearchBox**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**SearchBox**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</target>
          </segment>
        </unit>
        <unit id="183">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="183">
            <source xml:space="preserve">Although <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**SearchBox**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> is implemented in the Universal device family, it is not fully functional on mobile devices.</source>
            <target xml:space="preserve">Although <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**SearchBox**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> is implemented in the Universal device family, it is not fully functional on mobile devices.</target>
          </segment>
        </unit>
        <unit id="184">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="184">
            <source xml:space="preserve">See <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">SearchBox deprecated in favor of AutoSuggestBox</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>.</source>
            <target xml:space="preserve">See <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">SearchBox deprecated in favor of AutoSuggestBox</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>.</target>
          </segment>
        </unit>
        <unit id="185">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="185">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">SemanticZoom</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">SemanticZoom</pc>
						</target>
          </segment>
        </unit>
        <unit id="186">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;link&gt;</data>
            <data id="id4">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="186">
            <source xml:space="preserve">For <pc dataRefEnd="id2" dataRefStart="id1" id="2">SemanticZoom</pc>, see <pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">SemanticZoom changes</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc>.</source>
            <target xml:space="preserve">For <pc dataRefEnd="id2" dataRefStart="id1" id="2">SemanticZoom</pc>, see <pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">SemanticZoom changes</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc>.</target>
          </segment>
        </unit>
        <unit id="187">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="187">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**ScrollViewer**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**ScrollViewer**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</target>
          </segment>
        </unit>
        <unit id="188">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="188">
            <source xml:space="preserve">Some default properties of <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**ScrollViewer**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> have changed.</source>
            <target xml:space="preserve">Some default properties of <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**ScrollViewer**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> have changed.</target>
          </segment>
        </unit>
        <unit id="189">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;strong&gt;</data>
            <data id="id8">&lt;/strong&gt;</data>
            <data id="id9">&lt;link&gt;</data>
            <data id="id10">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id15">&lt;strong&gt;</data>
            <data id="id16">&lt;/strong&gt;</data>
            <data id="id17">&lt;link&gt;</data>
            <data id="id18">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id23">&lt;strong&gt;</data>
            <data id="id24">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="189">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**HorizontalScrollMode**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc> is <pc dataRefEnd="id8" dataRefStart="id7" id="3">Auto</pc>, <pc dataRefEnd="id10" dataRefStart="id9" id="5CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="5CapsExtId2">**VerticalScrollMode**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="5CapsExtId3"></pc></pc> is <pc dataRefEnd="id16" dataRefStart="id15" id="7">Auto</pc>, and <pc dataRefEnd="id18" dataRefStart="id17" id="9CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="9CapsExtId2">**ZoomMode**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="9CapsExtId3"></pc></pc> is <pc dataRefEnd="id24" dataRefStart="id23" id="11">Disabled</pc>.</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**HorizontalScrollMode**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc> is <pc dataRefEnd="id8" dataRefStart="id7" id="3">Auto</pc>, <pc dataRefEnd="id10" dataRefStart="id9" id="5CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="5CapsExtId2">**VerticalScrollMode**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="5CapsExtId3"></pc></pc> is <pc dataRefEnd="id16" dataRefStart="id15" id="7">Auto</pc>, and <pc dataRefEnd="id18" dataRefStart="id17" id="9CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="9CapsExtId2">**ZoomMode**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="9CapsExtId3"></pc></pc> is <pc dataRefEnd="id24" dataRefStart="id23" id="11">Disabled</pc>.</target>
          </segment>
        </unit>
        <unit id="190">
          <segment state="initial" id="190">
            <source xml:space="preserve">If the new default values are not appropriate for your app, then you can change them either in a style or as local values on the control itself.</source>
            <target xml:space="preserve">If the new default values are not appropriate for your app, then you can change them either in a style or as local values on the control itself.</target>
          </segment>
        </unit>
        <unit id="191">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="191">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**TextBox**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**TextBox**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</target>
          </segment>
        </unit>
        <unit id="192">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="192">
            <source xml:space="preserve">In a Windows Store app, spell-checking is off by default for a <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**TextBox**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>.</source>
            <target xml:space="preserve">In a Windows Store app, spell-checking is off by default for a <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**TextBox**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>.</target>
          </segment>
        </unit>
        <unit id="193">
          <segment state="initial" id="193">
            <source xml:space="preserve">In a Windows Phone Store app, and in a Windows 10 app, it is on by default.</source>
            <target xml:space="preserve">In a Windows Phone Store app, and in a Windows 10 app, it is on by default.</target>
          </segment>
        </unit>
        <unit id="194">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="194">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**TextBox**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**TextBox**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</target>
          </segment>
        </unit>
        <unit id="195">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="195">
            <source xml:space="preserve">The default font size for a <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**TextBox**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> has changed from 11 to 15.</source>
            <target xml:space="preserve">The default font size for a <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**TextBox**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> has changed from 11 to 15.</target>
          </segment>
        </unit>
        <unit id="196">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="196">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**TextBox**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**TextBox**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</target>
          </segment>
        </unit>
        <unit id="197">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;strong&gt;</data>
            <data id="id8">&lt;/strong&gt;</data>
            <data id="id9">&lt;strong&gt;</data>
            <data id="id10">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="197">
            <source xml:space="preserve">The default value of <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**TextBox.TextReadingOrder**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> has changed from <pc dataRefEnd="id8" dataRefStart="id7" id="4">Default</pc> to <pc dataRefEnd="id10" dataRefStart="id9" id="6">DetectFromContent</pc>.</source>
            <target xml:space="preserve">The default value of <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**TextBox.TextReadingOrder**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> has changed from <pc dataRefEnd="id8" dataRefStart="id7" id="4">Default</pc> to <pc dataRefEnd="id10" dataRefStart="id9" id="6">DetectFromContent</pc>.</target>
          </segment>
        </unit>
        <unit id="198">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="198">
            <source xml:space="preserve">If that's undesirable, then use <pc dataRefEnd="id2" dataRefStart="id1" id="2">UseFlowDirection</pc>.</source>
            <target xml:space="preserve">If that's undesirable, then use <pc dataRefEnd="id2" dataRefStart="id1" id="2">UseFlowDirection</pc>.</target>
          </segment>
        </unit>
        <unit id="199">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="199">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Default</pc> is deprecated.</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Default</pc> is deprecated.</target>
          </segment>
        </unit>
        <unit id="200">
          <segment state="initial" id="200">
            <source xml:space="preserve">Various</source>
            <target xml:space="preserve">Various</target>
          </segment>
        </unit>
        <unit id="201">
          <segment state="initial" id="201">
            <source xml:space="preserve">Accent color applies to a Windows Phone Store apps, and to Windows 10 apps, but not to Windows Store apps.</source>
            <target xml:space="preserve">Accent color applies to a Windows Phone Store apps, and to Windows 10 apps, but not to Windows Store apps.</target>
          </segment>
        </unit>
        <unit id="202">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;link&gt;</data>
            <data id="id8">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id13">&lt;link&gt;</data>
            <data id="id14">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="202">
            <source xml:space="preserve">For more info on UWP app controls, see <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Controls by function</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>, <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">Controls list</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc>, and <pc dataRefEnd="id14" dataRefStart="id13" id="6CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="6CapsExtId2">Guidelines for controls</pc><pc dataRefEnd="id6" dataRefStart="id5" id="6CapsExtId3"></pc></pc>.</source>
            <target xml:space="preserve">For more info on UWP app controls, see <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Controls by function</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>, <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">Controls list</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc>, and <pc dataRefEnd="id14" dataRefStart="id13" id="6CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="6CapsExtId2">Guidelines for controls</pc><pc dataRefEnd="id6" dataRefStart="id5" id="6CapsExtId3"></pc></pc>.</target>
          </segment>
        </unit>
        <unit id="203">
          <segment state="initial" id="203">
            <source xml:space="preserve">Design language in Windows 10</source>
            <target xml:space="preserve">Design language in Windows 10</target>
          </segment>
        </unit>
        <unit id="204">
          <segment state="initial" id="204">
            <source xml:space="preserve">There are some small but important differences in design language between Universal 8.1 apps and Windows 10 apps.</source>
            <target xml:space="preserve">There are some small but important differences in design language between Universal 8.1 apps and Windows 10 apps.</target>
          </segment>
        </unit>
        <unit id="205">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="205">
            <source xml:space="preserve">For all the details, see <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Design</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>.</source>
            <target xml:space="preserve">For all the details, see <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Design</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>.</target>
          </segment>
        </unit>
        <unit id="206">
          <segment state="initial" id="206">
            <source xml:space="preserve">Despite the design language changes, our design principles remain consistent: be attentive to detail but always strive for simplicity through focusing on content not chrome, fiercely reducing visual elements, and remaining authentic to the digital domain; use visual hierarchy especially with typography; design on a grid; and bring your experiences to life with fluid animations.</source>
            <target xml:space="preserve">Despite the design language changes, our design principles remain consistent: be attentive to detail but always strive for simplicity through focusing on content not chrome, fiercely reducing visual elements, and remaining authentic to the digital domain; use visual hierarchy especially with typography; design on a grid; and bring your experiences to life with fluid animations.</target>
          </segment>
        </unit>
        <unit id="207">
          <segment state="initial" id="207">
            <source xml:space="preserve">Effective pixels, viewing distance, and scale factors</source>
            <target xml:space="preserve">Effective pixels, viewing distance, and scale factors</target>
          </segment>
        </unit>
        <unit id="208">
          <segment state="initial" id="208">
            <source xml:space="preserve">Previously, view pixels were the way to abstract the size and layout of UI elements away from the actual physical size and resolution of devices.</source>
            <target xml:space="preserve">Previously, view pixels were the way to abstract the size and layout of UI elements away from the actual physical size and resolution of devices.</target>
          </segment>
        </unit>
        <unit id="209">
          <segment state="initial" id="209">
            <source xml:space="preserve">View pixels have now evolved into effective pixels, and here's an explanation of that term, what it means, and the extra value it offers.</source>
            <target xml:space="preserve">View pixels have now evolved into effective pixels, and here's an explanation of that term, what it means, and the extra value it offers.</target>
          </segment>
        </unit>
        <unit id="210">
          <segment state="initial" id="210">
            <source xml:space="preserve">The term "resolution" refers to a measure of pixel density and not, as is commonly thought, pixel count.</source>
            <target xml:space="preserve">The term "resolution" refers to a measure of pixel density and not, as is commonly thought, pixel count.</target>
          </segment>
        </unit>
        <unit id="211">
          <segment state="initial" id="211">
            <source xml:space="preserve">"Effective resolution" is the way the physical pixels that compose an image or glyph resolve to the eye given differences in viewing distance and the physical pixel size of the device (pixel density being the reciprocal of physical pixel size).</source>
            <target xml:space="preserve">"Effective resolution" is the way the physical pixels that compose an image or glyph resolve to the eye given differences in viewing distance and the physical pixel size of the device (pixel density being the reciprocal of physical pixel size).</target>
          </segment>
        </unit>
        <unit id="212">
          <segment state="initial" id="212">
            <source xml:space="preserve">Effective resolution is a good metric to build an experience around because it is user-centric.</source>
            <target xml:space="preserve">Effective resolution is a good metric to build an experience around because it is user-centric.</target>
          </segment>
        </unit>
        <unit id="213">
          <segment state="initial" id="213">
            <source xml:space="preserve">By understanding all the factors, and controlling the size of UI elements, you can make the user's experience a good one.</source>
            <target xml:space="preserve">By understanding all the factors, and controlling the size of UI elements, you can make the user's experience a good one.</target>
          </segment>
        </unit>
        <unit id="214">
          <segment state="initial" id="214">
            <source xml:space="preserve">Different devices are a different number of effective pixels wide, ranging from 320 epx for the smallest devices, to 1024 epx for a modest-sized monitor, and far beyond to much higher widths.</source>
            <target xml:space="preserve">Different devices are a different number of effective pixels wide, ranging from 320 epx for the smallest devices, to 1024 epx for a modest-sized monitor, and far beyond to much higher widths.</target>
          </segment>
        </unit>
        <unit id="215">
          <segment state="initial" id="215">
            <source xml:space="preserve">All you have to do is continue to use auto-sized elements and dynamic layout panels as you always have.</source>
            <target xml:space="preserve">All you have to do is continue to use auto-sized elements and dynamic layout panels as you always have.</target>
          </segment>
        </unit>
        <unit id="216">
          <segment state="initial" id="216">
            <source xml:space="preserve">There will also be some cases where you'll set the properties of your UI elements to a fixed size in XAML markup.</source>
            <target xml:space="preserve">There will also be some cases where you'll set the properties of your UI elements to a fixed size in XAML markup.</target>
          </segment>
        </unit>
        <unit id="217">
          <segment state="initial" id="217">
            <source xml:space="preserve">A scale factor is automatically applied to your app depending on what device it runs on and the display settings made by the user.</source>
            <target xml:space="preserve">A scale factor is automatically applied to your app depending on what device it runs on and the display settings made by the user.</target>
          </segment>
        </unit>
        <unit id="218">
          <segment state="initial" id="218">
            <source xml:space="preserve">And that scale factor serves to keep any UI element with a fixed size presenting a more-or-less constant-sized touch (and reading) target to the user across a wide variety of screen sizes.</source>
            <target xml:space="preserve">And that scale factor serves to keep any UI element with a fixed size presenting a more-or-less constant-sized touch (and reading) target to the user across a wide variety of screen sizes.</target>
          </segment>
        </unit>
        <unit id="219">
          <segment state="initial" id="219">
            <source xml:space="preserve">And together with dynamic layout, your UI won't merely optically scale on different devices.</source>
            <target xml:space="preserve">And together with dynamic layout, your UI won't merely optically scale on different devices.</target>
          </segment>
        </unit>
        <unit id="220">
          <segment state="initial" id="220">
            <source xml:space="preserve">It will instead do what's necessary to fit the appropriate amount of content into the available space.</source>
            <target xml:space="preserve">It will instead do what's necessary to fit the appropriate amount of content into the available space.</target>
          </segment>
        </unit>
        <unit id="221">
          <segment state="initial" id="221">
            <source xml:space="preserve">So that your app has the best experience across all displays, we recommend that you create each bitmap asset in a range of sizes, each suitable for a particular scale factor.</source>
            <target xml:space="preserve">So that your app has the best experience across all displays, we recommend that you create each bitmap asset in a range of sizes, each suitable for a particular scale factor.</target>
          </segment>
        </unit>
        <unit id="222">
          <segment state="initial" id="222">
            <source xml:space="preserve">Providing assets at 100%-scale, 200%-scale, and 400%-scale (in that priority order) will give you excellent results in most cases at all the intermediate scale factors.</source>
            <target xml:space="preserve">Providing assets at 100%-scale, 200%-scale, and 400%-scale (in that priority order) will give you excellent results in most cases at all the intermediate scale factors.</target>
          </segment>
        </unit>
        <unit id="223">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="223">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Note</pc>  If, for whatever reason, you cannot create assets in more than one size, then create 100%-scale assets.</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Note</pc>  If, for whatever reason, you cannot create assets in more than one size, then create 100%-scale assets.</target>
          </segment>
        </unit>
        <unit id="224">
          <segment state="initial" id="224">
            <source xml:space="preserve">In Microsoft Visual Studio, the default project template for UWP apps provides branding assets (tile images and logos) in only one size, but they are not 100%-scale.</source>
            <target xml:space="preserve">In Microsoft Visual Studio, the default project template for UWP apps provides branding assets (tile images and logos) in only one size, but they are not 100%-scale.</target>
          </segment>
        </unit>
        <unit id="225">
          <segment state="initial" id="225">
            <source xml:space="preserve">When authoring assets for your own app, follow the guidance in this section and provide 100%, 200%, and 400% sizes, and use asset packs.</source>
            <target xml:space="preserve">When authoring assets for your own app, follow the guidance in this section and provide 100%, 200%, and 400% sizes, and use asset packs.</target>
          </segment>
        </unit>
        <unit id="226">
          <segment state="initial" id="226">
            <source xml:space="preserve">If you have intricate artwork, then you may want to provide your assets in even more sizes.</source>
            <target xml:space="preserve">If you have intricate artwork, then you may want to provide your assets in even more sizes.</target>
          </segment>
        </unit>
        <unit id="227">
          <segment state="initial" id="227">
            <source xml:space="preserve">If you're starting with vector art, then it's relatively easy to generate high-quality assets at any scale factor.</source>
            <target xml:space="preserve">If you're starting with vector art, then it's relatively easy to generate high-quality assets at any scale factor.</target>
          </segment>
        </unit>
        <unit id="228">
          <segment state="initial" id="228">
            <source xml:space="preserve">We don't recommend that you try to support all of the scale factors, but the full list of scale factors for Windows 10 apps is 100%, 125%, 150%, 200%, 250%, 300%, and 400%.</source>
            <target xml:space="preserve">We don't recommend that you try to support all of the scale factors, but the full list of scale factors for Windows 10 apps is 100%, 125%, 150%, 200%, 250%, 300%, and 400%.</target>
          </segment>
        </unit>
        <unit id="229">
          <segment state="initial" id="229">
            <source xml:space="preserve">If you provide them, the Store will pick the correct-sized asset(s) for each device, and only those assets will be downloaded.</source>
            <target xml:space="preserve">If you provide them, the Store will pick the correct-sized asset(s) for each device, and only those assets will be downloaded.</target>
          </segment>
        </unit>
        <unit id="230">
          <segment state="initial" id="230">
            <source xml:space="preserve">The Store selects the assets to download based on the DPI of the device.</source>
            <target xml:space="preserve">The Store selects the assets to download based on the DPI of the device.</target>
          </segment>
        </unit>
        <unit id="231">
          <segment state="initial" id="231">
            <source xml:space="preserve">You can re-use assets from your Windows Store app at scale factors such as 140% and 220%, but your app will run at one of the new scale factors and so some bitmap scaling will be unavoidable.</source>
            <target xml:space="preserve">You can re-use assets from your Windows Store app at scale factors such as 140% and 220%, but your app will run at one of the new scale factors and so some bitmap scaling will be unavoidable.</target>
          </segment>
        </unit>
        <unit id="232">
          <segment state="initial" id="232">
            <source xml:space="preserve">Test your app on a range of devices to see whether you're happy with the results in your case.</source>
            <target xml:space="preserve">Test your app on a range of devices to see whether you're happy with the results in your case.</target>
          </segment>
        </unit>
        <unit id="233">
          <segment state="initial" id="233">
            <source xml:space="preserve">You may be re-using XAML markup from a Windows Store app where literal dimension values are used in the markup (perhaps to size shapes or other elements, perhaps for typography).</source>
            <target xml:space="preserve">You may be re-using XAML markup from a Windows Store app where literal dimension values are used in the markup (perhaps to size shapes or other elements, perhaps for typography).</target>
          </segment>
        </unit>
        <unit id="234">
          <segment state="initial" id="234">
            <source xml:space="preserve">But, in some cases, a larger scale factor is used on a device for a Windows 10 app than for a Universal 8.1 app (for example, 150% is used where 140% was before, and 200% is used where 180% was).</source>
            <target xml:space="preserve">But, in some cases, a larger scale factor is used on a device for a Windows 10 app than for a Universal 8.1 app (for example, 150% is used where 140% was before, and 200% is used where 180% was).</target>
          </segment>
        </unit>
        <unit id="235">
          <segment state="initial" id="235">
            <source xml:space="preserve">So, if you find that these literal values are now too big on Windows 10, then try multiplying them by 0.8.</source>
            <target xml:space="preserve">So, if you find that these literal values are now too big on Windows 10, then try multiplying them by 0.8.</target>
          </segment>
        </unit>
        <unit id="236">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="236">
            <source xml:space="preserve">For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Responsive design 101 for UWP apps</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>.</source>
            <target xml:space="preserve">For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Responsive design 101 for UWP apps</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>.</target>
          </segment>
        </unit>
        <unit id="237">
          <segment state="initial" id="237">
            <source xml:space="preserve">GridView/ListView changes</source>
            <target xml:space="preserve">GridView/ListView changes</target>
          </segment>
        </unit>
        <unit id="238">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="238">
            <source xml:space="preserve">Several changes have been made to the default style setters for <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**GridView**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> to make the control scroll vertically (instead of horizontally, as it did previously by default).</source>
            <target xml:space="preserve">Several changes have been made to the default style setters for <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**GridView**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> to make the control scroll vertically (instead of horizontally, as it did previously by default).</target>
          </segment>
        </unit>
        <unit id="239">
          <segment state="initial" id="239">
            <source xml:space="preserve">If you edited a copy of the default style in your project, then your copy won't have these changes, so you'll need to make them manually.</source>
            <target xml:space="preserve">If you edited a copy of the default style in your project, then your copy won't have these changes, so you'll need to make them manually.</target>
          </segment>
        </unit>
        <unit id="240">
          <segment state="initial" id="240">
            <source xml:space="preserve">Here is a list of the changes.</source>
            <target xml:space="preserve">Here is a list of the changes.</target>
          </segment>
        </unit>
        <unit id="241">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;strong&gt;</data>
            <data id="id8">&lt;/strong&gt;</data>
            <data id="id9">&lt;strong&gt;</data>
            <data id="id10">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="241">
            <source xml:space="preserve">The setter for <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**ScrollViewer.HorizontalScrollBarVisibility**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> has changed from <pc dataRefEnd="id8" dataRefStart="id7" id="4">Auto</pc> to <pc dataRefEnd="id10" dataRefStart="id9" id="6">Disabled</pc>.</source>
            <target xml:space="preserve">The setter for <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**ScrollViewer.HorizontalScrollBarVisibility**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> has changed from <pc dataRefEnd="id8" dataRefStart="id7" id="4">Auto</pc> to <pc dataRefEnd="id10" dataRefStart="id9" id="6">Disabled</pc>.</target>
          </segment>
        </unit>
        <unit id="242">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;strong&gt;</data>
            <data id="id8">&lt;/strong&gt;</data>
            <data id="id9">&lt;strong&gt;</data>
            <data id="id10">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="242">
            <source xml:space="preserve">The setter for <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**ScrollViewer.VerticalScrollBarVisibility**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> has changed from <pc dataRefEnd="id8" dataRefStart="id7" id="4">Disabled</pc> to <pc dataRefEnd="id10" dataRefStart="id9" id="6">Auto</pc>.</source>
            <target xml:space="preserve">The setter for <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**ScrollViewer.VerticalScrollBarVisibility**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> has changed from <pc dataRefEnd="id8" dataRefStart="id7" id="4">Disabled</pc> to <pc dataRefEnd="id10" dataRefStart="id9" id="6">Auto</pc>.</target>
          </segment>
        </unit>
        <unit id="243">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;strong&gt;</data>
            <data id="id8">&lt;/strong&gt;</data>
            <data id="id9">&lt;strong&gt;</data>
            <data id="id10">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="243">
            <source xml:space="preserve">The setter for <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**ScrollViewer.HorizontalScrollMode**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> has changed from <pc dataRefEnd="id8" dataRefStart="id7" id="4">Enabled</pc> to <pc dataRefEnd="id10" dataRefStart="id9" id="6">Disabled</pc>.</source>
            <target xml:space="preserve">The setter for <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**ScrollViewer.HorizontalScrollMode**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> has changed from <pc dataRefEnd="id8" dataRefStart="id7" id="4">Enabled</pc> to <pc dataRefEnd="id10" dataRefStart="id9" id="6">Disabled</pc>.</target>
          </segment>
        </unit>
        <unit id="244">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;strong&gt;</data>
            <data id="id8">&lt;/strong&gt;</data>
            <data id="id9">&lt;strong&gt;</data>
            <data id="id10">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="244">
            <source xml:space="preserve">The setter for <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**ScrollViewer.VerticalScrollMode**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> has changed from <pc dataRefEnd="id8" dataRefStart="id7" id="4">Disabled</pc> to <pc dataRefEnd="id10" dataRefStart="id9" id="6">Enabled</pc>.</source>
            <target xml:space="preserve">The setter for <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**ScrollViewer.VerticalScrollMode**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> has changed from <pc dataRefEnd="id8" dataRefStart="id7" id="4">Disabled</pc> to <pc dataRefEnd="id10" dataRefStart="id9" id="6">Enabled</pc>.</target>
          </segment>
        </unit>
        <unit id="245">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;link&gt;</data>
            <data id="id8">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id13">&lt;strong&gt;</data>
            <data id="id14">&lt;/strong&gt;</data>
            <data id="id15">&lt;strong&gt;</data>
            <data id="id16">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="245">
            <source xml:space="preserve">In the setter for <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**ItemsPanel**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>, the value of <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**ItemsWrapGrid.Orientation**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc> has changed from <pc dataRefEnd="id14" dataRefStart="id13" id="6">Vertical</pc> to <pc dataRefEnd="id16" dataRefStart="id15" id="8">Horizontal</pc>.</source>
            <target xml:space="preserve">In the setter for <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**ItemsPanel**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>, the value of <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**ItemsWrapGrid.Orientation**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc> has changed from <pc dataRefEnd="id14" dataRefStart="id13" id="6">Vertical</pc> to <pc dataRefEnd="id16" dataRefStart="id15" id="8">Horizontal</pc>.</target>
          </segment>
        </unit>
        <unit id="246">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="246">
            <source xml:space="preserve">If that last change (the change to <pc dataRefEnd="id2" dataRefStart="id1" id="2">Orientation</pc>) seems contradictory, then remember that we're talking about a wrap grid.</source>
            <target xml:space="preserve">If that last change (the change to <pc dataRefEnd="id2" dataRefStart="id1" id="2">Orientation</pc>) seems contradictory, then remember that we're talking about a wrap grid.</target>
          </segment>
        </unit>
        <unit id="247">
          <segment state="initial" id="247">
            <source xml:space="preserve">A horizontally-oriented wrap grid (the new value) is similar to a writing system where text flows horizontally and breaks to the next line down at the end of a page.</source>
            <target xml:space="preserve">A horizontally-oriented wrap grid (the new value) is similar to a writing system where text flows horizontally and breaks to the next line down at the end of a page.</target>
          </segment>
        </unit>
        <unit id="248">
          <segment state="initial" id="248">
            <source xml:space="preserve">A page of text like that scrolls vertically.</source>
            <target xml:space="preserve">A page of text like that scrolls vertically.</target>
          </segment>
        </unit>
        <unit id="249">
          <segment state="initial" id="249">
            <source xml:space="preserve">Conversely, a vertically-oriented wrap grid (the previous value) is similar to a writing system where text flows vertically and therefore scrolls horizontally.</source>
            <target xml:space="preserve">Conversely, a vertically-oriented wrap grid (the previous value) is similar to a writing system where text flows vertically and therefore scrolls horizontally.</target>
          </segment>
        </unit>
        <unit id="250">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;link&gt;</data>
            <data id="id8">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="250">
            <source xml:space="preserve">Here are the aspects of <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**GridView**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> and <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**ListView**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc> that have change or are not supported in Windows 10.</source>
            <target xml:space="preserve">Here are the aspects of <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**GridView**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> and <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**ListView**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc> that have change or are not supported in Windows 10.</target>
          </segment>
        </unit>
        <unit id="251">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="251">
            <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**IsSwipeEnabled**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> property (Windows Store apps only) is not supported for Windows 10 apps.</source>
            <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**IsSwipeEnabled**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> property (Windows Store apps only) is not supported for Windows 10 apps.</target>
          </segment>
        </unit>
        <unit id="252">
          <segment state="initial" id="252">
            <source xml:space="preserve">The API is still present, but setting it has no effect.</source>
            <target xml:space="preserve">The API is still present, but setting it has no effect.</target>
          </segment>
        </unit>
        <unit id="253">
          <segment state="initial" id="253">
            <source xml:space="preserve">All previous selection gestures are supported except downward swipe (which is unsupported because data shows that it is not discoverable) and right-click (which is reserved for showing a context menu).</source>
            <target xml:space="preserve">All previous selection gestures are supported except downward swipe (which is unsupported because data shows that it is not discoverable) and right-click (which is reserved for showing a context menu).</target>
          </segment>
        </unit>
        <unit id="254">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="254">
            <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**ReorderMode**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> property (Windows Phone Store apps only) is not supported for Windows 10 apps.</source>
            <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**ReorderMode**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> property (Windows Phone Store apps only) is not supported for Windows 10 apps.</target>
          </segment>
        </unit>
        <unit id="255">
          <segment state="initial" id="255">
            <source xml:space="preserve">The API is still present, but setting it has no effect.</source>
            <target xml:space="preserve">The API is still present, but setting it has no effect.</target>
          </segment>
        </unit>
        <unit id="256">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;link&gt;</data>
            <data id="id8">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id13">&lt;strong&gt;</data>
            <data id="id14">&lt;/strong&gt;</data>
            <data id="id15">&lt;strong&gt;</data>
            <data id="id16">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="256">
            <source xml:space="preserve">Instead, set <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**AllowDrop**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> and <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**CanReorderItems**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc> to true on your <pc dataRefEnd="id14" dataRefStart="id13" id="6">GridView</pc> or <pc dataRefEnd="id16" dataRefStart="id15" id="8">ListView</pc> and then the user will be able to reorder using a press-and-hold (or click-and-drag) gesture.</source>
            <target xml:space="preserve">Instead, set <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**AllowDrop**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> and <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**CanReorderItems**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc> to true on your <pc dataRefEnd="id14" dataRefStart="id13" id="6">GridView</pc> or <pc dataRefEnd="id16" dataRefStart="id15" id="8">ListView</pc> and then the user will be able to reorder using a press-and-hold (or click-and-drag) gesture.</target>
          </segment>
        </unit>
        <unit id="257">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;link&gt;</data>
            <data id="id8">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id13">&lt;link&gt;</data>
            <data id="id14">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id19">&lt;link&gt;</data>
            <data id="id20">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="257">
            <source xml:space="preserve">When developing for Windows 10, use <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**ListViewItemPresenter**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> instead of <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**GridViewItemPresenter**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc> in your item container style, both for <pc dataRefEnd="id14" dataRefStart="id13" id="6CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="6CapsExtId2">**ListView**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="6CapsExtId3"></pc></pc> and for <pc dataRefEnd="id20" dataRefStart="id19" id="8CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="8CapsExtId2">**GridView**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="8CapsExtId3"></pc></pc>.</source>
            <target xml:space="preserve">When developing for Windows 10, use <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**ListViewItemPresenter**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> instead of <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**GridViewItemPresenter**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc> in your item container style, both for <pc dataRefEnd="id14" dataRefStart="id13" id="6CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="6CapsExtId2">**ListView**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="6CapsExtId3"></pc></pc> and for <pc dataRefEnd="id20" dataRefStart="id19" id="8CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="8CapsExtId2">**GridView**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="8CapsExtId3"></pc></pc>.</target>
          </segment>
        </unit>
        <unit id="258">
          <segment state="initial" id="258">
            <source xml:space="preserve">If you edit a copy of the default item container styles, then you will get the correct type.</source>
            <target xml:space="preserve">If you edit a copy of the default item container styles, then you will get the correct type.</target>
          </segment>
        </unit>
        <unit id="259">
          <segment state="initial" id="259">
            <source xml:space="preserve">The selection visuals have changed for a Windows 10 app.</source>
            <target xml:space="preserve">The selection visuals have changed for a Windows 10 app.</target>
          </segment>
        </unit>
        <unit id="260">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;strong&gt;</data>
            <data id="id8">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="260">
            <source xml:space="preserve">If you set <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**SelectionMode**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> to <pc dataRefEnd="id8" dataRefStart="id7" id="4">Multiple</pc>, then by default, a check box is rendered for each item.</source>
            <target xml:space="preserve">If you set <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**SelectionMode**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> to <pc dataRefEnd="id8" dataRefStart="id7" id="4">Multiple</pc>, then by default, a check box is rendered for each item.</target>
          </segment>
        </unit>
        <unit id="261">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="261">
            <source xml:space="preserve">The default setting for <pc dataRefEnd="id2" dataRefStart="id1" id="2">ListView</pc> items means that the check box is laid out inline beside the item, and as a result, the space occupied by the rest of the item will be slightly reduced and shifted.</source>
            <target xml:space="preserve">The default setting for <pc dataRefEnd="id2" dataRefStart="id1" id="2">ListView</pc> items means that the check box is laid out inline beside the item, and as a result, the space occupied by the rest of the item will be slightly reduced and shifted.</target>
          </segment>
        </unit>
        <unit id="262">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="262">
            <source xml:space="preserve">For <pc dataRefEnd="id2" dataRefStart="id1" id="2">GridView</pc> items, the check box is overlaid on top of the item by default.</source>
            <target xml:space="preserve">For <pc dataRefEnd="id2" dataRefStart="id1" id="2">GridView</pc> items, the check box is overlaid on top of the item by default.</target>
          </segment>
        </unit>
        <unit id="263">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;link&gt;</data>
            <data id="id8">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id13">&lt;link&gt;</data>
            <data id="id14">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="263">
            <source xml:space="preserve">But, in either case, you can control the layout (Inline or Overlay) of the check boxes (with the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**CheckMode**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> property) and whether they are shown at all (with the <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**SelectionCheckMarkVisualEnabled**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc> property) on the <pc dataRefEnd="id14" dataRefStart="id13" id="6CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="6CapsExtId2">**ListViewItemPresenter**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="6CapsExtId3"></pc></pc> element inside your item container style as in the example below.</source>
            <target xml:space="preserve">But, in either case, you can control the layout (Inline or Overlay) of the check boxes (with the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**CheckMode**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> property) and whether they are shown at all (with the <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**SelectionCheckMarkVisualEnabled**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc> property) on the <pc dataRefEnd="id14" dataRefStart="id13" id="6CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="6CapsExtId2">**ListViewItemPresenter**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="6CapsExtId3"></pc></pc> element inside your item container style as in the example below.</target>
          </segment>
        </unit>
        <unit id="264">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="264">
            <source xml:space="preserve">In Windows 10, the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**ContainerContentChanging**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> event is raised twice per item during UI virtualization: once for the reclaim, and once for the re-use.</source>
            <target xml:space="preserve">In Windows 10, the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**ContainerContentChanging**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> event is raised twice per item during UI virtualization: once for the reclaim, and once for the re-use.</target>
          </segment>
        </unit>
        <unit id="265">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;strong&gt;</data>
            <data id="id8">&lt;/strong&gt;</data>
            <data id="id9">&lt;strong&gt;</data>
            <data id="id10">&lt;/strong&gt;</data>
            <data id="id11">&lt;strong&gt;</data>
            <data id="id12">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="265">
            <source xml:space="preserve">If the value of <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**InRecycleQueue**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> is <pc dataRefEnd="id8" dataRefStart="id7" id="4">true</pc> and you have no special reclaim work to do, then you can exit your event handler immediately with the assurance that it will be re-entered when that same item is re-used (at which time <pc dataRefEnd="id10" dataRefStart="id9" id="6">InRecycleQueue</pc> will be <pc dataRefEnd="id12" dataRefStart="id11" id="8">false</pc>).</source>
            <target xml:space="preserve">If the value of <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**InRecycleQueue**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> is <pc dataRefEnd="id8" dataRefStart="id7" id="4">true</pc> and you have no special reclaim work to do, then you can exit your event handler immediately with the assurance that it will be re-entered when that same item is re-used (at which time <pc dataRefEnd="id10" dataRefStart="id9" id="6">InRecycleQueue</pc> will be <pc dataRefEnd="id12" dataRefStart="id11" id="8">false</pc>).</target>
          </segment>
        </unit>
        <unit id="266">
          <originalData>
            <data id="id1">&lt;linkText&gt;</data>
            <data id="id2">&lt;/linkText&gt;</data>
          </originalData>
          <segment state="initial" id="266">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">a listviewitempresenter with inline check box</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">a listviewitempresenter with inline check box</pc>
						</target>
          </segment>
        </unit>
        <unit id="267">
          <segment state="initial" id="267">
            <source xml:space="preserve">A ListViewItemPresenter with inline check box</source>
            <target xml:space="preserve">A ListViewItemPresenter with inline check box</target>
          </segment>
        </unit>
        <unit id="268">
          <originalData>
            <data id="id1">&lt;linkText&gt;</data>
            <data id="id2">&lt;/linkText&gt;</data>
          </originalData>
          <segment state="initial" id="268">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">a listviewitempresenter with overlaid check box</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">a listviewitempresenter with overlaid check box</pc>
						</target>
          </segment>
        </unit>
        <unit id="269">
          <segment state="initial" id="269">
            <source xml:space="preserve">A ListViewItemPresenter with an overlaid check box</source>
            <target xml:space="preserve">A ListViewItemPresenter with an overlaid check box</target>
          </segment>
        </unit>
        <unit id="270">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;link&gt;</data>
            <data id="id8">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="270">
            <source xml:space="preserve">With the removal of downward swipe and right-click gestures for selection (for the reasons given above), the interaction model has changed, one consequence of which is that the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**ItemClick**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> and <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**SelectionChanged**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc> events are no longer mutually exclusive.</source>
            <target xml:space="preserve">With the removal of downward swipe and right-click gestures for selection (for the reasons given above), the interaction model has changed, one consequence of which is that the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**ItemClick**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> and <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**SelectionChanged**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc> events are no longer mutually exclusive.</target>
          </segment>
        </unit>
        <unit id="271">
          <segment state="initial" id="271">
            <source xml:space="preserve">For your Windows 10 app, review your scenarios and decide whether to adopt the "selection" or the "invoke" interaction model.</source>
            <target xml:space="preserve">For your Windows 10 app, review your scenarios and decide whether to adopt the "selection" or the "invoke" interaction model.</target>
          </segment>
        </unit>
        <unit id="272">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="272">
            <source xml:space="preserve">For details, see <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">How to change the interaction mode</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>.</source>
            <target xml:space="preserve">For details, see <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">How to change the interaction mode</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>.</target>
          </segment>
        </unit>
        <unit id="273">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="273">
            <source xml:space="preserve">There are some changes to the properties that you use to style <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**ListViewItemPresenter**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>.</source>
            <target xml:space="preserve">There are some changes to the properties that you use to style <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**ListViewItemPresenter**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>.</target>
          </segment>
        </unit>
        <unit id="274">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;link&gt;</data>
            <data id="id8">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id13">&lt;link&gt;</data>
            <data id="id14">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id19">&lt;link&gt;</data>
            <data id="id20">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="274">
            <source xml:space="preserve">Properties that are new are <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**CheckBoxBrush**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>, <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**PressedBackground**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc>, <pc dataRefEnd="id14" dataRefStart="id13" id="6CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="6CapsExtId2">**SelectedPressedBackground**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="6CapsExtId3"></pc></pc>, and <pc dataRefEnd="id20" dataRefStart="id19" id="8CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="8CapsExtId2">**FocusSecondaryBorderBrush**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="8CapsExtId3"></pc></pc>.</source>
            <target xml:space="preserve">Properties that are new are <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**CheckBoxBrush**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>, <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**PressedBackground**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc>, <pc dataRefEnd="id14" dataRefStart="id13" id="6CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="6CapsExtId2">**SelectedPressedBackground**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="6CapsExtId3"></pc></pc>, and <pc dataRefEnd="id20" dataRefStart="id19" id="8CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="8CapsExtId2">**FocusSecondaryBorderBrush**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="8CapsExtId3"></pc></pc>.</target>
          </segment>
        </unit>
        <unit id="275">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;link&gt;</data>
            <data id="id8">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id13">&lt;link&gt;</data>
            <data id="id14">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id19">&lt;link&gt;</data>
            <data id="id20">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id25">&lt;link&gt;</data>
            <data id="id26">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id31">&lt;link&gt;</data>
            <data id="id32">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id37">&lt;link&gt;</data>
            <data id="id38">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id43">&lt;link&gt;</data>
            <data id="id44">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="275">
            <source xml:space="preserve">Properties that are ignored for a Windows 10 app are <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**Padding**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> (use <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**ContentMargin**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc> instead), <pc dataRefEnd="id14" dataRefStart="id13" id="6CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="6CapsExtId2">**CheckHintBrush**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="6CapsExtId3"></pc></pc>, <pc dataRefEnd="id20" dataRefStart="id19" id="8CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="8CapsExtId2">**CheckSelectingBrush**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="8CapsExtId3"></pc></pc>, <pc dataRefEnd="id26" dataRefStart="id25" id="10CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="10CapsExtId2">**PointerOverBackgroundMargin**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="10CapsExtId3"></pc></pc>, <pc dataRefEnd="id32" dataRefStart="id31" id="12CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="12CapsExtId2">**ReorderHintOffset**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="12CapsExtId3"></pc></pc>, <pc dataRefEnd="id38" dataRefStart="id37" id="14CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="14CapsExtId2">**SelectedBorderThickness**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="14CapsExtId3"></pc></pc>, and <pc dataRefEnd="id44" dataRefStart="id43" id="16CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="16CapsExtId2">**SelectedPointerOverBorderBrush**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="16CapsExtId3"></pc></pc>.</source>
            <target xml:space="preserve">Properties that are ignored for a Windows 10 app are <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**Padding**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> (use <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**ContentMargin**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc> instead), <pc dataRefEnd="id14" dataRefStart="id13" id="6CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="6CapsExtId2">**CheckHintBrush**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="6CapsExtId3"></pc></pc>, <pc dataRefEnd="id20" dataRefStart="id19" id="8CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="8CapsExtId2">**CheckSelectingBrush**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="8CapsExtId3"></pc></pc>, <pc dataRefEnd="id26" dataRefStart="id25" id="10CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="10CapsExtId2">**PointerOverBackgroundMargin**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="10CapsExtId3"></pc></pc>, <pc dataRefEnd="id32" dataRefStart="id31" id="12CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="12CapsExtId2">**ReorderHintOffset**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="12CapsExtId3"></pc></pc>, <pc dataRefEnd="id38" dataRefStart="id37" id="14CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="14CapsExtId2">**SelectedBorderThickness**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="14CapsExtId3"></pc></pc>, and <pc dataRefEnd="id44" dataRefStart="id43" id="16CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="16CapsExtId2">**SelectedPointerOverBorderBrush**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="16CapsExtId3"></pc></pc>.</target>
          </segment>
        </unit>
        <unit id="276">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;link&gt;</data>
            <data id="id8">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="276">
            <source xml:space="preserve">This table describes the changes to the visual states and visual state groups in the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**ListViewItem**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> and <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**GridViewItem**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc> control templates.</source>
            <target xml:space="preserve">This table describes the changes to the visual states and visual state groups in the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**ListViewItem**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> and <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**GridViewItem**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc> control templates.</target>
          </segment>
        </unit>
        <unit id="277">
          <segment state="initial" id="277">
            <source xml:space="preserve">8.1</source>
            <target xml:space="preserve">8.1</target>
          </segment>
        </unit>
        <unit id="278">
          <segment state="initial" id="278">
            <source xml:space="preserve">Windows 10</source>
            <target xml:space="preserve">Windows 10</target>
          </segment>
        </unit>
        <unit id="279">
          <segment state="initial" id="279">
            <source xml:space="preserve">CommonStates</source>
            <target xml:space="preserve">CommonStates</target>
          </segment>
        </unit>
        <unit id="280">
          <segment state="initial" id="280">
            <source xml:space="preserve">CommonStates</source>
            <target xml:space="preserve">CommonStates</target>
          </segment>
        </unit>
        <unit id="281">
          <segment state="initial" id="281">
            <source xml:space="preserve">Normal</source>
            <target xml:space="preserve">Normal</target>
          </segment>
        </unit>
        <unit id="282">
          <segment state="initial" id="282">
            <source xml:space="preserve">Normal</source>
            <target xml:space="preserve">Normal</target>
          </segment>
        </unit>
        <unit id="283">
          <segment state="initial" id="283">
            <source xml:space="preserve">PointerOver</source>
            <target xml:space="preserve">PointerOver</target>
          </segment>
        </unit>
        <unit id="284">
          <segment state="initial" id="284">
            <source xml:space="preserve">PointerOver</source>
            <target xml:space="preserve">PointerOver</target>
          </segment>
        </unit>
        <unit id="285">
          <segment state="initial" id="285">
            <source xml:space="preserve">Pressed</source>
            <target xml:space="preserve">Pressed</target>
          </segment>
        </unit>
        <unit id="286">
          <segment state="initial" id="286">
            <source xml:space="preserve">Pressed</source>
            <target xml:space="preserve">Pressed</target>
          </segment>
        </unit>
        <unit id="287">
          <segment state="initial" id="287">
            <source xml:space="preserve">PointerOverPressed</source>
            <target xml:space="preserve">PointerOverPressed</target>
          </segment>
        </unit>
        <unit id="288">
          <segment state="initial" id="288">
            <source xml:space="preserve">[unavailable]</source>
            <target xml:space="preserve">[unavailable]</target>
          </segment>
        </unit>
        <unit id="289">
          <segment state="initial" id="289">
            <source xml:space="preserve">Disabled</source>
            <target xml:space="preserve">Disabled</target>
          </segment>
        </unit>
        <unit id="290">
          <segment state="initial" id="290">
            <source xml:space="preserve">[unavailable]</source>
            <target xml:space="preserve">[unavailable]</target>
          </segment>
        </unit>
        <unit id="291">
          <segment state="initial" id="291">
            <source xml:space="preserve">[unavailable]</source>
            <target xml:space="preserve">[unavailable]</target>
          </segment>
        </unit>
        <unit id="292">
          <segment state="initial" id="292">
            <source xml:space="preserve">PointerOverSelected</source>
            <target xml:space="preserve">PointerOverSelected</target>
          </segment>
        </unit>
        <unit id="293">
          <segment state="initial" id="293">
            <source xml:space="preserve">[unavailable]</source>
            <target xml:space="preserve">[unavailable]</target>
          </segment>
        </unit>
        <unit id="294">
          <segment state="initial" id="294">
            <source xml:space="preserve">Selected</source>
            <target xml:space="preserve">Selected</target>
          </segment>
        </unit>
        <unit id="295">
          <segment state="initial" id="295">
            <source xml:space="preserve">[unavailable]</source>
            <target xml:space="preserve">[unavailable]</target>
          </segment>
        </unit>
        <unit id="296">
          <segment state="initial" id="296">
            <source xml:space="preserve">PressedSelected</source>
            <target xml:space="preserve">PressedSelected</target>
          </segment>
        </unit>
        <unit id="297">
          <segment state="initial" id="297">
            <source xml:space="preserve">[unavailable]</source>
            <target xml:space="preserve">[unavailable]</target>
          </segment>
        </unit>
        <unit id="298">
          <segment state="initial" id="298">
            <source xml:space="preserve">DisabledStates</source>
            <target xml:space="preserve">DisabledStates</target>
          </segment>
        </unit>
        <unit id="299">
          <segment state="initial" id="299">
            <source xml:space="preserve">[unavailable]</source>
            <target xml:space="preserve">[unavailable]</target>
          </segment>
        </unit>
        <unit id="300">
          <segment state="initial" id="300">
            <source xml:space="preserve">Disabled</source>
            <target xml:space="preserve">Disabled</target>
          </segment>
        </unit>
        <unit id="301">
          <segment state="initial" id="301">
            <source xml:space="preserve">[unavailable]</source>
            <target xml:space="preserve">[unavailable]</target>
          </segment>
        </unit>
        <unit id="302">
          <segment state="initial" id="302">
            <source xml:space="preserve">Enabled</source>
            <target xml:space="preserve">Enabled</target>
          </segment>
        </unit>
        <unit id="303">
          <segment state="initial" id="303">
            <source xml:space="preserve">SelectionHintStates</source>
            <target xml:space="preserve">SelectionHintStates</target>
          </segment>
        </unit>
        <unit id="304">
          <segment state="initial" id="304">
            <source xml:space="preserve">[unavailable]</source>
            <target xml:space="preserve">[unavailable]</target>
          </segment>
        </unit>
        <unit id="305">
          <segment state="initial" id="305">
            <source xml:space="preserve">VerticalSelectionHint</source>
            <target xml:space="preserve">VerticalSelectionHint</target>
          </segment>
        </unit>
        <unit id="306">
          <segment state="initial" id="306">
            <source xml:space="preserve">[unavailable]</source>
            <target xml:space="preserve">[unavailable]</target>
          </segment>
        </unit>
        <unit id="307">
          <segment state="initial" id="307">
            <source xml:space="preserve">HorizontalSelectionHint</source>
            <target xml:space="preserve">HorizontalSelectionHint</target>
          </segment>
        </unit>
        <unit id="308">
          <segment state="initial" id="308">
            <source xml:space="preserve">[unavailable]</source>
            <target xml:space="preserve">[unavailable]</target>
          </segment>
        </unit>
        <unit id="309">
          <segment state="initial" id="309">
            <source xml:space="preserve">NoSelectionHint</source>
            <target xml:space="preserve">NoSelectionHint</target>
          </segment>
        </unit>
        <unit id="310">
          <segment state="initial" id="310">
            <source xml:space="preserve">[unavailable]</source>
            <target xml:space="preserve">[unavailable]</target>
          </segment>
        </unit>
        <unit id="311">
          <segment state="initial" id="311">
            <source xml:space="preserve">[unavailable]</source>
            <target xml:space="preserve">[unavailable]</target>
          </segment>
        </unit>
        <unit id="312">
          <segment state="initial" id="312">
            <source xml:space="preserve">MultiSelectStates</source>
            <target xml:space="preserve">MultiSelectStates</target>
          </segment>
        </unit>
        <unit id="313">
          <segment state="initial" id="313">
            <source xml:space="preserve">[unavailable]</source>
            <target xml:space="preserve">[unavailable]</target>
          </segment>
        </unit>
        <unit id="314">
          <segment state="initial" id="314">
            <source xml:space="preserve">MultiSelectDisabled</source>
            <target xml:space="preserve">MultiSelectDisabled</target>
          </segment>
        </unit>
        <unit id="315">
          <segment state="initial" id="315">
            <source xml:space="preserve">[unavailable]</source>
            <target xml:space="preserve">[unavailable]</target>
          </segment>
        </unit>
        <unit id="316">
          <segment state="initial" id="316">
            <source xml:space="preserve">MultiSelectEnabled</source>
            <target xml:space="preserve">MultiSelectEnabled</target>
          </segment>
        </unit>
        <unit id="317">
          <segment state="initial" id="317">
            <source xml:space="preserve">SelectionStates</source>
            <target xml:space="preserve">SelectionStates</target>
          </segment>
        </unit>
        <unit id="318">
          <segment state="initial" id="318">
            <source xml:space="preserve">[unavailable]</source>
            <target xml:space="preserve">[unavailable]</target>
          </segment>
        </unit>
        <unit id="319">
          <segment state="initial" id="319">
            <source xml:space="preserve">Unselecting</source>
            <target xml:space="preserve">Unselecting</target>
          </segment>
        </unit>
        <unit id="320">
          <segment state="initial" id="320">
            <source xml:space="preserve">[unavailable]</source>
            <target xml:space="preserve">[unavailable]</target>
          </segment>
        </unit>
        <unit id="321">
          <segment state="initial" id="321">
            <source xml:space="preserve">Unselected</source>
            <target xml:space="preserve">Unselected</target>
          </segment>
        </unit>
        <unit id="322">
          <segment state="initial" id="322">
            <source xml:space="preserve">[unavailable]</source>
            <target xml:space="preserve">[unavailable]</target>
          </segment>
        </unit>
        <unit id="323">
          <segment state="initial" id="323">
            <source xml:space="preserve">UnselectedPointerOver</source>
            <target xml:space="preserve">UnselectedPointerOver</target>
          </segment>
        </unit>
        <unit id="324">
          <segment state="initial" id="324">
            <source xml:space="preserve">[unavailable]</source>
            <target xml:space="preserve">[unavailable]</target>
          </segment>
        </unit>
        <unit id="325">
          <segment state="initial" id="325">
            <source xml:space="preserve">UnselectedSwiping</source>
            <target xml:space="preserve">UnselectedSwiping</target>
          </segment>
        </unit>
        <unit id="326">
          <segment state="initial" id="326">
            <source xml:space="preserve">[unavailable]</source>
            <target xml:space="preserve">[unavailable]</target>
          </segment>
        </unit>
        <unit id="327">
          <segment state="initial" id="327">
            <source xml:space="preserve">Selecting</source>
            <target xml:space="preserve">Selecting</target>
          </segment>
        </unit>
        <unit id="328">
          <segment state="initial" id="328">
            <source xml:space="preserve">[unavailable]</source>
            <target xml:space="preserve">[unavailable]</target>
          </segment>
        </unit>
        <unit id="329">
          <segment state="initial" id="329">
            <source xml:space="preserve">Selected</source>
            <target xml:space="preserve">Selected</target>
          </segment>
        </unit>
        <unit id="330">
          <segment state="initial" id="330">
            <source xml:space="preserve">[unavailable]</source>
            <target xml:space="preserve">[unavailable]</target>
          </segment>
        </unit>
        <unit id="331">
          <segment state="initial" id="331">
            <source xml:space="preserve">SelectedSwiping</source>
            <target xml:space="preserve">SelectedSwiping</target>
          </segment>
        </unit>
        <unit id="332">
          <segment state="initial" id="332">
            <source xml:space="preserve">[unavailable]</source>
            <target xml:space="preserve">[unavailable]</target>
          </segment>
        </unit>
        <unit id="333">
          <segment state="initial" id="333">
            <source xml:space="preserve">SelectedUnfocused</source>
            <target xml:space="preserve">SelectedUnfocused</target>
          </segment>
        </unit>
        <unit id="334">
          <segment state="initial" id="334">
            <source xml:space="preserve">[unavailable]</source>
            <target xml:space="preserve">[unavailable]</target>
          </segment>
        </unit>
        <unit id="335">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;link&gt;</data>
            <data id="id8">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="335">
            <source xml:space="preserve">If you have a custom <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**ListViewItem**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> or <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**GridViewItem**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc> control template, then review it in light of the above changes.</source>
            <target xml:space="preserve">If you have a custom <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**ListViewItem**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> or <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**GridViewItem**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc> control template, then review it in light of the above changes.</target>
          </segment>
        </unit>
        <unit id="336">
          <segment state="initial" id="336">
            <source xml:space="preserve">We recommend that you start over by editing a copy of the new default template and re-applying your customization to that.</source>
            <target xml:space="preserve">We recommend that you start over by editing a copy of the new default template and re-applying your customization to that.</target>
          </segment>
        </unit>
        <unit id="337">
          <segment state="initial" id="337">
            <source xml:space="preserve">If, for whatever reason, you can't do that and you need to edit your existing template, then here is some general guidance around how you might go about doing that.</source>
            <target xml:space="preserve">If, for whatever reason, you can't do that and you need to edit your existing template, then here is some general guidance around how you might go about doing that.</target>
          </segment>
        </unit>
        <unit id="338">
          <segment state="initial" id="338">
            <source xml:space="preserve">Add the new MultiSelectStates visual state group.</source>
            <target xml:space="preserve">Add the new MultiSelectStates visual state group.</target>
          </segment>
        </unit>
        <unit id="339">
          <segment state="initial" id="339">
            <source xml:space="preserve">Add the new MultiSelectDisabled visual state.</source>
            <target xml:space="preserve">Add the new MultiSelectDisabled visual state.</target>
          </segment>
        </unit>
        <unit id="340">
          <segment state="initial" id="340">
            <source xml:space="preserve">Add the new MultiSelectEnabled visual state.</source>
            <target xml:space="preserve">Add the new MultiSelectEnabled visual state.</target>
          </segment>
        </unit>
        <unit id="341">
          <segment state="initial" id="341">
            <source xml:space="preserve">Add the new DisabledStates visual state group.</source>
            <target xml:space="preserve">Add the new DisabledStates visual state group.</target>
          </segment>
        </unit>
        <unit id="342">
          <segment state="initial" id="342">
            <source xml:space="preserve">Add the new Enabled visual state.</source>
            <target xml:space="preserve">Add the new Enabled visual state.</target>
          </segment>
        </unit>
        <unit id="343">
          <segment state="initial" id="343">
            <source xml:space="preserve">In the CommonStates visual state group, remove the PointerOverPressed visual state.</source>
            <target xml:space="preserve">In the CommonStates visual state group, remove the PointerOverPressed visual state.</target>
          </segment>
        </unit>
        <unit id="344">
          <segment state="initial" id="344">
            <source xml:space="preserve">Move the Disabled visual state to the DisabledStates visual state group.</source>
            <target xml:space="preserve">Move the Disabled visual state to the DisabledStates visual state group.</target>
          </segment>
        </unit>
        <unit id="345">
          <segment state="initial" id="345">
            <source xml:space="preserve">Add the new PointerOverSelected visual state.</source>
            <target xml:space="preserve">Add the new PointerOverSelected visual state.</target>
          </segment>
        </unit>
        <unit id="346">
          <segment state="initial" id="346">
            <source xml:space="preserve">Add the new PressedSelected visual state.</source>
            <target xml:space="preserve">Add the new PressedSelected visual state.</target>
          </segment>
        </unit>
        <unit id="347">
          <segment state="initial" id="347">
            <source xml:space="preserve">Remove the SelectedHintStates visual state group.</source>
            <target xml:space="preserve">Remove the SelectedHintStates visual state group.</target>
          </segment>
        </unit>
        <unit id="348">
          <segment state="initial" id="348">
            <source xml:space="preserve">In the SelectionStates visual state group, move the Selected visual state to the CommonStates visual state group.</source>
            <target xml:space="preserve">In the SelectionStates visual state group, move the Selected visual state to the CommonStates visual state group.</target>
          </segment>
        </unit>
        <unit id="349">
          <segment state="initial" id="349">
            <source xml:space="preserve">Remove the entire SelectionStates visual state group.</source>
            <target xml:space="preserve">Remove the entire SelectionStates visual state group.</target>
          </segment>
        </unit>
        <unit id="350">
          <segment state="initial" id="350">
            <source xml:space="preserve">Localization and globalization</source>
            <target xml:space="preserve">Localization and globalization</target>
          </segment>
        </unit>
        <unit id="351">
          <segment state="initial" id="351">
            <source xml:space="preserve">You can re-use the Resources.resw files from your Universal 8.1 project in your UWP app project.</source>
            <target xml:space="preserve">You can re-use the Resources.resw files from your Universal 8.1 project in your UWP app project.</target>
          </segment>
        </unit>
        <unit id="352">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;strong&gt;</data>
            <data id="id4">&lt;/strong&gt;</data>
            <data id="id5">&lt;strong&gt;</data>
            <data id="id6">&lt;/strong&gt;</data>
            <data id="id7">&lt;strong&gt;</data>
            <data id="id8">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="352">
            <source xml:space="preserve">After copying the file over, add it to the project and set <pc dataRefEnd="id2" dataRefStart="id1" id="2">Build Action</pc> to <pc dataRefEnd="id4" dataRefStart="id3" id="4">PRIResource</pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="6">Copy to Output Directory</pc> to <pc dataRefEnd="id8" dataRefStart="id7" id="8">Do not copy</pc>.</source>
            <target xml:space="preserve">After copying the file over, add it to the project and set <pc dataRefEnd="id2" dataRefStart="id1" id="2">Build Action</pc> to <pc dataRefEnd="id4" dataRefStart="id3" id="4">PRIResource</pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="6">Copy to Output Directory</pc> to <pc dataRefEnd="id8" dataRefStart="id7" id="8">Do not copy</pc>.</target>
          </segment>
        </unit>
        <unit id="353">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="353">
            <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**ResourceContext.QualifierValues**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> topic describes how to load device family-specific resources based on the device family resource selection factor.</source>
            <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**ResourceContext.QualifierValues**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> topic describes how to load device family-specific resources based on the device family resource selection factor.</target>
          </segment>
        </unit>
        <unit id="354">
          <segment state="initial" id="354">
            <source xml:space="preserve">Play To</source>
            <target xml:space="preserve">Play To</target>
          </segment>
        </unit>
        <unit id="355">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;link&gt;</data>
            <data id="id8">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="355">
            <source xml:space="preserve">The APIs in the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**Windows.Media.PlayTo**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> namespace are deprecated for Windows 10 apps in favor of the <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**Windows.Media.Casting**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc> APIs.</source>
            <target xml:space="preserve">The APIs in the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**Windows.Media.PlayTo**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> namespace are deprecated for Windows 10 apps in favor of the <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**Windows.Media.Casting**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc> APIs.</target>
          </segment>
        </unit>
        <unit id="356">
          <segment state="initial" id="356">
            <source xml:space="preserve">Resource keys, and TextBlock style sizes</source>
            <target xml:space="preserve">Resource keys, and TextBlock style sizes</target>
          </segment>
        </unit>
        <unit id="357">
          <segment state="initial" id="357">
            <source xml:space="preserve">The design language has evolved for Windows 10 and consequently certain system styles have changed.</source>
            <target xml:space="preserve">The design language has evolved for Windows 10 and consequently certain system styles have changed.</target>
          </segment>
        </unit>
        <unit id="358">
          <segment state="initial" id="358">
            <source xml:space="preserve">In some cases, you will want to revisit the visual designs of your views so that they are in harmony with the style properties that have changed.</source>
            <target xml:space="preserve">In some cases, you will want to revisit the visual designs of your views so that they are in harmony with the style properties that have changed.</target>
          </segment>
        </unit>
        <unit id="359">
          <segment state="initial" id="359">
            <source xml:space="preserve">In other cases, resource keys are no longer supported.</source>
            <target xml:space="preserve">In other cases, resource keys are no longer supported.</target>
          </segment>
        </unit>
        <unit id="360">
          <segment state="initial" id="360">
            <source xml:space="preserve">The XAML markup editor in Visual Studio highlights references to resource keys that can't be resolved.</source>
            <target xml:space="preserve">The XAML markup editor in Visual Studio highlights references to resource keys that can't be resolved.</target>
          </segment>
        </unit>
        <unit id="361">
          <originalData>
            <data id="id1">&lt;code&gt;</data>
            <data id="id2">&lt;/code&gt;</data>
          </originalData>
          <segment state="initial" id="361">
            <source xml:space="preserve">For example, the XAML markup editor will underline a reference to the style key <pc dataRefEnd="id2" dataRefStart="id1" id="2">ListViewItemTextBlockStyle</pc> with a red squiggle.</source>
            <target xml:space="preserve">For example, the XAML markup editor will underline a reference to the style key <pc dataRefEnd="id2" dataRefStart="id1" id="2">ListViewItemTextBlockStyle</pc> with a red squiggle.</target>
          </segment>
        </unit>
        <unit id="362">
          <segment state="initial" id="362">
            <source xml:space="preserve">If that isn't corrected, then the app will immediately terminate when you try to deploy it to the emulator or device.</source>
            <target xml:space="preserve">If that isn't corrected, then the app will immediately terminate when you try to deploy it to the emulator or device.</target>
          </segment>
        </unit>
        <unit id="363">
          <segment state="initial" id="363">
            <source xml:space="preserve">So, it's important to attend to XAML markup correctness.</source>
            <target xml:space="preserve">So, it's important to attend to XAML markup correctness.</target>
          </segment>
        </unit>
        <unit id="364">
          <segment state="initial" id="364">
            <source xml:space="preserve">And you will find Visual Studio to be a great tool for catching such issues.</source>
            <target xml:space="preserve">And you will find Visual Studio to be a great tool for catching such issues.</target>
          </segment>
        </unit>
        <unit id="365">
          <segment state="initial" id="365">
            <source xml:space="preserve">For keys that are still supported, changes in design language mean that properties set by some styles have changed.</source>
            <target xml:space="preserve">For keys that are still supported, changes in design language mean that properties set by some styles have changed.</target>
          </segment>
        </unit>
        <unit id="366">
          <originalData>
            <data id="id1">&lt;code&gt;</data>
            <data id="id2">&lt;/code&gt;</data>
            <data id="id3">&lt;strong&gt;</data>
            <data id="id4">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="366">
            <source xml:space="preserve">For example, <pc dataRefEnd="id2" dataRefStart="id1" id="2">TitleTextBlockStyle</pc> sets <pc dataRefEnd="id4" dataRefStart="id3" id="4">FontSize</pc> to 14.667px in a Windows Store app and 18.14px in a Windows Phone Store app.</source>
            <target xml:space="preserve">For example, <pc dataRefEnd="id2" dataRefStart="id1" id="2">TitleTextBlockStyle</pc> sets <pc dataRefEnd="id4" dataRefStart="id3" id="4">FontSize</pc> to 14.667px in a Windows Store app and 18.14px in a Windows Phone Store app.</target>
          </segment>
        </unit>
        <unit id="367">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="367">
            <source xml:space="preserve">But, the same style sets <pc dataRefEnd="id2" dataRefStart="id1" id="2">FontSize</pc> to a much larger 24px in a Windows 10 app.</source>
            <target xml:space="preserve">But, the same style sets <pc dataRefEnd="id2" dataRefStart="id1" id="2">FontSize</pc> to a much larger 24px in a Windows 10 app.</target>
          </segment>
        </unit>
        <unit id="368">
          <segment state="initial" id="368">
            <source xml:space="preserve">Review your designs and layouts and use the appropriate styles in the right places.</source>
            <target xml:space="preserve">Review your designs and layouts and use the appropriate styles in the right places.</target>
          </segment>
        </unit>
        <unit id="369">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;link&gt;</data>
            <data id="id8">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="369">
            <source xml:space="preserve">For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Guidelines for fonts</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> and <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">Design UWP apps</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc>.</source>
            <target xml:space="preserve">For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Guidelines for fonts</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> and <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">Design UWP apps</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc>.</target>
          </segment>
        </unit>
        <unit id="370">
          <segment state="initial" id="370">
            <source xml:space="preserve">This is a full list of the keys that are no longer supported.</source>
            <target xml:space="preserve">This is a full list of the keys that are no longer supported.</target>
          </segment>
        </unit>
        <unit id="371">
          <segment state="initial" id="371">
            <source xml:space="preserve">CheckBoxAndRadioButtonMinWidthSize</source>
            <target xml:space="preserve">CheckBoxAndRadioButtonMinWidthSize</target>
          </segment>
        </unit>
        <unit id="372">
          <segment state="initial" id="372">
            <source xml:space="preserve">CheckBoxAndRadioButtonTextPaddingThickness</source>
            <target xml:space="preserve">CheckBoxAndRadioButtonTextPaddingThickness</target>
          </segment>
        </unit>
        <unit id="373">
          <segment state="initial" id="373">
            <source xml:space="preserve">ComboBoxFlyoutListPlaceholderTextOpacity</source>
            <target xml:space="preserve">ComboBoxFlyoutListPlaceholderTextOpacity</target>
          </segment>
        </unit>
        <unit id="374">
          <segment state="initial" id="374">
            <source xml:space="preserve">ComboBoxFlyoutListPlaceholderTextThemeMargin</source>
            <target xml:space="preserve">ComboBoxFlyoutListPlaceholderTextThemeMargin</target>
          </segment>
        </unit>
        <unit id="375">
          <segment state="initial" id="375">
            <source xml:space="preserve">ComboBoxHighlightedBackgroundThemeBrush</source>
            <target xml:space="preserve">ComboBoxHighlightedBackgroundThemeBrush</target>
          </segment>
        </unit>
        <unit id="376">
          <segment state="initial" id="376">
            <source xml:space="preserve">ComboBoxHighlightedBorderThemeBrush</source>
            <target xml:space="preserve">ComboBoxHighlightedBorderThemeBrush</target>
          </segment>
        </unit>
        <unit id="377">
          <segment state="initial" id="377">
            <source xml:space="preserve">ComboBoxHighlightedForegroundThemeBrush</source>
            <target xml:space="preserve">ComboBoxHighlightedForegroundThemeBrush</target>
          </segment>
        </unit>
        <unit id="378">
          <segment state="initial" id="378">
            <source xml:space="preserve">ComboBoxInlinePlaceholderTextForegroundThemeBrush</source>
            <target xml:space="preserve">ComboBoxInlinePlaceholderTextForegroundThemeBrush</target>
          </segment>
        </unit>
        <unit id="379">
          <segment state="initial" id="379">
            <source xml:space="preserve">ComboBoxInlinePlaceholderTextThemeFontWeight</source>
            <target xml:space="preserve">ComboBoxInlinePlaceholderTextThemeFontWeight</target>
          </segment>
        </unit>
        <unit id="380">
          <segment state="initial" id="380">
            <source xml:space="preserve">ComboBoxItemDisabledThemeOpacity</source>
            <target xml:space="preserve">ComboBoxItemDisabledThemeOpacity</target>
          </segment>
        </unit>
        <unit id="381">
          <segment state="initial" id="381">
            <source xml:space="preserve">ComboBoxItemHighContrastBackgroundThemeMargin</source>
            <target xml:space="preserve">ComboBoxItemHighContrastBackgroundThemeMargin</target>
          </segment>
        </unit>
        <unit id="382">
          <segment state="initial" id="382">
            <source xml:space="preserve">ComboBoxItemMinHeightThemeSize</source>
            <target xml:space="preserve">ComboBoxItemMinHeightThemeSize</target>
          </segment>
        </unit>
        <unit id="383">
          <segment state="initial" id="383">
            <source xml:space="preserve">ComboBoxPlaceholderTextBlockStyle</source>
            <target xml:space="preserve">ComboBoxPlaceholderTextBlockStyle</target>
          </segment>
        </unit>
        <unit id="384">
          <segment state="initial" id="384">
            <source xml:space="preserve">ComboBoxPlaceholderTextThemeMargin</source>
            <target xml:space="preserve">ComboBoxPlaceholderTextThemeMargin</target>
          </segment>
        </unit>
        <unit id="385">
          <segment state="initial" id="385">
            <source xml:space="preserve">CommandBarBackgroundThemeBrush</source>
            <target xml:space="preserve">CommandBarBackgroundThemeBrush</target>
          </segment>
        </unit>
        <unit id="386">
          <segment state="initial" id="386">
            <source xml:space="preserve">CommandBarForegroundThemeBrush</source>
            <target xml:space="preserve">CommandBarForegroundThemeBrush</target>
          </segment>
        </unit>
        <unit id="387">
          <segment state="initial" id="387">
            <source xml:space="preserve">ContentDialogButton1HostPadding</source>
            <target xml:space="preserve">ContentDialogButton1HostPadding</target>
          </segment>
        </unit>
        <unit id="388">
          <segment state="initial" id="388">
            <source xml:space="preserve">ContentDialogButton2HostPadding</source>
            <target xml:space="preserve">ContentDialogButton2HostPadding</target>
          </segment>
        </unit>
        <unit id="389">
          <segment state="initial" id="389">
            <source xml:space="preserve">ContentDialogButtonsMinHeight</source>
            <target xml:space="preserve">ContentDialogButtonsMinHeight</target>
          </segment>
        </unit>
        <unit id="390">
          <segment state="initial" id="390">
            <source xml:space="preserve">ContentDialogContentLandscapeWidth</source>
            <target xml:space="preserve">ContentDialogContentLandscapeWidth</target>
          </segment>
        </unit>
        <unit id="391">
          <segment state="initial" id="391">
            <source xml:space="preserve">ContentDialogContentMinHeight</source>
            <target xml:space="preserve">ContentDialogContentMinHeight</target>
          </segment>
        </unit>
        <unit id="392">
          <segment state="initial" id="392">
            <source xml:space="preserve">ContentDialogDimmingColor</source>
            <target xml:space="preserve">ContentDialogDimmingColor</target>
          </segment>
        </unit>
        <unit id="393">
          <segment state="initial" id="393">
            <source xml:space="preserve">ContentDialogTitleMinHeight</source>
            <target xml:space="preserve">ContentDialogTitleMinHeight</target>
          </segment>
        </unit>
        <unit id="394">
          <segment state="initial" id="394">
            <source xml:space="preserve">ControlContextualInfoTextBlockStyle</source>
            <target xml:space="preserve">ControlContextualInfoTextBlockStyle</target>
          </segment>
        </unit>
        <unit id="395">
          <segment state="initial" id="395">
            <source xml:space="preserve">ControlHeaderContentPresenterStyle</source>
            <target xml:space="preserve">ControlHeaderContentPresenterStyle</target>
          </segment>
        </unit>
        <unit id="396">
          <segment state="initial" id="396">
            <source xml:space="preserve">ControlHeaderTextBlockStyle</source>
            <target xml:space="preserve">ControlHeaderTextBlockStyle</target>
          </segment>
        </unit>
        <unit id="397">
          <segment state="initial" id="397">
            <source xml:space="preserve">FlyoutContentPanelLandscapeThemeMargin</source>
            <target xml:space="preserve">FlyoutContentPanelLandscapeThemeMargin</target>
          </segment>
        </unit>
        <unit id="398">
          <segment state="initial" id="398">
            <source xml:space="preserve">FlyoutContentPanelPortraitThemeMargin</source>
            <target xml:space="preserve">FlyoutContentPanelPortraitThemeMargin</target>
          </segment>
        </unit>
        <unit id="399">
          <segment state="initial" id="399">
            <source xml:space="preserve">GrabberMargin</source>
            <target xml:space="preserve">GrabberMargin</target>
          </segment>
        </unit>
        <unit id="400">
          <segment state="initial" id="400">
            <source xml:space="preserve">GridViewItemMargin</source>
            <target xml:space="preserve">GridViewItemMargin</target>
          </segment>
        </unit>
        <unit id="401">
          <segment state="initial" id="401">
            <source xml:space="preserve">GridViewItemPlaceholderBackgroundThemeBrush</source>
            <target xml:space="preserve">GridViewItemPlaceholderBackgroundThemeBrush</target>
          </segment>
        </unit>
        <unit id="402">
          <segment state="initial" id="402">
            <source xml:space="preserve">GroupHeaderTextBlockStyle</source>
            <target xml:space="preserve">GroupHeaderTextBlockStyle</target>
          </segment>
        </unit>
        <unit id="403">
          <segment state="initial" id="403">
            <source xml:space="preserve">HeaderContentPresenterStyle</source>
            <target xml:space="preserve">HeaderContentPresenterStyle</target>
          </segment>
        </unit>
        <unit id="404">
          <segment state="initial" id="404">
            <source xml:space="preserve">HighContrastBlack</source>
            <target xml:space="preserve">HighContrastBlack</target>
          </segment>
        </unit>
        <unit id="405">
          <segment state="initial" id="405">
            <source xml:space="preserve">HighContrastWhite</source>
            <target xml:space="preserve">HighContrastWhite</target>
          </segment>
        </unit>
        <unit id="406">
          <segment state="initial" id="406">
            <source xml:space="preserve">HubHeaderCharacterSpacing</source>
            <target xml:space="preserve">HubHeaderCharacterSpacing</target>
          </segment>
        </unit>
        <unit id="407">
          <segment state="initial" id="407">
            <source xml:space="preserve">HubHeaderFontSize</source>
            <target xml:space="preserve">HubHeaderFontSize</target>
          </segment>
        </unit>
        <unit id="408">
          <segment state="initial" id="408">
            <source xml:space="preserve">HubHeaderMarginThickness</source>
            <target xml:space="preserve">HubHeaderMarginThickness</target>
          </segment>
        </unit>
        <unit id="409">
          <segment state="initial" id="409">
            <source xml:space="preserve">HubSectionHeaderCharacterSpacing</source>
            <target xml:space="preserve">HubSectionHeaderCharacterSpacing</target>
          </segment>
        </unit>
        <unit id="410">
          <segment state="initial" id="410">
            <source xml:space="preserve">HubSectionHeaderFontSize</source>
            <target xml:space="preserve">HubSectionHeaderFontSize</target>
          </segment>
        </unit>
        <unit id="411">
          <segment state="initial" id="411">
            <source xml:space="preserve">HubSectionHeaderMarginThickness</source>
            <target xml:space="preserve">HubSectionHeaderMarginThickness</target>
          </segment>
        </unit>
        <unit id="412">
          <segment state="initial" id="412">
            <source xml:space="preserve">HubSectionMarginThickness</source>
            <target xml:space="preserve">HubSectionMarginThickness</target>
          </segment>
        </unit>
        <unit id="413">
          <segment state="initial" id="413">
            <source xml:space="preserve">InlineWindowPlayPauseMargin</source>
            <target xml:space="preserve">InlineWindowPlayPauseMargin</target>
          </segment>
        </unit>
        <unit id="414">
          <segment state="initial" id="414">
            <source xml:space="preserve">ItemTemplate</source>
            <target xml:space="preserve">ItemTemplate</target>
          </segment>
        </unit>
        <unit id="415">
          <segment state="initial" id="415">
            <source xml:space="preserve">LeftFullWindowMargin</source>
            <target xml:space="preserve">LeftFullWindowMargin</target>
          </segment>
        </unit>
        <unit id="416">
          <segment state="initial" id="416">
            <source xml:space="preserve">LeftMargin</source>
            <target xml:space="preserve">LeftMargin</target>
          </segment>
        </unit>
        <unit id="417">
          <segment state="initial" id="417">
            <source xml:space="preserve">ListViewEmptyStaticTextBlockStyle</source>
            <target xml:space="preserve">ListViewEmptyStaticTextBlockStyle</target>
          </segment>
        </unit>
        <unit id="418">
          <segment state="initial" id="418">
            <source xml:space="preserve">ListViewItemContentTextBlockStyle</source>
            <target xml:space="preserve">ListViewItemContentTextBlockStyle</target>
          </segment>
        </unit>
        <unit id="419">
          <segment state="initial" id="419">
            <source xml:space="preserve">ListViewItemContentTranslateX</source>
            <target xml:space="preserve">ListViewItemContentTranslateX</target>
          </segment>
        </unit>
        <unit id="420">
          <segment state="initial" id="420">
            <source xml:space="preserve">ListViewItemMargin</source>
            <target xml:space="preserve">ListViewItemMargin</target>
          </segment>
        </unit>
        <unit id="421">
          <segment state="initial" id="421">
            <source xml:space="preserve">ListViewItemMultiselectCheckBoxMargin</source>
            <target xml:space="preserve">ListViewItemMultiselectCheckBoxMargin</target>
          </segment>
        </unit>
        <unit id="422">
          <segment state="initial" id="422">
            <source xml:space="preserve">ListViewItemSubheaderTextBlockStyle</source>
            <target xml:space="preserve">ListViewItemSubheaderTextBlockStyle</target>
          </segment>
        </unit>
        <unit id="423">
          <segment state="initial" id="423">
            <source xml:space="preserve">ListViewItemTextBlockStyle</source>
            <target xml:space="preserve">ListViewItemTextBlockStyle</target>
          </segment>
        </unit>
        <unit id="424">
          <segment state="initial" id="424">
            <source xml:space="preserve">MediaControlPanelAudioThemeBrush</source>
            <target xml:space="preserve">MediaControlPanelAudioThemeBrush</target>
          </segment>
        </unit>
        <unit id="425">
          <segment state="initial" id="425">
            <source xml:space="preserve">MediaControlPanelPhoneVideoThemeBrush</source>
            <target xml:space="preserve">MediaControlPanelPhoneVideoThemeBrush</target>
          </segment>
        </unit>
        <unit id="426">
          <segment state="initial" id="426">
            <source xml:space="preserve">MediaControlPanelVideoThemeBrush</source>
            <target xml:space="preserve">MediaControlPanelVideoThemeBrush</target>
          </segment>
        </unit>
        <unit id="427">
          <segment state="initial" id="427">
            <source xml:space="preserve">MediaControlPanelVideoThemeColor</source>
            <target xml:space="preserve">MediaControlPanelVideoThemeColor</target>
          </segment>
        </unit>
        <unit id="428">
          <segment state="initial" id="428">
            <source xml:space="preserve">MediaControlPlayPauseThemeBrush</source>
            <target xml:space="preserve">MediaControlPlayPauseThemeBrush</target>
          </segment>
        </unit>
        <unit id="429">
          <segment state="initial" id="429">
            <source xml:space="preserve">MediaControlTimeRowThemeBrush</source>
            <target xml:space="preserve">MediaControlTimeRowThemeBrush</target>
          </segment>
        </unit>
        <unit id="430">
          <segment state="initial" id="430">
            <source xml:space="preserve">MediaControlTimeRowThemeColor</source>
            <target xml:space="preserve">MediaControlTimeRowThemeColor</target>
          </segment>
        </unit>
        <unit id="431">
          <segment state="initial" id="431">
            <source xml:space="preserve">MediaDownloadProgressIndicatorThemeBrush</source>
            <target xml:space="preserve">MediaDownloadProgressIndicatorThemeBrush</target>
          </segment>
        </unit>
        <unit id="432">
          <segment state="initial" id="432">
            <source xml:space="preserve">MediaErrorBackgroundThemeBrush</source>
            <target xml:space="preserve">MediaErrorBackgroundThemeBrush</target>
          </segment>
        </unit>
        <unit id="433">
          <segment state="initial" id="433">
            <source xml:space="preserve">MediaTextThemeBrush</source>
            <target xml:space="preserve">MediaTextThemeBrush</target>
          </segment>
        </unit>
        <unit id="434">
          <segment state="initial" id="434">
            <source xml:space="preserve">MenuFlyoutBackgroundThemeBrush</source>
            <target xml:space="preserve">MenuFlyoutBackgroundThemeBrush</target>
          </segment>
        </unit>
        <unit id="435">
          <segment state="initial" id="435">
            <source xml:space="preserve">MenuFlyoutBorderThemeBrush</source>
            <target xml:space="preserve">MenuFlyoutBorderThemeBrush</target>
          </segment>
        </unit>
        <unit id="436">
          <segment state="initial" id="436">
            <source xml:space="preserve">MenuFlyoutLandscapeThemePadding</source>
            <target xml:space="preserve">MenuFlyoutLandscapeThemePadding</target>
          </segment>
        </unit>
        <unit id="437">
          <segment state="initial" id="437">
            <source xml:space="preserve">MenuFlyoutLeftLandscapeBorderThemeThickness</source>
            <target xml:space="preserve">MenuFlyoutLeftLandscapeBorderThemeThickness</target>
          </segment>
        </unit>
        <unit id="438">
          <segment state="initial" id="438">
            <source xml:space="preserve">MenuFlyoutPortraitBorderThemeThickness</source>
            <target xml:space="preserve">MenuFlyoutPortraitBorderThemeThickness</target>
          </segment>
        </unit>
        <unit id="439">
          <segment state="initial" id="439">
            <source xml:space="preserve">MenuFlyoutPortraitThemePadding</source>
            <target xml:space="preserve">MenuFlyoutPortraitThemePadding</target>
          </segment>
        </unit>
        <unit id="440">
          <segment state="initial" id="440">
            <source xml:space="preserve">MenuFlyoutRightLandscapeBorderThemeThickness</source>
            <target xml:space="preserve">MenuFlyoutRightLandscapeBorderThemeThickness</target>
          </segment>
        </unit>
        <unit id="441">
          <segment state="initial" id="441">
            <source xml:space="preserve">MessageDialogContentStyle</source>
            <target xml:space="preserve">MessageDialogContentStyle</target>
          </segment>
        </unit>
        <unit id="442">
          <segment state="initial" id="442">
            <source xml:space="preserve">MessageDialogTitleStyle</source>
            <target xml:space="preserve">MessageDialogTitleStyle</target>
          </segment>
        </unit>
        <unit id="443">
          <segment state="initial" id="443">
            <source xml:space="preserve">MinimalWindowMargin</source>
            <target xml:space="preserve">MinimalWindowMargin</target>
          </segment>
        </unit>
        <unit id="444">
          <segment state="initial" id="444">
            <source xml:space="preserve">PasswordBoxCheckBoxThemeMargin</source>
            <target xml:space="preserve">PasswordBoxCheckBoxThemeMargin</target>
          </segment>
        </unit>
        <unit id="445">
          <segment state="initial" id="445">
            <source xml:space="preserve">PhoneAccentBrush</source>
            <target xml:space="preserve">PhoneAccentBrush</target>
          </segment>
        </unit>
        <unit id="446">
          <segment state="initial" id="446">
            <source xml:space="preserve">PhoneBackgroundBrush</source>
            <target xml:space="preserve">PhoneBackgroundBrush</target>
          </segment>
        </unit>
        <unit id="447">
          <segment state="initial" id="447">
            <source xml:space="preserve">PhoneBackgroundColor</source>
            <target xml:space="preserve">PhoneBackgroundColor</target>
          </segment>
        </unit>
        <unit id="448">
          <segment state="initial" id="448">
            <source xml:space="preserve">PhoneBaseBlackColor</source>
            <target xml:space="preserve">PhoneBaseBlackColor</target>
          </segment>
        </unit>
        <unit id="449">
          <segment state="initial" id="449">
            <source xml:space="preserve">PhoneBaseHighColor</source>
            <target xml:space="preserve">PhoneBaseHighColor</target>
          </segment>
        </unit>
        <unit id="450">
          <segment state="initial" id="450">
            <source xml:space="preserve">PhoneBaseLowColor</source>
            <target xml:space="preserve">PhoneBaseLowColor</target>
          </segment>
        </unit>
        <unit id="451">
          <segment state="initial" id="451">
            <source xml:space="preserve">PhoneBaseLowSolidColor</source>
            <target xml:space="preserve">PhoneBaseLowSolidColor</target>
          </segment>
        </unit>
        <unit id="452">
          <segment state="initial" id="452">
            <source xml:space="preserve">PhoneBaseMediumHighColor</source>
            <target xml:space="preserve">PhoneBaseMediumHighColor</target>
          </segment>
        </unit>
        <unit id="453">
          <segment state="initial" id="453">
            <source xml:space="preserve">PhoneBaseMediumMidColor</source>
            <target xml:space="preserve">PhoneBaseMediumMidColor</target>
          </segment>
        </unit>
        <unit id="454">
          <segment state="initial" id="454">
            <source xml:space="preserve">PhoneBaseMediumMidSolidColor</source>
            <target xml:space="preserve">PhoneBaseMediumMidSolidColor</target>
          </segment>
        </unit>
        <unit id="455">
          <segment state="initial" id="455">
            <source xml:space="preserve">PhoneBaseMidColor</source>
            <target xml:space="preserve">PhoneBaseMidColor</target>
          </segment>
        </unit>
        <unit id="456">
          <segment state="initial" id="456">
            <source xml:space="preserve">PhoneBaseWhiteColor</source>
            <target xml:space="preserve">PhoneBaseWhiteColor</target>
          </segment>
        </unit>
        <unit id="457">
          <segment state="initial" id="457">
            <source xml:space="preserve">PhoneBorderThickness</source>
            <target xml:space="preserve">PhoneBorderThickness</target>
          </segment>
        </unit>
        <unit id="458">
          <segment state="initial" id="458">
            <source xml:space="preserve">PhoneButtonBasePressedForegroundBrush</source>
            <target xml:space="preserve">PhoneButtonBasePressedForegroundBrush</target>
          </segment>
        </unit>
        <unit id="459">
          <segment state="initial" id="459">
            <source xml:space="preserve">PhoneButtonContentPadding</source>
            <target xml:space="preserve">PhoneButtonContentPadding</target>
          </segment>
        </unit>
        <unit id="460">
          <segment state="initial" id="460">
            <source xml:space="preserve">PhoneButtonFontWeight</source>
            <target xml:space="preserve">PhoneButtonFontWeight</target>
          </segment>
        </unit>
        <unit id="461">
          <segment state="initial" id="461">
            <source xml:space="preserve">PhoneButtonMinHeight</source>
            <target xml:space="preserve">PhoneButtonMinHeight</target>
          </segment>
        </unit>
        <unit id="462">
          <segment state="initial" id="462">
            <source xml:space="preserve">PhoneButtonMinWidth</source>
            <target xml:space="preserve">PhoneButtonMinWidth</target>
          </segment>
        </unit>
        <unit id="463">
          <segment state="initial" id="463">
            <source xml:space="preserve">PhoneChromeBrush</source>
            <target xml:space="preserve">PhoneChromeBrush</target>
          </segment>
        </unit>
        <unit id="464">
          <segment state="initial" id="464">
            <source xml:space="preserve">PhoneChromeColor</source>
            <target xml:space="preserve">PhoneChromeColor</target>
          </segment>
        </unit>
        <unit id="465">
          <segment state="initial" id="465">
            <source xml:space="preserve">PhoneControlBackgroundColor</source>
            <target xml:space="preserve">PhoneControlBackgroundColor</target>
          </segment>
        </unit>
        <unit id="466">
          <segment state="initial" id="466">
            <source xml:space="preserve">PhoneControlDisabledColor</source>
            <target xml:space="preserve">PhoneControlDisabledColor</target>
          </segment>
        </unit>
        <unit id="467">
          <segment state="initial" id="467">
            <source xml:space="preserve">PhoneControlForegroundColor</source>
            <target xml:space="preserve">PhoneControlForegroundColor</target>
          </segment>
        </unit>
        <unit id="468">
          <segment state="initial" id="468">
            <source xml:space="preserve">PhoneDisabledBrush</source>
            <target xml:space="preserve">PhoneDisabledBrush</target>
          </segment>
        </unit>
        <unit id="469">
          <segment state="initial" id="469">
            <source xml:space="preserve">PhoneDisabledColor</source>
            <target xml:space="preserve">PhoneDisabledColor</target>
          </segment>
        </unit>
        <unit id="470">
          <segment state="initial" id="470">
            <source xml:space="preserve">PhoneFontFamilyLight</source>
            <target xml:space="preserve">PhoneFontFamilyLight</target>
          </segment>
        </unit>
        <unit id="471">
          <segment state="initial" id="471">
            <source xml:space="preserve">PhoneFontFamilySemiBold</source>
            <target xml:space="preserve">PhoneFontFamilySemiBold</target>
          </segment>
        </unit>
        <unit id="472">
          <segment state="initial" id="472">
            <source xml:space="preserve">PhoneForegroundBrush</source>
            <target xml:space="preserve">PhoneForegroundBrush</target>
          </segment>
        </unit>
        <unit id="473">
          <segment state="initial" id="473">
            <source xml:space="preserve">PhoneForegroundColor</source>
            <target xml:space="preserve">PhoneForegroundColor</target>
          </segment>
        </unit>
        <unit id="474">
          <segment state="initial" id="474">
            <source xml:space="preserve">PhoneHighContrastSelectedBackgroundThemeBrush</source>
            <target xml:space="preserve">PhoneHighContrastSelectedBackgroundThemeBrush</target>
          </segment>
        </unit>
        <unit id="475">
          <segment state="initial" id="475">
            <source xml:space="preserve">PhoneHighContrastSelectedForegroundThemeBrush</source>
            <target xml:space="preserve">PhoneHighContrastSelectedForegroundThemeBrush</target>
          </segment>
        </unit>
        <unit id="476">
          <segment state="initial" id="476">
            <source xml:space="preserve">PhoneImagePlaceholderColor</source>
            <target xml:space="preserve">PhoneImagePlaceholderColor</target>
          </segment>
        </unit>
        <unit id="477">
          <segment state="initial" id="477">
            <source xml:space="preserve">PhoneLowBrush</source>
            <target xml:space="preserve">PhoneLowBrush</target>
          </segment>
        </unit>
        <unit id="478">
          <segment state="initial" id="478">
            <source xml:space="preserve">PhoneMidBrush</source>
            <target xml:space="preserve">PhoneMidBrush</target>
          </segment>
        </unit>
        <unit id="479">
          <segment state="initial" id="479">
            <source xml:space="preserve">PhonePageBackgroundColor</source>
            <target xml:space="preserve">PhonePageBackgroundColor</target>
          </segment>
        </unit>
        <unit id="480">
          <segment state="initial" id="480">
            <source xml:space="preserve">PhonePivotLockedTranslation</source>
            <target xml:space="preserve">PhonePivotLockedTranslation</target>
          </segment>
        </unit>
        <unit id="481">
          <segment state="initial" id="481">
            <source xml:space="preserve">PhonePivotUnselectedItemOpacity</source>
            <target xml:space="preserve">PhonePivotUnselectedItemOpacity</target>
          </segment>
        </unit>
        <unit id="482">
          <segment state="initial" id="482">
            <source xml:space="preserve">PhoneRadioCheckBoxBorderBrush</source>
            <target xml:space="preserve">PhoneRadioCheckBoxBorderBrush</target>
          </segment>
        </unit>
        <unit id="483">
          <segment state="initial" id="483">
            <source xml:space="preserve">PhoneRadioCheckBoxBrush</source>
            <target xml:space="preserve">PhoneRadioCheckBoxBrush</target>
          </segment>
        </unit>
        <unit id="484">
          <segment state="initial" id="484">
            <source xml:space="preserve">PhoneRadioCheckBoxCheckBrush</source>
            <target xml:space="preserve">PhoneRadioCheckBoxCheckBrush</target>
          </segment>
        </unit>
        <unit id="485">
          <segment state="initial" id="485">
            <source xml:space="preserve">PhoneRadioCheckBoxPressedBrush</source>
            <target xml:space="preserve">PhoneRadioCheckBoxPressedBrush</target>
          </segment>
        </unit>
        <unit id="486">
          <segment state="initial" id="486">
            <source xml:space="preserve">PhoneStrokeThickness</source>
            <target xml:space="preserve">PhoneStrokeThickness</target>
          </segment>
        </unit>
        <unit id="487">
          <segment state="initial" id="487">
            <source xml:space="preserve">PhoneTextHighColor</source>
            <target xml:space="preserve">PhoneTextHighColor</target>
          </segment>
        </unit>
        <unit id="488">
          <segment state="initial" id="488">
            <source xml:space="preserve">PhoneTextLowColor</source>
            <target xml:space="preserve">PhoneTextLowColor</target>
          </segment>
        </unit>
        <unit id="489">
          <segment state="initial" id="489">
            <source xml:space="preserve">PhoneTextMidColor</source>
            <target xml:space="preserve">PhoneTextMidColor</target>
          </segment>
        </unit>
        <unit id="490">
          <segment state="initial" id="490">
            <source xml:space="preserve">PhoneTextOverAccentColor</source>
            <target xml:space="preserve">PhoneTextOverAccentColor</target>
          </segment>
        </unit>
        <unit id="491">
          <segment state="initial" id="491">
            <source xml:space="preserve">PhoneTouchTargetLargeOverhang</source>
            <target xml:space="preserve">PhoneTouchTargetLargeOverhang</target>
          </segment>
        </unit>
        <unit id="492">
          <segment state="initial" id="492">
            <source xml:space="preserve">PhoneTouchTargetOverhang</source>
            <target xml:space="preserve">PhoneTouchTargetOverhang</target>
          </segment>
        </unit>
        <unit id="493">
          <segment state="initial" id="493">
            <source xml:space="preserve">PivotHeaderItemPadding</source>
            <target xml:space="preserve">PivotHeaderItemPadding</target>
          </segment>
        </unit>
        <unit id="494">
          <segment state="initial" id="494">
            <source xml:space="preserve">PlaceholderContentPresenterStyle</source>
            <target xml:space="preserve">PlaceholderContentPresenterStyle</target>
          </segment>
        </unit>
        <unit id="495">
          <segment state="initial" id="495">
            <source xml:space="preserve">ProgressBarHighContrastAccentBarThemeBrush</source>
            <target xml:space="preserve">ProgressBarHighContrastAccentBarThemeBrush</target>
          </segment>
        </unit>
        <unit id="496">
          <segment state="initial" id="496">
            <source xml:space="preserve">ProgressBarIndeterminateRectagleThemeSize</source>
            <target xml:space="preserve">ProgressBarIndeterminateRectagleThemeSize</target>
          </segment>
        </unit>
        <unit id="497">
          <segment state="initial" id="497">
            <source xml:space="preserve">ProgressBarRectangleStyle</source>
            <target xml:space="preserve">ProgressBarRectangleStyle</target>
          </segment>
        </unit>
        <unit id="498">
          <segment state="initial" id="498">
            <source xml:space="preserve">ProgressRingActiveBackgroundOpacity</source>
            <target xml:space="preserve">ProgressRingActiveBackgroundOpacity</target>
          </segment>
        </unit>
        <unit id="499">
          <segment state="initial" id="499">
            <source xml:space="preserve">ProgressRingElipseThemeMargin</source>
            <target xml:space="preserve">ProgressRingElipseThemeMargin</target>
          </segment>
        </unit>
        <unit id="500">
          <segment state="initial" id="500">
            <source xml:space="preserve">ProgressRingElipseThemeSize</source>
            <target xml:space="preserve">ProgressRingElipseThemeSize</target>
          </segment>
        </unit>
        <unit id="501">
          <segment state="initial" id="501">
            <source xml:space="preserve">ProgressRingTextForegroundThemeBrush</source>
            <target xml:space="preserve">ProgressRingTextForegroundThemeBrush</target>
          </segment>
        </unit>
        <unit id="502">
          <segment state="initial" id="502">
            <source xml:space="preserve">ProgressRingTextThemeMargin</source>
            <target xml:space="preserve">ProgressRingTextThemeMargin</target>
          </segment>
        </unit>
        <unit id="503">
          <segment state="initial" id="503">
            <source xml:space="preserve">ProgressRingThemeSize</source>
            <target xml:space="preserve">ProgressRingThemeSize</target>
          </segment>
        </unit>
        <unit id="504">
          <segment state="initial" id="504">
            <source xml:space="preserve">RichEditBoxTextThemeMargin</source>
            <target xml:space="preserve">RichEditBoxTextThemeMargin</target>
          </segment>
        </unit>
        <unit id="505">
          <segment state="initial" id="505">
            <source xml:space="preserve">RightFullWindowMargin</source>
            <target xml:space="preserve">RightFullWindowMargin</target>
          </segment>
        </unit>
        <unit id="506">
          <segment state="initial" id="506">
            <source xml:space="preserve">RightMargin</source>
            <target xml:space="preserve">RightMargin</target>
          </segment>
        </unit>
        <unit id="507">
          <segment state="initial" id="507">
            <source xml:space="preserve">ScrollBarMinThemeHeight</source>
            <target xml:space="preserve">ScrollBarMinThemeHeight</target>
          </segment>
        </unit>
        <unit id="508">
          <segment state="initial" id="508">
            <source xml:space="preserve">ScrollBarMinThemeWidth</source>
            <target xml:space="preserve">ScrollBarMinThemeWidth</target>
          </segment>
        </unit>
        <unit id="509">
          <segment state="initial" id="509">
            <source xml:space="preserve">ScrollBarPanningThumbThemeHeight</source>
            <target xml:space="preserve">ScrollBarPanningThumbThemeHeight</target>
          </segment>
        </unit>
        <unit id="510">
          <segment state="initial" id="510">
            <source xml:space="preserve">ScrollBarPanningThumbThemeWidth</source>
            <target xml:space="preserve">ScrollBarPanningThumbThemeWidth</target>
          </segment>
        </unit>
        <unit id="511">
          <segment state="initial" id="511">
            <source xml:space="preserve">SliderThumbDisabledBorderThemeBrush</source>
            <target xml:space="preserve">SliderThumbDisabledBorderThemeBrush</target>
          </segment>
        </unit>
        <unit id="512">
          <segment state="initial" id="512">
            <source xml:space="preserve">SliderTrackBorderThemeBrush</source>
            <target xml:space="preserve">SliderTrackBorderThemeBrush</target>
          </segment>
        </unit>
        <unit id="513">
          <segment state="initial" id="513">
            <source xml:space="preserve">SliderTrackDisabledBorderThemeBrush</source>
            <target xml:space="preserve">SliderTrackDisabledBorderThemeBrush</target>
          </segment>
        </unit>
        <unit id="514">
          <segment state="initial" id="514">
            <source xml:space="preserve">TextBoxBackgroundColor</source>
            <target xml:space="preserve">TextBoxBackgroundColor</target>
          </segment>
        </unit>
        <unit id="515">
          <segment state="initial" id="515">
            <source xml:space="preserve">TextBoxBorderColor</source>
            <target xml:space="preserve">TextBoxBorderColor</target>
          </segment>
        </unit>
        <unit id="516">
          <segment state="initial" id="516">
            <source xml:space="preserve">TextBoxDisabledHeaderForegroundThemeBrush</source>
            <target xml:space="preserve">TextBoxDisabledHeaderForegroundThemeBrush</target>
          </segment>
        </unit>
        <unit id="517">
          <segment state="initial" id="517">
            <source xml:space="preserve">TextBoxFocusedBackgroundThemeBrush</source>
            <target xml:space="preserve">TextBoxFocusedBackgroundThemeBrush</target>
          </segment>
        </unit>
        <unit id="518">
          <segment state="initial" id="518">
            <source xml:space="preserve">TextBoxForegroundColor</source>
            <target xml:space="preserve">TextBoxForegroundColor</target>
          </segment>
        </unit>
        <unit id="519">
          <segment state="initial" id="519">
            <source xml:space="preserve">TextBoxPlaceholderColor</source>
            <target xml:space="preserve">TextBoxPlaceholderColor</target>
          </segment>
        </unit>
        <unit id="520">
          <segment state="initial" id="520">
            <source xml:space="preserve">TextControlHeaderMarginThemeThickness</source>
            <target xml:space="preserve">TextControlHeaderMarginThemeThickness</target>
          </segment>
        </unit>
        <unit id="521">
          <segment state="initial" id="521">
            <source xml:space="preserve">TextControlHeaderMinHeightSize</source>
            <target xml:space="preserve">TextControlHeaderMinHeightSize</target>
          </segment>
        </unit>
        <unit id="522">
          <segment state="initial" id="522">
            <source xml:space="preserve">TextStyleExtraExtraLargeFontSize</source>
            <target xml:space="preserve">TextStyleExtraExtraLargeFontSize</target>
          </segment>
        </unit>
        <unit id="523">
          <segment state="initial" id="523">
            <source xml:space="preserve">TextStyleExtraLargePlusFontSize</source>
            <target xml:space="preserve">TextStyleExtraLargePlusFontSize</target>
          </segment>
        </unit>
        <unit id="524">
          <segment state="initial" id="524">
            <source xml:space="preserve">TextStyleMediumFontSize</source>
            <target xml:space="preserve">TextStyleMediumFontSize</target>
          </segment>
        </unit>
        <unit id="525">
          <segment state="initial" id="525">
            <source xml:space="preserve">TextStyleSmallFontSize</source>
            <target xml:space="preserve">TextStyleSmallFontSize</target>
          </segment>
        </unit>
        <unit id="526">
          <segment state="initial" id="526">
            <source xml:space="preserve">TimeRemainingElementMargin</source>
            <target xml:space="preserve">TimeRemainingElementMargin</target>
          </segment>
        </unit>
        <unit id="527">
          <segment state="initial" id="527">
            <source xml:space="preserve">SearchBox deprecated in favor of AutoSuggestBox</source>
            <target xml:space="preserve">SearchBox deprecated in favor of AutoSuggestBox</target>
          </segment>
        </unit>
        <unit id="528">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="528">
            <source xml:space="preserve">Although <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**SearchBox**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> is implemented in the Universal device family, it is not fully functional on mobile devices.</source>
            <target xml:space="preserve">Although <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**SearchBox**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> is implemented in the Universal device family, it is not fully functional on mobile devices.</target>
          </segment>
        </unit>
        <unit id="529">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="529">
            <source xml:space="preserve">Use <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**AutoSuggestBox**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> for your universal search experience.</source>
            <target xml:space="preserve">Use <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**AutoSuggestBox**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> for your universal search experience.</target>
          </segment>
        </unit>
        <unit id="530">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="530">
            <source xml:space="preserve">Here's how you typically implement a search experience with <pc dataRefEnd="id2" dataRefStart="id1" id="2">AutoSuggestBox</pc>.</source>
            <target xml:space="preserve">Here's how you typically implement a search experience with <pc dataRefEnd="id2" dataRefStart="id1" id="2">AutoSuggestBox</pc>.</target>
          </segment>
        </unit>
        <unit id="531">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;strong&gt;</data>
            <data id="id4">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="531">
            <source xml:space="preserve">Once the user starts typing, the <pc dataRefEnd="id2" dataRefStart="id1" id="2">TextChanged</pc> event is raised, with a reason of <pc dataRefEnd="id4" dataRefStart="id3" id="4">UserInput</pc>.</source>
            <target xml:space="preserve">Once the user starts typing, the <pc dataRefEnd="id2" dataRefStart="id1" id="2">TextChanged</pc> event is raised, with a reason of <pc dataRefEnd="id4" dataRefStart="id3" id="4">UserInput</pc>.</target>
          </segment>
        </unit>
        <unit id="532">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;link&gt;</data>
            <data id="id4">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="532">
            <source xml:space="preserve">You then populate the list of suggestions and set the <pc dataRefEnd="id2" dataRefStart="id1" id="2">ItemsSource</pc> of the <pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**AutoSuggestBox**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc>.</source>
            <target xml:space="preserve">You then populate the list of suggestions and set the <pc dataRefEnd="id2" dataRefStart="id1" id="2">ItemsSource</pc> of the <pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**AutoSuggestBox**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc>.</target>
          </segment>
        </unit>
        <unit id="533">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;strong&gt;</data>
            <data id="id4">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="533">
            <source xml:space="preserve">As the user navigates the list, the <pc dataRefEnd="id2" dataRefStart="id1" id="2">SuggestionChosen</pc> event is raised (and if you have set <pc dataRefEnd="id4" dataRefStart="id3" id="4">TextMemberDisplayPath</pc>, the text box is auto-filled with the property specified).</source>
            <target xml:space="preserve">As the user navigates the list, the <pc dataRefEnd="id2" dataRefStart="id1" id="2">SuggestionChosen</pc> event is raised (and if you have set <pc dataRefEnd="id4" dataRefStart="id3" id="4">TextMemberDisplayPath</pc>, the text box is auto-filled with the property specified).</target>
          </segment>
        </unit>
        <unit id="534">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="534">
            <source xml:space="preserve">When the user submits a choice with the Enter key, the <pc dataRefEnd="id2" dataRefStart="id1" id="2">QuerySubmitted</pc> event is raised, at which point you can take action on that suggestion (in this case, most likely navigating to another page with more details on the specified content).</source>
            <target xml:space="preserve">When the user submits a choice with the Enter key, the <pc dataRefEnd="id2" dataRefStart="id1" id="2">QuerySubmitted</pc> event is raised, at which point you can take action on that suggestion (in this case, most likely navigating to another page with more details on the specified content).</target>
          </segment>
        </unit>
        <unit id="535">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;strong&gt;</data>
            <data id="id4">&lt;/strong&gt;</data>
            <data id="id5">&lt;strong&gt;</data>
            <data id="id6">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="535">
            <source xml:space="preserve">Note that the <pc dataRefEnd="id2" dataRefStart="id1" id="2">LinguisticDetails</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="4">Language</pc> properties of <pc dataRefEnd="id6" dataRefStart="id5" id="6">SearchBoxQuerySubmittedEventArgs</pc> are no longer supported (there are equivalent APIs to support that functionality).</source>
            <target xml:space="preserve">Note that the <pc dataRefEnd="id2" dataRefStart="id1" id="2">LinguisticDetails</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="4">Language</pc> properties of <pc dataRefEnd="id6" dataRefStart="id5" id="6">SearchBoxQuerySubmittedEventArgs</pc> are no longer supported (there are equivalent APIs to support that functionality).</target>
          </segment>
        </unit>
        <unit id="536">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="536">
            <source xml:space="preserve">And <pc dataRefEnd="id2" dataRefStart="id1" id="2">KeyModifiers</pc> is no longer supported.</source>
            <target xml:space="preserve">And <pc dataRefEnd="id2" dataRefStart="id1" id="2">KeyModifiers</pc> is no longer supported.</target>
          </segment>
        </unit>
        <unit id="537">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="537">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**AutoSuggestBox**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc> also has support for input method editors (IMEs).</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**AutoSuggestBox**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc> also has support for input method editors (IMEs).</target>
          </segment>
        </unit>
        <unit id="538">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="538">
            <source xml:space="preserve">And, if you want to show a "find" icon, then you can do that too (interacting with the icon will cause the <pc dataRefEnd="id2" dataRefStart="id1" id="2">QuerySubmitted</pc> event to be raised).</source>
            <target xml:space="preserve">And, if you want to show a "find" icon, then you can do that too (interacting with the icon will cause the <pc dataRefEnd="id2" dataRefStart="id1" id="2">QuerySubmitted</pc> event to be raised).</target>
          </segment>
        </unit>
        <unit id="539">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="539">
            <source xml:space="preserve">Also, see <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">AutoSuggestBox porting sample</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>.</source>
            <target xml:space="preserve">Also, see <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">AutoSuggestBox porting sample</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>.</target>
          </segment>
        </unit>
        <unit id="540">
          <segment state="initial" id="540">
            <source xml:space="preserve">SemanticZoom changes</source>
            <target xml:space="preserve">SemanticZoom changes</target>
          </segment>
        </unit>
        <unit id="541">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="541">
            <source xml:space="preserve">The zooming-out gesture for a <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**SemanticZoom**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> has converged on the Windows Phone model, which is to tap or click a group header (so, on desktop computers, the minus button affordance to zoom out is no longer displayed).</source>
            <target xml:space="preserve">The zooming-out gesture for a <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**SemanticZoom**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> has converged on the Windows Phone model, which is to tap or click a group header (so, on desktop computers, the minus button affordance to zoom out is no longer displayed).</target>
          </segment>
        </unit>
        <unit id="542">
          <segment state="initial" id="542">
            <source xml:space="preserve">Now, we get the same, consistent, behavior for free on all devices.</source>
            <target xml:space="preserve">Now, we get the same, consistent, behavior for free on all devices.</target>
          </segment>
        </unit>
        <unit id="543">
          <segment state="initial" id="543">
            <source xml:space="preserve">One cosmetic difference from the Windows Phone model is that the zoomed-out view (the jump list) replaces the zoomed-in view rather than overlaying it.</source>
            <target xml:space="preserve">One cosmetic difference from the Windows Phone model is that the zoomed-out view (the jump list) replaces the zoomed-in view rather than overlaying it.</target>
          </segment>
        </unit>
        <unit id="544">
          <segment state="initial" id="544">
            <source xml:space="preserve">For this reason, you can remove any semi-opaque backgrounds from zoomed-out views.</source>
            <target xml:space="preserve">For this reason, you can remove any semi-opaque backgrounds from zoomed-out views.</target>
          </segment>
        </unit>
        <unit id="545">
          <segment state="initial" id="545">
            <source xml:space="preserve">In a Windows Phone Store app, the zoomed-out view expands to the size of the screen.</source>
            <target xml:space="preserve">In a Windows Phone Store app, the zoomed-out view expands to the size of the screen.</target>
          </segment>
        </unit>
        <unit id="546">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="546">
            <source xml:space="preserve">In a Windows Store app, and in a Windows 10 app, the size of the zoomed-out view is constrained to the bounds of the <pc dataRefEnd="id2" dataRefStart="id1" id="2">SemanticZoom</pc> control.</source>
            <target xml:space="preserve">In a Windows Store app, and in a Windows 10 app, the size of the zoomed-out view is constrained to the bounds of the <pc dataRefEnd="id2" dataRefStart="id1" id="2">SemanticZoom</pc> control.</target>
          </segment>
        </unit>
        <unit id="547">
          <segment state="initial" id="547">
            <source xml:space="preserve">In a Windows Phone Store app, content behind the zoomed-out view (in z-order) shows through if the zoomed-out view has any transparency in its background.</source>
            <target xml:space="preserve">In a Windows Phone Store app, content behind the zoomed-out view (in z-order) shows through if the zoomed-out view has any transparency in its background.</target>
          </segment>
        </unit>
        <unit id="548">
          <segment state="initial" id="548">
            <source xml:space="preserve">In a Windows Store app, and in a Windows 10 app, nothing is visible behind the zoomed out view.</source>
            <target xml:space="preserve">In a Windows Store app, and in a Windows 10 app, nothing is visible behind the zoomed out view.</target>
          </segment>
        </unit>
        <unit id="549">
          <segment state="initial" id="549">
            <source xml:space="preserve">In a Windows Store app, when the app is deactivated and reactivated, the zoomed-out view is dismissed (if it was being shown) and the zoomed-in view is shown instead.</source>
            <target xml:space="preserve">In a Windows Store app, when the app is deactivated and reactivated, the zoomed-out view is dismissed (if it was being shown) and the zoomed-in view is shown instead.</target>
          </segment>
        </unit>
        <unit id="550">
          <segment state="initial" id="550">
            <source xml:space="preserve">In a Windows Phone Store app, and in a Windows 10 app, the zoomed-out view will remain showing if it was being shown.</source>
            <target xml:space="preserve">In a Windows Phone Store app, and in a Windows 10 app, the zoomed-out view will remain showing if it was being shown.</target>
          </segment>
        </unit>
        <unit id="551">
          <segment state="initial" id="551">
            <source xml:space="preserve">In a Windows Phone Store app, and in a Windows 10 app, the zoomed-out view is dismissed when the back button is pressed.</source>
            <target xml:space="preserve">In a Windows Phone Store app, and in a Windows 10 app, the zoomed-out view is dismissed when the back button is pressed.</target>
          </segment>
        </unit>
        <unit id="552">
          <segment state="initial" id="552">
            <source xml:space="preserve">For a Windows Store app, there is no built-in back button processing, so the question doesn't apply.</source>
            <target xml:space="preserve">For a Windows Store app, there is no built-in back button processing, so the question doesn't apply.</target>
          </segment>
        </unit>
        <unit id="553">
          <segment state="initial" id="553">
            <source xml:space="preserve">Settings</source>
            <target xml:space="preserve">Settings</target>
          </segment>
        </unit>
        <unit id="554">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="554">
            <source xml:space="preserve">The Windows Runtime 8.x <pc dataRefEnd="id2" dataRefStart="id1" id="2">SettingsPane</pc> class is not appropriate for Windows 10.</source>
            <target xml:space="preserve">The Windows Runtime 8.x <pc dataRefEnd="id2" dataRefStart="id1" id="2">SettingsPane</pc> class is not appropriate for Windows 10.</target>
          </segment>
        </unit>
        <unit id="555">
          <segment state="initial" id="555">
            <source xml:space="preserve">Instead, in addition to building a Settings page, you should give your users a way to access it from within your app.</source>
            <target xml:space="preserve">Instead, in addition to building a Settings page, you should give your users a way to access it from within your app.</target>
          </segment>
        </unit>
        <unit id="556">
          <segment state="initial" id="556">
            <source xml:space="preserve">We recommend that you expose this app Settings page at the top level, as the last pinned item on your navigation pane, but here are the full set of your options.</source>
            <target xml:space="preserve">We recommend that you expose this app Settings page at the top level, as the last pinned item on your navigation pane, but here are the full set of your options.</target>
          </segment>
        </unit>
        <unit id="557">
          <segment state="initial" id="557">
            <source xml:space="preserve">Navigation pane.</source>
            <target xml:space="preserve">Navigation pane.</target>
          </segment>
        </unit>
        <unit id="558">
          <segment state="initial" id="558">
            <source xml:space="preserve">Settings should be the last item in the navigational list of choices, and pinned to the bottom.</source>
            <target xml:space="preserve">Settings should be the last item in the navigational list of choices, and pinned to the bottom.</target>
          </segment>
        </unit>
        <unit id="559">
          <segment state="initial" id="559">
            <source xml:space="preserve">Appbar/toolbar (within a tabs view or pivot layout).</source>
            <target xml:space="preserve">Appbar/toolbar (within a tabs view or pivot layout).</target>
          </segment>
        </unit>
        <unit id="560">
          <segment state="initial" id="560">
            <source xml:space="preserve">Settings should be the last item in the appbar or toolbar menu flyout.</source>
            <target xml:space="preserve">Settings should be the last item in the appbar or toolbar menu flyout.</target>
          </segment>
        </unit>
        <unit id="561">
          <segment state="initial" id="561">
            <source xml:space="preserve">It is not recommended for Settings to be one of the top-level items within the navigation.</source>
            <target xml:space="preserve">It is not recommended for Settings to be one of the top-level items within the navigation.</target>
          </segment>
        </unit>
        <unit id="562">
          <segment state="initial" id="562">
            <source xml:space="preserve">Hub.</source>
            <target xml:space="preserve">Hub.</target>
          </segment>
        </unit>
        <unit id="563">
          <segment state="initial" id="563">
            <source xml:space="preserve">Settings should be located inside of the menu flyout (could be from the app bar menu or the toolbar menu within the Hub layout).</source>
            <target xml:space="preserve">Settings should be located inside of the menu flyout (could be from the app bar menu or the toolbar menu within the Hub layout).</target>
          </segment>
        </unit>
        <unit id="564">
          <segment state="initial" id="564">
            <source xml:space="preserve">It's also not recommended to bury Settings within a master-detail pane.</source>
            <target xml:space="preserve">It's also not recommended to bury Settings within a master-detail pane.</target>
          </segment>
        </unit>
        <unit id="565">
          <segment state="initial" id="565">
            <source xml:space="preserve">Your Settings page should fill the whole of your app's window, and your Settings page is also where About and Feedback should be.</source>
            <target xml:space="preserve">Your Settings page should fill the whole of your app's window, and your Settings page is also where About and Feedback should be.</target>
          </segment>
        </unit>
        <unit id="566">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="566">
            <source xml:space="preserve">For guidance on the design of your Settings page, see <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Guidelines for app settings</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>.</source>
            <target xml:space="preserve">For guidance on the design of your Settings page, see <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Guidelines for app settings</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>.</target>
          </segment>
        </unit>
        <unit id="567">
          <segment state="initial" id="567">
            <source xml:space="preserve">Text</source>
            <target xml:space="preserve">Text</target>
          </segment>
        </unit>
        <unit id="568">
          <segment state="initial" id="568">
            <source xml:space="preserve">Text (or typography) is an important aspect of a UWP app and, while porting, you may want to revisit the visual designs of your views so that they are in harmony with the new design language.</source>
            <target xml:space="preserve">Text (or typography) is an important aspect of a UWP app and, while porting, you may want to revisit the visual designs of your views so that they are in harmony with the new design language.</target>
          </segment>
        </unit>
        <unit id="569">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="569">
            <source xml:space="preserve">Use these illustrations to find the Universal Windows Platform (UWP) <pc dataRefEnd="id2" dataRefStart="id1" id="2">TextBlock</pc> system styles that are available.</source>
            <target xml:space="preserve">Use these illustrations to find the Universal Windows Platform (UWP) <pc dataRefEnd="id2" dataRefStart="id1" id="2">TextBlock</pc> system styles that are available.</target>
          </segment>
        </unit>
        <unit id="570">
          <segment state="initial" id="570">
            <source xml:space="preserve">Find the ones that correspond to the Windows Phone Silverlight styles you used.</source>
            <target xml:space="preserve">Find the ones that correspond to the Windows Phone Silverlight styles you used.</target>
          </segment>
        </unit>
        <unit id="571">
          <segment state="initial" id="571">
            <source xml:space="preserve">Alternatively, you can create your own universal styles and copy the properties from the Windows Phone Silverlight system styles into those.</source>
            <target xml:space="preserve">Alternatively, you can create your own universal styles and copy the properties from the Windows Phone Silverlight system styles into those.</target>
          </segment>
        </unit>
        <unit id="572">
          <originalData>
            <data id="id1">&lt;linkText&gt;</data>
            <data id="id2">&lt;/linkText&gt;</data>
            <data id="id3">&lt;html&gt;</data>
            <data id="id4">&lt;/html&gt;</data>
          </originalData>
          <segment state="initial" id="572">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">system textblock styles for windows 10 apps</pc> <pc dataRefEnd="id4" dataRefStart="id3" id="3"></pc>System TextBlock styles for Windows 10 apps</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">system textblock styles for windows 10 apps</pc> <pc dataRefEnd="id4" dataRefStart="id3" id="3"></pc>System TextBlock styles for Windows 10 apps</target>
          </segment>
        </unit>
        <unit id="573">
          <segment state="initial" id="573">
            <source xml:space="preserve">In Windows Store apps and Windows Phone Store apps, the default font family is Global User Interface.</source>
            <target xml:space="preserve">In Windows Store apps and Windows Phone Store apps, the default font family is Global User Interface.</target>
          </segment>
        </unit>
        <unit id="574">
          <segment state="initial" id="574">
            <source xml:space="preserve">In a Windows 10 app, the default font family is Segoe UI.</source>
            <target xml:space="preserve">In a Windows 10 app, the default font family is Segoe UI.</target>
          </segment>
        </unit>
        <unit id="575">
          <segment state="initial" id="575">
            <source xml:space="preserve">As a result, font metrics in your app may look different.</source>
            <target xml:space="preserve">As a result, font metrics in your app may look different.</target>
          </segment>
        </unit>
        <unit id="576">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;link&gt;</data>
            <data id="id8">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="576">
            <source xml:space="preserve">If you want to reproduce the look of your 8.1 text, you can set your own metrics using properties such as <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**LineHeight**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> and <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**LineStackingStrategy**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc>.</source>
            <target xml:space="preserve">If you want to reproduce the look of your 8.1 text, you can set your own metrics using properties such as <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**LineHeight**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> and <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**LineStackingStrategy**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc>.</target>
          </segment>
        </unit>
        <unit id="577">
          <segment state="initial" id="577">
            <source xml:space="preserve">In Windows Store apps and Windows Phone Store apps, the default language for text is set to the language of the build, or to en-us.</source>
            <target xml:space="preserve">In Windows Store apps and Windows Phone Store apps, the default language for text is set to the language of the build, or to en-us.</target>
          </segment>
        </unit>
        <unit id="578">
          <segment state="initial" id="578">
            <source xml:space="preserve">In a Windows 10 app, the default language is set to the top app language (font fallback).</source>
            <target xml:space="preserve">In a Windows 10 app, the default language is set to the top app language (font fallback).</target>
          </segment>
        </unit>
        <unit id="579">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="579">
            <source xml:space="preserve">You can set <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**FrameworkElement.Language**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> explicitly, but you will enjoy better font fallback behavior if you do not set a value for that property.</source>
            <target xml:space="preserve">You can set <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**FrameworkElement.Language**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> explicitly, but you will enjoy better font fallback behavior if you do not set a value for that property.</target>
          </segment>
        </unit>
        <unit id="580">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;link&gt;</data>
            <data id="id8">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="580">
            <source xml:space="preserve">For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Guidelines for fonts</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> and <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">Design UWP apps</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc>.</source>
            <target xml:space="preserve">For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Guidelines for fonts</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> and <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">Design UWP apps</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc>.</target>
          </segment>
        </unit>
        <unit id="581">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="581">
            <source xml:space="preserve">Also, see the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Controls</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> section above for changes to text controls.</source>
            <target xml:space="preserve">Also, see the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Controls</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> section above for changes to text controls.</target>
          </segment>
        </unit>
        <unit id="582">
          <segment state="initial" id="582">
            <source xml:space="preserve">Theme changes</source>
            <target xml:space="preserve">Theme changes</target>
          </segment>
        </unit>
        <unit id="583">
          <segment state="initial" id="583">
            <source xml:space="preserve">For a Universal 8.1 app, the default theme is dark by default.</source>
            <target xml:space="preserve">For a Universal 8.1 app, the default theme is dark by default.</target>
          </segment>
        </unit>
        <unit id="584">
          <segment state="initial" id="584">
            <source xml:space="preserve">For Windows 10 devices, the default theme has changed, but you can control the theme used by declaring a requested theme in App.xaml.</source>
            <target xml:space="preserve">For Windows 10 devices, the default theme has changed, but you can control the theme used by declaring a requested theme in App.xaml.</target>
          </segment>
        </unit>
        <unit id="585">
          <originalData>
            <data id="id1">&lt;code&gt;</data>
            <data id="id2">&lt;/code&gt;</data>
          </originalData>
          <segment state="initial" id="585">
            <source xml:space="preserve">For example, to use a dark theme on all devices, add <pc dataRefEnd="id2" dataRefStart="id1" id="2">RequestedTheme="Dark"</pc> to the root Application element.</source>
            <target xml:space="preserve">For example, to use a dark theme on all devices, add <pc dataRefEnd="id2" dataRefStart="id1" id="2">RequestedTheme="Dark"</pc> to the root Application element.</target>
          </segment>
        </unit>
        <unit id="586">
          <segment state="initial" id="586">
            <source xml:space="preserve">Tiles and toasts</source>
            <target xml:space="preserve">Tiles and toasts</target>
          </segment>
        </unit>
        <unit id="587">
          <segment state="initial" id="587">
            <source xml:space="preserve">For tiles and toasts, the templates you're currently using will continue to work in your Windows 10 app.</source>
            <target xml:space="preserve">For tiles and toasts, the templates you're currently using will continue to work in your Windows 10 app.</target>
          </segment>
        </unit>
        <unit id="588">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="588">
            <source xml:space="preserve">But, there are new, adaptive templates available for you to use, and these are described in <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Notifications, tiles, toasts, and badges</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>.</source>
            <target xml:space="preserve">But, there are new, adaptive templates available for you to use, and these are described in <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Notifications, tiles, toasts, and badges</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>.</target>
          </segment>
        </unit>
        <unit id="589">
          <segment state="initial" id="589">
            <source xml:space="preserve">Previously, on desktop computers, a toast notification was a transitory message.</source>
            <target xml:space="preserve">Previously, on desktop computers, a toast notification was a transitory message.</target>
          </segment>
        </unit>
        <unit id="590">
          <segment state="initial" id="590">
            <source xml:space="preserve">It would disappear, and no longer be retrievable, once it was missed or ignored.</source>
            <target xml:space="preserve">It would disappear, and no longer be retrievable, once it was missed or ignored.</target>
          </segment>
        </unit>
        <unit id="591">
          <segment state="initial" id="591">
            <source xml:space="preserve">On Windows Phone, if a toast notification is ignored or temporarily dismissed, it would go into the Action Center.</source>
            <target xml:space="preserve">On Windows Phone, if a toast notification is ignored or temporarily dismissed, it would go into the Action Center.</target>
          </segment>
        </unit>
        <unit id="592">
          <segment state="initial" id="592">
            <source xml:space="preserve">Now, Action Center is no longer limited to the Mobile device family.</source>
            <target xml:space="preserve">Now, Action Center is no longer limited to the Mobile device family.</target>
          </segment>
        </unit>
        <unit id="593">
          <segment state="initial" id="593">
            <source xml:space="preserve">To send a toast notification, there is no longer any need to declare a capability.</source>
            <target xml:space="preserve">To send a toast notification, there is no longer any need to declare a capability.</target>
          </segment>
        </unit>
        <unit id="594">
          <segment state="initial" id="594">
            <source xml:space="preserve">Window size</source>
            <target xml:space="preserve">Window size</target>
          </segment>
        </unit>
        <unit id="595">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="595">
            <source xml:space="preserve">For a Universal 8.1 app, the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**ApplicationView**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> app manifest element is used to declare a minimum window width.</source>
            <target xml:space="preserve">For a Universal 8.1 app, the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**ApplicationView**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> app manifest element is used to declare a minimum window width.</target>
          </segment>
        </unit>
        <unit id="596">
          <segment state="initial" id="596">
            <source xml:space="preserve">In your UWP app, you can specify a minimum size (both width and height) with imperative code.</source>
            <target xml:space="preserve">In your UWP app, you can specify a minimum size (both width and height) with imperative code.</target>
          </segment>
        </unit>
        <unit id="597">
          <segment state="initial" id="597">
            <source xml:space="preserve">The default minimum size is 500x320epx, and that's also the smallest minimum size accepted.</source>
            <target xml:space="preserve">The default minimum size is 500x320epx, and that's also the smallest minimum size accepted.</target>
          </segment>
        </unit>
        <unit id="598">
          <segment state="initial" id="598">
            <source xml:space="preserve">The largest minimum size accepted is 500x500epx.</source>
            <target xml:space="preserve">The largest minimum size accepted is 500x500epx.</target>
          </segment>
        </unit>
        <unit id="599">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="599">
            <source xml:space="preserve">The next topic is <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Porting for I/O, device, and app model</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>.</source>
            <target xml:space="preserve">The next topic is <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Porting for I/O, device, and app model</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>.</target>
          </segment>
        </unit>
      </group>
    </group>
  </file>
</xliff>