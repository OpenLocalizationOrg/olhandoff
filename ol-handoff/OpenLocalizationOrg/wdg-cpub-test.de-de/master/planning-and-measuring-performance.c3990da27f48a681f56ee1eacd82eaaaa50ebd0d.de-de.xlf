<?xml version="1.0" encoding="utf-8"?>
<xliff srcLang="en-us" trgLang="de-de" version="2.0" xmlns="urn:oasis:names:tc:xliff:document:2.0" xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">3d982bde6c957170d32e27786632ae0c4c239794</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <group id="101">
        <unit id="101">
          <segment state="initial" id="101">
            <source xml:space="preserve">Planning for performance</source>
            <target xml:space="preserve">Planning for performance</target>
          </segment>
        </unit>
        <unit id="102">
          <segment state="initial" id="102">
            <source xml:space="preserve">\[ Updated for UWP apps on Windows 10.</source>
            <target xml:space="preserve">\[ Updated for UWP apps on Windows 10.</target>
          </segment>
        </unit>
        <unit id="103">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="103">
            <source xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">archive</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> \]</source>
            <target xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">archive</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> \]</target>
          </segment>
        </unit>
        <unit id="104">
          <segment state="initial" id="104">
            <source xml:space="preserve">Users expect their apps to remain responsive, to feel natural, and not to drain their battery.</source>
            <target xml:space="preserve">Users expect their apps to remain responsive, to feel natural, and not to drain their battery.</target>
          </segment>
        </unit>
        <unit id="105">
          <segment state="initial" id="105">
            <source xml:space="preserve">Technically, performance is a non-functional requirement but treating performance as a feature will help you deliver on your users' expectations.</source>
            <target xml:space="preserve">Technically, performance is a non-functional requirement but treating performance as a feature will help you deliver on your users' expectations.</target>
          </segment>
        </unit>
        <unit id="106">
          <segment state="initial" id="106">
            <source xml:space="preserve">Specifying goals, and measuring, are key factors.</source>
            <target xml:space="preserve">Specifying goals, and measuring, are key factors.</target>
          </segment>
        </unit>
        <unit id="107">
          <segment state="initial" id="107">
            <source xml:space="preserve">Determine what your performance-critical scenarios are; define what good performance mean.</source>
            <target xml:space="preserve">Determine what your performance-critical scenarios are; define what good performance mean.</target>
          </segment>
        </unit>
        <unit id="108">
          <segment state="initial" id="108">
            <source xml:space="preserve">Then measure early and often enough throughout the lifecycle of your project to be confident you'll hit your goals.</source>
            <target xml:space="preserve">Then measure early and often enough throughout the lifecycle of your project to be confident you'll hit your goals.</target>
          </segment>
        </unit>
        <unit id="109">
          <segment state="initial" id="109">
            <source xml:space="preserve">Specifying goals</source>
            <target xml:space="preserve">Specifying goals</target>
          </segment>
        </unit>
        <unit id="110">
          <segment state="initial" id="110">
            <source xml:space="preserve">The user experience is a basic way to define good performance.</source>
            <target xml:space="preserve">The user experience is a basic way to define good performance.</target>
          </segment>
        </unit>
        <unit id="111">
          <segment state="initial" id="111">
            <source xml:space="preserve">An app's startup time can influence a user's perception of its performance.</source>
            <target xml:space="preserve">An app's startup time can influence a user's perception of its performance.</target>
          </segment>
        </unit>
        <unit id="112">
          <segment state="initial" id="112">
            <source xml:space="preserve">A user might consider an app launch time of less than one second to be excellent, less than 5 seconds to be good, and greater than 5 seconds to be poor.</source>
            <target xml:space="preserve">A user might consider an app launch time of less than one second to be excellent, less than 5 seconds to be good, and greater than 5 seconds to be poor.</target>
          </segment>
        </unit>
        <unit id="113">
          <segment state="initial" id="113">
            <source xml:space="preserve">Other metrics have a less obvious impact on user experience, for example memory.</source>
            <target xml:space="preserve">Other metrics have a less obvious impact on user experience, for example memory.</target>
          </segment>
        </unit>
        <unit id="114">
          <segment state="initial" id="114">
            <source xml:space="preserve">The chances of an app being terminated while either suspended or inactive rise with the amount of memory used by the active app.</source>
            <target xml:space="preserve">The chances of an app being terminated while either suspended or inactive rise with the amount of memory used by the active app.</target>
          </segment>
        </unit>
        <unit id="115">
          <segment state="initial" id="115">
            <source xml:space="preserve">It's a general rule that high memory usage degrades the experience for all apps on the system, so having a goal on memory consumption is reasonable.</source>
            <target xml:space="preserve">It's a general rule that high memory usage degrades the experience for all apps on the system, so having a goal on memory consumption is reasonable.</target>
          </segment>
        </unit>
        <unit id="116">
          <segment state="initial" id="116">
            <source xml:space="preserve">Take into consideration the rough size of your app as perceived by users: small, medium, or large.</source>
            <target xml:space="preserve">Take into consideration the rough size of your app as perceived by users: small, medium, or large.</target>
          </segment>
        </unit>
        <unit id="117">
          <segment state="initial" id="117">
            <source xml:space="preserve">Expectations around performance will correlate to this perception.</source>
            <target xml:space="preserve">Expectations around performance will correlate to this perception.</target>
          </segment>
        </unit>
        <unit id="118">
          <segment state="initial" id="118">
            <source xml:space="preserve">For example, you might want a small app that doesn't use a lot of media to consume less than 100MB of memory.</source>
            <target xml:space="preserve">For example, you might want a small app that doesn't use a lot of media to consume less than 100MB of memory.</target>
          </segment>
        </unit>
        <unit id="119">
          <segment state="initial" id="119">
            <source xml:space="preserve">It's better to set an initial goal, and then revise it later, than not to have a goal at all.</source>
            <target xml:space="preserve">It's better to set an initial goal, and then revise it later, than not to have a goal at all.</target>
          </segment>
        </unit>
        <unit id="120">
          <segment state="initial" id="120">
            <source xml:space="preserve">Your app's performance goals should be specific and measurable and they should fall into three categories: how long it takes users, or the app, to complete tasks (time); the rate and continuity with which the app redraws itself in response to user interaction (fluidity); and how well the app conserves system resources, including battery power (efficiency).</source>
            <target xml:space="preserve">Your app's performance goals should be specific and measurable and they should fall into three categories: how long it takes users, or the app, to complete tasks (time); the rate and continuity with which the app redraws itself in response to user interaction (fluidity); and how well the app conserves system resources, including battery power (efficiency).</target>
          </segment>
        </unit>
        <unit id="121">
          <segment state="initial" id="121">
            <source xml:space="preserve">Time</source>
            <target xml:space="preserve">Time</target>
          </segment>
        </unit>
        <unit id="122">
          <originalData>
            <data id="id1">&lt;em&gt;</data>
            <data id="id2">&lt;/em&gt;</data>
          </originalData>
          <segment state="initial" id="122">
            <source xml:space="preserve">Think of the acceptable ranges of elapsed time (<pc dataRefEnd="id2" dataRefStart="id1" id="2">interaction classes</pc>) it takes for users to complete their tasks in your app.</source>
            <target xml:space="preserve">Think of the acceptable ranges of elapsed time (<pc dataRefEnd="id2" dataRefStart="id1" id="2">interaction classes</pc>) it takes for users to complete their tasks in your app.</target>
          </segment>
        </unit>
        <unit id="123">
          <segment state="initial" id="123">
            <source xml:space="preserve">For each interaction class assign a label, a perceived user sentiment, and ideal and maximum durations.</source>
            <target xml:space="preserve">For each interaction class assign a label, a perceived user sentiment, and ideal and maximum durations.</target>
          </segment>
        </unit>
        <unit id="124">
          <segment state="initial" id="124">
            <source xml:space="preserve">Here are some suggestions.</source>
            <target xml:space="preserve">Here are some suggestions.</target>
          </segment>
        </unit>
        <unit id="125">
          <segment state="initial" id="125">
            <source xml:space="preserve">Interaction class label</source>
            <target xml:space="preserve">Interaction class label</target>
          </segment>
        </unit>
        <unit id="126">
          <segment state="initial" id="126">
            <source xml:space="preserve">User perception</source>
            <target xml:space="preserve">User perception</target>
          </segment>
        </unit>
        <unit id="127">
          <segment state="initial" id="127">
            <source xml:space="preserve">Ideal</source>
            <target xml:space="preserve">Ideal</target>
          </segment>
        </unit>
        <unit id="128">
          <segment state="initial" id="128">
            <source xml:space="preserve">Maximum</source>
            <target xml:space="preserve">Maximum</target>
          </segment>
        </unit>
        <unit id="129">
          <segment state="initial" id="129">
            <source xml:space="preserve">Examples</source>
            <target xml:space="preserve">Examples</target>
          </segment>
        </unit>
        <unit id="130">
          <segment state="initial" id="130">
            <source xml:space="preserve">Fast</source>
            <target xml:space="preserve">Fast</target>
          </segment>
        </unit>
        <unit id="131">
          <segment state="initial" id="131">
            <source xml:space="preserve">Minimally noticeable delay</source>
            <target xml:space="preserve">Minimally noticeable delay</target>
          </segment>
        </unit>
        <unit id="132">
          <segment state="initial" id="132">
            <source xml:space="preserve">100 milliseconds</source>
            <target xml:space="preserve">100 milliseconds</target>
          </segment>
        </unit>
        <unit id="133">
          <segment state="initial" id="133">
            <source xml:space="preserve">200 milliseconds</source>
            <target xml:space="preserve">200 milliseconds</target>
          </segment>
        </unit>
        <unit id="134">
          <segment state="initial" id="134">
            <source xml:space="preserve">Bring up the app bar; press a button (first response)</source>
            <target xml:space="preserve">Bring up the app bar; press a button (first response)</target>
          </segment>
        </unit>
        <unit id="135">
          <segment state="initial" id="135">
            <source xml:space="preserve">Typical</source>
            <target xml:space="preserve">Typical</target>
          </segment>
        </unit>
        <unit id="136">
          <segment state="initial" id="136">
            <source xml:space="preserve">Quick, but not fast</source>
            <target xml:space="preserve">Quick, but not fast</target>
          </segment>
        </unit>
        <unit id="137">
          <segment state="initial" id="137">
            <source xml:space="preserve">300 milliseconds</source>
            <target xml:space="preserve">300 milliseconds</target>
          </segment>
        </unit>
        <unit id="138">
          <segment state="initial" id="138">
            <source xml:space="preserve">500 milliseconds</source>
            <target xml:space="preserve">500 milliseconds</target>
          </segment>
        </unit>
        <unit id="139">
          <segment state="initial" id="139">
            <source xml:space="preserve">Resize; semantic zoom</source>
            <target xml:space="preserve">Resize; semantic zoom</target>
          </segment>
        </unit>
        <unit id="140">
          <segment state="initial" id="140">
            <source xml:space="preserve">Responsive</source>
            <target xml:space="preserve">Responsive</target>
          </segment>
        </unit>
        <unit id="141">
          <segment state="initial" id="141">
            <source xml:space="preserve">Not quick, but feels responsive</source>
            <target xml:space="preserve">Not quick, but feels responsive</target>
          </segment>
        </unit>
        <unit id="142">
          <segment state="initial" id="142">
            <source xml:space="preserve">500 milliseconds</source>
            <target xml:space="preserve">500 milliseconds</target>
          </segment>
        </unit>
        <unit id="143">
          <segment state="initial" id="143">
            <source xml:space="preserve">1 second</source>
            <target xml:space="preserve">1 second</target>
          </segment>
        </unit>
        <unit id="144">
          <segment state="initial" id="144">
            <source xml:space="preserve">Navigate to a different page; resume the app from a suspended state</source>
            <target xml:space="preserve">Navigate to a different page; resume the app from a suspended state</target>
          </segment>
        </unit>
        <unit id="145">
          <segment state="initial" id="145">
            <source xml:space="preserve">Launch</source>
            <target xml:space="preserve">Launch</target>
          </segment>
        </unit>
        <unit id="146">
          <segment state="initial" id="146">
            <source xml:space="preserve">Competitive experience</source>
            <target xml:space="preserve">Competitive experience</target>
          </segment>
        </unit>
        <unit id="147">
          <segment state="initial" id="147">
            <source xml:space="preserve">1 second</source>
            <target xml:space="preserve">1 second</target>
          </segment>
        </unit>
        <unit id="148">
          <segment state="initial" id="148">
            <source xml:space="preserve">3 seconds</source>
            <target xml:space="preserve">3 seconds</target>
          </segment>
        </unit>
        <unit id="149">
          <segment state="initial" id="149">
            <source xml:space="preserve">Launch the app for the first time or after it has been previously terminated</source>
            <target xml:space="preserve">Launch the app for the first time or after it has been previously terminated</target>
          </segment>
        </unit>
        <unit id="150">
          <segment state="initial" id="150">
            <source xml:space="preserve">Continuous</source>
            <target xml:space="preserve">Continuous</target>
          </segment>
        </unit>
        <unit id="151">
          <segment state="initial" id="151">
            <source xml:space="preserve">No longer feels responsive</source>
            <target xml:space="preserve">No longer feels responsive</target>
          </segment>
        </unit>
        <unit id="152">
          <segment state="initial" id="152">
            <source xml:space="preserve">500 milliseconds</source>
            <target xml:space="preserve">500 milliseconds</target>
          </segment>
        </unit>
        <unit id="153">
          <segment state="initial" id="153">
            <source xml:space="preserve">5 seconds</source>
            <target xml:space="preserve">5 seconds</target>
          </segment>
        </unit>
        <unit id="154">
          <segment state="initial" id="154">
            <source xml:space="preserve">Download a file from the Internet</source>
            <target xml:space="preserve">Download a file from the Internet</target>
          </segment>
        </unit>
        <unit id="155">
          <segment state="initial" id="155">
            <source xml:space="preserve">Captive</source>
            <target xml:space="preserve">Captive</target>
          </segment>
        </unit>
        <unit id="156">
          <segment state="initial" id="156">
            <source xml:space="preserve">Long; user could switch away</source>
            <target xml:space="preserve">Long; user could switch away</target>
          </segment>
        </unit>
        <unit id="157">
          <segment state="initial" id="157">
            <source xml:space="preserve">500 milliseconds</source>
            <target xml:space="preserve">500 milliseconds</target>
          </segment>
        </unit>
        <unit id="158">
          <segment state="initial" id="158">
            <source xml:space="preserve">10 seconds</source>
            <target xml:space="preserve">10 seconds</target>
          </segment>
        </unit>
        <unit id="159">
          <segment state="initial" id="159">
            <source xml:space="preserve">Install multiple apps from the Store</source>
            <target xml:space="preserve">Install multiple apps from the Store</target>
          </segment>
        </unit>
        <unit id="160">
          <segment state="initial" id="160">
            <source xml:space="preserve">You can now assign interaction classes to your app's performance scenarios.</source>
            <target xml:space="preserve">You can now assign interaction classes to your app's performance scenarios.</target>
          </segment>
        </unit>
        <unit id="161">
          <segment state="initial" id="161">
            <source xml:space="preserve">You can assign the app's point-in-time reference, a portion of the user experience, and an interaction class to each scenario.</source>
            <target xml:space="preserve">You can assign the app's point-in-time reference, a portion of the user experience, and an interaction class to each scenario.</target>
          </segment>
        </unit>
        <unit id="162">
          <segment state="initial" id="162">
            <source xml:space="preserve">Here are some suggestions for an example food and dining app.</source>
            <target xml:space="preserve">Here are some suggestions for an example food and dining app.</target>
          </segment>
        </unit>
        <unit id="163">
          <segment state="initial" id="163">
            <source xml:space="preserve">Scenario</source>
            <target xml:space="preserve">Scenario</target>
          </segment>
        </unit>
        <unit id="164">
          <segment state="initial" id="164">
            <source xml:space="preserve">Time point</source>
            <target xml:space="preserve">Time point</target>
          </segment>
        </unit>
        <unit id="165">
          <segment state="initial" id="165">
            <source xml:space="preserve">User experience</source>
            <target xml:space="preserve">User experience</target>
          </segment>
        </unit>
        <unit id="166">
          <segment state="initial" id="166">
            <source xml:space="preserve">Interaction class</source>
            <target xml:space="preserve">Interaction class</target>
          </segment>
        </unit>
        <unit id="167">
          <segment state="initial" id="167">
            <source xml:space="preserve">Navigate to recipe page </source>
            <target xml:space="preserve">Navigate to recipe page </target>
          </segment>
        </unit>
        <unit id="168">
          <segment state="initial" id="168">
            <source xml:space="preserve">First response</source>
            <target xml:space="preserve">First response</target>
          </segment>
        </unit>
        <unit id="169">
          <segment state="initial" id="169">
            <source xml:space="preserve">Page transition animation started</source>
            <target xml:space="preserve">Page transition animation started</target>
          </segment>
        </unit>
        <unit id="170">
          <segment state="initial" id="170">
            <source xml:space="preserve">Fast (100-200 milliseconds)</source>
            <target xml:space="preserve">Fast (100-200 milliseconds)</target>
          </segment>
        </unit>
        <unit id="171">
          <segment state="initial" id="171">
            <source xml:space="preserve">Responsive</source>
            <target xml:space="preserve">Responsive</target>
          </segment>
        </unit>
        <unit id="172">
          <segment state="initial" id="172">
            <source xml:space="preserve">Ingredients list loaded; no images</source>
            <target xml:space="preserve">Ingredients list loaded; no images</target>
          </segment>
        </unit>
        <unit id="173">
          <segment state="initial" id="173">
            <source xml:space="preserve">Responsive (500 milliseconds - 1 second)</source>
            <target xml:space="preserve">Responsive (500 milliseconds - 1 second)</target>
          </segment>
        </unit>
        <unit id="174">
          <segment state="initial" id="174">
            <source xml:space="preserve">Visible complete</source>
            <target xml:space="preserve">Visible complete</target>
          </segment>
        </unit>
        <unit id="175">
          <segment state="initial" id="175">
            <source xml:space="preserve">All content loaded; images shown</source>
            <target xml:space="preserve">All content loaded; images shown</target>
          </segment>
        </unit>
        <unit id="176">
          <segment state="initial" id="176">
            <source xml:space="preserve">Continuous (500 milliseconds - 5 seconds)</source>
            <target xml:space="preserve">Continuous (500 milliseconds - 5 seconds)</target>
          </segment>
        </unit>
        <unit id="177">
          <segment state="initial" id="177">
            <source xml:space="preserve">Search for recipe</source>
            <target xml:space="preserve">Search for recipe</target>
          </segment>
        </unit>
        <unit id="178">
          <segment state="initial" id="178">
            <source xml:space="preserve">First response</source>
            <target xml:space="preserve">First response</target>
          </segment>
        </unit>
        <unit id="179">
          <segment state="initial" id="179">
            <source xml:space="preserve">Search button clicked</source>
            <target xml:space="preserve">Search button clicked</target>
          </segment>
        </unit>
        <unit id="180">
          <segment state="initial" id="180">
            <source xml:space="preserve">Fast (100 - 200 milliseconds)</source>
            <target xml:space="preserve">Fast (100 - 200 milliseconds)</target>
          </segment>
        </unit>
        <unit id="181">
          <segment state="initial" id="181">
            <source xml:space="preserve">Visible complete</source>
            <target xml:space="preserve">Visible complete</target>
          </segment>
        </unit>
        <unit id="182">
          <segment state="initial" id="182">
            <source xml:space="preserve">List of local recipe titles shown</source>
            <target xml:space="preserve">List of local recipe titles shown</target>
          </segment>
        </unit>
        <unit id="183">
          <segment state="initial" id="183">
            <source xml:space="preserve">Typical (300 - 500 milliseconds)</source>
            <target xml:space="preserve">Typical (300 - 500 milliseconds)</target>
          </segment>
        </unit>
        <unit id="184">
          <segment state="initial" id="184">
            <source xml:space="preserve">If you're displaying live content then also consider content freshness goals.</source>
            <target xml:space="preserve">If you're displaying live content then also consider content freshness goals.</target>
          </segment>
        </unit>
        <unit id="185">
          <segment state="initial" id="185">
            <source xml:space="preserve">Is the goal to refresh content every few seconds?</source>
            <target xml:space="preserve">Is the goal to refresh content every few seconds?</target>
          </segment>
        </unit>
        <unit id="186">
          <segment state="initial" id="186">
            <source xml:space="preserve">Or is refreshing content every few minutes, every few hours, or even once a day an acceptable user experience?</source>
            <target xml:space="preserve">Or is refreshing content every few minutes, every few hours, or even once a day an acceptable user experience?</target>
          </segment>
        </unit>
        <unit id="187">
          <segment state="initial" id="187">
            <source xml:space="preserve">With your goals specified, you are now better able to test, analyze, and optimize your app.</source>
            <target xml:space="preserve">With your goals specified, you are now better able to test, analyze, and optimize your app.</target>
          </segment>
        </unit>
        <unit id="188">
          <segment state="initial" id="188">
            <source xml:space="preserve">Fluidity</source>
            <target xml:space="preserve">Fluidity</target>
          </segment>
        </unit>
        <unit id="189">
          <segment state="initial" id="189">
            <source xml:space="preserve">Specific measurable fluidity goals for your app might include:</source>
            <target xml:space="preserve">Specific measurable fluidity goals for your app might include:</target>
          </segment>
        </unit>
        <unit id="190">
          <segment state="initial" id="190">
            <source xml:space="preserve">No screen redraw stops-and-starts (glitches).</source>
            <target xml:space="preserve">No screen redraw stops-and-starts (glitches).</target>
          </segment>
        </unit>
        <unit id="191">
          <segment state="initial" id="191">
            <source xml:space="preserve">Animations render at 60 frames per second (FPS).</source>
            <target xml:space="preserve">Animations render at 60 frames per second (FPS).</target>
          </segment>
        </unit>
        <unit id="192">
          <segment state="initial" id="192">
            <source xml:space="preserve">When a user pans/scrolls, the app presents 3-6 pages of content per second.</source>
            <target xml:space="preserve">When a user pans/scrolls, the app presents 3-6 pages of content per second.</target>
          </segment>
        </unit>
        <unit id="193">
          <segment state="initial" id="193">
            <source xml:space="preserve">Efficiency</source>
            <target xml:space="preserve">Efficiency</target>
          </segment>
        </unit>
        <unit id="194">
          <segment state="initial" id="194">
            <source xml:space="preserve">Specific measurable efficiency goals for your app might include:</source>
            <target xml:space="preserve">Specific measurable efficiency goals for your app might include:</target>
          </segment>
        </unit>
        <unit id="195">
          <originalData>
            <data id="id1">&lt;em&gt;</data>
            <data id="id2">&lt;/em&gt;</data>
            <data id="id3">&lt;em&gt;</data>
            <data id="id4">&lt;/em&gt;</data>
          </originalData>
          <segment state="initial" id="195">
            <source xml:space="preserve">For your app's process, CPU percentage is at or below <pc dataRefEnd="id2" dataRefStart="id1" id="2">N</pc> and memory usage in MB is at or below <pc dataRefEnd="id4" dataRefStart="id3" id="4">M</pc> at all times.</source>
            <target xml:space="preserve">For your app's process, CPU percentage is at or below <pc dataRefEnd="id2" dataRefStart="id1" id="2">N</pc> and memory usage in MB is at or below <pc dataRefEnd="id4" dataRefStart="id3" id="4">M</pc> at all times.</target>
          </segment>
        </unit>
        <unit id="196">
          <originalData>
            <data id="id1">&lt;em&gt;</data>
            <data id="id2">&lt;/em&gt;</data>
            <data id="id3">&lt;em&gt;</data>
            <data id="id4">&lt;/em&gt;</data>
          </originalData>
          <segment state="initial" id="196">
            <source xml:space="preserve">When the app is inactive, <pc dataRefEnd="id2" dataRefStart="id1" id="2">N</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="4">M</pc> are zero for your app's process.</source>
            <target xml:space="preserve">When the app is inactive, <pc dataRefEnd="id2" dataRefStart="id1" id="2">N</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="4">M</pc> are zero for your app's process.</target>
          </segment>
        </unit>
        <unit id="197">
          <originalData>
            <data id="id1">&lt;em&gt;</data>
            <data id="id2">&lt;/em&gt;</data>
            <data id="id3">&lt;em&gt;</data>
            <data id="id4">&lt;/em&gt;</data>
          </originalData>
          <segment state="initial" id="197">
            <source xml:space="preserve">Your app can be used actively for <pc dataRefEnd="id2" dataRefStart="id1" id="2">X</pc> hours on battery power; when your app is inactive, the device retains its charge for <pc dataRefEnd="id4" dataRefStart="id3" id="4">Y</pc> hours.</source>
            <target xml:space="preserve">Your app can be used actively for <pc dataRefEnd="id2" dataRefStart="id1" id="2">X</pc> hours on battery power; when your app is inactive, the device retains its charge for <pc dataRefEnd="id4" dataRefStart="id3" id="4">Y</pc> hours.</target>
          </segment>
        </unit>
        <unit id="198">
          <segment state="initial" id="198">
            <source xml:space="preserve">Design your app for performance</source>
            <target xml:space="preserve">Design your app for performance</target>
          </segment>
        </unit>
        <unit id="199">
          <segment state="initial" id="199">
            <source xml:space="preserve">You can now use your performance goals to influence your app's design.</source>
            <target xml:space="preserve">You can now use your performance goals to influence your app's design.</target>
          </segment>
        </unit>
        <unit id="200">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="200">
            <source xml:space="preserve">Using the example food and dining app, after the user navigates to the recipe page, you might choose to <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">update items incrementally</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> so that the recipe's name is rendered first, displaying the ingredients is deferred, and displaying images is deferred further.</source>
            <target xml:space="preserve">Using the example food and dining app, after the user navigates to the recipe page, you might choose to <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">update items incrementally</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> so that the recipe's name is rendered first, displaying the ingredients is deferred, and displaying images is deferred further.</target>
          </segment>
        </unit>
        <unit id="201">
          <segment state="initial" id="201">
            <source xml:space="preserve">This maintains responsiveness and a fluid UI while panning/scrolling, with the full fidelity rendering taking place after the interaction slows to a pace that allow the UI thread to catch up.</source>
            <target xml:space="preserve">This maintains responsiveness and a fluid UI while panning/scrolling, with the full fidelity rendering taking place after the interaction slows to a pace that allow the UI thread to catch up.</target>
          </segment>
        </unit>
        <unit id="202">
          <segment state="initial" id="202">
            <source xml:space="preserve">Here are some other aspects to consider.</source>
            <target xml:space="preserve">Here are some other aspects to consider.</target>
          </segment>
        </unit>
        <unit id="203">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="203">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">UI</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">UI</pc>
						</target>
          </segment>
        </unit>
        <unit id="204">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="204">
            <source xml:space="preserve">Maximize parse and load time and memory efficiency for each page of your app's UI (especially the initial page) by <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">optimizing your XAML markup</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>.</source>
            <target xml:space="preserve">Maximize parse and load time and memory efficiency for each page of your app's UI (especially the initial page) by <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">optimizing your XAML markup</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>.</target>
          </segment>
        </unit>
        <unit id="205">
          <segment state="initial" id="205">
            <source xml:space="preserve">In a nutshell, defer loading UI and code until it's needed.</source>
            <target xml:space="preserve">In a nutshell, defer loading UI and code until it's needed.</target>
          </segment>
        </unit>
        <unit id="206">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;link&gt;</data>
            <data id="id8">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id13">&lt;link&gt;</data>
            <data id="id14">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="206">
            <source xml:space="preserve">For <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**ListView**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> and <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**GridView**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc>, make all the items the same size and use as many <pc dataRefEnd="id14" dataRefStart="id13" id="6CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="6CapsExtId2">ListView and GridView optimization techniques</pc><pc dataRefEnd="id6" dataRefStart="id5" id="6CapsExtId3"></pc></pc> as you can.</source>
            <target xml:space="preserve">For <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**ListView**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> and <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**GridView**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc>, make all the items the same size and use as many <pc dataRefEnd="id14" dataRefStart="id13" id="6CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="6CapsExtId2">ListView and GridView optimization techniques</pc><pc dataRefEnd="id6" dataRefStart="id5" id="6CapsExtId3"></pc></pc> as you can.</target>
          </segment>
        </unit>
        <unit id="207">
          <segment state="initial" id="207">
            <source xml:space="preserve">Declare UI in the form of markup, which the framework can load and re-use in chunks, rather than constructing it imperatively in code.</source>
            <target xml:space="preserve">Declare UI in the form of markup, which the framework can load and re-use in chunks, rather than constructing it imperatively in code.</target>
          </segment>
        </unit>
        <unit id="208">
          <segment state="initial" id="208">
            <source xml:space="preserve">Collapse UI elements until the user needs them.</source>
            <target xml:space="preserve">Collapse UI elements until the user needs them.</target>
          </segment>
        </unit>
        <unit id="209">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="209">
            <source xml:space="preserve">See the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**Visibility**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> property.</source>
            <target xml:space="preserve">See the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**Visibility**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> property.</target>
          </segment>
        </unit>
        <unit id="210">
          <segment state="initial" id="210">
            <source xml:space="preserve">Prefer theme transitions and animations to storyboarded animations.</source>
            <target xml:space="preserve">Prefer theme transitions and animations to storyboarded animations.</target>
          </segment>
        </unit>
        <unit id="211">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="211">
            <source xml:space="preserve">For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Animations overview</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>.</source>
            <target xml:space="preserve">For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Animations overview</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>.</target>
          </segment>
        </unit>
        <unit id="212">
          <segment state="initial" id="212">
            <source xml:space="preserve">Remember that storyboarded animations require constant updates to the screen, and keep the CPU and graphics pipeline active.</source>
            <target xml:space="preserve">Remember that storyboarded animations require constant updates to the screen, and keep the CPU and graphics pipeline active.</target>
          </segment>
        </unit>
        <unit id="213">
          <segment state="initial" id="213">
            <source xml:space="preserve">To preserve the battery, don't have animations running if the user is not interacting with the app.</source>
            <target xml:space="preserve">To preserve the battery, don't have animations running if the user is not interacting with the app.</target>
          </segment>
        </unit>
        <unit id="214">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="214">
            <source xml:space="preserve">Images you load should be loaded at a size that is appropriate for the view in which you are presenting it, using the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**GetThumbnailAsync**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> method.</source>
            <target xml:space="preserve">Images you load should be loaded at a size that is appropriate for the view in which you are presenting it, using the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**GetThumbnailAsync**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> method.</target>
          </segment>
        </unit>
        <unit id="215">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="215">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">CPU, memory, and power</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">CPU, memory, and power</pc>
						</target>
          </segment>
        </unit>
        <unit id="216">
          <segment state="initial" id="216">
            <source xml:space="preserve">Schedule lower-priority work to run on lower-priority threads and/or cores.</source>
            <target xml:space="preserve">Schedule lower-priority work to run on lower-priority threads and/or cores.</target>
          </segment>
        </unit>
        <unit id="217">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;link&gt;</data>
            <data id="id8">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id13">&lt;link&gt;</data>
            <data id="id14">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="217">
            <source xml:space="preserve">See <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Asynchronous programming</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>, the <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**Dispatcher**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc> property, and the <pc dataRefEnd="id14" dataRefStart="id13" id="6CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="6CapsExtId2">**CoreDispatcher**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="6CapsExtId3"></pc></pc> class.</source>
            <target xml:space="preserve">See <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Asynchronous programming</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>, the <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**Dispatcher**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc> property, and the <pc dataRefEnd="id14" dataRefStart="id13" id="6CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="6CapsExtId2">**CoreDispatcher**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="6CapsExtId3"></pc></pc> class.</target>
          </segment>
        </unit>
        <unit id="218">
          <segment state="initial" id="218">
            <source xml:space="preserve">Minimize your app's memory footprint by releasing expensive resources (such as media) on suspend.</source>
            <target xml:space="preserve">Minimize your app's memory footprint by releasing expensive resources (such as media) on suspend.</target>
          </segment>
        </unit>
        <unit id="219">
          <segment state="initial" id="219">
            <source xml:space="preserve">Minimize your code's working set.</source>
            <target xml:space="preserve">Minimize your code's working set.</target>
          </segment>
        </unit>
        <unit id="220">
          <segment state="initial" id="220">
            <source xml:space="preserve">Avoid memory leaks by unregistering event handlers and dereferencing UI elements whenever possible.</source>
            <target xml:space="preserve">Avoid memory leaks by unregistering event handlers and dereferencing UI elements whenever possible.</target>
          </segment>
        </unit>
        <unit id="221">
          <segment state="initial" id="221">
            <source xml:space="preserve">For the sake of the battery, be conservative with how often you poll for data, query a sensor, or schedule work on the CPU when it is idle.</source>
            <target xml:space="preserve">For the sake of the battery, be conservative with how often you poll for data, query a sensor, or schedule work on the CPU when it is idle.</target>
          </segment>
        </unit>
        <unit id="222">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="222">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Data access</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Data access</pc>
						</target>
          </segment>
        </unit>
        <unit id="223">
          <segment state="initial" id="223">
            <source xml:space="preserve">If possible, prefetch content.</source>
            <target xml:space="preserve">If possible, prefetch content.</target>
          </segment>
        </unit>
        <unit id="224">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="224">
            <source xml:space="preserve">For automatic prefetching, see the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**ContentPrefetcher**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> class.</source>
            <target xml:space="preserve">For automatic prefetching, see the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**ContentPrefetcher**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> class.</target>
          </segment>
        </unit>
        <unit id="225">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;link&gt;</data>
            <data id="id8">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="225">
            <source xml:space="preserve">For manual prefetching, see the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**Windows.ApplicationModel.Background**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> namespace and the <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**MaintenanceTrigger**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc> class.</source>
            <target xml:space="preserve">For manual prefetching, see the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**Windows.ApplicationModel.Background**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> namespace and the <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**MaintenanceTrigger**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc> class.</target>
          </segment>
        </unit>
        <unit id="226">
          <segment state="initial" id="226">
            <source xml:space="preserve">If possible, cache content that's expensive to access.</source>
            <target xml:space="preserve">If possible, cache content that's expensive to access.</target>
          </segment>
        </unit>
        <unit id="227">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;link&gt;</data>
            <data id="id8">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="227">
            <source xml:space="preserve">See the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**LocalFolder**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> and <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**LocalSettings**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc> properties.</source>
            <target xml:space="preserve">See the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**LocalFolder**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> and <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**LocalSettings**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc> properties.</target>
          </segment>
        </unit>
        <unit id="228">
          <segment state="initial" id="228">
            <source xml:space="preserve">For cache misses, show a placeholder UI as quickly as possible that indicates that the app is still loading content.</source>
            <target xml:space="preserve">For cache misses, show a placeholder UI as quickly as possible that indicates that the app is still loading content.</target>
          </segment>
        </unit>
        <unit id="229">
          <segment state="initial" id="229">
            <source xml:space="preserve">Transition from placeholder to live content in a way that is not jarring to the user.</source>
            <target xml:space="preserve">Transition from placeholder to live content in a way that is not jarring to the user.</target>
          </segment>
        </unit>
        <unit id="230">
          <segment state="initial" id="230">
            <source xml:space="preserve">For example, don't change the position of content under the user's finger or mouse pointer as the app loads live content.</source>
            <target xml:space="preserve">For example, don't change the position of content under the user's finger or mouse pointer as the app loads live content.</target>
          </segment>
        </unit>
        <unit id="231">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="231">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">App launch and resume</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">App launch and resume</pc>
						</target>
          </segment>
        </unit>
        <unit id="232">
          <segment state="initial" id="232">
            <source xml:space="preserve">Defer the app's splash screen, and don't extend the app's splash screen unless necessary.</source>
            <target xml:space="preserve">Defer the app's splash screen, and don't extend the app's splash screen unless necessary.</target>
          </segment>
        </unit>
        <unit id="233">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;link&gt;</data>
            <data id="id8">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="233">
            <source xml:space="preserve">For details, see <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Creating a fast and fluid app launch experience</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> and <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">Display a splash screen for more time</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc>.</source>
            <target xml:space="preserve">For details, see <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Creating a fast and fluid app launch experience</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> and <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">Display a splash screen for more time</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc>.</target>
          </segment>
        </unit>
        <unit id="234">
          <segment state="initial" id="234">
            <source xml:space="preserve">Disable animations that occur immediately after the splash screen is dismissed, as these will only lead to a perception of delay in app launch time.</source>
            <target xml:space="preserve">Disable animations that occur immediately after the splash screen is dismissed, as these will only lead to a perception of delay in app launch time.</target>
          </segment>
        </unit>
        <unit id="235">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="235">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Adaptive UI, and orientation</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Adaptive UI, and orientation</pc>
						</target>
          </segment>
        </unit>
        <unit id="236">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="236">
            <source xml:space="preserve">Use the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**VisualStateManager**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> class.</source>
            <target xml:space="preserve">Use the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**VisualStateManager**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> class.</target>
          </segment>
        </unit>
        <unit id="237">
          <segment state="initial" id="237">
            <source xml:space="preserve">Complete only required work immediately, deferring intensive app work until later—your app has between 200 and 800 milliseconds to complete work before the user sees your app's UI in a cropped state.</source>
            <target xml:space="preserve">Complete only required work immediately, deferring intensive app work until later—your app has between 200 and 800 milliseconds to complete work before the user sees your app's UI in a cropped state.</target>
          </segment>
        </unit>
        <unit id="238">
          <segment state="initial" id="238">
            <source xml:space="preserve">With your performance-related designs in place, you can start coding your app.</source>
            <target xml:space="preserve">With your performance-related designs in place, you can start coding your app.</target>
          </segment>
        </unit>
        <unit id="239">
          <segment state="initial" id="239">
            <source xml:space="preserve">Instrument for performance</source>
            <target xml:space="preserve">Instrument for performance</target>
          </segment>
        </unit>
        <unit id="240">
          <segment state="initial" id="240">
            <source xml:space="preserve">As you code, add code that logs messages and events at certain points while your app runs.</source>
            <target xml:space="preserve">As you code, add code that logs messages and events at certain points while your app runs.</target>
          </segment>
        </unit>
        <unit id="241">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="241">
            <source xml:space="preserve">Later, when you're testing your app, you can use profiling tools such as Windows Performance Recorder and Windows Performance Analyzer (both are included in the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Windows Performance Toolkit</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> to create and view a report about your app's performance.</source>
            <target xml:space="preserve">Later, when you're testing your app, you can use profiling tools such as Windows Performance Recorder and Windows Performance Analyzer (both are included in the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Windows Performance Toolkit</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> to create and view a report about your app's performance.</target>
          </segment>
        </unit>
        <unit id="242">
          <segment state="initial" id="242">
            <source xml:space="preserve">In this report, you can look for these messages and events to help you more easily analyze the report's results.</source>
            <target xml:space="preserve">In this report, you can look for these messages and events to help you more easily analyze the report's results.</target>
          </segment>
        </unit>
        <unit id="243">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="243">
            <source xml:space="preserve">The Universal Windows Platform (UWP) provides logging APIs, backed by <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Event Tracing for Windows (ETW)</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>, that together offer a rich event logging and tracing solution.</source>
            <target xml:space="preserve">The Universal Windows Platform (UWP) provides logging APIs, backed by <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Event Tracing for Windows (ETW)</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>, that together offer a rich event logging and tracing solution.</target>
          </segment>
        </unit>
        <unit id="244">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;link&gt;</data>
            <data id="id8">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id13">&lt;link&gt;</data>
            <data id="id14">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id19">&lt;link&gt;</data>
            <data id="id20">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id25">&lt;link&gt;</data>
            <data id="id26">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="244">
            <source xml:space="preserve">The APIs, which are part of the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**Windows.Foundation.Diagnostics**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> namespace, include the <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**FileLoggingSession**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc>, <pc dataRefEnd="id14" dataRefStart="id13" id="6CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="6CapsExtId2">**LoggingActivity**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="6CapsExtId3"></pc></pc>, <pc dataRefEnd="id20" dataRefStart="id19" id="8CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="8CapsExtId2">**LoggingChannel**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="8CapsExtId3"></pc></pc>, and <pc dataRefEnd="id26" dataRefStart="id25" id="10CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="10CapsExtId2">**LoggingSession**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="10CapsExtId3"></pc></pc> classes.</source>
            <target xml:space="preserve">The APIs, which are part of the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**Windows.Foundation.Diagnostics**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> namespace, include the <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**FileLoggingSession**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc>, <pc dataRefEnd="id14" dataRefStart="id13" id="6CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="6CapsExtId2">**LoggingActivity**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="6CapsExtId3"></pc></pc>, <pc dataRefEnd="id20" dataRefStart="id19" id="8CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="8CapsExtId2">**LoggingChannel**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="8CapsExtId3"></pc></pc>, and <pc dataRefEnd="id26" dataRefStart="id25" id="10CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="10CapsExtId2">**LoggingSession**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="10CapsExtId3"></pc></pc> classes.</target>
          </segment>
        </unit>
        <unit id="245">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;link&gt;</data>
            <data id="id4">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="245">
            <source xml:space="preserve">To log a message in the report at a specific point while the app is running, create a <pc dataRefEnd="id2" dataRefStart="id1" id="2">LoggingChannel</pc> object, and then call the object's <pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**LogMessage**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc> method, like this.</source>
            <target xml:space="preserve">To log a message in the report at a specific point while the app is running, create a <pc dataRefEnd="id2" dataRefStart="id1" id="2">LoggingChannel</pc> object, and then call the object's <pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**LogMessage**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc> method, like this.</target>
          </segment>
        </unit>
        <unit id="246">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;link&gt;</data>
            <data id="id4">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="246">
            <source xml:space="preserve">To log start and stop events in the report over a period of time while the app is running, create a <pc dataRefEnd="id2" dataRefStart="id1" id="2">LoggingActivity</pc> object, and then call the object's <pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**LoggingActivity**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc> constructor, like this.</source>
            <target xml:space="preserve">To log start and stop events in the report over a period of time while the app is running, create a <pc dataRefEnd="id2" dataRefStart="id1" id="2">LoggingActivity</pc> object, and then call the object's <pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**LoggingActivity**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc> constructor, like this.</target>
          </segment>
        </unit>
        <unit id="247">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="247">
            <source xml:space="preserve">Also see the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Logging sample</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>.</source>
            <target xml:space="preserve">Also see the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Logging sample</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>.</target>
          </segment>
        </unit>
        <unit id="248">
          <segment state="initial" id="248">
            <source xml:space="preserve">With your app instrumented, you can test and measure your app's performance.</source>
            <target xml:space="preserve">With your app instrumented, you can test and measure your app's performance.</target>
          </segment>
        </unit>
        <unit id="249">
          <segment state="initial" id="249">
            <source xml:space="preserve">Test and measure against performance goals</source>
            <target xml:space="preserve">Test and measure against performance goals</target>
          </segment>
        </unit>
        <unit id="250">
          <segment state="initial" id="250">
            <source xml:space="preserve">Part of your performance plan is to define the points during development where you'll measure performance.</source>
            <target xml:space="preserve">Part of your performance plan is to define the points during development where you'll measure performance.</target>
          </segment>
        </unit>
        <unit id="251">
          <segment state="initial" id="251">
            <source xml:space="preserve">This serves different purposes depending on whether you're measuring during prototyping, development, or deployment.</source>
            <target xml:space="preserve">This serves different purposes depending on whether you're measuring during prototyping, development, or deployment.</target>
          </segment>
        </unit>
        <unit id="252">
          <segment state="initial" id="252">
            <source xml:space="preserve">Measuring performance during the early stages of prototyping can be tremendously valuable, so we recommend that you do so as soon as you have code that does meaningful work.</source>
            <target xml:space="preserve">Measuring performance during the early stages of prototyping can be tremendously valuable, so we recommend that you do so as soon as you have code that does meaningful work.</target>
          </segment>
        </unit>
        <unit id="253">
          <segment state="initial" id="253">
            <source xml:space="preserve">Early measurements give you a good idea of where the important costs are in your app, and inform design decisions.</source>
            <target xml:space="preserve">Early measurements give you a good idea of where the important costs are in your app, and inform design decisions.</target>
          </segment>
        </unit>
        <unit id="254">
          <segment state="initial" id="254">
            <source xml:space="preserve">This results in high performing and scaling apps.</source>
            <target xml:space="preserve">This results in high performing and scaling apps.</target>
          </segment>
        </unit>
        <unit id="255">
          <segment state="initial" id="255">
            <source xml:space="preserve">It's generally costlier to change designs later than earlier.</source>
            <target xml:space="preserve">It's generally costlier to change designs later than earlier.</target>
          </segment>
        </unit>
        <unit id="256">
          <segment state="initial" id="256">
            <source xml:space="preserve">Measuring performance late in the product cycle can result in last-minute hacks and poor performance.</source>
            <target xml:space="preserve">Measuring performance late in the product cycle can result in last-minute hacks and poor performance.</target>
          </segment>
        </unit>
        <unit id="257">
          <segment state="initial" id="257">
            <source xml:space="preserve">Use these techniques and tools to test how your app stacks up against your original performance goals.</source>
            <target xml:space="preserve">Use these techniques and tools to test how your app stacks up against your original performance goals.</target>
          </segment>
        </unit>
        <unit id="258">
          <segment state="initial" id="258">
            <source xml:space="preserve">Test against a wide variety of hardware configurations including all-in-one and desktop PCs, laptops, ultrabooks, and tablets and other mobile devices.</source>
            <target xml:space="preserve">Test against a wide variety of hardware configurations including all-in-one and desktop PCs, laptops, ultrabooks, and tablets and other mobile devices.</target>
          </segment>
        </unit>
        <unit id="259">
          <segment state="initial" id="259">
            <source xml:space="preserve">Test against a wide variety of screen sizes.</source>
            <target xml:space="preserve">Test against a wide variety of screen sizes.</target>
          </segment>
        </unit>
        <unit id="260">
          <segment state="initial" id="260">
            <source xml:space="preserve">While wider screen sizes can show much more content, bringing in all of that extra content can negatively impact performance.</source>
            <target xml:space="preserve">While wider screen sizes can show much more content, bringing in all of that extra content can negatively impact performance.</target>
          </segment>
        </unit>
        <unit id="261">
          <segment state="initial" id="261">
            <source xml:space="preserve">Eliminate as many testing variables as you can.</source>
            <target xml:space="preserve">Eliminate as many testing variables as you can.</target>
          </segment>
        </unit>
        <unit id="262">
          <segment state="initial" id="262">
            <source xml:space="preserve">Turn off background apps on the testing device.</source>
            <target xml:space="preserve">Turn off background apps on the testing device.</target>
          </segment>
        </unit>
        <unit id="263">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;strong&gt;</data>
            <data id="id4">&lt;/strong&gt;</data>
            <data id="id5">&lt;strong&gt;</data>
            <data id="id6">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="263">
            <source xml:space="preserve">To do this, in Windows, select <pc dataRefEnd="id2" dataRefStart="id1" id="2">Settings</pc> from the Start menu &gt; <pc dataRefEnd="id4" dataRefStart="id3" id="4">Personalization</pc> &gt; <pc dataRefEnd="id6" dataRefStart="id5" id="6">Lock screen</pc>.</source>
            <target xml:space="preserve">To do this, in Windows, select <pc dataRefEnd="id2" dataRefStart="id1" id="2">Settings</pc> from the Start menu &gt; <pc dataRefEnd="id4" dataRefStart="id3" id="4">Personalization</pc> &gt; <pc dataRefEnd="id6" dataRefStart="id5" id="6">Lock screen</pc>.</target>
          </segment>
        </unit>
        <unit id="264">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="264">
            <source xml:space="preserve">Select each active app and select <pc dataRefEnd="id2" dataRefStart="id1" id="2">None</pc>.</source>
            <target xml:space="preserve">Select each active app and select <pc dataRefEnd="id2" dataRefStart="id1" id="2">None</pc>.</target>
          </segment>
        </unit>
        <unit id="265">
          <segment state="initial" id="265">
            <source xml:space="preserve">Compile your app to native code by building it in release configuration before deploying it to the testing device.</source>
            <target xml:space="preserve">Compile your app to native code by building it in release configuration before deploying it to the testing device.</target>
          </segment>
        </unit>
        <unit id="266">
          <segment state="initial" id="266">
            <source xml:space="preserve">To ensure that automatic maintenance does not affect the performance of the testing device, trigger it manually and wait for it to complete.</source>
            <target xml:space="preserve">To ensure that automatic maintenance does not affect the performance of the testing device, trigger it manually and wait for it to complete.</target>
          </segment>
        </unit>
        <unit id="267">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="267">
            <source xml:space="preserve">In Windows, in the Start menu search for <pc dataRefEnd="id2" dataRefStart="id1" id="2">Security and Maintenance</pc>.</source>
            <target xml:space="preserve">In Windows, in the Start menu search for <pc dataRefEnd="id2" dataRefStart="id1" id="2">Security and Maintenance</pc>.</target>
          </segment>
        </unit>
        <unit id="268">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;strong&gt;</data>
            <data id="id4">&lt;/strong&gt;</data>
            <data id="id5">&lt;strong&gt;</data>
            <data id="id6">&lt;/strong&gt;</data>
            <data id="id7">&lt;strong&gt;</data>
            <data id="id8">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="268">
            <source xml:space="preserve">In the <pc dataRefEnd="id2" dataRefStart="id1" id="2">Maintenance</pc> area, under <pc dataRefEnd="id4" dataRefStart="id3" id="4">Automatic Maintenance</pc>, select <pc dataRefEnd="id6" dataRefStart="id5" id="6">Start maintenance</pc> and wait for the status to change from <pc dataRefEnd="id8" dataRefStart="id7" id="8">Maintenance in progress</pc>.</source>
            <target xml:space="preserve">In the <pc dataRefEnd="id2" dataRefStart="id1" id="2">Maintenance</pc> area, under <pc dataRefEnd="id4" dataRefStart="id3" id="4">Automatic Maintenance</pc>, select <pc dataRefEnd="id6" dataRefStart="id5" id="6">Start maintenance</pc> and wait for the status to change from <pc dataRefEnd="id8" dataRefStart="id7" id="8">Maintenance in progress</pc>.</target>
          </segment>
        </unit>
        <unit id="269">
          <segment state="initial" id="269">
            <source xml:space="preserve">Run the app multiple times to help eliminate random testing variables and help ensure consistent measurements.</source>
            <target xml:space="preserve">Run the app multiple times to help eliminate random testing variables and help ensure consistent measurements.</target>
          </segment>
        </unit>
        <unit id="270">
          <segment state="initial" id="270">
            <source xml:space="preserve">Test for reduced power availability.</source>
            <target xml:space="preserve">Test for reduced power availability.</target>
          </segment>
        </unit>
        <unit id="271">
          <segment state="initial" id="271">
            <source xml:space="preserve">Your users' device might have significantly less power than your development machine.</source>
            <target xml:space="preserve">Your users' device might have significantly less power than your development machine.</target>
          </segment>
        </unit>
        <unit id="272">
          <segment state="initial" id="272">
            <source xml:space="preserve">Windows was designed with low-power devices, such as mobile devices, in mind.</source>
            <target xml:space="preserve">Windows was designed with low-power devices, such as mobile devices, in mind.</target>
          </segment>
        </unit>
        <unit id="273">
          <segment state="initial" id="273">
            <source xml:space="preserve">Apps that run on the platform should ensure they perform well on these devices.</source>
            <target xml:space="preserve">Apps that run on the platform should ensure they perform well on these devices.</target>
          </segment>
        </unit>
        <unit id="274">
          <segment state="initial" id="274">
            <source xml:space="preserve">As a heuristic, expect that a low power device runs at about a quarter the speed of a desktop computer, and set your goals accordingly.</source>
            <target xml:space="preserve">As a heuristic, expect that a low power device runs at about a quarter the speed of a desktop computer, and set your goals accordingly.</target>
          </segment>
        </unit>
        <unit id="275">
          <segment state="initial" id="275">
            <source xml:space="preserve">Use a combination of tools like Microsoft Visual Studio and Windows Performance Analyzer to measure app performance.</source>
            <target xml:space="preserve">Use a combination of tools like Microsoft Visual Studio and Windows Performance Analyzer to measure app performance.</target>
          </segment>
        </unit>
        <unit id="276">
          <segment state="initial" id="276">
            <source xml:space="preserve">Visual Studio is designed to provide app-focused analysis, such as source code linking.</source>
            <target xml:space="preserve">Visual Studio is designed to provide app-focused analysis, such as source code linking.</target>
          </segment>
        </unit>
        <unit id="277">
          <segment state="initial" id="277">
            <source xml:space="preserve">Windows Performance Analyzer is designed to provide system-focused analysis, such as providing system info, info about touch manipulation events, and info about disk input/output (I/O) and graphics processing unit (GPU) cost.</source>
            <target xml:space="preserve">Windows Performance Analyzer is designed to provide system-focused analysis, such as providing system info, info about touch manipulation events, and info about disk input/output (I/O) and graphics processing unit (GPU) cost.</target>
          </segment>
        </unit>
        <unit id="278">
          <segment state="initial" id="278">
            <source xml:space="preserve">Both tools provide trace capture and export, and can reopen shared and post-mortem traces.</source>
            <target xml:space="preserve">Both tools provide trace capture and export, and can reopen shared and post-mortem traces.</target>
          </segment>
        </unit>
        <unit id="279">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;link&gt;</data>
            <data id="id8">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="279">
            <source xml:space="preserve">Before you submit your app to the Store for certification, be sure to incorporate into your test plans the performance-related test cases as described in the "Performance tests" section of <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Windows App Certification Kit tests</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> and in the "Performance and stability" section of <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">Windows Store app test cases</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc>.</source>
            <target xml:space="preserve">Before you submit your app to the Store for certification, be sure to incorporate into your test plans the performance-related test cases as described in the "Performance tests" section of <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Windows App Certification Kit tests</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> and in the "Performance and stability" section of <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">Windows Store app test cases</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc>.</target>
          </segment>
        </unit>
        <unit id="280">
          <segment state="initial" id="280">
            <source xml:space="preserve">For more info, see these resources and profiling tools.</source>
            <target xml:space="preserve">For more info, see these resources and profiling tools.</target>
          </segment>
        </unit>
        <unit id="281">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="281">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">Windows Performance Analyzer</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">Windows Performance Analyzer</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</target>
          </segment>
        </unit>
        <unit id="282">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="282">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">Windows Performance Toolkit</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">Windows Performance Toolkit</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</target>
          </segment>
        </unit>
        <unit id="283">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="283">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">Analyze performance using Visual Studio diagnostic tools</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">Analyze performance using Visual Studio diagnostic tools</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</target>
          </segment>
        </unit>
        <unit id="284">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="284">
            <source xml:space="preserve">The //build/ session <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">XAML Performance</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc></source>
            <target xml:space="preserve">The //build/ session <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">XAML Performance</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc></target>
          </segment>
        </unit>
        <unit id="285">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="285">
            <source xml:space="preserve">The //build/ session <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">New XAML Tools in Visual Studio 2015</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc></source>
            <target xml:space="preserve">The //build/ session <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">New XAML Tools in Visual Studio 2015</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc></target>
          </segment>
        </unit>
        <unit id="286">
          <segment state="initial" id="286">
            <source xml:space="preserve">Respond to the performance test results</source>
            <target xml:space="preserve">Respond to the performance test results</target>
          </segment>
        </unit>
        <unit id="287">
          <segment state="initial" id="287">
            <source xml:space="preserve">After you analyze your performance test results, determine if any changes are needed, for example:</source>
            <target xml:space="preserve">After you analyze your performance test results, determine if any changes are needed, for example:</target>
          </segment>
        </unit>
        <unit id="288">
          <segment state="initial" id="288">
            <source xml:space="preserve">Should you change any of your app design decisions, or optimize your code?</source>
            <target xml:space="preserve">Should you change any of your app design decisions, or optimize your code?</target>
          </segment>
        </unit>
        <unit id="289">
          <segment state="initial" id="289">
            <source xml:space="preserve">Should you add, remove, or change any of the instrumentation in the code?</source>
            <target xml:space="preserve">Should you add, remove, or change any of the instrumentation in the code?</target>
          </segment>
        </unit>
        <unit id="290">
          <segment state="initial" id="290">
            <source xml:space="preserve">Should you revise any of your performance goals?</source>
            <target xml:space="preserve">Should you revise any of your performance goals?</target>
          </segment>
        </unit>
        <unit id="291">
          <segment state="initial" id="291">
            <source xml:space="preserve">If any changes are needed, make them and then go back to instrumenting or testing and repeat.</source>
            <target xml:space="preserve">If any changes are needed, make them and then go back to instrumenting or testing and repeat.</target>
          </segment>
        </unit>
        <unit id="292">
          <segment state="initial" id="292">
            <source xml:space="preserve">Optimizing</source>
            <target xml:space="preserve">Optimizing</target>
          </segment>
        </unit>
        <unit id="293">
          <segment state="initial" id="293">
            <source xml:space="preserve">Optimize only the performance-critical code paths in your app: those where most time is spent.</source>
            <target xml:space="preserve">Optimize only the performance-critical code paths in your app: those where most time is spent.</target>
          </segment>
        </unit>
        <unit id="294">
          <segment state="initial" id="294">
            <source xml:space="preserve">Profiling will tell you which.</source>
            <target xml:space="preserve">Profiling will tell you which.</target>
          </segment>
        </unit>
        <unit id="295">
          <segment state="initial" id="295">
            <source xml:space="preserve">Often, there is a trade-off between creating software that follows good design practices and writing code that performs at the highest optimization.</source>
            <target xml:space="preserve">Often, there is a trade-off between creating software that follows good design practices and writing code that performs at the highest optimization.</target>
          </segment>
        </unit>
        <unit id="296">
          <segment state="initial" id="296">
            <source xml:space="preserve">It is generally better to prioritize developer productivity and good software design in areas where performance is not a concern.</source>
            <target xml:space="preserve">It is generally better to prioritize developer productivity and good software design in areas where performance is not a concern.</target>
          </segment>
        </unit>
      </group>
    </group>
  </file>
</xliff>