<?xml version="1.0" encoding="utf-8"?>
<xliff srcLang="en-us" trgLang="de-de" version="2.0" xmlns="urn:oasis:names:tc:xliff:document:2.0" xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">f25e6aa8324bc8d80d6741fde3d3b6b24611a78e</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <group id="101">
        <unit id="101">
          <segment state="initial" id="101">
            <source xml:space="preserve">Getting started: Animation</source>
            <target xml:space="preserve">Getting started: Animation</target>
          </segment>
        </unit>
        <unit id="102">
          <segment state="initial" id="102">
            <source xml:space="preserve">\[ Updated for UWP apps on Windows 10.</source>
            <target xml:space="preserve">\[ Updated for UWP apps on Windows 10.</target>
          </segment>
        </unit>
        <unit id="103">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="103">
            <source xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">archive</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> \]</source>
            <target xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">archive</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> \]</target>
          </segment>
        </unit>
        <unit id="104">
          <segment state="initial" id="104">
            <source xml:space="preserve">Adding animations</source>
            <target xml:space="preserve">Adding animations</target>
          </segment>
        </unit>
        <unit id="105">
          <segment state="initial" id="105">
            <source xml:space="preserve">In iOS, you most often create animation effects programmatically.</source>
            <target xml:space="preserve">In iOS, you most often create animation effects programmatically.</target>
          </segment>
        </unit>
        <unit id="106">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;strong&gt;</data>
            <data id="id4">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="106">
            <source xml:space="preserve">For example, you might use animations provided by the block-based <pc dataRefEnd="id2" dataRefStart="id1" id="2">UIView</pc> class's <pc dataRefEnd="id4" dataRefStart="id3" id="4">animateWithDuration</pc> methods, or the older non-block based methods.</source>
            <target xml:space="preserve">For example, you might use animations provided by the block-based <pc dataRefEnd="id2" dataRefStart="id1" id="2">UIView</pc> class's <pc dataRefEnd="id4" dataRefStart="id3" id="4">animateWithDuration</pc> methods, or the older non-block based methods.</target>
          </segment>
        </unit>
        <unit id="107">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="107">
            <source xml:space="preserve">Or, you might explicitly use the <pc dataRefEnd="id2" dataRefStart="id1" id="2">CALayer</pc> class to animate layers.</source>
            <target xml:space="preserve">Or, you might explicitly use the <pc dataRefEnd="id2" dataRefStart="id1" id="2">CALayer</pc> class to animate layers.</target>
          </segment>
        </unit>
        <unit id="108">
          <segment state="initial" id="108">
            <source xml:space="preserve">Animations in Windows apps can be created programmatically, but they can also be defined declaratively with Extensible Application Markup Language (XAML).</source>
            <target xml:space="preserve">Animations in Windows apps can be created programmatically, but they can also be defined declaratively with Extensible Application Markup Language (XAML).</target>
          </segment>
        </unit>
        <unit id="109">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="109">
            <source xml:space="preserve">You can use Microsoft Visual Studio to edit XAML code directly, but Visual Studio also comes with a tool called <pc dataRefEnd="id2" dataRefStart="id1" id="2">Blend</pc>, which creates XAML code for you as you work with animations in a designer.</source>
            <target xml:space="preserve">You can use Microsoft Visual Studio to edit XAML code directly, but Visual Studio also comes with a tool called <pc dataRefEnd="id2" dataRefStart="id1" id="2">Blend</pc>, which creates XAML code for you as you work with animations in a designer.</target>
          </segment>
        </unit>
        <unit id="110">
          <segment state="initial" id="110">
            <source xml:space="preserve">In fact, Blend allows you to open, design, build, and run complete Visual Studio projects, graphically.</source>
            <target xml:space="preserve">In fact, Blend allows you to open, design, build, and run complete Visual Studio projects, graphically.</target>
          </segment>
        </unit>
        <unit id="111">
          <segment state="initial" id="111">
            <source xml:space="preserve">The following walkthrough lets you try this out.</source>
            <target xml:space="preserve">The following walkthrough lets you try this out.</target>
          </segment>
        </unit>
        <unit id="112">
          <segment state="initial" id="112">
            <source xml:space="preserve">Create a new Universal Windows Platform (UWP) app and name it something like "SimpleAnimation".</source>
            <target xml:space="preserve">Create a new Universal Windows Platform (UWP) app and name it something like "SimpleAnimation".</target>
          </segment>
        </unit>
        <unit id="113">
          <segment state="initial" id="113">
            <source xml:space="preserve">In this project, we're going to move a rectangle, apply a fade effect, and then bring it back into view.</source>
            <target xml:space="preserve">In this project, we're going to move a rectangle, apply a fade effect, and then bring it back into view.</target>
          </segment>
        </unit>
        <unit id="114">
          <originalData>
            <data id="id1">&lt;em&gt;</data>
            <data id="id2">&lt;/em&gt;</data>
          </originalData>
          <segment state="initial" id="114">
            <source xml:space="preserve">Animations in XAML are based on the concept of <pc dataRefEnd="id2" dataRefStart="id1" id="2">storyboards</pc> (not to be confused with iOS storyboards).</source>
            <target xml:space="preserve">Animations in XAML are based on the concept of <pc dataRefEnd="id2" dataRefStart="id1" id="2">storyboards</pc> (not to be confused with iOS storyboards).</target>
          </segment>
        </unit>
        <unit id="115">
          <originalData>
            <data id="id1">&lt;em&gt;</data>
            <data id="id2">&lt;/em&gt;</data>
          </originalData>
          <segment state="initial" id="115">
            <source xml:space="preserve">Storyboards use <pc dataRefEnd="id2" dataRefStart="id1" id="2">keyframes</pc> to animate property changes.</source>
            <target xml:space="preserve">Storyboards use <pc dataRefEnd="id2" dataRefStart="id1" id="2">keyframes</pc> to animate property changes.</target>
          </segment>
        </unit>
        <unit id="116">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;strong&gt;</data>
            <data id="id4">&lt;/strong&gt;</data>
            <data id="id5">&lt;strong&gt;</data>
            <data id="id6">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="116">
            <source xml:space="preserve">With your project open, in <pc dataRefEnd="id2" dataRefStart="id1" id="2">Solution Explorer</pc>, right-click the project's name and then select <pc dataRefEnd="id4" dataRefStart="id3" id="4">Open in Blend</pc> or <pc dataRefEnd="id6" dataRefStart="id5" id="6">Design in Blend</pc>, as shown in the following figure.</source>
            <target xml:space="preserve">With your project open, in <pc dataRefEnd="id2" dataRefStart="id1" id="2">Solution Explorer</pc>, right-click the project's name and then select <pc dataRefEnd="id4" dataRefStart="id3" id="4">Open in Blend</pc> or <pc dataRefEnd="id6" dataRefStart="id5" id="6">Design in Blend</pc>, as shown in the following figure.</target>
          </segment>
        </unit>
        <unit id="117">
          <segment state="initial" id="117">
            <source xml:space="preserve">Visual Studio continues to run in the background.</source>
            <target xml:space="preserve">Visual Studio continues to run in the background.</target>
          </segment>
        </unit>
        <unit id="118">
          <originalData>
            <data id="id1">&lt;linkText&gt;</data>
            <data id="id2">&lt;/linkText&gt;</data>
          </originalData>
          <segment state="initial" id="118">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">open in blend menu command</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">open in blend menu command</pc>
						</target>
          </segment>
        </unit>
        <unit id="119">
          <segment state="initial" id="119">
            <source xml:space="preserve">After Blend starts, you should see something similar to the following figure.</source>
            <target xml:space="preserve">After Blend starts, you should see something similar to the following figure.</target>
          </segment>
        </unit>
        <unit id="120">
          <originalData>
            <data id="id1">&lt;linkText&gt;</data>
            <data id="id2">&lt;/linkText&gt;</data>
          </originalData>
          <segment state="initial" id="120">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">blend development environment</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">blend development environment</pc>
						</target>
          </segment>
        </unit>
        <unit id="121">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;strong&gt;</data>
            <data id="id4">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="121">
            <source xml:space="preserve">Double-click on <pc dataRefEnd="id2" dataRefStart="id1" id="2">MainPage.xaml</pc> in the <pc dataRefEnd="id4" dataRefStart="id3" id="4">Solution Explorer</pc> on the left hand side.</source>
            <target xml:space="preserve">Double-click on <pc dataRefEnd="id2" dataRefStart="id1" id="2">MainPage.xaml</pc> in the <pc dataRefEnd="id4" dataRefStart="id3" id="4">Solution Explorer</pc> on the left hand side.</target>
          </segment>
        </unit>
        <unit id="122">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;strong&gt;</data>
            <data id="id4">&lt;/strong&gt;</data>
            <data id="id5">&lt;strong&gt;</data>
            <data id="id6">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="122">
            <source xml:space="preserve">Next, from the vertical strip of tools on the edge of the central <pc dataRefEnd="id2" dataRefStart="id1" id="2">Design View</pc>, select the <pc dataRefEnd="id4" dataRefStart="id3" id="4">Rectangle</pc> tool, and then draw a rectangle in <pc dataRefEnd="id6" dataRefStart="id5" id="6">Design View</pc>, as shown in the following figure.</source>
            <target xml:space="preserve">Next, from the vertical strip of tools on the edge of the central <pc dataRefEnd="id2" dataRefStart="id1" id="2">Design View</pc>, select the <pc dataRefEnd="id4" dataRefStart="id3" id="4">Rectangle</pc> tool, and then draw a rectangle in <pc dataRefEnd="id6" dataRefStart="id5" id="6">Design View</pc>, as shown in the following figure.</target>
          </segment>
        </unit>
        <unit id="123">
          <originalData>
            <data id="id1">&lt;linkText&gt;</data>
            <data id="id2">&lt;/linkText&gt;</data>
          </originalData>
          <segment state="initial" id="123">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">adding a rectangle to design view</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">adding a rectangle to design view</pc>
						</target>
          </segment>
        </unit>
        <unit id="124">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;strong&gt;</data>
            <data id="id4">&lt;/strong&gt;</data>
            <data id="id5">&lt;strong&gt;</data>
            <data id="id6">&lt;/strong&gt;</data>
            <data id="id7">&lt;strong&gt;</data>
            <data id="id8">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="124">
            <source xml:space="preserve">To make the rectangle green, look in the <pc dataRefEnd="id2" dataRefStart="id1" id="2">Properties</pc> window, and in the <pc dataRefEnd="id4" dataRefStart="id3" id="4">Brush</pc> area, click on the <pc dataRefEnd="id6" dataRefStart="id5" id="6">Solid color brush</pc> button, and then click the <pc dataRefEnd="id8" dataRefStart="id7" id="8">Color eyedropper</pc> icon.</source>
            <target xml:space="preserve">To make the rectangle green, look in the <pc dataRefEnd="id2" dataRefStart="id1" id="2">Properties</pc> window, and in the <pc dataRefEnd="id4" dataRefStart="id3" id="4">Brush</pc> area, click on the <pc dataRefEnd="id6" dataRefStart="id5" id="6">Solid color brush</pc> button, and then click the <pc dataRefEnd="id8" dataRefStart="id7" id="8">Color eyedropper</pc> icon.</target>
          </segment>
        </unit>
        <unit id="125">
          <segment state="initial" id="125">
            <source xml:space="preserve">Click somewhere in the green band of hues.</source>
            <target xml:space="preserve">Click somewhere in the green band of hues.</target>
          </segment>
        </unit>
        <unit id="126">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;strong&gt;</data>
            <data id="id4">&lt;/strong&gt;</data>
            <data id="id5">&lt;strong&gt;</data>
            <data id="id6">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="126">
            <source xml:space="preserve">To begin animating the rectangle, in the <pc dataRefEnd="id2" dataRefStart="id1" id="2">Objects and Timeline</pc> window, tap the plus symbol (<pc dataRefEnd="id4" dataRefStart="id3" id="4">New</pc>) button as shown in the following figure, and then tap <pc dataRefEnd="id6" dataRefStart="id5" id="6">OK</pc>.</source>
            <target xml:space="preserve">To begin animating the rectangle, in the <pc dataRefEnd="id2" dataRefStart="id1" id="2">Objects and Timeline</pc> window, tap the plus symbol (<pc dataRefEnd="id4" dataRefStart="id3" id="4">New</pc>) button as shown in the following figure, and then tap <pc dataRefEnd="id6" dataRefStart="id5" id="6">OK</pc>.</target>
          </segment>
        </unit>
        <unit id="127">
          <originalData>
            <data id="id1">&lt;linkText&gt;</data>
            <data id="id2">&lt;/linkText&gt;</data>
          </originalData>
          <segment state="initial" id="127">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">adding a storyboard</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">adding a storyboard</pc>
						</target>
          </segment>
        </unit>
        <unit id="128">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="128">
            <source xml:space="preserve">A storyboard appears in the <pc dataRefEnd="id2" dataRefStart="id1" id="2">Objects and Timeline</pc> window (you may need to resize the view to see it properly).</source>
            <target xml:space="preserve">A storyboard appears in the <pc dataRefEnd="id2" dataRefStart="id1" id="2">Objects and Timeline</pc> window (you may need to resize the view to see it properly).</target>
          </segment>
        </unit>
        <unit id="129">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;strong&gt;</data>
            <data id="id4">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="129">
            <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="2">Design View</pc> display changes to show that <pc dataRefEnd="id4" dataRefStart="id3" id="4">Storyboard1 timeline recording is on</pc>.</source>
            <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="2">Design View</pc> display changes to show that <pc dataRefEnd="id4" dataRefStart="id3" id="4">Storyboard1 timeline recording is on</pc>.</target>
          </segment>
        </unit>
        <unit id="130">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;strong&gt;</data>
            <data id="id4">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="130">
            <source xml:space="preserve">To capture the current state of the rectangle, in the <pc dataRefEnd="id2" dataRefStart="id1" id="2">Objects and Timeline</pc> window, tap the <pc dataRefEnd="id4" dataRefStart="id3" id="4">Record Keyframe</pc> button just above the yellow arrow, as shown in the following figure.</source>
            <target xml:space="preserve">To capture the current state of the rectangle, in the <pc dataRefEnd="id2" dataRefStart="id1" id="2">Objects and Timeline</pc> window, tap the <pc dataRefEnd="id4" dataRefStart="id3" id="4">Record Keyframe</pc> button just above the yellow arrow, as shown in the following figure.</target>
          </segment>
        </unit>
        <unit id="131">
          <originalData>
            <data id="id1">&lt;linkText&gt;</data>
            <data id="id2">&lt;/linkText&gt;</data>
          </originalData>
          <segment state="initial" id="131">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">recording a keyframe</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">recording a keyframe</pc>
						</target>
          </segment>
        </unit>
        <unit id="132">
          <segment state="initial" id="132">
            <source xml:space="preserve">Now, let's move the rectangle and fade it away.</source>
            <target xml:space="preserve">Now, let's move the rectangle and fade it away.</target>
          </segment>
        </unit>
        <unit id="133">
          <segment state="initial" id="133">
            <source xml:space="preserve">To do this, drag the orange/yellow arrow to the 2-second position, and then move your green rectangle slightly to the right.</source>
            <target xml:space="preserve">To do this, drag the orange/yellow arrow to the 2-second position, and then move your green rectangle slightly to the right.</target>
          </segment>
        </unit>
        <unit id="134">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;strong&gt;</data>
            <data id="id4">&lt;/strong&gt;</data>
            <data id="id5">&lt;strong&gt;</data>
            <data id="id6">&lt;/strong&gt;</data>
            <data id="id7">&lt;strong&gt;</data>
            <data id="id8">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="134">
            <source xml:space="preserve">Then, in the <pc dataRefEnd="id2" dataRefStart="id1" id="2">Properties</pc> window, in the <pc dataRefEnd="id4" dataRefStart="id3" id="4">Appearance</pc> area, change the <pc dataRefEnd="id6" dataRefStart="id5" id="6">Opacity</pc> property to <pc dataRefEnd="id8" dataRefStart="id7" id="8">0</pc>, as shown in the following figure.</source>
            <target xml:space="preserve">Then, in the <pc dataRefEnd="id2" dataRefStart="id1" id="2">Properties</pc> window, in the <pc dataRefEnd="id4" dataRefStart="id3" id="4">Appearance</pc> area, change the <pc dataRefEnd="id6" dataRefStart="id5" id="6">Opacity</pc> property to <pc dataRefEnd="id8" dataRefStart="id7" id="8">0</pc>, as shown in the following figure.</target>
          </segment>
        </unit>
        <unit id="135">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="135">
            <source xml:space="preserve">To preview the animation, tap the <pc dataRefEnd="id2" dataRefStart="id1" id="2">Play</pc> button in the Storyboard panel.</source>
            <target xml:space="preserve">To preview the animation, tap the <pc dataRefEnd="id2" dataRefStart="id1" id="2">Play</pc> button in the Storyboard panel.</target>
          </segment>
        </unit>
        <unit id="136">
          <originalData>
            <data id="id1">&lt;linkText&gt;</data>
            <data id="id2">&lt;/linkText&gt;</data>
          </originalData>
          <segment state="initial" id="136">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">properties windows and play button</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">properties windows and play button</pc>
						</target>
          </segment>
        </unit>
        <unit id="137">
          <segment state="initial" id="137">
            <source xml:space="preserve">Next, let's bring the rectangle back into view.</source>
            <target xml:space="preserve">Next, let's bring the rectangle back into view.</target>
          </segment>
        </unit>
        <unit id="138">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;strong&gt;</data>
            <data id="id4">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="138">
            <source xml:space="preserve">In the <pc dataRefEnd="id2" dataRefStart="id1" id="2">Objects and Timeline</pc> window, double-click <pc dataRefEnd="id4" dataRefStart="id3" id="4">Storyboard1</pc>.</source>
            <target xml:space="preserve">In the <pc dataRefEnd="id2" dataRefStart="id1" id="2">Objects and Timeline</pc> window, double-click <pc dataRefEnd="id4" dataRefStart="id3" id="4">Storyboard1</pc>.</target>
          </segment>
        </unit>
        <unit id="139">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;strong&gt;</data>
            <data id="id4">&lt;/strong&gt;</data>
            <data id="id5">&lt;strong&gt;</data>
            <data id="id6">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="139">
            <source xml:space="preserve">Then, in the <pc dataRefEnd="id2" dataRefStart="id1" id="2">Properties</pc> window, in the <pc dataRefEnd="id4" dataRefStart="id3" id="4">Common</pc> area, select <pc dataRefEnd="id6" dataRefStart="id5" id="6">AutoReverse</pc>, as shown in the following figure.</source>
            <target xml:space="preserve">Then, in the <pc dataRefEnd="id2" dataRefStart="id1" id="2">Properties</pc> window, in the <pc dataRefEnd="id4" dataRefStart="id3" id="4">Common</pc> area, select <pc dataRefEnd="id6" dataRefStart="id5" id="6">AutoReverse</pc>, as shown in the following figure.</target>
          </segment>
        </unit>
        <unit id="140">
          <originalData>
            <data id="id1">&lt;linkText&gt;</data>
            <data id="id2">&lt;/linkText&gt;</data>
          </originalData>
          <segment state="initial" id="140">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">selecting a storyboard</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">selecting a storyboard</pc>
						</target>
          </segment>
        </unit>
        <unit id="141">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="141">
            <source xml:space="preserve">Finally, click on the <pc dataRefEnd="id2" dataRefStart="id1" id="2">Play</pc> button to see what happens.</source>
            <target xml:space="preserve">Finally, click on the <pc dataRefEnd="id2" dataRefStart="id1" id="2">Play</pc> button to see what happens.</target>
          </segment>
        </unit>
        <unit id="142">
          <segment state="initial" id="142">
            <source xml:space="preserve">You can build and run the project by clicking on the green run button at the top of the window (or just press F5).</source>
            <target xml:space="preserve">You can build and run the project by clicking on the green run button at the top of the window (or just press F5).</target>
          </segment>
        </unit>
        <unit id="143">
          <segment state="initial" id="143">
            <source xml:space="preserve">If you do this, you'll see your project will indeed build and run, but the green rectangle will stubbornly sit perfectly still, like a toddler denied candy in a supermarket aisle.</source>
            <target xml:space="preserve">If you do this, you'll see your project will indeed build and run, but the green rectangle will stubbornly sit perfectly still, like a toddler denied candy in a supermarket aisle.</target>
          </segment>
        </unit>
        <unit id="144">
          <segment state="initial" id="144">
            <source xml:space="preserve">To start the animation, you'll need to add a line of code to the project.</source>
            <target xml:space="preserve">To start the animation, you'll need to add a line of code to the project.</target>
          </segment>
        </unit>
        <unit id="145">
          <segment state="initial" id="145">
            <source xml:space="preserve">Here's how.</source>
            <target xml:space="preserve">Here's how.</target>
          </segment>
        </unit>
        <unit id="146">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;strong&gt;</data>
            <data id="id4">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="146">
            <source xml:space="preserve">Save the project, by opening the <pc dataRefEnd="id2" dataRefStart="id1" id="2">File</pc> menu, and selecting <pc dataRefEnd="id4" dataRefStart="id3" id="4">Save MainPage.xaml</pc>.</source>
            <target xml:space="preserve">Save the project, by opening the <pc dataRefEnd="id2" dataRefStart="id1" id="2">File</pc> menu, and selecting <pc dataRefEnd="id4" dataRefStart="id3" id="4">Save MainPage.xaml</pc>.</target>
          </segment>
        </unit>
        <unit id="147">
          <segment state="initial" id="147">
            <source xml:space="preserve">Return to Visual Studio.</source>
            <target xml:space="preserve">Return to Visual Studio.</target>
          </segment>
        </unit>
        <unit id="148">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="148">
            <source xml:space="preserve">If Visual Studio displays a dialog box asking whether you want to reload the modified file, select <pc dataRefEnd="id2" dataRefStart="id1" id="2">Yes</pc>.</source>
            <target xml:space="preserve">If Visual Studio displays a dialog box asking whether you want to reload the modified file, select <pc dataRefEnd="id2" dataRefStart="id1" id="2">Yes</pc>.</target>
          </segment>
        </unit>
        <unit id="149">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;strong&gt;</data>
            <data id="id4">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="149">
            <source xml:space="preserve">Double-click the <pc dataRefEnd="id2" dataRefStart="id1" id="2">MainPage.xaml.cs</pc> file, which is hidden under <pc dataRefEnd="id4" dataRefStart="id3" id="4">MainPage.xaml</pc>, to open it, and add the following code just above the public MainPage() method:</source>
            <target xml:space="preserve">Double-click the <pc dataRefEnd="id2" dataRefStart="id1" id="2">MainPage.xaml.cs</pc> file, which is hidden under <pc dataRefEnd="id4" dataRefStart="id3" id="4">MainPage.xaml</pc>, to open it, and add the following code just above the public MainPage() method:</target>
          </segment>
        </unit>
        <unit id="150">
          <segment state="initial" id="150">
            <source xml:space="preserve">Run the project again, and watch the rectangle animate.</source>
            <target xml:space="preserve">Run the project again, and watch the rectangle animate.</target>
          </segment>
        </unit>
        <unit id="151">
          <segment state="initial" id="151">
            <source xml:space="preserve">Hurrah!</source>
            <target xml:space="preserve">Hurrah!</target>
          </segment>
        </unit>
        <unit id="152">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;code&gt;</data>
            <data id="id4">&lt;/code&gt;</data>
            <data id="id5">&lt;code&gt;</data>
            <data id="id6">&lt;/code&gt;</data>
          </originalData>
          <segment state="initial" id="152">
            <source xml:space="preserve">If you open the MainPage.xaml file, in <pc dataRefEnd="id2" dataRefStart="id1" id="2">XAML</pc> view, you'll see the XAML code that Blend added for you as you worked in the designer. In particular, look at the code in the <pc dataRefEnd="id4" dataRefStart="id3" id="4">&lt;Storyboard&gt;</pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="6">&lt;Rectangle&gt;</pc> elements. The following code shows an example. Ellipses indicate unrelated code omitted for brevity, and line breaks have been added for code readability.)</source>
            <target xml:space="preserve">If you open the MainPage.xaml file, in <pc dataRefEnd="id2" dataRefStart="id1" id="2">XAML</pc> view, you'll see the XAML code that Blend added for you as you worked in the designer. In particular, look at the code in the <pc dataRefEnd="id4" dataRefStart="id3" id="4">&lt;Storyboard&gt;</pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="6">&lt;Rectangle&gt;</pc> elements. The following code shows an example. Ellipses indicate unrelated code omitted for brevity, and line breaks have been added for code readability.)</target>
          </segment>
        </unit>
        <unit id="153">
          <segment state="initial" id="153">
            <source xml:space="preserve">You can edit this XAML manually, or return to Blend to continue working on it there.</source>
            <target xml:space="preserve">You can edit this XAML manually, or return to Blend to continue working on it there.</target>
          </segment>
        </unit>
        <unit id="154">
          <segment state="initial" id="154">
            <source xml:space="preserve">Blend makes it fun to create interesting user interfaces, and the ability to animate them using a graphical tool can dramatically speed up development time.</source>
            <target xml:space="preserve">Blend makes it fun to create interesting user interfaces, and the ability to animate them using a graphical tool can dramatically speed up development time.</target>
          </segment>
        </unit>
        <unit id="155">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="155">
            <source xml:space="preserve">For more info about animations, see <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Animations overview</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>.</source>
            <target xml:space="preserve">For more info about animations, see <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Animations overview</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>.</target>
          </segment>
        </unit>
        <unit id="156">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;link&gt;</data>
            <data id="id4">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="156">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Note</pc>  For info about animations for Windows Store apps using JavaScript and HTML, see <pc dataRefEnd="id4" dataRefStart="id3" id="3CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="3CapsExtId2">Animating your UI (HTML)</pc><pc dataRefEnd="id6" dataRefStart="id5" id="3CapsExtId3"></pc></pc>.</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Note</pc>  For info about animations for Windows Store apps using JavaScript and HTML, see <pc dataRefEnd="id4" dataRefStart="id3" id="3CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="3CapsExtId2">Animating your UI (HTML)</pc><pc dataRefEnd="id6" dataRefStart="id5" id="3CapsExtId3"></pc></pc>.</target>
          </segment>
        </unit>
        <unit id="157">
          <segment state="initial" id="157">
            <source xml:space="preserve">Next step</source>
            <target xml:space="preserve">Next step</target>
          </segment>
        </unit>
        <unit id="158">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="158">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">Getting started: What next?</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">Getting started: What next?</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</target>
          </segment>
        </unit>
      </group>
    </group>
  </file>
</xliff>