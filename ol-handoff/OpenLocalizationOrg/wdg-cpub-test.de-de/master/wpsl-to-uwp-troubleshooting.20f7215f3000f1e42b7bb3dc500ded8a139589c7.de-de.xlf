<?xml version="1.0" encoding="utf-8"?>
<xliff srcLang="en-us" trgLang="de-de" version="2.0" xmlns="urn:oasis:names:tc:xliff:document:2.0" xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">cb09ba3c6a44ec7eef1ccb9e80609352582a0e3e</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <group id="101">
        <unit id="101">
          <segment state="initial" id="101">
            <source xml:space="preserve">Troubleshooting porting Windows Phone Silverlight to UWP</source>
            <target xml:space="preserve">Troubleshooting porting Windows Phone Silverlight to UWP</target>
          </segment>
        </unit>
        <unit id="102">
          <segment state="initial" id="102">
            <source xml:space="preserve">\[ Updated for UWP apps on Windows 10.</source>
            <target xml:space="preserve">\[ Updated for UWP apps on Windows 10.</target>
          </segment>
        </unit>
        <unit id="103">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="103">
            <source xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">archive</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> \]</source>
            <target xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">archive</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> \]</target>
          </segment>
        </unit>
        <unit id="104">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="104">
            <source xml:space="preserve">The previous topic was <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Porting the project</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>.</source>
            <target xml:space="preserve">The previous topic was <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Porting the project</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>.</target>
          </segment>
        </unit>
        <unit id="105">
          <segment state="initial" id="105">
            <source xml:space="preserve">We highly recommend reading to the end of this porting guide, but we also understand that you're eager to forge ahead and get to the stage where your project builds and runs.</source>
            <target xml:space="preserve">We highly recommend reading to the end of this porting guide, but we also understand that you're eager to forge ahead and get to the stage where your project builds and runs.</target>
          </segment>
        </unit>
        <unit id="106">
          <segment state="initial" id="106">
            <source xml:space="preserve">To that end, you can make temporary progress by commenting or stubbing out any non-essential code, and then returning to pay off that debt later.</source>
            <target xml:space="preserve">To that end, you can make temporary progress by commenting or stubbing out any non-essential code, and then returning to pay off that debt later.</target>
          </segment>
        </unit>
        <unit id="107">
          <segment state="initial" id="107">
            <source xml:space="preserve">The table of troubleshooting symptoms and remedies in this topic may be helpful to you at this stage, although it's not a substitute for reading the next few topics.</source>
            <target xml:space="preserve">The table of troubleshooting symptoms and remedies in this topic may be helpful to you at this stage, although it's not a substitute for reading the next few topics.</target>
          </segment>
        </unit>
        <unit id="108">
          <segment state="initial" id="108">
            <source xml:space="preserve">You can always refer back to the table as you progress through the later topics.</source>
            <target xml:space="preserve">You can always refer back to the table as you progress through the later topics.</target>
          </segment>
        </unit>
        <unit id="109">
          <segment state="initial" id="109">
            <source xml:space="preserve">Tracking down issues</source>
            <target xml:space="preserve">Tracking down issues</target>
          </segment>
        </unit>
        <unit id="110">
          <segment state="initial" id="110">
            <source xml:space="preserve">XAML parse exceptions can be difficult to diagnose, particularly if there are no meaningful error messages within the exception.</source>
            <target xml:space="preserve">XAML parse exceptions can be difficult to diagnose, particularly if there are no meaningful error messages within the exception.</target>
          </segment>
        </unit>
        <unit id="111">
          <segment state="initial" id="111">
            <source xml:space="preserve">Make sure that the debugger is configured to catch first-chance exceptions (to try and catch the parsing exception early on).</source>
            <target xml:space="preserve">Make sure that the debugger is configured to catch first-chance exceptions (to try and catch the parsing exception early on).</target>
          </segment>
        </unit>
        <unit id="112">
          <segment state="initial" id="112">
            <source xml:space="preserve">You may be able to inspect the exception variable in the debugger to determine whether the HRESULT or message has any useful information.</source>
            <target xml:space="preserve">You may be able to inspect the exception variable in the debugger to determine whether the HRESULT or message has any useful information.</target>
          </segment>
        </unit>
        <unit id="113">
          <segment state="initial" id="113">
            <source xml:space="preserve">Also, check Visual Studio's output window for error messages output by the XAML parser.</source>
            <target xml:space="preserve">Also, check Visual Studio's output window for error messages output by the XAML parser.</target>
          </segment>
        </unit>
        <unit id="114">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="114">
            <source xml:space="preserve">If your app terminates and all you know is that an unhandled exception was thrown during XAML markup parsing, then that could be the result of a reference to a missing resource (that is, a resource whose key exists for Windows Phone Silverlight apps but not for Windows 10 apps, such as some system <pc dataRefEnd="id2" dataRefStart="id1" id="2">TextBlock</pc> Style keys).</source>
            <target xml:space="preserve">If your app terminates and all you know is that an unhandled exception was thrown during XAML markup parsing, then that could be the result of a reference to a missing resource (that is, a resource whose key exists for Windows Phone Silverlight apps but not for Windows 10 apps, such as some system <pc dataRefEnd="id2" dataRefStart="id1" id="2">TextBlock</pc> Style keys).</target>
          </segment>
        </unit>
        <unit id="115">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="115">
            <source xml:space="preserve">Or, it could be an exception thrown inside a <pc dataRefEnd="id2" dataRefStart="id1" id="2">UserControl</pc>, a custom control, or a custom layout panel.</source>
            <target xml:space="preserve">Or, it could be an exception thrown inside a <pc dataRefEnd="id2" dataRefStart="id1" id="2">UserControl</pc>, a custom control, or a custom layout panel.</target>
          </segment>
        </unit>
        <unit id="116">
          <segment state="initial" id="116">
            <source xml:space="preserve">A last resort is a binary split.</source>
            <target xml:space="preserve">A last resort is a binary split.</target>
          </segment>
        </unit>
        <unit id="117">
          <segment state="initial" id="117">
            <source xml:space="preserve">Remove about half of the markup from a Page and re-run the app.</source>
            <target xml:space="preserve">Remove about half of the markup from a Page and re-run the app.</target>
          </segment>
        </unit>
        <unit id="118">
          <originalData>
            <data id="id1">&lt;em&gt;</data>
            <data id="id2">&lt;/em&gt;</data>
          </originalData>
          <segment state="initial" id="118">
            <source xml:space="preserve">You will then know whether the error is somewhere inside the half you removed (which you should now restore in any case) or in the half you did <pc dataRefEnd="id2" dataRefStart="id1" id="2">not</pc> remove.</source>
            <target xml:space="preserve">You will then know whether the error is somewhere inside the half you removed (which you should now restore in any case) or in the half you did <pc dataRefEnd="id2" dataRefStart="id1" id="2">not</pc> remove.</target>
          </segment>
        </unit>
        <unit id="119">
          <segment state="initial" id="119">
            <source xml:space="preserve">Repeat the process by splitting the half that contains the error, and so on, until you've zeroed in on the issue.</source>
            <target xml:space="preserve">Repeat the process by splitting the half that contains the error, and so on, until you've zeroed in on the issue.</target>
          </segment>
        </unit>
        <unit id="120">
          <segment state="initial" id="120">
            <source xml:space="preserve">TargetPlatformVersion</source>
            <target xml:space="preserve">TargetPlatformVersion</target>
          </segment>
        </unit>
        <unit id="121">
          <segment state="initial" id="121">
            <source xml:space="preserve">This section explains what to do if, on opening a Windows 10 project in Visual Studio, you see the message "Visual Studio update required.</source>
            <target xml:space="preserve">This section explains what to do if, on opening a Windows 10 project in Visual Studio, you see the message "Visual Studio update required.</target>
          </segment>
        </unit>
        <unit id="122">
          <segment state="initial" id="122">
            <source xml:space="preserve">One or more projects require a platform SDK &lt;version&gt; that is either not installed or is included as part of a future update to Visual Studio."</source>
            <target xml:space="preserve">One or more projects require a platform SDK &lt;version&gt; that is either not installed or is included as part of a future update to Visual Studio."</target>
          </segment>
        </unit>
        <unit id="123">
          <segment state="initial" id="123">
            <source xml:space="preserve">First, determine the version number of the SDK for Windows 10 that you have installed.</source>
            <target xml:space="preserve">First, determine the version number of the SDK for Windows 10 that you have installed.</target>
          </segment>
        </unit>
        <unit id="124">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;em&gt;</data>
            <data id="id4">&lt;/em&gt;</data>
          </originalData>
          <segment state="initial" id="124">
            <source xml:space="preserve">Navigate to <pc dataRefEnd="id2" dataRefStart="id1" id="2">C:\\Program Files (x86)\\Windows Kits\\10\\Include\\&lt;versionfoldername&gt;</pc> and make a note of <pc dataRefEnd="id4" dataRefStart="id3" id="4">&lt;versionfoldername&gt;</pc>, which will be in quad notation, "Major.Minor.Build.Revision".</source>
            <target xml:space="preserve">Navigate to <pc dataRefEnd="id2" dataRefStart="id1" id="2">C:\\Program Files (x86)\\Windows Kits\\10\\Include\\&lt;versionfoldername&gt;</pc> and make a note of <pc dataRefEnd="id4" dataRefStart="id3" id="4">&lt;versionfoldername&gt;</pc>, which will be in quad notation, "Major.Minor.Build.Revision".</target>
          </segment>
        </unit>
        <unit id="125">
          <originalData>
            <data id="id1">&lt;code&gt;</data>
            <data id="id2">&lt;/code&gt;</data>
            <data id="id3">&lt;code&gt;</data>
            <data id="id4">&lt;/code&gt;</data>
          </originalData>
          <segment state="initial" id="125">
            <source xml:space="preserve">Open your project file for edit and find the <pc dataRefEnd="id2" dataRefStart="id1" id="2">TargetPlatformVersion</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="4">TargetPlatformMinVersion</pc> elements.</source>
            <target xml:space="preserve">Open your project file for edit and find the <pc dataRefEnd="id2" dataRefStart="id1" id="2">TargetPlatformVersion</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="4">TargetPlatformMinVersion</pc> elements.</target>
          </segment>
        </unit>
        <unit id="126">
          <originalData>
            <data id="id1">&lt;em&gt;</data>
            <data id="id2">&lt;/em&gt;</data>
          </originalData>
          <segment state="initial" id="126">
            <source xml:space="preserve">Edit them to look like this, replacing <pc dataRefEnd="id2" dataRefStart="id1" id="2">&lt;versionfoldername&gt;</pc> with the quad notation version number you found on disk:</source>
            <target xml:space="preserve">Edit them to look like this, replacing <pc dataRefEnd="id2" dataRefStart="id1" id="2">&lt;versionfoldername&gt;</pc> with the quad notation version number you found on disk:</target>
          </segment>
        </unit>
        <unit id="127">
          <segment state="initial" id="127">
            <source xml:space="preserve">Troubleshooting symptoms and remedies</source>
            <target xml:space="preserve">Troubleshooting symptoms and remedies</target>
          </segment>
        </unit>
        <unit id="128">
          <segment state="initial" id="128">
            <source xml:space="preserve">The remedy information in the table is intended to give you enough info to unblock yourself.</source>
            <target xml:space="preserve">The remedy information in the table is intended to give you enough info to unblock yourself.</target>
          </segment>
        </unit>
        <unit id="129">
          <segment state="initial" id="129">
            <source xml:space="preserve">You'll find further details about each of these issues as you read through later topics.</source>
            <target xml:space="preserve">You'll find further details about each of these issues as you read through later topics.</target>
          </segment>
        </unit>
        <unit id="130">
          <segment state="initial" id="130">
            <source xml:space="preserve">Symptom</source>
            <target xml:space="preserve">Symptom</target>
          </segment>
        </unit>
        <unit id="131">
          <segment state="initial" id="131">
            <source xml:space="preserve">Remedy</source>
            <target xml:space="preserve">Remedy</target>
          </segment>
        </unit>
        <unit id="132">
          <segment state="initial" id="132">
            <source xml:space="preserve">The XAML parser or compiler gives the error "_The name "&lt;typename&gt;" does not exist in the namespace […]._"</source>
            <target xml:space="preserve">The XAML parser or compiler gives the error "_The name "&lt;typename&gt;" does not exist in the namespace […]._"</target>
          </segment>
        </unit>
        <unit id="133">
          <segment state="initial" id="133">
            <source xml:space="preserve">If &lt;typename&gt; is a custom type then, in your namespace prefix declarations in XAML markup, change "clr-namespace" to "using", and remove any assembly tokens.</source>
            <target xml:space="preserve">If &lt;typename&gt; is a custom type then, in your namespace prefix declarations in XAML markup, change "clr-namespace" to "using", and remove any assembly tokens.</target>
          </segment>
        </unit>
        <unit id="134">
          <segment state="initial" id="134">
            <source xml:space="preserve">For platform types, this means that the type doesn't apply to the Universal Windows Platform (UWP), so find the equivalent and update your markup.</source>
            <target xml:space="preserve">For platform types, this means that the type doesn't apply to the Universal Windows Platform (UWP), so find the equivalent and update your markup.</target>
          </segment>
        </unit>
        <unit id="135">
          <originalData>
            <data id="id1">&lt;code&gt;</data>
            <data id="id2">&lt;/code&gt;</data>
            <data id="id3">&lt;code&gt;</data>
            <data id="id4">&lt;/code&gt;</data>
          </originalData>
          <segment state="initial" id="135">
            <source xml:space="preserve">Examples you might encounter right away are <pc dataRefEnd="id2" dataRefStart="id1" id="2">phone:PhoneApplicationPage</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="4">shell:SystemTray.IsVisible</pc>.</source>
            <target xml:space="preserve">Examples you might encounter right away are <pc dataRefEnd="id2" dataRefStart="id1" id="2">phone:PhoneApplicationPage</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="4">shell:SystemTray.IsVisible</pc>.</target>
          </segment>
        </unit>
        <unit id="136">
          <segment state="initial" id="136">
            <source xml:space="preserve">The XAML parser or compiler gives the error "_The member "&lt;membername&gt;" is not recognized or is not accessible._" or "_The property "&lt;propertyname&gt;" was not found in type [...]._".</source>
            <target xml:space="preserve">The XAML parser or compiler gives the error "_The member "&lt;membername&gt;" is not recognized or is not accessible._" or "_The property "&lt;propertyname&gt;" was not found in type [...]._".</target>
          </segment>
        </unit>
        <unit id="137">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="137">
            <source xml:space="preserve">These errors will begin to show up after you've ported some type names, such as the root <pc dataRefEnd="id2" dataRefStart="id1" id="2">Page</pc>.</source>
            <target xml:space="preserve">These errors will begin to show up after you've ported some type names, such as the root <pc dataRefEnd="id2" dataRefStart="id1" id="2">Page</pc>.</target>
          </segment>
        </unit>
        <unit id="138">
          <segment state="initial" id="138">
            <source xml:space="preserve">The member or property doesn't apply to the UWP, so find the equivalent and update your markup.</source>
            <target xml:space="preserve">The member or property doesn't apply to the UWP, so find the equivalent and update your markup.</target>
          </segment>
        </unit>
        <unit id="139">
          <originalData>
            <data id="id1">&lt;code&gt;</data>
            <data id="id2">&lt;/code&gt;</data>
            <data id="id3">&lt;code&gt;</data>
            <data id="id4">&lt;/code&gt;</data>
          </originalData>
          <segment state="initial" id="139">
            <source xml:space="preserve">Examples you might encounter right away are <pc dataRefEnd="id2" dataRefStart="id1" id="2">SupportedOrientations</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="4">Orientation</pc>.</source>
            <target xml:space="preserve">Examples you might encounter right away are <pc dataRefEnd="id2" dataRefStart="id1" id="2">SupportedOrientations</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="4">Orientation</pc>.</target>
          </segment>
        </unit>
        <unit id="140">
          <segment state="initial" id="140">
            <source xml:space="preserve">The XAML parser or compiler gives the error "_The attachable property [...] was not found [...]._" or "_Unknown attachable member [...]._".</source>
            <target xml:space="preserve">The XAML parser or compiler gives the error "_The attachable property [...] was not found [...]._" or "_Unknown attachable member [...]._".</target>
          </segment>
        </unit>
        <unit id="141">
          <segment state="initial" id="141">
            <source xml:space="preserve">This is likely to be caused by the type rather than the attached property; in which case, you will already have an error for the type and this error will go away once you fix that.</source>
            <target xml:space="preserve">This is likely to be caused by the type rather than the attached property; in which case, you will already have an error for the type and this error will go away once you fix that.</target>
          </segment>
        </unit>
        <unit id="142">
          <originalData>
            <data id="id1">&lt;code&gt;</data>
            <data id="id2">&lt;/code&gt;</data>
            <data id="id3">&lt;code&gt;</data>
            <data id="id4">&lt;/code&gt;</data>
          </originalData>
          <segment state="initial" id="142">
            <source xml:space="preserve">Examples you might encounter right away are <pc dataRefEnd="id2" dataRefStart="id1" id="2">phone:PhoneApplicationPage.Resources</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="4">phone:PhoneApplicationPage.DataContext</pc>.</source>
            <target xml:space="preserve">Examples you might encounter right away are <pc dataRefEnd="id2" dataRefStart="id1" id="2">phone:PhoneApplicationPage.Resources</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="4">phone:PhoneApplicationPage.DataContext</pc>.</target>
          </segment>
        </unit>
        <unit id="143">
          <segment state="initial" id="143">
            <source xml:space="preserve">The XAML parser or compiler, or a runtime exception, gives the error "_The resource "&lt;resourcekey&gt;" could not be resolved._".</source>
            <target xml:space="preserve">The XAML parser or compiler, or a runtime exception, gives the error "_The resource "&lt;resourcekey&gt;" could not be resolved._".</target>
          </segment>
        </unit>
        <unit id="144">
          <segment state="initial" id="144">
            <source xml:space="preserve">The resource key doesn't apply to Universal Windows Platform (UWP) apps.</source>
            <target xml:space="preserve">The resource key doesn't apply to Universal Windows Platform (UWP) apps.</target>
          </segment>
        </unit>
        <unit id="145">
          <segment state="initial" id="145">
            <source xml:space="preserve">Find the correct equivalent resource and update your markup.</source>
            <target xml:space="preserve">Find the correct equivalent resource and update your markup.</target>
          </segment>
        </unit>
        <unit id="146">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;code&gt;</data>
            <data id="id4">&lt;/code&gt;</data>
          </originalData>
          <segment state="initial" id="146">
            <source xml:space="preserve">Examples you might encounter right away are system <pc dataRefEnd="id2" dataRefStart="id1" id="2">TextBlock</pc> Style keys such as <pc dataRefEnd="id4" dataRefStart="id3" id="4">PhoneTextNormalStyle</pc>.</source>
            <target xml:space="preserve">Examples you might encounter right away are system <pc dataRefEnd="id2" dataRefStart="id1" id="2">TextBlock</pc> Style keys such as <pc dataRefEnd="id4" dataRefStart="id3" id="4">PhoneTextNormalStyle</pc>.</target>
          </segment>
        </unit>
        <unit id="147">
          <segment state="initial" id="147">
            <source xml:space="preserve">The C# compiler gives the error "_The type or namespace name '&lt;name&gt;' could not be found [...]_" or "_The type or namespace name '&lt;name&gt;' does not exist in the namespace [...]_" or "_The type or namespace name '&lt;name&gt;' does not exist in the current context_".</source>
            <target xml:space="preserve">The C# compiler gives the error "_The type or namespace name '&lt;name&gt;' could not be found [...]_" or "_The type or namespace name '&lt;name&gt;' does not exist in the namespace [...]_" or "_The type or namespace name '&lt;name&gt;' does not exist in the current context_".</target>
          </segment>
        </unit>
        <unit id="148">
          <segment state="initial" id="148">
            <source xml:space="preserve">This is likely to mean that the compiler doesn't yet know the correct UWP namespace for a type.</source>
            <target xml:space="preserve">This is likely to mean that the compiler doesn't yet know the correct UWP namespace for a type.</target>
          </segment>
        </unit>
        <unit id="149">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="149">
            <source xml:space="preserve">Use Visual Studio's <pc dataRefEnd="id2" dataRefStart="id1" id="2">Resolve</pc> command to fix that.</source>
            <target xml:space="preserve">Use Visual Studio's <pc dataRefEnd="id2" dataRefStart="id1" id="2">Resolve</pc> command to fix that.</target>
          </segment>
        </unit>
        <unit id="150">
          <originalData>
            <data id="id1">&lt;html&gt;</data>
            <data id="id2">&lt;/html&gt;</data>
            <data id="id3">&lt;link&gt;</data>
            <data id="id4">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id9">&lt;html&gt;</data>
            <data id="id10">&lt;/html&gt;</data>
          </originalData>
          <segment state="initial" id="150">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1"></pc>If the API is not in the set of APIs known as the universal device family (in other words, the API is implemented in an extension SDK), then use the <pc dataRefEnd="id4" dataRefStart="id3" id="3CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="3CapsExtId2">Extension SDKs</pc><pc dataRefEnd="id6" dataRefStart="id5" id="3CapsExtId3"></pc></pc>.<pc dataRefEnd="id10" dataRefStart="id9" id="5"></pc>There may be other cases where port is less straightforward.</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1"></pc>If the API is not in the set of APIs known as the universal device family (in other words, the API is implemented in an extension SDK), then use the <pc dataRefEnd="id4" dataRefStart="id3" id="3CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="3CapsExtId2">Extension SDKs</pc><pc dataRefEnd="id6" dataRefStart="id5" id="3CapsExtId3"></pc></pc>.<pc dataRefEnd="id10" dataRefStart="id9" id="5"></pc>There may be other cases where port is less straightforward.</target>
          </segment>
        </unit>
        <unit id="151">
          <originalData>
            <data id="id1">&lt;code&gt;</data>
            <data id="id2">&lt;/code&gt;</data>
            <data id="id3">&lt;code&gt;</data>
            <data id="id4">&lt;/code&gt;</data>
          </originalData>
          <segment state="initial" id="151">
            <source xml:space="preserve">Examples you might encounter right away are <pc dataRefEnd="id2" dataRefStart="id1" id="2">DesignerProperties</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="4">BitmapImage</pc>.</source>
            <target xml:space="preserve">Examples you might encounter right away are <pc dataRefEnd="id2" dataRefStart="id1" id="2">DesignerProperties</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="4">BitmapImage</pc>.</target>
          </segment>
        </unit>
        <unit id="152">
          <segment state="initial" id="152">
            <source xml:space="preserve">When run on the device, the app terminates, or when launched from Visual Studio, you see the error “Unable to activate Windows Store app […].</source>
            <target xml:space="preserve">When run on the device, the app terminates, or when launched from Visual Studio, you see the error “Unable to activate Windows Store app […].</target>
          </segment>
        </unit>
        <unit id="153">
          <segment state="initial" id="153">
            <source xml:space="preserve">The activation request failed with error ‘Windows was unable to communicate with the target application.</source>
            <target xml:space="preserve">The activation request failed with error ‘Windows was unable to communicate with the target application.</target>
          </segment>
        </unit>
        <unit id="154">
          <segment state="initial" id="154">
            <source xml:space="preserve">This usually indicates that the target application’s process aborted.</source>
            <target xml:space="preserve">This usually indicates that the target application’s process aborted.</target>
          </segment>
        </unit>
        <unit id="155">
          <segment state="initial" id="155">
            <source xml:space="preserve">[…]”.</source>
            <target xml:space="preserve">[…]”.</target>
          </segment>
        </unit>
        <unit id="156">
          <segment state="initial" id="156">
            <source xml:space="preserve">The problem could be the imperative code running in your own Pages or in bound properties (or other types) during initialization.</source>
            <target xml:space="preserve">The problem could be the imperative code running in your own Pages or in bound properties (or other types) during initialization.</target>
          </segment>
        </unit>
        <unit id="157">
          <segment state="initial" id="157">
            <source xml:space="preserve">Or, it could be happening while parsing the XAML file about to be displayed when the app terminated (if launching from Visual Studio, that will be the startup page).</source>
            <target xml:space="preserve">Or, it could be happening while parsing the XAML file about to be displayed when the app terminated (if launching from Visual Studio, that will be the startup page).</target>
          </segment>
        </unit>
        <unit id="158">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="158">
            <source xml:space="preserve">Look for invalid resource keys, and/or try some of the guidance in the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Tracking down issues</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> section in this topic.</source>
            <target xml:space="preserve">Look for invalid resource keys, and/or try some of the guidance in the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Tracking down issues</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> section in this topic.</target>
          </segment>
        </unit>
        <unit id="159">
          <segment state="initial" id="159">
            <source xml:space="preserve">_XamlCompiler error WMC0055: Cannot assign text value '&lt;your stream geometry&gt;' into property 'Clip' of type 'RectangleGeometry'_</source>
            <target xml:space="preserve">_XamlCompiler error WMC0055: Cannot assign text value '&lt;your stream geometry&gt;' into property 'Clip' of type 'RectangleGeometry'_</target>
          </segment>
        </unit>
        <unit id="160">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="160">
            <source xml:space="preserve">In the UWP, the type of the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Microsoft DirectX</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> and XAML C++ UWP app.</source>
            <target xml:space="preserve">In the UWP, the type of the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Microsoft DirectX</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> and XAML C++ UWP app.</target>
          </segment>
        </unit>
        <unit id="161">
          <segment state="initial" id="161">
            <source xml:space="preserve">_XamlCompiler error WMC0001: Unknown type 'RadialGradientBrush' in XML namespace [...]_</source>
            <target xml:space="preserve">_XamlCompiler error WMC0001: Unknown type 'RadialGradientBrush' in XML namespace [...]_</target>
          </segment>
        </unit>
        <unit id="162">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="162">
            <source xml:space="preserve">The UWP doesn't have the <pc dataRefEnd="id2" dataRefStart="id1" id="2">RadialGradientBrush</pc> type.</source>
            <target xml:space="preserve">The UWP doesn't have the <pc dataRefEnd="id2" dataRefStart="id1" id="2">RadialGradientBrush</pc> type.</target>
          </segment>
        </unit>
        <unit id="163">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;link&gt;</data>
            <data id="id4">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="163">
            <source xml:space="preserve">Remove the <pc dataRefEnd="id2" dataRefStart="id1" id="2">RadialGradientBrush</pc> from markup and use some other type of <pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">Microsoft DirectX</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc> and XAML C++ UWP app.</source>
            <target xml:space="preserve">Remove the <pc dataRefEnd="id2" dataRefStart="id1" id="2">RadialGradientBrush</pc> from markup and use some other type of <pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">Microsoft DirectX</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc> and XAML C++ UWP app.</target>
          </segment>
        </unit>
        <unit id="164">
          <segment state="initial" id="164">
            <source xml:space="preserve">_XamlCompiler error WMC0011: Unknown member 'OpacityMask' on element '&lt;UIElement type&gt;'_</source>
            <target xml:space="preserve">_XamlCompiler error WMC0011: Unknown member 'OpacityMask' on element '&lt;UIElement type&gt;'_</target>
          </segment>
        </unit>
        <unit id="165">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="165">
            <source xml:space="preserve">The UWP <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Microsoft DirectX</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> and XAML C++ UWP app.</source>
            <target xml:space="preserve">The UWP <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Microsoft DirectX</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> and XAML C++ UWP app.</target>
          </segment>
        </unit>
        <unit id="166">
          <segment state="initial" id="166">
            <source xml:space="preserve">_A first chance exception of type 'System.Runtime.InteropServices.COMException' occurred in SYSTEM.NI.DLL.</source>
            <target xml:space="preserve">_A first chance exception of type 'System.Runtime.InteropServices.COMException' occurred in SYSTEM.NI.DLL.</target>
          </segment>
        </unit>
        <unit id="167">
          <segment state="initial" id="167">
            <source xml:space="preserve">Additional information: The application called an interface that was marshalled for a different thread.</source>
            <target xml:space="preserve">Additional information: The application called an interface that was marshalled for a different thread.</target>
          </segment>
        </unit>
        <unit id="168">
          <segment state="initial" id="168">
            <source xml:space="preserve">(Exception from HRESULT: 0x8001010E (RPC_E_WRONG_THREAD))._</source>
            <target xml:space="preserve">(Exception from HRESULT: 0x8001010E (RPC_E_WRONG_THREAD))._</target>
          </segment>
        </unit>
        <unit id="169">
          <segment state="initial" id="169">
            <source xml:space="preserve">The work you're doing needs to be done on the UI thread.</source>
            <target xml:space="preserve">The work you're doing needs to be done on the UI thread.</target>
          </segment>
        </unit>
        <unit id="170">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="170">
            <source xml:space="preserve">Call the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**CoreWindow.GetForCurrentThread**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>.</source>
            <target xml:space="preserve">Call the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**CoreWindow.GetForCurrentThread**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>.</target>
          </segment>
        </unit>
        <unit id="171">
          <segment state="initial" id="171">
            <source xml:space="preserve">An animation is running, but it's having no effect on its target property.</source>
            <target xml:space="preserve">An animation is running, but it's having no effect on its target property.</target>
          </segment>
        </unit>
        <unit id="172">
          <originalData>
            <data id="id1">&lt;code&gt;</data>
            <data id="id2">&lt;/code&gt;</data>
          </originalData>
          <segment state="initial" id="172">
            <source xml:space="preserve">Either make the animation independent, or set <pc dataRefEnd="id2" dataRefStart="id1" id="2">EnableDependentAnimation="True"</pc> on it.</source>
            <target xml:space="preserve">Either make the animation independent, or set <pc dataRefEnd="id2" dataRefStart="id1" id="2">EnableDependentAnimation="True"</pc> on it.</target>
          </segment>
        </unit>
        <unit id="173">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="173">
            <source xml:space="preserve">See <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Animation</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>.</source>
            <target xml:space="preserve">See <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Animation</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>.</target>
          </segment>
        </unit>
        <unit id="174">
          <segment state="initial" id="174">
            <source xml:space="preserve">On opening a Windows 10 project in Visual Studio, you see the message "Visual Studio update required.</source>
            <target xml:space="preserve">On opening a Windows 10 project in Visual Studio, you see the message "Visual Studio update required.</target>
          </segment>
        </unit>
        <unit id="175">
          <segment state="initial" id="175">
            <source xml:space="preserve">One or more projects require a platform SDK &lt;version&gt; that is either not installed or is included as part of a future update to Visual Studio."</source>
            <target xml:space="preserve">One or more projects require a platform SDK &lt;version&gt; that is either not installed or is included as part of a future update to Visual Studio."</target>
          </segment>
        </unit>
        <unit id="176">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="176">
            <source xml:space="preserve">See the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">TargetPlatformVersion</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> section in this topic.</source>
            <target xml:space="preserve">See the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">TargetPlatformVersion</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> section in this topic.</target>
          </segment>
        </unit>
        <unit id="177">
          <segment state="initial" id="177">
            <source xml:space="preserve">A System.InvalidCastException is thrown when InitializeComponent is called in a xaml.cs file.</source>
            <target xml:space="preserve">A System.InvalidCastException is thrown when InitializeComponent is called in a xaml.cs file.</target>
          </segment>
        </unit>
        <unit id="178">
          <segment state="initial" id="178">
            <source xml:space="preserve">This can happen when you have more than one xaml file (at least one of which is MRT-qualified) sharing the same xaml.cs file and elements have x:Name attributes that are inconsistent between the two xaml files.</source>
            <target xml:space="preserve">This can happen when you have more than one xaml file (at least one of which is MRT-qualified) sharing the same xaml.cs file and elements have x:Name attributes that are inconsistent between the two xaml files.</target>
          </segment>
        </unit>
        <unit id="179">
          <segment state="initial" id="179">
            <source xml:space="preserve">Try adding the same name to the same elements in both xaml files, or omit names altogether.</source>
            <target xml:space="preserve">Try adding the same name to the same elements in both xaml files, or omit names altogether.</target>
          </segment>
        </unit>
        <unit id="180">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="180">
            <source xml:space="preserve">The next topic is <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Porting XAML and UI</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>.</source>
            <target xml:space="preserve">The next topic is <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Porting XAML and UI</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>.</target>
          </segment>
        </unit>
      </group>
    </group>
  </file>
</xliff>