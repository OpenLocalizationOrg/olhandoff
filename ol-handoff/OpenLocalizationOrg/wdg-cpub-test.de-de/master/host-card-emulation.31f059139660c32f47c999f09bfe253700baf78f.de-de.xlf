<?xml version="1.0" encoding="utf-8"?>
<xliff srcLang="en-us" trgLang="de-de" version="2.0" xmlns="urn:oasis:names:tc:xliff:document:2.0" xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">2d1fa53aea846db7bcba6caa86dc661a2453d1d1</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <group id="101">
        <unit id="101">
          <segment state="initial" id="101">
            <source xml:space="preserve">Create an NFC Smart Card app</source>
            <target xml:space="preserve">Create an NFC Smart Card app</target>
          </segment>
        </unit>
        <unit id="102">
          <segment state="initial" id="102">
            <source xml:space="preserve">\[ Updated for UWP apps on Windows 10.</source>
            <target xml:space="preserve">\[ Updated for UWP apps on Windows 10.</target>
          </segment>
        </unit>
        <unit id="103">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="103">
            <source xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">archive</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> \]</source>
            <target xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">archive</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> \]</target>
          </segment>
        </unit>
        <unit id="104">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="104">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Important</pc>  This topic applies to Windows 10 Mobile only.</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Important</pc>  This topic applies to Windows 10 Mobile only.</target>
          </segment>
        </unit>
        <unit id="105">
          <segment state="initial" id="105">
            <source xml:space="preserve">Windows Phone 8.1 supported NFC card emulation apps using a SIM-based secure element, but that model required secure payment apps to be tightly coupled with mobile-network operators (MNO).</source>
            <target xml:space="preserve">Windows Phone 8.1 supported NFC card emulation apps using a SIM-based secure element, but that model required secure payment apps to be tightly coupled with mobile-network operators (MNO).</target>
          </segment>
        </unit>
        <unit id="106">
          <segment state="initial" id="106">
            <source xml:space="preserve">This limited the variety of possible payment solutions by other merchants or developers that are not coupled with MNOs.</source>
            <target xml:space="preserve">This limited the variety of possible payment solutions by other merchants or developers that are not coupled with MNOs.</target>
          </segment>
        </unit>
        <unit id="107">
          <segment state="initial" id="107">
            <source xml:space="preserve">In Windows 10 Mobile, we have introduced a new card emulation technology called, Host Card Emulation (HCE).</source>
            <target xml:space="preserve">In Windows 10 Mobile, we have introduced a new card emulation technology called, Host Card Emulation (HCE).</target>
          </segment>
        </unit>
        <unit id="108">
          <segment state="initial" id="108">
            <source xml:space="preserve">HCE technology allows your app to directly communicate with an NFC card reader.</source>
            <target xml:space="preserve">HCE technology allows your app to directly communicate with an NFC card reader.</target>
          </segment>
        </unit>
        <unit id="109">
          <segment state="initial" id="109">
            <source xml:space="preserve">This topic illustrates how Host Card Emulation (HCE) works on Windows 10 Mobile devices and how you can develop an HCE app so that your customers can access your services through their phone instead of a physical card without collaborating with an MNO.</source>
            <target xml:space="preserve">This topic illustrates how Host Card Emulation (HCE) works on Windows 10 Mobile devices and how you can develop an HCE app so that your customers can access your services through their phone instead of a physical card without collaborating with an MNO.</target>
          </segment>
        </unit>
        <unit id="110">
          <segment state="initial" id="110">
            <source xml:space="preserve">What you need to develop an HCE app</source>
            <target xml:space="preserve">What you need to develop an HCE app</target>
          </segment>
        </unit>
        <unit id="111">
          <segment state="initial" id="111">
            <source xml:space="preserve">To develop an HCE-based card emulation app for Windows 10 Mobile, you will need to get your development environment setup.</source>
            <target xml:space="preserve">To develop an HCE-based card emulation app for Windows 10 Mobile, you will need to get your development environment setup.</target>
          </segment>
        </unit>
        <unit id="112">
          <segment state="initial" id="112">
            <source xml:space="preserve">You can get set up by installing Microsoft Visual Studio 2015, which includes the Windows developer tools and the Windows 10 Mobile emulator with NFC emulation support.</source>
            <target xml:space="preserve">You can get set up by installing Microsoft Visual Studio 2015, which includes the Windows developer tools and the Windows 10 Mobile emulator with NFC emulation support.</target>
          </segment>
        </unit>
        <unit id="113">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="113">
            <source xml:space="preserve">For more information about getting setup, see, <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Get set up</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc></source>
            <target xml:space="preserve">For more information about getting setup, see, <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Get set up</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc></target>
          </segment>
        </unit>
        <unit id="114">
          <segment state="initial" id="114">
            <source xml:space="preserve">Optionally, if you want to test with a real Windows 10 Mobile device instead of the included Windows 10 Mobile emulator, you will also need the following items.</source>
            <target xml:space="preserve">Optionally, if you want to test with a real Windows 10 Mobile device instead of the included Windows 10 Mobile emulator, you will also need the following items.</target>
          </segment>
        </unit>
        <unit id="115">
          <segment state="initial" id="115">
            <source xml:space="preserve">A Windows 10 Mobile device with NFC HCE support.</source>
            <target xml:space="preserve">A Windows 10 Mobile device with NFC HCE support.</target>
          </segment>
        </unit>
        <unit id="116">
          <segment state="initial" id="116">
            <source xml:space="preserve">Currently, the Lumia 730, 830, 640, and the 640 XL have the hardware to support NFC HCE apps.</source>
            <target xml:space="preserve">Currently, the Lumia 730, 830, 640, and the 640 XL have the hardware to support NFC HCE apps.</target>
          </segment>
        </unit>
        <unit id="117">
          <segment state="initial" id="117">
            <source xml:space="preserve">A reader terminal that supports protocols ISO/IEC 14443-4 and ISO/IEC 7816-4</source>
            <target xml:space="preserve">A reader terminal that supports protocols ISO/IEC 14443-4 and ISO/IEC 7816-4</target>
          </segment>
        </unit>
        <unit id="118">
          <segment state="initial" id="118">
            <source xml:space="preserve">Windows 10 Mobile implements an HCE service that provides the following functionalities.</source>
            <target xml:space="preserve">Windows 10 Mobile implements an HCE service that provides the following functionalities.</target>
          </segment>
        </unit>
        <unit id="119">
          <segment state="initial" id="119">
            <source xml:space="preserve">Apps can register the applet identifiers (AIDs) for the cards they would like to emulate.</source>
            <target xml:space="preserve">Apps can register the applet identifiers (AIDs) for the cards they would like to emulate.</target>
          </segment>
        </unit>
        <unit id="120">
          <segment state="initial" id="120">
            <source xml:space="preserve">Conflict resolution and routing of the Application Protocol Data Unit (APDU) command and response pairs to one of the registered apps based on the external reader card selection and user preference.</source>
            <target xml:space="preserve">Conflict resolution and routing of the Application Protocol Data Unit (APDU) command and response pairs to one of the registered apps based on the external reader card selection and user preference.</target>
          </segment>
        </unit>
        <unit id="121">
          <segment state="initial" id="121">
            <source xml:space="preserve">Handling of events and notifications to the apps as a result of user actions.</source>
            <target xml:space="preserve">Handling of events and notifications to the apps as a result of user actions.</target>
          </segment>
        </unit>
        <unit id="122">
          <segment state="initial" id="122">
            <source xml:space="preserve">Windows 10 supports emulation of smart cards that are based on ISO-DEP (ISO-IEC 14443-4) and communicates using APDUs as defined in the ISO-IEC 7816-4 specification.</source>
            <target xml:space="preserve">Windows 10 supports emulation of smart cards that are based on ISO-DEP (ISO-IEC 14443-4) and communicates using APDUs as defined in the ISO-IEC 7816-4 specification.</target>
          </segment>
        </unit>
        <unit id="123">
          <segment state="initial" id="123">
            <source xml:space="preserve">Windows 10 supports ISO/IEC 14443-4 Type A technology for HCE apps.</source>
            <target xml:space="preserve">Windows 10 supports ISO/IEC 14443-4 Type A technology for HCE apps.</target>
          </segment>
        </unit>
        <unit id="124">
          <segment state="initial" id="124">
            <source xml:space="preserve">Type B, type F, and non-ISO-DEP (eg MIFARE) technologies are routed to the SIM by default.</source>
            <target xml:space="preserve">Type B, type F, and non-ISO-DEP (eg MIFARE) technologies are routed to the SIM by default.</target>
          </segment>
        </unit>
        <unit id="125">
          <segment state="initial" id="125">
            <source xml:space="preserve">Only Windows 10 Mobile devices are enabled with the card emulation feature.</source>
            <target xml:space="preserve">Only Windows 10 Mobile devices are enabled with the card emulation feature.</target>
          </segment>
        </unit>
        <unit id="126">
          <segment state="initial" id="126">
            <source xml:space="preserve">SIM-based and HCE-based card emulation is not available on other versions of Windows 10.</source>
            <target xml:space="preserve">SIM-based and HCE-based card emulation is not available on other versions of Windows 10.</target>
          </segment>
        </unit>
        <unit id="127">
          <segment state="initial" id="127">
            <source xml:space="preserve">The architecture for HCE and SIM based card emulation support is shown in the diagram below.</source>
            <target xml:space="preserve">The architecture for HCE and SIM based card emulation support is shown in the diagram below.</target>
          </segment>
        </unit>
        <unit id="128">
          <originalData>
            <data id="id1">&lt;linkText&gt;</data>
            <data id="id2">&lt;/linkText&gt;</data>
          </originalData>
          <segment state="initial" id="128">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1"></pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1"></pc>
						</target>
          </segment>
        </unit>
        <unit id="129">
          <segment state="initial" id="129">
            <source xml:space="preserve">App selection and AID routing</source>
            <target xml:space="preserve">App selection and AID routing</target>
          </segment>
        </unit>
        <unit id="130">
          <segment state="initial" id="130">
            <source xml:space="preserve">To develop an HCE app, you must understand how Windows 10 Mobile devices route AIDs to a specific app because users can install multiple different HCE apps.</source>
            <target xml:space="preserve">To develop an HCE app, you must understand how Windows 10 Mobile devices route AIDs to a specific app because users can install multiple different HCE apps.</target>
          </segment>
        </unit>
        <unit id="131">
          <segment state="initial" id="131">
            <source xml:space="preserve">Each app can register multiple HCE and SIM-based cards.</source>
            <target xml:space="preserve">Each app can register multiple HCE and SIM-based cards.</target>
          </segment>
        </unit>
        <unit id="132">
          <segment state="initial" id="132">
            <source xml:space="preserve">Legacy Windows Phone 8.1 apps that are SIM-based will continue to work on Windows 10 Mobile as long as the user chooses the "SIM Card" option as their default payment card in the NFC Setting menu.</source>
            <target xml:space="preserve">Legacy Windows Phone 8.1 apps that are SIM-based will continue to work on Windows 10 Mobile as long as the user chooses the "SIM Card" option as their default payment card in the NFC Setting menu.</target>
          </segment>
        </unit>
        <unit id="133">
          <segment state="initial" id="133">
            <source xml:space="preserve">This is set by default when turning the device on for the first time.</source>
            <target xml:space="preserve">This is set by default when turning the device on for the first time.</target>
          </segment>
        </unit>
        <unit id="134">
          <segment state="initial" id="134">
            <source xml:space="preserve">When the user taps their Windows 10 Mobile device to a terminal, the data is automatically routed to the proper app installed on the device.</source>
            <target xml:space="preserve">When the user taps their Windows 10 Mobile device to a terminal, the data is automatically routed to the proper app installed on the device.</target>
          </segment>
        </unit>
        <unit id="135">
          <segment state="initial" id="135">
            <source xml:space="preserve">This routing is based on the applet IDs (AIDs) which are 5-16 byte identifiers.</source>
            <target xml:space="preserve">This routing is based on the applet IDs (AIDs) which are 5-16 byte identifiers.</target>
          </segment>
        </unit>
        <unit id="136">
          <segment state="initial" id="136">
            <source xml:space="preserve">During a tap, the external terminal will transmit a SELECT command APDU to specify the AID it would like all subsequent APDU commands to be routed to.</source>
            <target xml:space="preserve">During a tap, the external terminal will transmit a SELECT command APDU to specify the AID it would like all subsequent APDU commands to be routed to.</target>
          </segment>
        </unit>
        <unit id="137">
          <segment state="initial" id="137">
            <source xml:space="preserve">Subsequent SELECT commands, will change the routing again.</source>
            <target xml:space="preserve">Subsequent SELECT commands, will change the routing again.</target>
          </segment>
        </unit>
        <unit id="138">
          <segment state="initial" id="138">
            <source xml:space="preserve">Based on the AIDs registered by apps and user settings, the APDU traffic is routed to a specific app, which will send a response APDU.</source>
            <target xml:space="preserve">Based on the AIDs registered by apps and user settings, the APDU traffic is routed to a specific app, which will send a response APDU.</target>
          </segment>
        </unit>
        <unit id="139">
          <segment state="initial" id="139">
            <source xml:space="preserve">Be aware that a terminal may want to communicate with several different apps during the same tap.</source>
            <target xml:space="preserve">Be aware that a terminal may want to communicate with several different apps during the same tap.</target>
          </segment>
        </unit>
        <unit id="140">
          <segment state="initial" id="140">
            <source xml:space="preserve">So you must ensure your app's background task exits as quickly as possible when deactivated to make room for another app's background task to respond to the APDU.</source>
            <target xml:space="preserve">So you must ensure your app's background task exits as quickly as possible when deactivated to make room for another app's background task to respond to the APDU.</target>
          </segment>
        </unit>
        <unit id="141">
          <segment state="initial" id="141">
            <source xml:space="preserve">We will discuss background tasks later in this topic.</source>
            <target xml:space="preserve">We will discuss background tasks later in this topic.</target>
          </segment>
        </unit>
        <unit id="142">
          <segment state="initial" id="142">
            <source xml:space="preserve">HCE apps must register themselves with particular AIDs they can handle so they will receive APDUs for an AID.</source>
            <target xml:space="preserve">HCE apps must register themselves with particular AIDs they can handle so they will receive APDUs for an AID.</target>
          </segment>
        </unit>
        <unit id="143">
          <segment state="initial" id="143">
            <source xml:space="preserve">Apps decalre AIDs by using AID groups.</source>
            <target xml:space="preserve">Apps decalre AIDs by using AID groups.</target>
          </segment>
        </unit>
        <unit id="144">
          <segment state="initial" id="144">
            <source xml:space="preserve">An AID group is conceptually equivalent to an individual physical card.</source>
            <target xml:space="preserve">An AID group is conceptually equivalent to an individual physical card.</target>
          </segment>
        </unit>
        <unit id="145">
          <segment state="initial" id="145">
            <source xml:space="preserve">For example, one credit card is declared with an AID group and a second credit card from a different bank is declared with a different, second AID group, even though both of them may have the same AID.</source>
            <target xml:space="preserve">For example, one credit card is declared with an AID group and a second credit card from a different bank is declared with a different, second AID group, even though both of them may have the same AID.</target>
          </segment>
        </unit>
        <unit id="146">
          <segment state="initial" id="146">
            <source xml:space="preserve">Conflict resolution for payment AID groups</source>
            <target xml:space="preserve">Conflict resolution for payment AID groups</target>
          </segment>
        </unit>
        <unit id="147">
          <segment state="initial" id="147">
            <source xml:space="preserve">When an app registers physical cards (AID groups), it can declare the AID group category as either "Payment" or "Other."</source>
            <target xml:space="preserve">When an app registers physical cards (AID groups), it can declare the AID group category as either "Payment" or "Other."</target>
          </segment>
        </unit>
        <unit id="148">
          <segment state="initial" id="148">
            <source xml:space="preserve">While there can be multiple payment AID groups registered at any given time, only one of these payment AID groups may be enabled for Tap and Pay at a time, which is selected by the user.</source>
            <target xml:space="preserve">While there can be multiple payment AID groups registered at any given time, only one of these payment AID groups may be enabled for Tap and Pay at a time, which is selected by the user.</target>
          </segment>
        </unit>
        <unit id="149">
          <segment state="initial" id="149">
            <source xml:space="preserve">This behavior exists because the user expects be in control of consciously choosing a single payment, credit, or debit card to use so they don't pay with a different unintended card when tapping their device to a terminal.</source>
            <target xml:space="preserve">This behavior exists because the user expects be in control of consciously choosing a single payment, credit, or debit card to use so they don't pay with a different unintended card when tapping their device to a terminal.</target>
          </segment>
        </unit>
        <unit id="150">
          <segment state="initial" id="150">
            <source xml:space="preserve">However, multiple AID groups registered as "Other" can be enabled at the same time without user interaction.</source>
            <target xml:space="preserve">However, multiple AID groups registered as "Other" can be enabled at the same time without user interaction.</target>
          </segment>
        </unit>
        <unit id="151">
          <segment state="initial" id="151">
            <source xml:space="preserve">This behavior exists because other types of cards like loyalty, coupons, or transit are expected to just work without any effort or prompting whenever they tap their phone.</source>
            <target xml:space="preserve">This behavior exists because other types of cards like loyalty, coupons, or transit are expected to just work without any effort or prompting whenever they tap their phone.</target>
          </segment>
        </unit>
        <unit id="152">
          <segment state="initial" id="152">
            <source xml:space="preserve">All the AID groups that are registered as "Payment" appear in the list of cards in the NFC Settings page, where the user can select their default payment card.</source>
            <target xml:space="preserve">All the AID groups that are registered as "Payment" appear in the list of cards in the NFC Settings page, where the user can select their default payment card.</target>
          </segment>
        </unit>
        <unit id="153">
          <segment state="initial" id="153">
            <source xml:space="preserve">When a default payment card is selected, the app that registered this payment AID group becomes the default payment app.</source>
            <target xml:space="preserve">When a default payment card is selected, the app that registered this payment AID group becomes the default payment app.</target>
          </segment>
        </unit>
        <unit id="154">
          <segment state="initial" id="154">
            <source xml:space="preserve">Default payment apps can enable or disable any of their AID groups without user interaction.</source>
            <target xml:space="preserve">Default payment apps can enable or disable any of their AID groups without user interaction.</target>
          </segment>
        </unit>
        <unit id="155">
          <segment state="initial" id="155">
            <source xml:space="preserve">If the user declines the default payment app prompt, then the current default payment app (if any) continues to remain as default.</source>
            <target xml:space="preserve">If the user declines the default payment app prompt, then the current default payment app (if any) continues to remain as default.</target>
          </segment>
        </unit>
        <unit id="156">
          <segment state="initial" id="156">
            <source xml:space="preserve">The following screenshot shows the NFC Settings page.</source>
            <target xml:space="preserve">The following screenshot shows the NFC Settings page.</target>
          </segment>
        </unit>
        <unit id="157">
          <originalData>
            <data id="id1">&lt;linkText&gt;</data>
            <data id="id2">&lt;/linkText&gt;</data>
          </originalData>
          <segment state="initial" id="157">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1"></pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1"></pc>
						</target>
          </segment>
        </unit>
        <unit id="158">
          <segment state="initial" id="158">
            <source xml:space="preserve">Using the example screenshot above, if the user changes his default payment card to another card that is not registered by "HCE Application 1," the system creates a confirmation prompt for the user’s consent.</source>
            <target xml:space="preserve">Using the example screenshot above, if the user changes his default payment card to another card that is not registered by "HCE Application 1," the system creates a confirmation prompt for the user’s consent.</target>
          </segment>
        </unit>
        <unit id="159">
          <segment state="initial" id="159">
            <source xml:space="preserve">However, if the user changes his default payment card to another card that is registered by "HCE Application 1," the system does not create a confirmation prompt for the user, because "HCE Application1" is already the default payment app.</source>
            <target xml:space="preserve">However, if the user changes his default payment card to another card that is registered by "HCE Application 1," the system does not create a confirmation prompt for the user, because "HCE Application1" is already the default payment app.</target>
          </segment>
        </unit>
        <unit id="160">
          <segment state="initial" id="160">
            <source xml:space="preserve">Conflict resolution for non-payment AID groups</source>
            <target xml:space="preserve">Conflict resolution for non-payment AID groups</target>
          </segment>
        </unit>
        <unit id="161">
          <segment state="initial" id="161">
            <source xml:space="preserve">Non-payment cards categorized as "Other" do not appear in the NFC settings page.</source>
            <target xml:space="preserve">Non-payment cards categorized as "Other" do not appear in the NFC settings page.</target>
          </segment>
        </unit>
        <unit id="162">
          <segment state="initial" id="162">
            <source xml:space="preserve">Your app can create, register and enable non-payment AID groups in the same manner as payment AID groups.</source>
            <target xml:space="preserve">Your app can create, register and enable non-payment AID groups in the same manner as payment AID groups.</target>
          </segment>
        </unit>
        <unit id="163">
          <segment state="initial" id="163">
            <source xml:space="preserve">The main difference is that for non-payment AID groups the emulation category is set to "Other" as opposed to "Payment".</source>
            <target xml:space="preserve">The main difference is that for non-payment AID groups the emulation category is set to "Other" as opposed to "Payment".</target>
          </segment>
        </unit>
        <unit id="164">
          <segment state="initial" id="164">
            <source xml:space="preserve">After registering the AID group with the system, you need to enable the AID group to receive NFC traffic.</source>
            <target xml:space="preserve">After registering the AID group with the system, you need to enable the AID group to receive NFC traffic.</target>
          </segment>
        </unit>
        <unit id="165">
          <segment state="initial" id="165">
            <source xml:space="preserve">When you try to enable a non-payment AID group to receive traffic, the user is not prompted for a confirmation unless there is a conflict with one of the AIDs already registered in the system by a different app.</source>
            <target xml:space="preserve">When you try to enable a non-payment AID group to receive traffic, the user is not prompted for a confirmation unless there is a conflict with one of the AIDs already registered in the system by a different app.</target>
          </segment>
        </unit>
        <unit id="166">
          <segment state="initial" id="166">
            <source xml:space="preserve">If there is a conflict, the user will be prompted with information about which card and it's associated app will be disabled if the user chooses to enable the newly registered AID group.</source>
            <target xml:space="preserve">If there is a conflict, the user will be prompted with information about which card and it's associated app will be disabled if the user chooses to enable the newly registered AID group.</target>
          </segment>
        </unit>
        <unit id="167">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="167">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Coexistence with SIM based NFC applications</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Coexistence with SIM based NFC applications</pc>
						</target>
          </segment>
        </unit>
        <unit id="168">
          <segment state="initial" id="168">
            <source xml:space="preserve">In Windows 10 Mobile, the system sets up the NFC controller routing table that is used to make routing decisions at the controller layer.</source>
            <target xml:space="preserve">In Windows 10 Mobile, the system sets up the NFC controller routing table that is used to make routing decisions at the controller layer.</target>
          </segment>
        </unit>
        <unit id="169">
          <segment state="initial" id="169">
            <source xml:space="preserve">The table contains routing information for the following items.</source>
            <target xml:space="preserve">The table contains routing information for the following items.</target>
          </segment>
        </unit>
        <unit id="170">
          <segment state="initial" id="170">
            <source xml:space="preserve">Individual AID routes.</source>
            <target xml:space="preserve">Individual AID routes.</target>
          </segment>
        </unit>
        <unit id="171">
          <segment state="initial" id="171">
            <source xml:space="preserve">Protocol based route (ISO-DEP).</source>
            <target xml:space="preserve">Protocol based route (ISO-DEP).</target>
          </segment>
        </unit>
        <unit id="172">
          <segment state="initial" id="172">
            <source xml:space="preserve">Technology based routing (NFC-A/B/F).</source>
            <target xml:space="preserve">Technology based routing (NFC-A/B/F).</target>
          </segment>
        </unit>
        <unit id="173">
          <segment state="initial" id="173">
            <source xml:space="preserve">When an external reader sends a "SELECT AID" command, the NFC controller first checks AID routes in the routing table for a match.</source>
            <target xml:space="preserve">When an external reader sends a "SELECT AID" command, the NFC controller first checks AID routes in the routing table for a match.</target>
          </segment>
        </unit>
        <unit id="174">
          <segment state="initial" id="174">
            <source xml:space="preserve">If there is no match, it will use the protocol-based route as the default route for ISO-DEP (14443-4-A) traffic.</source>
            <target xml:space="preserve">If there is no match, it will use the protocol-based route as the default route for ISO-DEP (14443-4-A) traffic.</target>
          </segment>
        </unit>
        <unit id="175">
          <segment state="initial" id="175">
            <source xml:space="preserve">For any other non-ISO-DEP traffic it will use the technology based routing.</source>
            <target xml:space="preserve">For any other non-ISO-DEP traffic it will use the technology based routing.</target>
          </segment>
        </unit>
        <unit id="176">
          <segment state="initial" id="176">
            <source xml:space="preserve">Windows 10 Mobile provides a menu option "SIM Card" in the NFC Settings page to continue to use legacy Windows Phone 8.1 SIM-based apps, which do not register their AIDs with the system.</source>
            <target xml:space="preserve">Windows 10 Mobile provides a menu option "SIM Card" in the NFC Settings page to continue to use legacy Windows Phone 8.1 SIM-based apps, which do not register their AIDs with the system.</target>
          </segment>
        </unit>
        <unit id="177">
          <segment state="initial" id="177">
            <source xml:space="preserve">If the user selects "SIM card" as their default payment card, then the ISO-DEP route is set to UICC, for all other selections in the drop-down menu the ISO-DEP route is to the host.</source>
            <target xml:space="preserve">If the user selects "SIM card" as their default payment card, then the ISO-DEP route is set to UICC, for all other selections in the drop-down menu the ISO-DEP route is to the host.</target>
          </segment>
        </unit>
        <unit id="178">
          <segment state="initial" id="178">
            <source xml:space="preserve">The ISO-DEP route is set to "SIM Card" for devices that have an SE enabled SIM card when the device is booted for the first time with Windows 10 Mobile.</source>
            <target xml:space="preserve">The ISO-DEP route is set to "SIM Card" for devices that have an SE enabled SIM card when the device is booted for the first time with Windows 10 Mobile.</target>
          </segment>
        </unit>
        <unit id="179">
          <segment state="initial" id="179">
            <source xml:space="preserve">When the user installs an HCE enabled app and that app enables any HCE AID group registrations, the ISO-DEP route will be pointed to the host.</source>
            <target xml:space="preserve">When the user installs an HCE enabled app and that app enables any HCE AID group registrations, the ISO-DEP route will be pointed to the host.</target>
          </segment>
        </unit>
        <unit id="180">
          <segment state="initial" id="180">
            <source xml:space="preserve">New SIM-based applications need to register the AIDs in the SIM in order for the specific AID routes to be populated in the controller routing table.</source>
            <target xml:space="preserve">New SIM-based applications need to register the AIDs in the SIM in order for the specific AID routes to be populated in the controller routing table.</target>
          </segment>
        </unit>
        <unit id="181">
          <segment state="initial" id="181">
            <source xml:space="preserve">Creating an HCE based app</source>
            <target xml:space="preserve">Creating an HCE based app</target>
          </segment>
        </unit>
        <unit id="182">
          <segment state="initial" id="182">
            <source xml:space="preserve">Your HCE app has two parts.</source>
            <target xml:space="preserve">Your HCE app has two parts.</target>
          </segment>
        </unit>
        <unit id="183">
          <segment state="initial" id="183">
            <source xml:space="preserve">The main foreground app for the user interaction.</source>
            <target xml:space="preserve">The main foreground app for the user interaction.</target>
          </segment>
        </unit>
        <unit id="184">
          <segment state="initial" id="184">
            <source xml:space="preserve">A background task that is triggered by the system to process APDUs for a given AID.</source>
            <target xml:space="preserve">A background task that is triggered by the system to process APDUs for a given AID.</target>
          </segment>
        </unit>
        <unit id="185">
          <segment state="initial" id="185">
            <source xml:space="preserve">Because of the extremely tight performance requirements for loading your background task in response to an NFC tap, we recommend that your entire background task be implementing in C++/CX native code (including any dependencies, references, or libraries you depend on) rather than C\# or managed code.</source>
            <target xml:space="preserve">Because of the extremely tight performance requirements for loading your background task in response to an NFC tap, we recommend that your entire background task be implementing in C++/CX native code (including any dependencies, references, or libraries you depend on) rather than C\# or managed code.</target>
          </segment>
        </unit>
        <unit id="186">
          <segment state="initial" id="186">
            <source xml:space="preserve">While C\# and managed code normally performs well, there is overhead, like loading the .NET CLR, that can be avoided by writing it in C++/CX.</source>
            <target xml:space="preserve">While C\# and managed code normally performs well, there is overhead, like loading the .NET CLR, that can be avoided by writing it in C++/CX.</target>
          </segment>
        </unit>
        <unit id="187">
          <segment state="initial" id="187">
            <source xml:space="preserve">Create and register your background task</source>
            <target xml:space="preserve">Create and register your background task</target>
          </segment>
        </unit>
        <unit id="188">
          <segment state="initial" id="188">
            <source xml:space="preserve">You need to create a background task in your HCE app for processing and responding to APDUs routed to it by the system.</source>
            <target xml:space="preserve">You need to create a background task in your HCE app for processing and responding to APDUs routed to it by the system.</target>
          </segment>
        </unit>
        <unit id="189">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="189">
            <source xml:space="preserve">During the first time your app is launched, the foreground registers an HCE background task that implements the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**IBackgroundTaskRegistration**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> interface as shown in the following code.</source>
            <target xml:space="preserve">During the first time your app is launched, the foreground registers an HCE background task that implements the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**IBackgroundTaskRegistration**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> interface as shown in the following code.</target>
          </segment>
        </unit>
        <unit id="190">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="190">
            <source xml:space="preserve">Notice that the task trigger is set to <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**SmartCardTriggerType**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>.</source>
            <target xml:space="preserve">Notice that the task trigger is set to <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**SmartCardTriggerType**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>.</target>
          </segment>
        </unit>
        <unit id="191">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="191">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">EmulatorHostApplicationActivated</pc>.</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">EmulatorHostApplicationActivated</pc>.</target>
          </segment>
        </unit>
        <unit id="192">
          <segment state="initial" id="192">
            <source xml:space="preserve">This means that whenever a SELECT AID command APDU is received by the OS resolving to your app, your background task will be launched.</source>
            <target xml:space="preserve">This means that whenever a SELECT AID command APDU is received by the OS resolving to your app, your background task will be launched.</target>
          </segment>
        </unit>
        <unit id="193">
          <segment state="initial" id="193">
            <source xml:space="preserve">Receive and respond to APDUs</source>
            <target xml:space="preserve">Receive and respond to APDUs</target>
          </segment>
        </unit>
        <unit id="194">
          <segment state="initial" id="194">
            <source xml:space="preserve">When there is an APDU targeted for your app, the system will launch your background task.</source>
            <target xml:space="preserve">When there is an APDU targeted for your app, the system will launch your background task.</target>
          </segment>
        </unit>
        <unit id="195">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;link&gt;</data>
            <data id="id8">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id13">&lt;link&gt;</data>
            <data id="id14">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="195">
            <source xml:space="preserve">Your background task receives the APDU passed through the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**SmartCardEmulatorApduReceivedEventArgs**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> object’s <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**CommandApdu**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc> property and responds to the APDU using the <pc dataRefEnd="id14" dataRefStart="id13" id="6CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="6CapsExtId2">**TryRespondAsync**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="6CapsExtId3"></pc></pc> method of the same object.</source>
            <target xml:space="preserve">Your background task receives the APDU passed through the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**SmartCardEmulatorApduReceivedEventArgs**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> object’s <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**CommandApdu**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc> property and responds to the APDU using the <pc dataRefEnd="id14" dataRefStart="id13" id="6CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="6CapsExtId2">**TryRespondAsync**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="6CapsExtId3"></pc></pc> method of the same object.</target>
          </segment>
        </unit>
        <unit id="196">
          <segment state="initial" id="196">
            <source xml:space="preserve">Consider keeping your background task for light operations for performance reasons.</source>
            <target xml:space="preserve">Consider keeping your background task for light operations for performance reasons.</target>
          </segment>
        </unit>
        <unit id="197">
          <segment state="initial" id="197">
            <source xml:space="preserve">For example, respond to the APDUs immediately and exit your background task when all processing is complete.</source>
            <target xml:space="preserve">For example, respond to the APDUs immediately and exit your background task when all processing is complete.</target>
          </segment>
        </unit>
        <unit id="198">
          <segment state="initial" id="198">
            <source xml:space="preserve">Due to the nature of NFC transactions, users tend to hold their device against the reader for only a very short amount of time.</source>
            <target xml:space="preserve">Due to the nature of NFC transactions, users tend to hold their device against the reader for only a very short amount of time.</target>
          </segment>
        </unit>
        <unit id="199">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="199">
            <source xml:space="preserve">Your background task will continue to receive traffic from the reader until your connection is deactivated, in which case you will receive a <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**SmartCardEmulatorConnectionDeactivatedEventArgs**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> object.</source>
            <target xml:space="preserve">Your background task will continue to receive traffic from the reader until your connection is deactivated, in which case you will receive a <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**SmartCardEmulatorConnectionDeactivatedEventArgs**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> object.</target>
          </segment>
        </unit>
        <unit id="200">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="200">
            <source xml:space="preserve">Your connection can be deactivated because of the following reasons as indicated in the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**SmartCardEmulatorConnectionDeactivatedEventArgs.Reason**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> property.</source>
            <target xml:space="preserve">Your connection can be deactivated because of the following reasons as indicated in the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**SmartCardEmulatorConnectionDeactivatedEventArgs.Reason**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> property.</target>
          </segment>
        </unit>
        <unit id="201">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="201">
            <source xml:space="preserve">If the connection is deactivated with the <pc dataRefEnd="id2" dataRefStart="id1" id="2">ConnectionLost</pc> value, it means that the user pulled their device away from the reader.</source>
            <target xml:space="preserve">If the connection is deactivated with the <pc dataRefEnd="id2" dataRefStart="id1" id="2">ConnectionLost</pc> value, it means that the user pulled their device away from the reader.</target>
          </segment>
        </unit>
        <unit id="202">
          <segment state="initial" id="202">
            <source xml:space="preserve">If your app needs the user to tap to the terminal longer, you might want to consider prompting them with feedback.</source>
            <target xml:space="preserve">If your app needs the user to tap to the terminal longer, you might want to consider prompting them with feedback.</target>
          </segment>
        </unit>
        <unit id="203">
          <segment state="initial" id="203">
            <source xml:space="preserve">You should terminate your background task quickly (by completing your deferral) to ensure if they tap again it won’t be delayed waiting for the previous background task to exit.</source>
            <target xml:space="preserve">You should terminate your background task quickly (by completing your deferral) to ensure if they tap again it won’t be delayed waiting for the previous background task to exit.</target>
          </segment>
        </unit>
        <unit id="204">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="204">
            <source xml:space="preserve">If the connection is deactivated with the <pc dataRefEnd="id2" dataRefStart="id1" id="2">ConnectionRedirected</pc>, it means that the terminal sent a new SELECT AID command APDU directed to a different AID.</source>
            <target xml:space="preserve">If the connection is deactivated with the <pc dataRefEnd="id2" dataRefStart="id1" id="2">ConnectionRedirected</pc>, it means that the terminal sent a new SELECT AID command APDU directed to a different AID.</target>
          </segment>
        </unit>
        <unit id="205">
          <segment state="initial" id="205">
            <source xml:space="preserve">In this case, your app should exit the background task immediately (by completing your deferral) to allow another background task to run.</source>
            <target xml:space="preserve">In this case, your app should exit the background task immediately (by completing your deferral) to allow another background task to run.</target>
          </segment>
        </unit>
        <unit id="206">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;link&gt;</data>
            <data id="id8">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="206">
            <source xml:space="preserve">The background task should also register for the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**Canceled event**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> on <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**IBackgroundTaskInstance interface**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc>, and likewise quickly exit the background task (by completing your deferral) because this event is fired by the system when it is finished with your background task.</source>
            <target xml:space="preserve">The background task should also register for the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**Canceled event**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> on <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**IBackgroundTaskInstance interface**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc>, and likewise quickly exit the background task (by completing your deferral) because this event is fired by the system when it is finished with your background task.</target>
          </segment>
        </unit>
        <unit id="207">
          <segment state="initial" id="207">
            <source xml:space="preserve">Below is code that demonstrates an HCE app background task.</source>
            <target xml:space="preserve">Below is code that demonstrates an HCE app background task.</target>
          </segment>
        </unit>
        <unit id="208">
          <segment state="initial" id="208">
            <source xml:space="preserve">Create and register AID groups</source>
            <target xml:space="preserve">Create and register AID groups</target>
          </segment>
        </unit>
        <unit id="209">
          <segment state="initial" id="209">
            <source xml:space="preserve">During the first launch of your application when the card is being provisioned, you will create and register AID groups with the system.</source>
            <target xml:space="preserve">During the first launch of your application when the card is being provisioned, you will create and register AID groups with the system.</target>
          </segment>
        </unit>
        <unit id="210">
          <segment state="initial" id="210">
            <source xml:space="preserve">The system determines the app that an external reader would like to talk to and route APDUs accordingly based on the registered AIDs and user settings.</source>
            <target xml:space="preserve">The system determines the app that an external reader would like to talk to and route APDUs accordingly based on the registered AIDs and user settings.</target>
          </segment>
        </unit>
        <unit id="211">
          <segment state="initial" id="211">
            <source xml:space="preserve">Most of the payment cards register for the same AID (which is PPSE AID) along with additional payment network card specific AIDs.</source>
            <target xml:space="preserve">Most of the payment cards register for the same AID (which is PPSE AID) along with additional payment network card specific AIDs.</target>
          </segment>
        </unit>
        <unit id="212">
          <segment state="initial" id="212">
            <source xml:space="preserve">Each AID group represents a card and when the user enables the card, all AIDs in the group are enabled.</source>
            <target xml:space="preserve">Each AID group represents a card and when the user enables the card, all AIDs in the group are enabled.</target>
          </segment>
        </unit>
        <unit id="213">
          <segment state="initial" id="213">
            <source xml:space="preserve">Similarly, when the user deactivates the card, all AIDs in the group are disabled.</source>
            <target xml:space="preserve">Similarly, when the user deactivates the card, all AIDs in the group are disabled.</target>
          </segment>
        </unit>
        <unit id="214">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="214">
            <source xml:space="preserve">To register an AID group, you need to create a <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**SmartCardAppletIdGroup**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> object and set its properties to reflect that this is an HCE-based payment card.</source>
            <target xml:space="preserve">To register an AID group, you need to create a <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**SmartCardAppletIdGroup**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> object and set its properties to reflect that this is an HCE-based payment card.</target>
          </segment>
        </unit>
        <unit id="215">
          <segment state="initial" id="215">
            <source xml:space="preserve">Your display name should be descriptive to the user because it will show up in the NFC settings menu as well as user prompts.</source>
            <target xml:space="preserve">Your display name should be descriptive to the user because it will show up in the NFC settings menu as well as user prompts.</target>
          </segment>
        </unit>
        <unit id="216">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;strong&gt;</data>
            <data id="id8">&lt;/strong&gt;</data>
            <data id="id9">&lt;link&gt;</data>
            <data id="id10">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id15">&lt;strong&gt;</data>
            <data id="id16">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="216">
            <source xml:space="preserve">For HCE payment cards, the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**SmartCardEmulationCategory**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> property should be set to <pc dataRefEnd="id8" dataRefStart="id7" id="4">Payment</pc> and the <pc dataRefEnd="id10" dataRefStart="id9" id="6CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="6CapsExtId2">**SmartCardEmulationType**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="6CapsExtId3"></pc></pc> property should be set to <pc dataRefEnd="id16" dataRefStart="id15" id="8">Host</pc>.</source>
            <target xml:space="preserve">For HCE payment cards, the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**SmartCardEmulationCategory**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> property should be set to <pc dataRefEnd="id8" dataRefStart="id7" id="4">Payment</pc> and the <pc dataRefEnd="id10" dataRefStart="id9" id="6CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="6CapsExtId2">**SmartCardEmulationType**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="6CapsExtId3"></pc></pc> property should be set to <pc dataRefEnd="id16" dataRefStart="id15" id="8">Host</pc>.</target>
          </segment>
        </unit>
        <unit id="217">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;strong&gt;</data>
            <data id="id8">&lt;/strong&gt;</data>
            <data id="id9">&lt;link&gt;</data>
            <data id="id10">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id15">&lt;strong&gt;</data>
            <data id="id16">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="217">
            <source xml:space="preserve">For non-payment HCE cards, the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**SmartCardEmulationCategory**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> property should be set to <pc dataRefEnd="id8" dataRefStart="id7" id="4">Other</pc> and the <pc dataRefEnd="id10" dataRefStart="id9" id="6CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="6CapsExtId2">**SmartCardEmulationType**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="6CapsExtId3"></pc></pc> property should be set to <pc dataRefEnd="id16" dataRefStart="id15" id="8">Host</pc>.</source>
            <target xml:space="preserve">For non-payment HCE cards, the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**SmartCardEmulationCategory**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> property should be set to <pc dataRefEnd="id8" dataRefStart="id7" id="4">Other</pc> and the <pc dataRefEnd="id10" dataRefStart="id9" id="6CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="6CapsExtId2">**SmartCardEmulationType**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="6CapsExtId3"></pc></pc> property should be set to <pc dataRefEnd="id16" dataRefStart="id15" id="8">Host</pc>.</target>
          </segment>
        </unit>
        <unit id="218">
          <segment state="initial" id="218">
            <source xml:space="preserve">You can include up to 9 AIDs (of length 5-16 bytes each) per AID group.</source>
            <target xml:space="preserve">You can include up to 9 AIDs (of length 5-16 bytes each) per AID group.</target>
          </segment>
        </unit>
        <unit id="219">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;link&gt;</data>
            <data id="id8">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="219">
            <source xml:space="preserve">Use the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**RegisterAppletIdGroupAsync**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> method to register your AID group with the system, which will return a <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**SmartCardAppletIdGroupRegistration**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc> object.</source>
            <target xml:space="preserve">Use the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**RegisterAppletIdGroupAsync**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> method to register your AID group with the system, which will return a <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**SmartCardAppletIdGroupRegistration**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc> object.</target>
          </segment>
        </unit>
        <unit id="220">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;strong&gt;</data>
            <data id="id8">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="220">
            <source xml:space="preserve">By default, the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**ActivationPolicy**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> property of the registration object is set to <pc dataRefEnd="id8" dataRefStart="id7" id="4">Disabled</pc>.</source>
            <target xml:space="preserve">By default, the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**ActivationPolicy**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> property of the registration object is set to <pc dataRefEnd="id8" dataRefStart="id7" id="4">Disabled</pc>.</target>
          </segment>
        </unit>
        <unit id="221">
          <segment state="initial" id="221">
            <source xml:space="preserve">This means even though your AIDs are registered with the system, they are not enabled yet and won’t receive traffic.</source>
            <target xml:space="preserve">This means even though your AIDs are registered with the system, they are not enabled yet and won’t receive traffic.</target>
          </segment>
        </unit>
        <unit id="222">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;link&gt;</data>
            <data id="id8">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="222">
            <source xml:space="preserve">You can enable your registered cards (AID groups) by using the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**RequestActivationPolicyChangeAsync**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> method of the<pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**SmartCardAppletIdGroupRegistration**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc> class as shown below.</source>
            <target xml:space="preserve">You can enable your registered cards (AID groups) by using the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**RequestActivationPolicyChangeAsync**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> method of the<pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**SmartCardAppletIdGroupRegistration**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc> class as shown below.</target>
          </segment>
        </unit>
        <unit id="223">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;strong&gt;</data>
            <data id="id8">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="223">
            <source xml:space="preserve">Because only a single payment card can be enabled at a time on the system, setting the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**ActivationPolicy**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> of a payment AID group to <pc dataRefEnd="id8" dataRefStart="id7" id="4">Enabled</pc> is the same as setting the default payment card.</source>
            <target xml:space="preserve">Because only a single payment card can be enabled at a time on the system, setting the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**ActivationPolicy**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> of a payment AID group to <pc dataRefEnd="id8" dataRefStart="id7" id="4">Enabled</pc> is the same as setting the default payment card.</target>
          </segment>
        </unit>
        <unit id="224">
          <segment state="initial" id="224">
            <source xml:space="preserve">The user will be prompted to allow this card as a default payment card, regardless of whether there is a default payment card already selected or not.</source>
            <target xml:space="preserve">The user will be prompted to allow this card as a default payment card, regardless of whether there is a default payment card already selected or not.</target>
          </segment>
        </unit>
        <unit id="225">
          <segment state="initial" id="225">
            <source xml:space="preserve">This statement is not true if your app is already the default payment application, and is merely changing between it’s own AID groups.</source>
            <target xml:space="preserve">This statement is not true if your app is already the default payment application, and is merely changing between it’s own AID groups.</target>
          </segment>
        </unit>
        <unit id="226">
          <segment state="initial" id="226">
            <source xml:space="preserve">You can register up to 10 AID groups per app.</source>
            <target xml:space="preserve">You can register up to 10 AID groups per app.</target>
          </segment>
        </unit>
        <unit id="227">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="227">
            <source xml:space="preserve">You can query your app’s registered AID groups with the OS and check their activation policy using the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**GetAppletIdGroupRegistrationsAsync**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> method.</source>
            <target xml:space="preserve">You can query your app’s registered AID groups with the OS and check their activation policy using the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**GetAppletIdGroupRegistrationsAsync**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> method.</target>
          </segment>
        </unit>
        <unit id="228">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;strong&gt;</data>
            <data id="id4">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="228">
            <source xml:space="preserve">Users will be prompted when you change the activation policy of a payment card from <pc dataRefEnd="id2" dataRefStart="id1" id="2">Disabled</pc> to <pc dataRefEnd="id4" dataRefStart="id3" id="4">Enabled</pc>, only if your app is not already the default payment app.</source>
            <target xml:space="preserve">Users will be prompted when you change the activation policy of a payment card from <pc dataRefEnd="id2" dataRefStart="id1" id="2">Disabled</pc> to <pc dataRefEnd="id4" dataRefStart="id3" id="4">Enabled</pc>, only if your app is not already the default payment app.</target>
          </segment>
        </unit>
        <unit id="229">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;strong&gt;</data>
            <data id="id4">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="229">
            <source xml:space="preserve">Users will only be prompted when you change the activation policy of a non-payment card from <pc dataRefEnd="id2" dataRefStart="id1" id="2">Disabled</pc> to <pc dataRefEnd="id4" dataRefStart="id3" id="4">Enabled</pc> if there is an AID conflict.</source>
            <target xml:space="preserve">Users will only be prompted when you change the activation policy of a non-payment card from <pc dataRefEnd="id2" dataRefStart="id1" id="2">Disabled</pc> to <pc dataRefEnd="id4" dataRefStart="id3" id="4">Enabled</pc> if there is an AID conflict.</target>
          </segment>
        </unit>
        <unit id="230">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="230">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Event notification when activation policy change</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Event notification when activation policy change</pc>
						</target>
          </segment>
        </unit>
        <unit id="231">
          <segment state="initial" id="231">
            <source xml:space="preserve">In your background task, you can register to receive events for when the activation policy of one of your AID group registrations changes outside of your app.</source>
            <target xml:space="preserve">In your background task, you can register to receive events for when the activation policy of one of your AID group registrations changes outside of your app.</target>
          </segment>
        </unit>
        <unit id="232">
          <segment state="initial" id="232">
            <source xml:space="preserve">For example, the user may change the default payment app through the NFC settings menu from one of your cards to another card hosted by another app.</source>
            <target xml:space="preserve">For example, the user may change the default payment app through the NFC settings menu from one of your cards to another card hosted by another app.</target>
          </segment>
        </unit>
        <unit id="233">
          <segment state="initial" id="233">
            <source xml:space="preserve">If your app needs to know about this change for internal setup such as updating live tiles, you can receive event notifications for this change and take action in your app accordingly.</source>
            <target xml:space="preserve">If your app needs to know about this change for internal setup such as updating live tiles, you can receive event notifications for this change and take action in your app accordingly.</target>
          </segment>
        </unit>
        <unit id="234">
          <segment state="initial" id="234">
            <source xml:space="preserve">Foreground override behavior</source>
            <target xml:space="preserve">Foreground override behavior</target>
          </segment>
        </unit>
        <unit id="235">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;strong&gt;</data>
            <data id="id8">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="235">
            <source xml:space="preserve">You can change the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**ActivationPolicy**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> of any of your AID group registrations to <pc dataRefEnd="id8" dataRefStart="id7" id="4">ForegroundOverride</pc> while your app is in the foreground without prompting the user.</source>
            <target xml:space="preserve">You can change the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**ActivationPolicy**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> of any of your AID group registrations to <pc dataRefEnd="id8" dataRefStart="id7" id="4">ForegroundOverride</pc> while your app is in the foreground without prompting the user.</target>
          </segment>
        </unit>
        <unit id="236">
          <segment state="initial" id="236">
            <source xml:space="preserve">When the user taps their device to a terminal while your app is in the foreground, the traffic is routed to your app even if none of your payment cards were chosen by the user as their default payment card.</source>
            <target xml:space="preserve">When the user taps their device to a terminal while your app is in the foreground, the traffic is routed to your app even if none of your payment cards were chosen by the user as their default payment card.</target>
          </segment>
        </unit>
        <unit id="237">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="237">
            <source xml:space="preserve">When you change a card’s activation policy to <pc dataRefEnd="id2" dataRefStart="id1" id="2">ForegroundOverride</pc>, this change is only temporary until your app leaves the foreground and it will not change the current default payment card set by the user.</source>
            <target xml:space="preserve">When you change a card’s activation policy to <pc dataRefEnd="id2" dataRefStart="id1" id="2">ForegroundOverride</pc>, this change is only temporary until your app leaves the foreground and it will not change the current default payment card set by the user.</target>
          </segment>
        </unit>
        <unit id="238">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="238">
            <source xml:space="preserve">You can change the <pc dataRefEnd="id2" dataRefStart="id1" id="2">ActivationPolicy</pc> of your payment or non-payment cards from your foreground app as follows.</source>
            <target xml:space="preserve">You can change the <pc dataRefEnd="id2" dataRefStart="id1" id="2">ActivationPolicy</pc> of your payment or non-payment cards from your foreground app as follows.</target>
          </segment>
        </unit>
        <unit id="239">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="239">
            <source xml:space="preserve">Note that the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**RequestActivationPolicyChangeAsync**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> method can only be called from a foreground app and cannot be called from a background task.</source>
            <target xml:space="preserve">Note that the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**RequestActivationPolicyChangeAsync**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> method can only be called from a foreground app and cannot be called from a background task.</target>
          </segment>
        </unit>
        <unit id="240">
          <segment state="initial" id="240">
            <source xml:space="preserve">Also, you can register an AID group consisting of a single 0-length AID which will cause the system to route all APDUs regardless of the AID and including any command APDUs sent before a SELECT AID command is received.</source>
            <target xml:space="preserve">Also, you can register an AID group consisting of a single 0-length AID which will cause the system to route all APDUs regardless of the AID and including any command APDUs sent before a SELECT AID command is received.</target>
          </segment>
        </unit>
        <unit id="241">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="241">
            <source xml:space="preserve">However, such an AID group only works while your app is in the foreground because it can only be set to <pc dataRefEnd="id2" dataRefStart="id1" id="2">ForegroundOverride</pc> and cannot be permanently enabled.</source>
            <target xml:space="preserve">However, such an AID group only works while your app is in the foreground because it can only be set to <pc dataRefEnd="id2" dataRefStart="id1" id="2">ForegroundOverride</pc> and cannot be permanently enabled.</target>
          </segment>
        </unit>
        <unit id="242">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;strong&gt;</data>
            <data id="id4">&lt;/strong&gt;</data>
            <data id="id5">&lt;link&gt;</data>
            <data id="id6">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="242">
            <source xml:space="preserve">Also, this mechanism works both for <pc dataRefEnd="id2" dataRefStart="id1" id="2">Host</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="4">UICC</pc> values of the <pc dataRefEnd="id6" dataRefStart="id5" id="6CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="6CapsExtId2">**SmartCardEmulationType**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="6CapsExtId3"></pc></pc> enumeration to either route all traffic to your HCE background task, or to the SIM card.</source>
            <target xml:space="preserve">Also, this mechanism works both for <pc dataRefEnd="id2" dataRefStart="id1" id="2">Host</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="4">UICC</pc> values of the <pc dataRefEnd="id6" dataRefStart="id5" id="6CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="6CapsExtId2">**SmartCardEmulationType**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="6CapsExtId3"></pc></pc> enumeration to either route all traffic to your HCE background task, or to the SIM card.</target>
          </segment>
        </unit>
        <unit id="243">
          <segment state="initial" id="243">
            <source xml:space="preserve">Check for NFC and HCE support</source>
            <target xml:space="preserve">Check for NFC and HCE support</target>
          </segment>
        </unit>
        <unit id="244">
          <segment state="initial" id="244">
            <source xml:space="preserve">Your app should check whether a device has NFC hardware, supports the card emulation feature, and supports host card emulation prior to offering such features to the user.</source>
            <target xml:space="preserve">Your app should check whether a device has NFC hardware, supports the card emulation feature, and supports host card emulation prior to offering such features to the user.</target>
          </segment>
        </unit>
        <unit id="245">
          <segment state="initial" id="245">
            <source xml:space="preserve">The NFC smart card emulation feature is only enabled on Windows 10 Mobile, so trying to use the smart card emulator APIs in any other versions of Windows 10, will cause errors.</source>
            <target xml:space="preserve">The NFC smart card emulation feature is only enabled on Windows 10 Mobile, so trying to use the smart card emulator APIs in any other versions of Windows 10, will cause errors.</target>
          </segment>
        </unit>
        <unit id="246">
          <segment state="initial" id="246">
            <source xml:space="preserve">You can check for smart card API support in the following code snippet.</source>
            <target xml:space="preserve">You can check for smart card API support in the following code snippet.</target>
          </segment>
        </unit>
        <unit id="247">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="247">
            <source xml:space="preserve">You can additionally check to see if the device has NFC hardware capable of some form of card emulation by checking if the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**SmartCardEmulator.GetDefaultAsync**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> method returns null.</source>
            <target xml:space="preserve">You can additionally check to see if the device has NFC hardware capable of some form of card emulation by checking if the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**SmartCardEmulator.GetDefaultAsync**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> method returns null.</target>
          </segment>
        </unit>
        <unit id="248">
          <segment state="initial" id="248">
            <source xml:space="preserve">If it does, then no NFC card emulation is supported on the device.</source>
            <target xml:space="preserve">If it does, then no NFC card emulation is supported on the device.</target>
          </segment>
        </unit>
        <unit id="249">
          <segment state="initial" id="249">
            <source xml:space="preserve">Support for HCE and AID-based UICC routing is only available on recently launched devices such as the Lumia 730, 830, 640, and 640 XL.</source>
            <target xml:space="preserve">Support for HCE and AID-based UICC routing is only available on recently launched devices such as the Lumia 730, 830, 640, and 640 XL.</target>
          </segment>
        </unit>
        <unit id="250">
          <segment state="initial" id="250">
            <source xml:space="preserve">Any new NFC capable devices running Windows 10 Mobile and after should support HCE.</source>
            <target xml:space="preserve">Any new NFC capable devices running Windows 10 Mobile and after should support HCE.</target>
          </segment>
        </unit>
        <unit id="251">
          <segment state="initial" id="251">
            <source xml:space="preserve">Your app can check for HCE support as follows.</source>
            <target xml:space="preserve">Your app can check for HCE support as follows.</target>
          </segment>
        </unit>
        <unit id="252">
          <segment state="initial" id="252">
            <source xml:space="preserve">Lock screen and screen off behavior</source>
            <target xml:space="preserve">Lock screen and screen off behavior</target>
          </segment>
        </unit>
        <unit id="253">
          <segment state="initial" id="253">
            <source xml:space="preserve">Windows 10 Mobile has device-level card emulation settings, which can be set by the mobile operator or the manufacturer of the device.</source>
            <target xml:space="preserve">Windows 10 Mobile has device-level card emulation settings, which can be set by the mobile operator or the manufacturer of the device.</target>
          </segment>
        </unit>
        <unit id="254">
          <segment state="initial" id="254">
            <source xml:space="preserve">By default, "tap to pay" toggle is disabled and the "enablement policy at device level" is set to "Always", unless the MO or OEM overwrites these values.</source>
            <target xml:space="preserve">By default, "tap to pay" toggle is disabled and the "enablement policy at device level" is set to "Always", unless the MO or OEM overwrites these values.</target>
          </segment>
        </unit>
        <unit id="255">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="255">
            <source xml:space="preserve">Your application can query the value of the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**EnablementPolicy**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> at device level and take action for each case depending on the desired behavior of your app in each state.</source>
            <target xml:space="preserve">Your application can query the value of the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**EnablementPolicy**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> at device level and take action for each case depending on the desired behavior of your app in each state.</target>
          </segment>
        </unit>
        <unit id="256">
          <segment state="initial" id="256">
            <source xml:space="preserve">Your app's background task will be launched even if the phone is locked and/or the screen is off only if the external reader selects an AID that resolves to your app.</source>
            <target xml:space="preserve">Your app's background task will be launched even if the phone is locked and/or the screen is off only if the external reader selects an AID that resolves to your app.</target>
          </segment>
        </unit>
        <unit id="257">
          <segment state="initial" id="257">
            <source xml:space="preserve">You can respond to the commands from the reader in your background task, but if you need any input from the user or if you want to show a message to the user, you can launch your foreground app with some arguments.</source>
            <target xml:space="preserve">You can respond to the commands from the reader in your background task, but if you need any input from the user or if you want to show a message to the user, you can launch your foreground app with some arguments.</target>
          </segment>
        </unit>
        <unit id="258">
          <segment state="initial" id="258">
            <source xml:space="preserve">Your background task can launch your foreground app with the following behavior.</source>
            <target xml:space="preserve">Your background task can launch your foreground app with the following behavior.</target>
          </segment>
        </unit>
        <unit id="259">
          <segment state="initial" id="259">
            <source xml:space="preserve">Under the device lock screen (the user will see your foreground app only after she unlocks the device)</source>
            <target xml:space="preserve">Under the device lock screen (the user will see your foreground app only after she unlocks the device)</target>
          </segment>
        </unit>
        <unit id="260">
          <segment state="initial" id="260">
            <source xml:space="preserve">Above the device lock screen (after the user dismisses your app, the device is still in locked state)</source>
            <target xml:space="preserve">Above the device lock screen (after the user dismisses your app, the device is still in locked state)</target>
          </segment>
        </unit>
        <unit id="261">
          <segment state="initial" id="261">
            <source xml:space="preserve">AID registration and other updates for SIM based apps</source>
            <target xml:space="preserve">AID registration and other updates for SIM based apps</target>
          </segment>
        </unit>
        <unit id="262">
          <segment state="initial" id="262">
            <source xml:space="preserve">Card emulation apps that use the SIM as the secure element can register with the Windows service to declare the AIDs supported on the SIM.</source>
            <target xml:space="preserve">Card emulation apps that use the SIM as the secure element can register with the Windows service to declare the AIDs supported on the SIM.</target>
          </segment>
        </unit>
        <unit id="263">
          <segment state="initial" id="263">
            <source xml:space="preserve">This registration is very similar to an HCE-based app registration.</source>
            <target xml:space="preserve">This registration is very similar to an HCE-based app registration.</target>
          </segment>
        </unit>
        <unit id="264">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="264">
            <source xml:space="preserve">The only difference is the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**SmartCardEmulationType**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>, which should be set to Uicc for SIM-based apps.</source>
            <target xml:space="preserve">The only difference is the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**SmartCardEmulationType**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>, which should be set to Uicc for SIM-based apps.</target>
          </segment>
        </unit>
        <unit id="265">
          <segment state="initial" id="265">
            <source xml:space="preserve">As the result of the payment card registration, the display name of the card will also be populated in the NFC setting menu.</source>
            <target xml:space="preserve">As the result of the payment card registration, the display name of the card will also be populated in the NFC setting menu.</target>
          </segment>
        </unit>
        <unit id="266">
          <originalData>
            <data id="id1">&lt;em&gt;</data>
            <data id="id2">&lt;/em&gt;</data>
          </originalData>
          <segment state="initial" id="266">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">* Important *</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">* Important *</pc>
						</target>
          </segment>
        </unit>
        <unit id="267">
          <segment state="initial" id="267">
            <source xml:space="preserve">The legacy binary SMS intercept support in Windows Phone 8.1 has been removed and replaced with new broader SMS support in Windows 10 Mobile, but any legacy Windows Phone 8.1 apps relying on that must update to use the new Windows 10 Mobile SMS APIs.</source>
            <target xml:space="preserve">The legacy binary SMS intercept support in Windows Phone 8.1 has been removed and replaced with new broader SMS support in Windows 10 Mobile, but any legacy Windows Phone 8.1 apps relying on that must update to use the new Windows 10 Mobile SMS APIs.</target>
          </segment>
        </unit>
      </group>
    </group>
  </file>
</xliff>