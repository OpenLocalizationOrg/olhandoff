<?xml version="1.0" encoding="utf-8"?>
<xliff srcLang="en-us" trgLang="de-de" version="2.0" xmlns="urn:oasis:names:tc:xliff:document:2.0" xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">2a517942d67a59f7b9ce4449d24a9a4d9ff3471d</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <group id="101">
        <unit id="101">
          <segment state="initial" id="101">
            <source xml:space="preserve">Use the orientation sensor</source>
            <target xml:space="preserve">Use the orientation sensor</target>
          </segment>
        </unit>
        <unit id="102">
          <segment state="initial" id="102">
            <source xml:space="preserve">\[ Updated for UWP apps on Windows 10.</source>
            <target xml:space="preserve">\[ Updated for UWP apps on Windows 10.</target>
          </segment>
        </unit>
        <unit id="103">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="103">
            <source xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">archive</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> \]</source>
            <target xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">archive</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> \]</target>
          </segment>
        </unit>
        <unit id="104">
          <originalData>
            <data id="id1">&lt;em&gt;</data>
            <data id="id2">&lt;/em&gt;</data>
          </originalData>
          <segment state="initial" id="104">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">* Important APIs *</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">* Important APIs *</pc>
						</target>
          </segment>
        </unit>
        <unit id="105">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="105">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**Windows.Devices.Sensors**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**Windows.Devices.Sensors**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</target>
          </segment>
        </unit>
        <unit id="106">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="106">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**OrientationSensor**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**OrientationSensor**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</target>
          </segment>
        </unit>
        <unit id="107">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="107">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**SimpleOrientation**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**SimpleOrientation**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</target>
          </segment>
        </unit>
        <unit id="108">
          <segment state="initial" id="108">
            <source xml:space="preserve">Learn how to use the orientation sensors to determine the device orientation.</source>
            <target xml:space="preserve">Learn how to use the orientation sensors to determine the device orientation.</target>
          </segment>
        </unit>
        <unit id="109">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;link&gt;</data>
            <data id="id8">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id13">&lt;link&gt;</data>
            <data id="id14">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="109">
            <source xml:space="preserve">There are two different types of orientation sensor APIs included in the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**Windows.Devices.Sensors**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> namespace: <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**OrientationSensor**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc> and <pc dataRefEnd="id14" dataRefStart="id13" id="6CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="6CapsExtId2">**SimpleOrientation**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="6CapsExtId3"></pc></pc>.</source>
            <target xml:space="preserve">There are two different types of orientation sensor APIs included in the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**Windows.Devices.Sensors**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> namespace: <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**OrientationSensor**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc> and <pc dataRefEnd="id14" dataRefStart="id13" id="6CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="6CapsExtId2">**SimpleOrientation**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="6CapsExtId3"></pc></pc>.</target>
          </segment>
        </unit>
        <unit id="110">
          <segment state="initial" id="110">
            <source xml:space="preserve">While both of these sensors are orientation sensors, that term is overloaded and they are used for very different purposes.</source>
            <target xml:space="preserve">While both of these sensors are orientation sensors, that term is overloaded and they are used for very different purposes.</target>
          </segment>
        </unit>
        <unit id="111">
          <segment state="initial" id="111">
            <source xml:space="preserve">However, since both are orientation sensors, they are both covered in this article.</source>
            <target xml:space="preserve">However, since both are orientation sensors, they are both covered in this article.</target>
          </segment>
        </unit>
        <unit id="112">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="112">
            <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**OrientationSensor**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> API is used for 3-D apps two obtain a quaternion and a rotation matrix.</source>
            <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**OrientationSensor**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> API is used for 3-D apps two obtain a quaternion and a rotation matrix.</target>
          </segment>
        </unit>
        <unit id="113">
          <segment state="initial" id="113">
            <source xml:space="preserve">A quaternion can be most easily understood as a rotation of a point \[x,y,z\] about an arbitrary axis (contrasted with a rotation matrix, which represents rotations around three axes).</source>
            <target xml:space="preserve">A quaternion can be most easily understood as a rotation of a point \[x,y,z\] about an arbitrary axis (contrasted with a rotation matrix, which represents rotations around three axes).</target>
          </segment>
        </unit>
        <unit id="114">
          <segment state="initial" id="114">
            <source xml:space="preserve">The mathematics behind quaternions is fairly exotic in that it involves the geometric properties of complex numbers and mathematical properties of imaginary numbers, but working with them is simple, and frameworks like DirectX support them.</source>
            <target xml:space="preserve">The mathematics behind quaternions is fairly exotic in that it involves the geometric properties of complex numbers and mathematical properties of imaginary numbers, but working with them is simple, and frameworks like DirectX support them.</target>
          </segment>
        </unit>
        <unit id="115">
          <segment state="initial" id="115">
            <source xml:space="preserve">A complex 3-D app can use the Orientation sensor to adjust the user's perspective.</source>
            <target xml:space="preserve">A complex 3-D app can use the Orientation sensor to adjust the user's perspective.</target>
          </segment>
        </unit>
        <unit id="116">
          <segment state="initial" id="116">
            <source xml:space="preserve">This sensor combines input from the accelerometer, gyrometer, and compass.</source>
            <target xml:space="preserve">This sensor combines input from the accelerometer, gyrometer, and compass.</target>
          </segment>
        </unit>
        <unit id="117">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="117">
            <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**SimpleOrientation**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> API is used to determine the current device orientation in terms of definitions like portrait up, portrait down, landscape left, and landscape right.</source>
            <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**SimpleOrientation**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> API is used to determine the current device orientation in terms of definitions like portrait up, portrait down, landscape left, and landscape right.</target>
          </segment>
        </unit>
        <unit id="118">
          <segment state="initial" id="118">
            <source xml:space="preserve">It can also detect if a device is face-up or face-down.</source>
            <target xml:space="preserve">It can also detect if a device is face-up or face-down.</target>
          </segment>
        </unit>
        <unit id="119">
          <segment state="initial" id="119">
            <source xml:space="preserve">Rather than returning properties like "portrait up" or "landscape left", this sensor returns a rotation value: "Not rotated", "Rotated90DegreesCounterclockwise", and so on.</source>
            <target xml:space="preserve">Rather than returning properties like "portrait up" or "landscape left", this sensor returns a rotation value: "Not rotated", "Rotated90DegreesCounterclockwise", and so on.</target>
          </segment>
        </unit>
        <unit id="120">
          <segment state="initial" id="120">
            <source xml:space="preserve">The following table maps common orientation properties to the corresponding sensor reading.</source>
            <target xml:space="preserve">The following table maps common orientation properties to the corresponding sensor reading.</target>
          </segment>
        </unit>
        <unit id="121">
          <segment state="initial" id="121">
            <source xml:space="preserve">Orientation</source>
            <target xml:space="preserve">Orientation</target>
          </segment>
        </unit>
        <unit id="122">
          <segment state="initial" id="122">
            <source xml:space="preserve">Corresponding sensor reading</source>
            <target xml:space="preserve">Corresponding sensor reading</target>
          </segment>
        </unit>
        <unit id="123">
          <segment state="initial" id="123">
            <source xml:space="preserve">Portrait Up</source>
            <target xml:space="preserve">Portrait Up</target>
          </segment>
        </unit>
        <unit id="124">
          <segment state="initial" id="124">
            <source xml:space="preserve">NotRotated</source>
            <target xml:space="preserve">NotRotated</target>
          </segment>
        </unit>
        <unit id="125">
          <segment state="initial" id="125">
            <source xml:space="preserve">Landscape Left</source>
            <target xml:space="preserve">Landscape Left</target>
          </segment>
        </unit>
        <unit id="126">
          <segment state="initial" id="126">
            <source xml:space="preserve">Rotated90DegreesCounterclockwise</source>
            <target xml:space="preserve">Rotated90DegreesCounterclockwise</target>
          </segment>
        </unit>
        <unit id="127">
          <segment state="initial" id="127">
            <source xml:space="preserve">Portrait Down</source>
            <target xml:space="preserve">Portrait Down</target>
          </segment>
        </unit>
        <unit id="128">
          <segment state="initial" id="128">
            <source xml:space="preserve">Rotated180DegreesCounterclockwise</source>
            <target xml:space="preserve">Rotated180DegreesCounterclockwise</target>
          </segment>
        </unit>
        <unit id="129">
          <segment state="initial" id="129">
            <source xml:space="preserve">Landscape Right</source>
            <target xml:space="preserve">Landscape Right</target>
          </segment>
        </unit>
        <unit id="130">
          <segment state="initial" id="130">
            <source xml:space="preserve">Rotated270DegreesCounterclockwise</source>
            <target xml:space="preserve">Rotated270DegreesCounterclockwise</target>
          </segment>
        </unit>
        <unit id="131">
          <segment state="initial" id="131">
            <source xml:space="preserve">Prerequisites</source>
            <target xml:space="preserve">Prerequisites</target>
          </segment>
        </unit>
        <unit id="132">
          <segment state="initial" id="132">
            <source xml:space="preserve">You should be familiar with Extensible Application Markup Language (XAML), Microsoft Visual C\#, and events.</source>
            <target xml:space="preserve">You should be familiar with Extensible Application Markup Language (XAML), Microsoft Visual C\#, and events.</target>
          </segment>
        </unit>
        <unit id="133">
          <segment state="initial" id="133">
            <source xml:space="preserve">The device or emulator that you're using must support a orientation sensor.</source>
            <target xml:space="preserve">The device or emulator that you're using must support a orientation sensor.</target>
          </segment>
        </unit>
        <unit id="134">
          <segment state="initial" id="134">
            <source xml:space="preserve">Create an OrientationSensor app</source>
            <target xml:space="preserve">Create an OrientationSensor app</target>
          </segment>
        </unit>
        <unit id="135">
          <segment state="initial" id="135">
            <source xml:space="preserve">This section is divided into two subsections.</source>
            <target xml:space="preserve">This section is divided into two subsections.</target>
          </segment>
        </unit>
        <unit id="136">
          <segment state="initial" id="136">
            <source xml:space="preserve">The first subsection will take you through the steps necessary to create an orientation application from scratch.</source>
            <target xml:space="preserve">The first subsection will take you through the steps necessary to create an orientation application from scratch.</target>
          </segment>
        </unit>
        <unit id="137">
          <segment state="initial" id="137">
            <source xml:space="preserve">The following subsection explains the app you have just created.</source>
            <target xml:space="preserve">The following subsection explains the app you have just created.</target>
          </segment>
        </unit>
        <unit id="138">
          <segment state="initial" id="138">
            <source xml:space="preserve">Instructions</source>
            <target xml:space="preserve">Instructions</target>
          </segment>
        </unit>
        <unit id="139">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;strong&gt;</data>
            <data id="id4">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="139">
            <source xml:space="preserve">Create a new project, choosing a <pc dataRefEnd="id2" dataRefStart="id1" id="2">Blank App (Universal Windows)</pc> from the <pc dataRefEnd="id4" dataRefStart="id3" id="4">Visual C\#</pc> project templates.</source>
            <target xml:space="preserve">Create a new project, choosing a <pc dataRefEnd="id2" dataRefStart="id1" id="2">Blank App (Universal Windows)</pc> from the <pc dataRefEnd="id4" dataRefStart="id3" id="4">Visual C\#</pc> project templates.</target>
          </segment>
        </unit>
        <unit id="140">
          <segment state="initial" id="140">
            <source xml:space="preserve">Open your project's MainPage.xaml.cs file and replace the existing code with the following.</source>
            <target xml:space="preserve">Open your project's MainPage.xaml.cs file and replace the existing code with the following.</target>
          </segment>
        </unit>
        <unit id="141">
          <segment state="initial" id="141">
            <source xml:space="preserve">You'll need to rename the namespace in the previous snippet with the name you gave your project.</source>
            <target xml:space="preserve">You'll need to rename the namespace in the previous snippet with the name you gave your project.</target>
          </segment>
        </unit>
        <unit id="142">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;code&gt;</data>
            <data id="id4">&lt;/code&gt;</data>
            <data id="id5">&lt;code&gt;</data>
            <data id="id6">&lt;/code&gt;</data>
          </originalData>
          <segment state="initial" id="142">
            <source xml:space="preserve">For example, if you created a project named <pc dataRefEnd="id2" dataRefStart="id1" id="2">OrientationSensorCS</pc>, you'd replace <pc dataRefEnd="id4" dataRefStart="id3" id="4">namespace App1</pc> with <pc dataRefEnd="id6" dataRefStart="id5" id="6">namespace OrientationSensorCS</pc>.</source>
            <target xml:space="preserve">For example, if you created a project named <pc dataRefEnd="id2" dataRefStart="id1" id="2">OrientationSensorCS</pc>, you'd replace <pc dataRefEnd="id4" dataRefStart="id3" id="4">namespace App1</pc> with <pc dataRefEnd="id6" dataRefStart="id5" id="6">namespace OrientationSensorCS</pc>.</target>
          </segment>
        </unit>
        <unit id="143">
          <segment state="initial" id="143">
            <source xml:space="preserve">Open the file MainPage.xaml and replace the original contents with the following XML.</source>
            <target xml:space="preserve">Open the file MainPage.xaml and replace the original contents with the following XML.</target>
          </segment>
        </unit>
        <unit id="144">
          <segment state="initial" id="144">
            <source xml:space="preserve">You'll need to replace the first part of the class name in the previous snippet with the namespace of your app.</source>
            <target xml:space="preserve">You'll need to replace the first part of the class name in the previous snippet with the namespace of your app.</target>
          </segment>
        </unit>
        <unit id="145">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;code&gt;</data>
            <data id="id4">&lt;/code&gt;</data>
            <data id="id5">&lt;code&gt;</data>
            <data id="id6">&lt;/code&gt;</data>
          </originalData>
          <segment state="initial" id="145">
            <source xml:space="preserve">For example, if you created a project named <pc dataRefEnd="id2" dataRefStart="id1" id="2">OrientationSensorCS</pc>, you'd replace <pc dataRefEnd="id4" dataRefStart="id3" id="4">x:Class="App1.MainPage"</pc> with <pc dataRefEnd="id6" dataRefStart="id5" id="6">x:Class="OrientationSensorCS.MainPage"</pc>.</source>
            <target xml:space="preserve">For example, if you created a project named <pc dataRefEnd="id2" dataRefStart="id1" id="2">OrientationSensorCS</pc>, you'd replace <pc dataRefEnd="id4" dataRefStart="id3" id="4">x:Class="App1.MainPage"</pc> with <pc dataRefEnd="id6" dataRefStart="id5" id="6">x:Class="OrientationSensorCS.MainPage"</pc>.</target>
          </segment>
        </unit>
        <unit id="146">
          <originalData>
            <data id="id1">&lt;code&gt;</data>
            <data id="id2">&lt;/code&gt;</data>
            <data id="id3">&lt;code&gt;</data>
            <data id="id4">&lt;/code&gt;</data>
          </originalData>
          <segment state="initial" id="146">
            <source xml:space="preserve">You should also replace <pc dataRefEnd="id2" dataRefStart="id1" id="2">xmlns:local="using:App1"</pc> with <pc dataRefEnd="id4" dataRefStart="id3" id="4">xmlns:local="using:OrientationSensorCS"</pc>.</source>
            <target xml:space="preserve">You should also replace <pc dataRefEnd="id2" dataRefStart="id1" id="2">xmlns:local="using:App1"</pc> with <pc dataRefEnd="id4" dataRefStart="id3" id="4">xmlns:local="using:OrientationSensorCS"</pc>.</target>
          </segment>
        </unit>
        <unit id="147">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;strong&gt;</data>
            <data id="id4">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="147">
            <source xml:space="preserve">Press F5 or select <pc dataRefEnd="id2" dataRefStart="id1" id="2">Debug</pc> &gt; <pc dataRefEnd="id4" dataRefStart="id3" id="4">Start Debugging</pc> to build, deploy, and run the app.</source>
            <target xml:space="preserve">Press F5 or select <pc dataRefEnd="id2" dataRefStart="id1" id="2">Debug</pc> &gt; <pc dataRefEnd="id4" dataRefStart="id3" id="4">Start Debugging</pc> to build, deploy, and run the app.</target>
          </segment>
        </unit>
        <unit id="148">
          <segment state="initial" id="148">
            <source xml:space="preserve">Once the app is running, you can change the orientation by moving the device or using the emulator tools.</source>
            <target xml:space="preserve">Once the app is running, you can change the orientation by moving the device or using the emulator tools.</target>
          </segment>
        </unit>
        <unit id="149">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;strong&gt;</data>
            <data id="id4">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="149">
            <source xml:space="preserve">Stop the app by returning to Visual Studio and pressing Shift+F5 or select <pc dataRefEnd="id2" dataRefStart="id1" id="2">Debug</pc> &gt; <pc dataRefEnd="id4" dataRefStart="id3" id="4">Stop Debugging</pc> to stop the app.</source>
            <target xml:space="preserve">Stop the app by returning to Visual Studio and pressing Shift+F5 or select <pc dataRefEnd="id2" dataRefStart="id1" id="2">Debug</pc> &gt; <pc dataRefEnd="id4" dataRefStart="id3" id="4">Stop Debugging</pc> to stop the app.</target>
          </segment>
        </unit>
        <unit id="150">
          <segment state="initial" id="150">
            <source xml:space="preserve">Explanation</source>
            <target xml:space="preserve">Explanation</target>
          </segment>
        </unit>
        <unit id="151">
          <segment state="initial" id="151">
            <source xml:space="preserve">The previous example demonstrates how little code you'll need to write in order to integrate orientation-sensor input in your app.</source>
            <target xml:space="preserve">The previous example demonstrates how little code you'll need to write in order to integrate orientation-sensor input in your app.</target>
          </segment>
        </unit>
        <unit id="152">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="152">
            <source xml:space="preserve">The app establishes a connection with the default orientation sensor in the <pc dataRefEnd="id2" dataRefStart="id1" id="2">MainPage</pc> method.</source>
            <target xml:space="preserve">The app establishes a connection with the default orientation sensor in the <pc dataRefEnd="id2" dataRefStart="id1" id="2">MainPage</pc> method.</target>
          </segment>
        </unit>
        <unit id="153">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="153">
            <source xml:space="preserve">The app establishes the report interval within the <pc dataRefEnd="id2" dataRefStart="id1" id="2">MainPage</pc> method.</source>
            <target xml:space="preserve">The app establishes the report interval within the <pc dataRefEnd="id2" dataRefStart="id1" id="2">MainPage</pc> method.</target>
          </segment>
        </unit>
        <unit id="154">
          <segment state="initial" id="154">
            <source xml:space="preserve">This code retrieves the minimum interval supported by the device and compares it to a requested interval of 16 milliseconds (which approximates a 60-Hz refresh rate).</source>
            <target xml:space="preserve">This code retrieves the minimum interval supported by the device and compares it to a requested interval of 16 milliseconds (which approximates a 60-Hz refresh rate).</target>
          </segment>
        </unit>
        <unit id="155">
          <segment state="initial" id="155">
            <source xml:space="preserve">If the minimum supported interval is greater than the requested interval, the code sets the value to the minimum.</source>
            <target xml:space="preserve">If the minimum supported interval is greater than the requested interval, the code sets the value to the minimum.</target>
          </segment>
        </unit>
        <unit id="156">
          <segment state="initial" id="156">
            <source xml:space="preserve">Otherwise, it sets the value to the requested interval.</source>
            <target xml:space="preserve">Otherwise, it sets the value to the requested interval.</target>
          </segment>
        </unit>
        <unit id="157">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="157">
            <source xml:space="preserve">The new sensor data is captured in the <pc dataRefEnd="id2" dataRefStart="id1" id="2">ReadingChanged</pc> method.</source>
            <target xml:space="preserve">The new sensor data is captured in the <pc dataRefEnd="id2" dataRefStart="id1" id="2">ReadingChanged</pc> method.</target>
          </segment>
        </unit>
        <unit id="158">
          <segment state="initial" id="158">
            <source xml:space="preserve">Each time the sensor driver receives new data from the sensor, it passes the values to your app using this event handler.</source>
            <target xml:space="preserve">Each time the sensor driver receives new data from the sensor, it passes the values to your app using this event handler.</target>
          </segment>
        </unit>
        <unit id="159">
          <segment state="initial" id="159">
            <source xml:space="preserve">The app registers this event handler on the following line.</source>
            <target xml:space="preserve">The app registers this event handler on the following line.</target>
          </segment>
        </unit>
        <unit id="160">
          <segment state="initial" id="160">
            <source xml:space="preserve">These new values are written to the TextBlocks found in the project's XAML.</source>
            <target xml:space="preserve">These new values are written to the TextBlocks found in the project's XAML.</target>
          </segment>
        </unit>
        <unit id="161">
          <segment state="initial" id="161">
            <source xml:space="preserve">Create a SimpleOrientation app</source>
            <target xml:space="preserve">Create a SimpleOrientation app</target>
          </segment>
        </unit>
        <unit id="162">
          <segment state="initial" id="162">
            <source xml:space="preserve">This section is divided into two subsections.</source>
            <target xml:space="preserve">This section is divided into two subsections.</target>
          </segment>
        </unit>
        <unit id="163">
          <segment state="initial" id="163">
            <source xml:space="preserve">The first subsection will take you through the steps necessary to create a simple orientation application from scratch.</source>
            <target xml:space="preserve">The first subsection will take you through the steps necessary to create a simple orientation application from scratch.</target>
          </segment>
        </unit>
        <unit id="164">
          <segment state="initial" id="164">
            <source xml:space="preserve">The following subsection explains the app you have just created.</source>
            <target xml:space="preserve">The following subsection explains the app you have just created.</target>
          </segment>
        </unit>
        <unit id="165">
          <segment state="initial" id="165">
            <source xml:space="preserve">Instructions</source>
            <target xml:space="preserve">Instructions</target>
          </segment>
        </unit>
        <unit id="166">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;strong&gt;</data>
            <data id="id4">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="166">
            <source xml:space="preserve">Create a new project, choosing a <pc dataRefEnd="id2" dataRefStart="id1" id="2">Blank App (Universal Windows)</pc> from the <pc dataRefEnd="id4" dataRefStart="id3" id="4">Visual C\#</pc> project templates.</source>
            <target xml:space="preserve">Create a new project, choosing a <pc dataRefEnd="id2" dataRefStart="id1" id="2">Blank App (Universal Windows)</pc> from the <pc dataRefEnd="id4" dataRefStart="id3" id="4">Visual C\#</pc> project templates.</target>
          </segment>
        </unit>
        <unit id="167">
          <segment state="initial" id="167">
            <source xml:space="preserve">Open your project's MainPage.xaml.cs file and replace the existing code with the following.</source>
            <target xml:space="preserve">Open your project's MainPage.xaml.cs file and replace the existing code with the following.</target>
          </segment>
        </unit>
        <unit id="168">
          <segment state="initial" id="168">
            <source xml:space="preserve">You'll need to rename the namespace in the previous snippet with the name you gave your project.</source>
            <target xml:space="preserve">You'll need to rename the namespace in the previous snippet with the name you gave your project.</target>
          </segment>
        </unit>
        <unit id="169">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;code&gt;</data>
            <data id="id4">&lt;/code&gt;</data>
            <data id="id5">&lt;code&gt;</data>
            <data id="id6">&lt;/code&gt;</data>
          </originalData>
          <segment state="initial" id="169">
            <source xml:space="preserve">For example, if you created a project named <pc dataRefEnd="id2" dataRefStart="id1" id="2">SimpleOrientationCS</pc>, you'd replace <pc dataRefEnd="id4" dataRefStart="id3" id="4">namespace App1</pc> with <pc dataRefEnd="id6" dataRefStart="id5" id="6">namespace SimpleOrientationCS</pc>.</source>
            <target xml:space="preserve">For example, if you created a project named <pc dataRefEnd="id2" dataRefStart="id1" id="2">SimpleOrientationCS</pc>, you'd replace <pc dataRefEnd="id4" dataRefStart="id3" id="4">namespace App1</pc> with <pc dataRefEnd="id6" dataRefStart="id5" id="6">namespace SimpleOrientationCS</pc>.</target>
          </segment>
        </unit>
        <unit id="170">
          <segment state="initial" id="170">
            <source xml:space="preserve">Open the file MainPage.xaml and replace the original contents with the following XML.</source>
            <target xml:space="preserve">Open the file MainPage.xaml and replace the original contents with the following XML.</target>
          </segment>
        </unit>
        <unit id="171">
          <segment state="initial" id="171">
            <source xml:space="preserve">You'll need to replace the first part of the class name in the previous snippet with the namespace of your app.</source>
            <target xml:space="preserve">You'll need to replace the first part of the class name in the previous snippet with the namespace of your app.</target>
          </segment>
        </unit>
        <unit id="172">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;code&gt;</data>
            <data id="id4">&lt;/code&gt;</data>
            <data id="id5">&lt;code&gt;</data>
            <data id="id6">&lt;/code&gt;</data>
          </originalData>
          <segment state="initial" id="172">
            <source xml:space="preserve">For example, if you created a project named <pc dataRefEnd="id2" dataRefStart="id1" id="2">SimpleOrientationCS</pc>, you'd replace <pc dataRefEnd="id4" dataRefStart="id3" id="4">x:Class="App1.MainPage"</pc> with <pc dataRefEnd="id6" dataRefStart="id5" id="6">x:Class="SimpleOrientationCS.MainPage"</pc>.</source>
            <target xml:space="preserve">For example, if you created a project named <pc dataRefEnd="id2" dataRefStart="id1" id="2">SimpleOrientationCS</pc>, you'd replace <pc dataRefEnd="id4" dataRefStart="id3" id="4">x:Class="App1.MainPage"</pc> with <pc dataRefEnd="id6" dataRefStart="id5" id="6">x:Class="SimpleOrientationCS.MainPage"</pc>.</target>
          </segment>
        </unit>
        <unit id="173">
          <originalData>
            <data id="id1">&lt;code&gt;</data>
            <data id="id2">&lt;/code&gt;</data>
            <data id="id3">&lt;code&gt;</data>
            <data id="id4">&lt;/code&gt;</data>
          </originalData>
          <segment state="initial" id="173">
            <source xml:space="preserve">You should also replace <pc dataRefEnd="id2" dataRefStart="id1" id="2">xmlns:local="using:App1"</pc> with <pc dataRefEnd="id4" dataRefStart="id3" id="4">xmlns:local="using:SimpleOrientationCS"</pc>.</source>
            <target xml:space="preserve">You should also replace <pc dataRefEnd="id2" dataRefStart="id1" id="2">xmlns:local="using:App1"</pc> with <pc dataRefEnd="id4" dataRefStart="id3" id="4">xmlns:local="using:SimpleOrientationCS"</pc>.</target>
          </segment>
        </unit>
        <unit id="174">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;strong&gt;</data>
            <data id="id4">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="174">
            <source xml:space="preserve">Press F5 or select <pc dataRefEnd="id2" dataRefStart="id1" id="2">Debug</pc> &gt; <pc dataRefEnd="id4" dataRefStart="id3" id="4">Start Debugging</pc> to build, deploy, and run the app.</source>
            <target xml:space="preserve">Press F5 or select <pc dataRefEnd="id2" dataRefStart="id1" id="2">Debug</pc> &gt; <pc dataRefEnd="id4" dataRefStart="id3" id="4">Start Debugging</pc> to build, deploy, and run the app.</target>
          </segment>
        </unit>
        <unit id="175">
          <segment state="initial" id="175">
            <source xml:space="preserve">Once the app is running, you can change the orientation by moving the device or using the emulator tools.</source>
            <target xml:space="preserve">Once the app is running, you can change the orientation by moving the device or using the emulator tools.</target>
          </segment>
        </unit>
        <unit id="176">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;strong&gt;</data>
            <data id="id4">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="176">
            <source xml:space="preserve">Stop the app by returning to Visual Studio and pressing Shift+F5 or select <pc dataRefEnd="id2" dataRefStart="id1" id="2">Debug</pc> &gt; <pc dataRefEnd="id4" dataRefStart="id3" id="4">Stop Debugging</pc> to stop the app.</source>
            <target xml:space="preserve">Stop the app by returning to Visual Studio and pressing Shift+F5 or select <pc dataRefEnd="id2" dataRefStart="id1" id="2">Debug</pc> &gt; <pc dataRefEnd="id4" dataRefStart="id3" id="4">Stop Debugging</pc> to stop the app.</target>
          </segment>
        </unit>
        <unit id="177">
          <segment state="initial" id="177">
            <source xml:space="preserve">Explanation</source>
            <target xml:space="preserve">Explanation</target>
          </segment>
        </unit>
        <unit id="178">
          <segment state="initial" id="178">
            <source xml:space="preserve">The previous example demonstrates how little code you'll need to write in order to integrate simple-orientation sensor input in your app.</source>
            <target xml:space="preserve">The previous example demonstrates how little code you'll need to write in order to integrate simple-orientation sensor input in your app.</target>
          </segment>
        </unit>
        <unit id="179">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="179">
            <source xml:space="preserve">The app establishes a connection with the default sensor in the <pc dataRefEnd="id2" dataRefStart="id1" id="2">MainPage</pc> method.</source>
            <target xml:space="preserve">The app establishes a connection with the default sensor in the <pc dataRefEnd="id2" dataRefStart="id1" id="2">MainPage</pc> method.</target>
          </segment>
        </unit>
        <unit id="180">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="180">
            <source xml:space="preserve">The new sensor data is captured in the <pc dataRefEnd="id2" dataRefStart="id1" id="2">OrientationChanged</pc> method.</source>
            <target xml:space="preserve">The new sensor data is captured in the <pc dataRefEnd="id2" dataRefStart="id1" id="2">OrientationChanged</pc> method.</target>
          </segment>
        </unit>
        <unit id="181">
          <segment state="initial" id="181">
            <source xml:space="preserve">Each time the sensor driver receives new data from the sensor, it passes the values to your app using this event handler.</source>
            <target xml:space="preserve">Each time the sensor driver receives new data from the sensor, it passes the values to your app using this event handler.</target>
          </segment>
        </unit>
        <unit id="182">
          <segment state="initial" id="182">
            <source xml:space="preserve">The app registers this event handler on the following line.</source>
            <target xml:space="preserve">The app registers this event handler on the following line.</target>
          </segment>
        </unit>
        <unit id="183">
          <segment state="initial" id="183">
            <source xml:space="preserve">These new values are written to a TextBlock found in the project's XAML.</source>
            <target xml:space="preserve">These new values are written to a TextBlock found in the project's XAML.</target>
          </segment>
        </unit>
        <unit id="184">
          <segment state="initial" id="184">
            <source xml:space="preserve">Related topics</source>
            <target xml:space="preserve">Related topics</target>
          </segment>
        </unit>
        <unit id="185">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="185">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">OrientationSensor Sample</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">OrientationSensor Sample</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</target>
          </segment>
        </unit>
        <unit id="186">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="186">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">SimpleOrientation Sensor Sample</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">SimpleOrientation Sensor Sample</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</target>
          </segment>
        </unit>
      </group>
    </group>
  </file>
</xliff>