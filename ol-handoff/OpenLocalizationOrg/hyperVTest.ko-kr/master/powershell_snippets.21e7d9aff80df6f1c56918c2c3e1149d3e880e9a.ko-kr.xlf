<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="ko-kr" original="foo.file" tool-id="6bd023a6-f326-4c5f-9c60-0abfb21c21c9" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="6bd023a6-f326-4c5f-9c60-0abfb21c21c9" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
      <olfilehash xmlns="">a7640c222d084ad8705adf3206cc238fc33ff331</olfilehash>
    </header>
    <body>
      <group id="9e6ce5c0-de06-4cbf-8985-a1145652d1c9">
        <trans-unit id="7c772bb2-0908-4efd-bcf6-1c1fc513f57a" xml:space="preserve">
          <source>ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9</source>
          <target state="new">ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9</target>
        </trans-unit>
        <trans-unit id="e7d2e024-991b-4c6e-a6cb-55b4ac307392" xml:space="preserve">
          <source>title: PowerShell Snippets</source>
          <target state="new">title: PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="453fd219-b250-4270-a173-adbd5fe3a375" xml:space="preserve">
          <source>PowerShell Snippets</source>
          <target state="new">PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="2107ea9b-4435-4715-b6b4-463c630599f6" xml:space="preserve">
          <source>Adding this sentence to validate the bug 451132 result.</source>
          <target state="new">Adding this sentence to validate the bug 451132 result.</target>
        </trans-unit>
        <trans-unit id="94a25604-e104-4f43-8ca3-76ab3fd3f7ae" xml:space="preserve">
          <source>PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</source>
          <target state="new">PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</target>
        </trans-unit>
        <trans-unit id="69b03e2d-3b87-489e-b317-f9e046742441" xml:space="preserve">
          <source>All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</source>
          <target state="new">All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</target>
        </trans-unit>
        <trans-unit id="d94516d6-9da2-4998-80dd-7d2e928e21fa" xml:space="preserve">
          <source>If you aren't sure if you have the right permissions, type <bpt id="4820c6ab-49e7-4b33-b94e-cb0966dcdb69">&lt;code&gt;</bpt>Get-VM<ept id="4820c6ab-49e7-4b33-b94e-cb0966dcdb69">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</source>
          <target state="new">If you aren't sure if you have the right permissions, type <bpt id="4820c6ab-49e7-4b33-b94e-cb0966dcdb69">&lt;code&gt;</bpt>Get-VM<ept id="4820c6ab-49e7-4b33-b94e-cb0966dcdb69">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</target>
        </trans-unit>
        <trans-unit id="1f503bcb-af2a-447d-9e98-9549f2cb7535" xml:space="preserve">
          <source>PowerShell Direct tools</source>
          <target state="new">PowerShell Direct tools</target>
        </trans-unit>
        <trans-unit id="31e01825-2ef8-4f93-b8a8-19a7ca4bf4e8" xml:space="preserve">
          <source>All of the scripts and snippets in this section will rely on the following basics.</source>
          <target state="new">All of the scripts and snippets in this section will rely on the following basics.</target>
        </trans-unit>
        <trans-unit id="9a825777-1df3-46e2-bc6b-aba2ee5979bd" xml:space="preserve">
          <source><bpt id="b1098bfd-c415-433c-96b7-9e59dffcf3b3">&lt;strong&gt;</bpt>Requirements<ept id="b1098bfd-c415-433c-96b7-9e59dffcf3b3">&lt;/strong&gt;</ept> :</source>
          <target state="new"><bpt id="b1098bfd-c415-433c-96b7-9e59dffcf3b3">&lt;strong&gt;</bpt>Requirements<ept id="b1098bfd-c415-433c-96b7-9e59dffcf3b3">&lt;/strong&gt;</ept> :</target>
        </trans-unit>
        <trans-unit id="f6fe4bfa-8586-4029-957f-6d9d270b3b24" xml:space="preserve">
          <source>PowerShell Direct.</source>
          <target state="new">PowerShell Direct.</target>
        </trans-unit>
        <trans-unit id="e6c72824-ec53-4fe6-b426-080a7d47bd62" xml:space="preserve">
          <source>Windows 10 guest and host OS.</source>
          <target state="new">Windows 10 guest and host OS.</target>
        </trans-unit>
        <trans-unit id="d94bfea3-8339-4e41-9220-6ac731766aae" xml:space="preserve">
          <source><bpt id="f7cadd47-bb2a-4557-8ded-145ef9e3aa90">&lt;strong&gt;</bpt>Common Variables<ept id="f7cadd47-bb2a-4557-8ded-145ef9e3aa90">&lt;/strong&gt;</ept> :</source>
          <target state="new"><bpt id="f7cadd47-bb2a-4557-8ded-145ef9e3aa90">&lt;strong&gt;</bpt>Common Variables<ept id="f7cadd47-bb2a-4557-8ded-145ef9e3aa90">&lt;/strong&gt;</ept> :</target>
        </trans-unit>
        <trans-unit id="dc7a598e-6daf-4fac-a54b-31ef4352b715" xml:space="preserve">
          <source><bpt id="b0215d35-4fbc-4ead-96fe-7412dbfbe6cf">&lt;code&gt;</bpt>$VMName<ept id="b0215d35-4fbc-4ead-96fe-7412dbfbe6cf">&lt;/code&gt;</ept> -- this is a string with the VMName.</source>
          <target state="new"><bpt id="b0215d35-4fbc-4ead-96fe-7412dbfbe6cf">&lt;code&gt;</bpt>$VMName<ept id="b0215d35-4fbc-4ead-96fe-7412dbfbe6cf">&lt;/code&gt;</ept> -- this is a string with the VMName.</target>
        </trans-unit>
        <trans-unit id="2e5eb7de-4cbb-4446-b2a6-0e147cb9be53" xml:space="preserve">
          <source>See a list of available VMs with <bpt id="973bbbf5-5fc4-4d29-b5cd-68bb0ac7e7bc">&lt;code&gt;</bpt>Get-VM<ept id="973bbbf5-5fc4-4d29-b5cd-68bb0ac7e7bc">&lt;/code&gt;</ept></source>
          <target state="new">See a list of available VMs with <bpt id="973bbbf5-5fc4-4d29-b5cd-68bb0ac7e7bc">&lt;code&gt;</bpt>Get-VM<ept id="973bbbf5-5fc4-4d29-b5cd-68bb0ac7e7bc">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="bf0d8326-1c80-438d-9f2c-51e42d5b3469" xml:space="preserve">
          <source><bpt id="93656ddc-aade-4d88-ab01-8f167240b5e6">&lt;code&gt;</bpt>$cred<ept id="93656ddc-aade-4d88-ab01-8f167240b5e6">&lt;/code&gt;</ept> -- Credential for the guest OS.</source>
          <target state="new"><bpt id="93656ddc-aade-4d88-ab01-8f167240b5e6">&lt;code&gt;</bpt>$cred<ept id="93656ddc-aade-4d88-ab01-8f167240b5e6">&lt;/code&gt;</ept> -- Credential for the guest OS.</target>
        </trans-unit>
        <trans-unit id="b48a8859-dad2-49ab-ad94-cfe8148862f3" xml:space="preserve">
          <source>Can be populated using <bpt id="c38af524-f755-4a81-82c3-af16b529999b">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="c38af524-f755-4a81-82c3-af16b529999b">&lt;/code&gt;</ept></source>
          <target state="new">Can be populated using <bpt id="c38af524-f755-4a81-82c3-af16b529999b">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="c38af524-f755-4a81-82c3-af16b529999b">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="87d391a9-17b6-4404-a91e-075058de6fb0" xml:space="preserve">
          <source>Check if the guest has booted</source>
          <target state="new">Check if the guest has booted</target>
        </trans-unit>
        <trans-unit id="5765157e-dac2-48d4-a1c6-d9f1e68ad821" xml:space="preserve">
          <source>Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</source>
          <target state="new">Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</target>
        </trans-unit>
        <trans-unit id="625aa82a-6340-4716-bd4b-88467ba01579" xml:space="preserve">
          <source>Use this command to check whether the guest has booted.</source>
          <target state="new">Use this command to check whether the guest has booted.</target>
        </trans-unit>
        <trans-unit id="4d30c0cd-5673-4352-85b3-66a1404aa7f9" xml:space="preserve">
          <source><bpt id="fce490ec-8d26-452c-8604-ecb21ed4877e">&lt;strong&gt;</bpt>Outcome<ept id="fce490ec-8d26-452c-8604-ecb21ed4877e">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="fce490ec-8d26-452c-8604-ecb21ed4877e">&lt;strong&gt;</bpt>Outcome<ept id="fce490ec-8d26-452c-8604-ecb21ed4877e">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="45b1e0ef-167c-4149-98c1-7831258b19e7" xml:space="preserve">
          <source>Prints a friendly message declaring the state of the guest OS.</source>
          <target state="new">Prints a friendly message declaring the state of the guest OS.</target>
        </trans-unit>
        <trans-unit id="a8ae36c4-8fff-4d1c-b0d0-1a9fa5160876" xml:space="preserve">
          <source>Script locking until the guest has booted</source>
          <target state="new">Script locking until the guest has booted</target>
        </trans-unit>
        <trans-unit id="6188b14e-8ccc-4408-b9e6-697dd76b863c" xml:space="preserve">
          <source>The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</source>
          <target state="new">The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</target>
        </trans-unit>
        <trans-unit id="e1263d3e-df4b-4e9c-b9d7-910f90683be4" xml:space="preserve">
          <source><bpt id="2aab5061-42eb-46d0-a8ba-7579b7894311">&lt;strong&gt;</bpt>Outcome<ept id="2aab5061-42eb-46d0-a8ba-7579b7894311">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="2aab5061-42eb-46d0-a8ba-7579b7894311">&lt;strong&gt;</bpt>Outcome<ept id="2aab5061-42eb-46d0-a8ba-7579b7894311">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="930bc8b8-d9ff-44e1-9625-a3978d49e646" xml:space="preserve">
          <source>Prints a friendly message and locks until the connection to the VM succeeds.</source>
          <target state="new">Prints a friendly message and locks until the connection to the VM succeeds.</target>
        </trans-unit>
        <trans-unit id="82db8b90-1cba-4cb3-9243-10de85e44ac5" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="d1a4696e-174c-43f2-bd0e-9c215722c99c" xml:space="preserve">
          <source>Script locking until the guest has a network</source>
          <target state="new">Script locking until the guest has a network</target>
        </trans-unit>
        <trans-unit id="5bf4c193-5728-436e-a6fe-77728d593d65" xml:space="preserve">
          <source>With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</source>
          <target state="new">With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</target>
        </trans-unit>
        <trans-unit id="82b2515d-d4c9-46dd-a7ad-24f578803820" xml:space="preserve">
          <source><bpt id="56fd7a2d-0a05-4139-a1e0-a773bee3a3a3">&lt;em&gt;</bpt>* Outcome *<ept id="56fd7a2d-0a05-4139-a1e0-a773bee3a3a3">&lt;/em&gt;</ept></source>
          <target state="new"><bpt id="56fd7a2d-0a05-4139-a1e0-a773bee3a3a3">&lt;em&gt;</bpt>* Outcome *<ept id="56fd7a2d-0a05-4139-a1e0-a773bee3a3a3">&lt;/em&gt;</ept></target>
        </trans-unit>
        <trans-unit id="04f30893-954c-4896-adcc-2672e4d58745" xml:space="preserve">
          <source>Locks until a DHCP lease is recieved.</source>
          <target state="new">Locks until a DHCP lease is recieved.</target>
        </trans-unit>
        <trans-unit id="ac3b3c77-5309-42b8-a3b6-f99cdaaa3ece" xml:space="preserve">
          <source>Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</source>
          <target state="new">Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</target>
        </trans-unit>
        <trans-unit id="26653386-9939-42d0-a16d-e8d1ce1fd319" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="637c1dbd-ce67-49d6-b1c1-9efd9fe9a1f3" xml:space="preserve">
          <source>Managing credentials with PowerShell</source>
          <target state="new">Managing credentials with PowerShell</target>
        </trans-unit>
        <trans-unit id="e1f8d03c-5f5f-4205-98d4-89db7aa1ce9b" xml:space="preserve">
          <source>Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</source>
          <target state="new">Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</target>
        </trans-unit>
        <trans-unit id="99c38625-c40a-488b-949e-4d56edf0be8f" xml:space="preserve">
          <source>There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</source>
          <target state="new">There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</target>
        </trans-unit>
        <trans-unit id="cd7a2b0d-1b42-4f8c-9e6e-4992494d18f7" xml:space="preserve">
          <source>The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</source>
          <target state="new">The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</target>
        </trans-unit>
        <trans-unit id="b4bf0ca2-db00-4a15-86f6-a0c53c6fffb8" xml:space="preserve">
          <source>This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</source>
          <target state="new">This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</target>
        </trans-unit>
        <trans-unit id="06d7cdd1-444e-4ac7-a8ff-aa99c0b0b3bc" xml:space="preserve">
          <source>In this scenario you can just run <bpt id="e1c31963-9cb5-4d6e-ad92-2eb13c67e681">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="e1c31963-9cb5-4d6e-ad92-2eb13c67e681">&lt;/code&gt;</ept>.</source>
          <target state="new">In this scenario you can just run <bpt id="e1c31963-9cb5-4d6e-ad92-2eb13c67e681">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="e1c31963-9cb5-4d6e-ad92-2eb13c67e681">&lt;/code&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="54db2491-9064-4678-837b-5e97e340d27c" xml:space="preserve">
          <source>Let PowerShell prompt you for credentials</source>
          <target state="new">Let PowerShell prompt you for credentials</target>
        </trans-unit>
        <trans-unit id="fb97bf4a-3a08-4791-a3db-670b63def613" xml:space="preserve">
          <source>If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</source>
          <target state="new">If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</target>
        </trans-unit>
        <trans-unit id="487ca433-f2d6-4791-b973-b3213d5e3e84" xml:space="preserve">
          <source>Store credentials in a variable for reuse.</source>
          <target state="new">Store credentials in a variable for reuse.</target>
        </trans-unit>
        <trans-unit id="f15fc95a-d6be-4975-9a47-925c43a55216" xml:space="preserve">
          <source>Running a simple command like this:</source>
          <target state="new">Running a simple command like this:</target>
        </trans-unit>
        <trans-unit id="05d089cc-ded1-41ef-915a-9481c889d6d5" xml:space="preserve">
          <source>And then running something like this:</source>
          <target state="new">And then running something like this:</target>
        </trans-unit>
        <trans-unit id="4d9db2eb-5ca5-4e7d-827d-8bfd258d46fd" xml:space="preserve">
          <source>Will mean that you only get prompted once per script/PowerShell session for your credentials.</source>
          <target state="new">Will mean that you only get prompted once per script/PowerShell session for your credentials.</target>
        </trans-unit>
        <trans-unit id="c2c89d98-7177-4414-9486-a19ba8ceda2c" xml:space="preserve">
          <source>Code your credentials into your scripts.</source>
          <target state="new">Code your credentials into your scripts.</target>
        </trans-unit>
        <trans-unit id="6a3d8491-7648-46a1-98fa-760bc812e2ab" xml:space="preserve">
          <source><bpt id="edf0a16e-c6f2-4ab4-8695-af9f27781f52">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="edf0a16e-c6f2-4ab4-8695-af9f27781f52">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="edf0a16e-c6f2-4ab4-8695-af9f27781f52">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="edf0a16e-c6f2-4ab4-8695-af9f27781f52">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="872da96d-a26a-4820-aa30-49d6b8b5b207" xml:space="preserve">
          <source>Warning:  _Do not do this in a production system.</source>
          <target state="new">Warning:  _Do not do this in a production system.</target>
        </trans-unit>
        <trans-unit id="0cfb7b41-b387-4a34-acc6-32795590d785" xml:space="preserve">
          <source>Do not do this with real passwords._</source>
          <target state="new">Do not do this with real passwords._</target>
        </trans-unit>
        <trans-unit id="5df2ba7d-b056-4cd6-98e7-a5b99a53f4f2" xml:space="preserve">
          <source>You can hand craft a PSCredential object with some code like this:</source>
          <target state="new">You can hand craft a PSCredential object with some code like this:</target>
        </trans-unit>
        <trans-unit id="386d6d52-2b6a-4d21-ab02-61b95672c885" xml:space="preserve">
          <source>Grossly insecure - but useful for testing.</source>
          <target state="new">Grossly insecure - but useful for testing.</target>
        </trans-unit>
        <trans-unit id="7487c3b9-2729-48a9-b87f-ae03d3bde89a" xml:space="preserve">
          <source>Now you get no prompts at all in this session.</source>
          <target state="new">Now you get no prompts at all in this session.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>