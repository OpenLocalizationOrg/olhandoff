<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="ko-kr" original="foo.file" tool-id="2d3e81a9-d199-410f-99c6-605b8a2423ee" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="2d3e81a9-d199-410f-99c6-605b8a2423ee" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
      <olfilehash xmlns="">1e570b48f01ed63333705d5da5031bc706a67a94</olfilehash>
    </header>
    <body>
      <group id="15698d69-47ed-49fc-9bc3-a041e5c8aced">
        <trans-unit id="d823aec9-c3db-44a0-811a-d374045c3e88" xml:space="preserve">
          <source>ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9</source>
          <target state="new">ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9</target>
        </trans-unit>
        <trans-unit id="091abbeb-94be-49e9-bfe0-4e628fcd6979" xml:space="preserve">
          <source>title: PowerShell Snippets</source>
          <target state="new">title: PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="ef0de9d0-0840-41a8-b9f8-042659bc12a4" xml:space="preserve">
          <source>PowerShell Snippets</source>
          <target state="new">PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="42c55a51-2f3a-41cf-814d-bdbc556bd6b0" xml:space="preserve">
          <source>Adding this sentence for testing HO-HB process.</source>
          <target state="new">Adding this sentence for testing HO-HB process.</target>
        </trans-unit>
        <trans-unit id="f3d5e64d-1a0c-4139-9f22-e6b09127b553" xml:space="preserve">
          <source>PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</source>
          <target state="new">PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</target>
        </trans-unit>
        <trans-unit id="c34ae3d1-eaa0-4a88-b65f-282e9cbe8670" xml:space="preserve">
          <source>All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</source>
          <target state="new">All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</target>
        </trans-unit>
        <trans-unit id="09635d30-8fbf-49c3-be9c-cb1474743306" xml:space="preserve">
          <source>If you aren't sure if you have the right permissions, type <bpt id="4dff6a84-6c0c-4a77-8548-d3f7f7101cb6">&lt;code&gt;</bpt>Get-VM<ept id="4dff6a84-6c0c-4a77-8548-d3f7f7101cb6">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</source>
          <target state="new">If you aren't sure if you have the right permissions, type <bpt id="4dff6a84-6c0c-4a77-8548-d3f7f7101cb6">&lt;code&gt;</bpt>Get-VM<ept id="4dff6a84-6c0c-4a77-8548-d3f7f7101cb6">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</target>
        </trans-unit>
        <trans-unit id="55df7655-0a4a-45f7-82f7-1991495367fd" xml:space="preserve">
          <source>PowerShell Direct tools</source>
          <target state="new">PowerShell Direct tools</target>
        </trans-unit>
        <trans-unit id="28a6ae95-937c-440d-a7bc-adbd38b393d4" xml:space="preserve">
          <source>All of the scripts and snippets in this section will rely on the following basics.</source>
          <target state="new">All of the scripts and snippets in this section will rely on the following basics.</target>
        </trans-unit>
        <trans-unit id="513ffcd2-edc2-450d-8d22-6619012360aa" xml:space="preserve">
          <source><bpt id="60166bb1-032e-4d36-945e-07b66e42136d">&lt;strong&gt;</bpt>Requirements<ept id="60166bb1-032e-4d36-945e-07b66e42136d">&lt;/strong&gt;</ept> :</source>
          <target state="new"><bpt id="60166bb1-032e-4d36-945e-07b66e42136d">&lt;strong&gt;</bpt>Requirements<ept id="60166bb1-032e-4d36-945e-07b66e42136d">&lt;/strong&gt;</ept> :</target>
        </trans-unit>
        <trans-unit id="1230b1b4-d910-441a-ab9f-e9e17e287547" xml:space="preserve">
          <source>PowerShell Direct.</source>
          <target state="new">PowerShell Direct.</target>
        </trans-unit>
        <trans-unit id="26c554e2-9a4d-4c7e-b132-4f1f1c5a5acf" xml:space="preserve">
          <source>Windows 10 guest and host OS.</source>
          <target state="new">Windows 10 guest and host OS.</target>
        </trans-unit>
        <trans-unit id="017c4f82-5dbd-418a-8859-08d9f3919b52" xml:space="preserve">
          <source><bpt id="5bbce752-0cf0-47b4-b29e-45751012b50a">&lt;strong&gt;</bpt>Common Variables<ept id="5bbce752-0cf0-47b4-b29e-45751012b50a">&lt;/strong&gt;</ept> :</source>
          <target state="new"><bpt id="5bbce752-0cf0-47b4-b29e-45751012b50a">&lt;strong&gt;</bpt>Common Variables<ept id="5bbce752-0cf0-47b4-b29e-45751012b50a">&lt;/strong&gt;</ept> :</target>
        </trans-unit>
        <trans-unit id="23ce2aab-e1d5-4925-9ab4-6809d20bed5f" xml:space="preserve">
          <source><bpt id="4b73b551-80d8-4d81-9243-a51c696f8807">&lt;code&gt;</bpt>$VMName<ept id="4b73b551-80d8-4d81-9243-a51c696f8807">&lt;/code&gt;</ept> -- this is a string with the VMName.</source>
          <target state="new"><bpt id="4b73b551-80d8-4d81-9243-a51c696f8807">&lt;code&gt;</bpt>$VMName<ept id="4b73b551-80d8-4d81-9243-a51c696f8807">&lt;/code&gt;</ept> -- this is a string with the VMName.</target>
        </trans-unit>
        <trans-unit id="5b11a05d-a669-4330-a982-8aa14d3a0b8f" xml:space="preserve">
          <source>See a list of available VMs with <bpt id="e0f23fa4-7f63-4b51-8999-f5655caf9f67">&lt;code&gt;</bpt>Get-VM<ept id="e0f23fa4-7f63-4b51-8999-f5655caf9f67">&lt;/code&gt;</ept></source>
          <target state="new">See a list of available VMs with <bpt id="e0f23fa4-7f63-4b51-8999-f5655caf9f67">&lt;code&gt;</bpt>Get-VM<ept id="e0f23fa4-7f63-4b51-8999-f5655caf9f67">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="2b00c364-4984-4a1b-bcd5-9ef823af1d4f" xml:space="preserve">
          <source><bpt id="c4bc2ff7-cfe4-4964-ade8-2a78d0d69b03">&lt;code&gt;</bpt>$cred<ept id="c4bc2ff7-cfe4-4964-ade8-2a78d0d69b03">&lt;/code&gt;</ept> -- Credential for the guest OS.</source>
          <target state="new"><bpt id="c4bc2ff7-cfe4-4964-ade8-2a78d0d69b03">&lt;code&gt;</bpt>$cred<ept id="c4bc2ff7-cfe4-4964-ade8-2a78d0d69b03">&lt;/code&gt;</ept> -- Credential for the guest OS.</target>
        </trans-unit>
        <trans-unit id="b2e18af8-b346-4510-9da8-6fe9b893b505" xml:space="preserve">
          <source>Can be populated using <bpt id="1db529e7-ffc5-4b33-9e79-eae7d826529b">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="1db529e7-ffc5-4b33-9e79-eae7d826529b">&lt;/code&gt;</ept></source>
          <target state="new">Can be populated using <bpt id="1db529e7-ffc5-4b33-9e79-eae7d826529b">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="1db529e7-ffc5-4b33-9e79-eae7d826529b">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="be605b55-b092-4878-ad94-c066754e082b" xml:space="preserve">
          <source>Check if the guest has booted</source>
          <target state="new">Check if the guest has booted</target>
        </trans-unit>
        <trans-unit id="40364214-c0a7-4c64-82cd-b3b772b269b6" xml:space="preserve">
          <source>Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</source>
          <target state="new">Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</target>
        </trans-unit>
        <trans-unit id="79a2fe12-3f7a-4e03-8d49-8c715ed9ea89" xml:space="preserve">
          <source>Use this command to check whether the guest has booted.</source>
          <target state="new">Use this command to check whether the guest has booted.</target>
        </trans-unit>
        <trans-unit id="bb8fe538-40f8-49db-ba76-0f19f5b72410" xml:space="preserve">
          <source><bpt id="af4bb4fb-f04d-4e02-b2c6-9fd12e41db63">&lt;strong&gt;</bpt>Outcome<ept id="af4bb4fb-f04d-4e02-b2c6-9fd12e41db63">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="af4bb4fb-f04d-4e02-b2c6-9fd12e41db63">&lt;strong&gt;</bpt>Outcome<ept id="af4bb4fb-f04d-4e02-b2c6-9fd12e41db63">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="084ebbc2-02da-4b89-822f-8a6606323035" xml:space="preserve">
          <source>Prints a friendly message declaring the state of the guest OS.</source>
          <target state="new">Prints a friendly message declaring the state of the guest OS.</target>
        </trans-unit>
        <trans-unit id="34dfb308-5af4-42ad-9ee7-b0acda1ee9bc" xml:space="preserve">
          <source>Script locking until the guest has booted</source>
          <target state="new">Script locking until the guest has booted</target>
        </trans-unit>
        <trans-unit id="72607b80-9814-4df9-b66a-4867cbcfc727" xml:space="preserve">
          <source>The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</source>
          <target state="new">The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</target>
        </trans-unit>
        <trans-unit id="9840554d-b45d-474e-985e-e31945204294" xml:space="preserve">
          <source><bpt id="7fec95a9-0cd0-44c9-ae89-685c01d7949a">&lt;strong&gt;</bpt>Outcome<ept id="7fec95a9-0cd0-44c9-ae89-685c01d7949a">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="7fec95a9-0cd0-44c9-ae89-685c01d7949a">&lt;strong&gt;</bpt>Outcome<ept id="7fec95a9-0cd0-44c9-ae89-685c01d7949a">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="6002897c-64ea-4a08-bacd-1c4ee2fb1f6d" xml:space="preserve">
          <source>Prints a friendly message and locks until the connection to the VM succeeds.</source>
          <target state="new">Prints a friendly message and locks until the connection to the VM succeeds.</target>
        </trans-unit>
        <trans-unit id="ae8bcbe2-1425-441c-adbd-f6ae2e18651e" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="cae45c06-bf16-4a60-9e4d-6aa7dc185cab" xml:space="preserve">
          <source>Script locking until the guest has a network</source>
          <target state="new">Script locking until the guest has a network</target>
        </trans-unit>
        <trans-unit id="85052b98-1a50-46ed-aee9-2c8ac5c42f19" xml:space="preserve">
          <source>With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</source>
          <target state="new">With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</target>
        </trans-unit>
        <trans-unit id="ed7ffb03-0a91-45ca-982b-ae850013d9fe" xml:space="preserve">
          <source><bpt id="b7ac8bd8-cbb1-4c22-a01b-a81373070d7f">&lt;em&gt;</bpt>* Outcome *<ept id="b7ac8bd8-cbb1-4c22-a01b-a81373070d7f">&lt;/em&gt;</ept></source>
          <target state="new"><bpt id="b7ac8bd8-cbb1-4c22-a01b-a81373070d7f">&lt;em&gt;</bpt>* Outcome *<ept id="b7ac8bd8-cbb1-4c22-a01b-a81373070d7f">&lt;/em&gt;</ept></target>
        </trans-unit>
        <trans-unit id="8fc97e58-9546-43de-ba62-092477c2e7b2" xml:space="preserve">
          <source>Locks until a DHCP lease is recieved.</source>
          <target state="new">Locks until a DHCP lease is recieved.</target>
        </trans-unit>
        <trans-unit id="f7f7d466-81c6-43cd-a7c8-340359b18aa2" xml:space="preserve">
          <source>Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</source>
          <target state="new">Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</target>
        </trans-unit>
        <trans-unit id="16621e43-a7ab-4504-a464-656f3cfe9f71" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="a1b80bda-93ba-4419-b1cf-8d9c575108b6" xml:space="preserve">
          <source>Managing credentials with PowerShell</source>
          <target state="new">Managing credentials with PowerShell</target>
        </trans-unit>
        <trans-unit id="af9f9f64-fc85-4476-a705-82227e327592" xml:space="preserve">
          <source>Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</source>
          <target state="new">Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</target>
        </trans-unit>
        <trans-unit id="071314ae-a5ed-45c5-8e76-6a269010c685" xml:space="preserve">
          <source>There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</source>
          <target state="new">There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</target>
        </trans-unit>
        <trans-unit id="59f7822d-eac7-480b-a172-75ea164f7f43" xml:space="preserve">
          <source>The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</source>
          <target state="new">The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</target>
        </trans-unit>
        <trans-unit id="7ca97274-2644-43c4-86b6-77dcbcd45317" xml:space="preserve">
          <source>This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</source>
          <target state="new">This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</target>
        </trans-unit>
        <trans-unit id="82170cdd-728f-4299-a818-aa5b4f4782c0" xml:space="preserve">
          <source>In this scenario you can just run <bpt id="823a28d1-3cf3-427a-a1d6-25810369951e">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="823a28d1-3cf3-427a-a1d6-25810369951e">&lt;/code&gt;</ept>.</source>
          <target state="new">In this scenario you can just run <bpt id="823a28d1-3cf3-427a-a1d6-25810369951e">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="823a28d1-3cf3-427a-a1d6-25810369951e">&lt;/code&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="9b983921-c6f2-4290-8b4a-327157d7d2da" xml:space="preserve">
          <source>Let PowerShell prompt you for credentials</source>
          <target state="new">Let PowerShell prompt you for credentials</target>
        </trans-unit>
        <trans-unit id="e0dd0885-6746-46ac-abfd-83c411944142" xml:space="preserve">
          <source>If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</source>
          <target state="new">If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</target>
        </trans-unit>
        <trans-unit id="c26a051d-6710-46bc-b0d7-6b437ecacdbe" xml:space="preserve">
          <source>Store credentials in a variable for reuse.</source>
          <target state="new">Store credentials in a variable for reuse.</target>
        </trans-unit>
        <trans-unit id="cfee62cc-e43d-4f2a-b57f-39fc7e86673c" xml:space="preserve">
          <source>Running a simple command like this:</source>
          <target state="new">Running a simple command like this:</target>
        </trans-unit>
        <trans-unit id="fefc5a58-22d0-4564-8a86-202a783352fe" xml:space="preserve">
          <source>And then running something like this:</source>
          <target state="new">And then running something like this:</target>
        </trans-unit>
        <trans-unit id="afbe5e4d-d02a-4ec6-9491-957202612caf" xml:space="preserve">
          <source>Will mean that you only get prompted once per script/PowerShell session for your credentials.</source>
          <target state="new">Will mean that you only get prompted once per script/PowerShell session for your credentials.</target>
        </trans-unit>
        <trans-unit id="b5e90fe4-60c2-48d3-ae2d-81e49c01f521" xml:space="preserve">
          <source>Code your credentials into your scripts.</source>
          <target state="new">Code your credentials into your scripts.</target>
        </trans-unit>
        <trans-unit id="16335f60-e1dc-442e-9d44-2585acd53d4a" xml:space="preserve">
          <source><bpt id="5adaef60-00d0-4999-b504-4ebacd9e217d">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="5adaef60-00d0-4999-b504-4ebacd9e217d">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="5adaef60-00d0-4999-b504-4ebacd9e217d">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="5adaef60-00d0-4999-b504-4ebacd9e217d">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="c08b19ba-1836-44aa-a70e-554b36a16172" xml:space="preserve">
          <source>Warning:  _Do not do this in a production system.</source>
          <target state="new">Warning:  _Do not do this in a production system.</target>
        </trans-unit>
        <trans-unit id="ecd24fe9-a83f-4d70-a027-03f43af88529" xml:space="preserve">
          <source>Do not do this with real passwords._</source>
          <target state="new">Do not do this with real passwords._</target>
        </trans-unit>
        <trans-unit id="174e0281-fcb4-46ec-a972-6004031648b9" xml:space="preserve">
          <source>You can hand craft a PSCredential object with some code like this:</source>
          <target state="new">You can hand craft a PSCredential object with some code like this:</target>
        </trans-unit>
        <trans-unit id="d1a28e08-8fb0-43f9-b622-d26638091c4a" xml:space="preserve">
          <source>Grossly insecure - but useful for testing.</source>
          <target state="new">Grossly insecure - but useful for testing.</target>
        </trans-unit>
        <trans-unit id="6ca6d5a5-4444-4a66-a097-0431dd3b3034" xml:space="preserve">
          <source>Now you get no prompts at all in this session.</source>
          <target state="new">Now you get no prompts at all in this session.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>