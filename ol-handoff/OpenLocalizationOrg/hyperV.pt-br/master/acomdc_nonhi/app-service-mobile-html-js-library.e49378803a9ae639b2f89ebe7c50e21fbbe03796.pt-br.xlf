<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="pt-br">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">acomdc_nonhi</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">85946ceca50a302031b9035d21f1569580ac8503</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1457980" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="create-client"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Create a Client Connection</source>
          <target state="new"><ph id="ph1">&lt;a name="create-client"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Create a Client Connection</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Create a client connection by creating a <ph id="ph1">`WindowsAzure.MobileServiceClient`</ph> object.</source>
          <target state="new">Create a client connection by creating a <ph id="ph1">`WindowsAzure.MobileServiceClient`</ph> object.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Replace <ph id="ph1">`appUrl`</ph> with the URL to your Mobile App.</source>
          <target state="new">Replace <ph id="ph1">`appUrl`</ph> with the URL to your Mobile App.</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="table-reference"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Work with Tables</source>
          <target state="new"><ph id="ph1">&lt;a name="table-reference"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Work with Tables</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>To access or update data, create a reference to the backend table.</source>
          <target state="new">To access or update data, create a reference to the backend table.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Replace <ph id="ph1">`tableName`</ph> with the name of your table</source>
          <target state="new">Replace <ph id="ph1">`tableName`</ph> with the name of your table</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Once you have a table reference, you can work further with your table:</source>
          <target state="new">Once you have a table reference, you can work further with your table:</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Query a Table</source>
          <target state="new">Query a Table</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Filtering Data</source>
          <target state="new">Filtering Data</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Paging through Data</source>
          <target state="new">Paging through Data</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Sorting Data</source>
          <target state="new">Sorting Data</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Inserting Data</source>
          <target state="new">Inserting Data</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Modifying Data</source>
          <target state="new">Modifying Data</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Deleting Data</source>
          <target state="new">Deleting Data</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="querying"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Query a Table Reference</source>
          <target state="new"><ph id="ph1">&lt;a name="querying"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Query a Table Reference</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Once you have a table reference, you can use it to query for data on the server.</source>
          <target state="new">Once you have a table reference, you can use it to query for data on the server.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Queries are made in a "LINQ-like" language.</source>
          <target state="new">Queries are made in a "LINQ-like" language.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To return all data from the table, use the following:</source>
          <target state="new">To return all data from the table, use the following:</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The success function is called with the results.</source>
          <target state="new">The success function is called with the results.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Do not use <ph id="ph1">`for (var i in results)`</ph> in</source>
          <target state="new">Do not use <ph id="ph1">`for (var i in results)`</ph> in</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>the success function as that will iterate over information that is included in the results</source>
          <target state="new">the success function as that will iterate over information that is included in the results</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>when other query functions (such as <ph id="ph1">`.includeTotalCount()`</ph>) are used.</source>
          <target state="new">when other query functions (such as <ph id="ph1">`.includeTotalCount()`</ph>) are used.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For more information on the Query syntax, refer to the [Query object documentation].</source>
          <target state="new">For more information on the Query syntax, refer to the [Query object documentation].</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="table-filter"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Filtering Data on the server</source>
          <target state="new"><ph id="ph1">&lt;a name="table-filter"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Filtering Data on the server</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>You can use a <ph id="ph1">`where`</ph> clause on the table reference:</source>
          <target state="new">You can use a <ph id="ph1">`where`</ph> clause on the table reference:</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>You can also use a function that filters the object.</source>
          <target state="new">You can also use a function that filters the object.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>In this case the <ph id="ph1">`this`</ph> variable is assigned to the</source>
          <target state="new">In this case the <ph id="ph1">`this`</ph> variable is assigned to the</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>current object being filtered.</source>
          <target state="new">current object being filtered.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The following is functionally equivalent to the prior example:</source>
          <target state="new">The following is functionally equivalent to the prior example:</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="table-paging"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Paging through data</source>
          <target state="new"><ph id="ph1">&lt;a name="table-paging"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Paging through data</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Utilize the take() and skip() methods.</source>
          <target state="new">Utilize the take() and skip() methods.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>For example, if you wish to split the table into 100-row records:</source>
          <target state="new">For example, if you wish to split the table into 100-row records:</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`.includeTotalCount()`</ph> method is used to add a totalCount field to the results object.</source>
          <target state="new">The <ph id="ph1">`.includeTotalCount()`</ph> method is used to add a totalCount field to the results object.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The</source>
          <target state="new">The</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>totalCount field is filled with the total number of records that would be returned if no paging</source>
          <target state="new">totalCount field is filled with the total number of records that would be returned if no paging</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>is used.</source>
          <target state="new">is used.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>You can then use the pages variable and some UI buttons to provide a page list; use loadPage() to</source>
          <target state="new">You can then use the pages variable and some UI buttons to provide a page list; use loadPage() to</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>load the new records for each page.</source>
          <target state="new">load the new records for each page.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>You should implement some sort of caching to speed access to</source>
          <target state="new">You should implement some sort of caching to speed access to</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>records that have already been loaded.</source>
          <target state="new">records that have already been loaded.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="sorting-data"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Return data sorted</source>
          <target state="new"><ph id="ph1">&lt;a name="sorting-data"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Return data sorted</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Use the .orderBy() or .orderByDescending() query methods:</source>
          <target state="new">Use the .orderBy() or .orderByDescending() query methods:</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>For more information on the Query object, refer to the [Query object documentation].</source>
          <target state="new">For more information on the Query object, refer to the [Query object documentation].</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="inserting"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Insert Data</source>
          <target state="new"><ph id="ph1">&lt;a name="inserting"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Insert Data</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Create a JavaScript object with the appropriate date and call table.insert() asynchronously:</source>
          <target state="new">Create a JavaScript object with the appropriate date and call table.insert() asynchronously:</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>On successful insertion, the inserted item is returned with the additional fields that are required</source>
          <target state="new">On successful insertion, the inserted item is returned with the additional fields that are required</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>for sync operations.</source>
          <target state="new">for sync operations.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>You should update your own cache with this information for later updates.</source>
          <target state="new">You should update your own cache with this information for later updates.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Note that the Azure Mobile Apps Node.js Server SDK supports dynamic schema for development purposes.</source>
          <target state="new">Note that the Azure Mobile Apps Node.js Server SDK supports dynamic schema for development purposes.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>In the case of dynamic schema, the schema of the table is updated on the fly, allowing you to add</source>
          <target state="new">In the case of dynamic schema, the schema of the table is updated on the fly, allowing you to add</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>columns to the table just by specifying them in an insert or update operation.</source>
          <target state="new">columns to the table just by specifying them in an insert or update operation.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>We recommend that</source>
          <target state="new">We recommend that</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>you turn off dynamic schema before moving your application to production.</source>
          <target state="new">you turn off dynamic schema before moving your application to production.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="modifying"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Modify Data</source>
          <target state="new"><ph id="ph1">&lt;a name="modifying"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Modify Data</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Similar to the .insert() method, you should create an Update object and then call .update().</source>
          <target state="new">Similar to the .insert() method, you should create an Update object and then call .update().</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The update</source>
          <target state="new">The update</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>object must contain the ID of the record to be updated - this is obtained when reading the record or</source>
          <target state="new">object must contain the ID of the record to be updated - this is obtained when reading the record or</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>when calling .insert().</source>
          <target state="new">when calling .insert().</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="deleting"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Delete Data</source>
          <target state="new"><ph id="ph1">&lt;a name="deleting"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Delete Data</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Call the .del() method to delete a record.</source>
          <target state="new">Call the .del() method to delete a record.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Pass the ID in an object reference:</source>
          <target state="new">Pass the ID in an object reference:</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>