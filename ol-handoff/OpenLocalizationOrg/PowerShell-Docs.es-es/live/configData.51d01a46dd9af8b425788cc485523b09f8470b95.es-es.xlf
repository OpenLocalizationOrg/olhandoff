<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="es-es" original="foo.file" tool-id="a90b4568-e08b-4a37-9398-4f589c2f6c63" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="a90b4568-e08b-4a37-9398-4f589c2f6c63" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
      <olfilehash xmlns="">25ea7bc8b398577cb2916ec833d61c38af812637</olfilehash>
    </header>
    <body>
      <group id="fb6fb942-bf38-4692-965e-7ff3d2b0a46d">
        <trans-unit id="433518a2-b6ca-4d89-a71d-679c13bdb817" xml:space="preserve">
          <source>Separating Configuration and Environment Data</source>
          <target state="new">Separating Configuration and Environment Data</target>
        </trans-unit>
        <trans-unit id="9ca29a3b-0b74-4e6e-8145-ecf1d2efdac9" xml:space="preserve">
          <source>Applies To: Windows PowerShell 4.0, Windows PowerShell 5.0</source>
          <target state="new">Applies To: Windows PowerShell 4.0, Windows PowerShell 5.0</target>
        </trans-unit>
        <trans-unit id="58fb0b5e-a77e-4a70-aa17-59c9fef48b51" xml:space="preserve">
          <source>In Windows PowerShell Desired State Configuration (DSC), it is possible to separate configuration data from the logic of your configuration.</source>
          <target state="new">In Windows PowerShell Desired State Configuration (DSC), it is possible to separate configuration data from the logic of your configuration.</target>
        </trans-unit>
        <trans-unit id="aaa32714-cf17-42cf-9e03-73bbf6540f8c" xml:space="preserve">
          <source>Another way to look at this is to consider the structural configuration (for example, a configuration might require that IIS be installed) as separate from the environmental configuration (that is, whether the situation is a test environment vs. a production one—the node names would be different, but the configuration applied to them would be the same).</source>
          <target state="new">Another way to look at this is to consider the structural configuration (for example, a configuration might require that IIS be installed) as separate from the environmental configuration (that is, whether the situation is a test environment vs. a production one—the node names would be different, but the configuration applied to them would be the same).</target>
        </trans-unit>
        <trans-unit id="0174af3a-0b59-49d1-8c12-46a0c2f25cba" xml:space="preserve">
          <source>This has the following advantages:</source>
          <target state="new">This has the following advantages:</target>
        </trans-unit>
        <trans-unit id="5f9b1471-12fa-4c5a-84cc-99e81c29277a" xml:space="preserve">
          <source>It allows you to reuse your configuration data for different resources, nodes, and configurations.</source>
          <target state="new">It allows you to reuse your configuration data for different resources, nodes, and configurations.</target>
        </trans-unit>
        <trans-unit id="e756b6d4-3085-4e30-b008-70e27b3cd101" xml:space="preserve">
          <source>Configuration logic is more reusable if it does not contain hard-coded data.</source>
          <target state="new">Configuration logic is more reusable if it does not contain hard-coded data.</target>
        </trans-unit>
        <trans-unit id="feaad778-dadb-4374-94df-5f8b89fa1f7f" xml:space="preserve">
          <source>This is similar to good scripting guidelines for functions.</source>
          <target state="new">This is similar to good scripting guidelines for functions.</target>
        </trans-unit>
        <trans-unit id="527b5268-e05d-4f05-9d8d-6301010eeb6e" xml:space="preserve">
          <source>If some of the data needs to change, you can make the changes in one location, thereby saving time and reducing errors.</source>
          <target state="new">If some of the data needs to change, you can make the changes in one location, thereby saving time and reducing errors.</target>
        </trans-unit>
        <trans-unit id="7c9947c3-9ab1-499b-a96a-fbea466c0097" xml:space="preserve">
          <source>Basic concepts and examples</source>
          <target state="new">Basic concepts and examples</target>
        </trans-unit>
        <trans-unit id="beaa3a79-729e-4324-86dc-f2043656c8d7" xml:space="preserve">
          <source>To specify the environmental part of the configuration, DSC uses the <bpt id="bc4d9f8c-7e58-407f-a38f-c06f77945e40">&lt;strong&gt;</bpt>ConfigurationData<ept id="bc4d9f8c-7e58-407f-a38f-c06f77945e40">&lt;/strong&gt;</ept> parameter, which is a hash table (or it can take a .psd1 file which contains the hash table).</source>
          <target state="new">To specify the environmental part of the configuration, DSC uses the <bpt id="bc4d9f8c-7e58-407f-a38f-c06f77945e40">&lt;strong&gt;</bpt>ConfigurationData<ept id="bc4d9f8c-7e58-407f-a38f-c06f77945e40">&lt;/strong&gt;</ept> parameter, which is a hash table (or it can take a .psd1 file which contains the hash table).</target>
        </trans-unit>
        <trans-unit id="50617a7b-fa01-41c3-a12e-9f81d39b8468" xml:space="preserve">
          <source>This hash table must have at least one key <bpt id="4cafdd77-e76e-48ed-bc72-a483a30dee6e">&lt;strong&gt;</bpt>AllNodes<ept id="4cafdd77-e76e-48ed-bc72-a483a30dee6e">&lt;/strong&gt;</ept>, which has a structured value.</source>
          <target state="new">This hash table must have at least one key <bpt id="4cafdd77-e76e-48ed-bc72-a483a30dee6e">&lt;strong&gt;</bpt>AllNodes<ept id="4cafdd77-e76e-48ed-bc72-a483a30dee6e">&lt;/strong&gt;</ept>, which has a structured value.</target>
        </trans-unit>
        <trans-unit id="aa0140e8-26b0-42f0-9410-4fbda0f5417b" xml:space="preserve">
          <source>For example:</source>
          <target state="new">For example:</target>
        </trans-unit>
        <trans-unit id="ef73b07e-6e60-4e13-b281-0d8a3403324b" xml:space="preserve">
          <source>Note the AllNodes key, whose value is an array.</source>
          <target state="new">Note the AllNodes key, whose value is an array.</target>
        </trans-unit>
        <trans-unit id="24ad0878-7403-42a9-8e6c-7445957a648b" xml:space="preserve">
          <source>Each element of this array is also a hash table, which requires NodeName as a key:</source>
          <target state="new">Each element of this array is also a hash table, which requires NodeName as a key:</target>
        </trans-unit>
        <trans-unit id="f29475ff-ad10-4f9f-badc-60305443287e" xml:space="preserve">
          <source>Each hash table entry in AllNodes corresponds to configuration data to a node in the configuration.</source>
          <target state="new">Each hash table entry in AllNodes corresponds to configuration data to a node in the configuration.</target>
        </trans-unit>
        <trans-unit id="74b3e8d3-ee08-4f2b-814b-8edee1dab96a" xml:space="preserve">
          <source>In addition to the required NodeName key, you can add other keys to the hash table as well, for example:</source>
          <target state="new">In addition to the required NodeName key, you can add other keys to the hash table as well, for example:</target>
        </trans-unit>
        <trans-unit id="9df90476-4118-4008-bc2b-b528b8622dab" xml:space="preserve">
          <source>DSC offers three special variables to use in the configuration script:</source>
          <target state="new">DSC offers three special variables to use in the configuration script:</target>
        </trans-unit>
        <trans-unit id="b80cad94-c61d-4d71-9d1a-5d51551db615" xml:space="preserve">
          <source><bpt id="148707ec-2fd1-49c7-9cc6-34480da149b4">&lt;strong&gt;</bpt>$AllNodes<ept id="148707ec-2fd1-49c7-9cc6-34480da149b4">&lt;/strong&gt;</ept>: Refers to all of the nodes.</source>
          <target state="new"><bpt id="148707ec-2fd1-49c7-9cc6-34480da149b4">&lt;strong&gt;</bpt>$AllNodes<ept id="148707ec-2fd1-49c7-9cc6-34480da149b4">&lt;/strong&gt;</ept>: Refers to all of the nodes.</target>
        </trans-unit>
        <trans-unit id="0f901b50-aca5-4c34-bc03-2e204a353d84" xml:space="preserve">
          <source>You can use filtering with <bpt id="752f862e-956c-42d5-afab-e87a12f82911">&lt;strong&gt;</bpt>.Where()<ept id="752f862e-956c-42d5-afab-e87a12f82911">&lt;/strong&gt;</ept> and <bpt id="f5a7d7e1-1e1f-45b1-b589-16cc9d4a8039">&lt;strong&gt;</bpt>.ForEach()<ept id="f5a7d7e1-1e1f-45b1-b589-16cc9d4a8039">&lt;/strong&gt;</ept>, so instead of hard-coding node names to select particular nodes for action, you could write something like this to select VM-1 and VM-3 in the above example:</source>
          <target state="new">You can use filtering with <bpt id="752f862e-956c-42d5-afab-e87a12f82911">&lt;strong&gt;</bpt>.Where()<ept id="752f862e-956c-42d5-afab-e87a12f82911">&lt;/strong&gt;</ept> and <bpt id="f5a7d7e1-1e1f-45b1-b589-16cc9d4a8039">&lt;strong&gt;</bpt>.ForEach()<ept id="f5a7d7e1-1e1f-45b1-b589-16cc9d4a8039">&lt;/strong&gt;</ept>, so instead of hard-coding node names to select particular nodes for action, you could write something like this to select VM-1 and VM-3 in the above example:</target>
        </trans-unit>
        <trans-unit id="b172f224-792a-4513-9f43-874b9e87c9b1" xml:space="preserve">
          <source><bpt id="66ecff43-741a-44ec-b713-b4cb1f5bab83">&lt;strong&gt;</bpt>$Node<ept id="66ecff43-741a-44ec-b713-b4cb1f5bab83">&lt;/strong&gt;</ept>: Once the set of nodes is filtered, you can use $Node to refer to the particular entry.</source>
          <target state="new"><bpt id="66ecff43-741a-44ec-b713-b4cb1f5bab83">&lt;strong&gt;</bpt>$Node<ept id="66ecff43-741a-44ec-b713-b4cb1f5bab83">&lt;/strong&gt;</ept>: Once the set of nodes is filtered, you can use $Node to refer to the particular entry.</target>
        </trans-unit>
        <trans-unit id="8ed7635a-38da-4537-925b-cbc051f83b88" xml:space="preserve">
          <source>For example:</source>
          <target state="new">For example:</target>
        </trans-unit>
        <trans-unit id="28f23976-d18f-45da-8998-511142c4f642" xml:space="preserve">
          <source>To apply a property to all nodes, you can set NodeName = “*”.</source>
          <target state="new">To apply a property to all nodes, you can set NodeName = “*”.</target>
        </trans-unit>
        <trans-unit id="c5714015-9f23-47fd-b64d-df38a35bc8f5" xml:space="preserve">
          <source>For example, to give every node the LogPath property, you could do this:</source>
          <target state="new">For example, to give every node the LogPath property, you could do this:</target>
        </trans-unit>
        <trans-unit id="30df3f5d-74b6-4c29-a968-7841b6a2d04c" xml:space="preserve">
          <source><bpt id="c541d603-7684-4e56-82e0-d6eb2c3a632b">&lt;strong&gt;</bpt>$ConfigurationData<ept id="c541d603-7684-4e56-82e0-d6eb2c3a632b">&lt;/strong&gt;</ept>: You can use this variable inside a configuration to access the configuration data hash table passed as a parameter.</source>
          <target state="new"><bpt id="c541d603-7684-4e56-82e0-d6eb2c3a632b">&lt;strong&gt;</bpt>$ConfigurationData<ept id="c541d603-7684-4e56-82e0-d6eb2c3a632b">&lt;/strong&gt;</ept>: You can use this variable inside a configuration to access the configuration data hash table passed as a parameter.</target>
        </trans-unit>
        <trans-unit id="65db9751-9dae-4532-895c-abf0f39c0524" xml:space="preserve">
          <source>For example:</source>
          <target state="new">For example:</target>
        </trans-unit>
        <trans-unit id="a0d52d90-bfde-48f7-9858-0267b207d3b2" xml:space="preserve">
          <source>You can find a full example included in the <bpt id="a98eaee0-bdc5-4b3f-817a-6cd202ed85bfCapsExtId1">&lt;linkText&gt;</bpt>xWebAdministration module<ept id="a98eaee0-bdc5-4b3f-817a-6cd202ed85bfCapsExtId1">&lt;/linkText&gt;</ept><bpt id="a98eaee0-bdc5-4b3f-817a-6cd202ed85bfCapsExtId2">&lt;title&gt;</bpt><ept id="a98eaee0-bdc5-4b3f-817a-6cd202ed85bfCapsExtId2">&lt;/title&gt;</ept>.</source>
          <target state="new">You can find a full example included in the <bpt id="a98eaee0-bdc5-4b3f-817a-6cd202ed85bfCapsExtId1">&lt;linkText&gt;</bpt>xWebAdministration module<ept id="a98eaee0-bdc5-4b3f-817a-6cd202ed85bfCapsExtId1">&lt;/linkText&gt;</ept><bpt id="a98eaee0-bdc5-4b3f-817a-6cd202ed85bfCapsExtId2">&lt;title&gt;</bpt><ept id="a98eaee0-bdc5-4b3f-817a-6cd202ed85bfCapsExtId2">&lt;/title&gt;</ept>.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>