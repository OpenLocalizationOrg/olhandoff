<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="es-es" original="foo.file" tool-id="60f03930-d7aa-438c-a419-7431febbc27a" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="60f03930-d7aa-438c-a419-7431febbc27a" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
      <olfilehash xmlns="">25ea7bc8b398577cb2916ec833d61c38af812637</olfilehash>
    </header>
    <body>
      <group id="3e029850-6d08-4ffe-af36-ec4293762e5e">
        <trans-unit id="acacbb96-b599-4749-8afc-a10fb1fdab43" xml:space="preserve">
          <source>Separating Configuration and Environment Data</source>
          <target state="new">Separating Configuration and Environment Data</target>
        </trans-unit>
        <trans-unit id="eda1b09b-e8fb-4cec-aa1b-27032c189385" xml:space="preserve">
          <source>Applies To: Windows PowerShell 4.0, Windows PowerShell 5.0</source>
          <target state="new">Applies To: Windows PowerShell 4.0, Windows PowerShell 5.0</target>
        </trans-unit>
        <trans-unit id="3438c848-aed3-41b1-a1f9-406a6b9c113a" xml:space="preserve">
          <source>In Windows PowerShell Desired State Configuration (DSC), it is possible to separate configuration data from the logic of your configuration.</source>
          <target state="new">In Windows PowerShell Desired State Configuration (DSC), it is possible to separate configuration data from the logic of your configuration.</target>
        </trans-unit>
        <trans-unit id="bba0bd0a-1f2b-49e7-904f-826e9b3c20a1" xml:space="preserve">
          <source>Another way to look at this is to consider the structural configuration (for example, a configuration might require that IIS be installed) as separate from the environmental configuration (that is, whether the situation is a test environment vs. a production one—the node names would be different, but the configuration applied to them would be the same).</source>
          <target state="new">Another way to look at this is to consider the structural configuration (for example, a configuration might require that IIS be installed) as separate from the environmental configuration (that is, whether the situation is a test environment vs. a production one—the node names would be different, but the configuration applied to them would be the same).</target>
        </trans-unit>
        <trans-unit id="2669cea5-620c-4f3d-9846-3345bd664db1" xml:space="preserve">
          <source>This has the following advantages:</source>
          <target state="new">This has the following advantages:</target>
        </trans-unit>
        <trans-unit id="eeb67dcc-a684-4ba5-8d07-abd644bc0487" xml:space="preserve">
          <source>It allows you to reuse your configuration data for different resources, nodes, and configurations.</source>
          <target state="new">It allows you to reuse your configuration data for different resources, nodes, and configurations.</target>
        </trans-unit>
        <trans-unit id="5b3fc47a-9433-4056-b034-7e8aee7b4f5f" xml:space="preserve">
          <source>Configuration logic is more reusable if it does not contain hard-coded data.</source>
          <target state="new">Configuration logic is more reusable if it does not contain hard-coded data.</target>
        </trans-unit>
        <trans-unit id="9c216ca7-cf5e-4b12-bac5-39eae099fcc5" xml:space="preserve">
          <source>This is similar to good scripting guidelines for functions.</source>
          <target state="new">This is similar to good scripting guidelines for functions.</target>
        </trans-unit>
        <trans-unit id="698fa60e-8d41-49a5-91b7-7c66a40730c9" xml:space="preserve">
          <source>If some of the data needs to change, you can make the changes in one location, thereby saving time and reducing errors.</source>
          <target state="new">If some of the data needs to change, you can make the changes in one location, thereby saving time and reducing errors.</target>
        </trans-unit>
        <trans-unit id="2e7dd5c9-7fae-491d-bf71-b9a4a716219e" xml:space="preserve">
          <source>Basic concepts and examples</source>
          <target state="new">Basic concepts and examples</target>
        </trans-unit>
        <trans-unit id="b080df5f-ff93-4f2a-a565-66b3362b16af" xml:space="preserve">
          <source>To specify the environmental part of the configuration, DSC uses the <bpt id="a3ead049-097a-44d2-b5b5-2945c60e484e">&lt;strong&gt;</bpt>ConfigurationData<ept id="a3ead049-097a-44d2-b5b5-2945c60e484e">&lt;/strong&gt;</ept> parameter, which is a hash table (or it can take a .psd1 file which contains the hash table).</source>
          <target state="new">To specify the environmental part of the configuration, DSC uses the <bpt id="a3ead049-097a-44d2-b5b5-2945c60e484e">&lt;strong&gt;</bpt>ConfigurationData<ept id="a3ead049-097a-44d2-b5b5-2945c60e484e">&lt;/strong&gt;</ept> parameter, which is a hash table (or it can take a .psd1 file which contains the hash table).</target>
        </trans-unit>
        <trans-unit id="6f1de2db-b6af-4ad0-8c0c-0c3d8343ff9d" xml:space="preserve">
          <source>This hash table must have at least one key <bpt id="3c556820-16be-4ccd-ae67-4d40e0c8d497">&lt;strong&gt;</bpt>AllNodes<ept id="3c556820-16be-4ccd-ae67-4d40e0c8d497">&lt;/strong&gt;</ept>, which has a structured value.</source>
          <target state="new">This hash table must have at least one key <bpt id="3c556820-16be-4ccd-ae67-4d40e0c8d497">&lt;strong&gt;</bpt>AllNodes<ept id="3c556820-16be-4ccd-ae67-4d40e0c8d497">&lt;/strong&gt;</ept>, which has a structured value.</target>
        </trans-unit>
        <trans-unit id="73d9be88-dbe8-4c53-b426-9d936a975690" xml:space="preserve">
          <source>For example:</source>
          <target state="new">For example:</target>
        </trans-unit>
        <trans-unit id="7959e01d-272c-4369-9576-a14718481f33" xml:space="preserve">
          <source>Note the AllNodes key, whose value is an array.</source>
          <target state="new">Note the AllNodes key, whose value is an array.</target>
        </trans-unit>
        <trans-unit id="1c4ba8eb-51b6-4663-8106-9b8d3328c39d" xml:space="preserve">
          <source>Each element of this array is also a hash table, which requires NodeName as a key:</source>
          <target state="new">Each element of this array is also a hash table, which requires NodeName as a key:</target>
        </trans-unit>
        <trans-unit id="5405ffc2-6aa3-42ca-b9b3-ea574ad7b89c" xml:space="preserve">
          <source>Each hash table entry in AllNodes corresponds to configuration data to a node in the configuration.</source>
          <target state="new">Each hash table entry in AllNodes corresponds to configuration data to a node in the configuration.</target>
        </trans-unit>
        <trans-unit id="0322c526-70de-4ef0-9781-3bf844555a12" xml:space="preserve">
          <source>In addition to the required NodeName key, you can add other keys to the hash table as well, for example:</source>
          <target state="new">In addition to the required NodeName key, you can add other keys to the hash table as well, for example:</target>
        </trans-unit>
        <trans-unit id="3674cd3e-d886-413d-bfff-a0cdda318e8e" xml:space="preserve">
          <source>DSC offers three special variables to use in the configuration script:</source>
          <target state="new">DSC offers three special variables to use in the configuration script:</target>
        </trans-unit>
        <trans-unit id="e157b798-e5eb-4194-92d4-efcef203401e" xml:space="preserve">
          <source><bpt id="c90b74ff-d6d3-4312-b4e3-f4b871db80e2">&lt;strong&gt;</bpt>$AllNodes<ept id="c90b74ff-d6d3-4312-b4e3-f4b871db80e2">&lt;/strong&gt;</ept>: Refers to all of the nodes.</source>
          <target state="new"><bpt id="c90b74ff-d6d3-4312-b4e3-f4b871db80e2">&lt;strong&gt;</bpt>$AllNodes<ept id="c90b74ff-d6d3-4312-b4e3-f4b871db80e2">&lt;/strong&gt;</ept>: Refers to all of the nodes.</target>
        </trans-unit>
        <trans-unit id="5a7cdad1-dc92-463d-b397-0e58d7e2bec4" xml:space="preserve">
          <source>You can use filtering with <bpt id="e596163a-2b4d-42d5-a921-ac30e72f384c">&lt;strong&gt;</bpt>.Where()<ept id="e596163a-2b4d-42d5-a921-ac30e72f384c">&lt;/strong&gt;</ept> and <bpt id="c3a9762a-43b7-42bc-992d-d0e00fe0665c">&lt;strong&gt;</bpt>.ForEach()<ept id="c3a9762a-43b7-42bc-992d-d0e00fe0665c">&lt;/strong&gt;</ept>, so instead of hard-coding node names to select particular nodes for action, you could write something like this to select VM-1 and VM-3 in the above example:</source>
          <target state="new">You can use filtering with <bpt id="e596163a-2b4d-42d5-a921-ac30e72f384c">&lt;strong&gt;</bpt>.Where()<ept id="e596163a-2b4d-42d5-a921-ac30e72f384c">&lt;/strong&gt;</ept> and <bpt id="c3a9762a-43b7-42bc-992d-d0e00fe0665c">&lt;strong&gt;</bpt>.ForEach()<ept id="c3a9762a-43b7-42bc-992d-d0e00fe0665c">&lt;/strong&gt;</ept>, so instead of hard-coding node names to select particular nodes for action, you could write something like this to select VM-1 and VM-3 in the above example:</target>
        </trans-unit>
        <trans-unit id="38618946-52b4-4713-a7d4-9ab31936b51b" xml:space="preserve">
          <source><bpt id="ee21fd56-7ba2-4f3b-b0c5-59048939e730">&lt;strong&gt;</bpt>$Node<ept id="ee21fd56-7ba2-4f3b-b0c5-59048939e730">&lt;/strong&gt;</ept>: Once the set of nodes is filtered, you can use $Node to refer to the particular entry.</source>
          <target state="new"><bpt id="ee21fd56-7ba2-4f3b-b0c5-59048939e730">&lt;strong&gt;</bpt>$Node<ept id="ee21fd56-7ba2-4f3b-b0c5-59048939e730">&lt;/strong&gt;</ept>: Once the set of nodes is filtered, you can use $Node to refer to the particular entry.</target>
        </trans-unit>
        <trans-unit id="84541db4-62b8-4e7f-9f28-a9e90724aeda" xml:space="preserve">
          <source>For example:</source>
          <target state="new">For example:</target>
        </trans-unit>
        <trans-unit id="f9272d29-526a-491c-addd-4039d7a20cec" xml:space="preserve">
          <source>To apply a property to all nodes, you can set NodeName = “*”.</source>
          <target state="new">To apply a property to all nodes, you can set NodeName = “*”.</target>
        </trans-unit>
        <trans-unit id="691cfec0-dd5c-4e9c-9560-ea9efd73e09d" xml:space="preserve">
          <source>For example, to give every node the LogPath property, you could do this:</source>
          <target state="new">For example, to give every node the LogPath property, you could do this:</target>
        </trans-unit>
        <trans-unit id="d8605663-2cb7-4920-a210-8816a2b206ca" xml:space="preserve">
          <source><bpt id="0c299f24-5d9f-4559-adcd-36105dfcf248">&lt;strong&gt;</bpt>$ConfigurationData<ept id="0c299f24-5d9f-4559-adcd-36105dfcf248">&lt;/strong&gt;</ept>: You can use this variable inside a configuration to access the configuration data hash table passed as a parameter.</source>
          <target state="new"><bpt id="0c299f24-5d9f-4559-adcd-36105dfcf248">&lt;strong&gt;</bpt>$ConfigurationData<ept id="0c299f24-5d9f-4559-adcd-36105dfcf248">&lt;/strong&gt;</ept>: You can use this variable inside a configuration to access the configuration data hash table passed as a parameter.</target>
        </trans-unit>
        <trans-unit id="387e17ba-acd3-4e07-94bf-c8f8481c9c94" xml:space="preserve">
          <source>For example:</source>
          <target state="new">For example:</target>
        </trans-unit>
        <trans-unit id="2ad2c2a5-f895-4f5d-b38c-27dce1e1ae1e" xml:space="preserve">
          <source>You can find a full example included in the <bpt id="84b960e3-5b7d-4118-aa18-6e5999dbf264CapsExtId1">&lt;linkText&gt;</bpt>xWebAdministration module<ept id="84b960e3-5b7d-4118-aa18-6e5999dbf264CapsExtId1">&lt;/linkText&gt;</ept><bpt id="84b960e3-5b7d-4118-aa18-6e5999dbf264CapsExtId2">&lt;title&gt;</bpt><ept id="84b960e3-5b7d-4118-aa18-6e5999dbf264CapsExtId2">&lt;/title&gt;</ept>.</source>
          <target state="new">You can find a full example included in the <bpt id="84b960e3-5b7d-4118-aa18-6e5999dbf264CapsExtId1">&lt;linkText&gt;</bpt>xWebAdministration module<ept id="84b960e3-5b7d-4118-aa18-6e5999dbf264CapsExtId1">&lt;/linkText&gt;</ept><bpt id="84b960e3-5b7d-4118-aa18-6e5999dbf264CapsExtId2">&lt;title&gt;</bpt><ept id="84b960e3-5b7d-4118-aa18-6e5999dbf264CapsExtId2">&lt;/title&gt;</ept>.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>