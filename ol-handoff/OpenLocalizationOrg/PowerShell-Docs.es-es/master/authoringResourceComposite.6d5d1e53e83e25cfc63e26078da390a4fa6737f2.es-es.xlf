<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="es-es" original="1/5/2016 3:27:20 PM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c7b9c9ffe6a4a82c8d8935ab75d9942bf8b9970d</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>Composite resources: Using a DSC configuration as a resource</source>
            <target state="new">Composite resources: Using a DSC configuration as a resource</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>Applies To: Windows PowerShell 4.0, Windows PowerShell 5.0</source>
            <target state="new">Applies To: Windows PowerShell 4.0, Windows PowerShell 5.0</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>In real-world situations, configurations can become long and complex, calling many different resources and setting many different properties.</source>
            <target state="new">In real-world situations, configurations can become long and complex, calling many different resources and setting many different properties.</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>To help address this complexity, you can use a Windows PowerShell Desired State Configuration (DSC) configuration as a resource for other configurations.</source>
            <target state="new">To help address this complexity, you can use a Windows PowerShell Desired State Configuration (DSC) configuration as a resource for other configurations.</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>We call this a composite resource.</source>
            <target state="new">We call this a composite resource.</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>A composite resource is a DSC configuration that takes parameters.</source>
            <target state="new">A composite resource is a DSC configuration that takes parameters.</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>The parameters of the configuration act as the properties of the resource.</source>
            <target state="new">The parameters of the configuration act as the properties of the resource.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>The configuration is saved as a file with a **.</source>
            <target state="new">The configuration is saved as a file with a **.</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>schema.psm1** extension, and takes the place of both the MOF schema and the resource script in a typical DSC resource (for more information about DSC resources, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Windows PowerShell Desired State Configuration Resources<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">schema.psm1** extension, and takes the place of both the MOF schema and the resource script in a typical DSC resource (for more information about DSC resources, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Windows PowerShell Desired State Configuration Resources<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>Creating the composite resource</source>
            <target state="new">Creating the composite resource</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>In our example, we create a configuration that invokes a number of existing resources to configure virtual machines.</source>
            <target state="new">In our example, we create a configuration that invokes a number of existing resources to configure virtual machines.</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>Instead of specifying the values to be set in configuration blocks, the configuration takes a number of parameters that are then used in the configuration blocks.</source>
            <target state="new">Instead of specifying the values to be set in configuration blocks, the configuration takes a number of parameters that are then used in the configuration blocks.</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>Saving the configuration as a composite resource</source>
            <target state="new">Saving the configuration as a composite resource</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>To use the parameterized configuration as a DSC resource, save it in a directory structure like that of any other MOF-based resource, and name it with a <bpt id="2">&lt;strong&gt;</bpt>.schema.psm1<ept id="2">&lt;/strong&gt;</ept> extension.</source>
            <target state="new">To use the parameterized configuration as a DSC resource, save it in a directory structure like that of any other MOF-based resource, and name it with a <bpt id="2">&lt;strong&gt;</bpt>.schema.psm1<ept id="2">&lt;/strong&gt;</ept> extension.</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>For this example, we’ll name the file <bpt id="2">&lt;strong&gt;</bpt>xVirtualMachine.schema.psm1<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">For this example, we’ll name the file <bpt id="2">&lt;strong&gt;</bpt>xVirtualMachine.schema.psm1<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>You also need to create a manifest named <bpt id="2">&lt;strong&gt;</bpt>xVirtualMachine.psd1<ept id="2">&lt;/strong&gt;</ept> that contains the following line.</source>
            <target state="new">You also need to create a manifest named <bpt id="2">&lt;strong&gt;</bpt>xVirtualMachine.psd1<ept id="2">&lt;/strong&gt;</ept> that contains the following line.</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>Note that this is in addition to <bpt id="2">&lt;strong&gt;</bpt>MyDscResources.psd1<ept id="2">&lt;/strong&gt;</ept>, the module manifest for all resources under the <bpt id="4">&lt;strong&gt;</bpt>MyDscResources<ept id="4">&lt;/strong&gt;</ept> folder.</source>
            <target state="new">Note that this is in addition to <bpt id="2">&lt;strong&gt;</bpt>MyDscResources.psd1<ept id="2">&lt;/strong&gt;</ept>, the module manifest for all resources under the <bpt id="4">&lt;strong&gt;</bpt>MyDscResources<ept id="4">&lt;/strong&gt;</ept> folder.</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>When you are done, the folder structure should be as follows.</source>
            <target state="new">When you are done, the folder structure should be as follows.</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>The resource is now discoverable by using the Get-DscResource cmdlet, and its properties are discoverable by either that cmdlet or by using <bpt id="2">&lt;strong&gt;</bpt>Ctrl+Space<ept id="2">&lt;/strong&gt;</ept> auto-complete in the Windows PowerShell ISE.</source>
            <target state="new">The resource is now discoverable by using the Get-DscResource cmdlet, and its properties are discoverable by either that cmdlet or by using <bpt id="2">&lt;strong&gt;</bpt>Ctrl+Space<ept id="2">&lt;/strong&gt;</ept> auto-complete in the Windows PowerShell ISE.</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>Using the composite resource</source>
            <target state="new">Using the composite resource</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>Next we create a configuration that calls the composite resource.</source>
            <target state="new">Next we create a configuration that calls the composite resource.</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>This configuration calls the xVirtualMachine resource to create a virtual machine, and then calls the <bpt id="2">&lt;strong&gt;</bpt>xComputer<ept id="2">&lt;/strong&gt;</ept> resource to rename it.</source>
            <target state="new">This configuration calls the xVirtualMachine resource to create a virtual machine, and then calls the <bpt id="2">&lt;strong&gt;</bpt>xComputer<ept id="2">&lt;/strong&gt;</ept> resource to rename it.</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>See Also</source>
            <target state="new">See Also</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>Concepts</source>
            <target state="new">Concepts</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Writing a custom DSC resource with MOF<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Writing a custom DSC resource with MOF<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Get Started with Windows PowerShell Desired State Configuration<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Get Started with Windows PowerShell Desired State Configuration<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>