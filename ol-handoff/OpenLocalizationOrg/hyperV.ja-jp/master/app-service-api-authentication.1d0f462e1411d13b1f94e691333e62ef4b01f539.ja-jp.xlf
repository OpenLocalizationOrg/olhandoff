<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="ja-jp">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cb227730f1820a2e4a0aa9c554e62473658e6e98</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1457980" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Authentication and authorization for API Apps in Azure App Service | Microsoft Azure</source>
          <target state="new">Authentication and authorization for API Apps in Azure App Service | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn about the authentication and authorization services that Azure App Service provides for API Apps.</source>
          <target state="new">Learn about the authentication and authorization services that Azure App Service provides for API Apps.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Authentication and authorization for API Apps in Azure App Service</source>
          <target state="new">Authentication and authorization for API Apps in Azure App Service</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="new">Overview</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This article describes the options for handling authentication and authorization for API Apps in Azure App Service.</source>
          <target state="new">This article describes the options for handling authentication and authorization for API Apps in Azure App Service.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The following diagram illustrates some key characteristics of App Service authentication:</source>
          <target state="new">The following diagram illustrates some key characteristics of App Service authentication:</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>It preprocesses incoming API requests, giving you several options for how much authentication work you want to do in your own code.</source>
          <target state="new">It preprocesses incoming API requests, giving you several options for how much authentication work you want to do in your own code.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>It supports five authentication providers:  Azure Active Directory, Facebook, Google, Twitter, and Microsoft Account.</source>
          <target state="new">It supports five authentication providers:  Azure Active Directory, Facebook, Google, Twitter, and Microsoft Account.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>It works for both end user and service principal authentication.</source>
          <target state="new">It works for both end user and service principal authentication.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>It works the same for API Apps, Web Apps, and Mobile Apps.</source>
          <target state="new">It works the same for API Apps, Web Apps, and Mobile Apps.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Preprocessing incoming requests</source>
          <target state="new">Preprocessing incoming requests</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>App Service can prevent anonymous HTTP requests from reaching your API app, or authenticate those that have tokens before they reach your API app.</source>
          <target state="new">App Service can prevent anonymous HTTP requests from reaching your API app, or authenticate those that have tokens before they reach your API app.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For an API app you can configure one of three options:</source>
          <target state="new">For an API app you can configure one of three options:</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Allow only authenticated requests to reach your API app.</source>
          <target state="new">Allow only authenticated requests to reach your API app.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If an anonymous request is received from a browser, App Service will redirect to a logon page.</source>
          <target state="new">If an anonymous request is received from a browser, App Service will redirect to a logon page.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>That works if you know in advance which authentication provider (Google, Twitter, etc.) you want to use, you can configure App Service to handle the logon process for you.</source>
          <target state="new">That works if you know in advance which authentication provider (Google, Twitter, etc.) you want to use, you can configure App Service to handle the logon process for you.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>As an alternative, you can specify your own URL to which App Service will redirect anonymous requests.</source>
          <target state="new">As an alternative, you can specify your own URL to which App Service will redirect anonymous requests.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You can then give users a choice of authentication providers.</source>
          <target state="new">You can then give users a choice of authentication providers.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>With this option, you don't need to write any authentication code at all in your app, and authorization is simplified because the most important claims are provided in the HTTP headers.</source>
          <target state="new">With this option, you don't need to write any authentication code at all in your app, and authorization is simplified because the most important claims are provided in the HTTP headers.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Allow all requests to reach your API app, but validate authenticated requests and pass along authentication information in the HTTP headers.</source>
          <target state="new">Allow all requests to reach your API app, but validate authenticated requests and pass along authentication information in the HTTP headers.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This option gives you more flexibility in handling anonymous requests, and makes it easy to write code that needs access to the most common claims.</source>
          <target state="new">This option gives you more flexibility in handling anonymous requests, and makes it easy to write code that needs access to the most common claims.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Unlike option 1, you have to write code if you want to prevent anonymous users from using your API.</source>
          <target state="new">Unlike option 1, you have to write code if you want to prevent anonymous users from using your API.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Allow all requests to reach your API, take no action on authentication information in the requests.</source>
          <target state="new">Allow all requests to reach your API, take no action on authentication information in the requests.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This option leaves the tasks of authentication and authorization entirely up to your application code.</source>
          <target state="new">This option leaves the tasks of authentication and authorization entirely up to your application code.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">[</bpt>Azure portal<ept id="p1">](https://portal.azure.com/)</ept>, you select the option you want on the <bpt id="p2">**</bpt>Authentication / Authorization<ept id="p2">**</ept> blade.</source>
          <target state="new">In the <bpt id="p1">[</bpt>Azure portal<ept id="p1">](https://portal.azure.com/)</ept>, you select the option you want on the <bpt id="p2">**</bpt>Authentication / Authorization<ept id="p2">**</ept> blade.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For options 1 and 2, turn on <bpt id="p1">**</bpt>App Service Authentication<ept id="p1">**</ept>, and in the <bpt id="p2">**</bpt>Action to take when requests is not authenticated<ept id="p2">**</ept> drop-down list choose <bpt id="p3">**</bpt>Log in<ept id="p3">**</ept> or <bpt id="p4">**</bpt>Allow request (no action)<ept id="p4">**</ept>.</source>
          <target state="new">For options 1 and 2, turn on <bpt id="p1">**</bpt>App Service Authentication<ept id="p1">**</ept>, and in the <bpt id="p2">**</bpt>Action to take when requests is not authenticated<ept id="p2">**</ept> drop-down list choose <bpt id="p3">**</bpt>Log in<ept id="p3">**</ept> or <bpt id="p4">**</bpt>Allow request (no action)<ept id="p4">**</ept>.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>If you choose <bpt id="p1">**</bpt>Log in<ept id="p1">**</ept>, you have to choose an authentication provider and configure that provider.</source>
          <target state="new">If you choose <bpt id="p1">**</bpt>Log in<ept id="p1">**</ept>, you have to choose an authentication provider and configure that provider.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Language agnostic</source>
          <target state="new">Language agnostic</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>App Service authentication processing happens before requests reach your API app, which means that the authentication features work for API apps written in any language or framework.</source>
          <target state="new">App Service authentication processing happens before requests reach your API app, which means that the authentication features work for API apps written in any language or framework.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Your API can be based on ASP.NET, Java, Node.js, or any framework that App Service supports.</source>
          <target state="new">Your API can be based on ASP.NET, Java, Node.js, or any framework that App Service supports.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>App Service passes on the JWT token in the Authorization header of an HTTP request, and code written in any language or framework can get the information it needs from the token.</source>
          <target state="new">App Service passes on the JWT token in the Authorization header of an HTTP request, and code written in any language or framework can get the information it needs from the token.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>In addition, App Service gives you easier access to the most commonly used claims by setting some special headers, such as the following:</source>
          <target state="new">In addition, App Service gives you easier access to the most commonly used claims by setting some special headers, such as the following:</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>X-MS-CLIENT-PRINCIPAL-NAME</source>
          <target state="new">X-MS-CLIENT-PRINCIPAL-NAME</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>X-MS-CLIENT-PRINCIPAL-ID</source>
          <target state="new">X-MS-CLIENT-PRINCIPAL-ID</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>X-MS-TOKEN-FACEBOOK-ACCESS-TOKEN</source>
          <target state="new">X-MS-TOKEN-FACEBOOK-ACCESS-TOKEN</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>X-MS-TOKEN-FACEBOOK-EXPIRES-ON</source>
          <target state="new">X-MS-TOKEN-FACEBOOK-EXPIRES-ON</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>In a .NET API, you can use the <ph id="ph1">`Authorize`</ph> attribute, and for fine-grained authorization you can easily write code based on claims because claims information is populated for you in .NET classes.</source>
          <target state="new">In a .NET API, you can use the <ph id="ph1">`Authorize`</ph> attribute, and for fine-grained authorization you can easily write code based on claims because claims information is populated for you in .NET classes.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a id="internal"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph> Service account authentication</source>
          <target state="new"><ph id="ph1">&lt;a id="internal"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph> Service account authentication</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>You can also use App Service authentication for internal scenarios such as for calling from one API app to another API app.</source>
          <target state="new">You can also use App Service authentication for internal scenarios such as for calling from one API app to another API app.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>In this scenario you can use credentials for a service account instead of end user credentials for authentication.</source>
          <target state="new">In this scenario you can use credentials for a service account instead of end user credentials for authentication.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A service account is also known as a <bpt id="p1">*</bpt>service principal<ept id="p1">*</ept> in Azure Active Directory, and authentication using such an account is also known as a service-to-service scenario.</source>
          <target state="new">A service account is also known as a <bpt id="p1">*</bpt>service principal<ept id="p1">*</ept> in Azure Active Directory, and authentication using such an account is also known as a service-to-service scenario.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For service-to-service scenarios, you can protect the called API app by using Azure Active Directory, and provide an AAD service principal authorization token when you call the API app.</source>
          <target state="new">For service-to-service scenarios, you can protect the called API app by using Azure Active Directory, and provide an AAD service principal authorization token when you call the API app.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>You can request the token by providing the client ID and client secret from the AAD application.</source>
          <target state="new">You can request the token by providing the client ID and client secret from the AAD application.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>No special Azure-only code is required, such as used to be true for handling the Mobile Services Zumo token.</source>
          <target state="new">No special Azure-only code is required, such as used to be true for handling the Mobile Services Zumo token.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>An example of this scenario using ASP.NET API apps is covered by the tutorial <bpt id="p1">[</bpt>Service principal authentication for API Apps<ept id="p1">](app-service-api-dotnet-service-principal-auth.md)</ept>.</source>
          <target state="new">An example of this scenario using ASP.NET API apps is covered by the tutorial <bpt id="p1">[</bpt>Service principal authentication for API Apps<ept id="p1">](app-service-api-dotnet-service-principal-auth.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>If you want to handle a service-to-service scenario without using App Service authentication, you can use client certificates or basic authentication.</source>
          <target state="new">If you want to handle a service-to-service scenario without using App Service authentication, you can use client certificates or basic authentication.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For information about client certificates in Azure, see <bpt id="p1">[</bpt>How To Configure TLS Mutual Authentication for Web Apps<ept id="p1">](../app-service-web/app-service-web-configure-tls-mutual-auth.md)</ept>.</source>
          <target state="new">For information about client certificates in Azure, see <bpt id="p1">[</bpt>How To Configure TLS Mutual Authentication for Web Apps<ept id="p1">](../app-service-web/app-service-web-configure-tls-mutual-auth.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>For information about how to configure basic authentication in ASP.NET, see <bpt id="p1">[</bpt>Authentication Filters in ASP.NET Web API 2<ept id="p1">](http://www.asp.net/web-api/overview/security/authentication-filters)</ept>.</source>
          <target state="new">For information about how to configure basic authentication in ASP.NET, see <bpt id="p1">[</bpt>Authentication Filters in ASP.NET Web API 2<ept id="p1">](http://www.asp.net/web-api/overview/security/authentication-filters)</ept>.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Service account authentication from an App Service logic app to an API app is a special case that is explained in <bpt id="p1">[</bpt>Using your custom API hosted on App Service with Logic apps<ept id="p1">](../app-service-logic/app-service-logic-custom-hosted-api.md)</ept>.</source>
          <target state="new">Service account authentication from an App Service logic app to an API app is a special case that is explained in <bpt id="p1">[</bpt>Using your custom API hosted on App Service with Logic apps<ept id="p1">](../app-service-logic/app-service-logic-custom-hosted-api.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>More information</source>
          <target state="new">More information</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>For more information about authentication and authorization services in Azure App Service, see <bpt id="p1">[</bpt>Expanding App Service authentication / authorization<ept id="p1">](/blog/announcing-app-service-authentication-authorization/)</ept>.</source>
          <target state="new">For more information about authentication and authorization services in Azure App Service, see <bpt id="p1">[</bpt>Expanding App Service authentication / authorization<ept id="p1">](/blog/announcing-app-service-authentication-authorization/)</ept>.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Next steps</source>
          <target state="new">Next steps</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>This article has explained authentication and authorization features of App Service API apps.</source>
          <target state="new">This article has explained authentication and authorization features of App Service API apps.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>If you are following the getting started sequence of tutorials for ASP.NET and API Apps, try out these features in the next tutorial, <bpt id="p1">[</bpt>user authentication in App Service API Apps<ept id="p1">](app-service-api-dotnet-user-principal-auth.md)</ept>.</source>
          <target state="new">If you are following the getting started sequence of tutorials for ASP.NET and API Apps, try out these features in the next tutorial, <bpt id="p1">[</bpt>user authentication in App Service API Apps<ept id="p1">](app-service-api-dotnet-user-principal-auth.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>For more information about using Node and Java in Azure App Service, see the <bpt id="p1">[</bpt>Node.js Developer Center<ept id="p1">](/develop/nodejs/)</ept> and the <bpt id="p2">[</bpt>Java Developer Center<ept id="p2">](/develop/java/)</ept>.</source>
          <target state="new">For more information about using Node and Java in Azure App Service, see the <bpt id="p1">[</bpt>Node.js Developer Center<ept id="p1">](/develop/nodejs/)</ept> and the <bpt id="p2">[</bpt>Java Developer Center<ept id="p2">](/develop/java/)</ept>.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>