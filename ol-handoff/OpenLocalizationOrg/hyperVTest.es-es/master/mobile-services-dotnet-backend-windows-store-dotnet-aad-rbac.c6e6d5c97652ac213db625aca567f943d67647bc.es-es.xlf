<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-US" target-language="es-es">
    <body>
      <group id="main" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Role Based Access Control in Mobile Services using .NET and the Azure Active Directory (Windows Store) | Microsoft Azure</source>
          <target state="new">Role Based Access Control in Mobile Services using .NET and the Azure Active Directory (Windows Store) | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to control access based on Azure Active Directory roles in your Windows Store application using a Mobile Service with a .NET backend.</source>
          <target state="new">Learn how to control access based on Azure Active Directory roles in your Windows Store application using a Mobile Service with a .NET backend.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Role Based Access Control in Mobile Services using JavaScript and the Azure Active Directory</source>
          <target state="new">Role Based Access Control in Mobile Services using JavaScript and the Azure Active Directory</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>&amp;nbsp;</source>
          <target state="new">&amp;nbsp;</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="new">Overview</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Roles-based access control (RBAC) is the practice of assigning permissions to roles that your users can hold.</source>
          <target state="new">Roles-based access control (RBAC) is the practice of assigning permissions to roles that your users can hold.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>It nicely defines boundaries on what certain classes of users can and cannot do.</source>
          <target state="new">It nicely defines boundaries on what certain classes of users can and cannot do.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This tutorial will walk you through how to add basic RBAC to Azure Mobile Services.</source>
          <target state="new">This tutorial will walk you through how to add basic RBAC to Azure Mobile Services.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This tutorial will demonstrate role based access control, checking each user's membership to a Sales group defined in the Azure Active Directory (AAD).</source>
          <target state="new">This tutorial will demonstrate role based access control, checking each user's membership to a Sales group defined in the Azure Active Directory (AAD).</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The access check will be done with .NET Mobile Service backend using the [Graph REST API] for Azure Active Directory.</source>
          <target state="new">The access check will be done with .NET Mobile Service backend using the [Graph REST API] for Azure Active Directory.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Only users who belong to the Sales group will be allowed to query the data.</source>
          <target state="new">Only users who belong to the Sales group will be allowed to query the data.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><ph id="ph4">[AZURE.NOTE]</ph><ph id="ph5" /> The intent of this tutorial is to extend your knowledge of authentication to include authorization practices.</source>
          <target state="new"><ph id="ph4">[AZURE.NOTE]</ph><ph id="ph5" /> The intent of this tutorial is to extend your knowledge of authentication to include authorization practices.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>It is expected that you first complete the [Add Authentication to your app] tutorial using the Azure Active Directory authentication provider.</source>
          <target state="new">It is expected that you first complete the [Add Authentication to your app] tutorial using the Azure Active Directory authentication provider.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This tutorial continues to update the TodoItem application used in the [Add Authentication to your app] tutorial.</source>
          <target state="new">This tutorial continues to update the TodoItem application used in the [Add Authentication to your app] tutorial.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="new">Prerequisites</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This tutorial requires the following:</source>
          <target state="new">This tutorial requires the following:</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Visual Studio 2013 running on Windows 8.1.</source>
          <target state="new">Visual Studio 2013 running on Windows 8.1.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Completion of the [Add Authentication to your app] tutorial using the Azure Active Directory authentication provider.</source>
          <target state="new">Completion of the [Add Authentication to your app] tutorial using the Azure Active Directory authentication provider.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Generate a key for the Integrated Application</source>
          <target state="new">Generate a key for the Integrated Application</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>During the [Add Authentication to your app] tutorial, you created a registration for the integrated application when you completed the [Register to use an Azure Active Directory Login] step.</source>
          <target state="new">During the [Add Authentication to your app] tutorial, you created a registration for the integrated application when you completed the [Register to use an Azure Active Directory Login] step.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>In this section you generate a key to be used when reading directory information with that integrated application's client ID.</source>
          <target state="new">In this section you generate a key to be used when reading directory information with that integrated application's client ID.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Create a Sales group with membership</source>
          <target state="new">Create a Sales group with membership</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Create a custom authorization attribute on the mobile service</source>
          <target state="new">Create a custom authorization attribute on the mobile service</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>In this section you will create a new custom authorization attribute that can be used to perform access checks on mobile service operations.</source>
          <target state="new">In this section you will create a new custom authorization attribute that can be used to perform access checks on mobile service operations.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The attribute will look up an Active Directory group based on the role name passed to it.</source>
          <target state="new">The attribute will look up an Active Directory group based on the role name passed to it.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>It will then perform access checks based on that group's membership.</source>
          <target state="new">It will then perform access checks based on that group's membership.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>In Visual Studio, right click mobile service .NET backend project and click <bpt id="p1">**</bpt>Manage NuGet Packages<ept id="p1">**</ept>.</source>
          <target state="new">In Visual Studio, right click mobile service .NET backend project and click <bpt id="p1">**</bpt>Manage NuGet Packages<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>In the NuGet Package Manager dialog, enter <bpt id="p2">**</bpt>ADAL<ept id="p2">**</ept><ph id="ph8" /> in the search criteria to find and install the <bpt id="p3">**</bpt>Active Directory Authentication Library<ept id="p3">**</ept><ph id="ph9" /> for your mobile service.</source>
          <target state="new">In the NuGet Package Manager dialog, enter <bpt id="p2">**</bpt>ADAL<ept id="p2">**</ept><ph id="ph8" /> in the search criteria to find and install the <bpt id="p3">**</bpt>Active Directory Authentication Library<ept id="p3">**</ept><ph id="ph9" /> for your mobile service.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This tutorial was most recently tested with the 3.3.205061641-alpha (Prerelease) version of the ADAL package.</source>
          <target state="new">This tutorial was most recently tested with the 3.3.205061641-alpha (Prerelease) version of the ADAL package.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>In Visual Studio, right click your mobile service project and click <bpt id="p4">**</bpt>Add<ept id="p4">**</ept><ph id="ph10" /> then <bpt id="p5">**</bpt>New Folder<ept id="p5">**</ept>.</source>
          <target state="new">In Visual Studio, right click your mobile service project and click <bpt id="p4">**</bpt>Add<ept id="p4">**</ept><ph id="ph10" /> then <bpt id="p5">**</bpt>New Folder<ept id="p5">**</ept>.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Name the new folder <bpt id="p6">**</bpt>Utilities<ept id="p6">**</ept>.</source>
          <target state="new">Name the new folder <bpt id="p6">**</bpt>Utilities<ept id="p6">**</ept>.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>In Visual Studio, right click the new <bpt id="p7">**</bpt>Utilities<ept id="p7">**</ept><ph id="ph11" /> folder and add a new class file named <bpt id="p8">**</bpt>AuthorizeAadRole.cs<ept id="p8">**</ept>.</source>
          <target state="new">In Visual Studio, right click the new <bpt id="p7">**</bpt>Utilities<ept id="p7">**</ept><ph id="ph11" /> folder and add a new class file named <bpt id="p8">**</bpt>AuthorizeAadRole.cs<ept id="p8">**</ept>.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>![][0]</source>
          <target state="new">![][0]</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>In the AuthorizeAadRole.cs file, add the following <ph id="ph12">`using`</ph><ph id="ph13" /> statements at the top of the file.</source>
          <target state="new">In the AuthorizeAadRole.cs file, add the following <ph id="ph12">`using`</ph><ph id="ph13" /> statements at the top of the file.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>In AuthorizeAadRole.cs, add the following enumerated type to the Utilities namespace.</source>
          <target state="new">In AuthorizeAadRole.cs, add the following enumerated type to the Utilities namespace.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>In this example we only deal with the <bpt id="p9">**</bpt>Sales<ept id="p9">**</ept><ph id="ph14" /> role.</source>
          <target state="new">In this example we only deal with the <bpt id="p9">**</bpt>Sales<ept id="p9">**</ept><ph id="ph14" /> role.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The others are just examples of groups you might use.</source>
          <target state="new">The others are just examples of groups you might use.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>In AuthorizeAadRole.cs, add the following <ph id="ph15">`AuthorizeAadRole`</ph><ph id="ph16" /> class definition to the Utilities namespace.</source>
          <target state="new">In AuthorizeAadRole.cs, add the following <ph id="ph15">`AuthorizeAadRole`</ph><ph id="ph16" /> class definition to the Utilities namespace.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>In AuthorizeAadRole.cs, update the <ph id="ph17">`InitGroupIds`</ph><ph id="ph18" /> method on the <ph id="ph19">`AuthorizeAadRole`</ph><ph id="ph20" /> class as follows.</source>
          <target state="new">In AuthorizeAadRole.cs, update the <ph id="ph17">`InitGroupIds`</ph><ph id="ph18" /> method on the <ph id="ph19">`AuthorizeAadRole`</ph><ph id="ph20" /> class as follows.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This method creates a dictionary mapping of the group ids to each role.</source>
          <target state="new">This method creates a dictionary mapping of the group ids to each role.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>In AuthorizeAadRole.cs, update the <ph id="ph21">`GetAADToken`</ph><ph id="ph22" /> method on the <ph id="ph23">`AuthorizeAadRole`</ph><ph id="ph24" /> class.</source>
          <target state="new">In AuthorizeAadRole.cs, update the <ph id="ph21">`GetAADToken`</ph><ph id="ph22" /> method on the <ph id="ph23">`AuthorizeAadRole`</ph><ph id="ph24" /> class.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>This method uses the app settings stored in the Mobile Service to get an access token to the AAD from ADAL.</source>
          <target state="new">This method uses the app settings stored in the Mobile Service to get an access token to the AAD from ADAL.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><ph id="ph25">[AZURE.NOTE]</ph><ph id="ph26" /> ADAL for .NET includes an in-memory token cache by default to help alleviate extra network traffic against your Active Directory.</source>
          <target state="new"><ph id="ph25">[AZURE.NOTE]</ph><ph id="ph26" /> ADAL for .NET includes an in-memory token cache by default to help alleviate extra network traffic against your Active Directory.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>However, you can write your own cache implementation or disable caching entirely.</source>
          <target state="new">However, you can write your own cache implementation or disable caching entirely.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>For more information see [ADAL for .NET].</source>
          <target state="new">For more information see [ADAL for .NET].</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>In AuthorizeAadRole.cs, update the <ph id="ph27">`CheckMembership`</ph><ph id="ph28" /> method on the <ph id="ph29">`AuthorizeAadRole`</ph><ph id="ph30" /> class.</source>
          <target state="new">In AuthorizeAadRole.cs, update the <ph id="ph27">`CheckMembership`</ph><ph id="ph28" /> method on the <ph id="ph29">`AuthorizeAadRole`</ph><ph id="ph30" /> class.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This method receives a user's object id.</source>
          <target state="new">This method receives a user's object id.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>It then uses the AAD Graph REST API to check that object id to see if it is a member id for the group associated to the role selected on the <ph id="ph31">`AuthorizeAadRole`</ph><ph id="ph32" /> class</source>
          <target state="new">It then uses the AAD Graph REST API to check that object id to see if it is a member id for the group associated to the role selected on the <ph id="ph31">`AuthorizeAadRole`</ph><ph id="ph32" /> class</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>In AuthorizeAadRole.cs, update the <ph id="ph33">`OnAuthorization`</ph><ph id="ph34" /> method in the <ph id="ph35">`AuthorizeAadRole`</ph><ph id="ph36" /> class with the following code.</source>
          <target state="new">In AuthorizeAadRole.cs, update the <ph id="ph33">`OnAuthorization`</ph><ph id="ph34" /> method in the <ph id="ph35">`AuthorizeAadRole`</ph><ph id="ph36" /> class with the following code.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>This code expects that the user calling into the Mobiile Service has authenticated with the AAD.</source>
          <target state="new">This code expects that the user calling into the Mobiile Service has authenticated with the AAD.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>It then gets the user's AAD object id and checks membership with the Active Directory group that corresponds to the role.</source>
          <target state="new">It then gets the user's AAD object id and checks membership with the Active Directory group that corresponds to the role.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><ph id="ph37">[AZURE.NOTE]</ph><ph id="ph38" /> You could look up the Active Directory group by name.</source>
          <target state="new"><ph id="ph37">[AZURE.NOTE]</ph><ph id="ph38" /> You could look up the Active Directory group by name.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>However, in many cases it's a better practice to store the group id as a mobile service app setting.</source>
          <target state="new">However, in many cases it's a better practice to store the group id as a mobile service app setting.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>This is because the group name is more likely to change but, the id stays the same.</source>
          <target state="new">This is because the group name is more likely to change but, the id stays the same.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Save your changes to AuthorizeAadRole.cs.</source>
          <target state="new">Save your changes to AuthorizeAadRole.cs.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Add role based access checking to the database operations</source>
          <target state="new">Add role based access checking to the database operations</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>In Visual Studio, expand the <bpt id="p10">**</bpt>Controllers<ept id="p10">**</ept><ph id="ph39" /> folder under the mobile service project.</source>
          <target state="new">In Visual Studio, expand the <bpt id="p10">**</bpt>Controllers<ept id="p10">**</ept><ph id="ph39" /> folder under the mobile service project.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Open TodoItemController.cs.</source>
          <target state="new">Open TodoItemController.cs.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>In TodoItemController.cs, add a <ph id="ph40">`using`</ph><ph id="ph41" /> statement for your utilities namespace that contains the custom authorization attribute.</source>
          <target state="new">In TodoItemController.cs, add a <ph id="ph40">`using`</ph><ph id="ph41" /> statement for your utilities namespace that contains the custom authorization attribute.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>In TodoItemController.cs, you can add the attribute to your controller class or individual methods depending on how you want access checked.</source>
          <target state="new">In TodoItemController.cs, you can add the attribute to your controller class or individual methods depending on how you want access checked.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>If you want all controller operations to check access based on the same role, just add the attribute to the class.</source>
          <target state="new">If you want all controller operations to check access based on the same role, just add the attribute to the class.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Add the attribute to the class as follows for testing this tutorial.</source>
          <target state="new">Add the attribute to the class as follows for testing this tutorial.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>If you only wanted to access check insert, update, and delete operations, you would set the attribute only on those methods as follows.</source>
          <target state="new">If you only wanted to access check insert, update, and delete operations, you would set the attribute only on those methods as follows.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Save TodoItemController.cs and build the mobile service to verify no syntax errors.</source>
          <target state="new">Save TodoItemController.cs and build the mobile service to verify no syntax errors.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Publish the mobile service to your Azure account.</source>
          <target state="new">Publish the mobile service to your Azure account.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Test the client's access</source>
          <target state="new">Test the client's access</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>[0]: ./media/mobile-services-dotnet-backend-windows-store-dotnet-aad-rbac/add-authorize-aad-role-class.png</source>
          <target state="new">[0]: ./media/mobile-services-dotnet-backend-windows-store-dotnet-aad-rbac/add-authorize-aad-role-class.png</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>[Add Authentication to your app]: mobile-services-dotnet-backend-windows-universal-dotnet-get-started-users.md
[How to Register with the Azure Active Directory]: mobile-services-how-to-register-active-directory-authentication.md
[Directory Sync Scenarios]: http://msdn.microsoft.com/library/azure/jj573653.aspx
[Store Server Scripts]: mobile-services-store-scripts-source-control.md
[Register to use an Azure Active Directory Login]: mobile-services-how-to-register-active-directory-authentication.md
[Graph REST API]: http://msdn.microsoft.com/library/azure/hh974478.aspx
[IsMemberOf]: http://msdn.microsoft.com/library/azure/dn151601.aspx
[ADAL for .NET]: https://msdn.microsoft.com/library/azure/jj573266.aspx</source>
          <target state="new">[Add Authentication to your app]: mobile-services-dotnet-backend-windows-universal-dotnet-get-started-users.md
[How to Register with the Azure Active Directory]: mobile-services-how-to-register-active-directory-authentication.md
[Directory Sync Scenarios]: http://msdn.microsoft.com/library/azure/jj573653.aspx
[Store Server Scripts]: mobile-services-store-scripts-source-control.md
[Register to use an Azure Active Directory Login]: mobile-services-how-to-register-active-directory-authentication.md
[Graph REST API]: http://msdn.microsoft.com/library/azure/hh974478.aspx
[IsMemberOf]: http://msdn.microsoft.com/library/azure/dn151601.aspx
[ADAL for .NET]: https://msdn.microsoft.com/library/azure/jj573266.aspx</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">03c3962a7045bc0feb261cc715fff8e2eae4f388</xliffext:olfilehash>
  </header>
</xliff>