<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="es-es" original="foo.file" tool-id="350289d3-9d7f-497e-a00c-2407ab895b79" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="350289d3-9d7f-497e-a00c-2407ab895b79" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
      <olfilehash xmlns="">a7640c222d084ad8705adf3206cc238fc33ff331</olfilehash>
    </header>
    <body>
      <group id="cc0d3237-fb8e-423f-bd1f-15148a1a5556">
        <trans-unit id="c5119ec4-663c-4e6d-87c5-028dac0cd455" xml:space="preserve">
          <source>ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9</source>
          <target state="new">ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9</target>
        </trans-unit>
        <trans-unit id="cba2a731-7d1f-46eb-b48b-8db32c631ccb" xml:space="preserve">
          <source>title: PowerShell Snippets</source>
          <target state="new">title: PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="42993433-8c1b-4135-8484-66004a7aca37" xml:space="preserve">
          <source>PowerShell Snippets</source>
          <target state="new">PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="dbfadcc4-dc14-45ce-8432-c9c96b8906d9" xml:space="preserve">
          <source>Adding this sentence to validate the bug 451132 result.</source>
          <target state="new">Adding this sentence to validate the bug 451132 result.</target>
        </trans-unit>
        <trans-unit id="1e6d4a82-b140-4841-93c6-45c8f9f7e8ae" xml:space="preserve">
          <source>PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</source>
          <target state="new">PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</target>
        </trans-unit>
        <trans-unit id="16424315-8b24-4e30-85da-033598e9a9f3" xml:space="preserve">
          <source>All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</source>
          <target state="new">All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</target>
        </trans-unit>
        <trans-unit id="59e1c0c2-3f41-496c-9544-7ffe372bf315" xml:space="preserve">
          <source>If you aren't sure if you have the right permissions, type <bpt id="664748a8-e7dd-46ed-adae-65c6349921c8">&lt;code&gt;</bpt>Get-VM<ept id="664748a8-e7dd-46ed-adae-65c6349921c8">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</source>
          <target state="new">If you aren't sure if you have the right permissions, type <bpt id="664748a8-e7dd-46ed-adae-65c6349921c8">&lt;code&gt;</bpt>Get-VM<ept id="664748a8-e7dd-46ed-adae-65c6349921c8">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</target>
        </trans-unit>
        <trans-unit id="f5836225-1551-46db-9ca0-d82a3cb877f0" xml:space="preserve">
          <source>PowerShell Direct tools</source>
          <target state="new">PowerShell Direct tools</target>
        </trans-unit>
        <trans-unit id="f8af7d86-751e-48ae-aef6-567b01cd8bf6" xml:space="preserve">
          <source>All of the scripts and snippets in this section will rely on the following basics.</source>
          <target state="new">All of the scripts and snippets in this section will rely on the following basics.</target>
        </trans-unit>
        <trans-unit id="43235ae7-bd04-407c-8530-4c3623acbad9" xml:space="preserve">
          <source><bpt id="a0b39143-13a2-41d9-9aa0-06844e1fb8ae">&lt;strong&gt;</bpt>Requirements<ept id="a0b39143-13a2-41d9-9aa0-06844e1fb8ae">&lt;/strong&gt;</ept> :</source>
          <target state="new"><bpt id="a0b39143-13a2-41d9-9aa0-06844e1fb8ae">&lt;strong&gt;</bpt>Requirements<ept id="a0b39143-13a2-41d9-9aa0-06844e1fb8ae">&lt;/strong&gt;</ept> :</target>
        </trans-unit>
        <trans-unit id="86fe1991-dd8d-4fa5-a67e-290875435687" xml:space="preserve">
          <source>PowerShell Direct.</source>
          <target state="new">PowerShell Direct.</target>
        </trans-unit>
        <trans-unit id="7cc3c104-dd9c-479d-98bb-75ef6e67956a" xml:space="preserve">
          <source>Windows 10 guest and host OS.</source>
          <target state="new">Windows 10 guest and host OS.</target>
        </trans-unit>
        <trans-unit id="04c983db-5930-4c31-acf4-2cdb42c4d278" xml:space="preserve">
          <source><bpt id="0d139a38-f389-49cf-8688-1a945e7ed88e">&lt;strong&gt;</bpt>Common Variables<ept id="0d139a38-f389-49cf-8688-1a945e7ed88e">&lt;/strong&gt;</ept> :</source>
          <target state="new"><bpt id="0d139a38-f389-49cf-8688-1a945e7ed88e">&lt;strong&gt;</bpt>Common Variables<ept id="0d139a38-f389-49cf-8688-1a945e7ed88e">&lt;/strong&gt;</ept> :</target>
        </trans-unit>
        <trans-unit id="d1ebedfd-c02b-49f7-a348-1aba2b2aec77" xml:space="preserve">
          <source><bpt id="ba3dc3e4-5e13-4995-9e03-0d93ca162624">&lt;code&gt;</bpt>$VMName<ept id="ba3dc3e4-5e13-4995-9e03-0d93ca162624">&lt;/code&gt;</ept> -- this is a string with the VMName.</source>
          <target state="new"><bpt id="ba3dc3e4-5e13-4995-9e03-0d93ca162624">&lt;code&gt;</bpt>$VMName<ept id="ba3dc3e4-5e13-4995-9e03-0d93ca162624">&lt;/code&gt;</ept> -- this is a string with the VMName.</target>
        </trans-unit>
        <trans-unit id="0833b368-7ebc-4efe-bd08-886f0d40a110" xml:space="preserve">
          <source>See a list of available VMs with <bpt id="519c3a52-9edc-40f6-a04e-e9690c29fc64">&lt;code&gt;</bpt>Get-VM<ept id="519c3a52-9edc-40f6-a04e-e9690c29fc64">&lt;/code&gt;</ept></source>
          <target state="new">See a list of available VMs with <bpt id="519c3a52-9edc-40f6-a04e-e9690c29fc64">&lt;code&gt;</bpt>Get-VM<ept id="519c3a52-9edc-40f6-a04e-e9690c29fc64">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="99923383-0724-48c6-bb04-37f3cfb9f71a" xml:space="preserve">
          <source><bpt id="a972419d-f678-4fdf-89f4-e782d19b99dd">&lt;code&gt;</bpt>$cred<ept id="a972419d-f678-4fdf-89f4-e782d19b99dd">&lt;/code&gt;</ept> -- Credential for the guest OS.</source>
          <target state="new"><bpt id="a972419d-f678-4fdf-89f4-e782d19b99dd">&lt;code&gt;</bpt>$cred<ept id="a972419d-f678-4fdf-89f4-e782d19b99dd">&lt;/code&gt;</ept> -- Credential for the guest OS.</target>
        </trans-unit>
        <trans-unit id="d684bde4-027f-4cb5-8195-a10dacafa6dd" xml:space="preserve">
          <source>Can be populated using <bpt id="91ab0562-cbd6-4e4a-abdd-1bc1a6247f90">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="91ab0562-cbd6-4e4a-abdd-1bc1a6247f90">&lt;/code&gt;</ept></source>
          <target state="new">Can be populated using <bpt id="91ab0562-cbd6-4e4a-abdd-1bc1a6247f90">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="91ab0562-cbd6-4e4a-abdd-1bc1a6247f90">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="5b185e07-461a-4e92-a911-505ae40b434c" xml:space="preserve">
          <source>Check if the guest has booted</source>
          <target state="new">Check if the guest has booted</target>
        </trans-unit>
        <trans-unit id="90f11c3a-5fb6-438b-a7b0-f10feed854f3" xml:space="preserve">
          <source>Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</source>
          <target state="new">Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</target>
        </trans-unit>
        <trans-unit id="23f29278-efdd-4ca3-98cd-71240b124059" xml:space="preserve">
          <source>Use this command to check whether the guest has booted.</source>
          <target state="new">Use this command to check whether the guest has booted.</target>
        </trans-unit>
        <trans-unit id="4fca5148-7eb8-4798-9efc-c4a3f7341791" xml:space="preserve">
          <source><bpt id="c9552467-d607-4d53-bad8-fbd653fe14b4">&lt;strong&gt;</bpt>Outcome<ept id="c9552467-d607-4d53-bad8-fbd653fe14b4">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="c9552467-d607-4d53-bad8-fbd653fe14b4">&lt;strong&gt;</bpt>Outcome<ept id="c9552467-d607-4d53-bad8-fbd653fe14b4">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="0d8f2444-9d06-44a6-ab89-c094c0b1a50e" xml:space="preserve">
          <source>Prints a friendly message declaring the state of the guest OS.</source>
          <target state="new">Prints a friendly message declaring the state of the guest OS.</target>
        </trans-unit>
        <trans-unit id="e2e88a0e-a291-49bc-8734-c163ebef5a04" xml:space="preserve">
          <source>Script locking until the guest has booted</source>
          <target state="new">Script locking until the guest has booted</target>
        </trans-unit>
        <trans-unit id="47d52e43-bdba-4fa6-b79e-8a3d67f06d00" xml:space="preserve">
          <source>The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</source>
          <target state="new">The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</target>
        </trans-unit>
        <trans-unit id="a28eebb9-7319-4fd6-b8c8-e75037f6ad5e" xml:space="preserve">
          <source><bpt id="67767e4f-899b-4861-a4b6-374197a5cab7">&lt;strong&gt;</bpt>Outcome<ept id="67767e4f-899b-4861-a4b6-374197a5cab7">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="67767e4f-899b-4861-a4b6-374197a5cab7">&lt;strong&gt;</bpt>Outcome<ept id="67767e4f-899b-4861-a4b6-374197a5cab7">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="b38febdc-63a4-43ec-9aec-98f9b07cb545" xml:space="preserve">
          <source>Prints a friendly message and locks until the connection to the VM succeeds.</source>
          <target state="new">Prints a friendly message and locks until the connection to the VM succeeds.</target>
        </trans-unit>
        <trans-unit id="48fb5824-2c6a-4f5f-a3d7-6d78de2c0c19" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="fc3a7edc-b37c-4294-9227-71b29c72bec5" xml:space="preserve">
          <source>Script locking until the guest has a network</source>
          <target state="new">Script locking until the guest has a network</target>
        </trans-unit>
        <trans-unit id="c1b85073-7dd1-4a3b-a5fc-b7673114f58e" xml:space="preserve">
          <source>With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</source>
          <target state="new">With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</target>
        </trans-unit>
        <trans-unit id="9445e4c8-731c-4244-8824-537e4c1c4228" xml:space="preserve">
          <source><bpt id="0f8f7dc9-b42a-4f92-a055-f277659a014c">&lt;em&gt;</bpt>* Outcome *<ept id="0f8f7dc9-b42a-4f92-a055-f277659a014c">&lt;/em&gt;</ept></source>
          <target state="new"><bpt id="0f8f7dc9-b42a-4f92-a055-f277659a014c">&lt;em&gt;</bpt>* Outcome *<ept id="0f8f7dc9-b42a-4f92-a055-f277659a014c">&lt;/em&gt;</ept></target>
        </trans-unit>
        <trans-unit id="167551a8-bf6b-48b8-bcad-c416a8ef3c56" xml:space="preserve">
          <source>Locks until a DHCP lease is recieved.</source>
          <target state="new">Locks until a DHCP lease is recieved.</target>
        </trans-unit>
        <trans-unit id="29f6af37-5b8e-4f40-a22a-a20c8ed4feb9" xml:space="preserve">
          <source>Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</source>
          <target state="new">Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</target>
        </trans-unit>
        <trans-unit id="80a8f1e8-51d9-48fd-b630-d7b15b215028" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="3d048774-db25-4d05-b4ca-79d192c6ffe5" xml:space="preserve">
          <source>Managing credentials with PowerShell</source>
          <target state="new">Managing credentials with PowerShell</target>
        </trans-unit>
        <trans-unit id="a35bc7ac-1b31-4543-b950-710c34771da5" xml:space="preserve">
          <source>Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</source>
          <target state="new">Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</target>
        </trans-unit>
        <trans-unit id="4f5b94c1-5a0b-474e-9404-c6ca13b2dae2" xml:space="preserve">
          <source>There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</source>
          <target state="new">There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</target>
        </trans-unit>
        <trans-unit id="e31168d0-6caf-42a8-8f65-0aa7f1e57ea6" xml:space="preserve">
          <source>The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</source>
          <target state="new">The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</target>
        </trans-unit>
        <trans-unit id="a8d73e78-bff8-44f2-816f-888969ca6eb7" xml:space="preserve">
          <source>This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</source>
          <target state="new">This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</target>
        </trans-unit>
        <trans-unit id="795cba49-d311-4bfe-8228-c605af3ba4e6" xml:space="preserve">
          <source>In this scenario you can just run <bpt id="ccf728f5-3832-4ab6-838e-61cc163f2e93">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="ccf728f5-3832-4ab6-838e-61cc163f2e93">&lt;/code&gt;</ept>.</source>
          <target state="new">In this scenario you can just run <bpt id="ccf728f5-3832-4ab6-838e-61cc163f2e93">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="ccf728f5-3832-4ab6-838e-61cc163f2e93">&lt;/code&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="93ab6c8f-add8-456b-8fac-0fac6193634f" xml:space="preserve">
          <source>Let PowerShell prompt you for credentials</source>
          <target state="new">Let PowerShell prompt you for credentials</target>
        </trans-unit>
        <trans-unit id="9b97c65a-72ed-4b41-a9f2-c64a0bbe0777" xml:space="preserve">
          <source>If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</source>
          <target state="new">If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</target>
        </trans-unit>
        <trans-unit id="a99b9b62-a810-4be4-804a-ff32427bc067" xml:space="preserve">
          <source>Store credentials in a variable for reuse.</source>
          <target state="new">Store credentials in a variable for reuse.</target>
        </trans-unit>
        <trans-unit id="3b6261ec-ce2c-4a9e-8a91-f28bc9f68bd8" xml:space="preserve">
          <source>Running a simple command like this:</source>
          <target state="new">Running a simple command like this:</target>
        </trans-unit>
        <trans-unit id="79310e6c-09f8-4b2e-a009-80ab9afd62b1" xml:space="preserve">
          <source>And then running something like this:</source>
          <target state="new">And then running something like this:</target>
        </trans-unit>
        <trans-unit id="56bedf21-a369-4468-b69f-6afcca7e27c4" xml:space="preserve">
          <source>Will mean that you only get prompted once per script/PowerShell session for your credentials.</source>
          <target state="new">Will mean that you only get prompted once per script/PowerShell session for your credentials.</target>
        </trans-unit>
        <trans-unit id="fcc67386-b77b-453a-bd09-3546300ebde3" xml:space="preserve">
          <source>Code your credentials into your scripts.</source>
          <target state="new">Code your credentials into your scripts.</target>
        </trans-unit>
        <trans-unit id="f8a49c38-d0ce-443a-9b3b-67c5396d35e1" xml:space="preserve">
          <source><bpt id="12d06247-374e-45d4-a35d-fd1237a11236">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="12d06247-374e-45d4-a35d-fd1237a11236">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="12d06247-374e-45d4-a35d-fd1237a11236">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="12d06247-374e-45d4-a35d-fd1237a11236">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="ad302a91-3718-4a95-8af9-38f1c003eaad" xml:space="preserve">
          <source>Warning:  _Do not do this in a production system.</source>
          <target state="new">Warning:  _Do not do this in a production system.</target>
        </trans-unit>
        <trans-unit id="5b43d56c-ce67-4fa8-b22e-7324092795ab" xml:space="preserve">
          <source>Do not do this with real passwords._</source>
          <target state="new">Do not do this with real passwords._</target>
        </trans-unit>
        <trans-unit id="c7296e84-3e6f-4dc8-adea-98695efc8141" xml:space="preserve">
          <source>You can hand craft a PSCredential object with some code like this:</source>
          <target state="new">You can hand craft a PSCredential object with some code like this:</target>
        </trans-unit>
        <trans-unit id="a0930193-9bae-4a06-b99e-bf7fdd0d943e" xml:space="preserve">
          <source>Grossly insecure - but useful for testing.</source>
          <target state="new">Grossly insecure - but useful for testing.</target>
        </trans-unit>
        <trans-unit id="15a37814-4556-40e0-9fd9-8cea61123384" xml:space="preserve">
          <source>Now you get no prompts at all in this session.</source>
          <target state="new">Now you get no prompts at all in this session.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>