<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="es-es" original="foo.file" tool-id="62675b32-11a8-44a8-985f-3b1613ce8670" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="62675b32-11a8-44a8-985f-3b1613ce8670" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
      <olfilehash xmlns="">1e570b48f01ed63333705d5da5031bc706a67a94</olfilehash>
    </header>
    <body>
      <group id="f2286202-3490-4dca-bd27-8b9ca6ee2672">
        <trans-unit id="5ace44db-25fa-41b9-bd7b-d6ce4acf8ff8" xml:space="preserve">
          <source>ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9
title: PowerShell Snippets</source>
          <target state="new">ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9
title: PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="f978d60d-1149-4c45-a789-e1503908d2de" xml:space="preserve">
          <source>PowerShell Snippets</source>
          <target state="new">PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="4baae8f8-7164-4b32-a25c-24d0c7bb3c9c" xml:space="preserve">
          <source>Adding this sentence for testing HO-HB process.</source>
          <target state="new">Adding this sentence for testing HO-HB process.</target>
        </trans-unit>
        <trans-unit id="5c0c12c9-6a3f-41a5-87a1-a3f6f6e10b37" xml:space="preserve">
          <source>PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</source>
          <target state="new">PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</target>
        </trans-unit>
        <trans-unit id="fab50ffd-e450-431b-9bff-4c7da033eca4" xml:space="preserve">
          <source>All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</source>
          <target state="new">All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</target>
        </trans-unit>
        <trans-unit id="1f8e9c01-432b-4914-bdfa-fb976d0b379f" xml:space="preserve">
          <source>If you aren't sure if you have the right permissions, type <bpt id="f5b0b296-9051-45c3-83ac-10350427d4c7">&lt;code&gt;</bpt>Get-VM<ept id="f5b0b296-9051-45c3-83ac-10350427d4c7">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</source>
          <target state="new">If you aren't sure if you have the right permissions, type <bpt id="f5b0b296-9051-45c3-83ac-10350427d4c7">&lt;code&gt;</bpt>Get-VM<ept id="f5b0b296-9051-45c3-83ac-10350427d4c7">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</target>
        </trans-unit>
        <trans-unit id="6b7bf1ed-f77b-4bf3-9665-f889a39b289c" xml:space="preserve">
          <source>PowerShell Direct tools</source>
          <target state="new">PowerShell Direct tools</target>
        </trans-unit>
        <trans-unit id="c51b72d4-450f-4135-9ffb-730a6730f6f8" xml:space="preserve">
          <source>All of the scripts and snippets in this section will rely on the following basics.</source>
          <target state="new">All of the scripts and snippets in this section will rely on the following basics.</target>
        </trans-unit>
        <trans-unit id="b704c245-2f9c-49b1-88ee-c849b8021f3a" xml:space="preserve">
          <source><bpt id="4a75d559-c0b8-41c8-8a30-31014d5f38c0">&lt;strong&gt;</bpt>Requirements<ept id="4a75d559-c0b8-41c8-8a30-31014d5f38c0">&lt;/strong&gt;</ept> :</source>
          <target state="new"><bpt id="4a75d559-c0b8-41c8-8a30-31014d5f38c0">&lt;strong&gt;</bpt>Requirements<ept id="4a75d559-c0b8-41c8-8a30-31014d5f38c0">&lt;/strong&gt;</ept> :</target>
        </trans-unit>
        <trans-unit id="b2d92b6c-2b18-4c1e-a830-6c0c0e208499" xml:space="preserve">
          <source>PowerShell Direct.</source>
          <target state="new">PowerShell Direct.</target>
        </trans-unit>
        <trans-unit id="e53cfec6-0d22-4d53-bf5f-9d0e5aa54f75" xml:space="preserve">
          <source>Windows 10 guest and host OS.</source>
          <target state="new">Windows 10 guest and host OS.</target>
        </trans-unit>
        <trans-unit id="2aca0a24-0cbb-4c2d-9540-cd73f72ca667" xml:space="preserve">
          <source><bpt id="56b50335-805a-43f6-be68-940d669535c0">&lt;strong&gt;</bpt>Common Variables<ept id="56b50335-805a-43f6-be68-940d669535c0">&lt;/strong&gt;</ept> :  
<bpt id="1a8c65ec-06d1-464d-9c9c-8ef2fb8f8e55">&lt;code&gt;</bpt>$VMName<ept id="1a8c65ec-06d1-464d-9c9c-8ef2fb8f8e55">&lt;/code&gt;</ept> -- this is a string with the VMName.</source>
          <target state="new"><bpt id="56b50335-805a-43f6-be68-940d669535c0">&lt;strong&gt;</bpt>Common Variables<ept id="56b50335-805a-43f6-be68-940d669535c0">&lt;/strong&gt;</ept> :  
<bpt id="1a8c65ec-06d1-464d-9c9c-8ef2fb8f8e55">&lt;code&gt;</bpt>$VMName<ept id="1a8c65ec-06d1-464d-9c9c-8ef2fb8f8e55">&lt;/code&gt;</ept> -- this is a string with the VMName.</target>
        </trans-unit>
        <trans-unit id="99f39f4f-4e09-44e0-97c9-fcbd3c7ef52e" xml:space="preserve">
          <source>See a list of available VMs with <bpt id="d25d5d8f-6858-4290-8bec-1015e0e1892c">&lt;code&gt;</bpt>Get-VM<ept id="d25d5d8f-6858-4290-8bec-1015e0e1892c">&lt;/code&gt;</ept>  
<bpt id="956485a9-c553-4858-b151-4ad2d4ba875a">&lt;code&gt;</bpt>$cred<ept id="956485a9-c553-4858-b151-4ad2d4ba875a">&lt;/code&gt;</ept> -- Credential for the guest OS.</source>
          <target state="new">See a list of available VMs with <bpt id="d25d5d8f-6858-4290-8bec-1015e0e1892c">&lt;code&gt;</bpt>Get-VM<ept id="d25d5d8f-6858-4290-8bec-1015e0e1892c">&lt;/code&gt;</ept>  
<bpt id="956485a9-c553-4858-b151-4ad2d4ba875a">&lt;code&gt;</bpt>$cred<ept id="956485a9-c553-4858-b151-4ad2d4ba875a">&lt;/code&gt;</ept> -- Credential for the guest OS.</target>
        </trans-unit>
        <trans-unit id="237702f5-ea69-45ef-adfc-94ea053ecd2e" xml:space="preserve">
          <source>Can be populated using <bpt id="feea1200-ff48-4c88-9008-d1f95525bb92">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="feea1200-ff48-4c88-9008-d1f95525bb92">&lt;/code&gt;</ept></source>
          <target state="new">Can be populated using <bpt id="feea1200-ff48-4c88-9008-d1f95525bb92">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="feea1200-ff48-4c88-9008-d1f95525bb92">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="66063b4b-39d0-4167-aa27-702c824ba270" xml:space="preserve">
          <source>Check if the guest has booted</source>
          <target state="new">Check if the guest has booted</target>
        </trans-unit>
        <trans-unit id="e56c274f-c1b9-42e9-93cc-3dc5e184d1d0" xml:space="preserve">
          <source>Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</source>
          <target state="new">Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</target>
        </trans-unit>
        <trans-unit id="f0d8393e-d693-4775-b14a-486f6252ccd0" xml:space="preserve">
          <source>Use this command to check whether the guest has booted.</source>
          <target state="new">Use this command to check whether the guest has booted.</target>
        </trans-unit>
        <trans-unit id="78b129ff-cc85-4a4c-a0dc-878d705eb10a" xml:space="preserve">
          <source><bpt id="9fbfd4d1-bd25-43f3-9c6e-b727041eb16b">&lt;strong&gt;</bpt>Outcome<ept id="9fbfd4d1-bd25-43f3-9c6e-b727041eb16b">&lt;/strong&gt;</ept>  
Prints a friendly message declaring the state of the guest OS.</source>
          <target state="new"><bpt id="9fbfd4d1-bd25-43f3-9c6e-b727041eb16b">&lt;strong&gt;</bpt>Outcome<ept id="9fbfd4d1-bd25-43f3-9c6e-b727041eb16b">&lt;/strong&gt;</ept>  
Prints a friendly message declaring the state of the guest OS.</target>
        </trans-unit>
        <trans-unit id="55f299a7-5f3b-4ae6-9d4f-d736afb8929d" xml:space="preserve">
          <source>Script locking until the guest has booted</source>
          <target state="new">Script locking until the guest has booted</target>
        </trans-unit>
        <trans-unit id="0d8b9483-0efb-4ec9-99eb-74c015fe3c2d" xml:space="preserve">
          <source>The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</source>
          <target state="new">The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</target>
        </trans-unit>
        <trans-unit id="c7c30332-a0e4-4de8-8553-c84493c3c758" xml:space="preserve">
          <source><bpt id="566efe5e-5203-4c7a-904c-a145a49799b6">&lt;strong&gt;</bpt>Outcome<ept id="566efe5e-5203-4c7a-904c-a145a49799b6">&lt;/strong&gt;</ept>  
Prints a friendly message and locks until the connection to the VM succeeds.</source>
          <target state="new"><bpt id="566efe5e-5203-4c7a-904c-a145a49799b6">&lt;strong&gt;</bpt>Outcome<ept id="566efe5e-5203-4c7a-904c-a145a49799b6">&lt;/strong&gt;</ept>  
Prints a friendly message and locks until the connection to the VM succeeds.</target>
        </trans-unit>
        <trans-unit id="79de216b-c236-445d-9ec5-fd8ffe7e724c" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="9bc5c7a3-e91f-4def-98a2-0fe3c8ff6fb2" xml:space="preserve">
          <source>Script locking until the guest has a network</source>
          <target state="new">Script locking until the guest has a network</target>
        </trans-unit>
        <trans-unit id="7ba80def-15d1-42e9-b22f-fff6ddc535db" xml:space="preserve">
          <source>With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</source>
          <target state="new">With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</target>
        </trans-unit>
        <trans-unit id="6ec03dbb-4819-4464-ac63-17db20c8b28e" xml:space="preserve">
          <source><bpt id="4d5af3f6-c741-4be8-8fff-baaf09302e7a">&lt;em&gt;</bpt>* Outcome *<ept id="4d5af3f6-c741-4be8-8fff-baaf09302e7a">&lt;/em&gt;</ept>
Locks until a DHCP lease is recieved.</source>
          <target state="new"><bpt id="4d5af3f6-c741-4be8-8fff-baaf09302e7a">&lt;em&gt;</bpt>* Outcome *<ept id="4d5af3f6-c741-4be8-8fff-baaf09302e7a">&lt;/em&gt;</ept>
Locks until a DHCP lease is recieved.</target>
        </trans-unit>
        <trans-unit id="c40ce5b3-16ac-4aa1-90fd-74375b1240cd" xml:space="preserve">
          <source>Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</source>
          <target state="new">Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</target>
        </trans-unit>
        <trans-unit id="87fb104a-d62e-4269-9115-a38ce6c5e256" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="13ecc64f-3f93-4c50-9431-f51d445dc691" xml:space="preserve">
          <source>Managing credentials with PowerShell</source>
          <target state="new">Managing credentials with PowerShell</target>
        </trans-unit>
        <trans-unit id="0696a3b8-7b84-448b-9c35-a6d87fd63739" xml:space="preserve">
          <source>Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</source>
          <target state="new">Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</target>
        </trans-unit>
        <trans-unit id="20006eb2-db58-48a2-b579-6d8564d851f3" xml:space="preserve">
          <source>There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</source>
          <target state="new">There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</target>
        </trans-unit>
        <trans-unit id="a175ce2f-e64e-471d-81e4-94691de67e49" xml:space="preserve">
          <source>The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</source>
          <target state="new">The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</target>
        </trans-unit>
        <trans-unit id="2cd3dc64-bae4-4309-b093-d2d703d1a8f6" xml:space="preserve">
          <source>This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</source>
          <target state="new">This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</target>
        </trans-unit>
        <trans-unit id="a1bbf661-f0f6-4d4e-bfcc-0aa56ff7c973" xml:space="preserve">
          <source>In this scenario you can just run <bpt id="ef2bba48-01d5-480d-9d58-415d277feae0">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="ef2bba48-01d5-480d-9d58-415d277feae0">&lt;/code&gt;</ept>.</source>
          <target state="new">In this scenario you can just run <bpt id="ef2bba48-01d5-480d-9d58-415d277feae0">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="ef2bba48-01d5-480d-9d58-415d277feae0">&lt;/code&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="626bffc2-3a05-4161-954c-f3e53a579809" xml:space="preserve">
          <source>Let PowerShell prompt you for credentials  
If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</source>
          <target state="new">Let PowerShell prompt you for credentials  
If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</target>
        </trans-unit>
        <trans-unit id="e7487af9-862f-41fc-a941-57eb0fa62055" xml:space="preserve">
          <source>Store credentials in a variable for reuse.</source>
          <target state="new">Store credentials in a variable for reuse.</target>
        </trans-unit>
        <trans-unit id="6f577b68-0596-4ee1-a3cd-30babff72ea4" xml:space="preserve">
          <source>Running a simple command like this:</source>
          <target state="new">Running a simple command like this:</target>
        </trans-unit>
        <trans-unit id="af221369-f26d-4073-bc85-e79045902686" xml:space="preserve">
          <source>  And then running something like this:</source>
          <target state="new">  And then running something like this:</target>
        </trans-unit>
        <trans-unit id="7e5ffeca-33b3-4e7c-8ed1-19850d12c1ca" xml:space="preserve">
          <source>  Will mean that you only get prompted once per script/PowerShell session for your credentials.</source>
          <target state="new">  Will mean that you only get prompted once per script/PowerShell session for your credentials.</target>
        </trans-unit>
        <trans-unit id="d04cf603-6727-4baf-84a4-2387c43ca589" xml:space="preserve">
          <source>Code your credentials into your scripts.</source>
          <target state="new">Code your credentials into your scripts.</target>
        </trans-unit>
        <trans-unit id="4671a4e3-1938-4e2c-bd27-958c26601eee" xml:space="preserve">
          <source><bpt id="c1da8dd7-a749-4881-b32c-00218008d4ea">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="c1da8dd7-a749-4881-b32c-00218008d4ea">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="c1da8dd7-a749-4881-b32c-00218008d4ea">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="c1da8dd7-a749-4881-b32c-00218008d4ea">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="396c975b-cb7d-408c-83ff-70e1aba064d3" xml:space="preserve">
          <source>Warning:  _Do not do this in a production system.</source>
          <target state="new">Warning:  _Do not do this in a production system.</target>
        </trans-unit>
        <trans-unit id="3d7927fa-7e92-4da1-a3d8-3fb936581c37" xml:space="preserve">
          <source>Do not do this with real passwords._</source>
          <target state="new">Do not do this with real passwords._</target>
        </trans-unit>
        <trans-unit id="87ead682-78ff-407d-b353-275921405978" xml:space="preserve">
          <source>You can hand craft a PSCredential object with some code like this:</source>
          <target state="new">You can hand craft a PSCredential object with some code like this:</target>
        </trans-unit>
        <trans-unit id="ce71ea2a-ad7c-4dd0-914b-89be8ff26639" xml:space="preserve">
          <source>Grossly insecure - but useful for testing.</source>
          <target state="new">Grossly insecure - but useful for testing.</target>
        </trans-unit>
        <trans-unit id="470c1871-5ed5-404a-9678-761c0a08967f" xml:space="preserve">
          <source>Now you get no prompts at all in this session.</source>
          <target state="new">Now you get no prompts at all in this session.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>