<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-cn" original="foo.file" tool-id="2b38d30e-8bea-4911-a38b-1abf0632e70f" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="2b38d30e-8bea-4911-a38b-1abf0632e70f" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
      <olfilehash xmlns="">2fe214e2a741bb53de8e5d3ff3d2129f195a3208</olfilehash>
    </header>
    <body>
      <group id="55ec3c30-64d2-4d70-91b6-a3241054a299">
        <trans-unit id="cb537629-ae1e-4ce7-bf0c-2946e11187c9" xml:space="preserve">
          <source>PowerShell Snippets</source>
          <target state="new">PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="c62cc9af-ab37-476b-8959-8b8213e14f16" xml:space="preserve">
          <source>PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</source>
          <target state="new">PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</target>
        </trans-unit>
        <trans-unit id="4f2dad90-c209-476d-b09d-07cfbf079f00" xml:space="preserve">
          <source>All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</source>
          <target state="new">All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</target>
        </trans-unit>
        <trans-unit id="a096a019-1bb6-4470-bb46-1e472b75535d" xml:space="preserve">
          <source>If you aren't sure if you have the right permissions, type <bpt id="4b2613be-f505-4dba-b49a-78b0ef02b330">&lt;code&gt;</bpt>Get-VM<ept id="4b2613be-f505-4dba-b49a-78b0ef02b330">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</source>
          <target state="new">If you aren't sure if you have the right permissions, type <bpt id="4b2613be-f505-4dba-b49a-78b0ef02b330">&lt;code&gt;</bpt>Get-VM<ept id="4b2613be-f505-4dba-b49a-78b0ef02b330">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</target>
        </trans-unit>
        <trans-unit id="8e3871e5-d360-478b-a3de-5f24101caba6" xml:space="preserve">
          <source>PowerShell Direct tools</source>
          <target state="new">PowerShell Direct tools</target>
        </trans-unit>
        <trans-unit id="7803d2b5-df1a-4960-851d-926d68440a7b" xml:space="preserve">
          <source>All of the scripts and snippets in this section will rely on the following basics.</source>
          <target state="new">All of the scripts and snippets in this section will rely on the following basics.</target>
        </trans-unit>
        <trans-unit id="a0c660a1-99ff-4d49-8453-3d98ba1cd8a5" xml:space="preserve">
          <source><bpt id="ff942be9-7d18-4f95-b0d7-f4d29e3f8faa">&lt;strong&gt;</bpt>Requirements<ept id="ff942be9-7d18-4f95-b0d7-f4d29e3f8faa">&lt;/strong&gt;</ept> :</source>
          <target state="new"><bpt id="ff942be9-7d18-4f95-b0d7-f4d29e3f8faa">&lt;strong&gt;</bpt>Requirements<ept id="ff942be9-7d18-4f95-b0d7-f4d29e3f8faa">&lt;/strong&gt;</ept> :</target>
        </trans-unit>
        <trans-unit id="5d1ce965-5976-4de4-925d-b5dc97371618" xml:space="preserve">
          <source>PowerShell Direct.</source>
          <target state="new">PowerShell Direct.</target>
        </trans-unit>
        <trans-unit id="0af13e15-2565-4980-a2c6-e1f895a8d4b6" xml:space="preserve">
          <source>Windows 10 guest and host OS.</source>
          <target state="new">Windows 10 guest and host OS.</target>
        </trans-unit>
        <trans-unit id="6274190f-9b18-4aee-be42-68086c20056c" xml:space="preserve">
          <source><bpt id="57df4660-7de9-4316-9d45-3fb7eeb1f83f">&lt;strong&gt;</bpt>Common Variables<ept id="57df4660-7de9-4316-9d45-3fb7eeb1f83f">&lt;/strong&gt;</ept> :  
<bpt id="38963452-48d6-4416-8aca-db7c4dc9753b">&lt;code&gt;</bpt>$VMName<ept id="38963452-48d6-4416-8aca-db7c4dc9753b">&lt;/code&gt;</ept> -- this is a string with the VMName.</source>
          <target state="new"><bpt id="57df4660-7de9-4316-9d45-3fb7eeb1f83f">&lt;strong&gt;</bpt>Common Variables<ept id="57df4660-7de9-4316-9d45-3fb7eeb1f83f">&lt;/strong&gt;</ept> :  
<bpt id="38963452-48d6-4416-8aca-db7c4dc9753b">&lt;code&gt;</bpt>$VMName<ept id="38963452-48d6-4416-8aca-db7c4dc9753b">&lt;/code&gt;</ept> -- this is a string with the VMName.</target>
        </trans-unit>
        <trans-unit id="1165f21a-4424-4475-9c70-e5067c95d5f9" xml:space="preserve">
          <source>See a list of available VMs with <bpt id="fbb46d30-f189-4e0e-bb51-a9d49d45723c">&lt;code&gt;</bpt>Get-VM<ept id="fbb46d30-f189-4e0e-bb51-a9d49d45723c">&lt;/code&gt;</ept>  
<bpt id="b53b2e2a-a82e-4e20-9852-3460f53675fa">&lt;code&gt;</bpt>$cred<ept id="b53b2e2a-a82e-4e20-9852-3460f53675fa">&lt;/code&gt;</ept> -- Credential for the guest OS.</source>
          <target state="new">See a list of available VMs with <bpt id="fbb46d30-f189-4e0e-bb51-a9d49d45723c">&lt;code&gt;</bpt>Get-VM<ept id="fbb46d30-f189-4e0e-bb51-a9d49d45723c">&lt;/code&gt;</ept>  
<bpt id="b53b2e2a-a82e-4e20-9852-3460f53675fa">&lt;code&gt;</bpt>$cred<ept id="b53b2e2a-a82e-4e20-9852-3460f53675fa">&lt;/code&gt;</ept> -- Credential for the guest OS.</target>
        </trans-unit>
        <trans-unit id="0c09c67d-e0d8-4c83-bc51-714b8c553cf9" xml:space="preserve">
          <source>Can be populated using <bpt id="32197fb9-db74-49a5-8d3a-d80141d66b14">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="32197fb9-db74-49a5-8d3a-d80141d66b14">&lt;/code&gt;</ept></source>
          <target state="new">Can be populated using <bpt id="32197fb9-db74-49a5-8d3a-d80141d66b14">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="32197fb9-db74-49a5-8d3a-d80141d66b14">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="99c74c86-aa33-4746-b971-1ef2ad994cfc" xml:space="preserve">
          <source>Check if the guest has booted</source>
          <target state="new">Check if the guest has booted</target>
        </trans-unit>
        <trans-unit id="f2564cf8-a399-44a4-a2b5-eb1253551dfb" xml:space="preserve">
          <source>Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</source>
          <target state="new">Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</target>
        </trans-unit>
        <trans-unit id="73a3443f-7695-400f-8bd1-8cebb9861657" xml:space="preserve">
          <source>Use this command to check whether the guest has booted.</source>
          <target state="new">Use this command to check whether the guest has booted.</target>
        </trans-unit>
        <trans-unit id="4fce3808-85bf-47db-8501-75406dd7e4de" xml:space="preserve">
          <source><bpt id="ed7f8708-7af1-4372-a84c-7c0a5a263168">&lt;strong&gt;</bpt>Outcome<ept id="ed7f8708-7af1-4372-a84c-7c0a5a263168">&lt;/strong&gt;</ept>  
Prints a friendly message declaring the state of the guest OS.</source>
          <target state="new"><bpt id="ed7f8708-7af1-4372-a84c-7c0a5a263168">&lt;strong&gt;</bpt>Outcome<ept id="ed7f8708-7af1-4372-a84c-7c0a5a263168">&lt;/strong&gt;</ept>  
Prints a friendly message declaring the state of the guest OS.</target>
        </trans-unit>
        <trans-unit id="c1f4f556-7ee1-4353-a108-4e2c6cffd52e" xml:space="preserve">
          <source>Script locking until the guest has booted</source>
          <target state="new">Script locking until the guest has booted</target>
        </trans-unit>
        <trans-unit id="a9fbe542-e20a-4d14-84f3-22f7a568bf69" xml:space="preserve">
          <source>The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</source>
          <target state="new">The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</target>
        </trans-unit>
        <trans-unit id="ac62eff2-0d59-4292-ae79-28d0ffb8a9b6" xml:space="preserve">
          <source><bpt id="b0446745-cba9-41aa-8d9a-3d0bd21da1f1">&lt;strong&gt;</bpt>Outcome<ept id="b0446745-cba9-41aa-8d9a-3d0bd21da1f1">&lt;/strong&gt;</ept>  
Prints a friendly message and locks until the connection to the VM succeeds.</source>
          <target state="new"><bpt id="b0446745-cba9-41aa-8d9a-3d0bd21da1f1">&lt;strong&gt;</bpt>Outcome<ept id="b0446745-cba9-41aa-8d9a-3d0bd21da1f1">&lt;/strong&gt;</ept>  
Prints a friendly message and locks until the connection to the VM succeeds.</target>
        </trans-unit>
        <trans-unit id="e185a88d-b5af-4b49-844d-f45cf4b4550f" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="b7908cf6-2068-4dd6-95b9-95b12f65d082" xml:space="preserve">
          <source>Script locking until the guest has a network</source>
          <target state="new">Script locking until the guest has a network</target>
        </trans-unit>
        <trans-unit id="2cb13122-6509-4ca1-be68-8340b4a590c6" xml:space="preserve">
          <source>With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</source>
          <target state="new">With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</target>
        </trans-unit>
        <trans-unit id="9df34c0e-2bd1-402a-866c-3e1eaff61d08" xml:space="preserve">
          <source><bpt id="5e8ec47c-8e58-4374-a375-85f395c934a3">&lt;em&gt;</bpt>* Outcome *<ept id="5e8ec47c-8e58-4374-a375-85f395c934a3">&lt;/em&gt;</ept>
Locks until a DHCP lease is recieved.</source>
          <target state="new"><bpt id="5e8ec47c-8e58-4374-a375-85f395c934a3">&lt;em&gt;</bpt>* Outcome *<ept id="5e8ec47c-8e58-4374-a375-85f395c934a3">&lt;/em&gt;</ept>
Locks until a DHCP lease is recieved.</target>
        </trans-unit>
        <trans-unit id="1dc1ee8e-de10-435b-9679-ffdc9dfa7661" xml:space="preserve">
          <source>Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</source>
          <target state="new">Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</target>
        </trans-unit>
        <trans-unit id="9230e8c4-145d-490e-be57-2e85613ac6e7" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="fe6b0e89-c2ec-496d-a66a-6b414f313ef1" xml:space="preserve">
          <source>Managing credentials with PowerShell</source>
          <target state="new">Managing credentials with PowerShell</target>
        </trans-unit>
        <trans-unit id="612ab62c-b8d0-4a6c-b619-4bc7964eeaa2" xml:space="preserve">
          <source>Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</source>
          <target state="new">Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</target>
        </trans-unit>
        <trans-unit id="cd3199c9-d44d-4c31-8581-9abd76e94e25" xml:space="preserve">
          <source>There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</source>
          <target state="new">There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</target>
        </trans-unit>
        <trans-unit id="6873eda7-4a83-46ba-8af5-551e339fcdce" xml:space="preserve">
          <source>The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</source>
          <target state="new">The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</target>
        </trans-unit>
        <trans-unit id="cc0c35d2-b4de-4d4b-a22e-80902bd8a83f" xml:space="preserve">
          <source>This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</source>
          <target state="new">This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</target>
        </trans-unit>
        <trans-unit id="9464c4af-f3e7-43bc-8d2c-5ca9133bc764" xml:space="preserve">
          <source>In this scenario you can just run <bpt id="7ab5ea29-3b54-49d2-904e-87cd94cf3712">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="7ab5ea29-3b54-49d2-904e-87cd94cf3712">&lt;/code&gt;</ept>.</source>
          <target state="new">In this scenario you can just run <bpt id="7ab5ea29-3b54-49d2-904e-87cd94cf3712">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="7ab5ea29-3b54-49d2-904e-87cd94cf3712">&lt;/code&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="b9f17aaa-6b58-4fdc-9049-0dbeab605356" xml:space="preserve">
          <source>Let PowerShell prompt you for credentials  
If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</source>
          <target state="new">Let PowerShell prompt you for credentials  
If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</target>
        </trans-unit>
        <trans-unit id="139552dc-f6fa-4468-9109-e4e9e7de154d" xml:space="preserve">
          <source>Store credentials in a variable for reuse.</source>
          <target state="new">Store credentials in a variable for reuse.</target>
        </trans-unit>
        <trans-unit id="59e947eb-80c1-4a42-a277-9ca909944375" xml:space="preserve">
          <source>Running a simple command like this:</source>
          <target state="new">Running a simple command like this:</target>
        </trans-unit>
        <trans-unit id="cb07db5f-f036-4dab-8889-087c757b7b4a" xml:space="preserve">
          <source>  And then running something like this:</source>
          <target state="new">  And then running something like this:</target>
        </trans-unit>
        <trans-unit id="e70ff403-7190-4831-9efa-bf91d77f9242" xml:space="preserve">
          <source>  Will mean that you only get prompted once per script/PowerShell session for your credentials.</source>
          <target state="new">  Will mean that you only get prompted once per script/PowerShell session for your credentials.</target>
        </trans-unit>
        <trans-unit id="00873f19-fd42-4dff-a52e-cc8a2b3a67f9" xml:space="preserve">
          <source>Code your credentials into your scripts.</source>
          <target state="new">Code your credentials into your scripts.</target>
        </trans-unit>
        <trans-unit id="3a3bfd86-f22f-4b15-b0f8-cd3f3d13587a" xml:space="preserve">
          <source><bpt id="4f20a447-0033-4aa2-9861-eee29d894521">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="4f20a447-0033-4aa2-9861-eee29d894521">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="4f20a447-0033-4aa2-9861-eee29d894521">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="4f20a447-0033-4aa2-9861-eee29d894521">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="4a7c9561-0e6b-45c8-aba3-597103f3c9d1" xml:space="preserve">
          <source>Warning:  _Do not do this in a production system.</source>
          <target state="new">Warning:  _Do not do this in a production system.</target>
        </trans-unit>
        <trans-unit id="7918b97a-4a52-45ad-9f9d-e00082fe0581" xml:space="preserve">
          <source>Do not do this with real passwords._</source>
          <target state="new">Do not do this with real passwords._</target>
        </trans-unit>
        <trans-unit id="33bfb4e0-80b0-4b50-93d9-457b6241b757" xml:space="preserve">
          <source>You can hand craft a PSCredential object with some code like this:</source>
          <target state="new">You can hand craft a PSCredential object with some code like this:</target>
        </trans-unit>
        <trans-unit id="a463746f-84a8-4aff-983a-7a79d10366ca" xml:space="preserve">
          <source>Grossly insecure - but useful for testing.</source>
          <target state="new">Grossly insecure - but useful for testing.</target>
        </trans-unit>
        <trans-unit id="99497283-8ed4-4088-8841-0e655e790cfe" xml:space="preserve">
          <source>Now you get no prompts at all in this session.</source>
          <target state="new">Now you get no prompts at all in this session.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>