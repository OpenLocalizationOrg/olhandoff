<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-cn" original="markdown" tool-id="caps" product-name="n/a" product-version="n/a" build-num="n/a">
    <header>
      <tool tool-id="caps" tool-name="CAPS" tool-version="2.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="metadata">
        <group id="1">
          <trans-unit id="1" translate="yes" xml:space="preserve">
            <source>testmdarticle</source>
            <target state="new">testmdarticle</target>
            <context-group>
              <context context-type="x-metadataname">name</context>
            </context-group>
          </trans-unit>
        </group>
      </group>
      <group extype="content">
        <group id="2">
          <trans-unit id="2" translate="yes" xml:space="preserve">
            <source>PowerShell Snippets</source>
            <target state="new">PowerShell Snippets</target>
          </trans-unit>
        </group>
        <group id="3">
          <trans-unit id="3" translate="yes" xml:space="preserve">
            <source>PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</source>
            <target state="new">PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</target>
          </trans-unit>
        </group>
        <group id="4">
          <trans-unit id="4" translate="yes" xml:space="preserve">
            <source>All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</source>
            <target state="new">All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</target>
          </trans-unit>
        </group>
        <group id="5">
          <trans-unit id="5" translate="yes" xml:space="preserve">
            <source>If you aren't sure if you have the right permissions, type </source>
            <target state="new">If you aren't sure if you have the right permissions, type </target>
          </trans-unit>
        </group>
        <group id="6">
          <trans-unit id="6" translate="yes" xml:space="preserve">
            <source> and if it runs with no errors, you're ready to go.</source>
            <target state="new"> and if it runs with no errors, you're ready to go.</target>
          </trans-unit>
        </group>
        <group id="7">
          <trans-unit id="7" translate="yes" xml:space="preserve">
            <source>PowerShell Direct tools</source>
            <target state="new">PowerShell Direct tools</target>
          </trans-unit>
        </group>
        <group id="8">
          <trans-unit id="8" translate="yes" xml:space="preserve">
            <source>All of the scripts and snippets in this section will rely on the following basics.</source>
            <target state="new">All of the scripts and snippets in this section will rely on the following basics.</target>
          </trans-unit>
        </group>
        <group id="9">
          <trans-unit id="9" translate="yes" xml:space="preserve">
            <source>Requirements</source>
            <target state="new">Requirements</target>
          </trans-unit>
        </group>
        <group id="10">
          <trans-unit id="10" translate="yes" xml:space="preserve">
            <source> :  </source>
            <target state="new"> :  </target>
          </trans-unit>
        </group>
        <group id="11">
          <trans-unit id="11" translate="yes" xml:space="preserve">
            <source>PowerShell Direct.</source>
            <target state="new">PowerShell Direct.</target>
          </trans-unit>
        </group>
        <group id="12">
          <trans-unit id="12" translate="yes" xml:space="preserve">
            <source>Windows 10 guest and host OS.</source>
            <target state="new">Windows 10 guest and host OS.</target>
          </trans-unit>
        </group>
        <group id="13">
          <trans-unit id="13" translate="yes" xml:space="preserve">
            <source>Common Variables</source>
            <target state="new">Common Variables</target>
          </trans-unit>
        </group>
        <group id="14">
          <trans-unit id="14" translate="yes" xml:space="preserve">
            <source> :  
</source>
            <target state="new"> :  
</target>
          </trans-unit>
        </group>
        <group id="15">
          <trans-unit id="15" translate="yes" xml:space="preserve">
            <source> -- this is a string with the VMName.</source>
            <target state="new"> -- this is a string with the VMName.</target>
          </trans-unit>
        </group>
        <group id="16">
          <trans-unit id="16" translate="yes" xml:space="preserve">
            <source>See a list of available VMs with </source>
            <target state="new">See a list of available VMs with </target>
          </trans-unit>
        </group>
        <group id="17">
          <trans-unit id="17" translate="yes" xml:space="preserve">
            <source> -- Credential for the guest OS.</source>
            <target state="new"> -- Credential for the guest OS.</target>
          </trans-unit>
        </group>
        <group id="18">
          <trans-unit id="18" translate="yes" xml:space="preserve">
            <source>Can be populated using </source>
            <target state="new">Can be populated using </target>
          </trans-unit>
        </group>
        <group id="19">
          <trans-unit id="19" translate="yes" xml:space="preserve">
            <source>Check if the guest has booted</source>
            <target state="new">Check if the guest has booted</target>
          </trans-unit>
        </group>
        <group id="20">
          <trans-unit id="20" translate="yes" xml:space="preserve">
            <source>Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</source>
            <target state="new">Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</target>
          </trans-unit>
        </group>
        <group id="21">
          <trans-unit id="21" translate="yes" xml:space="preserve">
            <source>Use this command to check whether the guest has booted.</source>
            <target state="new">Use this command to check whether the guest has booted.</target>
          </trans-unit>
        </group>
        <group id="22">
          <trans-unit id="22" translate="yes" xml:space="preserve">
            <source>``` PowerShell
if((Invoke-Command -VMName $VMName -Credential $cred {"Test"}) -ne "Test"){Write-Host "Not Booted"} else {Write-Host "Booted"}</source>
            <target state="new">``` PowerShell
if((Invoke-Command -VMName $VMName -Credential $cred {"Test"}) -ne "Test"){Write-Host "Not Booted"} else {Write-Host "Booted"}</target>
          </trans-unit>
        </group>
        <group id="23">
          <trans-unit id="23" translate="yes" xml:space="preserve">
            <source>Outcome</source>
            <target state="new">Outcome</target>
          </trans-unit>
        </group>
        <group id="24">
          <trans-unit id="24" translate="yes" xml:space="preserve">
            <source>  
Prints a friendly message and locks until the connection to the VM succeeds.</source>
            <target state="new">  
Prints a friendly message and locks until the connection to the VM succeeds.</target>
          </trans-unit>
        </group>
        <group id="25">
          <trans-unit id="25" translate="yes" xml:space="preserve">
            <source>Succeeds silently.</source>
            <target state="new">Succeeds silently.</target>
          </trans-unit>
        </group>
        <group id="26">
          <trans-unit id="26" translate="yes" xml:space="preserve">
            <source>Script locking until the guest has a network</source>
            <target state="new">Script locking until the guest has a network</target>
          </trans-unit>
        </group>
        <group id="27">
          <trans-unit id="27" translate="yes" xml:space="preserve">
            <source>With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</source>
            <target state="new">With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</target>
          </trans-unit>
        </group>
        <group id="28">
          <trans-unit id="28" translate="yes" xml:space="preserve">
            <source>``` PowerShell</source>
            <target state="new">``` PowerShell</target>
          </trans-unit>
        </group>
        <group id="29">
          <trans-unit id="29" translate="yes" xml:space="preserve">
            <source>Wait for DHCP</source>
            <target state="new">Wait for DHCP</target>
          </trans-unit>
        </group>
        <group id="30">
          <trans-unit id="30" translate="yes" xml:space="preserve">
            <source>while ((Get-NetIPAddress | ?</source>
            <target state="new">while ((Get-NetIPAddress | ?</target>
          </trans-unit>
        </group>
        <group id="31">
          <trans-unit id="31" translate="yes" xml:space="preserve">
            <source>AddressFamily -eq IPv4 | ?</source>
            <target state="new">AddressFamily -eq IPv4 | ?</target>
          </trans-unit>
        </group>
        <group id="32">
          <trans-unit id="32" translate="yes" xml:space="preserve">
            <source>IPAddress -ne 127.0.0.1).SuffixOrigin -ne "Dhcp") {sleep -Milliseconds 10}
```</source>
            <target state="new">IPAddress -ne 127.0.0.1).SuffixOrigin -ne "Dhcp") {sleep -Milliseconds 10}
```</target>
          </trans-unit>
        </group>
        <group id="33">
          <trans-unit id="33" translate="yes" xml:space="preserve">
            <source>* Outcome *</source>
            <target state="new">* Outcome *</target>
          </trans-unit>
        </group>
        <group id="34">
          <trans-unit id="34" translate="yes" xml:space="preserve">
            <source>
Locks until a DHCP lease is recieved.</source>
            <target state="new">
Locks until a DHCP lease is recieved.</target>
          </trans-unit>
        </group>
        <group id="35">
          <trans-unit id="35" translate="yes" xml:space="preserve">
            <source>Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</source>
            <target state="new">Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</target>
          </trans-unit>
        </group>
        <group id="36">
          <trans-unit id="36" translate="yes" xml:space="preserve">
            <source>Succeeds silently.</source>
            <target state="new">Succeeds silently.</target>
          </trans-unit>
        </group>
        <group id="37">
          <trans-unit id="37" translate="yes" xml:space="preserve">
            <source>Managing credentials with PowerShell</source>
            <target state="new">Managing credentials with PowerShell</target>
          </trans-unit>
        </group>
        <group id="38">
          <trans-unit id="38" translate="yes" xml:space="preserve">
            <source>Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</source>
            <target state="new">Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</target>
          </trans-unit>
        </group>
        <group id="39">
          <trans-unit id="39" translate="yes" xml:space="preserve">
            <source>There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</source>
            <target state="new">There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</target>
          </trans-unit>
        </group>
        <group id="40">
          <trans-unit id="40" translate="yes" xml:space="preserve">
            <source>The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</source>
            <target state="new">The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</target>
          </trans-unit>
        </group>
        <group id="41">
          <trans-unit id="41" translate="yes" xml:space="preserve">
            <source>This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</source>
            <target state="new">This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</target>
          </trans-unit>
        </group>
        <group id="42">
          <trans-unit id="42" translate="yes" xml:space="preserve">
            <source>In this scenario you can just run </source>
            <target state="new">In this scenario you can just run </target>
          </trans-unit>
        </group>
        <group id="43">
          <trans-unit id="43" translate="yes" xml:space="preserve">
            <source>.</source>
            <target state="new">.</target>
          </trans-unit>
        </group>
        <group id="44">
          <trans-unit id="44" translate="yes" xml:space="preserve">
            <source>Let PowerShell prompt you for credentials  
If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</source>
            <target state="new">Let PowerShell prompt you for credentials  
If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</target>
          </trans-unit>
        </group>
        <group id="45">
          <trans-unit id="45" translate="yes" xml:space="preserve">
            <source>Store credentials in a variable for reuse.</source>
            <target state="new">Store credentials in a variable for reuse.</target>
          </trans-unit>
        </group>
        <group id="46">
          <trans-unit id="46" translate="yes" xml:space="preserve">
            <source>Running a simple command like this:  
</source>
            <target state="new">Running a simple command like this:  
</target>
          </trans-unit>
        </group>
        <group id="47">
          <trans-unit id="47" translate="yes" xml:space="preserve">
            <source>
And then running something like this:
``` PowerShell
Invoke-Command -VMName "test" -Credential $localCred  {get-process}</source>
            <target state="new">
And then running something like this:
``` PowerShell
Invoke-Command -VMName "test" -Credential $localCred  {get-process}</target>
          </trans-unit>
        </group>
        <group id="48">
          <trans-unit id="48" translate="yes" xml:space="preserve">
            <source>Grossly insecure - but useful for testing.</source>
            <target state="new">Grossly insecure - but useful for testing.</target>
          </trans-unit>
        </group>
        <group id="49">
          <trans-unit id="49" translate="yes" xml:space="preserve">
            <source>Now you get no prompts at all in this session.</source>
            <target state="new">Now you get no prompts at all in this session.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>