<?xml version="1.0" encoding="utf-8"?>
<xliff srcLang="en-US" trgLang="zh-cn" version="2.0" xmlns="urn:oasis:names:tc:xliff:document:2.0" xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">4c3e627e012ab8de22ced3409fbfe90e6874a4c6</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source xml:space="preserve">Scan from your app</source>
          <target xml:space="preserve">Scan from your app</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source xml:space="preserve">\[ Updated for UWP apps on Windows 10.</source>
          <target xml:space="preserve">\[ Updated for UWP apps on Windows 10.</target>
        </segment>
      </unit>
      <unit id="103">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
          <target xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source xml:space="preserve">** Important APIs **</source>
          <target xml:space="preserve">** Important APIs **</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source xml:space="preserve">Windows.Devices.Scanners</source>
          <target xml:space="preserve">Windows.Devices.Scanners</target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source xml:space="preserve">DeviceInformation</source>
          <target xml:space="preserve">DeviceInformation</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source xml:space="preserve">DeviceClass</source>
          <target xml:space="preserve">DeviceClass</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source xml:space="preserve">Learn here how to scan content from your app by using a flatbed, feeder, or auto-configured scan source.</source>
          <target xml:space="preserve">Learn here how to scan content from your app by using a flatbed, feeder, or auto-configured scan source.</target>
        </segment>
      </unit>
      <unit id="109">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/Dn264250)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">[</data>
          <data id="id8">](https://msdn.microsoft.com/library/windows/apps/Dn894631)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Important</pc>  The <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">Windows.Devices.Scanners</pc></pc> APIs are part of the desktop <pc dataRefEnd="id8" dataRefStart="id7" id="p4">device family</pc>.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Important</pc>  The <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">Windows.Devices.Scanners</pc></pc> APIs are part of the desktop <pc dataRefEnd="id8" dataRefStart="id7" id="p4">device family</pc>.</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source xml:space="preserve">Apps can use these APIs only on the desktop version of Windows 10.</source>
          <target xml:space="preserve">Apps can use these APIs only on the desktop version of Windows 10.</target>
        </segment>
      </unit>
      <unit id="111">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR225393)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/BR225381)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To scan from your app, you must first list the available scanners by declaring a new <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DeviceInformation</pc></pc> object and getting the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">DeviceClass</pc></pc> type.</source>
          <target xml:space="preserve">To scan from your app, you must first list the available scanners by declaring a new <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DeviceInformation</pc></pc> object and getting the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">DeviceClass</pc></pc> type.</target>
        </segment>
      </unit>
      <unit id="112">
        <segment state="initial">
          <source xml:space="preserve">Only scanners that are installed locally with WIA drivers are listed and available to your app.</source>
          <target xml:space="preserve">Only scanners that are installed locally with WIA drivers are listed and available to your app.</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source xml:space="preserve">After your app has listed available scanners, it can use the auto-configured scan settings based on the scanner type, or just scan using the available flatbed or feeder scan source.</source>
          <target xml:space="preserve">After your app has listed available scanners, it can use the auto-configured scan settings based on the scanner type, or just scan using the available flatbed or feeder scan source.</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source xml:space="preserve">To use auto-configured settings, the scanner must be enabled for auto-configuration must not be equipped with both a flatbed and a feeder scanner.</source>
          <target xml:space="preserve">To use auto-configured settings, the scanner must be enabled for auto-configuration must not be equipped with both a flatbed and a feeder scanner.</target>
        </segment>
      </unit>
      <unit id="115">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/hardware/Ff539393)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Auto-Configured Scanning</pc>.</source>
          <target xml:space="preserve">For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Auto-Configured Scanning</pc>.</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source xml:space="preserve">Enumerate available scanners</source>
          <target xml:space="preserve">Enumerate available scanners</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source xml:space="preserve">Windows does not detect scanners automatically.</source>
          <target xml:space="preserve">Windows does not detect scanners automatically.</target>
        </segment>
      </unit>
      <unit id="118">
        <segment state="initial">
          <source xml:space="preserve">You must perform this step in order for your app to communicate with the scanner.</source>
          <target xml:space="preserve">You must perform this step in order for your app to communicate with the scanner.</target>
        </segment>
      </unit>
      <unit id="119">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR225459)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">In this example, the scanner device enumeration is done using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Devices.Enumeration</pc></pc> namespace.</source>
          <target xml:space="preserve">In this example, the scanner device enumeration is done using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Devices.Enumeration</pc></pc> namespace.</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source xml:space="preserve">First, add these using statements to your class definition file.</source>
          <target xml:space="preserve">First, add these using statements to your class definition file.</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source xml:space="preserve">Next, implement a device watcher to start enumerating scanners.</source>
          <target xml:space="preserve">Next, implement a device watcher to start enumerating scanners.</target>
        </segment>
      </unit>
      <unit id="122">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](enumerate-devices.md)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Enumerate devices</pc>.</source>
          <target xml:space="preserve">For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Enumerate devices</pc>.</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source xml:space="preserve">Create an event handler for when a scanner is added.</source>
          <target xml:space="preserve">Create an event handler for when a scanner is added.</target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source xml:space="preserve">Scan</source>
          <target xml:space="preserve">Scan</target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source xml:space="preserve">Get an ImageScanner object</source>
          <target xml:space="preserve">Get an ImageScanner object</target>
        </segment>
      </unit>
      <unit id="126">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/Dn264238)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
          <data id="id9">**</data>
          <data id="id10">**</data>
          <data id="id11">**</data>
          <data id="id12">**</data>
          <data id="id13">[</data>
          <data id="id14">](https://msdn.microsoft.com/library/windows/apps/Dn263806)</data>
          <data id="id15">**</data>
          <data id="id16">**</data>
          <data id="id17">[</data>
          <data id="id18">](https://msdn.microsoft.com/library/windows/apps/windows.devices.scanners.imagescanner.fromidasync)</data>
          <data id="id19">**</data>
          <data id="id20">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For each <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ImageScannerScanSource</pc></pc> enumeration type, whether it's <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Default</pc>, <pc dataRefEnd="id8" dataRefStart="id7" id="p4">AutoConfigured</pc>, <pc dataRefEnd="id10" dataRefStart="id9" id="p5">Flatbed</pc>, or <pc dataRefEnd="id12" dataRefStart="id11" id="p6">Feeder</pc>, you must first create an <pc dataRefEnd="id14" dataRefStart="id13" id="p7"><pc dataRefEnd="id16" dataRefStart="id15" id="p8">ImageScanner</pc></pc> object by calling the <pc dataRefEnd="id18" dataRefStart="id17" id="p9"><pc dataRefEnd="id20" dataRefStart="id19" id="p10">ImageScanner.FromIdAsync</pc></pc> method, like this.</source>
          <target xml:space="preserve">For each <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ImageScannerScanSource</pc></pc> enumeration type, whether it's <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Default</pc>, <pc dataRefEnd="id8" dataRefStart="id7" id="p4">AutoConfigured</pc>, <pc dataRefEnd="id10" dataRefStart="id9" id="p5">Flatbed</pc>, or <pc dataRefEnd="id12" dataRefStart="id11" id="p6">Feeder</pc>, you must first create an <pc dataRefEnd="id14" dataRefStart="id13" id="p7"><pc dataRefEnd="id16" dataRefStart="id15" id="p8">ImageScanner</pc></pc> object by calling the <pc dataRefEnd="id18" dataRefStart="id17" id="p9"><pc dataRefEnd="id20" dataRefStart="id19" id="p10">ImageScanner.FromIdAsync</pc></pc> method, like this.</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source xml:space="preserve">Just scan</source>
          <target xml:space="preserve">Just scan</target>
        </segment>
      </unit>
      <unit id="128">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/Dn264250)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To scan with the default settings, your app relies on the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Devices.Scanners</pc></pc> namespace to select a scanner and scans from that source.</source>
          <target xml:space="preserve">To scan with the default settings, your app relies on the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Devices.Scanners</pc></pc> namespace to select a scanner and scans from that source.</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source xml:space="preserve">No scan settings are changed.</source>
          <target xml:space="preserve">No scan settings are changed.</target>
        </segment>
      </unit>
      <unit id="130">
        <segment state="initial">
          <source xml:space="preserve">The possible scanners are auto-configure, flatbed, or feeder.</source>
          <target xml:space="preserve">The possible scanners are auto-configure, flatbed, or feeder.</target>
        </segment>
      </unit>
      <unit id="131">
        <segment state="initial">
          <source xml:space="preserve">This type of scan will most likely produce a successful scan operation, even if it scans from the wrong source, like flatbed instead of feeder.</source>
          <target xml:space="preserve">This type of scan will most likely produce a successful scan operation, even if it scans from the wrong source, like flatbed instead of feeder.</target>
        </segment>
      </unit>
      <unit id="132">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  If the user places the document to scan in the feeder, the scanner will scan from the flatbed instead.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  If the user places the document to scan in the feeder, the scanner will scan from the flatbed instead.</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source xml:space="preserve">If the user tries to scan from an empty feeder, the scan job won't produce any scanned files.</source>
          <target xml:space="preserve">If the user tries to scan from an empty feeder, the scan job won't produce any scanned files.</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source xml:space="preserve">Scan from Auto-configured, Flatbed, or Feeder source</source>
          <target xml:space="preserve">Scan from Auto-configured, Flatbed, or Feeder source</target>
        </segment>
      </unit>
      <unit id="135">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/hardware/Ff539393)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Your app can use the device's <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Auto-Configured Scanning</pc> to scan with the most optimal scan settings.</source>
          <target xml:space="preserve">Your app can use the device's <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Auto-Configured Scanning</pc> to scan with the most optimal scan settings.</target>
        </segment>
      </unit>
      <unit id="136">
        <segment state="initial">
          <source xml:space="preserve">With this option, the device itself can determine the best scan settings, like color mode and scan resolution, based on the content being scanned.</source>
          <target xml:space="preserve">With this option, the device itself can determine the best scan settings, like color mode and scan resolution, based on the content being scanned.</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source xml:space="preserve">The device selects the scan settings at run time for each new scan job.</source>
          <target xml:space="preserve">The device selects the scan settings at run time for each new scan job.</target>
        </segment>
      </unit>
      <unit id="138">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  Not all scanners support this feature, so the app must check if the scanner supports this feature before using this setting.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  Not all scanners support this feature, so the app must check if the scanner supports this feature before using this setting.</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source xml:space="preserve">In this example, the app first checks if the scanner is capable of auto-configuration and then scans.</source>
          <target xml:space="preserve">In this example, the app first checks if the scanner is capable of auto-configuration and then scans.</target>
        </segment>
      </unit>
      <unit id="140">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To specify either flatbed or feeder scanner, simply replace <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AutoConfigured</pc> with <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Flatbed</pc> or <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Feeder</pc>.</source>
          <target xml:space="preserve">To specify either flatbed or feeder scanner, simply replace <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AutoConfigured</pc> with <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Flatbed</pc> or <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Feeder</pc>.</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source xml:space="preserve">Preview the scan</source>
          <target xml:space="preserve">Preview the scan</target>
        </segment>
      </unit>
      <unit id="142">
        <segment state="initial">
          <source xml:space="preserve">You can add code to preview the scan before scanning to a folder.</source>
          <target xml:space="preserve">You can add code to preview the scan before scanning to a folder.</target>
        </segment>
      </unit>
      <unit id="143">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">In the example below, the app checks if the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Flatbed</pc> scanner supports preview, then previews the scan.</source>
          <target xml:space="preserve">In the example below, the app checks if the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Flatbed</pc> scanner supports preview, then previews the scan.</target>
        </segment>
      </unit>
      <unit id="144">
        <segment state="initial">
          <source xml:space="preserve">Cancel the scan</source>
          <target xml:space="preserve">Cancel the scan</target>
        </segment>
      </unit>
      <unit id="145">
        <segment state="initial">
          <source xml:space="preserve">You can let users cancel the scan job midway through a scan, like this.</source>
          <target xml:space="preserve">You can let users cancel the scan job midway through a scan, like this.</target>
        </segment>
      </unit>
      <unit id="146">
        <segment state="initial">
          <source xml:space="preserve">Scan with progress</source>
          <target xml:space="preserve">Scan with progress</target>
        </segment>
      </unit>
      <unit id="147">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Create a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">System.Threading.CancellationTokenSource</pc> object.</source>
          <target xml:space="preserve">Create a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">System.Threading.CancellationTokenSource</pc> object.</target>
        </segment>
      </unit>
      <unit id="148">
        <segment state="initial">
          <source xml:space="preserve">Set up the progress event handler and get the progress of the scan.</source>
          <target xml:space="preserve">Set up the progress event handler and get the progress of the scan.</target>
        </segment>
      </unit>
      <unit id="149">
        <segment state="initial">
          <source xml:space="preserve">Scanning to the pictures library</source>
          <target xml:space="preserve">Scanning to the pictures library</target>
        </segment>
      </unit>
      <unit id="150">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR207881)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">*</data>
          <data id="id6">*</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Users can scan to any folder dynamically using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FolderPicker</pc></pc> class, but you must declare the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Pictures Library</pc> capability in the manifest to allow users to scan to that folder.</source>
          <target xml:space="preserve">Users can scan to any folder dynamically using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FolderPicker</pc></pc> class, but you must declare the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Pictures Library</pc> capability in the manifest to allow users to scan to that folder.</target>
        </segment>
      </unit>
      <unit id="151">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/Mt270968)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For more info on app capabilities, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">App capability declarations</pc>.</source>
          <target xml:space="preserve">For more info on app capabilities, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">App capability declarations</pc>.</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>