<?xml version="1.0" encoding="utf-8"?>
<xliff srcLang="en-US" trgLang="zh-cn" version="2.0" xmlns="urn:oasis:names:tc:xliff:document:2.0" xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">250763b6e584767dd9125af98545f86f87fe0ab4</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source xml:space="preserve">ms.assetid: 1AE29512-7A7D-4179-ADAC-F02819AC2C39</source>
          <target xml:space="preserve">ms.assetid: 1AE29512-7A7D-4179-ADAC-F02819AC2C39</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source xml:space="preserve">title: Files and folders in the Music, Pictures, and Videos libraries</source>
          <target xml:space="preserve">title: Files and folders in the Music, Pictures, and Videos libraries</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source xml:space="preserve">description: Add existing folders of music, pictures, or videos to the corresponding libraries.</source>
          <target xml:space="preserve">description: Add existing folders of music, pictures, or videos to the corresponding libraries.</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source xml:space="preserve">You can also remove folders from libraries, get the list of folders in a library, and discover stored photos, music, and videos.</source>
          <target xml:space="preserve">You can also remove folders from libraries, get the list of folders in a library, and discover stored photos, music, and videos.</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source xml:space="preserve">Files and folders in the Music, Pictures, and Videos libraries</source>
          <target xml:space="preserve">Files and folders in the Music, Pictures, and Videos libraries</target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source xml:space="preserve">\[ Updated for UWP apps on Windows 10.</source>
          <target xml:space="preserve">\[ Updated for UWP apps on Windows 10.</target>
        </segment>
      </unit>
      <unit id="107">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
          <target xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source xml:space="preserve">Add existing folders of music, pictures, or videos to the corresponding libraries.</source>
          <target xml:space="preserve">Add existing folders of music, pictures, or videos to the corresponding libraries.</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source xml:space="preserve">You can also remove folders from libraries, get the list of folders in a library, and discover stored photos, music, and videos.</source>
          <target xml:space="preserve">You can also remove folders from libraries, get the list of folders in a library, and discover stored photos, music, and videos.</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source xml:space="preserve">A library is a virtual collection of folders, which includes a known folder by default plus any other folders the user has added to the library by using your app or one of the built-in apps.</source>
          <target xml:space="preserve">A library is a virtual collection of folders, which includes a known folder by default plus any other folders the user has added to the library by using your app or one of the built-in apps.</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source xml:space="preserve">For example, the Pictures library includes the Pictures known folder by default.</source>
          <target xml:space="preserve">For example, the Pictures library includes the Pictures known folder by default.</target>
        </segment>
      </unit>
      <unit id="112">
        <segment state="initial">
          <source xml:space="preserve">The user can add folders to, or remove them from, the Pictures library by using your app or the built-in Photos app.</source>
          <target xml:space="preserve">The user can add folders to, or remove them from, the Pictures library by using your app or the built-in Photos app.</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source xml:space="preserve">Prerequisites</source>
          <target xml:space="preserve">Prerequisites</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source xml:space="preserve">Understand async programming for Universal Windows Platform (UWP) apps</source>
          <target xml:space="preserve">Understand async programming for Universal Windows Platform (UWP) apps</target>
        </segment>
      </unit>
      <unit id="115">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/mt187337)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">You can learn how to write asynchronous apps in C# or Visual Basic, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Call asynchronous APIs in C# or Visual Basic</pc>.</source>
          <target xml:space="preserve">You can learn how to write asynchronous apps in C# or Visual Basic, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Call asynchronous APIs in C# or Visual Basic</pc>.</target>
        </segment>
      </unit>
      <unit id="116">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/mt187334)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To learn how to write asynchronous apps in C++, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Asynchronous programming in C++</pc>.</source>
          <target xml:space="preserve">To learn how to write asynchronous apps in C++, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Asynchronous programming in C++</pc>.</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source xml:space="preserve">Access permissions to the location</source>
          <target xml:space="preserve">Access permissions to the location</target>
        </segment>
      </unit>
      <unit id="118">
        <segment state="initial">
          <source xml:space="preserve">In Visual Studio, open the app manifest file in Manifest Designer.</source>
          <target xml:space="preserve">In Visual Studio, open the app manifest file in Manifest Designer.</target>
        </segment>
      </unit>
      <unit id="119">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">On the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Capabilities</pc> page, select the libraries that your app manages.</source>
          <target xml:space="preserve">On the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Capabilities</pc> page, select the libraries that your app manages.</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source xml:space="preserve">Music Library</source>
          <target xml:space="preserve">Music Library</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source xml:space="preserve">Pictures Library</source>
          <target xml:space="preserve">Pictures Library</target>
        </segment>
      </unit>
      <unit id="122">
        <segment state="initial">
          <source xml:space="preserve">Videos Library</source>
          <target xml:space="preserve">Videos Library</target>
        </segment>
      </unit>
      <unit id="123">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](file-access-permissions.md)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To learn more, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">File access permissions</pc>.</source>
          <target xml:space="preserve">To learn more, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">File access permissions</pc>.</target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source xml:space="preserve">Get a reference to a library</source>
          <target xml:space="preserve">Get a reference to a library</target>
        </segment>
      </unit>
      <unit id="125">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  Remember to declare the appropriate capability.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  Remember to declare the appropriate capability.</target>
        </segment>
      </unit>
      <unit id="126">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn251725)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To get a reference to the user's Music, Pictures, or Video library, call the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StorageLibrary.GetLibraryAsync</pc></pc> method.</source>
          <target xml:space="preserve">To get a reference to the user's Music, Pictures, or Video library, call the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StorageLibrary.GetLibraryAsync</pc></pc> method.</target>
        </segment>
      </unit>
      <unit id="127">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn298399)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Provide the corresponding value from the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">KnownLibraryId</pc></pc> enumeration.</source>
          <target xml:space="preserve">Provide the corresponding value from the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">KnownLibraryId</pc></pc> enumeration.</target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source xml:space="preserve">KnownLibraryId.Music</source>
          <target xml:space="preserve">KnownLibraryId.Music</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source xml:space="preserve">KnownLibraryId.Pictures</source>
          <target xml:space="preserve">KnownLibraryId.Pictures</target>
        </segment>
      </unit>
      <unit id="130">
        <segment state="initial">
          <source xml:space="preserve">KnownLibraryId.Videos</source>
          <target xml:space="preserve">KnownLibraryId.Videos</target>
        </segment>
      </unit>
      <unit id="131">
        <segment state="initial">
          <source xml:space="preserve">Get the list of folders in a library</source>
          <target xml:space="preserve">Get the list of folders in a library</target>
        </segment>
      </unit>
      <unit id="132">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn251724)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To get the list of folders in a library, get the value of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StorageLibrary.Folders</pc></pc> property.</source>
          <target xml:space="preserve">To get the list of folders in a library, get the value of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StorageLibrary.Folders</pc></pc> property.</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source xml:space="preserve">Get the folder in a library where new files are saved by default</source>
          <target xml:space="preserve">Get the folder in a library where new files are saved by default</target>
        </segment>
      </unit>
      <unit id="134">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn251728)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To get the folder in a library where new files are saved by default, get the value of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StorageLibrary.SaveFolder</pc></pc> property.</source>
          <target xml:space="preserve">To get the folder in a library where new files are saved by default, get the value of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StorageLibrary.SaveFolder</pc></pc> property.</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source xml:space="preserve">Add an existing folder to a library</source>
          <target xml:space="preserve">Add an existing folder to a library</target>
        </segment>
      </unit>
      <unit id="136">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn251726)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To add a folder to a library, you call the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StorageLibrary.RequestAddFolderAsync</pc></pc>.</source>
          <target xml:space="preserve">To add a folder to a library, you call the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StorageLibrary.RequestAddFolderAsync</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="137">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Taking the Pictures Library as an example, calling this method causes a folder picker to be shown to the user with an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Add this folder to Pictures</pc> button.</source>
          <target xml:space="preserve">Taking the Pictures Library as an example, calling this method causes a folder picker to be shown to the user with an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Add this folder to Pictures</pc> button.</target>
        </segment>
      </unit>
      <unit id="138">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn251724)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">If the user picks a folder then the folder remains in its original location on disk and it becomes an item in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StorageLibrary.Folders</pc></pc> property (and in the built-in Photos app), but the folder does not appear as a child of the Pictures folder in File Explorer.</source>
          <target xml:space="preserve">If the user picks a folder then the folder remains in its original location on disk and it becomes an item in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StorageLibrary.Folders</pc></pc> property (and in the built-in Photos app), but the folder does not appear as a child of the Pictures folder in File Explorer.</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source xml:space="preserve">Remove a folder from a library</source>
          <target xml:space="preserve">Remove a folder from a library</target>
        </segment>
      </unit>
      <unit id="140">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn251727)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To remove a folder from a library, call the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StorageLibrary.RequestRemoveFolderAsync</pc></pc> method and specify the folder to be removed.</source>
          <target xml:space="preserve">To remove a folder from a library, call the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StorageLibrary.RequestRemoveFolderAsync</pc></pc> method and specify the folder to be removed.</target>
        </segment>
      </unit>
      <unit id="141">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn251724)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/br242878)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">You could use <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StorageLibrary.Folders</pc></pc> and a <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">ListView</pc></pc> control (or similar) for the user to select a folder to remove.</source>
          <target xml:space="preserve">You could use <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StorageLibrary.Folders</pc></pc> and a <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">ListView</pc></pc> control (or similar) for the user to select a folder to remove.</target>
        </segment>
      </unit>
      <unit id="142">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn251727)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">When you call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StorageLibrary.RequestRemoveFolderAsync</pc></pc>, the user sees a confirmation dialog saying that the folder "won't appear in Pictures anymore, but won't be deleted."</source>
          <target xml:space="preserve">When you call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StorageLibrary.RequestRemoveFolderAsync</pc></pc>, the user sees a confirmation dialog saying that the folder "won't appear in Pictures anymore, but won't be deleted."</target>
        </segment>
      </unit>
      <unit id="143">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn251724)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">What this means is that the folder remains in its original location on disk, is removed from the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StorageLibrary.Folders</pc></pc> property, and will no longer included in the built-in Photos app.</source>
          <target xml:space="preserve">What this means is that the folder remains in its original location on disk, is removed from the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StorageLibrary.Folders</pc></pc> property, and will no longer included in the built-in Photos app.</target>
        </segment>
      </unit>
      <unit id="144">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br242878)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The following example assumes that the user has selected the folder to remove from a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ListView</pc></pc> control named <pc dataRefEnd="id6" dataRefStart="id5" id="p3">lvPictureFolders</pc>.</source>
          <target xml:space="preserve">The following example assumes that the user has selected the folder to remove from a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ListView</pc></pc> control named <pc dataRefEnd="id6" dataRefStart="id5" id="p3">lvPictureFolders</pc>.</target>
        </segment>
      </unit>
      <unit id="145">
        <segment state="initial">
          <source xml:space="preserve">Get notified of changes to the list of folders in a library</source>
          <target xml:space="preserve">Get notified of changes to the list of folders in a library</target>
        </segment>
      </unit>
      <unit id="146">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn251723)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To get notified about changes to the list of folders in a library, register a handler for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StorageLibrary.DefinitionChanged</pc></pc> event of the library.</source>
          <target xml:space="preserve">To get notified about changes to the list of folders in a library, register a handler for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StorageLibrary.DefinitionChanged</pc></pc> event of the library.</target>
        </segment>
      </unit>
      <unit id="147">
        <segment state="initial">
          <source xml:space="preserve">Media library folders</source>
          <target xml:space="preserve">Media library folders</target>
        </segment>
      </unit>
      <unit id="148">
        <segment state="initial">
          <source xml:space="preserve">A device provides five predefined locations for users and apps to store media files.</source>
          <target xml:space="preserve">A device provides five predefined locations for users and apps to store media files.</target>
        </segment>
      </unit>
      <unit id="149">
        <segment state="initial">
          <source xml:space="preserve">Built-in apps store both user-created media and downloaded media in these locations.</source>
          <target xml:space="preserve">Built-in apps store both user-created media and downloaded media in these locations.</target>
        </segment>
      </unit>
      <unit id="150">
        <segment state="initial">
          <source xml:space="preserve">The locations are:</source>
          <target xml:space="preserve">The locations are:</target>
        </segment>
      </unit>
      <unit id="151">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Pictures</pc> folder.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Pictures</pc> folder.</target>
        </segment>
      </unit>
      <unit id="152">
        <segment state="initial">
          <source xml:space="preserve">Contains pictures.</source>
          <target xml:space="preserve">Contains pictures.</target>
        </segment>
      </unit>
      <unit id="153">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Camera Roll</pc> folder.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Camera Roll</pc> folder.</target>
        </segment>
      </unit>
      <unit id="154">
        <segment state="initial">
          <source xml:space="preserve">Contains photos and video from the built-in camera.</source>
          <target xml:space="preserve">Contains photos and video from the built-in camera.</target>
        </segment>
      </unit>
      <unit id="155">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Saved Pictures</pc> folder.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Saved Pictures</pc> folder.</target>
        </segment>
      </unit>
      <unit id="156">
        <segment state="initial">
          <source xml:space="preserve">Contains pictures that the user has saved from other apps.</source>
          <target xml:space="preserve">Contains pictures that the user has saved from other apps.</target>
        </segment>
      </unit>
      <unit id="157">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Music</pc> folder.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Music</pc> folder.</target>
        </segment>
      </unit>
      <unit id="158">
        <segment state="initial">
          <source xml:space="preserve">Contains songs, podcasts, and audio books.</source>
          <target xml:space="preserve">Contains songs, podcasts, and audio books.</target>
        </segment>
      </unit>
      <unit id="159">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Video</pc> folder.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Video</pc> folder.</target>
        </segment>
      </unit>
      <unit id="160">
        <segment state="initial">
          <source xml:space="preserve">Contains videos.</source>
          <target xml:space="preserve">Contains videos.</target>
        </segment>
      </unit>
      <unit id="161">
        <segment state="initial">
          <source xml:space="preserve">Users or apps may also store media files outside the media library folders on the SD card.</source>
          <target xml:space="preserve">Users or apps may also store media files outside the media library folders on the SD card.</target>
        </segment>
      </unit>
      <unit id="162">
        <segment state="initial">
          <source xml:space="preserve">To find a media file reliably on the SD card, scan the contents of the SD card, or ask the user to locate the file by using a file picker.</source>
          <target xml:space="preserve">To find a media file reliably on the SD card, scan the contents of the SD card, or ask the user to locate the file by using a file picker.</target>
        </segment>
      </unit>
      <unit id="163">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](access-the-sd-card.md)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Access the SD card</pc>.</source>
          <target xml:space="preserve">For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Access the SD card</pc>.</target>
        </segment>
      </unit>
      <unit id="164">
        <segment state="initial">
          <source xml:space="preserve">Querying the media libraries</source>
          <target xml:space="preserve">Querying the media libraries</target>
        </segment>
      </unit>
      <unit id="165">
        <segment state="initial">
          <source xml:space="preserve">Query results include both internal and removable storage</source>
          <target xml:space="preserve">Query results include both internal and removable storage</target>
        </segment>
      </unit>
      <unit id="166">
        <segment state="initial">
          <source xml:space="preserve">Users can choose to store files by default on the optional SD card.</source>
          <target xml:space="preserve">Users can choose to store files by default on the optional SD card.</target>
        </segment>
      </unit>
      <unit id="167">
        <segment state="initial">
          <source xml:space="preserve">Apps, however, can opt out of allowing files to be stored on the SD card.</source>
          <target xml:space="preserve">Apps, however, can opt out of allowing files to be stored on the SD card.</target>
        </segment>
      </unit>
      <unit id="168">
        <segment state="initial">
          <source xml:space="preserve">As a result, the media libraries can be split across the device's internal storage and the SD card.</source>
          <target xml:space="preserve">As a result, the media libraries can be split across the device's internal storage and the SD card.</target>
        </segment>
      </unit>
      <unit id="169">
        <segment state="initial">
          <source xml:space="preserve">You don't have to write additional code to handle this possibility.</source>
          <target xml:space="preserve">You don't have to write additional code to handle this possibility.</target>
        </segment>
      </unit>
      <unit id="170">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227346)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The methods in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Storage</pc></pc> namespace that query known folders transparently combine the query results from both locations.</source>
          <target xml:space="preserve">The methods in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Storage</pc></pc> namespace that query known folders transparently combine the query results from both locations.</target>
        </segment>
      </unit>
      <unit id="171">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">You don't have to specify the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">removableStorage</pc> capability in the app manifest file to get these combined results, either.</source>
          <target xml:space="preserve">You don't have to specify the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">removableStorage</pc> capability in the app manifest file to get these combined results, either.</target>
        </segment>
      </unit>
      <unit id="172">
        <segment state="initial">
          <source xml:space="preserve">Consider the state of the device's storage shown in the following image:</source>
          <target xml:space="preserve">Consider the state of the device's storage shown in the following image:</target>
        </segment>
      </unit>
      <unit id="173">
        <segment state="initial">
          <source xml:space="preserve">images on the phone and sd card</source>
          <target xml:space="preserve">images on the phone and sd card</target>
        </segment>
      </unit>
      <unit id="174">
        <originalData>
          <data id="id1">`await KnownFolders.PicturesLibrary.GetFilesAsync()`</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">If you query the contents of the Pictures Library by calling <ph dataRef="id1" id="ph1" />, the results include both internalPic.jpg and SDPic.jpg.</source>
          <target xml:space="preserve">If you query the contents of the Pictures Library by calling <ph dataRef="id1" id="ph1" />, the results include both internalPic.jpg and SDPic.jpg.</target>
        </segment>
      </unit>
      <unit id="175">
        <segment state="initial">
          <source xml:space="preserve">Deep queries</source>
          <target xml:space="preserve">Deep queries</target>
        </segment>
      </unit>
      <unit id="176">
        <segment state="initial">
          <source xml:space="preserve">Use the deep queries to enumerate the entire contents of a media library quickly.</source>
          <target xml:space="preserve">Use the deep queries to enumerate the entire contents of a media library quickly.</target>
        </segment>
      </unit>
      <unit id="177">
        <segment state="initial">
          <source xml:space="preserve">The deep queries return only files of the specified media type.</source>
          <target xml:space="preserve">The deep queries return only files of the specified media type.</target>
        </segment>
      </unit>
      <unit id="178">
        <segment state="initial">
          <source xml:space="preserve">For example, if you query the Music Library with a deep query, the query results do not include any picture files found in the Music folder.</source>
          <target xml:space="preserve">For example, if you query the Music Library with a deep query, the query results do not include any picture files found in the Music folder.</target>
        </segment>
      </unit>
      <unit id="179">
        <segment state="initial">
          <source xml:space="preserve">On devices where the camera saves both a low-resolution image and a high-resolution image of every picture, the deep queries return only the low-resolution image.</source>
          <target xml:space="preserve">On devices where the camera saves both a low-resolution image and a high-resolution image of every picture, the deep queries return only the low-resolution image.</target>
        </segment>
      </unit>
      <unit id="180">
        <segment state="initial">
          <source xml:space="preserve">The Camera Roll and the Saved Pictures folder do not support the deep queries.</source>
          <target xml:space="preserve">The Camera Roll and the Saved Pictures folder do not support the deep queries.</target>
        </segment>
      </unit>
      <unit id="181">
        <segment state="initial">
          <source xml:space="preserve">The following deep queries are available:</source>
          <target xml:space="preserve">The following deep queries are available:</target>
        </segment>
      </unit>
      <unit id="182">
        <segment state="initial">
          <source xml:space="preserve">Pictures library</source>
          <target xml:space="preserve">Pictures library</target>
        </segment>
      </unit>
      <unit id="183">
        <segment state="initial">
          <source xml:space="preserve">Music library</source>
          <target xml:space="preserve">Music library</target>
        </segment>
      </unit>
      <unit id="184">
        <segment state="initial">
          <source xml:space="preserve">Video library</source>
          <target xml:space="preserve">Video library</target>
        </segment>
      </unit>
      <unit id="185">
        <segment state="initial">
          <source xml:space="preserve">Flat queries</source>
          <target xml:space="preserve">Flat queries</target>
        </segment>
      </unit>
      <unit id="186">
        <originalData>
          <data id="id1">`GetFilesAsync(CommonFileQuery.DefaultQuery)`</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To get a complete listing of all the files and folders in a library, call <ph dataRef="id1" id="ph1" />.</source>
          <target xml:space="preserve">To get a complete listing of all the files and folders in a library, call <ph dataRef="id1" id="ph1" />.</target>
        </segment>
      </unit>
      <unit id="187">
        <segment state="initial">
          <source xml:space="preserve">This method returns all files in the library, regardless of their type.</source>
          <target xml:space="preserve">This method returns all files in the library, regardless of their type.</target>
        </segment>
      </unit>
      <unit id="188">
        <segment state="initial">
          <source xml:space="preserve">This is a shallow query, so you have to enumerate the contents of subfolders recursively if the user has created subfolders in the library.</source>
          <target xml:space="preserve">This is a shallow query, so you have to enumerate the contents of subfolders recursively if the user has created subfolders in the library.</target>
        </segment>
      </unit>
      <unit id="189">
        <segment state="initial">
          <source xml:space="preserve">Use flat queries to return media files of types that are not recognized by the built-in queries, or to return all the files in a library, including files that are not of the specified type.</source>
          <target xml:space="preserve">Use flat queries to return media files of types that are not recognized by the built-in queries, or to return all the files in a library, including files that are not of the specified type.</target>
        </segment>
      </unit>
      <unit id="190">
        <segment state="initial">
          <source xml:space="preserve">For example, if you query the Music Library with a flat query, the query results include any picture files found by the query in the Music folder.</source>
          <target xml:space="preserve">For example, if you query the Music Library with a flat query, the query results include any picture files found by the query in the Music folder.</target>
        </segment>
      </unit>
      <unit id="191">
        <segment state="initial">
          <source xml:space="preserve">Sample queries</source>
          <target xml:space="preserve">Sample queries</target>
        </segment>
      </unit>
      <unit id="192">
        <segment state="initial">
          <source xml:space="preserve">Assume that the device and its optional SD card contain the folders and files shown in the following image:</source>
          <target xml:space="preserve">Assume that the device and its optional SD card contain the folders and files shown in the following image:</target>
        </segment>
      </unit>
      <unit id="193">
        <segment state="initial">
          <source xml:space="preserve">files on</source>
          <target xml:space="preserve">files on</target>
        </segment>
      </unit>
      <unit id="194">
        <segment state="initial">
          <source xml:space="preserve">Here are a few examples of queries and the results that they return.</source>
          <target xml:space="preserve">Here are a few examples of queries and the results that they return.</target>
        </segment>
      </unit>
      <unit id="195">
        <segment state="initial">
          <source xml:space="preserve">Query</source>
          <target xml:space="preserve">Query</target>
        </segment>
      </unit>
      <unit id="196">
        <segment state="initial">
          <source xml:space="preserve">Results</source>
          <target xml:space="preserve">Results</target>
        </segment>
      </unit>
      <unit id="197">
        <segment state="initial">
          <source xml:space="preserve">KnownFolders.PicturesLibrary.GetItemsAsync();</source>
          <target xml:space="preserve">KnownFolders.PicturesLibrary.GetItemsAsync();</target>
        </segment>
      </unit>
      <unit id="198">
        <segment state="initial">
          <source xml:space="preserve">- Camera Roll folder from internal storage</source>
          <target xml:space="preserve">- Camera Roll folder from internal storage</target>
        </segment>
      </unit>
      <unit id="199">
        <segment state="initial">
          <source xml:space="preserve">- Camera Roll folder from the SD card</source>
          <target xml:space="preserve">- Camera Roll folder from the SD card</target>
        </segment>
      </unit>
      <unit id="200">
        <segment state="initial">
          <source xml:space="preserve">- Saved Pictures folder from internal storage</source>
          <target xml:space="preserve">- Saved Pictures folder from internal storage</target>
        </segment>
      </unit>
      <unit id="201">
        <segment state="initial">
          <source xml:space="preserve">- Saved Pictures folder from the SD card</source>
          <target xml:space="preserve">- Saved Pictures folder from the SD card</target>
        </segment>
      </unit>
      <unit id="202">
        <segment state="initial">
          <source xml:space="preserve">This is a flat query, so only immediate children of the Pictures folder   are returned.</source>
          <target xml:space="preserve">This is a flat query, so only immediate children of the Pictures folder   are returned.</target>
        </segment>
      </unit>
      <unit id="203">
        <segment state="initial">
          <source xml:space="preserve">KnownFolders.PicturesLibrary.GetFilesAsync();</source>
          <target xml:space="preserve">KnownFolders.PicturesLibrary.GetFilesAsync();</target>
        </segment>
      </unit>
      <unit id="204">
        <segment state="initial">
          <source xml:space="preserve">No results.</source>
          <target xml:space="preserve">No results.</target>
        </segment>
      </unit>
      <unit id="205">
        <segment state="initial">
          <source xml:space="preserve">This is flat query, and the Pictures folder does not contain any files as its immediate children.</source>
          <target xml:space="preserve">This is flat query, and the Pictures folder does not contain any files as its immediate children.</target>
        </segment>
      </unit>
      <unit id="206">
        <segment state="initial">
          <source xml:space="preserve">KnownFolders.PicturesLibrary.GetFilesAsync(CommonFileQuery.OrderByDate);</source>
          <target xml:space="preserve">KnownFolders.PicturesLibrary.GetFilesAsync(CommonFileQuery.OrderByDate);</target>
        </segment>
      </unit>
      <unit id="207">
        <segment state="initial">
          <source xml:space="preserve">- 4-3-2012.jpg file from the SD card</source>
          <target xml:space="preserve">- 4-3-2012.jpg file from the SD card</target>
        </segment>
      </unit>
      <unit id="208">
        <segment state="initial">
          <source xml:space="preserve">- 1-1-2014.jpg file from internal storage</source>
          <target xml:space="preserve">- 1-1-2014.jpg file from internal storage</target>
        </segment>
      </unit>
      <unit id="209">
        <segment state="initial">
          <source xml:space="preserve">- 1-2-2014.jpg file from internal storage</source>
          <target xml:space="preserve">- 1-2-2014.jpg file from internal storage</target>
        </segment>
      </unit>
      <unit id="210">
        <segment state="initial">
          <source xml:space="preserve">- 1-6-2014.jpg file from the SD card</source>
          <target xml:space="preserve">- 1-6-2014.jpg file from the SD card</target>
        </segment>
      </unit>
      <unit id="211">
        <segment state="initial">
          <source xml:space="preserve">This is a deep query, so the contents of the Pictures folder and of its   child folders are returned.</source>
          <target xml:space="preserve">This is a deep query, so the contents of the Pictures folder and of its   child folders are returned.</target>
        </segment>
      </unit>
      <unit id="212">
        <segment state="initial">
          <source xml:space="preserve">KnownFolders.CameraRoll.GetFilesAsync();</source>
          <target xml:space="preserve">KnownFolders.CameraRoll.GetFilesAsync();</target>
        </segment>
      </unit>
      <unit id="213">
        <segment state="initial">
          <source xml:space="preserve">- 1-1-2014.jpg file from internal storage</source>
          <target xml:space="preserve">- 1-1-2014.jpg file from internal storage</target>
        </segment>
      </unit>
      <unit id="214">
        <segment state="initial">
          <source xml:space="preserve">- 4-3-2012.jpg file from the SD card</source>
          <target xml:space="preserve">- 4-3-2012.jpg file from the SD card</target>
        </segment>
      </unit>
      <unit id="215">
        <segment state="initial">
          <source xml:space="preserve">This is a flat query.</source>
          <target xml:space="preserve">This is a flat query.</target>
        </segment>
      </unit>
      <unit id="216">
        <segment state="initial">
          <source xml:space="preserve">The ordering of the results is not guaranteed.</source>
          <target xml:space="preserve">The ordering of the results is not guaranteed.</target>
        </segment>
      </unit>
      <unit id="217">
        <segment state="initial">
          <source xml:space="preserve">Media library capabilities and file types</source>
          <target xml:space="preserve">Media library capabilities and file types</target>
        </segment>
      </unit>
      <unit id="218">
        <segment state="initial">
          <source xml:space="preserve">Here are the capabilities that you can specify in the app manifest file to access media files in your app.</source>
          <target xml:space="preserve">Here are the capabilities that you can specify in the app manifest file to access media files in your app.</target>
        </segment>
      </unit>
      <unit id="219">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Music</pc>.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Music</pc>.</target>
        </segment>
      </unit>
      <unit id="220">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Specify the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Music Library</pc> capability in the app manifest file to let your app see and access files of the following file types:</source>
          <target xml:space="preserve">Specify the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Music Library</pc> capability in the app manifest file to let your app see and access files of the following file types:</target>
        </segment>
      </unit>
      <unit id="221">
        <segment state="initial">
          <source xml:space="preserve">.qcp</source>
          <target xml:space="preserve">.qcp</target>
        </segment>
      </unit>
      <unit id="222">
        <segment state="initial">
          <source xml:space="preserve">.wav</source>
          <target xml:space="preserve">.wav</target>
        </segment>
      </unit>
      <unit id="223">
        <segment state="initial">
          <source xml:space="preserve">.mp3</source>
          <target xml:space="preserve">.mp3</target>
        </segment>
      </unit>
      <unit id="224">
        <segment state="initial">
          <source xml:space="preserve">.m4r</source>
          <target xml:space="preserve">.m4r</target>
        </segment>
      </unit>
      <unit id="225">
        <segment state="initial">
          <source xml:space="preserve">.m4a</source>
          <target xml:space="preserve">.m4a</target>
        </segment>
      </unit>
      <unit id="226">
        <segment state="initial">
          <source xml:space="preserve">.aac</source>
          <target xml:space="preserve">.aac</target>
        </segment>
      </unit>
      <unit id="227">
        <segment state="initial">
          <source xml:space="preserve">.amr</source>
          <target xml:space="preserve">.amr</target>
        </segment>
      </unit>
      <unit id="228">
        <segment state="initial">
          <source xml:space="preserve">.wma</source>
          <target xml:space="preserve">.wma</target>
        </segment>
      </unit>
      <unit id="229">
        <segment state="initial">
          <source xml:space="preserve">.3g2</source>
          <target xml:space="preserve">.3g2</target>
        </segment>
      </unit>
      <unit id="230">
        <segment state="initial">
          <source xml:space="preserve">.3gp</source>
          <target xml:space="preserve">.3gp</target>
        </segment>
      </unit>
      <unit id="231">
        <segment state="initial">
          <source xml:space="preserve">.mp4</source>
          <target xml:space="preserve">.mp4</target>
        </segment>
      </unit>
      <unit id="232">
        <segment state="initial">
          <source xml:space="preserve">.wm</source>
          <target xml:space="preserve">.wm</target>
        </segment>
      </unit>
      <unit id="233">
        <segment state="initial">
          <source xml:space="preserve">.asf</source>
          <target xml:space="preserve">.asf</target>
        </segment>
      </unit>
      <unit id="234">
        <segment state="initial">
          <source xml:space="preserve">.3gpp</source>
          <target xml:space="preserve">.3gpp</target>
        </segment>
      </unit>
      <unit id="235">
        <segment state="initial">
          <source xml:space="preserve">.3gp2</source>
          <target xml:space="preserve">.3gp2</target>
        </segment>
      </unit>
      <unit id="236">
        <segment state="initial">
          <source xml:space="preserve">.mpa</source>
          <target xml:space="preserve">.mpa</target>
        </segment>
      </unit>
      <unit id="237">
        <segment state="initial">
          <source xml:space="preserve">.adt</source>
          <target xml:space="preserve">.adt</target>
        </segment>
      </unit>
      <unit id="238">
        <segment state="initial">
          <source xml:space="preserve">.adts</source>
          <target xml:space="preserve">.adts</target>
        </segment>
      </unit>
      <unit id="239">
        <segment state="initial">
          <source xml:space="preserve">.pya</source>
          <target xml:space="preserve">.pya</target>
        </segment>
      </unit>
      <unit id="240">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Photos</pc>.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Photos</pc>.</target>
        </segment>
      </unit>
      <unit id="241">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Specify the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Pictures Library</pc> capability in the app manifest file to let your app see and access files of the following file types:</source>
          <target xml:space="preserve">Specify the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Pictures Library</pc> capability in the app manifest file to let your app see and access files of the following file types:</target>
        </segment>
      </unit>
      <unit id="242">
        <segment state="initial">
          <source xml:space="preserve">.jpeg</source>
          <target xml:space="preserve">.jpeg</target>
        </segment>
      </unit>
      <unit id="243">
        <segment state="initial">
          <source xml:space="preserve">.jpe</source>
          <target xml:space="preserve">.jpe</target>
        </segment>
      </unit>
      <unit id="244">
        <segment state="initial">
          <source xml:space="preserve">.jpg</source>
          <target xml:space="preserve">.jpg</target>
        </segment>
      </unit>
      <unit id="245">
        <segment state="initial">
          <source xml:space="preserve">.gif</source>
          <target xml:space="preserve">.gif</target>
        </segment>
      </unit>
      <unit id="246">
        <segment state="initial">
          <source xml:space="preserve">.tiff</source>
          <target xml:space="preserve">.tiff</target>
        </segment>
      </unit>
      <unit id="247">
        <segment state="initial">
          <source xml:space="preserve">.tif</source>
          <target xml:space="preserve">.tif</target>
        </segment>
      </unit>
      <unit id="248">
        <segment state="initial">
          <source xml:space="preserve">.png</source>
          <target xml:space="preserve">.png</target>
        </segment>
      </unit>
      <unit id="249">
        <segment state="initial">
          <source xml:space="preserve">.bmp</source>
          <target xml:space="preserve">.bmp</target>
        </segment>
      </unit>
      <unit id="250">
        <segment state="initial">
          <source xml:space="preserve">.wdp</source>
          <target xml:space="preserve">.wdp</target>
        </segment>
      </unit>
      <unit id="251">
        <segment state="initial">
          <source xml:space="preserve">.jxr</source>
          <target xml:space="preserve">.jxr</target>
        </segment>
      </unit>
      <unit id="252">
        <segment state="initial">
          <source xml:space="preserve">.hdp</source>
          <target xml:space="preserve">.hdp</target>
        </segment>
      </unit>
      <unit id="253">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Videos</pc>.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Videos</pc>.</target>
        </segment>
      </unit>
      <unit id="254">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Specify the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Video Library</pc> capability in the app manifest file to let your app see and access files of the following file types:</source>
          <target xml:space="preserve">Specify the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Video Library</pc> capability in the app manifest file to let your app see and access files of the following file types:</target>
        </segment>
      </unit>
      <unit id="255">
        <segment state="initial">
          <source xml:space="preserve">.wm</source>
          <target xml:space="preserve">.wm</target>
        </segment>
      </unit>
      <unit id="256">
        <segment state="initial">
          <source xml:space="preserve">.m4v</source>
          <target xml:space="preserve">.m4v</target>
        </segment>
      </unit>
      <unit id="257">
        <segment state="initial">
          <source xml:space="preserve">.wmv</source>
          <target xml:space="preserve">.wmv</target>
        </segment>
      </unit>
      <unit id="258">
        <segment state="initial">
          <source xml:space="preserve">.asf</source>
          <target xml:space="preserve">.asf</target>
        </segment>
      </unit>
      <unit id="259">
        <segment state="initial">
          <source xml:space="preserve">.mov</source>
          <target xml:space="preserve">.mov</target>
        </segment>
      </unit>
      <unit id="260">
        <segment state="initial">
          <source xml:space="preserve">.mp4</source>
          <target xml:space="preserve">.mp4</target>
        </segment>
      </unit>
      <unit id="261">
        <segment state="initial">
          <source xml:space="preserve">.3g2</source>
          <target xml:space="preserve">.3g2</target>
        </segment>
      </unit>
      <unit id="262">
        <segment state="initial">
          <source xml:space="preserve">.3gp</source>
          <target xml:space="preserve">.3gp</target>
        </segment>
      </unit>
      <unit id="263">
        <segment state="initial">
          <source xml:space="preserve">.mp4v</source>
          <target xml:space="preserve">.mp4v</target>
        </segment>
      </unit>
      <unit id="264">
        <segment state="initial">
          <source xml:space="preserve">.avi</source>
          <target xml:space="preserve">.avi</target>
        </segment>
      </unit>
      <unit id="265">
        <segment state="initial">
          <source xml:space="preserve">.pyv</source>
          <target xml:space="preserve">.pyv</target>
        </segment>
      </unit>
      <unit id="266">
        <segment state="initial">
          <source xml:space="preserve">.3gpp</source>
          <target xml:space="preserve">.3gpp</target>
        </segment>
      </unit>
      <unit id="267">
        <segment state="initial">
          <source xml:space="preserve">.3gp2</source>
          <target xml:space="preserve">.3gp2</target>
        </segment>
      </unit>
      <unit id="268">
        <segment state="initial">
          <source xml:space="preserve">Working with photos</source>
          <target xml:space="preserve">Working with photos</target>
        </segment>
      </unit>
      <unit id="269">
        <segment state="initial">
          <source xml:space="preserve">On devices where the camera saves both a low-resolution image and a high-resolution image of every picture, the deep queries return only the low-resolution image.</source>
          <target xml:space="preserve">On devices where the camera saves both a low-resolution image and a high-resolution image of every picture, the deep queries return only the low-resolution image.</target>
        </segment>
      </unit>
      <unit id="270">
        <segment state="initial">
          <source xml:space="preserve">The Camera Roll and the Saved Pictures folder do not support the deep queries.</source>
          <target xml:space="preserve">The Camera Roll and the Saved Pictures folder do not support the deep queries.</target>
        </segment>
      </unit>
      <unit id="271">
        <segment state="initial">
          <source xml:space="preserve">Opening a photo in the app that captured it</source>
          <target xml:space="preserve">Opening a photo in the app that captured it</target>
        </segment>
      </unit>
      <unit id="272">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">If you want to let the user open a photo again later in the app that captured it, you can save the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">CreatorAppId</pc> with the photo's metadata by using code similar to the following example.</source>
          <target xml:space="preserve">If you want to let the user open a photo again later in the app that captured it, you can save the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">CreatorAppId</pc> with the photo's metadata by using code similar to the following example.</target>
        </segment>
      </unit>
      <unit id="273">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/br227171)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">In this example, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">testPhoto</pc> is a <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">StorageFile</pc></pc>.</source>
          <target xml:space="preserve">In this example, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">testPhoto</pc> is a <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">StorageFile</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="274">
        <segment state="initial">
          <source xml:space="preserve">Using stream methods to add a file to a media library</source>
          <target xml:space="preserve">Using stream methods to add a file to a media library</target>
        </segment>
      </unit>
      <unit id="275">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">When you access a media library by using a known folder such as <pc dataRefEnd="id2" dataRefStart="id1" id="p1">KnownFolders.PictureLibrary</pc>, and you use stream methods to add a file to the media library, you have to make sure to close all the streams that your code opens.</source>
          <target xml:space="preserve">When you access a media library by using a known folder such as <pc dataRefEnd="id2" dataRefStart="id1" id="p1">KnownFolders.PictureLibrary</pc>, and you use stream methods to add a file to the media library, you have to make sure to close all the streams that your code opens.</target>
        </segment>
      </unit>
      <unit id="276">
        <segment state="initial">
          <source xml:space="preserve">Otherwise these methods fail to add the file to the media library as expected because at least one stream still has a handle to the file.</source>
          <target xml:space="preserve">Otherwise these methods fail to add the file to the media library as expected because at least one stream still has a handle to the file.</target>
        </segment>
      </unit>
      <unit id="277">
        <segment state="initial">
          <source xml:space="preserve">For example, when you run the following code, the file is not added to the media library.</source>
          <target xml:space="preserve">For example, when you run the following code, the file is not added to the media library.</target>
        </segment>
      </unit>
      <unit id="278">
        <originalData>
          <data id="id1">`using (var destinationStream = (await destinationFile.OpenAsync(FileAccessMode.ReadWrite)).GetOutputStreamAt(0))`</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">In the line of code, <ph dataRef="id1" id="ph1" />, both the <pc dataRefEnd="id3" dataRefStart="id2" id="p1">OpenAsync</pc> method and the <pc dataRefEnd="id5" dataRefStart="id4" id="p2">GetOutputStreamAt</pc> method open a stream.</source>
          <target xml:space="preserve">In the line of code, <ph dataRef="id1" id="ph1" />, both the <pc dataRefEnd="id3" dataRefStart="id2" id="p1">OpenAsync</pc> method and the <pc dataRefEnd="id5" dataRefStart="id4" id="p2">GetOutputStreamAt</pc> method open a stream.</target>
        </segment>
      </unit>
      <unit id="279">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">However only the stream opened by the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">GetOutputStreamAt</pc> method is disposed as a result of the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">using</pc> statement.</source>
          <target xml:space="preserve">However only the stream opened by the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">GetOutputStreamAt</pc> method is disposed as a result of the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">using</pc> statement.</target>
        </segment>
      </unit>
      <unit id="280">
        <segment state="initial">
          <source xml:space="preserve">The other stream remains open and prevents saving the file.</source>
          <target xml:space="preserve">The other stream remains open and prevents saving the file.</target>
        </segment>
      </unit>
      <unit id="281">
        <segment state="initial">
          <source xml:space="preserve">To use stream methods successfully to add a file to the media library, make sure to close all the streams that your code opens, as shown in the following example.</source>
          <target xml:space="preserve">To use stream methods successfully to add a file to the media library, make sure to close all the streams that your code opens, as shown in the following example.</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>