<?xml version="1.0" encoding="utf-8"?>
<xliff srcLang="en-US" trgLang="zh-cn" version="2.0" xmlns="urn:oasis:names:tc:xliff:document:2.0" xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">73d1597e8aa7679ecfea44b667b604ae402d516e</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source xml:space="preserve">ms.assetid: 27914C0A-2A02-473F-BDD5-C931E3943AA0</source>
          <target xml:space="preserve">ms.assetid: 27914C0A-2A02-473F-BDD5-C931E3943AA0</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source xml:space="preserve">title: Create, write, and read a file</source>
          <target xml:space="preserve">title: Create, write, and read a file</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source xml:space="preserve">description: Read and write a file using a StorageFile object.</source>
          <target xml:space="preserve">description: Read and write a file using a StorageFile object.</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source xml:space="preserve">Create, write, and read a file</source>
          <target xml:space="preserve">Create, write, and read a file</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source xml:space="preserve">\[ Updated for UWP apps on Windows 10.</source>
          <target xml:space="preserve">\[ Updated for UWP apps on Windows 10.</target>
        </segment>
      </unit>
      <unit id="106">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
          <target xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source xml:space="preserve">Important APIs</source>
          <target xml:space="preserve">Important APIs</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source xml:space="preserve">StorageFolder class</source>
          <target xml:space="preserve">StorageFolder class</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source xml:space="preserve">StorageFile class</source>
          <target xml:space="preserve">StorageFile class</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source xml:space="preserve">FileIO class</source>
          <target xml:space="preserve">FileIO class</target>
        </segment>
      </unit>
      <unit id="111">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227171)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Read and write a file using a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StorageFile</pc></pc> object.</source>
          <target xml:space="preserve">Read and write a file using a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StorageFile</pc></pc> object.</target>
        </segment>
      </unit>
      <unit id="112">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](http://go.microsoft.com/fwlink/p/?linkid=619995)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  Also see the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">File access sample</pc>.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  Also see the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">File access sample</pc>.</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source xml:space="preserve">Prerequisites</source>
          <target xml:space="preserve">Prerequisites</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source xml:space="preserve">Understand async programming for Universal Windows Platform (UWP) apps</source>
          <target xml:space="preserve">Understand async programming for Universal Windows Platform (UWP) apps</target>
        </segment>
      </unit>
      <unit id="115">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/mt187337)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">You can learn how to write asynchronous apps in C# or Visual Basic, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Call asynchronous APIs in C# or Visual Basic</pc>.</source>
          <target xml:space="preserve">You can learn how to write asynchronous apps in C# or Visual Basic, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Call asynchronous APIs in C# or Visual Basic</pc>.</target>
        </segment>
      </unit>
      <unit id="116">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/mt187334)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To learn how to write asynchronous apps in C++, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Asynchronous programming in C++</pc>.</source>
          <target xml:space="preserve">To learn how to write asynchronous apps in C++, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Asynchronous programming in C++</pc>.</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source xml:space="preserve">Know how to get the file that you want to read from, write to, or both</source>
          <target xml:space="preserve">Know how to get the file that you want to read from, write to, or both</target>
        </segment>
      </unit>
      <unit id="118">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](quickstart-using-file-and-folder-pickers.md)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">You can learn how to get a file by using a file picker in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Open files and folders with a picker</pc>.</source>
          <target xml:space="preserve">You can learn how to get a file by using a file picker in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Open files and folders with a picker</pc>.</target>
        </segment>
      </unit>
      <unit id="119">
        <segment state="initial">
          <source xml:space="preserve">Creating a file</source>
          <target xml:space="preserve">Creating a file</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source xml:space="preserve">Here's how to create a file in the app's local folder.</source>
          <target xml:space="preserve">Here's how to create a file in the app's local folder.</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source xml:space="preserve">If it already exists, we replace it.</source>
          <target xml:space="preserve">If it already exists, we replace it.</target>
        </segment>
      </unit>
      <unit id="122">
        <segment state="initial">
          <source xml:space="preserve">[!div class="tabbedCodeSnippets"]</source>
          <target xml:space="preserve">[!div class="tabbedCodeSnippets"]</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source xml:space="preserve">Writing to a file</source>
          <target xml:space="preserve">Writing to a file</target>
        </segment>
      </unit>
      <unit id="124">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227171)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Here's how to write to a writable file on disk using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StorageFile</pc></pc> class.</source>
          <target xml:space="preserve">Here's how to write to a writable file on disk using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StorageFile</pc></pc> class.</target>
        </segment>
      </unit>
      <unit id="125">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227272)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The common first step for each of the ways of writing to a file (unless you're writing to the file immediately after creating it) is to get the file with <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StorageFolder.GetFileAsync</pc></pc>.</source>
          <target xml:space="preserve">The common first step for each of the ways of writing to a file (unless you're writing to the file immediately after creating it) is to get the file with <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StorageFolder.GetFileAsync</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source xml:space="preserve">[!div class="tabbedCodeSnippets"]</source>
          <target xml:space="preserve">[!div class="tabbedCodeSnippets"]</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source xml:space="preserve">Writing text to a file</source>
          <target xml:space="preserve">Writing text to a file</target>
        </segment>
      </unit>
      <unit id="128">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh701505)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/hh701440)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Write text to your file by calling the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">WriteTextAsync</pc></pc> method of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">FileIO</pc></pc> class.</source>
          <target xml:space="preserve">Write text to your file by calling the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">WriteTextAsync</pc></pc> method of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">FileIO</pc></pc> class.</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source xml:space="preserve">[!div class="tabbedCodeSnippets"]</source>
          <target xml:space="preserve">[!div class="tabbedCodeSnippets"]</target>
        </segment>
      </unit>
      <unit id="130">
        <segment state="initial">
          <source xml:space="preserve">Writing bytes to a file by using a buffer (2 steps)</source>
          <target xml:space="preserve">Writing bytes to a file by using a buffer (2 steps)</target>
        </segment>
      </unit>
      <unit id="131">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br241385)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">First, call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ConvertStringToBinary</pc></pc> to get a buffer of the bytes (based on an arbitrary string) that you want to write to your file.</source>
          <target xml:space="preserve">First, call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ConvertStringToBinary</pc></pc> to get a buffer of the bytes (based on an arbitrary string) that you want to write to your file.</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source xml:space="preserve">[!div class="tabbedCodeSnippets"]</source>
          <target xml:space="preserve">[!div class="tabbedCodeSnippets"]</target>
        </segment>
      </unit>
      <unit id="133">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh701490)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/hh701440)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Then write the bytes from your buffer to your file by calling the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">WriteBufferAsync</pc></pc> method of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">FileIO</pc></pc> class.</source>
          <target xml:space="preserve">Then write the bytes from your buffer to your file by calling the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">WriteBufferAsync</pc></pc> method of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">FileIO</pc></pc> class.</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source xml:space="preserve">[!div class="tabbedCodeSnippets"]</source>
          <target xml:space="preserve">[!div class="tabbedCodeSnippets"]</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source xml:space="preserve">Writing text to a file by using a stream (4 steps)</source>
          <target xml:space="preserve">Writing text to a file by using a stream (4 steps)</target>
        </segment>
      </unit>
      <unit id="136">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn889851)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">First, open the file by calling the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StorageFile.OpenAsync</pc></pc> method.</source>
          <target xml:space="preserve">First, open the file by calling the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StorageFile.OpenAsync</pc></pc> method.</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source xml:space="preserve">It returns a stream of the file's content when the open operation completes.</source>
          <target xml:space="preserve">It returns a stream of the file's content when the open operation completes.</target>
        </segment>
      </unit>
      <unit id="138">
        <segment state="initial">
          <source xml:space="preserve">[!div class="tabbedCodeSnippets"]</source>
          <target xml:space="preserve">[!div class="tabbedCodeSnippets"]</target>
        </segment>
      </unit>
      <unit id="139">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br241738)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">`stream`</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Next, get an output stream by calling the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetOutputStreamAt</pc></pc> method from the <ph dataRef="id5" id="ph1" />.</source>
          <target xml:space="preserve">Next, get an output stream by calling the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetOutputStreamAt</pc></pc> method from the <ph dataRef="id5" id="ph1" />.</target>
        </segment>
      </unit>
      <unit id="140">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Put this in a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">using</pc> statement to manage the output stream's lifetime.</source>
          <target xml:space="preserve">Put this in a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">using</pc> statement to manage the output stream's lifetime.</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source xml:space="preserve">[!div class="tabbedCodeSnippets"]</source>
          <target xml:space="preserve">[!div class="tabbedCodeSnippets"]</target>
        </segment>
      </unit>
      <unit id="142">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/br208154)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">[</data>
          <data id="id8">](https://msdn.microsoft.com/library/windows/apps/br241642)</data>
          <data id="id9">**</data>
          <data id="id10">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Now add this code within the existing <pc dataRefEnd="id2" dataRefStart="id1" id="p1">using</pc> statement to write to the output stream by creating a new <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">DataWriter</pc></pc> object and calling the <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">DataWriter.WriteString</pc></pc> method.</source>
          <target xml:space="preserve">Now add this code within the existing <pc dataRefEnd="id2" dataRefStart="id1" id="p1">using</pc> statement to write to the output stream by creating a new <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">DataWriter</pc></pc> object and calling the <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">DataWriter.WriteString</pc></pc> method.</target>
        </segment>
      </unit>
      <unit id="143">
        <segment state="initial">
          <source xml:space="preserve">[!div class="tabbedCodeSnippets"]</source>
          <target xml:space="preserve">[!div class="tabbedCodeSnippets"]</target>
        </segment>
      </unit>
      <unit id="144">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/br208171)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">[</data>
          <data id="id8">](https://msdn.microsoft.com/library/windows/apps/br241729)</data>
          <data id="id9">**</data>
          <data id="id10">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Lastly, add this code (within the inner <pc dataRefEnd="id2" dataRefStart="id1" id="p1">using</pc> statement) to save the text to your file with <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">StoreAsync</pc></pc> and close the stream with <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">FlushAsync</pc></pc>.</source>
          <target xml:space="preserve">Lastly, add this code (within the inner <pc dataRefEnd="id2" dataRefStart="id1" id="p1">using</pc> statement) to save the text to your file with <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">StoreAsync</pc></pc> and close the stream with <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">FlushAsync</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="145">
        <segment state="initial">
          <source xml:space="preserve">[!div class="tabbedCodeSnippets"]</source>
          <target xml:space="preserve">[!div class="tabbedCodeSnippets"]</target>
        </segment>
      </unit>
      <unit id="146">
        <segment state="initial">
          <source xml:space="preserve">Reading from a file</source>
          <target xml:space="preserve">Reading from a file</target>
        </segment>
      </unit>
      <unit id="147">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227171)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Here's how to read from a file on disk using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StorageFile</pc></pc> class.</source>
          <target xml:space="preserve">Here's how to read from a file on disk using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StorageFile</pc></pc> class.</target>
        </segment>
      </unit>
      <unit id="148">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227272)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The common first step for each of the ways of reading from a file is to get the file with <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StorageFolder.GetFileAsync</pc></pc>.</source>
          <target xml:space="preserve">The common first step for each of the ways of reading from a file is to get the file with <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StorageFolder.GetFileAsync</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="149">
        <segment state="initial">
          <source xml:space="preserve">[!div class="tabbedCodeSnippets"]</source>
          <target xml:space="preserve">[!div class="tabbedCodeSnippets"]</target>
        </segment>
      </unit>
      <unit id="150">
        <segment state="initial">
          <source xml:space="preserve">Reading text from a file</source>
          <target xml:space="preserve">Reading text from a file</target>
        </segment>
      </unit>
      <unit id="151">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh701482)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/hh701440)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Read text from your file by calling the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ReadTextAsync</pc></pc> method of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">FileIO</pc></pc> class.</source>
          <target xml:space="preserve">Read text from your file by calling the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ReadTextAsync</pc></pc> method of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">FileIO</pc></pc> class.</target>
        </segment>
      </unit>
      <unit id="152">
        <segment state="initial">
          <source xml:space="preserve">[!div class="tabbedCodeSnippets"]</source>
          <target xml:space="preserve">[!div class="tabbedCodeSnippets"]</target>
        </segment>
      </unit>
      <unit id="153">
        <segment state="initial">
          <source xml:space="preserve">Reading bytes from a file by using a buffer (2 steps)</source>
          <target xml:space="preserve">Reading bytes from a file by using a buffer (2 steps)</target>
        </segment>
      </unit>
      <unit id="154">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh701468)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/hh701440)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">First, read bytes from your buffer to your file by calling the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ReadBufferAsync</pc></pc> method of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">FileIO</pc></pc> class.</source>
          <target xml:space="preserve">First, read bytes from your buffer to your file by calling the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ReadBufferAsync</pc></pc> method of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">FileIO</pc></pc> class.</target>
        </segment>
      </unit>
      <unit id="155">
        <segment state="initial">
          <source xml:space="preserve">[!div class="tabbedCodeSnippets"]</source>
          <target xml:space="preserve">[!div class="tabbedCodeSnippets"]</target>
        </segment>
      </unit>
      <unit id="156">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br208119)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Then use a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DataReader</pc></pc> object to read first the length of the buffer and then its contents.</source>
          <target xml:space="preserve">Then use a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DataReader</pc></pc> object to read first the length of the buffer and then its contents.</target>
        </segment>
      </unit>
      <unit id="157">
        <segment state="initial">
          <source xml:space="preserve">[!div class="tabbedCodeSnippets"]</source>
          <target xml:space="preserve">[!div class="tabbedCodeSnippets"]</target>
        </segment>
      </unit>
      <unit id="158">
        <segment state="initial">
          <source xml:space="preserve">Reading text from a file by using a stream (4 steps)</source>
          <target xml:space="preserve">Reading text from a file by using a stream (4 steps)</target>
        </segment>
      </unit>
      <unit id="159">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn889851)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Open a stream for your file by calling the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StorageFile.OpenAsync</pc></pc> method.</source>
          <target xml:space="preserve">Open a stream for your file by calling the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StorageFile.OpenAsync</pc></pc> method.</target>
        </segment>
      </unit>
      <unit id="160">
        <segment state="initial">
          <source xml:space="preserve">It returns a stream of the file's content when the operation completes.</source>
          <target xml:space="preserve">It returns a stream of the file's content when the operation completes.</target>
        </segment>
      </unit>
      <unit id="161">
        <segment state="initial">
          <source xml:space="preserve">[!div class="tabbedCodeSnippets"]</source>
          <target xml:space="preserve">[!div class="tabbedCodeSnippets"]</target>
        </segment>
      </unit>
      <unit id="162">
        <segment state="initial">
          <source xml:space="preserve">Get the size of the stream to use later.</source>
          <target xml:space="preserve">Get the size of the stream to use later.</target>
        </segment>
      </unit>
      <unit id="163">
        <segment state="initial">
          <source xml:space="preserve">[!div class="tabbedCodeSnippets"]</source>
          <target xml:space="preserve">[!div class="tabbedCodeSnippets"]</target>
        </segment>
      </unit>
      <unit id="164">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br241737)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Get an input stream by calling the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetInputStreamAt</pc></pc> method.</source>
          <target xml:space="preserve">Get an input stream by calling the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetInputStreamAt</pc></pc> method.</target>
        </segment>
      </unit>
      <unit id="165">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Put this in a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">using</pc> statement to manage the stream's lifetime.</source>
          <target xml:space="preserve">Put this in a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">using</pc> statement to manage the stream's lifetime.</target>
        </segment>
      </unit>
      <unit id="166">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Specify 0 when you call <pc dataRefEnd="id2" dataRefStart="id1" id="p1">GetInputStreamAt</pc> to set the position to the beginning of the stream.</source>
          <target xml:space="preserve">Specify 0 when you call <pc dataRefEnd="id2" dataRefStart="id1" id="p1">GetInputStreamAt</pc> to set the position to the beginning of the stream.</target>
        </segment>
      </unit>
      <unit id="167">
        <segment state="initial">
          <source xml:space="preserve">[!div class="tabbedCodeSnippets"]</source>
          <target xml:space="preserve">[!div class="tabbedCodeSnippets"]</target>
        </segment>
      </unit>
      <unit id="168">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/br208119)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">[</data>
          <data id="id8">](https://msdn.microsoft.com/library/windows/apps/br208135)</data>
          <data id="id9">**</data>
          <data id="id10">**</data>
          <data id="id11">[</data>
          <data id="id12">](https://msdn.microsoft.com/library/windows/apps/br208147)</data>
          <data id="id13">**</data>
          <data id="id14">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Lastly, add this code within the existing <pc dataRefEnd="id2" dataRefStart="id1" id="p1">using</pc> statement to get a <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">DataReader</pc></pc> object on the stream then read the text by calling <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">DataReader.LoadAsync</pc></pc> and <pc dataRefEnd="id12" dataRefStart="id11" id="p6"><pc dataRefEnd="id14" dataRefStart="id13" id="p7">DataReader.ReadString</pc></pc>.</source>
          <target xml:space="preserve">Lastly, add this code within the existing <pc dataRefEnd="id2" dataRefStart="id1" id="p1">using</pc> statement to get a <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">DataReader</pc></pc> object on the stream then read the text by calling <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">DataReader.LoadAsync</pc></pc> and <pc dataRefEnd="id12" dataRefStart="id11" id="p6"><pc dataRefEnd="id14" dataRefStart="id13" id="p7">DataReader.ReadString</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="169">
        <segment state="initial">
          <source xml:space="preserve">[!div class="tabbedCodeSnippets"]</source>
          <target xml:space="preserve">[!div class="tabbedCodeSnippets"]</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>