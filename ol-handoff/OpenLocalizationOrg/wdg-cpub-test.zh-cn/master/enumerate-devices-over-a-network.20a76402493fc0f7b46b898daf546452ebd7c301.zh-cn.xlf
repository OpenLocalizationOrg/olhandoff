<?xml version="1.0" encoding="utf-8"?>
<xliff srcLang="en-US" trgLang="zh-cn" version="2.0" xmlns="urn:oasis:names:tc:xliff:document:2.0" xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">a71c22649f233483aa63e2e2a60277e64c2d007d</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source xml:space="preserve">Enumerate devices over a network</source>
          <target xml:space="preserve">Enumerate devices over a network</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source xml:space="preserve">\[ Updated for UWP apps on Windows 10.</source>
          <target xml:space="preserve">\[ Updated for UWP apps on Windows 10.</target>
        </segment>
      </unit>
      <unit id="103">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
          <target xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source xml:space="preserve">** Important APIs **</source>
          <target xml:space="preserve">** Important APIs **</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source xml:space="preserve">Windows.Devices.Enumeration</source>
          <target xml:space="preserve">Windows.Devices.Enumeration</target>
        </segment>
      </unit>
      <unit id="106">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR225459)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">In addition to discovering locally connected devices, you can use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Devices.Enumeration</pc></pc> APIs to enumerate devices over wireless and networked protocols.</source>
          <target xml:space="preserve">In addition to discovering locally connected devices, you can use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Devices.Enumeration</pc></pc> APIs to enumerate devices over wireless and networked protocols.</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source xml:space="preserve">Enumerating devices over networked or wireless protocols</source>
          <target xml:space="preserve">Enumerating devices over networked or wireless protocols</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source xml:space="preserve">Sometimes you need to enumerate devices that are not locally connected and can only be discovered over a wireless or networking protocols.</source>
          <target xml:space="preserve">Sometimes you need to enumerate devices that are not locally connected and can only be discovered over a wireless or networking protocols.</target>
        </segment>
      </unit>
      <unit id="109">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR225459)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
          <data id="id9">**</data>
          <data id="id10">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">In order to do so, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Devices.Enumeration</pc></pc> APIs have three different kinds of device objects: the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">AssociationEndpoint</pc> (AEP), the <pc dataRefEnd="id8" dataRefStart="id7" id="p4">AssociationEndpointContainer</pc> (AEP Container), and the <pc dataRefEnd="id10" dataRefStart="id9" id="p5">AssociationEndpointService</pc> (AEP Service).</source>
          <target xml:space="preserve">In order to do so, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Devices.Enumeration</pc></pc> APIs have three different kinds of device objects: the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">AssociationEndpoint</pc> (AEP), the <pc dataRefEnd="id8" dataRefStart="id7" id="p4">AssociationEndpointContainer</pc> (AEP Container), and the <pc dataRefEnd="id10" dataRefStart="id9" id="p5">AssociationEndpointService</pc> (AEP Service).</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source xml:space="preserve">As a group these are referred to as AEPs or AEP objects.</source>
          <target xml:space="preserve">As a group these are referred to as AEPs or AEP objects.</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source xml:space="preserve">Some device APIs provide a selector string that you can use to enumerate through the available AEP objects.</source>
          <target xml:space="preserve">Some device APIs provide a selector string that you can use to enumerate through the available AEP objects.</target>
        </segment>
      </unit>
      <unit id="112">
        <segment state="initial">
          <source xml:space="preserve">This could include both devices that are paired and are not paired with the system.</source>
          <target xml:space="preserve">This could include both devices that are paired and are not paired with the system.</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source xml:space="preserve">Some of the devices might not require pairing.</source>
          <target xml:space="preserve">Some of the devices might not require pairing.</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source xml:space="preserve">Those device APIs may attempt to pair the device if pairing it is necessary before interacting with it.</source>
          <target xml:space="preserve">Those device APIs may attempt to pair the device if pairing it is necessary before interacting with it.</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source xml:space="preserve">Wi-Fi Direct is an example of APIs that follow this pattern.</source>
          <target xml:space="preserve">Wi-Fi Direct is an example of APIs that follow this pattern.</target>
        </segment>
      </unit>
      <unit id="116">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/Mt168396)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/Dn705960)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">If those device APIs do not automatically pair the device, you can pair it using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DeviceInformationPairing</pc></pc> object available from <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">DeviceInformation.Pairing</pc></pc>.</source>
          <target xml:space="preserve">If those device APIs do not automatically pair the device, you can pair it using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DeviceInformationPairing</pc></pc> object available from <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">DeviceInformation.Pairing</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source xml:space="preserve">However, there may be cases where you want to manually discover devices on your own without using a pre-defined selector string.</source>
          <target xml:space="preserve">However, there may be cases where you want to manually discover devices on your own without using a pre-defined selector string.</target>
        </segment>
      </unit>
      <unit id="118">
        <segment state="initial">
          <source xml:space="preserve">For example, you may just need to gather information about AEP devices without interacting with them or you may want to find more AEP objects than will be discovered with the pre-defined selector string.</source>
          <target xml:space="preserve">For example, you may just need to gather information about AEP devices without interacting with them or you may want to find more AEP objects than will be discovered with the pre-defined selector string.</target>
        </segment>
      </unit>
      <unit id="119">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](build-a-device-selector.md)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">In this case, you will build your own selector string and use it following the instructions under <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Build a device selector</pc>.</source>
          <target xml:space="preserve">In this case, you will build your own selector string and use it following the instructions under <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Build a device selector</pc>.</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source xml:space="preserve">When you build your own selector, it is strongly recommended that you limit your scope of enumeration to the protocols that you are interested in.</source>
          <target xml:space="preserve">When you build your own selector, it is strongly recommended that you limit your scope of enumeration to the protocols that you are interested in.</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source xml:space="preserve">For example, you don't want to have the Wi-Fi radio search for Wi-Fi Direct devices if you are particularly interested in UPnP devices.</source>
          <target xml:space="preserve">For example, you don't want to have the Wi-Fi radio search for Wi-Fi Direct devices if you are particularly interested in UPnP devices.</target>
        </segment>
      </unit>
      <unit id="122">
        <segment state="initial">
          <source xml:space="preserve">Windows has defined an identity for each protocol that you can use to scope your enumeration.</source>
          <target xml:space="preserve">Windows has defined an identity for each protocol that you can use to scope your enumeration.</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source xml:space="preserve">The following table lists the protocol types and identifiers.</source>
          <target xml:space="preserve">The following table lists the protocol types and identifiers.</target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source xml:space="preserve">Protocol or network device type</source>
          <target xml:space="preserve">Protocol or network device type</target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source xml:space="preserve">Id</source>
          <target xml:space="preserve">Id</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source xml:space="preserve">UPnP (including DIAL and DLNA)</source>
          <target xml:space="preserve">UPnP (including DIAL and DLNA)</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source xml:space="preserve">{0e261de4-12f0-46e6-91ba-428607ccef64}</source>
          <target xml:space="preserve">{0e261de4-12f0-46e6-91ba-428607ccef64}</target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source xml:space="preserve">Web services on devices (WSD)</source>
          <target xml:space="preserve">Web services on devices (WSD)</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source xml:space="preserve">{782232aa-a2f9-4993-971b-aedc551346b0}</source>
          <target xml:space="preserve">{782232aa-a2f9-4993-971b-aedc551346b0}</target>
        </segment>
      </unit>
      <unit id="130">
        <segment state="initial">
          <source xml:space="preserve">Wi-Fi Direct</source>
          <target xml:space="preserve">Wi-Fi Direct</target>
        </segment>
      </unit>
      <unit id="131">
        <segment state="initial">
          <source xml:space="preserve">{0407d24e-53de-4c9a-9ba1-9ced54641188}</source>
          <target xml:space="preserve">{0407d24e-53de-4c9a-9ba1-9ced54641188}</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source xml:space="preserve">DNS service discovery (DNS-SD)</source>
          <target xml:space="preserve">DNS service discovery (DNS-SD)</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source xml:space="preserve">{4526e8c1-8aac-4153-9b16-55e86ada0e54}</source>
          <target xml:space="preserve">{4526e8c1-8aac-4153-9b16-55e86ada0e54}</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source xml:space="preserve">Point of service</source>
          <target xml:space="preserve">Point of service</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source xml:space="preserve">{d4bf61b3-442e-4ada-882d-fa7B70c832d9}</source>
          <target xml:space="preserve">{d4bf61b3-442e-4ada-882d-fa7B70c832d9}</target>
        </segment>
      </unit>
      <unit id="136">
        <segment state="initial">
          <source xml:space="preserve">Network printers (active directory printers)</source>
          <target xml:space="preserve">Network printers (active directory printers)</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source xml:space="preserve">{37aba761-2124-454c-8d82-c42962c2de2b}</source>
          <target xml:space="preserve">{37aba761-2124-454c-8d82-c42962c2de2b}</target>
        </segment>
      </unit>
      <unit id="138">
        <segment state="initial">
          <source xml:space="preserve">Windows connect now (WNC)</source>
          <target xml:space="preserve">Windows connect now (WNC)</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source xml:space="preserve">{4c1b1ef8-2f62-4b9f-9bc5-b21ab636138f}</source>
          <target xml:space="preserve">{4c1b1ef8-2f62-4b9f-9bc5-b21ab636138f}</target>
        </segment>
      </unit>
      <unit id="140">
        <segment state="initial">
          <source xml:space="preserve">WiGig docks</source>
          <target xml:space="preserve">WiGig docks</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source xml:space="preserve">{a277f3a5-8764-4f88-8045-4c5e962640b1}</source>
          <target xml:space="preserve">{a277f3a5-8764-4f88-8045-4c5e962640b1}</target>
        </segment>
      </unit>
      <unit id="142">
        <segment state="initial">
          <source xml:space="preserve">Wi-Fi provisioning for HP printers</source>
          <target xml:space="preserve">Wi-Fi provisioning for HP printers</target>
        </segment>
      </unit>
      <unit id="143">
        <segment state="initial">
          <source xml:space="preserve">{c85ef710-f344-4792-bb6d-85a4346f1e69}</source>
          <target xml:space="preserve">{c85ef710-f344-4792-bb6d-85a4346f1e69}</target>
        </segment>
      </unit>
      <unit id="144">
        <segment state="initial">
          <source xml:space="preserve">Bluetooth</source>
          <target xml:space="preserve">Bluetooth</target>
        </segment>
      </unit>
      <unit id="145">
        <segment state="initial">
          <source xml:space="preserve">Not currently provided</source>
          <target xml:space="preserve">Not currently provided</target>
        </segment>
      </unit>
      <unit id="146">
        <segment state="initial">
          <source xml:space="preserve">Bluetooth LE</source>
          <target xml:space="preserve">Bluetooth LE</target>
        </segment>
      </unit>
      <unit id="147">
        <segment state="initial">
          <source xml:space="preserve">Not currently provided</source>
          <target xml:space="preserve">Not currently provided</target>
        </segment>
      </unit>
      <unit id="148">
        <segment state="initial">
          <source xml:space="preserve">AQS examples</source>
          <target xml:space="preserve">AQS examples</target>
        </segment>
      </unit>
      <unit id="149">
        <segment state="initial">
          <source xml:space="preserve">Each AEP kind has a property you can use to constrain your enumeration to a specific protocol.</source>
          <target xml:space="preserve">Each AEP kind has a property you can use to constrain your enumeration to a specific protocol.</target>
        </segment>
      </unit>
      <unit id="150">
        <segment state="initial">
          <source xml:space="preserve">Keep in mind you can use the OR operator in an AQS filter to combine multiple protocols.</source>
          <target xml:space="preserve">Keep in mind you can use the OR operator in an AQS filter to combine multiple protocols.</target>
        </segment>
      </unit>
      <unit id="151">
        <segment state="initial">
          <source xml:space="preserve">Here are some examples of AQS filter strings that show how to query for AEP devices.</source>
          <target xml:space="preserve">Here are some examples of AQS filter strings that show how to query for AEP devices.</target>
        </segment>
      </unit>
      <unit id="152">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/Dn948991)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">This AQS queries for all UPnP <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AssociationEndpoint</pc> objects when the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">DeviceInformationKind</pc></pc> is set to <pc dataRefEnd="id8" dataRefStart="id7" id="p4">AsssociationEndpoint</pc>.</source>
          <target xml:space="preserve">This AQS queries for all UPnP <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AssociationEndpoint</pc> objects when the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">DeviceInformationKind</pc></pc> is set to <pc dataRefEnd="id8" dataRefStart="id7" id="p4">AsssociationEndpoint</pc>.</target>
        </segment>
      </unit>
      <unit id="153">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/Dn948991)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">This AQS queries for all UPnP and WSD <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AssociationEndpoint</pc> objects when the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">DeviceInformationKind</pc></pc> is set to <pc dataRefEnd="id8" dataRefStart="id7" id="p4">AsssociationEndpoint</pc>.</source>
          <target xml:space="preserve">This AQS queries for all UPnP and WSD <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AssociationEndpoint</pc> objects when the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">DeviceInformationKind</pc></pc> is set to <pc dataRefEnd="id8" dataRefStart="id7" id="p4">AsssociationEndpoint</pc>.</target>
        </segment>
      </unit>
      <unit id="154">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/Dn948991)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">This AQS queries for all UPnP <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AssociationEndpointService</pc> objects if the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">DeviceInformationKind</pc></pc> is set to <pc dataRefEnd="id8" dataRefStart="id7" id="p4">AsssociationEndpointService</pc>.</source>
          <target xml:space="preserve">This AQS queries for all UPnP <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AssociationEndpointService</pc> objects if the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">DeviceInformationKind</pc></pc> is set to <pc dataRefEnd="id8" dataRefStart="id7" id="p4">AsssociationEndpointService</pc>.</target>
        </segment>
      </unit>
      <unit id="155">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/Dn948991)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">This AQS queries <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AssociationEndpointContainer</pc> objects when the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">DeviceInformationKind</pc></pc> is set to <pc dataRefEnd="id8" dataRefStart="id7" id="p4">AssociationEndpointContainer</pc>, but only finds them by enumerating the UPnP protocol.</source>
          <target xml:space="preserve">This AQS queries <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AssociationEndpointContainer</pc> objects when the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">DeviceInformationKind</pc></pc> is set to <pc dataRefEnd="id8" dataRefStart="id7" id="p4">AssociationEndpointContainer</pc>, but only finds them by enumerating the UPnP protocol.</target>
        </segment>
      </unit>
      <unit id="156">
        <segment state="initial">
          <source xml:space="preserve">Typically, it wouldn't be useful to enumerate containers that only come from one protocol.</source>
          <target xml:space="preserve">Typically, it wouldn't be useful to enumerate containers that only come from one protocol.</target>
        </segment>
      </unit>
      <unit id="157">
        <segment state="initial">
          <source xml:space="preserve">However, this might be useful by limiting your filter to protocols where you know your device can be discovered.</source>
          <target xml:space="preserve">However, this might be useful by limiting your filter to protocols where you know your device can be discovered.</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>