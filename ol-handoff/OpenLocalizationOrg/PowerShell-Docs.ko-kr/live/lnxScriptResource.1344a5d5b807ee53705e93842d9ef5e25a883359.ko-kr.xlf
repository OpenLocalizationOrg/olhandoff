<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="ko-kr" original="1/5/2016 8:35:14 AM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">056b0c86701cfd096c863560836dc129ecefc862</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>DSC for Linux nxScript Resource</source>
            <target state="new">DSC for Linux nxScript Resource</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>The <bpt id="2">&lt;strong&gt;</bpt>nxScript<ept id="2">&lt;/strong&gt;</ept> resource in PowerShell Desired State Configuration (DSC) provides a mechanism to run Linux scripts on a Linux node.</source>
            <target state="new">The <bpt id="2">&lt;strong&gt;</bpt>nxScript<ept id="2">&lt;/strong&gt;</ept> resource in PowerShell Desired State Configuration (DSC) provides a mechanism to run Linux scripts on a Linux node.</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>Syntax</source>
            <target state="new">Syntax</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>Properties</source>
            <target state="new">Properties</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>Property</source>
            <target state="new">Property</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>Description</source>
            <target state="new">Description</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>GetScript</source>
            <target state="new">GetScript</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>Provides a script that runs when you invoke the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Get-DscConfiguration<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> cmdlet.</source>
            <target state="new">Provides a script that runs when you invoke the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Get-DscConfiguration<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> cmdlet.</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>The script must begin with a shebang, such as #!/bin/bash.</source>
            <target state="new">The script must begin with a shebang, such as #!/bin/bash.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>SetScript</source>
            <target state="new">SetScript</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>Provides a script.</source>
            <target state="new">Provides a script.</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>When you invoke the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Start-DscConfiguration<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> cmdlet, the <bpt id="4">&lt;strong&gt;</bpt>TestScript<ept id="4">&lt;/strong&gt;</ept> runs first.</source>
            <target state="new">When you invoke the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Start-DscConfiguration<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> cmdlet, the <bpt id="4">&lt;strong&gt;</bpt>TestScript<ept id="4">&lt;/strong&gt;</ept> runs first.</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>If the <bpt id="2">&lt;strong&gt;</bpt>TestScript<ept id="2">&lt;/strong&gt;</ept> block returns an exit code other than 0, the <bpt id="4">&lt;strong&gt;</bpt>SetScript<ept id="4">&lt;/strong&gt;</ept> block will run.</source>
            <target state="new">If the <bpt id="2">&lt;strong&gt;</bpt>TestScript<ept id="2">&lt;/strong&gt;</ept> block returns an exit code other than 0, the <bpt id="4">&lt;strong&gt;</bpt>SetScript<ept id="4">&lt;/strong&gt;</ept> block will run.</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>If the <bpt id="2">&lt;strong&gt;</bpt>TestScript<ept id="2">&lt;/strong&gt;</ept> returns an exit code of 0, the <bpt id="4">&lt;strong&gt;</bpt>SetScript<ept id="4">&lt;/strong&gt;</ept> will not run.</source>
            <target state="new">If the <bpt id="2">&lt;strong&gt;</bpt>TestScript<ept id="2">&lt;/strong&gt;</ept> returns an exit code of 0, the <bpt id="4">&lt;strong&gt;</bpt>SetScript<ept id="4">&lt;/strong&gt;</ept> will not run.</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>The script must begin with a shebang, such as <bpt id="2">&lt;code&gt;</bpt>#!/bin/bash<ept id="2">&lt;/code&gt;</ept>.</source>
            <target state="new">The script must begin with a shebang, such as <bpt id="2">&lt;code&gt;</bpt>#!/bin/bash<ept id="2">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>TestScript</source>
            <target state="new">TestScript</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>Provides a script.</source>
            <target state="new">Provides a script.</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>When you invoke the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Start-DscConfiguration<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> cmdlet, this script runs.</source>
            <target state="new">When you invoke the <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Start-DscConfiguration<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept> cmdlet, this script runs.</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>If it returns an exit code other than 0, the SetScript will run.</source>
            <target state="new">If it returns an exit code other than 0, the SetScript will run.</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>If it returns an exit code of 0, the <bpt id="2">&lt;strong&gt;</bpt>SetScript<ept id="2">&lt;/strong&gt;</ept> will not run.</source>
            <target state="new">If it returns an exit code of 0, the <bpt id="2">&lt;strong&gt;</bpt>SetScript<ept id="2">&lt;/strong&gt;</ept> will not run.</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>The <bpt id="2">&lt;strong&gt;</bpt>TestScript<ept id="2">&lt;/strong&gt;</ept> also runs when you invoke the <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Test-DscConfiguration<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept> cmdlet.</source>
            <target state="new">The <bpt id="2">&lt;strong&gt;</bpt>TestScript<ept id="2">&lt;/strong&gt;</ept> also runs when you invoke the <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Test-DscConfiguration<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept> cmdlet.</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>However, in this case, the <bpt id="2">&lt;strong&gt;</bpt>SetScript<ept id="2">&lt;/strong&gt;</ept> will not run, no matter what exit code is returned from the <bpt id="4">&lt;strong&gt;</bpt>TestScript<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">However, in this case, the <bpt id="2">&lt;strong&gt;</bpt>SetScript<ept id="2">&lt;/strong&gt;</ept> will not run, no matter what exit code is returned from the <bpt id="4">&lt;strong&gt;</bpt>TestScript<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>The <bpt id="2">&lt;strong&gt;</bpt>TestScript<ept id="2">&lt;/strong&gt;</ept> must return an exit code of 0 if the actual configuration matches the current desired state configuration, and an exit code other than 0 if it does not match.</source>
            <target state="new">The <bpt id="2">&lt;strong&gt;</bpt>TestScript<ept id="2">&lt;/strong&gt;</ept> must return an exit code of 0 if the actual configuration matches the current desired state configuration, and an exit code other than 0 if it does not match.</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>(The current desired state configuration is the last configuration enacted on the node that is using DSC).</source>
            <target state="new">(The current desired state configuration is the last configuration enacted on the node that is using DSC).</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>The script must begin with a shebang, such as 1#!/bin/bash.1</source>
            <target state="new">The script must begin with a shebang, such as 1#!/bin/bash.1</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>User</source>
            <target state="new">User</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>The user to run the script as.</source>
            <target state="new">The user to run the script as.</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>Group</source>
            <target state="new">Group</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>The group to run the script as.</source>
            <target state="new">The group to run the script as.</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>DependsOn</source>
            <target state="new">DependsOn</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>Indicates that the configuration of another resource must run before this resource is configured.</source>
            <target state="new">Indicates that the configuration of another resource must run before this resource is configured.</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>For example, if the <bpt id="2">&lt;strong&gt;</bpt>ID<ept id="2">&lt;/strong&gt;</ept> of the resource configuration script block that you want to run first is <bpt id="4">&lt;strong&gt;</bpt>ResourceName<ept id="4">&lt;/strong&gt;</ept> and its type is <bpt id="6">&lt;strong&gt;</bpt>ResourceType<ept id="6">&lt;/strong&gt;</ept>, the syntax for using this property is <bpt id="8">&lt;code&gt;</bpt>DependsOn = "[ResourceType]ResourceName"<ept id="8">&lt;/code&gt;</ept>.</source>
            <target state="new">For example, if the <bpt id="2">&lt;strong&gt;</bpt>ID<ept id="2">&lt;/strong&gt;</ept> of the resource configuration script block that you want to run first is <bpt id="4">&lt;strong&gt;</bpt>ResourceName<ept id="4">&lt;/strong&gt;</ept> and its type is <bpt id="6">&lt;strong&gt;</bpt>ResourceType<ept id="6">&lt;/strong&gt;</ept>, the syntax for using this property is <bpt id="8">&lt;code&gt;</bpt>DependsOn = "[ResourceType]ResourceName"<ept id="8">&lt;/code&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>Example</source>
            <target state="new">Example</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source>The following example demonstrates the use of the <bpt id="2">&lt;strong&gt;</bpt>nxScript<ept id="2">&lt;/strong&gt;</ept> resource to perform additional configuration management.</source>
            <target state="new">The following example demonstrates the use of the <bpt id="2">&lt;strong&gt;</bpt>nxScript<ept id="2">&lt;/strong&gt;</ept> resource to perform additional configuration management.</target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>