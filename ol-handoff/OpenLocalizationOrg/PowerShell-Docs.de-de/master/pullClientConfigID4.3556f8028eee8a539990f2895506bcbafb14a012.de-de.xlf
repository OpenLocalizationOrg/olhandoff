<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dsc\pullClientConfigID4.md</xliffext:olfilepath>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3714670bd9ded38e54c1f2e3f64658950c6d3f40</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1b2f027" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Setting up a pull client using configuration ID in PowerShell 4.0</source>
          <target state="new">Setting up a pull client using configuration ID in PowerShell 4.0</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Applies To: Windows PowerShell 4.0, Windows PowerShell 5.0</source>
          <target state="new">Applies To: Windows PowerShell 4.0, Windows PowerShell 5.0</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Each target node has to be told to use pull mode and given the URL where it can contact the pull server to get configurations.</source>
          <target state="new">Each target node has to be told to use pull mode and given the URL where it can contact the pull server to get configurations.</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>To do this, you have to configure the Local Configuration Manager (LCM) with the necessary information.</source>
          <target state="new">To do this, you have to configure the Local Configuration Manager (LCM) with the necessary information.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>To configure the LCM, you create a special type of configuration known as a "metaconfiguration".</source>
          <target state="new">To configure the LCM, you create a special type of configuration known as a "metaconfiguration".</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For more information about configuring the LCM, see <bpt id="p1">[</bpt>Windows PowerShell 4.0 Desired State Configuration Local Configuration Manager<ept id="p1">](metaConfig4.md)</ept></source>
          <target state="new">For more information about configuring the LCM, see <bpt id="p1">[</bpt>Windows PowerShell 4.0 Desired State Configuration Local Configuration Manager<ept id="p1">](metaConfig4.md)</ept></target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The following script configures the LCM to pull configurations from a server named "PullServer".</source>
          <target state="new">The following script configures the LCM to pull configurations from a server named "PullServer".</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>In the script, <bpt id="p1">**</bpt>DownloadManagerCustomData<ept id="p1">**</ept> passes the URL of the pull server and (for this example) allows an unsecured connection.</source>
          <target state="new">In the script, <bpt id="p1">**</bpt>DownloadManagerCustomData<ept id="p1">**</ept> passes the URL of the pull server and (for this example) allows an unsecured connection.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>After this script runs, it creates a new output folder called <bpt id="p1">**</bpt>SimpleMetaConfigurationForPull<ept id="p1">**</ept> and puts a metaconfiguration MOF file there.</source>
          <target state="new">After this script runs, it creates a new output folder called <bpt id="p1">**</bpt>SimpleMetaConfigurationForPull<ept id="p1">**</ept> and puts a metaconfiguration MOF file there.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>To apply the configuration, use <bpt id="p1">**</bpt>Set-DscLocalConfigurationManager<ept id="p1">**</ept> with parameters for <bpt id="p2">**</bpt>ComputerName<ept id="p2">**</ept> (use “localhost”) and <bpt id="p3">**</bpt>Path<ept id="p3">**</ept> (the path to the location of the target node’s localhost.meta.mof file).</source>
          <target state="new">To apply the configuration, use <bpt id="p1">**</bpt>Set-DscLocalConfigurationManager<ept id="p1">**</ept> with parameters for <bpt id="p2">**</bpt>ComputerName<ept id="p2">**</ept> (use “localhost”) and <bpt id="p3">**</bpt>Path<ept id="p3">**</ept> (the path to the location of the target node’s localhost.meta.mof file).</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="new">For example:</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Configuration ID</source>
          <target state="new">Configuration ID</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The script sets the <bpt id="p1">**</bpt>ConfigurationID<ept id="p1">**</ept> property of the LCM to a GUID that had been previously created for this purpose (you can create a GUID by using the <bpt id="p2">**</bpt>New-Guid<ept id="p2">**</ept> cmdlet).</source>
          <target state="new">The script sets the <bpt id="p1">**</bpt>ConfigurationID<ept id="p1">**</ept> property of the LCM to a GUID that had been previously created for this purpose (you can create a GUID by using the <bpt id="p2">**</bpt>New-Guid<ept id="p2">**</ept> cmdlet).</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>ConfigurationID<ept id="p1">**</ept> is what the LCM uses to find the appropriate configuration on the pull server.</source>
          <target state="new">The <bpt id="p1">**</bpt>ConfigurationID<ept id="p1">**</ept> is what the LCM uses to find the appropriate configuration on the pull server.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The configuration MOF file on the pull server must be named <ph id="ph1">`ConfigurationID.mof`</ph>, where <bpt id="p1">*</bpt>ConfigurationID<ept id="p1">*</ept> is the value of the <bpt id="p2">**</bpt>ConfigurationID<ept id="p2">**</ept> property of the target node's LCM.</source>
          <target state="new">The configuration MOF file on the pull server must be named <ph id="ph1">`ConfigurationID.mof`</ph>, where <bpt id="p1">*</bpt>ConfigurationID<ept id="p1">*</ept> is the value of the <bpt id="p2">**</bpt>ConfigurationID<ept id="p2">**</ept> property of the target node's LCM.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>