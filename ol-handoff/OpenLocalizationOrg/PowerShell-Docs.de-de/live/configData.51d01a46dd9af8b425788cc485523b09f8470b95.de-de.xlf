<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="de-de" original="foo.file" tool-id="ce7db846-494e-41a1-9fc7-eb84dc0c8da9" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="ce7db846-494e-41a1-9fc7-eb84dc0c8da9" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
      <olfilehash xmlns="">25ea7bc8b398577cb2916ec833d61c38af812637</olfilehash>
    </header>
    <body>
      <group id="5f914ba0-92a4-4b42-8572-4667f84f280c">
        <trans-unit id="43be37a0-9470-4cc7-9815-0fd9617a0aed" xml:space="preserve">
          <source>Separating Configuration and Environment Data</source>
          <target state="new">Separating Configuration and Environment Data</target>
        </trans-unit>
        <trans-unit id="84f4f889-3303-4348-b719-15b09e3d5d17" xml:space="preserve">
          <source>Applies To: Windows PowerShell 4.0, Windows PowerShell 5.0</source>
          <target state="new">Applies To: Windows PowerShell 4.0, Windows PowerShell 5.0</target>
        </trans-unit>
        <trans-unit id="ebdafebb-d402-4f9c-8be1-dabec191b364" xml:space="preserve">
          <source>In Windows PowerShell Desired State Configuration (DSC), it is possible to separate configuration data from the logic of your configuration.</source>
          <target state="new">In Windows PowerShell Desired State Configuration (DSC), it is possible to separate configuration data from the logic of your configuration.</target>
        </trans-unit>
        <trans-unit id="49af5e1e-bfc3-4e70-bde7-35d4a19fcbe5" xml:space="preserve">
          <source>Another way to look at this is to consider the structural configuration (for example, a configuration might require that IIS be installed) as separate from the environmental configuration (that is, whether the situation is a test environment vs. a production one—the node names would be different, but the configuration applied to them would be the same).</source>
          <target state="new">Another way to look at this is to consider the structural configuration (for example, a configuration might require that IIS be installed) as separate from the environmental configuration (that is, whether the situation is a test environment vs. a production one—the node names would be different, but the configuration applied to them would be the same).</target>
        </trans-unit>
        <trans-unit id="6ca02f39-a542-4934-b2b8-a18955af61f7" xml:space="preserve">
          <source>This has the following advantages:</source>
          <target state="new">This has the following advantages:</target>
        </trans-unit>
        <trans-unit id="1397570f-01ed-4596-811e-43132776bbe2" xml:space="preserve">
          <source>It allows you to reuse your configuration data for different resources, nodes, and configurations.</source>
          <target state="new">It allows you to reuse your configuration data for different resources, nodes, and configurations.</target>
        </trans-unit>
        <trans-unit id="879ee789-94e1-47b5-89f3-1bdc9f2a976c" xml:space="preserve">
          <source>Configuration logic is more reusable if it does not contain hard-coded data.</source>
          <target state="new">Configuration logic is more reusable if it does not contain hard-coded data.</target>
        </trans-unit>
        <trans-unit id="a3ec1ff9-4cf9-4723-9499-903e6bce875a" xml:space="preserve">
          <source>This is similar to good scripting guidelines for functions.</source>
          <target state="new">This is similar to good scripting guidelines for functions.</target>
        </trans-unit>
        <trans-unit id="01921a39-4153-4c22-a89a-e0f5e5668746" xml:space="preserve">
          <source>If some of the data needs to change, you can make the changes in one location, thereby saving time and reducing errors.</source>
          <target state="new">If some of the data needs to change, you can make the changes in one location, thereby saving time and reducing errors.</target>
        </trans-unit>
        <trans-unit id="94959199-7d63-4e6e-b371-60f1da8e51b1" xml:space="preserve">
          <source>Basic concepts and examples</source>
          <target state="new">Basic concepts and examples</target>
        </trans-unit>
        <trans-unit id="caea7415-3d16-4bf2-86dc-7f59fd6d5a8a" xml:space="preserve">
          <source>To specify the environmental part of the configuration, DSC uses the <bpt id="cbe336b5-b789-450a-8409-8efc54dd267d">&lt;strong&gt;</bpt>ConfigurationData<ept id="cbe336b5-b789-450a-8409-8efc54dd267d">&lt;/strong&gt;</ept> parameter, which is a hash table (or it can take a .psd1 file which contains the hash table).</source>
          <target state="new">To specify the environmental part of the configuration, DSC uses the <bpt id="cbe336b5-b789-450a-8409-8efc54dd267d">&lt;strong&gt;</bpt>ConfigurationData<ept id="cbe336b5-b789-450a-8409-8efc54dd267d">&lt;/strong&gt;</ept> parameter, which is a hash table (or it can take a .psd1 file which contains the hash table).</target>
        </trans-unit>
        <trans-unit id="0f84b9bf-6f39-4e4c-a5a8-cd26c978a0e0" xml:space="preserve">
          <source>This hash table must have at least one key <bpt id="5b0468ee-d227-46c0-9a6c-768e2d4f669d">&lt;strong&gt;</bpt>AllNodes<ept id="5b0468ee-d227-46c0-9a6c-768e2d4f669d">&lt;/strong&gt;</ept>, which has a structured value.</source>
          <target state="new">This hash table must have at least one key <bpt id="5b0468ee-d227-46c0-9a6c-768e2d4f669d">&lt;strong&gt;</bpt>AllNodes<ept id="5b0468ee-d227-46c0-9a6c-768e2d4f669d">&lt;/strong&gt;</ept>, which has a structured value.</target>
        </trans-unit>
        <trans-unit id="86631731-a701-403e-9ac4-d9c9f5620c99" xml:space="preserve">
          <source>For example:</source>
          <target state="new">For example:</target>
        </trans-unit>
        <trans-unit id="f4a8df7e-2637-4b17-9cc9-2e1ff15e89a6" xml:space="preserve">
          <source>Note the AllNodes key, whose value is an array.</source>
          <target state="new">Note the AllNodes key, whose value is an array.</target>
        </trans-unit>
        <trans-unit id="78b1f4a7-37b4-43a6-8699-5b333ea01302" xml:space="preserve">
          <source>Each element of this array is also a hash table, which requires NodeName as a key:</source>
          <target state="new">Each element of this array is also a hash table, which requires NodeName as a key:</target>
        </trans-unit>
        <trans-unit id="ecb9b542-0f0e-4ee4-bce2-f6b61e65f3a6" xml:space="preserve">
          <source>Each hash table entry in AllNodes corresponds to configuration data to a node in the configuration.</source>
          <target state="new">Each hash table entry in AllNodes corresponds to configuration data to a node in the configuration.</target>
        </trans-unit>
        <trans-unit id="1904bbc2-2a02-4114-9737-83ba08502e9a" xml:space="preserve">
          <source>In addition to the required NodeName key, you can add other keys to the hash table as well, for example:</source>
          <target state="new">In addition to the required NodeName key, you can add other keys to the hash table as well, for example:</target>
        </trans-unit>
        <trans-unit id="1c38d394-3f00-41ad-af4d-16e1ce7fe90d" xml:space="preserve">
          <source>DSC offers three special variables to use in the configuration script:</source>
          <target state="new">DSC offers three special variables to use in the configuration script:</target>
        </trans-unit>
        <trans-unit id="5a1f0af4-b2f9-488b-8bea-e6f8b6e66431" xml:space="preserve">
          <source><bpt id="a187bda9-efc5-4290-9e9a-154833b481ac">&lt;strong&gt;</bpt>$AllNodes<ept id="a187bda9-efc5-4290-9e9a-154833b481ac">&lt;/strong&gt;</ept>: Refers to all of the nodes.</source>
          <target state="new"><bpt id="a187bda9-efc5-4290-9e9a-154833b481ac">&lt;strong&gt;</bpt>$AllNodes<ept id="a187bda9-efc5-4290-9e9a-154833b481ac">&lt;/strong&gt;</ept>: Refers to all of the nodes.</target>
        </trans-unit>
        <trans-unit id="2b123a4c-c6dd-4852-a976-14472edc10f0" xml:space="preserve">
          <source>You can use filtering with <bpt id="7f7214af-138e-4211-b629-4f27df9e181b">&lt;strong&gt;</bpt>.Where()<ept id="7f7214af-138e-4211-b629-4f27df9e181b">&lt;/strong&gt;</ept> and <bpt id="6c04248c-05f8-4ac8-9e40-9ad7eb636afe">&lt;strong&gt;</bpt>.ForEach()<ept id="6c04248c-05f8-4ac8-9e40-9ad7eb636afe">&lt;/strong&gt;</ept>, so instead of hard-coding node names to select particular nodes for action, you could write something like this to select VM-1 and VM-3 in the above example:</source>
          <target state="new">You can use filtering with <bpt id="7f7214af-138e-4211-b629-4f27df9e181b">&lt;strong&gt;</bpt>.Where()<ept id="7f7214af-138e-4211-b629-4f27df9e181b">&lt;/strong&gt;</ept> and <bpt id="6c04248c-05f8-4ac8-9e40-9ad7eb636afe">&lt;strong&gt;</bpt>.ForEach()<ept id="6c04248c-05f8-4ac8-9e40-9ad7eb636afe">&lt;/strong&gt;</ept>, so instead of hard-coding node names to select particular nodes for action, you could write something like this to select VM-1 and VM-3 in the above example:</target>
        </trans-unit>
        <trans-unit id="47d708eb-db8a-4b3d-8814-35ba4944aa7d" xml:space="preserve">
          <source><bpt id="1ae8b3f8-c83d-49b7-8116-0e05b2f2e1a9">&lt;strong&gt;</bpt>$Node<ept id="1ae8b3f8-c83d-49b7-8116-0e05b2f2e1a9">&lt;/strong&gt;</ept>: Once the set of nodes is filtered, you can use $Node to refer to the particular entry.</source>
          <target state="new"><bpt id="1ae8b3f8-c83d-49b7-8116-0e05b2f2e1a9">&lt;strong&gt;</bpt>$Node<ept id="1ae8b3f8-c83d-49b7-8116-0e05b2f2e1a9">&lt;/strong&gt;</ept>: Once the set of nodes is filtered, you can use $Node to refer to the particular entry.</target>
        </trans-unit>
        <trans-unit id="f0e035af-4cd2-409a-8ed4-f6e64a96d7b7" xml:space="preserve">
          <source>For example:</source>
          <target state="new">For example:</target>
        </trans-unit>
        <trans-unit id="fb4355e5-1233-4836-835d-9336ab8077b2" xml:space="preserve">
          <source>To apply a property to all nodes, you can set NodeName = “*”.</source>
          <target state="new">To apply a property to all nodes, you can set NodeName = “*”.</target>
        </trans-unit>
        <trans-unit id="7668f551-4771-44c0-9db3-04e2f8a5256f" xml:space="preserve">
          <source>For example, to give every node the LogPath property, you could do this:</source>
          <target state="new">For example, to give every node the LogPath property, you could do this:</target>
        </trans-unit>
        <trans-unit id="3650a446-c86e-4840-9bff-8d593adcc407" xml:space="preserve">
          <source><bpt id="527fe324-6606-4f7b-885e-8adf78036d4c">&lt;strong&gt;</bpt>$ConfigurationData<ept id="527fe324-6606-4f7b-885e-8adf78036d4c">&lt;/strong&gt;</ept>: You can use this variable inside a configuration to access the configuration data hash table passed as a parameter.</source>
          <target state="new"><bpt id="527fe324-6606-4f7b-885e-8adf78036d4c">&lt;strong&gt;</bpt>$ConfigurationData<ept id="527fe324-6606-4f7b-885e-8adf78036d4c">&lt;/strong&gt;</ept>: You can use this variable inside a configuration to access the configuration data hash table passed as a parameter.</target>
        </trans-unit>
        <trans-unit id="a8fea3a0-6988-4101-b707-45944ce1d1c5" xml:space="preserve">
          <source>For example:</source>
          <target state="new">For example:</target>
        </trans-unit>
        <trans-unit id="ce4c0b1b-1228-4461-82d1-da5905fea8a8" xml:space="preserve">
          <source>You can find a full example included in the <bpt id="304b7d90-170c-4e56-aa88-c296bc4152ccCapsExtId1">&lt;linkText&gt;</bpt>xWebAdministration module<ept id="304b7d90-170c-4e56-aa88-c296bc4152ccCapsExtId1">&lt;/linkText&gt;</ept><bpt id="304b7d90-170c-4e56-aa88-c296bc4152ccCapsExtId2">&lt;title&gt;</bpt><ept id="304b7d90-170c-4e56-aa88-c296bc4152ccCapsExtId2">&lt;/title&gt;</ept>.</source>
          <target state="new">You can find a full example included in the <bpt id="304b7d90-170c-4e56-aa88-c296bc4152ccCapsExtId1">&lt;linkText&gt;</bpt>xWebAdministration module<ept id="304b7d90-170c-4e56-aa88-c296bc4152ccCapsExtId1">&lt;/linkText&gt;</ept><bpt id="304b7d90-170c-4e56-aa88-c296bc4152ccCapsExtId2">&lt;title&gt;</bpt><ept id="304b7d90-170c-4e56-aa88-c296bc4152ccCapsExtId2">&lt;/title&gt;</ept>.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>