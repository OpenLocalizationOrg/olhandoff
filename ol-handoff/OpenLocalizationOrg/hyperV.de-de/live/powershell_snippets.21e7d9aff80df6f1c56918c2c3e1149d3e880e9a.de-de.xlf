<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="de-de" original="foo.file" tool-id="58db335e-e015-4175-80ae-a580cc4c9463" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="58db335e-e015-4175-80ae-a580cc4c9463" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
      <olfilehash xmlns="">2fe214e2a741bb53de8e5d3ff3d2129f195a3208</olfilehash>
    </header>
    <body>
      <group id="b50af460-ab1f-43ae-9d7b-30c11a6f29e3">
        <trans-unit id="340d44f1-98eb-4c94-8313-ef09bfb02f8d" xml:space="preserve">
          <source>PowerShell Snippets</source>
          <target state="new">PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="d5e09b2e-c780-48ac-867c-47726949278f" xml:space="preserve">
          <source>PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</source>
          <target state="new">PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</target>
        </trans-unit>
        <trans-unit id="f937ebc2-74ca-42c1-a9e0-89fc4f882aa2" xml:space="preserve">
          <source>All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</source>
          <target state="new">All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</target>
        </trans-unit>
        <trans-unit id="3f86e5fa-a35b-4458-8913-bf861e409485" xml:space="preserve">
          <source>If you aren't sure if you have the right permissions, type <bpt id="e45095f9-9ad7-4592-9337-35a791955a43">&lt;code&gt;</bpt>Get-VM<ept id="e45095f9-9ad7-4592-9337-35a791955a43">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</source>
          <target state="new">If you aren't sure if you have the right permissions, type <bpt id="e45095f9-9ad7-4592-9337-35a791955a43">&lt;code&gt;</bpt>Get-VM<ept id="e45095f9-9ad7-4592-9337-35a791955a43">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</target>
        </trans-unit>
        <trans-unit id="be463f12-2d5a-4046-95cd-45e450186252" xml:space="preserve">
          <source>PowerShell Direct tools</source>
          <target state="new">PowerShell Direct tools</target>
        </trans-unit>
        <trans-unit id="5803166f-1854-4cb7-8bf9-2019f183e02b" xml:space="preserve">
          <source>All of the scripts and snippets in this section will rely on the following basics.</source>
          <target state="new">All of the scripts and snippets in this section will rely on the following basics.</target>
        </trans-unit>
        <trans-unit id="5ce22c33-6cda-4eff-88da-79bdaeac082f" xml:space="preserve">
          <source><bpt id="102cae03-177e-4d16-bcc0-41b4bf9fd66e">&lt;strong&gt;</bpt>Requirements<ept id="102cae03-177e-4d16-bcc0-41b4bf9fd66e">&lt;/strong&gt;</ept> :</source>
          <target state="new"><bpt id="102cae03-177e-4d16-bcc0-41b4bf9fd66e">&lt;strong&gt;</bpt>Requirements<ept id="102cae03-177e-4d16-bcc0-41b4bf9fd66e">&lt;/strong&gt;</ept> :</target>
        </trans-unit>
        <trans-unit id="281a479d-6be8-4315-810a-0c5b55852fee" xml:space="preserve">
          <source>PowerShell Direct.</source>
          <target state="new">PowerShell Direct.</target>
        </trans-unit>
        <trans-unit id="d262c153-7442-4632-80c3-3627b60e9412" xml:space="preserve">
          <source>Windows 10 guest and host OS.</source>
          <target state="new">Windows 10 guest and host OS.</target>
        </trans-unit>
        <trans-unit id="0a8a0900-4d21-4d35-a914-31365f4fd3a7" xml:space="preserve">
          <source><bpt id="aa1fe7eb-5d76-4e30-bb20-d60f960c1eb1">&lt;strong&gt;</bpt>Common Variables<ept id="aa1fe7eb-5d76-4e30-bb20-d60f960c1eb1">&lt;/strong&gt;</ept> :  
<bpt id="9a5e06a0-784a-4191-aa27-c7959a5d2ef0">&lt;code&gt;</bpt>$VMName<ept id="9a5e06a0-784a-4191-aa27-c7959a5d2ef0">&lt;/code&gt;</ept> -- this is a string with the VMName.</source>
          <target state="new"><bpt id="aa1fe7eb-5d76-4e30-bb20-d60f960c1eb1">&lt;strong&gt;</bpt>Common Variables<ept id="aa1fe7eb-5d76-4e30-bb20-d60f960c1eb1">&lt;/strong&gt;</ept> :  
<bpt id="9a5e06a0-784a-4191-aa27-c7959a5d2ef0">&lt;code&gt;</bpt>$VMName<ept id="9a5e06a0-784a-4191-aa27-c7959a5d2ef0">&lt;/code&gt;</ept> -- this is a string with the VMName.</target>
        </trans-unit>
        <trans-unit id="bb64bae3-1287-4049-a978-58429443ec77" xml:space="preserve">
          <source>See a list of available VMs with <bpt id="ee4d2716-b766-4dd3-9034-3b9223a49fe9">&lt;code&gt;</bpt>Get-VM<ept id="ee4d2716-b766-4dd3-9034-3b9223a49fe9">&lt;/code&gt;</ept>  
<bpt id="eaba46cc-24f9-4052-be8a-a193bf0ad3ee">&lt;code&gt;</bpt>$cred<ept id="eaba46cc-24f9-4052-be8a-a193bf0ad3ee">&lt;/code&gt;</ept> -- Credential for the guest OS.</source>
          <target state="new">See a list of available VMs with <bpt id="ee4d2716-b766-4dd3-9034-3b9223a49fe9">&lt;code&gt;</bpt>Get-VM<ept id="ee4d2716-b766-4dd3-9034-3b9223a49fe9">&lt;/code&gt;</ept>  
<bpt id="eaba46cc-24f9-4052-be8a-a193bf0ad3ee">&lt;code&gt;</bpt>$cred<ept id="eaba46cc-24f9-4052-be8a-a193bf0ad3ee">&lt;/code&gt;</ept> -- Credential for the guest OS.</target>
        </trans-unit>
        <trans-unit id="6cf63524-dcec-4286-9fed-8a97209d2570" xml:space="preserve">
          <source>Can be populated using <bpt id="afe004bd-3060-4462-a39b-b2e3684887ec">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="afe004bd-3060-4462-a39b-b2e3684887ec">&lt;/code&gt;</ept></source>
          <target state="new">Can be populated using <bpt id="afe004bd-3060-4462-a39b-b2e3684887ec">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="afe004bd-3060-4462-a39b-b2e3684887ec">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="bfdd4776-2182-4c15-a6ef-669b067c0479" xml:space="preserve">
          <source>Check if the guest has booted</source>
          <target state="new">Check if the guest has booted</target>
        </trans-unit>
        <trans-unit id="7372d4af-bab2-4bd8-a91f-c0ac7ccded4f" xml:space="preserve">
          <source>Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</source>
          <target state="new">Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</target>
        </trans-unit>
        <trans-unit id="1e256556-cd22-42d5-97c1-95ac6e0ce504" xml:space="preserve">
          <source>Use this command to check whether the guest has booted.</source>
          <target state="new">Use this command to check whether the guest has booted.</target>
        </trans-unit>
        <trans-unit id="65a7fe34-5835-4da2-a6c7-57dc80631a84" xml:space="preserve">
          <source><bpt id="c693efcb-94a2-4bc4-86f0-323b7056d44d">&lt;strong&gt;</bpt>Outcome<ept id="c693efcb-94a2-4bc4-86f0-323b7056d44d">&lt;/strong&gt;</ept>  
Prints a friendly message declaring the state of the guest OS.</source>
          <target state="new"><bpt id="c693efcb-94a2-4bc4-86f0-323b7056d44d">&lt;strong&gt;</bpt>Outcome<ept id="c693efcb-94a2-4bc4-86f0-323b7056d44d">&lt;/strong&gt;</ept>  
Prints a friendly message declaring the state of the guest OS.</target>
        </trans-unit>
        <trans-unit id="6e7101a1-4e91-4ce1-95e9-d7e1f0d9c1db" xml:space="preserve">
          <source>Script locking until the guest has booted</source>
          <target state="new">Script locking until the guest has booted</target>
        </trans-unit>
        <trans-unit id="57fa22c3-529c-4109-b9ae-644dc11a6265" xml:space="preserve">
          <source>The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</source>
          <target state="new">The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</target>
        </trans-unit>
        <trans-unit id="d692af94-dd21-4d02-bef6-2d94860bcf1c" xml:space="preserve">
          <source><bpt id="285cf43c-eed6-42f0-847d-ad3ec6207f13">&lt;strong&gt;</bpt>Outcome<ept id="285cf43c-eed6-42f0-847d-ad3ec6207f13">&lt;/strong&gt;</ept>  
Prints a friendly message and locks until the connection to the VM succeeds.</source>
          <target state="new"><bpt id="285cf43c-eed6-42f0-847d-ad3ec6207f13">&lt;strong&gt;</bpt>Outcome<ept id="285cf43c-eed6-42f0-847d-ad3ec6207f13">&lt;/strong&gt;</ept>  
Prints a friendly message and locks until the connection to the VM succeeds.</target>
        </trans-unit>
        <trans-unit id="86cae0c0-b7f0-47ae-9a9c-072a225eb69b" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="28742cf4-0521-48f9-bd34-aacd5a8d7b6b" xml:space="preserve">
          <source>Script locking until the guest has a network</source>
          <target state="new">Script locking until the guest has a network</target>
        </trans-unit>
        <trans-unit id="b1af8b7f-cb5b-4cfd-8602-52b1f16af576" xml:space="preserve">
          <source>With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</source>
          <target state="new">With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</target>
        </trans-unit>
        <trans-unit id="58714d9c-bb34-49a9-8790-598dfe3c4fbb" xml:space="preserve">
          <source><bpt id="16e97ffb-1682-48e9-8eef-6ba59bbf2d2a">&lt;em&gt;</bpt>* Outcome *<ept id="16e97ffb-1682-48e9-8eef-6ba59bbf2d2a">&lt;/em&gt;</ept>
Locks until a DHCP lease is recieved.</source>
          <target state="new"><bpt id="16e97ffb-1682-48e9-8eef-6ba59bbf2d2a">&lt;em&gt;</bpt>* Outcome *<ept id="16e97ffb-1682-48e9-8eef-6ba59bbf2d2a">&lt;/em&gt;</ept>
Locks until a DHCP lease is recieved.</target>
        </trans-unit>
        <trans-unit id="7212a4a9-c651-4ced-995f-70468351233a" xml:space="preserve">
          <source>Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</source>
          <target state="new">Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</target>
        </trans-unit>
        <trans-unit id="5f146962-374e-4ea3-a955-788e28a83a4d" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="96db6a0a-3ad7-41c7-97b1-b94e4f501873" xml:space="preserve">
          <source>Managing credentials with PowerShell</source>
          <target state="new">Managing credentials with PowerShell</target>
        </trans-unit>
        <trans-unit id="30798ea6-4722-4d46-b308-62d548f20351" xml:space="preserve">
          <source>Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</source>
          <target state="new">Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</target>
        </trans-unit>
        <trans-unit id="3e812a23-d00e-4ddc-ab96-4e8c48c6c198" xml:space="preserve">
          <source>There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</source>
          <target state="new">There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</target>
        </trans-unit>
        <trans-unit id="b7e75514-0e01-4440-8b6a-60846efc91cd" xml:space="preserve">
          <source>The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</source>
          <target state="new">The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</target>
        </trans-unit>
        <trans-unit id="c88ac865-bf6e-436f-8d84-e70023f46374" xml:space="preserve">
          <source>This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</source>
          <target state="new">This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</target>
        </trans-unit>
        <trans-unit id="d93af16b-e537-4702-ab38-13b39caafb7d" xml:space="preserve">
          <source>In this scenario you can just run <bpt id="4a032697-a05c-49dc-9697-6669b1b7e48e">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="4a032697-a05c-49dc-9697-6669b1b7e48e">&lt;/code&gt;</ept>.</source>
          <target state="new">In this scenario you can just run <bpt id="4a032697-a05c-49dc-9697-6669b1b7e48e">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="4a032697-a05c-49dc-9697-6669b1b7e48e">&lt;/code&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="72afa2e6-b2ba-41b8-b7a5-0bdbf3166426" xml:space="preserve">
          <source>Let PowerShell prompt you for credentials  
If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</source>
          <target state="new">Let PowerShell prompt you for credentials  
If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</target>
        </trans-unit>
        <trans-unit id="a21dbeb8-bfe4-4120-85c7-8f8e675b1b9d" xml:space="preserve">
          <source>Store credentials in a variable for reuse.</source>
          <target state="new">Store credentials in a variable for reuse.</target>
        </trans-unit>
        <trans-unit id="ceecd54d-567a-4c71-8c02-d35f7ae45c28" xml:space="preserve">
          <source>Running a simple command like this:</source>
          <target state="new">Running a simple command like this:</target>
        </trans-unit>
        <trans-unit id="6288e956-fb44-47ac-b368-8287d413a598" xml:space="preserve">
          <source>  And then running something like this:</source>
          <target state="new">  And then running something like this:</target>
        </trans-unit>
        <trans-unit id="0b436733-3c9c-42ad-96a6-3cee9e90e255" xml:space="preserve">
          <source>  Will mean that you only get prompted once per script/PowerShell session for your credentials.</source>
          <target state="new">  Will mean that you only get prompted once per script/PowerShell session for your credentials.</target>
        </trans-unit>
        <trans-unit id="2a1cce58-a3d8-4331-9938-3480d2b8acea" xml:space="preserve">
          <source>Code your credentials into your scripts.</source>
          <target state="new">Code your credentials into your scripts.</target>
        </trans-unit>
        <trans-unit id="51df2876-63bb-4718-8aa9-3dc798ce0405" xml:space="preserve">
          <source><bpt id="64ca4562-a401-40ca-8d64-cce6a81249c3">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="64ca4562-a401-40ca-8d64-cce6a81249c3">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="64ca4562-a401-40ca-8d64-cce6a81249c3">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="64ca4562-a401-40ca-8d64-cce6a81249c3">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="9b40a6c3-2444-4255-8b6d-7f4e0617a7cd" xml:space="preserve">
          <source>Warning:  _Do not do this in a production system.</source>
          <target state="new">Warning:  _Do not do this in a production system.</target>
        </trans-unit>
        <trans-unit id="f2ec685c-2835-4c8d-85bd-8b229ca0bf4c" xml:space="preserve">
          <source>Do not do this with real passwords._</source>
          <target state="new">Do not do this with real passwords._</target>
        </trans-unit>
        <trans-unit id="122277cd-aa95-4e68-a78e-941cb99bd077" xml:space="preserve">
          <source>You can hand craft a PSCredential object with some code like this:</source>
          <target state="new">You can hand craft a PSCredential object with some code like this:</target>
        </trans-unit>
        <trans-unit id="18c56fbd-d229-4bce-9bc2-be2d22e89d1e" xml:space="preserve">
          <source>Grossly insecure - but useful for testing.</source>
          <target state="new">Grossly insecure - but useful for testing.</target>
        </trans-unit>
        <trans-unit id="2c8a909b-8d62-4edd-9c60-07d481448350" xml:space="preserve">
          <source>Now you get no prompts at all in this session.</source>
          <target state="new">Now you get no prompts at all in this session.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>