<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="de-de">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8072344dba9d8f7a1a59b8444801054d3c59095f</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>ms.ContentId: d0a07897-5fd2-41a5-856d-dc8b499c6783</source>
          <target state="new">ms.ContentId: d0a07897-5fd2-41a5-856d-dc8b499c6783</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>title: Manage Windows Server Containers with PowerShell</source>
          <target state="new">title: Manage Windows Server Containers with PowerShell</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Quick Start: Windows Server Containers and PowerShell</source>
          <target state="new">Quick Start: Windows Server Containers and PowerShell</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This article will walk through the fundamentals of managing Windows Server Containers with PowerShell.</source>
          <target state="new">This article will walk through the fundamentals of managing Windows Server Containers with PowerShell.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Items covered will include creating Windows Server Containers and Windows Server Container Images, removing Windows Server Containers and Container Images and finally deploying an application into a Windows Server Container.</source>
          <target state="new">Items covered will include creating Windows Server Containers and Windows Server Container Images, removing Windows Server Containers and Container Images and finally deploying an application into a Windows Server Container.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The lessons learned in this walkthrough should enable you to begin exploring deployment and management of Windows Server Containers using PowerShell.</source>
          <target state="new">The lessons learned in this walkthrough should enable you to begin exploring deployment and management of Windows Server Containers using PowerShell.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Have questions?</source>
          <target state="new">Have questions?</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Ask them on the <bpt id="p1">[</bpt>Windows Containers forum<ept id="p1">](https://social.msdn.microsoft.com/Forums/en-US/home?forum=windowscontainers)</ept>.</source>
          <target state="new">Ask them on the <bpt id="p1">[</bpt>Windows Containers forum<ept id="p1">](https://social.msdn.microsoft.com/Forums/en-US/home?forum=windowscontainers)</ept>.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note:<ept id="p1">**</ept> Windows Server Containers created with PowerShell can not currently be managed with Docker and visa versa.</source>
          <target state="new"><bpt id="p1">**</bpt>Note:<ept id="p1">**</ept> Windows Server Containers created with PowerShell can not currently be managed with Docker and visa versa.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>To create containers with Docker instead, see <bpt id="p1">[</bpt>Quick Start: Windows Server Containers and Docker<ept id="p1">](./manage_docker.md)</ept>.</source>
          <target state="new">To create containers with Docker instead, see <bpt id="p1">[</bpt>Quick Start: Windows Server Containers and Docker<ept id="p1">](./manage_docker.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>If you want to know more, <bpt id="p1">[</bpt>read the FAQ<ept id="p1">](../about/faq.md#WhydoIhavetopickbetweenDockerandPowerShellforWindowsServerContainermanagement)</ept>.</source>
          <target state="new">If you want to know more, <bpt id="p1">[</bpt>read the FAQ<ept id="p1">](../about/faq.md#WhydoIhavetopickbetweenDockerandPowerShellforWindowsServerContainermanagement)</ept>.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="new">Prerequisites</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>In order to complete this walkthrough the following items need to be in place.</source>
          <target state="new">In order to complete this walkthrough the following items need to be in place.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Windows Server 2016 TP3 or later configured with the Windows Server Containers Feature.</source>
          <target state="new">Windows Server 2016 TP3 or later configured with the Windows Server Containers Feature.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If you have completed the setup guide, this is the VM that was created in Azure or Hyper-V.</source>
          <target state="new">If you have completed the setup guide, this is the VM that was created in Azure or Hyper-V.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This system must be connected to a network and able to access the internet.</source>
          <target state="new">This system must be connected to a network and able to access the internet.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If you need to configure the container feature, see the following guides: <bpt id="p1">[</bpt>Container Setup in Azure<ept id="p1">](./azure_setup.md)</ept> or <bpt id="p2">[</bpt>Container Setup in Hyper-V<ept id="p2">](./container_setup.md)</ept>.</source>
          <target state="new">If you need to configure the container feature, see the following guides: <bpt id="p1">[</bpt>Container Setup in Azure<ept id="p1">](./azure_setup.md)</ept> or <bpt id="p2">[</bpt>Container Setup in Hyper-V<ept id="p2">](./container_setup.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Basic Container Management with PowerShell</source>
          <target state="new">Basic Container Management with PowerShell</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This first example will walk through the basics of creating and removing Windows Server Containers and Windows Server Container Images with PowerShell.</source>
          <target state="new">This first example will walk through the basics of creating and removing Windows Server Containers and Windows Server Container Images with PowerShell.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>To begin the walk through, log into your Windows Server Container Host System, you will see a Windows command prompt.</source>
          <target state="new">To begin the walk through, log into your Windows Server Container Host System, you will see a Windows command prompt.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Start a PowerShell session by typing <ph id="ph1">`powershell`</ph>.</source>
          <target state="new">Start a PowerShell session by typing <ph id="ph1">`powershell`</ph>.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>You will know that you are in a PowerShell session when the prompt changes from <ph id="ph1">`C:\directory&gt;`</ph> to <ph id="ph2">`PS C:\directory&gt;`</ph>.</source>
          <target state="new">You will know that you are in a PowerShell session when the prompt changes from <ph id="ph1">`C:\directory&gt;`</ph> to <ph id="ph2">`PS C:\directory&gt;`</ph>.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">`Get-Command`</ph> to see the available commands in the containers module</source>
          <target state="new">Use <ph id="ph1">`Get-Command`</ph> to see the available commands in the containers module</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Next make sure that your system has a valid IP Address using <ph id="ph1">`ipconfig`</ph> and take note of this address for later use.</source>
          <target state="new">Next make sure that your system has a valid IP Address using <ph id="ph1">`ipconfig`</ph> and take note of this address for later use.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>If you are working from an Azure VM instead of using <ph id="ph1">`ipconfig`</ph> you will need to get the public IP address of the Azure Virtual Machine.</source>
          <target state="new">If you are working from an Azure VM instead of using <ph id="ph1">`ipconfig`</ph> you will need to get the public IP address of the Azure Virtual Machine.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Step 1 - Create a New Container</source>
          <target state="new">Step 1 - Create a New Container</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Before creating a Windows Server Container you will need the name of a Container Image and the name of a virtual switch that will be attached to the new container.</source>
          <target state="new">Before creating a Windows Server Container you will need the name of a Container Image and the name of a virtual switch that will be attached to the new container.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">`Get-ContainerImage`</ph> command to return a list of container images loaded on the host.</source>
          <target state="new">Use the <ph id="ph1">`Get-ContainerImage`</ph> command to return a list of container images loaded on the host.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Take note of the image name that you will use to create the container.</source>
          <target state="new">Take note of the image name that you will use to create the container.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">`Get-VMSwitch`</ph> command to return a list of switches available on the host.</source>
          <target state="new">Use the <ph id="ph1">`Get-VMSwitch`</ph> command to return a list of switches available on the host.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Take note of the switch name that will be used with the container.</source>
          <target state="new">Take note of the switch name that will be used with the container.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Run the following command to create a container.</source>
          <target state="new">Run the following command to create a container.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>When running <ph id="ph1">`New-Container`</ph> you will name the container, specify the container image, and select the network switch to use with the container.</source>
          <target state="new">When running <ph id="ph1">`New-Container`</ph> you will name the container, specify the container image, and select the network switch to use with the container.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Notice in this example that the output is placed in a variable $container.</source>
          <target state="new">Notice in this example that the output is placed in a variable $container.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This will be helpful later in this exercise.</source>
          <target state="new">This will be helpful later in this exercise.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>To see a list of containers on the host and verify that the container was created, use the <ph id="ph1">`Get-Container`</ph> command.</source>
          <target state="new">To see a list of containers on the host and verify that the container was created, use the <ph id="ph1">`Get-Container`</ph> command.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Notice that a container has been created with the name of MyContainer, however it has not been started.</source>
          <target state="new">Notice that a container has been created with the name of MyContainer, however it has not been started.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>To start the container, use <ph id="ph1">`Start-Container`</ph> proivding the name of the container.</source>
          <target state="new">To start the container, use <ph id="ph1">`Start-Container`</ph> proivding the name of the container.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>You can interact with containers using PowerShell remoting commands such as <ph id="ph1">`Invoke-Command`</ph>, or <ph id="ph2">`Enter-PSSession`</ph>.</source>
          <target state="new">You can interact with containers using PowerShell remoting commands such as <ph id="ph1">`Invoke-Command`</ph>, or <ph id="ph2">`Enter-PSSession`</ph>.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The example below creates a remote PowerShell session into the container using the <ph id="ph1">`Enter-PSSession`</ph> command.</source>
          <target state="new">The example below creates a remote PowerShell session into the container using the <ph id="ph1">`Enter-PSSession`</ph> command.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>This command needs the container id in order to create the remote session.</source>
          <target state="new">This command needs the container id in order to create the remote session.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The container id was stored in the <ph id="ph1">`$container`</ph> variable when the container was created.</source>
          <target state="new">The container id was stored in the <ph id="ph1">`$container`</ph> variable when the container was created.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Notice that once the remote session has been created the command prompt will change to include the first 11 characters of the container id <ph id="ph1">`[2446380e-629]`</ph>.</source>
          <target state="new">Notice that once the remote session has been created the command prompt will change to include the first 11 characters of the container id <ph id="ph1">`[2446380e-629]`</ph>.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A container can be managed very much like a physical or virtual machine.</source>
          <target state="new">A container can be managed very much like a physical or virtual machine.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Command such as <ph id="ph1">`ipconfig`</ph> to return the IP address of the container, <ph id="ph2">`mkdir`</ph> to create a directory in the container and PowerShell commands like <ph id="ph3">`Get-ChildItem`</ph> all work.</source>
          <target state="new">Command such as <ph id="ph1">`ipconfig`</ph> to return the IP address of the container, <ph id="ph2">`mkdir`</ph> to create a directory in the container and PowerShell commands like <ph id="ph3">`Get-ChildItem`</ph> all work.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Go ahead and make a change to the container such as creating a file or folder.</source>
          <target state="new">Go ahead and make a change to the container such as creating a file or folder.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For example, the following command will create a file which contains network configuration data about the container.</source>
          <target state="new">For example, the following command will create a file which contains network configuration data about the container.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>You can read the contents of the file to ensure the command completed successfully.</source>
          <target state="new">You can read the contents of the file to ensure the command completed successfully.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Notice that the IP address contained in the text file matches that of the container.</source>
          <target state="new">Notice that the IP address contained in the text file matches that of the container.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Now that the container has been modified, exit the remote PowerShell session.</source>
          <target state="new">Now that the container has been modified, exit the remote PowerShell session.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Stop the container by providing the container name to the <ph id="ph1">`Stop-Container`</ph> command.</source>
          <target state="new">Stop the container by providing the container name to the <ph id="ph1">`Stop-Container`</ph> command.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>When this command has completed, you will be back in control of the container host.</source>
          <target state="new">When this command has completed, you will be back in control of the container host.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Step 2 - Create a New Container Image</source>
          <target state="new">Step 2 - Create a New Container Image</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>An image can now be made from this container.</source>
          <target state="new">An image can now be made from this container.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>This image will behave like a snapshot of the container and can be re-deployed many times.</source>
          <target state="new">This image will behave like a snapshot of the container and can be re-deployed many times.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>To create a new image named 'newimage' use the <ph id="ph1">`New-ContainerImage`</ph> command.</source>
          <target state="new">To create a new image named 'newimage' use the <ph id="ph1">`New-ContainerImage`</ph> command.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>When using this command you will specify the container to capture, a name for the new image, and additional metadata as seen below.</source>
          <target state="new">When using this command you will specify the container to capture, a name for the new image, and additional metadata as seen below.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">`Get-ContainerImage`</ph> to return a list of Container Images.</source>
          <target state="new">Use <ph id="ph1">`Get-ContainerImage`</ph> to return a list of Container Images.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Notice that a new image with the name 'newimage' has been created.</source>
          <target state="new">Notice that a new image with the name 'newimage' has been created.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Step 3 - Create New Container From Image</source>
          <target state="new">Step 3 - Create New Container From Image</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Now that you have created a customized container image, go ahead and deploy a new container from this image.</source>
          <target state="new">Now that you have created a customized container image, go ahead and deploy a new container from this image.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Create a container named 'newcontainer' from the container image named 'newimage', output the result to a variable named '$newcontainer'.</source>
          <target state="new">Create a container named 'newcontainer' from the container image named 'newimage', output the result to a variable named '$newcontainer'.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Start the new container.</source>
          <target state="new">Start the new container.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Create a remote PowerShell session with the container.</source>
          <target state="new">Create a remote PowerShell session with the container.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Finally notice that this new container contains the ipconfig.txt file created earlier in this exercise.</source>
          <target state="new">Finally notice that this new container contains the ipconfig.txt file created earlier in this exercise.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Once you are done working with this container, exit the remote PowerShell session.</source>
          <target state="new">Once you are done working with this container, exit the remote PowerShell session.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>This exercise has shown that an image taken from a modified container will include all modifications.</source>
          <target state="new">This exercise has shown that an image taken from a modified container will include all modifications.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>While the example here was a simple file modification, the same would apply if you were to install software into the container such as a web server.</source>
          <target state="new">While the example here was a simple file modification, the same would apply if you were to install software into the container such as a web server.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Using these methods, custom images can be created that will deploy application ready containers.</source>
          <target state="new">Using these methods, custom images can be created that will deploy application ready containers.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Step 4 - Remove Containers and Container Images</source>
          <target state="new">Step 4 - Remove Containers and Container Images</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>To stop all running containers run the command below.</source>
          <target state="new">To stop all running containers run the command below.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>If any containers are in a stopped state when you run this command, you receive a warning, which is ok.</source>
          <target state="new">If any containers are in a stopped state when you run this command, you receive a warning, which is ok.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Run the following to remove all containers.</source>
          <target state="new">Run the following to remove all containers.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>To remove the container image named 'newimage', run the following.</source>
          <target state="new">To remove the container image named 'newimage', run the following.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Host a Web Server in a Container</source>
          <target state="new">Host a Web Server in a Container</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>This next example will demonstrate a more practical use case for Windows Server Containers.</source>
          <target state="new">This next example will demonstrate a more practical use case for Windows Server Containers.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The steps included in this exercise will guide you through creating a web server container image that can be used for deploying web applications hosted inside of a Windows Server Container.</source>
          <target state="new">The steps included in this exercise will guide you through creating a web server container image that can be used for deploying web applications hosted inside of a Windows Server Container.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Step 1 – Create Container from the Windows Server Core OS Image</source>
          <target state="new">Step 1 – Create Container from the Windows Server Core OS Image</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>To create a web server container image, you first need to deploy and start a container from the Windows Server Core OS image.</source>
          <target state="new">To create a web server container image, you first need to deploy and start a container from the Windows Server Core OS image.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Start the container.</source>
          <target state="new">Start the container.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>When the container is up, create a remote PowerShell session with the container.</source>
          <target state="new">When the container is up, create a remote PowerShell session with the container.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Step 2 - Install Web Server Software</source>
          <target state="new">Step 2 - Install Web Server Software</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The next step is to install the web server software.</source>
          <target state="new">The next step is to install the web server software.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>This example will use nginx for Windows.</source>
          <target state="new">This example will use nginx for Windows.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Use the following commands to automatically download and extract the nginx software to c:\nginx-1.9.3.</source>
          <target state="new">Use the following commands to automatically download and extract the nginx software to c:\nginx-1.9.3.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> that this step will require the container host to be connected to the internet.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> that this step will require the container host to be connected to the internet.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>If this step produces a connectivity or name resolution error check the network configuration of the container host.</source>
          <target state="new">If this step produces a connectivity or name resolution error check the network configuration of the container host.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Download the nginx software.</source>
          <target state="new">Download the nginx software.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Extract the nginx software.</source>
          <target state="new">Extract the nginx software.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>This is all that needs to be completed for the nginx software installation.</source>
          <target state="new">This is all that needs to be completed for the nginx software installation.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Exit the remote PowerShell session.</source>
          <target state="new">Exit the remote PowerShell session.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Stop the container using the following command.</source>
          <target state="new">Stop the container using the following command.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Step 3 - Create Image from Web Server Container</source>
          <target state="new">Step 3 - Create Image from Web Server Container</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>With the container modified to include the nginx web server software, you can now create an image from this container.</source>
          <target state="new">With the container modified to include the nginx web server software, you can now create an image from this container.</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>To do so, run the following command:</source>
          <target state="new">To do so, run the following command:</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>When completed, use the <ph id="ph1">`Get-ContainerImage`</ph> command to validate that the image has been created.</source>
          <target state="new">When completed, use the <ph id="ph1">`Get-ContainerImage`</ph> command to validate that the image has been created.</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Step 4 - Deploy Web Server Ready Container</source>
          <target state="new">Step 4 - Deploy Web Server Ready Container</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>To deploy a Windows Server Container based off of the 'nginxwindows' image, use the <ph id="ph1">`New-Container`</ph> PowerShell command.</source>
          <target state="new">To deploy a Windows Server Container based off of the 'nginxwindows' image, use the <ph id="ph1">`New-Container`</ph> PowerShell command.</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Start the container.</source>
          <target state="new">Start the container.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Create a remote PowerShell session with the new container.</source>
          <target state="new">Create a remote PowerShell session with the new container.</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Once working inside the container, the nginx web server can be started and web content staged.</source>
          <target state="new">Once working inside the container, the nginx web server can be started and web content staged.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>To start the nginx web server, change to the nginx installation directory.</source>
          <target state="new">To start the nginx web server, change to the nginx installation directory.</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Start the nginx web server.</source>
          <target state="new">Start the nginx web server.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>And exit this PS-Session.</source>
          <target state="new">And exit this PS-Session.</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The web server will keep running.</source>
          <target state="new">The web server will keep running.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Step 5 - Configure Container Networking</source>
          <target state="new">Step 5 - Configure Container Networking</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Depending on the configuration of the container host and network, a container will either receive an IP address from a DHCP server or the container host itself using network address translation (NAT).</source>
          <target state="new">Depending on the configuration of the container host and network, a container will either receive an IP address from a DHCP server or the container host itself using network address translation (NAT).</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>This guided walk through is configured to use NAT.</source>
          <target state="new">This guided walk through is configured to use NAT.</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>In this configuration a port from the container is mapped to a port on the container host.</source>
          <target state="new">In this configuration a port from the container is mapped to a port on the container host.</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The application hosted in the container is then accessed through the IP address / name of the container host.</source>
          <target state="new">The application hosted in the container is then accessed through the IP address / name of the container host.</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>For example if port 80 from the container was mapped to port 55534 on the container host, a typical http request to the application would look like this http://contianerhost:55534.</source>
          <target state="new">For example if port 80 from the container was mapped to port 55534 on the container host, a typical http request to the application would look like this http://contianerhost:55534.</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>This allows a container host to run many containers and allow for the applications in these containers to respond to requests using the same port.</source>
          <target state="new">This allows a container host to run many containers and allow for the applications in these containers to respond to requests using the same port.</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>For this lab we need to create this port mapping.</source>
          <target state="new">For this lab we need to create this port mapping.</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>In order to do so we will need to know the IP address of the container and the internal (application) and external (container host) ports that will be configured.</source>
          <target state="new">In order to do so we will need to know the IP address of the container and the internal (application) and external (container host) ports that will be configured.</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>For this example let’s keep it simple and map port 80 from the container to port 80 of the host.</source>
          <target state="new">For this example let’s keep it simple and map port 80 from the container to port 80 of the host.</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Using the <ph id="ph1">`Add-NetNatStaticMapping`</ph> command, the <ph id="ph2">`–InternalIPAddress`</ph> will be the IP address of the container which for this walkthrough should be ‘172.16.0.2’.</source>
          <target state="new">Using the <ph id="ph1">`Add-NetNatStaticMapping`</ph> command, the <ph id="ph2">`–InternalIPAddress`</ph> will be the IP address of the container which for this walkthrough should be ‘172.16.0.2’.</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>When the port mapping has been created you will also need to configure an inbound firewall rule for the configured port.</source>
          <target state="new">When the port mapping has been created you will also need to configure an inbound firewall rule for the configured port.</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>To do so for port 80 run the following command.</source>
          <target state="new">To do so for port 80 run the following command.</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>This script can be copied into the VM.</source>
          <target state="new">This script can be copied into the VM.</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Next if you are working from Azure and have not already created a Virtual Machine endpoint you will need to create one now.</source>
          <target state="new">Next if you are working from Azure and have not already created a Virtual Machine endpoint you will need to create one now.</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>For more information on Azure VM Endpoints see this article: <bpt id="p1">[</bpt>Set up Azure VM Endpoints<ept id="p1">]( https://azure.microsoft.com/en-us/documentation/articles/virtual-machines-set-up-endpoints/)</ept>.</source>
          <target state="new">For more information on Azure VM Endpoints see this article: <bpt id="p1">[</bpt>Set up Azure VM Endpoints<ept id="p1">]( https://azure.microsoft.com/en-us/documentation/articles/virtual-machines-set-up-endpoints/)</ept>.</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Step 6 – Access the Container Hosted Website</source>
          <target state="new">Step 6 – Access the Container Hosted Website</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>With the web server container created, you can now checkout the application hosted in the container.</source>
          <target state="new">With the web server container created, you can now checkout the application hosted in the container.</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>To do so, open up a browser on different machine and enter <ph id="ph1">`http://containerhost-ipaddress`</ph>.</source>
          <target state="new">To do so, open up a browser on different machine and enter <ph id="ph1">`http://containerhost-ipaddress`</ph>.</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Notice here that you will be browsing to the IP Address of the Container Host and not the container itself.</source>
          <target state="new">Notice here that you will be browsing to the IP Address of the Container Host and not the container itself.</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>If you are working from an Azure Virtual Machine this will be the public IP address or Cloud Service name.</source>
          <target state="new">If you are working from an Azure Virtual Machine this will be the public IP address or Cloud Service name.</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>If everything has been correctly configured, you will see the nginx welcome page.</source>
          <target state="new">If everything has been correctly configured, you will see the nginx welcome page.</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>At this point, feel free to update the website.</source>
          <target state="new">At this point, feel free to update the website.</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Copy in your own sample website, or use a simple ‘Hello World’ sample site that has been created for this demo.</source>
          <target state="new">Copy in your own sample website, or use a simple ‘Hello World’ sample site that has been created for this demo.</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>To use the sample you will first need to re-establish a remote PS session with the container.</source>
          <target state="new">To use the sample you will first need to re-establish a remote PS session with the container.</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>You will first need to re-create the remote PS session with the container.</source>
          <target state="new">You will first need to re-create the remote PS session with the container.</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Then run the following command to download and replace the index.html file.</source>
          <target state="new">Then run the following command to download and replace the index.html file.</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>After the website has been updated, navigate back to <ph id="ph1">`http://containerhost-ipaddress`</ph>.</source>
          <target state="new">After the website has been updated, navigate back to <ph id="ph1">`http://containerhost-ipaddress`</ph>.</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Video Walkthrough</source>
          <target state="new">Video Walkthrough</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Next Steps</source>
          <target state="new">Next Steps</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Now that you have containers set up and an introduction to the tools, go build your own containerized apps.</source>
          <target state="new">Now that you have containers set up and an introduction to the tools, go build your own containerized apps.</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Here is a more complete <bpt id="p1">[</bpt>PowerShell reference<ept id="p1">](../reference/powershell_overview.md)</ept>.</source>
          <target state="new">Here is a more complete <bpt id="p1">[</bpt>PowerShell reference<ept id="p1">](../reference/powershell_overview.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Remember, this is a <bpt id="p1">**</bpt>preview<ept id="p1">**</ept> there are bugs and we have a lot of work in progress.</source>
          <target state="new">Remember, this is a <bpt id="p1">**</bpt>preview<ept id="p1">**</ept> there are bugs and we have a lot of work in progress.</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>This page<ept id="p1">](../about/work_in_progress.md)</ept> contains many of our known issues.</source>
          <target state="new"><bpt id="p1">[</bpt>This page<ept id="p1">](../about/work_in_progress.md)</ept> contains many of our known issues.</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>We are also monitoring the <bpt id="p1">[</bpt>forums<ept id="p1">](https://social.msdn.microsoft.com/Forums/en-US/home?forum=windowscontainers)</ept> very closely.</source>
          <target state="new">We are also monitoring the <bpt id="p1">[</bpt>forums<ept id="p1">](https://social.msdn.microsoft.com/Forums/en-US/home?forum=windowscontainers)</ept> very closely.</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>There are also pre-made samples on <bpt id="p1">[</bpt>GitHub<ept id="p1">](https://github.com/Microsoft/Virtualization-Documentation/tree/master/windows-server-container-samples)</ept>.</source>
          <target state="new">There are also pre-made samples on <bpt id="p1">[</bpt>GitHub<ept id="p1">](https://github.com/Microsoft/Virtualization-Documentation/tree/master/windows-server-container-samples)</ept>.</target>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Back to Container Home<ept id="p1">](../containers_welcome.md)</ept><ph id="ph1"> </ph></source>
          <target state="new"><bpt id="p1">[</bpt>Back to Container Home<ept id="p1">](../containers_welcome.md)</ept><ph id="ph1"> </ph></target>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Known Issues for Current Release</source>
          <target state="new">Known Issues for Current Release</target>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Test -test -test</source>
          <target state="new">Test -test -test</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>