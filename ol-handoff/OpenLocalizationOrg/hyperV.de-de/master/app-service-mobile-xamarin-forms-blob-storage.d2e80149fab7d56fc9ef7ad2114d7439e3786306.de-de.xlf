<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="de-de">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b8a2c9d50fcfc194abdd1489c9dbfd0652e0e124</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1457980" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Connect to Azure Storage in your Xamarin.Forms app</source>
          <target state="new">Connect to Azure Storage in your Xamarin.Forms app</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Add images to the todo list Xamarin.Forms mobile app by connecting to Azure blob storage</source>
          <target state="new">Add images to the todo list Xamarin.Forms mobile app by connecting to Azure blob storage</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Connect to Azure Storage in your Xamarin.Forms app</source>
          <target state="new">Connect to Azure Storage in your Xamarin.Forms app</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="new">Overview</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The Azure Mobile Apps client and server SDK support offline sync of structured data with CRUD operations against the /tables endpoint.</source>
          <target state="new">The Azure Mobile Apps client and server SDK support offline sync of structured data with CRUD operations against the /tables endpoint.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Generally this data is stored in a database or similar store, and generally these data stores cannot store large binary data efficiently.</source>
          <target state="new">Generally this data is stored in a database or similar store, and generally these data stores cannot store large binary data efficiently.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Also, some applications have related data that is stored elsewhere (e.g., blob storage, files shares), and it is useful to be able to create associations between records in the /tables endpoint and other data.</source>
          <target state="new">Also, some applications have related data that is stored elsewhere (e.g., blob storage, files shares), and it is useful to be able to create associations between records in the /tables endpoint and other data.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This topic shows you how to add support for images to the Mobile Apps todo list quickstart.</source>
          <target state="new">This topic shows you how to add support for images to the Mobile Apps todo list quickstart.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You must first complete the tutorial <bpt id="p1">[</bpt><ept id="p1">Create a Xamarin.Forms app]</ept>.</source>
          <target state="new">You must first complete the tutorial <bpt id="p1">[</bpt><ept id="p1">Create a Xamarin.Forms app]</ept>.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>In this tutorial, you will create a storage account and add a connection string to your Mobile App backend.</source>
          <target state="new">In this tutorial, you will create a storage account and add a connection string to your Mobile App backend.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You will then add a new inheriting from the new Mobile Apps type <ph id="ph1">`StorageController&lt;T&gt;`</ph> to your server project.</source>
          <target state="new">You will then add a new inheriting from the new Mobile Apps type <ph id="ph1">`StorageController&lt;T&gt;`</ph> to your server project.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.TIP]</ph> This tutorial has a <bpt id="p1">[</bpt>companion sample<ept id="p1">](https://azure.microsoft.com/documentation/samples/app-service-mobile-dotnet-todo-list-files/)</ept> available, which can be deployed to your own Azure account.</source>
          <target state="new"><ph id="ph1">[AZURE.TIP]</ph> This tutorial has a <bpt id="p1">[</bpt>companion sample<ept id="p1">](https://azure.microsoft.com/documentation/samples/app-service-mobile-dotnet-todo-list-files/)</ept> available, which can be deployed to your own Azure account.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="new">Prerequisites</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>To complete this tutorial, you need the following:</source>
          <target state="new">To complete this tutorial, you need the following:</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>An active Azure account.</source>
          <target state="new">An active Azure account.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If you don't have an account, you can sign up for an Azure trial and get up to 10 free mobile apps that you can keep using even after your trial ends.</source>
          <target state="new">If you don't have an account, you can sign up for an Azure trial and get up to 10 free mobile apps that you can keep using even after your trial ends.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For details, see <bpt id="p1">[</bpt>Azure Free Trial<ept id="p1">](https://azure.microsoft.com/pricing/free-trial/)</ept>.</source>
          <target state="new">For details, see <bpt id="p1">[</bpt>Azure Free Trial<ept id="p1">](https://azure.microsoft.com/pricing/free-trial/)</ept>.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ept id="p1">Visual Studio Community 2013]</ept> or later.</source>
          <target state="new"><bpt id="p1">[</bpt><ept id="p1">Visual Studio Community 2013]</ept> or later.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>A Mac with <bpt id="p1">[</bpt>Xcode<ept id="p1">](https://go.microsoft.com/fwLink/?LinkID=266532)</ept> v7.0 or later and <bpt id="p2">[</bpt>Xamarin Studio<ept id="p2">](http://xamarin.com/download)</ept> installed.</source>
          <target state="new">A Mac with <bpt id="p1">[</bpt>Xcode<ept id="p1">](https://go.microsoft.com/fwLink/?LinkID=266532)</ept> v7.0 or later and <bpt id="p2">[</bpt>Xamarin Studio<ept id="p2">](http://xamarin.com/download)</ept> installed.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Completion of the tutorial <bpt id="p1">[</bpt><ept id="p1">Create a Xamarin.Forms app]</ept>.</source>
          <target state="new">Completion of the tutorial <bpt id="p1">[</bpt><ept id="p1">Create a Xamarin.Forms app]</ept>.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This article uses the completed app from that tutorial.</source>
          <target state="new">This article uses the completed app from that tutorial.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> If you want to get started with Azure App Service before you sign up for an Azure account, go to <bpt id="p1">[</bpt>Try App Service<ept id="p1">](https://tryappservice.azure.com/?appServiceName=mobile)</ept>.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> If you want to get started with Azure App Service before you sign up for an Azure account, go to <bpt id="p1">[</bpt>Try App Service<ept id="p1">](https://tryappservice.azure.com/?appServiceName=mobile)</ept>.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>There, you can immediately create a short-lived starter mobile app in App Service—no credit card required, and no commitments.</source>
          <target state="new">There, you can immediately create a short-lived starter mobile app in App Service—no credit card required, and no commitments.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Create a storage account</source>
          <target state="new">Create a storage account</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Create a storage account by following the tutorial <bpt id="p1">[</bpt><ept id="p1">Create an Azure Storage Account]</ept>.</source>
          <target state="new">Create a storage account by following the tutorial <bpt id="p1">[</bpt><ept id="p1">Create an Azure Storage Account]</ept>.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>In the Azure Portal, navigate to your newly created storage account and click the <bpt id="p1">**</bpt>Keys<ept id="p1">**</ept> icon.</source>
          <target state="new">In the Azure Portal, navigate to your newly created storage account and click the <bpt id="p1">**</bpt>Keys<ept id="p1">**</ept> icon.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Copy the <bpt id="p1">**</bpt>Primary Connection String<ept id="p1">**</ept>.</source>
          <target state="new">Copy the <bpt id="p1">**</bpt>Primary Connection String<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Navigate to your mobile app backend.</source>
          <target state="new">Navigate to your mobile app backend.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Under <bpt id="p1">**</bpt>All Settings<ept id="p1">**</ept> -&gt; <bpt id="p2">**</bpt>Application Settings<ept id="p2">**</ept> -&gt; <bpt id="p3">**</bpt>Connection Strings<ept id="p3">**</ept>, create a new key named <ph id="ph1">`MS_AzureStorageAccountConnectionString`</ph> and use the value copied from your storage account.</source>
          <target state="new">Under <bpt id="p1">**</bpt>All Settings<ept id="p1">**</ept> -&gt; <bpt id="p2">**</bpt>Application Settings<ept id="p2">**</ept> -&gt; <bpt id="p3">**</bpt>Connection Strings<ept id="p3">**</ept>, create a new key named <ph id="ph1">`MS_AzureStorageAccountConnectionString`</ph> and use the value copied from your storage account.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Use <bpt id="p1">**</bpt>Custom<ept id="p1">**</ept> as the key type.</source>
          <target state="new">Use <bpt id="p1">**</bpt>Custom<ept id="p1">**</ept> as the key type.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Add a storage controller to your server project</source>
          <target state="new">Add a storage controller to your server project</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>In Visual Studio, open your .NET server project.</source>
          <target state="new">In Visual Studio, open your .NET server project.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Add the NuGet package <bpt id="p1">[</bpt><ept id="p1">Microsoft.Azure.Mobile.Server.Files]</ept>.</source>
          <target state="new">Add the NuGet package <bpt id="p1">[</bpt><ept id="p1">Microsoft.Azure.Mobile.Server.Files]</ept>.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Be sure to select <bpt id="p1">**</bpt>Include prerelease<ept id="p1">**</ept>.</source>
          <target state="new">Be sure to select <bpt id="p1">**</bpt>Include prerelease<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>In Visual Studio, open your .NET server project.</source>
          <target state="new">In Visual Studio, open your .NET server project.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Right-click the <bpt id="p1">**</bpt>Controllers<ept id="p1">**</ept> folder and select <bpt id="p2">**</bpt>Add<ept id="p2">**</ept> -&gt; <bpt id="p3">**</bpt>Controller<ept id="p3">**</ept> -&gt; <bpt id="p4">**</bpt>Web API 2 Controller - Empty<ept id="p4">**</ept>.</source>
          <target state="new">Right-click the <bpt id="p1">**</bpt>Controllers<ept id="p1">**</ept> folder and select <bpt id="p2">**</bpt>Add<ept id="p2">**</ept> -&gt; <bpt id="p3">**</bpt>Controller<ept id="p3">**</ept> -&gt; <bpt id="p4">**</bpt>Web API 2 Controller - Empty<ept id="p4">**</ept>.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Name the controller <ph id="ph1">`TodoItemStorageController`</ph>.</source>
          <target state="new">Name the controller <ph id="ph1">`TodoItemStorageController`</ph>.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Add the following using statements:</source>
          <target state="new">Add the following using statements:</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Change the base class to <ph id="ph1">`StorageController`</ph>:</source>
          <target state="new">Change the base class to <ph id="ph1">`StorageController`</ph>:</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Add the following methods to the class:</source>
          <target state="new">Add the following methods to the class:</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Update the Web API configuration to set up attribute routing.</source>
          <target state="new">Update the Web API configuration to set up attribute routing.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>Startup.MobileApp.cs<ept id="p1">**</ept>, add the following line to the <ph id="ph1">`ConfigureMobileApp()`</ph> method, after the definition of the <ph id="ph2">`config`</ph> variable:</source>
          <target state="new">In <bpt id="p1">**</bpt>Startup.MobileApp.cs<ept id="p1">**</ept>, add the following line to the <ph id="ph1">`ConfigureMobileApp()`</ph> method, after the definition of the <ph id="ph2">`config`</ph> variable:</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Publish your server project to your mobile app backend.</source>
          <target state="new">Publish your server project to your mobile app backend.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Routes registered by the storage controller</source>
          <target state="new">Routes registered by the storage controller</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The new <ph id="ph1">`TodoItemStorageController`</ph> exposes two sub-resources under the record it manages:</source>
          <target state="new">The new <ph id="ph1">`TodoItemStorageController`</ph> exposes two sub-resources under the record it manages:</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>StorageToken</source>
          <target state="new">StorageToken</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>HTTP POST : Creates a storage token</source>
          <target state="new">HTTP POST : Creates a storage token</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>MobileServiceFiles</source>
          <target state="new">MobileServiceFiles</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>HTTP GET: Retrieves a list of files associated with the record</source>
          <target state="new">HTTP GET: Retrieves a list of files associated with the record</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>HTTP DELETE: Deletes the file specified in the file resource identifier</source>
          <target state="new">HTTP DELETE: Deletes the file specified in the file resource identifier</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Client and server communication</source>
          <target state="new">Client and server communication</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Note that <ph id="ph1">`TodoItemStorageController`</ph> does <bpt id="p1">*</bpt>not<ept id="p1">*</ept> have a route for uploading or downloading a blob.</source>
          <target state="new">Note that <ph id="ph1">`TodoItemStorageController`</ph> does <bpt id="p1">*</bpt>not<ept id="p1">*</ept> have a route for uploading or downloading a blob.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>That is because a mobile client interacts with blob storage <bpt id="p1">*</bpt>directly<ept id="p1">*</ept> in order to perform these operations, after first getting a SAS token (Shared Access Signature) to securely access a particular blob or container.</source>
          <target state="new">That is because a mobile client interacts with blob storage <bpt id="p1">*</bpt>directly<ept id="p1">*</ept> in order to perform these operations, after first getting a SAS token (Shared Access Signature) to securely access a particular blob or container.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>This is an important architectural design, as otherwise access to storage would be limited by the scability and availability of the mobile backend.</source>
          <target state="new">This is an important architectural design, as otherwise access to storage would be limited by the scability and availability of the mobile backend.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Instead, by connecting directly to Azure Storage, the mobile client can take advantage of its features such as auto-partitioning and geo-distribution.</source>
          <target state="new">Instead, by connecting directly to Azure Storage, the mobile client can take advantage of its features such as auto-partitioning and geo-distribution.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>A shared access signature provides delegated access to resources in your storage account.</source>
          <target state="new">A shared access signature provides delegated access to resources in your storage account.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>This means that you can grant a client limited permissions to objects in your storage account for a specified period of time and with a specified set of permissions, without having to share your account access keys.</source>
          <target state="new">This means that you can grant a client limited permissions to objects in your storage account for a specified period of time and with a specified set of permissions, without having to share your account access keys.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>To learn more, see <bpt id="p1">[</bpt><ept id="p1">Understanding Shared Access Signatures]</ept>.</source>
          <target state="new">To learn more, see <bpt id="p1">[</bpt><ept id="p1">Understanding Shared Access Signatures]</ept>.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The diagram below shows the client and server interactions.</source>
          <target state="new">The diagram below shows the client and server interactions.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Before uploading a file, the client requests a SAS token from the service.</source>
          <target state="new">Before uploading a file, the client requests a SAS token from the service.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The service uses the storage connection string to generate a new SAS, which it then returns to the client.</source>
          <target state="new">The service uses the storage connection string to generate a new SAS, which it then returns to the client.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The SAS is time-limited and restricts permissions to just a particular file or container.</source>
          <target state="new">The SAS is time-limited and restricts permissions to just a particular file or container.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The mobile client then uses this SAS and the Azure Storage client SDK to upload the file to blob storage.</source>
          <target state="new">The mobile client then uses this SAS and the Azure Storage client SDK to upload the file to blob storage.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Requesting a SAS token</source>
          <target state="new">Requesting a SAS token</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Update your client app to add image support</source>
          <target state="new">Update your client app to add image support</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Open the Xamarin.Forms quickstart project in either Visual Studio or Xamarin Studio.</source>
          <target state="new">Open the Xamarin.Forms quickstart project in either Visual Studio or Xamarin Studio.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> This tutorial only contains instructions for the Android, iOS, and Windows Store platforms, not Windows Phone.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> This tutorial only contains instructions for the Android, iOS, and Windows Store platforms, not Windows Phone.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Add NuGet packages</source>
          <target state="new">Add NuGet packages</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Right-click the solution and select <bpt id="p1">**</bpt>Manage NuGet packages for solution<ept id="p1">**</ept>.</source>
          <target state="new">Right-click the solution and select <bpt id="p1">**</bpt>Manage NuGet packages for solution<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Add the following NuGet packages to <bpt id="p1">**</bpt>all<ept id="p1">**</ept> projects in the solution.</source>
          <target state="new">Add the following NuGet packages to <bpt id="p1">**</bpt>all<ept id="p1">**</ept> projects in the solution.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Be sure to check <bpt id="p1">**</bpt>Include prerelease<ept id="p1">**</ept>.</source>
          <target state="new">Be sure to check <bpt id="p1">**</bpt>Include prerelease<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Microsoft.Azure.Mobile.Client.Files</source>
          <target state="new">Microsoft.Azure.Mobile.Client.Files</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Microsoft.Azure.Mobile.Client.SQLiteStore</source>
          <target state="new">Microsoft.Azure.Mobile.Client.SQLiteStore</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>PCLStorage</source>
          <target state="new">PCLStorage</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>For convenience, this sample uses the <bpt id="p1">[</bpt><ept id="p1">PCLStorage]</ept> library, but it is not required by the Azure Mobile Apps client SDK.</source>
          <target state="new">For convenience, this sample uses the <bpt id="p1">[</bpt><ept id="p1">PCLStorage]</ept> library, but it is not required by the Azure Mobile Apps client SDK.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Add IPlatform interface</source>
          <target state="new">Add IPlatform interface</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Create a new interface <ph id="ph1">`IPlatform`</ph> in the main portable library project.</source>
          <target state="new">Create a new interface <ph id="ph1">`IPlatform`</ph> in the main portable library project.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>This follows the <bpt id="p1">[</bpt><ept id="p1">Xamarin.Forms DependencyService]</ept> pattern to load the right platform-specific class at runtime.</source>
          <target state="new">This follows the <bpt id="p1">[</bpt><ept id="p1">Xamarin.Forms DependencyService]</ept> pattern to load the right platform-specific class at runtime.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>You will later add platform specific implementations in each of the client projects.</source>
          <target state="new">You will later add platform specific implementations in each of the client projects.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Add the following using statements:</source>
          <target state="new">Add the following using statements:</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Replace the implementation with the following:</source>
          <target state="new">Replace the implementation with the following:</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Add FileHelper class</source>
          <target state="new">Add FileHelper class</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Create a new class <ph id="ph1">`FileHelper`</ph> in the main portable library project.</source>
          <target state="new">Create a new class <ph id="ph1">`FileHelper`</ph> in the main portable library project.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Add the following using statements:</source>
          <target state="new">Add the following using statements:</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Add the class definition:</source>
          <target state="new">Add the class definition:</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Add a file sync handler</source>
          <target state="new">Add a file sync handler</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Create a new class <ph id="ph1">`TodoItemFileSyncHandler`</ph> in the main portable library project.</source>
          <target state="new">Create a new class <ph id="ph1">`TodoItemFileSyncHandler`</ph> in the main portable library project.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>This class contains callbacks from the Azure SDK to notify your code when a file is added or removed.</source>
          <target state="new">This class contains callbacks from the Azure SDK to notify your code when a file is added or removed.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The Azure Mobile Client SDK does not store actually store any file data: the client SDK invokes your implementation of <ph id="ph1">`IFileSyncHandler`</ph> which in turn determines whether and how files are stored on the local device.</source>
          <target state="new">The Azure Mobile Client SDK does not store actually store any file data: the client SDK invokes your implementation of <ph id="ph1">`IFileSyncHandler`</ph> which in turn determines whether and how files are stored on the local device.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Add the following using statements:</source>
          <target state="new">Add the following using statements:</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Replace the class definition with the following:</source>
          <target state="new">Replace the class definition with the following:</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Update TodoItemManager</source>
          <target state="new">Update TodoItemManager</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>TodoItemManager.cs<ept id="p1">**</ept>, uncomment the line <ph id="ph1">`#define OFFLINE_SYNC_ENABLED`</ph>.</source>
          <target state="new">In <bpt id="p1">**</bpt>TodoItemManager.cs<ept id="p1">**</ept>, uncomment the line <ph id="ph1">`#define OFFLINE_SYNC_ENABLED`</ph>.</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>TodoItemManager.cs<ept id="p1">**</ept>, add the following using statements:</source>
          <target state="new">In <bpt id="p1">**</bpt>TodoItemManager.cs<ept id="p1">**</ept>, add the following using statements:</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>In the constructor of <ph id="ph1">`TodoItemManager`</ph>, add the following after the call to <ph id="ph2">`DefineTable()`</ph>:</source>
          <target state="new">In the constructor of <ph id="ph1">`TodoItemManager`</ph>, add the following after the call to <ph id="ph2">`DefineTable()`</ph>:</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>In the constructor, replace the call to <ph id="ph1">`InitializeAsync`</ph> with the following.</source>
          <target state="new">In the constructor, replace the call to <ph id="ph1">`InitializeAsync`</ph> with the following.</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>This will ensure that there are callbacks when records are modified in the local store.</source>
          <target state="new">This will ensure that there are callbacks when records are modified in the local store.</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The file sync feature uses these callbacks to trigger your file sync handler.</source>
          <target state="new">The file sync feature uses these callbacks to trigger your file sync handler.</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">`SyncAsync()`</ph>, add the following after the call to <ph id="ph2">`PushAsync()`</ph>:</source>
          <target state="new">In <ph id="ph1">`SyncAsync()`</ph>, add the following after the call to <ph id="ph2">`PushAsync()`</ph>:</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Add the following methods to <ph id="ph1">`TodoItemManager`</ph>:</source>
          <target state="new">Add the following methods to <ph id="ph1">`TodoItemManager`</ph>:</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Add a details view</source>
          <target state="new">Add a details view</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>In this section, you will add a new details view for a todo item.</source>
          <target state="new">In this section, you will add a new details view for a todo item.</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The view is created when the user selects a todo item and it allows new images to be added to an item.</source>
          <target state="new">The view is created when the user selects a todo item and it allows new images to be added to an item.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Add a new class <bpt id="p1">**</bpt>TodoItemImage<ept id="p1">**</ept> to the portable library project with the following implementation:</source>
          <target state="new">Add a new class <bpt id="p1">**</bpt>TodoItemImage<ept id="p1">**</ept> to the portable library project with the following implementation:</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Edit <bpt id="p1">**</bpt>App.cs<ept id="p1">**</ept>.</source>
          <target state="new">Edit <bpt id="p1">**</bpt>App.cs<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Replace the initialization of <ph id="ph1">`MainPage`</ph> with the following:</source>
          <target state="new">Replace the initialization of <ph id="ph1">`MainPage`</ph> with the following:</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>App.cs<ept id="p1">**</ept>, add the following property:</source>
          <target state="new">In <bpt id="p1">**</bpt>App.cs<ept id="p1">**</ept>, add the following property:</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Right-click the portable library project and select <bpt id="p1">**</bpt>Add<ept id="p1">**</ept> -&gt; <bpt id="p2">**</bpt>New Item<ept id="p2">**</ept> -&gt; <bpt id="p3">**</bpt>Cross-platform<ept id="p3">**</ept> -&gt; <bpt id="p4">**</bpt>Forms Xaml Page<ept id="p4">**</ept>.</source>
          <target state="new">Right-click the portable library project and select <bpt id="p1">**</bpt>Add<ept id="p1">**</ept> -&gt; <bpt id="p2">**</bpt>New Item<ept id="p2">**</ept> -&gt; <bpt id="p3">**</bpt>Cross-platform<ept id="p3">**</ept> -&gt; <bpt id="p4">**</bpt>Forms Xaml Page<ept id="p4">**</ept>.</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Name the view <ph id="ph1">`TodoItemDetailsView`</ph>.</source>
          <target state="new">Name the view <ph id="ph1">`TodoItemDetailsView`</ph>.</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Open <bpt id="p1">**</bpt>TodoItemDetailsView.xaml<ept id="p1">**</ept> and replace the body of the ContentPage with the following:</source>
          <target state="new">Open <bpt id="p1">**</bpt>TodoItemDetailsView.xaml<ept id="p1">**</ept> and replace the body of the ContentPage with the following:</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Edit <bpt id="p1">**</bpt>TodoItemDetailsView.xaml.cs<ept id="p1">**</ept> and add the following using statements:</source>
          <target state="new">Edit <bpt id="p1">**</bpt>TodoItemDetailsView.xaml.cs<ept id="p1">**</ept> and add the following using statements:</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Replace the implementation of <ph id="ph1">`TodoItemDetailsView`</ph> with the following:</source>
          <target state="new">Replace the implementation of <ph id="ph1">`TodoItemDetailsView`</ph> with the following:</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Update the main view</source>
          <target state="new">Update the main view</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Update the main view to open the details view when a todo item is selected.</source>
          <target state="new">Update the main view to open the details view when a todo item is selected.</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>TodoList.xaml.cs<ept id="p1">**</ept>, replace the implementation of <ph id="ph1">`OnSelected`</ph> with the following:</source>
          <target state="new">In <bpt id="p1">**</bpt>TodoList.xaml.cs<ept id="p1">**</ept>, replace the implementation of <ph id="ph1">`OnSelected`</ph> with the following:</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Update the Android project</source>
          <target state="new">Update the Android project</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Add platform-specific code to the Android project, including code for downloading a file and using the camera to capture a new image.</source>
          <target state="new">Add platform-specific code to the Android project, including code for downloading a file and using the camera to capture a new image.</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>This code uses the Xamarin.Forms <bpt id="p1">[</bpt>DependencyService<ept id="p1">](https://developer.xamarin.com/guides/xamarin-forms/dependency-service/)</ept> to load the right platform-specific class at runtime.</source>
          <target state="new">This code uses the Xamarin.Forms <bpt id="p1">[</bpt>DependencyService<ept id="p1">](https://developer.xamarin.com/guides/xamarin-forms/dependency-service/)</ept> to load the right platform-specific class at runtime.</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Add the component <bpt id="p1">**</bpt>Xamarin.Mobile<ept id="p1">**</ept> to the Android project.</source>
          <target state="new">Add the component <bpt id="p1">**</bpt>Xamarin.Mobile<ept id="p1">**</ept> to the Android project.</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Add a new class <ph id="ph1">`DroidPlatform`</ph> with the following implementation.</source>
          <target state="new">Add a new class <ph id="ph1">`DroidPlatform`</ph> with the following implementation.</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Replace "YourNamespace" with the main namespace of your project.</source>
          <target state="new">Replace "YourNamespace" with the main namespace of your project.</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Edit <bpt id="p1">**</bpt>MainActivity.cs<ept id="p1">**</ept>.</source>
          <target state="new">Edit <bpt id="p1">**</bpt>MainActivity.cs<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">`OnCreate`</ph>, add the following before the call to <ph id="ph2">`LoadApplication()`</ph>:</source>
          <target state="new">In <ph id="ph1">`OnCreate`</ph>, add the following before the call to <ph id="ph2">`LoadApplication()`</ph>:</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Update the iOS project</source>
          <target state="new">Update the iOS project</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Add platform-specific code to the iOS project.</source>
          <target state="new">Add platform-specific code to the iOS project.</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Add the component <bpt id="p1">**</bpt>Xamarin.Mobile<ept id="p1">**</ept> to the iOS project.</source>
          <target state="new">Add the component <bpt id="p1">**</bpt>Xamarin.Mobile<ept id="p1">**</ept> to the iOS project.</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Add a new class <ph id="ph1">`TouchPlatform`</ph> with the following implementation.</source>
          <target state="new">Add a new class <ph id="ph1">`TouchPlatform`</ph> with the following implementation.</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Replace "YourNamespace" with the main namespace of your project.</source>
          <target state="new">Replace "YourNamespace" with the main namespace of your project.</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Edit <bpt id="p1">**</bpt>AppDelegate.cs<ept id="p1">**</ept> and uncomment the call to <ph id="ph1">`SQLitePCL.CurrentPlatform.Init()`</ph>.</source>
          <target state="new">Edit <bpt id="p1">**</bpt>AppDelegate.cs<ept id="p1">**</ept> and uncomment the call to <ph id="ph1">`SQLitePCL.CurrentPlatform.Init()`</ph>.</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Update the Windows project</source>
          <target state="new">Update the Windows project</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Install the Visual Studio extension <bpt id="p1">[</bpt>SQLite for Windows 8.1<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=716919)</ept>.</source>
          <target state="new">Install the Visual Studio extension <bpt id="p1">[</bpt>SQLite for Windows 8.1<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=716919)</ept>.</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>For more information, see the tutorial <bpt id="p1">[</bpt>Enable offline sync for your Windows app<ept id="p1">](app-service-mobile-windows-store-dotnet-get-started-offline-data.md)</ept>.</source>
          <target state="new">For more information, see the tutorial <bpt id="p1">[</bpt>Enable offline sync for your Windows app<ept id="p1">](app-service-mobile-windows-store-dotnet-get-started-offline-data.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Edit <bpt id="p1">**</bpt>Package.appxmanifest<ept id="p1">**</ept> and check the <bpt id="p2">**</bpt>Webcam<ept id="p2">**</ept> capability.</source>
          <target state="new">Edit <bpt id="p1">**</bpt>Package.appxmanifest<ept id="p1">**</ept> and check the <bpt id="p2">**</bpt>Webcam<ept id="p2">**</ept> capability.</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Add a new class <ph id="ph1">`WindowsStorePlatform`</ph> with the following implementation.</source>
          <target state="new">Add a new class <ph id="ph1">`WindowsStorePlatform`</ph> with the following implementation.</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Replace "YourNamespace" with the main namespace of your project.</source>
          <target state="new">Replace "YourNamespace" with the main namespace of your project.</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Summary</source>
          <target state="new">Summary</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>This article described how to use the new file support in the Azure Mobile client and server SDK to work with Azure Storage.</source>
          <target state="new">This article described how to use the new file support in the Azure Mobile client and server SDK to work with Azure Storage.</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Create a storage account and add the connection string to your mobile app backend.</source>
          <target state="new">Create a storage account and add the connection string to your mobile app backend.</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Only the backend has the key to Azure Storage: the mobile client requests a SAS token (Shared Access Signature) whenever it needs to access Azure Storage.</source>
          <target state="new">Only the backend has the key to Azure Storage: the mobile client requests a SAS token (Shared Access Signature) whenever it needs to access Azure Storage.</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>To learn more about SAS tokens in Azure Storage, see <bpt id="p1">[</bpt><ept id="p1">Understanding Shared Access Signatures]</ept>.</source>
          <target state="new">To learn more about SAS tokens in Azure Storage, see <bpt id="p1">[</bpt><ept id="p1">Understanding Shared Access Signatures]</ept>.</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Create a controller that subclasses <ph id="ph1">`StorageController`</ph> in order to handle the SAS token requests and to get the files that are associated with a record.</source>
          <target state="new">Create a controller that subclasses <ph id="ph1">`StorageController`</ph> in order to handle the SAS token requests and to get the files that are associated with a record.</target>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>By default, files are associated with a record by using the record ID as part of the container name; the behavior can be customized by specifying an implementation of <ph id="ph1">`IContainerNameResolver`</ph>.</source>
          <target state="new">By default, files are associated with a record by using the record ID as part of the container name; the behavior can be customized by specifying an implementation of <ph id="ph1">`IContainerNameResolver`</ph>.</target>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The SAS token policy can also be customized.</source>
          <target state="new">The SAS token policy can also be customized.</target>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The Azure Mobile Client SDK does not store actually store any file data.</source>
          <target state="new">The Azure Mobile Client SDK does not store actually store any file data.</target>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Rather, the client SDK invokes your <ph id="ph1">`IFileSyncHandler`</ph>, which then decides how (and if) files are stored on the local device.</source>
          <target state="new">Rather, the client SDK invokes your <ph id="ph1">`IFileSyncHandler`</ph>, which then decides how (and if) files are stored on the local device.</target>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The sync handler is registered as follows:</source>
          <target state="new">The sync handler is registered as follows:</target>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`MobileServiceFile`</ph> can be used either in online or offline mode, by using a <ph id="ph2">`IMobileServiceTable`</ph> or <ph id="ph3">`IMobileServiceSyncTable`</ph>, respectively.</source>
          <target state="new">A <ph id="ph1">`MobileServiceFile`</ph> can be used either in online or offline mode, by using a <ph id="ph2">`IMobileServiceTable`</ph> or <ph id="ph3">`IMobileServiceSyncTable`</ph>, respectively.</target>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>In the offline scenario, the upload will occur when the app calls <ph id="ph1">`PushFileChangesAsync`</ph>.</source>
          <target state="new">In the offline scenario, the upload will occur when the app calls <ph id="ph1">`PushFileChangesAsync`</ph>.</target>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>This causes the offline operation queue to be processed; for each file operation, the Azure Mobile client SDK will invoke the <ph id="ph1">`GetDataSource`</ph> method on the <ph id="ph2">`IFileSyncHandler`</ph> instance to retrieve the file contents for the upload.</source>
          <target state="new">This causes the offline operation queue to be processed; for each file operation, the Azure Mobile client SDK will invoke the <ph id="ph1">`GetDataSource`</ph> method on the <ph id="ph2">`IFileSyncHandler`</ph> instance to retrieve the file contents for the upload.</target>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>In order to retrieve an item's files, call the ``GetFilesAsync<ph id="ph1">` method on the  `</ph>IMobileServiceTable</source>
          <target state="new">In order to retrieve an item's files, call the ``GetFilesAsync<ph id="ph1">` method on the  `</ph>IMobileServiceTable</target>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source><ph id="ph1">` or IMobileServiceSyncTable&lt;T&gt;`</ph> instance.</source>
          <target state="new"><ph id="ph1">` or IMobileServiceSyncTable&lt;T&gt;`</ph> instance.</target>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>This method returns a list of files associated with the data item provided.</source>
          <target state="new">This method returns a list of files associated with the data item provided.</target>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>(Note: this is a <bpt id="p1">*</bpt>local<ept id="p1">*</ept> operation and will return the files based on the state of the object when it was last synchronized.</source>
          <target state="new">(Note: this is a <bpt id="p1">*</bpt>local<ept id="p1">*</ept> operation and will return the files based on the state of the object when it was last synchronized.</target>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>To get an updated list of files from the server, you should initiate a sync operation first.)</source>
          <target state="new">To get an updated list of files from the server, you should initiate a sync operation first.)</target>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>The file sync feature uses record change notifications on the local store in order to retrieve the records that the client received as part of a push or pull operation.</source>
          <target state="new">The file sync feature uses record change notifications on the local store in order to retrieve the records that the client received as part of a push or pull operation.</target>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>This is achieved by turning on local and server notifications for the sync context using the <ph id="ph1">`StoreTrackingOptions`</ph> parameter.</source>
          <target state="new">This is achieved by turning on local and server notifications for the sync context using the <ph id="ph1">`StoreTrackingOptions`</ph> parameter.</target>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>It is possible to add or remove files from a record by modifying blob storage directly, since the association is achieved through a naming convention.</source>
          <target state="new">It is possible to add or remove files from a record by modifying blob storage directly, since the association is achieved through a naming convention.</target>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>However, in this case you should always <bpt id="p1">**</bpt>update the record timestamp when the associated blobs are modified<ept id="p1">**</ept>.</source>
          <target state="new">However, in this case you should always <bpt id="p1">**</bpt>update the record timestamp when the associated blobs are modified<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>The Azure Mobile client SDK always updates a record when adding or removing a file.</source>
          <target state="new">The Azure Mobile client SDK always updates a record when adding or removing a file.</target>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The reason for this requirement is that some mobile clients will already have the record in local storage.</source>
          <target state="new">The reason for this requirement is that some mobile clients will already have the record in local storage.</target>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>When these clients perform an incremental pull, this record will not be returned and the client will not query for the new associated files.</source>
          <target state="new">When these clients perform an incremental pull, this record will not be returned and the client will not query for the new associated files.</target>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>To avoid this problem, it is recommended that you update the record timestamp when performing any blob storage change that does not use the Azure Mobile client SDK.</source>
          <target state="new">To avoid this problem, it is recommended that you update the record timestamp when performing any blob storage change that does not use the Azure Mobile client SDK.</target>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>The client project uses the <bpt id="p1">[</bpt><ept id="p1">Xamarin.Forms DependencyService]</ept> pattern to load the right platform-specific class at runtime.</source>
          <target state="new">The client project uses the <bpt id="p1">[</bpt><ept id="p1">Xamarin.Forms DependencyService]</ept> pattern to load the right platform-specific class at runtime.</target>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>In this sample, we defined an interface <ph id="ph1">`IPlatform`</ph> with implementations in each of the platform-specific projects.</source>
          <target state="new">In this sample, we defined an interface <ph id="ph1">`IPlatform`</ph> with implementations in each of the platform-specific projects.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>