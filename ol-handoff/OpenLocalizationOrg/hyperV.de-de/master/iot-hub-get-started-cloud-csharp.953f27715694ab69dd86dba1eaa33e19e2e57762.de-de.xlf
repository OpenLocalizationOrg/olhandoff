<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="de-de">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">91763b6550df984e2d38d521ccc128b66cf3b137</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Create a device identity</source>
          <target state="new">Create a device identity</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>In this section, you'll create a Windows console app that creates a new device identity in the identity registry in your IoT hub.</source>
          <target state="new">In this section, you'll create a Windows console app that creates a new device identity in the identity registry in your IoT hub.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A device cannot connect to IoT hub unless it has an entry in the device identity registry.</source>
          <target state="new">A device cannot connect to IoT hub unless it has an entry in the device identity registry.</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Refer to the <bpt id="p1">**</bpt>Device Identity Registry<ept id="p1">**</ept> section of the <bpt id="p2">[</bpt>IoT Hub Developer Guide<ept id="p2">][lnk-devguide-identity]</ept> for more information.</source>
          <target state="new">Refer to the <bpt id="p1">**</bpt>Device Identity Registry<ept id="p1">**</ept> section of the <bpt id="p2">[</bpt>IoT Hub Developer Guide<ept id="p2">][lnk-devguide-identity]</ept> for more information.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>When you run this console application, it generates a unique device ID and key that your device can identify itself with when it sends device-to-cloud messages to IoT Hub.</source>
          <target state="new">When you run this console application, it generates a unique device ID and key that your device can identify itself with when it sends device-to-cloud messages to IoT Hub.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>In Visual Studio, add a new Visual C# Windows Classic Desktop project to the current solution using the <bpt id="p1">**</bpt>Console  Application<ept id="p1">**</ept> project template.</source>
          <target state="new">In Visual Studio, add a new Visual C# Windows Classic Desktop project to the current solution using the <bpt id="p1">**</bpt>Console  Application<ept id="p1">**</ept> project template.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name the project <bpt id="p1">**</bpt>CreateDeviceIdentity<ept id="p1">**</ept>.</source>
          <target state="new">Name the project <bpt id="p1">**</bpt>CreateDeviceIdentity<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>In Solution Explorer, right-click the <bpt id="p1">**</bpt>CreateDeviceIdentity<ept id="p1">**</ept> project, and then click <bpt id="p2">**</bpt>Manage NuGet Packages<ept id="p2">**</ept>.</source>
          <target state="new">In Solution Explorer, right-click the <bpt id="p1">**</bpt>CreateDeviceIdentity<ept id="p1">**</ept> project, and then click <bpt id="p2">**</bpt>Manage NuGet Packages<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>NuGet Package Manager<ept id="p1">**</ept> window, make sure the <bpt id="p2">**</bpt>Include prerelease<ept id="p2">**</ept> option is checked.</source>
          <target state="new">In the <bpt id="p1">**</bpt>NuGet Package Manager<ept id="p1">**</ept> window, make sure the <bpt id="p2">**</bpt>Include prerelease<ept id="p2">**</ept> option is checked.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Then search for <bpt id="p1">**</bpt>Microsoft Azure Devices<ept id="p1">**</ept>, click <bpt id="p2">**</bpt>Install<ept id="p2">**</ept>, and accept the terms of use.</source>
          <target state="new">Then search for <bpt id="p1">**</bpt>Microsoft Azure Devices<ept id="p1">**</ept>, click <bpt id="p2">**</bpt>Install<ept id="p2">**</ept>, and accept the terms of use.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This downloads, installs, and adds a reference to the <bpt id="p1">[</bpt>Microsoft Azure Devices SDK<ept id="p1">][lnk-nuget-device-sdk]</ept> NuGet package.</source>
          <target state="new">This downloads, installs, and adds a reference to the <bpt id="p1">[</bpt>Microsoft Azure Devices SDK<ept id="p1">][lnk-nuget-device-sdk]</ept> NuGet package.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Add the following <ph id="ph1">`using`</ph> statements at the top of the <bpt id="p1">**</bpt>Program.cs<ept id="p1">**</ept> file:</source>
          <target state="new">Add the following <ph id="ph1">`using`</ph> statements at the top of the <bpt id="p1">**</bpt>Program.cs<ept id="p1">**</ept> file:</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Add the following fields to the <bpt id="p1">**</bpt>Program<ept id="p1">**</ept> class, replacing the placeholder value with the connection string for the IoT hub you created in the previous section:</source>
          <target state="new">Add the following fields to the <bpt id="p1">**</bpt>Program<ept id="p1">**</ept> class, replacing the placeholder value with the connection string for the IoT hub you created in the previous section:</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Add the following method to the <bpt id="p1">**</bpt>Program<ept id="p1">**</ept> class:</source>
          <target state="new">Add the following method to the <bpt id="p1">**</bpt>Program<ept id="p1">**</ept> class:</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This method creates a new device identity with ID <bpt id="p1">**</bpt>myFirstDevice<ept id="p1">**</ept> (if that device ID already exists in the registry, the code simply retrieves the existing device information).</source>
          <target state="new">This method creates a new device identity with ID <bpt id="p1">**</bpt>myFirstDevice<ept id="p1">**</ept> (if that device ID already exists in the registry, the code simply retrieves the existing device information).</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The app then displays the primary key for that identity.</source>
          <target state="new">The app then displays the primary key for that identity.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You will use this key in the simulated device to connect to your IoT hub.</source>
          <target state="new">You will use this key in the simulated device to connect to your IoT hub.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Finally, add the following lines to the <bpt id="p1">**</bpt>Main<ept id="p1">**</ept> method:</source>
          <target state="new">Finally, add the following lines to the <bpt id="p1">**</bpt>Main<ept id="p1">**</ept> method:</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Run this application, and make a note of the device key.</source>
          <target state="new">Run this application, and make a note of the device key.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> The IoT Hub identity registry only stores device identities to enable secure access to the hub.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> The IoT Hub identity registry only stores device identities to enable secure access to the hub.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>It stores device IDs and keys to use as security credentials and an enabled/disabled flag that enables you to disable access for an individual device.</source>
          <target state="new">It stores device IDs and keys to use as security credentials and an enabled/disabled flag that enables you to disable access for an individual device.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If you application needs to store other device-specific metadata, it should use an application-specific store.</source>
          <target state="new">If you application needs to store other device-specific metadata, it should use an application-specific store.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Refer to <bpt id="p1">[</bpt>IoT Hub Developer Guide<ept id="p1">][lnk-devguide-identity]</ept> for more information.</source>
          <target state="new">Refer to <bpt id="p1">[</bpt>IoT Hub Developer Guide<ept id="p1">][lnk-devguide-identity]</ept> for more information.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Receive device-to-cloud messages</source>
          <target state="new">Receive device-to-cloud messages</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>In this section, you'll create a Windows console app that reads device-to-cloud messages from IoT Hub.</source>
          <target state="new">In this section, you'll create a Windows console app that reads device-to-cloud messages from IoT Hub.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>An IoT hub exposes an <bpt id="p1">[</bpt>Event Hubs<ept id="p1">][lnk-event-hubs-overview]</ept>-compatible endpoint to enable you to read device-to-cloud messages.</source>
          <target state="new">An IoT hub exposes an <bpt id="p1">[</bpt>Event Hubs<ept id="p1">][lnk-event-hubs-overview]</ept>-compatible endpoint to enable you to read device-to-cloud messages.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>To keep things simple, this tutorial creates a basic reader that is not suitable for a high throughput deployment.</source>
          <target state="new">To keep things simple, this tutorial creates a basic reader that is not suitable for a high throughput deployment.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>Process device-to-cloud messages<ept id="p1">][lnk-processd2c-tutorial]</ept> tutorial shows you how to process device-to-cloud messages at scale and the <bpt id="p2">[</bpt>Get Started with Event Hubs<ept id="p2">][lnk-eventhubs-tutorial]</ept> tutorial provides further information on how to process messages from Event Hubs.</source>
          <target state="new">The <bpt id="p1">[</bpt>Process device-to-cloud messages<ept id="p1">][lnk-processd2c-tutorial]</ept> tutorial shows you how to process device-to-cloud messages at scale and the <bpt id="p2">[</bpt>Get Started with Event Hubs<ept id="p2">][lnk-eventhubs-tutorial]</ept> tutorial provides further information on how to process messages from Event Hubs.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>In Visual Studio, add a new Visual C# Windows Classic Desktop project to the current solution using the <bpt id="p1">**</bpt>Console  Application<ept id="p1">**</ept> project template.</source>
          <target state="new">In Visual Studio, add a new Visual C# Windows Classic Desktop project to the current solution using the <bpt id="p1">**</bpt>Console  Application<ept id="p1">**</ept> project template.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Name the project <bpt id="p1">**</bpt>ReadDeviceToCloudMessages<ept id="p1">**</ept>.</source>
          <target state="new">Name the project <bpt id="p1">**</bpt>ReadDeviceToCloudMessages<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>In Solution Explorer, right-click the <bpt id="p1">**</bpt>ReadDeviceToCloudMessages<ept id="p1">**</ept> project, and then click <bpt id="p2">**</bpt>Manage NuGet Packages<ept id="p2">**</ept>.</source>
          <target state="new">In Solution Explorer, right-click the <bpt id="p1">**</bpt>ReadDeviceToCloudMessages<ept id="p1">**</ept> project, and then click <bpt id="p2">**</bpt>Manage NuGet Packages<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>NuGet Package Manager<ept id="p1">**</ept> window, make sure the <bpt id="p2">**</bpt>Include prerelease<ept id="p2">**</ept> option is checked.</source>
          <target state="new">In the <bpt id="p1">**</bpt>NuGet Package Manager<ept id="p1">**</ept> window, make sure the <bpt id="p2">**</bpt>Include prerelease<ept id="p2">**</ept> option is checked.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Then search for <bpt id="p1">**</bpt>WindowsAzure.ServiceBus<ept id="p1">**</ept>, click <bpt id="p2">**</bpt>Install<ept id="p2">**</ept>, and accept the terms of use.</source>
          <target state="new">Then search for <bpt id="p1">**</bpt>WindowsAzure.ServiceBus<ept id="p1">**</ept>, click <bpt id="p2">**</bpt>Install<ept id="p2">**</ept>, and accept the terms of use.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This downloads, installs, and adds a reference to the <bpt id="p1">[</bpt>Azure Service Bus<ept id="p1">][lnk-servicebus-nuget]</ept>, with all its dependencies.</source>
          <target state="new">This downloads, installs, and adds a reference to the <bpt id="p1">[</bpt>Azure Service Bus<ept id="p1">][lnk-servicebus-nuget]</ept>, with all its dependencies.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Add the following <ph id="ph1">`using`</ph> statement at the top of the <bpt id="p1">**</bpt>Program.cs<ept id="p1">**</ept> file:</source>
          <target state="new">Add the following <ph id="ph1">`using`</ph> statement at the top of the <bpt id="p1">**</bpt>Program.cs<ept id="p1">**</ept> file:</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Add the following fields to the <bpt id="p1">**</bpt>Program<ept id="p1">**</ept> class, replacing the placeholder value with the connection string for the IoT hub you created in the <bpt id="p2">*</bpt>Create an IoT hub<ept id="p2">*</ept> section:</source>
          <target state="new">Add the following fields to the <bpt id="p1">**</bpt>Program<ept id="p1">**</ept> class, replacing the placeholder value with the connection string for the IoT hub you created in the <bpt id="p2">*</bpt>Create an IoT hub<ept id="p2">*</ept> section:</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Add the following method to the <bpt id="p1">**</bpt>Program<ept id="p1">**</ept> class:</source>
          <target state="new">Add the following method to the <bpt id="p1">**</bpt>Program<ept id="p1">**</ept> class:</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This method uses an <bpt id="p1">**</bpt>EventHubReceiver<ept id="p1">**</ept> instance to receive messages from all the IoT hub device-to-cloud receive partitions.</source>
          <target state="new">This method uses an <bpt id="p1">**</bpt>EventHubReceiver<ept id="p1">**</ept> instance to receive messages from all the IoT hub device-to-cloud receive partitions.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Notice how you pass a <ph id="ph1">`DateTime.Now`</ph> parameter when you create the <bpt id="p1">**</bpt>EventHubReceiver<ept id="p1">**</ept> object so that it only receives messages sent after it starts.</source>
          <target state="new">Notice how you pass a <ph id="ph1">`DateTime.Now`</ph> parameter when you create the <bpt id="p1">**</bpt>EventHubReceiver<ept id="p1">**</ept> object so that it only receives messages sent after it starts.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Finally, add the following lines to the <bpt id="p1">**</bpt>Main<ept id="p1">**</ept> method:</source>
          <target state="new">Finally, add the following lines to the <bpt id="p1">**</bpt>Main<ept id="p1">**</ept> method:</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>