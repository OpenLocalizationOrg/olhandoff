<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="pl-pl">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">acomdc_nonhi</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">74d89ee10ad10b9015992c0c450a416aec92cfac</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1457980" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Changes to the Azure AD v2.0 endpoint | Microsoft Azure</source>
          <target state="new">Changes to the Azure AD v2.0 endpoint | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>A description of changes that are being made to the app model v2.0 public preview protocols.</source>
          <target state="new">A description of changes that are being made to the app model v2.0 public preview protocols.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Important Updates to the v2.0 Authentication Protocols</source>
          <target state="new">Important Updates to the v2.0 Authentication Protocols</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Attention developers!</source>
          <target state="new">Attention developers!</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Over the next two weeks, we will be making a few updates to our v2.0 authentication protocols that may mean breaking changes for any apps you have written during our preview period.</source>
          <target state="new">Over the next two weeks, we will be making a few updates to our v2.0 authentication protocols that may mean breaking changes for any apps you have written during our preview period.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Who does this affect?</source>
          <target state="new">Who does this affect?</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Any apps that have been written to use the v2.0 converged authentication endpoint,</source>
          <target state="new">Any apps that have been written to use the v2.0 converged authentication endpoint,</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>More information on the v2.0 endpoint can be found <bpt id="p1">[</bpt>here<ept id="p1">](active-directory-appmodel-v2-overview.md)</ept>.</source>
          <target state="new">More information on the v2.0 endpoint can be found <bpt id="p1">[</bpt>here<ept id="p1">](active-directory-appmodel-v2-overview.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>If you have built an app using the v2.0 endpoint by coding directly to the v2.0 protocol, using any of our OpenID Connect or OAuth web middlewares, or using other 3rd party libraries to perform authentication, you should be prepared to test your projects and make changes if necessary.</source>
          <target state="new">If you have built an app using the v2.0 endpoint by coding directly to the v2.0 protocol, using any of our OpenID Connect or OAuth web middlewares, or using other 3rd party libraries to perform authentication, you should be prepared to test your projects and make changes if necessary.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Who doesn`t this affect?</source>
          <target state="new">Who doesn`t this affect?</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Any apps that have been written against the production Azure AD authentication endpoint,</source>
          <target state="new">Any apps that have been written against the production Azure AD authentication endpoint,</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This protocol is set in stone and will not be experiencing any changes.</source>
          <target state="new">This protocol is set in stone and will not be experiencing any changes.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Furthermore, if your app <bpt id="p1">**</bpt>only<ept id="p1">**</ept> uses our ADAL library to perform authentication, you won`t have to change anything.</source>
          <target state="new">Furthermore, if your app <bpt id="p1">**</bpt>only<ept id="p1">**</ept> uses our ADAL library to perform authentication, you won`t have to change anything.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>ADAL has shielded your app from the changes.</source>
          <target state="new">ADAL has shielded your app from the changes.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>What are the changes?</source>
          <target state="new">What are the changes?</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Removing the x5t value from JWT headers</source>
          <target state="new">Removing the x5t value from JWT headers</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The v2.0 endpoint uses JWT tokens extensively, which contain a header parameters section with relevant metadata about the token.</source>
          <target state="new">The v2.0 endpoint uses JWT tokens extensively, which contain a header parameters section with relevant metadata about the token.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If you decode the header of one of our current JWTs, you would find something like:</source>
          <target state="new">If you decode the header of one of our current JWTs, you would find something like:</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Where both the "x5t" and "kid" properties identify the public key that should be used to validate the token`s signature, as retrieved from the OpenID Connect metadata endpoint.</source>
          <target state="new">Where both the "x5t" and "kid" properties identify the public key that should be used to validate the token`s signature, as retrieved from the OpenID Connect metadata endpoint.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The change we are making here is to remove the "x5t" property.</source>
          <target state="new">The change we are making here is to remove the "x5t" property.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You may continue to use the same mechanisms to validate tokens, but should rely only on the "kid" property to retrieve the correct public key, as specified in the OpenID Connect protocol.</source>
          <target state="new">You may continue to use the same mechanisms to validate tokens, but should rely only on the "kid" property to retrieve the correct public key, as specified in the OpenID Connect protocol.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.IMPORTANT]</ph> <bpt id="p1">**</bpt>Your job: Make sure your app does not depend on the existence of the x5t value.<ept id="p1">**</ept></source>
          <target state="new"><ph id="ph1">[AZURE.IMPORTANT]</ph> <bpt id="p1">**</bpt>Your job: Make sure your app does not depend on the existence of the x5t value.<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Removing profile_info</source>
          <target state="new">Removing profile_info</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Previously, the v2.0 endpoint has been returning a base64 encoded JSON object in token responses called <ph id="ph1">`profile_info`</ph>.</source>
          <target state="new">Previously, the v2.0 endpoint has been returning a base64 encoded JSON object in token responses called <ph id="ph1">`profile_info`</ph>.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>When requesting an access token from the v2.0 endpoint by sending a request to:</source>
          <target state="new">When requesting an access token from the v2.0 endpoint by sending a request to:</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The response would look like the following JSON object:</source>
          <target state="new">The response would look like the following JSON object:</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`profile_info`</ph> value contained information about the user who signed into the app - their display name, first name, surname, email address, identifier, and so on.</source>
          <target state="new">The <ph id="ph1">`profile_info`</ph> value contained information about the user who signed into the app - their display name, first name, surname, email address, identifier, and so on.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Primarily, the <ph id="ph1">`profile_info`</ph> was used for token caching and display purposes.</source>
          <target state="new">Primarily, the <ph id="ph1">`profile_info`</ph> was used for token caching and display purposes.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>We are now removing the <ph id="ph1">`profile_info`</ph> value – but don't worry, we are still providing this information to developers in a slightly different place.</source>
          <target state="new">We are now removing the <ph id="ph1">`profile_info`</ph> value – but don't worry, we are still providing this information to developers in a slightly different place.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Instead of <ph id="ph1">`profile_info`</ph>, the v2.0 endpoint will now return an <ph id="ph2">`id_token`</ph> in each token response:</source>
          <target state="new">Instead of <ph id="ph1">`profile_info`</ph>, the v2.0 endpoint will now return an <ph id="ph2">`id_token`</ph> in each token response:</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>You may decode and parse the id_token to retrieve the same information that you received from profile_info.</source>
          <target state="new">You may decode and parse the id_token to retrieve the same information that you received from profile_info.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The id_token is a JSON Web Token (JWT), with contents as specified by OpenID Connect.</source>
          <target state="new">The id_token is a JSON Web Token (JWT), with contents as specified by OpenID Connect.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The code for doing so should be very similar – you simply need to extract the middle segment (the body) of the id_token and base64 decode it to access the JSON object within.</source>
          <target state="new">The code for doing so should be very similar – you simply need to extract the middle segment (the body) of the id_token and base64 decode it to access the JSON object within.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Over the next two weeks, you should code your app to retrieve the user information from either the <ph id="ph1">`id_token`</ph> or <ph id="ph2">`profile_info`</ph>; whichever is present.</source>
          <target state="new">Over the next two weeks, you should code your app to retrieve the user information from either the <ph id="ph1">`id_token`</ph> or <ph id="ph2">`profile_info`</ph>; whichever is present.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>That way when the change is made, your app can seamlessly handle the transition from <ph id="ph1">`profile_info`</ph> to <ph id="ph2">`id_token`</ph> without interruption.</source>
          <target state="new">That way when the change is made, your app can seamlessly handle the transition from <ph id="ph1">`profile_info`</ph> to <ph id="ph2">`id_token`</ph> without interruption.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.IMPORTANT]</ph> <bpt id="p1">**</bpt>Your job: Make sure your app does not depend on the existence of the <ph id="ph2">`profile_info`</ph> value.<ept id="p1">**</ept></source>
          <target state="new"><ph id="ph1">[AZURE.IMPORTANT]</ph> <bpt id="p1">**</bpt>Your job: Make sure your app does not depend on the existence of the <ph id="ph2">`profile_info`</ph> value.<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Removing id_token_expires_in</source>
          <target state="new">Removing id_token_expires_in</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Similar to <ph id="ph1">`profile_info`</ph>, we are also removing the <ph id="ph2">`id_token_expires_in`</ph> parameter from responses.</source>
          <target state="new">Similar to <ph id="ph1">`profile_info`</ph>, we are also removing the <ph id="ph2">`id_token_expires_in`</ph> parameter from responses.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Previously, the v2.0 endpoint would return a value for <ph id="ph1">`id_token_expires_in`</ph> along with each id_token response, for instance in an authorize response:</source>
          <target state="new">Previously, the v2.0 endpoint would return a value for <ph id="ph1">`id_token_expires_in`</ph> along with each id_token response, for instance in an authorize response:</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Or in a token response:</source>
          <target state="new">Or in a token response:</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`id_token_expires_in`</ph> value would indicate the number of seconds the id_token would remain valid for.</source>
          <target state="new">The <ph id="ph1">`id_token_expires_in`</ph> value would indicate the number of seconds the id_token would remain valid for.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Now, we are removing the <ph id="ph1">`id_token_expires_in`</ph> value completely.</source>
          <target state="new">Now, we are removing the <ph id="ph1">`id_token_expires_in`</ph> value completely.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Instead, you may use the OpenID Connect standard <ph id="ph1">`nbf`</ph> and <ph id="ph2">`exp`</ph> claims to examine the validity of an id_token.</source>
          <target state="new">Instead, you may use the OpenID Connect standard <ph id="ph1">`nbf`</ph> and <ph id="ph2">`exp`</ph> claims to examine the validity of an id_token.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>See the <bpt id="p1">[</bpt>v2.0 token reference<ept id="p1">](active-directory-v2-tokens.md)</ept> for more information on these claims.</source>
          <target state="new">See the <bpt id="p1">[</bpt>v2.0 token reference<ept id="p1">](active-directory-v2-tokens.md)</ept> for more information on these claims.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.IMPORTANT]</ph> <bpt id="p1">**</bpt>Your job: Make sure your app does not depend on the existence of the <ph id="ph2">`id_token_expires_in`</ph> value.<ept id="p1">**</ept></source>
          <target state="new"><ph id="ph1">[AZURE.IMPORTANT]</ph> <bpt id="p1">**</bpt>Your job: Make sure your app does not depend on the existence of the <ph id="ph2">`id_token_expires_in`</ph> value.<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Changing the claims returned by scope=openid</source>
          <target state="new">Changing the claims returned by scope=openid</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This change will be the most significant – in fact, it will affect almost every app that uses the v2.0 endpoint.</source>
          <target state="new">This change will be the most significant – in fact, it will affect almost every app that uses the v2.0 endpoint.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Many applications send requests to the v2.0 endpoint using the <ph id="ph1">`openid`</ph> scope, like:</source>
          <target state="new">Many applications send requests to the v2.0 endpoint using the <ph id="ph1">`openid`</ph> scope, like:</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Today, when the user grants consent for the <ph id="ph1">`openid`</ph> scope, your app receives a wealth of information about the user in the resulting id_token.</source>
          <target state="new">Today, when the user grants consent for the <ph id="ph1">`openid`</ph> scope, your app receives a wealth of information about the user in the resulting id_token.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>These claims can include their name, preferred username, email address, object ID, and more.</source>
          <target state="new">These claims can include their name, preferred username, email address, object ID, and more.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>In this update, we are changing the information that the <ph id="ph1">`openid`</ph> scope affords your app access to, to better comform with the OpenID Connect specification.</source>
          <target state="new">In this update, we are changing the information that the <ph id="ph1">`openid`</ph> scope affords your app access to, to better comform with the OpenID Connect specification.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`openid`</ph> scope will only allow your app to sign the user in, and receive an app-specific identifier for the user in the <ph id="ph2">`sub`</ph> claim of the id_token.</source>
          <target state="new">The <ph id="ph1">`openid`</ph> scope will only allow your app to sign the user in, and receive an app-specific identifier for the user in the <ph id="ph2">`sub`</ph> claim of the id_token.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The claims in an id_token with only the <ph id="ph1">`openid`</ph> scope granted will be devoid of any personally identifiable information.</source>
          <target state="new">The claims in an id_token with only the <ph id="ph1">`openid`</ph> scope granted will be devoid of any personally identifiable information.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Example id_token claims are:</source>
          <target state="new">Example id_token claims are:</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>If you want to obtain personally identifiable information (PII) about the user in your app, your app will need to request additional permissions from the user.</source>
          <target state="new">If you want to obtain personally identifiable information (PII) about the user in your app, your app will need to request additional permissions from the user.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>We are introducing support for two new scopes from the OpenID Connect spec – the <ph id="ph1">`email`</ph> and <ph id="ph2">`profile`</ph> scopes – which allow you to do so.</source>
          <target state="new">We are introducing support for two new scopes from the OpenID Connect spec – the <ph id="ph1">`email`</ph> and <ph id="ph2">`profile`</ph> scopes – which allow you to do so.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`email`</ph> scope is very straightforward – it allows your app access to the user's primary email address via the <ph id="ph2">`email`</ph> claim in the id_token.</source>
          <target state="new">The <ph id="ph1">`email`</ph> scope is very straightforward – it allows your app access to the user's primary email address via the <ph id="ph2">`email`</ph> claim in the id_token.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Note that the <ph id="ph1">`email`</ph> claim will not always be present in id_tokens – it will only be included if available in the user's profile.</source>
          <target state="new">Note that the <ph id="ph1">`email`</ph> claim will not always be present in id_tokens – it will only be included if available in the user's profile.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`profile`</ph> scope affords your app access to all other basic information about the user – their name, preferred username, object ID, and so on.</source>
          <target state="new">The <ph id="ph1">`profile`</ph> scope affords your app access to all other basic information about the user – their name, preferred username, object ID, and so on.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>This allows you to code your app in a minimal-disclosure fashion – you can ask the user for just the set of information that your app requires to do its job.</source>
          <target state="new">This allows you to code your app in a minimal-disclosure fashion – you can ask the user for just the set of information that your app requires to do its job.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>If you want to continue getting the full set of user information that your app is currently receiving, you should include all three scopes in your authorization requests:</source>
          <target state="new">If you want to continue getting the full set of user information that your app is currently receiving, you should include all three scopes in your authorization requests:</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Your app can begin sending the <ph id="ph1">`email`</ph> and <ph id="ph2">`profile`</ph> scopes immediately, and the v2.0 endpoint will accept these two scopes and begin requesting permissions from users as necessary.</source>
          <target state="new">Your app can begin sending the <ph id="ph1">`email`</ph> and <ph id="ph2">`profile`</ph> scopes immediately, and the v2.0 endpoint will accept these two scopes and begin requesting permissions from users as necessary.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>However, the change in the interpretation of the <ph id="ph1">`openid`</ph> scope will not take effect for a few weeks.</source>
          <target state="new">However, the change in the interpretation of the <ph id="ph1">`openid`</ph> scope will not take effect for a few weeks.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.IMPORTANT]</ph> <bpt id="p1">**</bpt>Your job: Add the <ph id="ph2">`profile`</ph> and <ph id="ph3">`email`</ph> scopes if your app requires information about the user.<ept id="p1">**</ept></source>
          <target state="new"><ph id="ph1">[AZURE.IMPORTANT]</ph> <bpt id="p1">**</bpt>Your job: Add the <ph id="ph2">`profile`</ph> and <ph id="ph3">`email`</ph> scopes if your app requires information about the user.<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Note that ADAL will include both of these permissions in requests by default.</source>
          <target state="new">Note that ADAL will include both of these permissions in requests by default.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Removing the issuer trailing slash.</source>
          <target state="new">Removing the issuer trailing slash.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Previously, the issuer value that appears in tokens from the v2.0 endpoint took the form</source>
          <target state="new">Previously, the issuer value that appears in tokens from the v2.0 endpoint took the form</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Where the guid was the tenantId of the Azure AD tenant which issued the token.</source>
          <target state="new">Where the guid was the tenantId of the Azure AD tenant which issued the token.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>With these changes, the issuer value becomes</source>
          <target state="new">With these changes, the issuer value becomes</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>in both tokens and in the OpenID Connect discovery document.</source>
          <target state="new">in both tokens and in the OpenID Connect discovery document.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.IMPORTANT]</ph> <bpt id="p1">**</bpt>Your job: Make sure your app accepts the issuer value both with and without a trailing slash during issuer validation.<ept id="p1">**</ept></source>
          <target state="new"><ph id="ph1">[AZURE.IMPORTANT]</ph> <bpt id="p1">**</bpt>Your job: Make sure your app accepts the issuer value both with and without a trailing slash during issuer validation.<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Why change?</source>
          <target state="new">Why change?</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The primary motivation for introducing these changes is to be compliant with the OpenID Connect standard specification.</source>
          <target state="new">The primary motivation for introducing these changes is to be compliant with the OpenID Connect standard specification.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>By being OpenID Connect compliant, we hope to minimize differences between integrating with Microsoft identity services and with other identity services in the industry.</source>
          <target state="new">By being OpenID Connect compliant, we hope to minimize differences between integrating with Microsoft identity services and with other identity services in the industry.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>We want to enable developers to use their favorite open source authentication libraries without having to alter the libraries to accommodate Microsoft differences.</source>
          <target state="new">We want to enable developers to use their favorite open source authentication libraries without having to alter the libraries to accommodate Microsoft differences.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>What can you do?</source>
          <target state="new">What can you do?</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>As of today, you can begin making all of the changes described above.</source>
          <target state="new">As of today, you can begin making all of the changes described above.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>You should immediately:</source>
          <target state="new">You should immediately:</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Remove any dependencies on the <ph id="ph1">`x5t`</ph> header parameter.</source>
          <target state="new">Remove any dependencies on the <ph id="ph1">`x5t`</ph> header parameter.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Gracefully handle the transition from <ph id="ph1">`profile_info`</ph> to <ph id="ph2">`id_token`</ph> in token responses.</source>
          <target state="new">Gracefully handle the transition from <ph id="ph1">`profile_info`</ph> to <ph id="ph2">`id_token`</ph> in token responses.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Remove any dependencies on the <ph id="ph1">`id_token_expires_in`</ph> response parameter.</source>
          <target state="new">Remove any dependencies on the <ph id="ph1">`id_token_expires_in`</ph> response parameter.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Add the <ph id="ph1">`profile`</ph> and <ph id="ph2">`email`</ph> scopes to your app if your app needs basic user information.</source>
          <target state="new">Add the <ph id="ph1">`profile`</ph> and <ph id="ph2">`email`</ph> scopes to your app if your app needs basic user information.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Accept issuer values in tokens both with and without a trailing slash.</source>
          <target state="new">Accept issuer values in tokens both with and without a trailing slash.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Our <bpt id="p1">[</bpt>v2.0 protocol documentation<ept id="p1">](active-directory-v2-protocols.md)</ept> has already been updated to reflect these changes, so you may use it as reference in helping update your code.</source>
          <target state="new">Our <bpt id="p1">[</bpt>v2.0 protocol documentation<ept id="p1">](active-directory-v2-protocols.md)</ept> has already been updated to reflect these changes, so you may use it as reference in helping update your code.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>If you have any further questions on the scope of the changes, please feel free to reach out to us on Twitter at @AzureAD.</source>
          <target state="new">If you have any further questions on the scope of the changes, please feel free to reach out to us on Twitter at @AzureAD.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>How often will protocol changes occur?</source>
          <target state="new">How often will protocol changes occur?</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>We do not foresee any further breaking changes to the authentication protocols.</source>
          <target state="new">We do not foresee any further breaking changes to the authentication protocols.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>We are intentionally bundling these changes into one release so that you won`t have to go through this type of update process again any time soon.</source>
          <target state="new">We are intentionally bundling these changes into one release so that you won`t have to go through this type of update process again any time soon.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Of course, we will continue to add features to the converged v2.0 authentication service that you can take advantage of, but those changes should be additive and not break existing code.</source>
          <target state="new">Of course, we will continue to add features to the converged v2.0 authentication service that you can take advantage of, but those changes should be additive and not break existing code.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Lastly, we would like to say thank you for trying things out during the preview period.</source>
          <target state="new">Lastly, we would like to say thank you for trying things out during the preview period.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The insights and experiences of our early adopters have been invaluable thus far, and we hope you`ll continue to share your opinions and ideas.</source>
          <target state="new">The insights and experiences of our early adopters have been invaluable thus far, and we hope you`ll continue to share your opinions and ideas.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Happy coding!</source>
          <target state="new">Happy coding!</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The Microsoft Identity Division</source>
          <target state="new">The Microsoft Identity Division</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>