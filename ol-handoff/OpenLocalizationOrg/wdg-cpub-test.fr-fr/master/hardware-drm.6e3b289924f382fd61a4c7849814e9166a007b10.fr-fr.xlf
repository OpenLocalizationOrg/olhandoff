<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-48076a9" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b76980657904bdd370cd79ecdde3d10b2823a127</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci1\audio-video-camera\hardware-drm.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>This topic provides an overview of how to add PlayReady hardware-based digital rights management (DRM) to your Universal Windows Platform (UWP) app.</source>
          <target state="new">This topic provides an overview of how to add PlayReady hardware-based digital rights management (DRM) to your Universal Windows Platform (UWP) app.</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Hardware DRM</source>
          <target state="new">Hardware DRM</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Hardware DRM</source>
          <target state="new">Hardware DRM</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>\[ Updated for UWP apps on Windows 10.</source>
          <target state="new">\[ Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This topic provides an overview of how to add PlayReady hardware-based digital rights management (DRM) to your Universal Windows Platform (UWP) app.</source>
          <target state="new">This topic provides an overview of how to add PlayReady hardware-based digital rights management (DRM) to your Universal Windows Platform (UWP) app.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  Hardware-based DRM is only supported on certain hardware with a Windows 10 version of that hardware's firmware.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  Hardware-based DRM is only supported on certain hardware with a Windows 10 version of that hardware's firmware.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Refer to the <bpt id="p1">[</bpt>PlayReady Compliance and Robustness Rules<ept id="p1">](http://www.microsoft.com/playready/licensing/compliance/)</ept> for more information on the guarantees provided.</source>
          <target state="new">Refer to the <bpt id="p1">[</bpt>PlayReady Compliance and Robustness Rules<ept id="p1">](http://www.microsoft.com/playready/licensing/compliance/)</ept> for more information on the guarantees provided.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Increasingly, content providers are moving towards hardware-based protections for granting permission to play back full high value content in apps.</source>
          <target state="new">Increasingly, content providers are moving towards hardware-based protections for granting permission to play back full high value content in apps.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Robust support for a hardware implementation of the cryptographic core has been added to PlayReady to meet this need.</source>
          <target state="new">Robust support for a hardware implementation of the cryptographic core has been added to PlayReady to meet this need.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This support enables secure playback of high definition (1080p) and ultra-high definition (UHD) content on multiple device platforms.</source>
          <target state="new">This support enables secure playback of high definition (1080p) and ultra-high definition (UHD) content on multiple device platforms.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Key material (including private keys, content keys, and any other key material used to derive or unlock said keys), and decrypted compressed and uncompressed video samples are protected by leveraging hardware security.</source>
          <target state="new">Key material (including private keys, content keys, and any other key material used to derive or unlock said keys), and decrypted compressed and uncompressed video samples are protected by leveraging hardware security.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Windows TEE Implementation</source>
          <target state="new">Windows TEE Implementation</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This topic provides a brief overview of how Windows 10 implements the trusted execution environment.</source>
          <target state="new">This topic provides a brief overview of how Windows 10 implements the trusted execution environment.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The details of the Windows TEE implementation is out of scope for this document.</source>
          <target state="new">The details of the Windows TEE implementation is out of scope for this document.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>However, a brief discussion of the difference between the standard porting kit TEE port and the Windows port will be beneficial.</source>
          <target state="new">However, a brief discussion of the difference between the standard porting kit TEE port and the Windows port will be beneficial.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Windows implements the OEM proxy layer and transfers the serialized PRITEE functions calls to a user mode driver in the Windows Media Foundation subsystem.</source>
          <target state="new">Windows implements the OEM proxy layer and transfers the serialized PRITEE functions calls to a user mode driver in the Windows Media Foundation subsystem.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This will eventually get routed to either the Windows TrEE (Trusted Execution Environment) driver or the OEM’s graphics driver.</source>
          <target state="new">This will eventually get routed to either the Windows TrEE (Trusted Execution Environment) driver or the OEM’s graphics driver.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The details of either of these approaches is out of scope for this document.</source>
          <target state="new">The details of either of these approaches is out of scope for this document.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The following diagram shows the general component interaction for the Windows port.</source>
          <target state="new">The following diagram shows the general component interaction for the Windows port.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If you want to develop a Windows PlayReady TEE implementation, you can contact <bpt id="p1">&lt;</bpt>WMLA@Microsoft.com<ept id="p1">&gt;</ept>.</source>
          <target state="new">If you want to develop a Windows PlayReady TEE implementation, you can contact <bpt id="p1">&lt;</bpt>WMLA@Microsoft.com<ept id="p1">&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>windows tee component diagram</source>
          <target state="new">windows tee component diagram</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Considerations for Using Hardware DRM</source>
          <target state="new">Considerations for Using Hardware DRM</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This topic provides a brief list of things that should be considered when developing apps designed to use hardware DRM.</source>
          <target state="new">This topic provides a brief list of things that should be considered when developing apps designed to use hardware DRM.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Protected Media Process (PMP) is not supported.</source>
          <target state="new">Protected Media Process (PMP) is not supported.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Output protection level (OPL) 270 support (no down resolution).</source>
          <target state="new">Output protection level (OPL) 270 support (no down resolution).</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Microsoft recommends that high definition content for hardware DRM have an OPL greater than 270 (although it is not required).</source>
          <target state="new">Microsoft recommends that high definition content for hardware DRM have an OPL greater than 270 (although it is not required).</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>An OPL of greater than 270 means HDCP is required.</source>
          <target state="new">An OPL of greater than 270 means HDCP is required.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Additionally, Microsoft recommends you set HDCP type 1 (version 2.2 or later).</source>
          <target state="new">Additionally, Microsoft recommends you set HDCP type 1 (version 2.2 or later).</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Unlike software DRM, output protections are enforced on all monitors based on the least capable monitor.</source>
          <target state="new">Unlike software DRM, output protections are enforced on all monitors based on the least capable monitor.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For example, if the user has two monitors connected where one of the monitors supports HDCP and the other does not, playback will fail if the license requires HDCP even if the content is only being rendered on the monitor that supports HDCP.</source>
          <target state="new">For example, if the user has two monitors connected where one of the monitors supports HDCP and the other does not, playback will fail if the license requires HDCP even if the content is only being rendered on the monitor that supports HDCP.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>In software DRM, content would play back as long as it is only being rendered on the monitor that supports HDCP.</source>
          <target state="new">In software DRM, content would play back as long as it is only being rendered on the monitor that supports HDCP.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Hardware DRM is not guaranteed to be used by the client and secure unless the following conditions are met by the content keys and licenses:</source>
          <target state="new">Hardware DRM is not guaranteed to be used by the client and secure unless the following conditions are met by the content keys and licenses:</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Audio must be in the clear or be encrypted to a different content key than video.</source>
          <target state="new">Audio must be in the clear or be encrypted to a different content key than video.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Microsoft recommends that the audio be in the clear to improve playback performance.</source>
          <target state="new">Microsoft recommends that the audio be in the clear to improve playback performance.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The license used for the video content key must have a security level of 3000.</source>
          <target state="new">The license used for the video content key must have a security level of 3000.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Multiple graphics processing units (GPUs) are not supported for persistent licenses.</source>
          <target state="new">Multiple graphics processing units (GPUs) are not supported for persistent licenses.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>To handle persistent licenses on machines with multiple GPUs, consider the following scenario:</source>
          <target state="new">To handle persistent licenses on machines with multiple GPUs, consider the following scenario:</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>A customer buys a new machine with an integrated graphics card.</source>
          <target state="new">A customer buys a new machine with an integrated graphics card.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The customer uses an app that acquires persistent licenses while using hardware DRM.</source>
          <target state="new">The customer uses an app that acquires persistent licenses while using hardware DRM.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The persistent license is now bound to that graphics card’s hardware keys.</source>
          <target state="new">The persistent license is now bound to that graphics card’s hardware keys.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The customer then installs a new graphics card.</source>
          <target state="new">The customer then installs a new graphics card.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>All licenses in the hashed data store (HDS) are bound to the integrated video card, but the customer now wants to play back protected content using the newly-installed graphics card.</source>
          <target state="new">All licenses in the hashed data store (HDS) are bound to the integrated video card, but the customer now wants to play back protected content using the newly-installed graphics card.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>In order to prevent playback from failing because the licenses can’t be decrypted by the hardware, PlayReady uses a separate hashed data store (HDS) for each graphics card that it encounters.</source>
          <target state="new">In order to prevent playback from failing because the licenses can’t be decrypted by the hardware, PlayReady uses a separate hashed data store (HDS) for each graphics card that it encounters.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>This will cause PlayReady to attempt license acquisition for a piece of content where PlayReady would normally already have a license (that is, in the software DRM case or any case without a hardware change, PlayReady wouldn’t need to reacquire a license).</source>
          <target state="new">This will cause PlayReady to attempt license acquisition for a piece of content where PlayReady would normally already have a license (that is, in the software DRM case or any case without a hardware change, PlayReady wouldn’t need to reacquire a license).</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Therefore, if the app acquires a persistent license while using hardware DRM, your app needs to be able to handle the case where that license is effectively “lost” if the end user installs (or uninstalls) a graphics card.</source>
          <target state="new">Therefore, if the app acquires a persistent license while using hardware DRM, your app needs to be able to handle the case where that license is effectively “lost” if the end user installs (or uninstalls) a graphics card.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Because this is not a common scenario, you may decide to handle the support calls when the content no longer plays after a hardware change rather than figure out how to deal with a hardware change in the client/server code.</source>
          <target state="new">Because this is not a common scenario, you may decide to handle the support calls when the content no longer plays after a hardware change rather than figure out how to deal with a hardware change in the client/server code.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Override Hardware DRM</source>
          <target state="new">Override Hardware DRM</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>This section describes how to override hardware DRM if the content to be played back does not support hardware DRM.</source>
          <target state="new">This section describes how to override hardware DRM if the content to be played back does not support hardware DRM.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>By default, hardware DRM is used if the system supports it.</source>
          <target state="new">By default, hardware DRM is used if the system supports it.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>However, some content is not supported in hardware DRM.</source>
          <target state="new">However, some content is not supported in hardware DRM.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>One example of this is Cocktail content.</source>
          <target state="new">One example of this is Cocktail content.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Another example is any content that uses a video codec other than H.264 and HEVC.</source>
          <target state="new">Another example is any content that uses a video codec other than H.264 and HEVC.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Another example is HEVC content, as some hardware DRM will support HEVC and some will not.</source>
          <target state="new">Another example is HEVC content, as some hardware DRM will support HEVC and some will not.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Therefore, if you want to play a piece of content and hardware DRM doesn’t support it on the system in question, you may want to opt out of hardware DRM.</source>
          <target state="new">Therefore, if you want to play a piece of content and hardware DRM doesn’t support it on the system in question, you may want to opt out of hardware DRM.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The following example shows how to opt-out of hardware DRM.</source>
          <target state="new">The following example shows how to opt-out of hardware DRM.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>You only need to do this before you switch.</source>
          <target state="new">You only need to do this before you switch.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Also, make sure you don’t have any PlayReady object in memory, otherwise behavior is undefined.</source>
          <target state="new">Also, make sure you don’t have any PlayReady object in memory, otherwise behavior is undefined.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>To switch back to hardware DRM, set the <bpt id="p1">**</bpt>SoftwareOverride<ept id="p1">**</ept> value to <bpt id="p2">**</bpt>0<ept id="p2">**</ept>.</source>
          <target state="new">To switch back to hardware DRM, set the <bpt id="p1">**</bpt>SoftwareOverride<ept id="p1">**</ept> value to <bpt id="p2">**</bpt>0<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>For every media playback, you need to set <bpt id="p1">**</bpt>MediaProtectionManager<ept id="p1">**</ept> to:</source>
          <target state="new">For every media playback, you need to set <bpt id="p1">**</bpt>MediaProtectionManager<ept id="p1">**</ept> to:</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The best way to tell if you are in hardware DRM or software DRM is look at C:\\Users\\<ph id="ph1">&amp;lt;</ph>username<ph id="ph2">&amp;gt;</ph>\\AppData\\Local\\Packages\\<ph id="ph3">&amp;lt;</ph>application name<ph id="ph4">&amp;gt;</ph>\\LocalState\\PlayReady\\\*</source>
          <target state="new">The best way to tell if you are in hardware DRM or software DRM is look at C:\\Users\\<ph id="ph1">&amp;lt;</ph>username<ph id="ph2">&amp;gt;</ph>\\AppData\\Local\\Packages\\<ph id="ph3">&amp;lt;</ph>application name<ph id="ph4">&amp;gt;</ph>\\LocalState\\PlayReady\\\*</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>If there is an mspr.hds file, then you are in software DRM.</source>
          <target state="new">If there is an mspr.hds file, then you are in software DRM.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>If you have another \*.hds file, then you are in hardware DRM.</source>
          <target state="new">If you have another \*.hds file, then you are in hardware DRM.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>You can delete the entire PlayReady folder and retry your test as well.</source>
          <target state="new">You can delete the entire PlayReady folder and retry your test as well.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Detect the Type of Hardware DRM</source>
          <target state="new">Detect the Type of Hardware DRM</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>This section describes how to detect what type of hardware DRM is supported on the system.</source>
          <target state="new">This section describes how to detect what type of hardware DRM is supported on the system.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PlayReadyStatics.CheckSupportedHardware<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn986441)</ept> method to determine whether the system supports a specific hardware digital rights management (DRM) feature.</source>
          <target state="new">You can use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PlayReadyStatics.CheckSupportedHardware<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn986441)</ept> method to determine whether the system supports a specific hardware digital rights management (DRM) feature.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="new">For example:</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PlayReadyHardwareDRMFeatures<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn986265)</ept> enumeration contains the valid list of hardware DRM feature values that can be queried.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PlayReadyHardwareDRMFeatures<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn986265)</ept> enumeration contains the valid list of hardware DRM feature values that can be queried.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>To determine if hardware DRM is supported, use the <bpt id="p1">**</bpt>HardwareDRM<ept id="p1">**</ept> member in the query.</source>
          <target state="new">To determine if hardware DRM is supported, use the <bpt id="p1">**</bpt>HardwareDRM<ept id="p1">**</ept> member in the query.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>To determine if the hardware supports the High Efficiency Video Coding (HEVC)/H.265 codec, use the <bpt id="p1">**</bpt>HEVC<ept id="p1">**</ept> member in the query.</source>
          <target state="new">To determine if the hardware supports the High Efficiency Video Coding (HEVC)/H.265 codec, use the <bpt id="p1">**</bpt>HEVC<ept id="p1">**</ept> member in the query.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>You can also use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PlayReadyStatics.PlayReadyCertificateSecurityLevel<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/windows.media.protection.playready.playreadystatics.playreadycertificatesecuritylevel.aspx)</ept> property to get the security level of the client certificate to determine if hardware DRM is supported.</source>
          <target state="new">You can also use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PlayReadyStatics.PlayReadyCertificateSecurityLevel<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/windows.media.protection.playready.playreadystatics.playreadycertificatesecuritylevel.aspx)</ept> property to get the security level of the client certificate to determine if hardware DRM is supported.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Unless the returned certificate security level is greater than or equal to 3000, either the client is not individualized or provisioned (in which case this property returns 0) or hardware DRM is not in use (in which case this property returns a value that is less than 3000).</source>
          <target state="new">Unless the returned certificate security level is greater than or equal to 3000, either the client is not individualized or provisioned (in which case this property returns 0) or hardware DRM is not in use (in which case this property returns a value that is less than 3000).</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>