<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-48076a9" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d48ef3c3b2efe745a30c0dd217d81a8c12c4f2c5</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci1\audio-video-camera\capture-photos-and-video-with-mediacapture.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>This article describes the steps for capturing photos and video using the MediaCapture API, including initializing and shutting down the MediaCapture and handling changes in device orientation.</source>
          <target state="new">This article describes the steps for capturing photos and video using the MediaCapture API, including initializing and shutting down the MediaCapture and handling changes in device orientation.</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Capture photos and video with MediaCapture</source>
          <target state="new">Capture photos and video with MediaCapture</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Capture photos and video with MediaCapture</source>
          <target state="new">Capture photos and video with MediaCapture</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>\[ Updated for UWP apps on Windows 10.</source>
          <target state="new">\[ Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This article describes the steps for capturing photos and video using the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MediaCapture<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br241124)</ept> API, including initializing and shutting down the <bpt id="p3">**</bpt>MediaCapture<ept id="p3">**</ept> and handling changes in device orientation.</source>
          <target state="new">This article describes the steps for capturing photos and video using the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MediaCapture<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br241124)</ept> API, including initializing and shutting down the <bpt id="p3">**</bpt>MediaCapture<ept id="p3">**</ept> and handling changes in device orientation.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>MediaCapture<ept id="p1">**</ept> is provided to support apps that require low-level control of the media capture process and that implement scenarios that require advanced capture capabilities.</source>
          <target state="new"><bpt id="p1">**</bpt>MediaCapture<ept id="p1">**</ept> is provided to support apps that require low-level control of the media capture process and that implement scenarios that require advanced capture capabilities.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Using <bpt id="p1">**</bpt>MediaCapture<ept id="p1">**</ept> also requires you to provide your own capture UI.</source>
          <target state="new">Using <bpt id="p1">**</bpt>MediaCapture<ept id="p1">**</ept> also requires you to provide your own capture UI.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>If your app only needs to capture a photo or video and is unconcerned with advanced capture techniques, the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CameraCaptureUI<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br241030)</ept> makes it easy to capture a photo or video with only a few lines of code.</source>
          <target state="new">If your app only needs to capture a photo or video and is unconcerned with advanced capture techniques, the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CameraCaptureUI<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br241030)</ept> makes it easy to capture a photo or video with only a few lines of code.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Capture photos and video with CameraCaptureUI<ept id="p1">](capture-photos-and-video-with-cameracaptureui.md)</ept>.</source>
          <target state="new">For more information, see <bpt id="p1">[</bpt>Capture photos and video with CameraCaptureUI<ept id="p1">](capture-photos-and-video-with-cameracaptureui.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The code in this article was adapted from the <bpt id="p1">[</bpt>CameraStarterKit sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=619479)</ept>.</source>
          <target state="new">The code in this article was adapted from the <bpt id="p1">[</bpt>CameraStarterKit sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=619479)</ept>.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You can download the sample to see the code used in context or to use the sample as a starting point for your own app.</source>
          <target state="new">You can download the sample to see the code used in context or to use the sample as a starting point for your own app.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Configure your project</source>
          <target state="new">Configure your project</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Add capability declarations to the app manifest</source>
          <target state="new">Add capability declarations to the app manifest</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>In order for your app to access a device's camera, you must declare that your app uses the <bpt id="p1">*</bpt>webcam<ept id="p1">*</ept> and <bpt id="p2">*</bpt>microphone<ept id="p2">*</ept> device capabilities.</source>
          <target state="new">In order for your app to access a device's camera, you must declare that your app uses the <bpt id="p1">*</bpt>webcam<ept id="p1">*</ept> and <bpt id="p2">*</bpt>microphone<ept id="p2">*</ept> device capabilities.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If you want to save captured photos and videos to the users's Pictures or Videos library, you must also declare the <bpt id="p1">*</bpt>picturesLibrary<ept id="p1">*</ept> and <bpt id="p2">*</bpt>videosLibrary<ept id="p2">*</ept> capability.</source>
          <target state="new">If you want to save captured photos and videos to the users's Pictures or Videos library, you must also declare the <bpt id="p1">*</bpt>picturesLibrary<ept id="p1">*</ept> and <bpt id="p2">*</bpt>videosLibrary<ept id="p2">*</ept> capability.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Add capabilities to the app manifest</source>
          <target state="new">Add capabilities to the app manifest</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>In Microsoft Visual Studio, in <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, open the designer for the application manifest by double-clicking the <bpt id="p2">**</bpt>package.appxmanifest<ept id="p2">**</ept> item.</source>
          <target state="new">In Microsoft Visual Studio, in <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, open the designer for the application manifest by double-clicking the <bpt id="p2">**</bpt>package.appxmanifest<ept id="p2">**</ept> item.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Select the <bpt id="p1">**</bpt>Capabilities<ept id="p1">**</ept> tab.</source>
          <target state="new">Select the <bpt id="p1">**</bpt>Capabilities<ept id="p1">**</ept> tab.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Check the box for <bpt id="p1">**</bpt>Webcam<ept id="p1">**</ept> and the box for <bpt id="p2">**</bpt>Microphone<ept id="p2">**</ept>.</source>
          <target state="new">Check the box for <bpt id="p1">**</bpt>Webcam<ept id="p1">**</ept> and the box for <bpt id="p2">**</bpt>Microphone<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For access to the Pictures and Videos library check the boxes for <bpt id="p1">**</bpt>Pictures Library<ept id="p1">**</ept> and the box for <bpt id="p2">**</bpt>Videos Library<ept id="p2">**</ept>.</source>
          <target state="new">For access to the Pictures and Videos library check the boxes for <bpt id="p1">**</bpt>Pictures Library<ept id="p1">**</ept> and the box for <bpt id="p2">**</bpt>Videos Library<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Add using directives for media capture-related APIs</source>
          <target state="new">Add using directives for media capture-related APIs</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The following code listing shows the namespaces that are referenced by the sample code in this article and describes what functionality each namespace provides.</source>
          <target state="new">The following code listing shows the namespaces that are referenced by the sample code in this article and describes what functionality each namespace provides.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Using</source>
          <target state="new">Using</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Initialize the MediaCapture object</source>
          <target state="new">Initialize the MediaCapture object</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MediaCapture<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br241124)</ept> class in the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Windows.Media.Capture<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br226738)</ept> namespace is the fundamental interface for all media capture operations.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MediaCapture<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br241124)</ept> class in the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Windows.Media.Capture<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br226738)</ept> namespace is the fundamental interface for all media capture operations.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Apps typically declare a variable of this type scoped to a single page.</source>
          <target state="new">Apps typically declare a variable of this type scoped to a single page.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Your app needs to track the current state of the <bpt id="p1">**</bpt>MediaCapture<ept id="p1">**</ept>, so you should declare boolean variables for the initialization, previewing, and recording state of the object.</source>
          <target state="new">Your app needs to track the current state of the <bpt id="p1">**</bpt>MediaCapture<ept id="p1">**</ept>, so you should declare boolean variables for the initialization, previewing, and recording state of the object.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>MediaCaptureVariables</source>
          <target state="new">MediaCaptureVariables</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>To help orient the preview video correctly, create member variables to track whether the camera is external and whether the app is currently mirroring the preview stream.</source>
          <target state="new">To help orient the preview video correctly, create member variables to track whether the camera is external and whether the app is currently mirroring the preview stream.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Your app should mirror the preview stream when you think the video feed is capturing the user because that is a more natural user experience.</source>
          <target state="new">Your app should mirror the preview stream when you think the video feed is capturing the user because that is a more natural user experience.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>PreviewVariables</source>
          <target state="new">PreviewVariables</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The following example method initializes the media capture object.</source>
          <target state="new">The following example method initializes the media capture object.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>First, the code searches for a video capture device that can be used for media capture.</source>
          <target state="new">First, the code searches for a video capture device that can be used for media capture.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Once found, the <bpt id="p1">**</bpt>MediaCapture<ept id="p1">**</ept> object is initialized and handlers for its events are registered.</source>
          <target state="new">Once found, the <bpt id="p1">**</bpt>MediaCapture<ept id="p1">**</ept> object is initialized and handlers for its events are registered.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Next a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MediaCaptureInitializationSettings<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/hh802710)</ept> object is created using the ID of the video capture device.</source>
          <target state="new">Next a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MediaCaptureInitializationSettings<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/hh802710)</ept> object is created using the ID of the video capture device.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>MediaCapture<ept id="p1">**</ept> is then initialized with a call to <bpt id="p2">[</bpt><bpt id="p3">**</bpt>InitializeAsync<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br226598)</ept>.</source>
          <target state="new">The <bpt id="p1">**</bpt>MediaCapture<ept id="p1">**</ept> is then initialized with a call to <bpt id="p2">[</bpt><bpt id="p3">**</bpt>InitializeAsync<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br226598)</ept>.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>InitializeCameraAsync</source>
          <target state="new">InitializeCameraAsync</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DeviceInformation.FindAllAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br225432)</ept> method can be used to find all devices of a specified type.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DeviceInformation.FindAllAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br225432)</ept> method can be used to find all devices of a specified type.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>In this example, the <bpt id="p1">**</bpt>DeviceClass.VideoCapture<ept id="p1">**</ept> enumeration value is passed in to indicate that only video capture devices should be returned.</source>
          <target state="new">In this example, the <bpt id="p1">**</bpt>DeviceClass.VideoCapture<ept id="p1">**</ept> enumeration value is passed in to indicate that only video capture devices should be returned.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Note that a video capture device is used for capturing both photos and videos.</source>
          <target state="new">Note that a video capture device is used for capturing both photos and videos.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>FindAllAsync<ept id="p1">**</ept> returns a <bpt id="p2">[</bpt><bpt id="p3">**</bpt>DeviceInformationCollection<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br225395)</ept> object that contains a <bpt id="p4">[</bpt><bpt id="p5">**</bpt>DeviceInformation<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/br225393)</ept> object for each found device of the requested type.</source>
          <target state="new"><bpt id="p1">**</bpt>FindAllAsync<ept id="p1">**</ept> returns a <bpt id="p2">[</bpt><bpt id="p3">**</bpt>DeviceInformationCollection<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br225395)</ept> object that contains a <bpt id="p4">[</bpt><bpt id="p5">**</bpt>DeviceInformation<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/br225393)</ept> object for each found device of the requested type.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>FirstOrDefault<ept id="p1">**</ept> extension method from the <bpt id="p2">**</bpt>System.Linq<ept id="p2">**</ept> namespace provides an easy syntax for selecting an item from a list based on specified conditions.</source>
          <target state="new">The <bpt id="p1">**</bpt>FirstOrDefault<ept id="p1">**</ept> extension method from the <bpt id="p2">**</bpt>System.Linq<ept id="p2">**</ept> namespace provides an easy syntax for selecting an item from a list based on specified conditions.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The first call attempts to select the first <bpt id="p1">**</bpt>DeviceInformation<ept id="p1">**</ept> in the list that has an <bpt id="p2">[</bpt><bpt id="p3">**</bpt>EnclosureLocation.Panel<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br229906)</ept> value of <bpt id="p4">**</bpt>Panel.Back<ept id="p4">**</ept>, indicating that the camera is on the back panel of the device's enclosure.</source>
          <target state="new">The first call attempts to select the first <bpt id="p1">**</bpt>DeviceInformation<ept id="p1">**</ept> in the list that has an <bpt id="p2">[</bpt><bpt id="p3">**</bpt>EnclosureLocation.Panel<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br229906)</ept> value of <bpt id="p4">**</bpt>Panel.Back<ept id="p4">**</ept>, indicating that the camera is on the back panel of the device's enclosure.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>If the device does not have a camera on the back panel, the first available camera is used.</source>
          <target state="new">If the device does not have a camera on the back panel, the first available camera is used.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>If you do not specify a device ID when you initialize the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MediaCaptureInitializationSettings<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226573)</ept>, the system will choose the first device in its internal list of devices.</source>
          <target state="new">If you do not specify a device ID when you initialize the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MediaCaptureInitializationSettings<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226573)</ept>, the system will choose the first device in its internal list of devices.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The call to <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MediaCapture.InitializeAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226598)</ept> initializes the object to use the specified capture device.</source>
          <target state="new">The call to <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MediaCapture.InitializeAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226598)</ept> initializes the object to use the specified capture device.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>This call is made inside a <bpt id="p1">**</bpt>try<ept id="p1">**</ept> block because it will throw an <bpt id="p2">**</bpt>UnauthorizedAccessException<ept id="p2">**</ept> if the user has denied the calling app access to the camera.</source>
          <target state="new">This call is made inside a <bpt id="p1">**</bpt>try<ept id="p1">**</ept> block because it will throw an <bpt id="p2">**</bpt>UnauthorizedAccessException<ept id="p2">**</ept> if the user has denied the calling app access to the camera.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>If the call succeeds, the <bpt id="p1">**</bpt>\_isInitialized<ept id="p1">**</ept> variable is set to true so that subsequent method calls can determine if the capture device has been initialized.</source>
          <target state="new">If the call succeeds, the <bpt id="p1">**</bpt>\_isInitialized<ept id="p1">**</ept> variable is set to true so that subsequent method calls can determine if the capture device has been initialized.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>If the initialization of the capture device is successful, variables are set to reflect whether the capture device is external, or if it is on the front panel of the device.</source>
          <target state="new">If the initialization of the capture device is successful, variables are set to reflect whether the capture device is external, or if it is on the front panel of the device.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>These values will be used to orient the capture preview correctly for the user.</source>
          <target state="new">These values will be used to orient the capture preview correctly for the user.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Finally, the UI is updated to reflect that capture is available and the preview stream from the capture device is started.</source>
          <target state="new">Finally, the UI is updated to reflect that capture is available and the preview stream from the capture device is started.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>All of these tasks are performed in helper methods that will be described later in this article.</source>
          <target state="new">All of these tasks are performed in helper methods that will be described later in this article.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Start the capture preview</source>
          <target state="new">Start the capture preview</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>For the user to be able to see what they are capturing, you need to provide a preview of what the video capture device is currently seeing in your UI.</source>
          <target state="new">For the user to be able to see what they are capturing, you need to provide a preview of what the video capture device is currently seeing in your UI.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Important<ept id="p1">**</ept> You must start the capture preview in order for the capture device to enable auto focus, auto exposure, and auto white balance.</source>
          <target state="new"><bpt id="p1">**</bpt>Important<ept id="p1">**</ept> You must start the capture preview in order for the capture device to enable auto focus, auto exposure, and auto white balance.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CaptureElement<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br209278)</ept> control is provided to enable capture preview.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CaptureElement<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br209278)</ept> control is provided to enable capture preview.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The following shows example XAML code that defines the capture element.</source>
          <target state="new">The following shows example XAML code that defines the capture element.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>CaptureElement</source>
          <target state="new">CaptureElement</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Users expect that the screen will stay on while they are previewing the video capture screen and not turn off due to inactivity.</source>
          <target state="new">Users expect that the screen will stay on while they are previewing the video capture screen and not turn off due to inactivity.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>To enable this, you must create a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DisplayRequest<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br241816)</ept> object.</source>
          <target state="new">To enable this, you must create a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DisplayRequest<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br241816)</ept> object.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Declare this variable with page scope so that it persists throughout the capture session.</source>
          <target state="new">Declare this variable with page scope so that it persists throughout the capture session.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>DisplayRequest</source>
          <target state="new">DisplayRequest</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The following method starts up the media capture preview.</source>
          <target state="new">The following method starts up the media capture preview.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>First, it requests that the display remain active by calling <bpt id="p1">[</bpt><bpt id="p2">**</bpt>RequestActive<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br241818)</ept> on the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>DisplayRequest<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br241816)</ept>.</source>
          <target state="new">First, it requests that the display remain active by calling <bpt id="p1">[</bpt><bpt id="p2">**</bpt>RequestActive<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br241818)</ept> on the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>DisplayRequest<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br241816)</ept>.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Next, the preview is started by calling <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StartPreviewAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226613)</ept>.</source>
          <target state="new">Next, the preview is started by calling <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StartPreviewAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226613)</ept>.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>StartPreviewAsync</source>
          <target state="new">StartPreviewAsync</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>RequestActive<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br241818)</ept> method is called on the <bpt id="p3">**</bpt>DisplayRequest<ept id="p3">**</ept> object to request that the system leave the screen on.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>RequestActive<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br241818)</ept> method is called on the <bpt id="p3">**</bpt>DisplayRequest<ept id="p3">**</ept> object to request that the system leave the screen on.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Source<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br227419)</ept> property of the <bpt id="p3">**</bpt>CaptureElement<ept id="p3">**</ept> is set to the app's <bpt id="p4">**</bpt>MediaCapture<ept id="p4">**</ept> object to define the source of the preview.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Source<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br227419)</ept> property of the <bpt id="p3">**</bpt>CaptureElement<ept id="p3">**</ept> is set to the app's <bpt id="p4">**</bpt>MediaCapture<ept id="p4">**</ept> object to define the source of the preview.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>FlowDirection<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208716)</ept> property is provided by the XAML framework to support bi-directional user interfaces.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>FlowDirection<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208716)</ept> property is provided by the XAML framework to support bi-directional user interfaces.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Setting the flow direction of the <bpt id="p1">**</bpt>CaptureElement<ept id="p1">**</ept> to <bpt id="p2">[</bpt><bpt id="p3">**</bpt>FlowDirection.RightToLeft<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br242397)</ept> causes the preview video to be flipped horizontally.</source>
          <target state="new">Setting the flow direction of the <bpt id="p1">**</bpt>CaptureElement<ept id="p1">**</ept> to <bpt id="p2">[</bpt><bpt id="p3">**</bpt>FlowDirection.RightToLeft<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br242397)</ept> causes the preview video to be flipped horizontally.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>This is used when the capture device is on the front panel of the device so that the preview in the correct direction from the user's perspective.</source>
          <target state="new">This is used when the capture device is on the front panel of the device so that the preview in the correct direction from the user's perspective.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StartPreviewAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226613)</ept> method starts the display of the preview stream within the <bpt id="p3">**</bpt>CaptureElement<ept id="p3">**</ept>.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StartPreviewAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226613)</ept> method starts the display of the preview stream within the <bpt id="p3">**</bpt>CaptureElement<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>If the preview is started successfully, the <bpt id="p1">**</bpt>\_isPreviewing<ept id="p1">**</ept> variable is set to allow other parts of the app to know that the app is currently previewing, and the helper method for setting the preview rotation is called.</source>
          <target state="new">If the preview is started successfully, the <bpt id="p1">**</bpt>\_isPreviewing<ept id="p1">**</ept> variable is set to allow other parts of the app to know that the app is currently previewing, and the helper method for setting the preview rotation is called.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>This method is defined in the next section.</source>
          <target state="new">This method is defined in the next section.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Detect screen and device orientation</source>
          <target state="new">Detect screen and device orientation</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>There are several areas of a media capture app that, when running on a mobile device like a phone or a tablet, are impacted by the current orientation of the device.</source>
          <target state="new">There are several areas of a media capture app that, when running on a mobile device like a phone or a tablet, are impacted by the current orientation of the device.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>These areas include properly rotating the preview stream from the camera and properly encoding captured images and videos so that, when viewed by the user, they are correctly oriented.</source>
          <target state="new">These areas include properly rotating the preview stream from the camera and properly encoding captured images and videos so that, when viewed by the user, they are correctly oriented.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The term "display orientation" refers to the way the system rotates the XAML page on the device to keep it upright for the user.</source>
          <target state="new">The term "display orientation" refers to the way the system rotates the XAML page on the device to keep it upright for the user.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>"Device orientation" refers to the orientation of the device in world space and, therefore, the orientation of the physical camera device in world space.</source>
          <target state="new">"Device orientation" refers to the orientation of the device in world space and, therefore, the orientation of the physical camera device in world space.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Both kinds of orientation a relevant to a media capture app.</source>
          <target state="new">Both kinds of orientation a relevant to a media capture app.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>To handle display orientation, declare and initialize a page-scoped variable for the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DisplayInformation<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn264258)</ept> class.</source>
          <target state="new">To handle display orientation, declare and initialize a page-scoped variable for the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DisplayInformation<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn264258)</ept> class.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Declare another variable of type <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DisplayOrientations<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226142)</ept> to track the current orientation of the display.</source>
          <target state="new">Declare another variable of type <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DisplayOrientations<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226142)</ept> to track the current orientation of the display.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Declare a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SimpleOrientationSensor<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br206400)</ept> variable and a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>SimpleOrientation<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br206399)</ept> variable to track device orientation.</source>
          <target state="new">Declare a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SimpleOrientationSensor<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br206400)</ept> variable and a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>SimpleOrientation<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br206399)</ept> variable to track device orientation.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>DisplayInformationAndOrientation</source>
          <target state="new">DisplayInformationAndOrientation</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The following helper methods register and unregister event handlers for the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DisplayInformation.OrientationChanged<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn264268)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>SimpleOrientationSensor.OrientationChanged<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br206407)</ept> events and initialize the tracking variables with the current orientation.</source>
          <target state="new">The following helper methods register and unregister event handlers for the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DisplayInformation.OrientationChanged<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn264268)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>SimpleOrientationSensor.OrientationChanged<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br206407)</ept> events and initialize the tracking variables with the current orientation.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Note that not all devices have a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SimpleOrientationSensor<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br206400)</ept>, so you should check before registering the handler or attempting to get the current orientation.</source>
          <target state="new">Note that not all devices have a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SimpleOrientationSensor<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br206400)</ept>, so you should check before registering the handler or attempting to get the current orientation.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>RegisterOrientationEventHandlers</source>
          <target state="new">RegisterOrientationEventHandlers</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>UnregisterOrientationEventHandlers</source>
          <target state="new">UnregisterOrientationEventHandlers</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>In the event handler for the <bpt id="p1">**</bpt>SimpleOrientationSensor.OrientationChanged<ept id="p1">**</ept> event, update the device orientation variable with the current orientation.</source>
          <target state="new">In the event handler for the <bpt id="p1">**</bpt>SimpleOrientationSensor.OrientationChanged<ept id="p1">**</ept> event, update the device orientation variable with the current orientation.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>You should not update the orientation if the device is facing up or down.</source>
          <target state="new">You should not update the orientation if the device is facing up or down.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>SimpleOrientationChanged</source>
          <target state="new">SimpleOrientationChanged</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>In the event handler for the <bpt id="p1">**</bpt>DisplayInformation.OrientationChanged<ept id="p1">**</ept> event, update the display orientation variable with the current orientation.</source>
          <target state="new">In the event handler for the <bpt id="p1">**</bpt>DisplayInformation.OrientationChanged<ept id="p1">**</ept> event, update the display orientation variable with the current orientation.</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>If the video preview of the capture device is currently being displayed, update the rotation of the preview video stream.</source>
          <target state="new">If the video preview of the capture device is currently being displayed, update the rotation of the preview video stream.</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>SetPreviewRotationAsync<ept id="p1">**</ept> helper method is described in the following section.</source>
          <target state="new">The <bpt id="p1">**</bpt>SetPreviewRotationAsync<ept id="p1">**</ept> helper method is described in the following section.</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>DisplayOrientationChanged</source>
          <target state="new">DisplayOrientationChanged</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Set the media capture preview rotation</source>
          <target state="new">Set the media capture preview rotation</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Users expect for UI controls to rotate when the orientation of their mobile device changes, so that the text in the UI is vertically aligned and readable.</source>
          <target state="new">Users expect for UI controls to rotate when the orientation of their mobile device changes, so that the text in the UI is vertically aligned and readable.</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>For the <bpt id="p1">**</bpt>CaptureElement<ept id="p1">**</ept> control, however, users typically do not want the orientation of the video preview to rotate when the device does.</source>
          <target state="new">For the <bpt id="p1">**</bpt>CaptureElement<ept id="p1">**</ept> control, however, users typically do not want the orientation of the video preview to rotate when the device does.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>In order to provide the expected user experience, you should rotate the preview stream to match the orientation of the device.</source>
          <target state="new">In order to provide the expected user experience, you should rotate the preview stream to match the orientation of the device.</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The preview stream orientation must be expressed in degrees.</source>
          <target state="new">The preview stream orientation must be expressed in degrees.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The following helper method to converts the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DisplayOrientations<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226142)</ept> enumeration values into degrees.</source>
          <target state="new">The following helper method to converts the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DisplayOrientations<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226142)</ept> enumeration values into degrees.</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>ConvertDisplayOrientationToDegrees</source>
          <target state="new">ConvertDisplayOrientationToDegrees</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>And this helper method converts a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SimpleOrientation<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br206399)</ept> enumeration value, which is used by the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>SimpleOrientationSensor<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br206400)</ept> to express the rotation of the device, into degrees.</source>
          <target state="new">And this helper method converts a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SimpleOrientation<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br206399)</ept> enumeration value, which is used by the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>SimpleOrientationSensor<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br206400)</ept> to express the rotation of the device, into degrees.</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>ConvertDeviceOrientationToDegrees</source>
          <target state="new">ConvertDeviceOrientationToDegrees</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>At a low-level, the rotation of a stream is actually performed by the Microsoft Media Foundation framework.</source>
          <target state="new">At a low-level, the rotation of a stream is actually performed by the Microsoft Media Foundation framework.</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The rotation is specified using the <bpt id="p1">[</bpt>MF\_MT\_VIDEO\_ROTATION<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/hh162880)</ept> attribute.</source>
          <target state="new">The rotation is specified using the <bpt id="p1">[</bpt>MF\_MT\_VIDEO\_ROTATION<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/hh162880)</ept> attribute.</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Since this is a Windows Runtime app, the rotation is specified using the GUID for the attribute, rather than the attribute name.</source>
          <target state="new">Since this is a Windows Runtime app, the rotation is specified using the GUID for the attribute, rather than the attribute name.</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Define the following GUID to identify the video rotation attribute.</source>
          <target state="new">Define the following GUID to identify the video rotation attribute.</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>RotationKey</source>
          <target state="new">RotationKey</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The following method sets the rotation of the preview stream.</source>
          <target state="new">The following method sets the rotation of the preview stream.</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>GetMediaStreamProperties<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br211995)</ept> method of the media capture's <bpt id="p3">[</bpt><bpt id="p4">**</bpt>VideoDeviceController<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br226825)</ept> returns a property set made up of key/value pairs.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>GetMediaStreamProperties<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br211995)</ept> method of the media capture's <bpt id="p3">[</bpt><bpt id="p4">**</bpt>VideoDeviceController<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br226825)</ept> returns a property set made up of key/value pairs.</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>MediaStreamType.VideoPreview<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226640)</ept> is specified to indicate that we want the properties for the video preview stream, as opposed to the video recording stream or the audio stream.</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>MediaStreamType.VideoPreview<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226640)</ept> is specified to indicate that we want the properties for the video preview stream, as opposed to the video recording stream or the audio stream.</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The property set is a general purpose interface for setting stream properties, but for this task the video rotation GUID defined above is added as the property key and the desired orientation of the video stream, in degrees, is specified as the value.</source>
          <target state="new">The property set is a general purpose interface for setting stream properties, but for this task the video rotation GUID defined above is added as the property key and the desired orientation of the video stream, in degrees, is specified as the value.</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>SetEncodingPropertiesAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn297781)</ept> updates the encoding properties with the new values.</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>SetEncodingPropertiesAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn297781)</ept> updates the encoding properties with the new values.</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Once again, <bpt id="p1">**</bpt>MediaStreamType.VideoPreview<ept id="p1">**</ept> is specified to indicate that the properies being set are for the video preview stream.</source>
          <target state="new">Once again, <bpt id="p1">**</bpt>MediaStreamType.VideoPreview<ept id="p1">**</ept> is specified to indicate that the properies being set are for the video preview stream.</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>SetPreviewRotation</source>
          <target state="new">SetPreviewRotation</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>For devices with external cameras, the user does not expect for the camera stream to be rotated when the device rotates.</source>
          <target state="new">For devices with external cameras, the user does not expect for the camera stream to be rotated when the device rotates.</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>If the preview is being mirrored for a camera on the front panel, the rotation direction must be inverted to match the rotation of the device.</source>
          <target state="new">If the preview is being mirrored for a camera on the front panel, the rotation direction must be inverted to match the rotation of the device.</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Some devices, typically phones, support setting <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DisplayInformation.AutoRotationPreferences<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn264259)</ept> to an orientation value such as <bpt id="p3">[</bpt><bpt id="p4">**</bpt>DisplayOrientations.Landscape<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br226142)</ept> to force the display to rotate with the device.</source>
          <target state="new">Some devices, typically phones, support setting <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DisplayInformation.AutoRotationPreferences<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn264259)</ept> to an orientation value such as <bpt id="p3">[</bpt><bpt id="p4">**</bpt>DisplayOrientations.Landscape<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br226142)</ept> to force the display to rotate with the device.</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>You should set this value because it provides a good experience on devices that support it, but you should still implement the above pattern in your app to support devices that don't support auto-rotation preferences.</source>
          <target state="new">You should set this value because it provides a good experience on devices that support it, but you should still implement the above pattern in your app to support devices that don't support auto-rotation preferences.</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>In previous releases, the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SetPreviewRotation<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226611)</ept> method was the only way to rotate the preview stream.</source>
          <target state="new">In previous releases, the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SetPreviewRotation<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226611)</ept> method was the only way to rotate the preview stream.</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>This method is still present in the API surface to support existing apps, but this method inefficient and should not be used for new apps.</source>
          <target state="new">This method is still present in the API surface to support existing apps, but this method inefficient and should not be used for new apps.</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Capture a photo</source>
          <target state="new">Capture a photo</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The following method captures a photo using the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CapturePhotoToStreamAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh700840)</ept> method and passing in the requested encoding properties and an <bpt id="p3">[</bpt><bpt id="p4">**</bpt>InMemoryRandomAccessStream<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br241720)</ept> object that will contain the output of the capture operation.</source>
          <target state="new">The following method captures a photo using the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CapturePhotoToStreamAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh700840)</ept> method and passing in the requested encoding properties and an <bpt id="p3">[</bpt><bpt id="p4">**</bpt>InMemoryRandomAccessStream<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br241720)</ept> object that will contain the output of the capture operation.</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ImageEncodingProperties<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh700993)</ept> class provides helper methods, like <bpt id="p3">[</bpt><bpt id="p4">**</bpt>CreateJpeg<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/hh700994)</ept>, to generate encoding properties for the file types supported by media capture.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ImageEncodingProperties<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh700993)</ept> class provides helper methods, like <bpt id="p3">[</bpt><bpt id="p4">**</bpt>CreateJpeg<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/hh700994)</ept>, to generate encoding properties for the file types supported by media capture.</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>TakePhotoAsync</source>
          <target state="new">TakePhotoAsync</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Before saving the photo to a file, you need to determine the correct orientation of the photo.</source>
          <target state="new">Before saving the photo to a file, you need to determine the correct orientation of the photo.</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>MediaCapture<ept id="p1">**</ept> object doesn't know about the device's orientation and so it encodes the captured photo data as if the capture device is in its default orientation.</source>
          <target state="new">The <bpt id="p1">**</bpt>MediaCapture<ept id="p1">**</ept> object doesn't know about the device's orientation and so it encodes the captured photo data as if the capture device is in its default orientation.</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>This can result in a negative user experience when the user is viewing the captured photo, as the photo will be oriented incorrectly.</source>
          <target state="new">This can result in a negative user experience when the user is viewing the captured photo, as the photo will be oriented incorrectly.</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The following helper methods determine the correct photo orientation and then save the file with the correct orientation.</source>
          <target state="new">The following helper methods determine the correct photo orientation and then save the file with the correct orientation.</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>GetCameraOrientation<ept id="p1">**</ept> helper method starts with the current device orientation and then rotates that value depending on the native orientation of the device and the location of the camera on the device.</source>
          <target state="new">The <bpt id="p1">**</bpt>GetCameraOrientation<ept id="p1">**</ept> helper method starts with the current device orientation and then rotates that value depending on the native orientation of the device and the location of the camera on the device.</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>If the camera is mounted on the front panel of the device, as indicated in this example by the <bpt id="p1">**</bpt>\_mirroringPreview<ept id="p1">**</ept> variable, then the camera orientation should be inverted.</source>
          <target state="new">If the camera is mounted on the front panel of the device, as indicated in this example by the <bpt id="p1">**</bpt>\_mirroringPreview<ept id="p1">**</ept> variable, then the camera orientation should be inverted.</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>GetCameraOrientation</source>
          <target state="new">GetCameraOrientation</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The following helper method simply converts values from the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SimpleOrientation<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br206399)</ept> enumeration values used by the orientation sensor to the equivalent <bpt id="p3">[</bpt><bpt id="p4">**</bpt>PhotoOrientation<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/hh965476)</ept> value used by the bitmap encoder that will be used to save the file.</source>
          <target state="new">The following helper method simply converts values from the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SimpleOrientation<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br206399)</ept> enumeration values used by the orientation sensor to the equivalent <bpt id="p3">[</bpt><bpt id="p4">**</bpt>PhotoOrientation<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/hh965476)</ept> value used by the bitmap encoder that will be used to save the file.</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>ConvertOrientationToPhotoOrientation</source>
          <target state="new">ConvertOrientationToPhotoOrientation</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Finally, the captured photo can be encoded and saved.</source>
          <target state="new">Finally, the captured photo can be encoded and saved.</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Create a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>BitmapDecoder<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226176)</ept> object from the input stream containing the captured photo data.</source>
          <target state="new">Create a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>BitmapDecoder<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226176)</ept> object from the input stream containing the captured photo data.</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Create a new <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StorageFile<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br227171)</ept> and open it for reading and writing.</source>
          <target state="new">Create a new <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StorageFile<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br227171)</ept> and open it for reading and writing.</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Create a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>BitmapEncoder<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226206)</ept> object, passing in the output file and the decoder containing the image data.</source>
          <target state="new">Create a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>BitmapEncoder<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226206)</ept> object, passing in the output file and the decoder containing the image data.</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Create a new <bpt id="p1">[</bpt><bpt id="p2">**</bpt>BitmapPropertySet<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh974338)</ept> and add a new property.</source>
          <target state="new">Create a new <bpt id="p1">[</bpt><bpt id="p2">**</bpt>BitmapPropertySet<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh974338)</ept> and add a new property.</target>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The key for the property, "System.Photo.Orientation" specifies that the property represents the orientation of the photo.</source>
          <target state="new">The key for the property, "System.Photo.Orientation" specifies that the property represents the orientation of the photo.</target>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The value is the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PhotoOrientation<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh965476)</ept> value that was previously calculated.</source>
          <target state="new">The value is the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PhotoOrientation<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh965476)</ept> value that was previously calculated.</target>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Call <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SetPropertiesAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226252)</ept> to update the properties on the encoder and then call <bpt id="p3">[</bpt><bpt id="p4">**</bpt>FlushAsync<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/dn237883)</ept> to write the photo to the storage file.</source>
          <target state="new">Call <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SetPropertiesAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226252)</ept> to update the properties on the encoder and then call <bpt id="p3">[</bpt><bpt id="p4">**</bpt>FlushAsync<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/dn237883)</ept> to write the photo to the storage file.</target>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>ReencodeAndSavePhotoAsync</source>
          <target state="new">ReencodeAndSavePhotoAsync</target>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Setting the "System.Photo.Orientation" bitmap property encodes the orientation of the photo into the metadata of the file.</source>
          <target state="new">Setting the "System.Photo.Orientation" bitmap property encodes the orientation of the photo into the metadata of the file.</target>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>It does not cause the actual image data to be encoded differently.</source>
          <target state="new">It does not cause the actual image data to be encoded differently.</target>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>For more information about embedding metadata into image files, see <bpt id="p1">[</bpt>Image metadata<ept id="p1">](image-metadata.md)</ept>.</source>
          <target state="new">For more information about embedding metadata into image files, see <bpt id="p1">[</bpt>Image metadata<ept id="p1">](image-metadata.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>For more information about working with images, including encoding and decoding images, see <bpt id="p1">[</bpt>Imaging<ept id="p1">](imaging.md)</ept>.</source>
          <target state="new">For more information about working with images, including encoding and decoding images, see <bpt id="p1">[</bpt>Imaging<ept id="p1">](imaging.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Capture a video</source>
          <target state="new">Capture a video</target>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>To start capturing video, first create a storage file to which the video will be recorded.</source>
          <target state="new">To start capturing video, first create a storage file to which the video will be recorded.</target>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Next create the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MediaEncodingProfile<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh701026)</ept> that the <bpt id="p3">**</bpt>MediaCapture<ept id="p3">**</ept> will use to encode the video to the file.</source>
          <target state="new">Next create the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MediaEncodingProfile<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh701026)</ept> that the <bpt id="p3">**</bpt>MediaCapture<ept id="p3">**</ept> will use to encode the video to the file.</target>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>MediaEncodingProfile<ept id="p1">**</ept> class provides methods, like <bpt id="p2">[</bpt><bpt id="p3">**</bpt>CreateMp4<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/hh701078)</ept>, that create encoding profiles for the supported video formats.</source>
          <target state="new">The <bpt id="p1">**</bpt>MediaEncodingProfile<ept id="p1">**</ept> class provides methods, like <bpt id="p2">[</bpt><bpt id="p3">**</bpt>CreateMp4<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/hh701078)</ept>, that create encoding profiles for the supported video formats.</target>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Use the helper methods discussed previously to get the correct rotation for the video, in degrees.</source>
          <target state="new">Use the helper methods discussed previously to get the correct rotation for the video, in degrees.</target>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Unlike the photo scenario, the video rotation information is encoded into the stream by the <bpt id="p1">**</bpt>MediaCapture<ept id="p1">**</ept>.</source>
          <target state="new">Unlike the photo scenario, the video rotation information is encoded into the stream by the <bpt id="p1">**</bpt>MediaCapture<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Add the rotation information to the encoding profile by adding it to the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>VideoEncodingProperties.Properties<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh701254)</ept> collection.</source>
          <target state="new">Add the rotation information to the encoding profile by adding it to the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>VideoEncodingProperties.Properties<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh701254)</ept> collection.</target>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>The previously defined GUID for video rotation is used as the key and the rotation, in degrees, is the value.</source>
          <target state="new">The previously defined GUID for video rotation is used as the key and the rotation, in degrees, is the value.</target>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Finally, call <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MediaCapture.StartRecordToStorageFileAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh700863)</ept>, specifying the encoding properties and the output file to begin recording.</source>
          <target state="new">Finally, call <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MediaCapture.StartRecordToStorageFileAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh700863)</ept>, specifying the encoding properties and the output file to begin recording.</target>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>StartRecordingAsync</source>
          <target state="new">StartRecordingAsync</target>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>To stop recording, simply call <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MediaCapture.StopRecordAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226623)</ept>.</source>
          <target state="new">To stop recording, simply call <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MediaCapture.StopRecordAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226623)</ept>.</target>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>StopRecordingAsync</source>
          <target state="new">StopRecordingAsync</target>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>A handler for the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MediaCapture.RecordLimitationExceeded<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh973312)</ept> event was registered when the <bpt id="p3">**</bpt>MediaCapture<ept id="p3">**</ept> was initialized.</source>
          <target state="new">A handler for the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MediaCapture.RecordLimitationExceeded<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh973312)</ept> event was registered when the <bpt id="p3">**</bpt>MediaCapture<ept id="p3">**</ept> was initialized.</target>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>In the handler, call the <bpt id="p1">**</bpt>StopRecordingAsync<ept id="p1">**</ept> method to stop video recording.</source>
          <target state="new">In the handler, call the <bpt id="p1">**</bpt>StopRecordingAsync<ept id="p1">**</ept> method to stop video recording.</target>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>RecordLimitationExceeded</source>
          <target state="new">RecordLimitationExceeded</target>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Pause and resume video capture</source>
          <target state="new">Pause and resume video capture</target>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>For some scenarios you may want to pause and resume an ongoing video capture rather than stopping the capture and starting a new one.</source>
          <target state="new">For some scenarios you may want to pause and resume an ongoing video capture rather than stopping the capture and starting a new one.</target>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>To pause recording call <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PauseRecordAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn858102)</ept>.</source>
          <target state="new">To pause recording call <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PauseRecordAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn858102)</ept>.</target>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>If you specify <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MediaCapturePauseBehavior.RetainHardwareResources<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn926686)</ept>, then on devices that don't support simultaneous video and photo capture, the app will be unable to capture photos while the video is paused.</source>
          <target state="new">If you specify <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MediaCapturePauseBehavior.RetainHardwareResources<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn926686)</ept>, then on devices that don't support simultaneous video and photo capture, the app will be unable to capture photos while the video is paused.</target>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>For information on determining if a device supports simultaneous photo and video capture, see <bpt id="p1">[</bpt>Camera profiles<ept id="p1">](camera-profiles.md)</ept>.</source>
          <target state="new">For information on determining if a device supports simultaneous photo and video capture, see <bpt id="p1">[</bpt>Camera profiles<ept id="p1">](camera-profiles.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>PauseRecordingAsync</source>
          <target state="new">PauseRecordingAsync</target>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>To resume a previously paused video capture, call <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ResumeRecordAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn858103)</ept>.</source>
          <target state="new">To resume a previously paused video capture, call <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ResumeRecordAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn858103)</ept>.</target>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>ResumeRecordingAsync</source>
          <target state="new">ResumeRecordingAsync</target>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Clean up capture resources</source>
          <target state="new">Clean up capture resources</target>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>It is very important that you shut down and release the media capture resources properly.</source>
          <target state="new">It is very important that you shut down and release the media capture resources properly.</target>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Failure to do so can cause unexpected camera behavior after your app closes, which results in a negative user experience for your app.</source>
          <target state="new">Failure to do so can cause unexpected camera behavior after your app closes, which results in a negative user experience for your app.</target>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>The following sections walk through the different steps you should take to shut down the camera.</source>
          <target state="new">The following sections walk through the different steps you should take to shut down the camera.</target>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Shut down the capture preview</source>
          <target state="new">Shut down the capture preview</target>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>To shut down the capture preview, first call <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MediaCapture.StopPreviewAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226622)</ept>.</source>
          <target state="new">To shut down the capture preview, first call <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MediaCapture.StopPreviewAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226622)</ept>.</target>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Set the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Source<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br227419)</ept> property of your <bpt id="p3">[</bpt><bpt id="p4">**</bpt>MediaElement<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br242926)</ept> to null.</source>
          <target state="new">Set the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Source<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br227419)</ept> property of your <bpt id="p3">[</bpt><bpt id="p4">**</bpt>MediaElement<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br242926)</ept> to null.</target>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Then, call the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>RequestRelease<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br241819)</ept> on your <bpt id="p3">[</bpt><bpt id="p4">**</bpt>DisplayRequest<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br241816)</ept> variable to allow the system to turn off the display when needed.</source>
          <target state="new">Then, call the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>RequestRelease<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br241819)</ept> on your <bpt id="p3">[</bpt><bpt id="p4">**</bpt>DisplayRequest<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br241816)</ept> variable to allow the system to turn off the display when needed.</target>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>StopPreviewAsync</source>
          <target state="new">StopPreviewAsync</target>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>You can't access the UI from a non-UI thread, so the setting the <bpt id="p1">**</bpt>MediaElement.Source<ept id="p1">**</ept> property and calling <bpt id="p2">**</bpt>RequestRelease<ept id="p2">**</ept> must be made using the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>CoreDispatcher.RunAsync<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/hh750317)</ept> method so that the calls execute on the UI thread.</source>
          <target state="new">You can't access the UI from a non-UI thread, so the setting the <bpt id="p1">**</bpt>MediaElement.Source<ept id="p1">**</ept> property and calling <bpt id="p2">**</bpt>RequestRelease<ept id="p2">**</ept> must be made using the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>CoreDispatcher.RunAsync<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/hh750317)</ept> method so that the calls execute on the UI thread.</target>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Shut down and dispose of the MediaCapture object</source>
          <target state="new">Shut down and dispose of the MediaCapture object</target>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Before disposing of the <bpt id="p1">**</bpt>MediaCapture<ept id="p1">**</ept> object, stop any recording that is ongoing and stop the preview stream by calling the helper methods defined previously.</source>
          <target state="new">Before disposing of the <bpt id="p1">**</bpt>MediaCapture<ept id="p1">**</ept> object, stop any recording that is ongoing and stop the preview stream by calling the helper methods defined previously.</target>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>Once this has been done, remove any event handlers registered with the <bpt id="p1">**</bpt>MediaCapture<ept id="p1">**</ept>, then call <bpt id="p2">[</bpt><bpt id="p3">**</bpt>Dispose<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/dn278858)</ept> to free any resources associated with the object and set the <bpt id="p4">**</bpt>MediaCapture<ept id="p4">**</ept> variable to null</source>
          <target state="new">Once this has been done, remove any event handlers registered with the <bpt id="p1">**</bpt>MediaCapture<ept id="p1">**</ept>, then call <bpt id="p2">[</bpt><bpt id="p3">**</bpt>Dispose<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/dn278858)</ept> to free any resources associated with the object and set the <bpt id="p4">**</bpt>MediaCapture<ept id="p4">**</ept> variable to null</target>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>CleanupCameraAsync</source>
          <target state="new">CleanupCameraAsync</target>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>You should call this method to shut down and dispose of the <bpt id="p1">**</bpt>MediaCapture<ept id="p1">**</ept> object from inside the handler for the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>MediaCapture.Failed<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br226593)</ept> event.</source>
          <target state="new">You should call this method to shut down and dispose of the <bpt id="p1">**</bpt>MediaCapture<ept id="p1">**</ept> object from inside the handler for the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>MediaCapture.Failed<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br226593)</ept> event.</target>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>CaptureFailed</source>
          <target state="new">CaptureFailed</target>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Handle app lifetime and page navigation events</source>
          <target state="new">Handle app lifetime and page navigation events</target>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>The app lifetime events give your app an opportunity to initialize and release resources.</source>
          <target state="new">The app lifetime events give your app an opportunity to initialize and release resources.</target>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>This is especially important with the <bpt id="p1">**</bpt>Application.Suspending<ept id="p1">**</ept> event, where it is essential that your app properly disposes of media capture resources.</source>
          <target state="new">This is especially important with the <bpt id="p1">**</bpt>Application.Suspending<ept id="p1">**</ept> event, where it is essential that your app properly disposes of media capture resources.</target>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>You can register handlers for the application lifetime events in your page's constructor.</source>
          <target state="new">You can register handlers for the application lifetime events in your page's constructor.</target>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>RegisterAppLifetimeEvents</source>
          <target state="new">RegisterAppLifetimeEvents</target>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>In the handler for the <bpt id="p1">**</bpt>Application.Suspending<ept id="p1">**</ept> event, you should unregister the handlers for the display and device orientation events and shut down the <bpt id="p2">**</bpt>MediaCapture<ept id="p2">**</ept> object.</source>
          <target state="new">In the handler for the <bpt id="p1">**</bpt>Application.Suspending<ept id="p1">**</ept> event, you should unregister the handlers for the display and device orientation events and shut down the <bpt id="p2">**</bpt>MediaCapture<ept id="p2">**</ept> object.</target>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SystemMediaTransportControls.PropertyChanged<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn278720)</ept> event unregistered here is needed for another application lifecycle-related task that is described later in this article.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SystemMediaTransportControls.PropertyChanged<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn278720)</ept> event unregistered here is needed for another application lifecycle-related task that is described later in this article.</target>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Caution<ept id="p1">**</ept> You must request a suspending deferral by calling <bpt id="p2">[</bpt><bpt id="p3">**</bpt>SuspendingOperation.GetDeferral<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br224690)</ept> at the beginning of your suspending event handler.</source>
          <target state="new"><bpt id="p1">**</bpt>Caution<ept id="p1">**</ept> You must request a suspending deferral by calling <bpt id="p2">[</bpt><bpt id="p3">**</bpt>SuspendingOperation.GetDeferral<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br224690)</ept> at the beginning of your suspending event handler.</target>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>This requests that the system wait for you to signal that the operation is complete before tearing down your app.</source>
          <target state="new">This requests that the system wait for you to signal that the operation is complete before tearing down your app.</target>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>This is necessary because the <bpt id="p1">**</bpt>MediaCapture<ept id="p1">**</ept> shutdown operations are asynchronous, so the <bpt id="p2">**</bpt>Application.Suspending<ept id="p2">**</ept> event handler may complete before the camera is properly shut down.</source>
          <target state="new">This is necessary because the <bpt id="p1">**</bpt>MediaCapture<ept id="p1">**</ept> shutdown operations are asynchronous, so the <bpt id="p2">**</bpt>Application.Suspending<ept id="p2">**</ept> event handler may complete before the camera is properly shut down.</target>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>After your awaited asynchronous calls complete, you should release the deferral by calling <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SuspendingDeferral.Complete<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br224685)</ept>.</source>
          <target state="new">After your awaited asynchronous calls complete, you should release the deferral by calling <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SuspendingDeferral.Complete<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br224685)</ept>.</target>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Suspending</source>
          <target state="new">Suspending</target>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>In the handler for the <bpt id="p1">**</bpt>Application.Resuming<ept id="p1">**</ept> event, you should register handlers for the display and device orientation events, register the <bpt id="p2">**</bpt>SystemMediaTransportControls.PropertyChanged<ept id="p2">**</ept> event, and initialize the <bpt id="p3">**</bpt>MediaCapture<ept id="p3">**</ept> object.</source>
          <target state="new">In the handler for the <bpt id="p1">**</bpt>Application.Resuming<ept id="p1">**</ept> event, you should register handlers for the display and device orientation events, register the <bpt id="p2">**</bpt>SystemMediaTransportControls.PropertyChanged<ept id="p2">**</ept> event, and initialize the <bpt id="p3">**</bpt>MediaCapture<ept id="p3">**</ept> object.</target>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Resuming</source>
          <target state="new">Resuming</target>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>OnNavigatedTo<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br227508)</ept> event gives an opportunity to initially register handlers for the display and device orientation events and initialize the <bpt id="p3">**</bpt>MediaCapture<ept id="p3">**</ept> object.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>OnNavigatedTo<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br227508)</ept> event gives an opportunity to initially register handlers for the display and device orientation events and initialize the <bpt id="p3">**</bpt>MediaCapture<ept id="p3">**</ept> object.</target>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>OnNavigatedTo</source>
          <target state="new">OnNavigatedTo</target>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>If your app has multiple pages, you should clean up your media capture objects in the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>OnNavigatingFrom<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br227509)</ept> event handler.</source>
          <target state="new">If your app has multiple pages, you should clean up your media capture objects in the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>OnNavigatingFrom<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br227509)</ept> event handler.</target>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>OnNavigatingFrom</source>
          <target state="new">OnNavigatingFrom</target>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>For your app to behave properly on devices that support multiple simultaneous windows, you must respond when your app is minimized or restored.</source>
          <target state="new">For your app to behave properly on devices that support multiple simultaneous windows, you must respond when your app is minimized or restored.</target>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>To do this, you must handle the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SystemMediaTransportControls.PropertyChanged<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn278720)</ept> event.</source>
          <target state="new">To do this, you must handle the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SystemMediaTransportControls.PropertyChanged<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn278720)</ept> event.</target>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Initialize a member variable to store a reference to the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SystemMediaTransportControls<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn278677)</ept> object for your app.</source>
          <target state="new">Initialize a member variable to store a reference to the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SystemMediaTransportControls<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn278677)</ept> object for your app.</target>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>DeclareSystemMediaTransportControls</source>
          <target state="new">DeclareSystemMediaTransportControls</target>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>The code to register and unregister the <bpt id="p1">**</bpt>PropertyChanged<ept id="p1">**</ept> event should be added to the app life cycle events as shown in the examples above.</source>
          <target state="new">The code to register and unregister the <bpt id="p1">**</bpt>PropertyChanged<ept id="p1">**</ept> event should be added to the app life cycle events as shown in the examples above.</target>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>In the handler for the event, check to see if the property change that triggered the event was the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SystemMediaTransportControlsProperty.SoundLevel<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn278721)</ept> property.</source>
          <target state="new">In the handler for the event, check to see if the property change that triggered the event was the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SystemMediaTransportControlsProperty.SoundLevel<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn278721)</ept> property.</target>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>If this was the property that changed, check the value of the property.</source>
          <target state="new">If this was the property that changed, check the value of the property.</target>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>If the value is <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SoundLevel.Muted<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh700852)</ept>, then your app was minimized and you should clean up your media capture resources appropriately.</source>
          <target state="new">If the value is <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SoundLevel.Muted<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh700852)</ept>, then your app was minimized and you should clean up your media capture resources appropriately.</target>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>Otherwise, the event signals that your app window was restored and you should reinitialize you media capture resources.</source>
          <target state="new">Otherwise, the event signals that your app window was restored and you should reinitialize you media capture resources.</target>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>SoundLevel<ept id="p1">**</ept> property must be accessed on the UI thread, so the code in this method is wrapped in a call to <bpt id="p2">[</bpt><bpt id="p3">**</bpt>Dispatcher.RunAsync<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/hh750317)</ept>.</source>
          <target state="new">The <bpt id="p1">**</bpt>SoundLevel<ept id="p1">**</ept> property must be accessed on the UI thread, so the code in this method is wrapped in a call to <bpt id="p2">[</bpt><bpt id="p3">**</bpt>Dispatcher.RunAsync<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/hh750317)</ept>.</target>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>SystemMediaControlsPropertyChanged</source>
          <target state="new">SystemMediaControlsPropertyChanged</target>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Additional UI considerations for media capture</source>
          <target state="new">Additional UI considerations for media capture</target>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Set auto-rotation preferences</source>
          <target state="new">Set auto-rotation preferences</target>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>As mentioned in the previous section on rotating the preview stream, some devices support setting <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DisplayInformation.AutoRotationPreferences<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn264259)</ept> to prevent the page, including the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>CaptureElement<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br209278)</ept> that displays the preview, from rotating as the device is rotating.</source>
          <target state="new">As mentioned in the previous section on rotating the preview stream, some devices support setting <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DisplayInformation.AutoRotationPreferences<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn264259)</ept> to prevent the page, including the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>CaptureElement<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br209278)</ept> that displays the preview, from rotating as the device is rotating.</target>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>This provides a good user experience on devices that support it.</source>
          <target state="new">This provides a good user experience on devices that support it.</target>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>Set this value when your app launches or when you begin displaying the preview.</source>
          <target state="new">Set this value when your app launches or when you begin displaying the preview.</target>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>Note that you should still implement preview rotation handling for devices that don't support auto-rotation preferences.</source>
          <target state="new">Note that you should still implement preview rotation handling for devices that don't support auto-rotation preferences.</target>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>SetAutoRotationPreferences</source>
          <target state="new">SetAutoRotationPreferences</target>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Handle UI element orientation</source>
          <target state="new">Handle UI element orientation</target>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>Users typically expect for the UI elements in a camera app, such as the buttons for initiating photo or video capture, to rotate along with the video preview.</source>
          <target state="new">Users typically expect for the UI elements in a camera app, such as the buttons for initiating photo or video capture, to rotate along with the video preview.</target>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>The following method illustrates the use of the previously defined orientation helper methods to properly orient the buttons in the camera UI.</source>
          <target state="new">The following method illustrates the use of the previously defined orientation helper methods to properly orient the buttons in the camera UI.</target>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>You should call this method from the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DisplayInformation.OrientationChanged<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn264268)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>SimpleOrientationSensor.OrientationChanged<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br206407)</ept> event handlers and when your app first launches.</source>
          <target state="new">You should call this method from the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DisplayInformation.OrientationChanged<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn264268)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>SimpleOrientationSensor.OrientationChanged<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br206407)</ept> event handlers and when your app first launches.</target>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>Your implementation my vary depending on your app's UI.</source>
          <target state="new">Your implementation my vary depending on your app's UI.</target>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>UpdateButtonOrientation</source>
          <target state="new">UpdateButtonOrientation</target>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>When your app is shutting down or if you navigate to a page that is unrelated to media capture, set the auto-rotation preference to <bpt id="p1">[</bpt><bpt id="p2">**</bpt>None<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226142)</ept> to allow the UI to rotate normally.</source>
          <target state="new">When your app is shutting down or if you navigate to a page that is unrelated to media capture, set the auto-rotation preference to <bpt id="p1">[</bpt><bpt id="p2">**</bpt>None<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226142)</ept> to allow the UI to rotate normally.</target>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>RevertAutoRotationPreferences</source>
          <target state="new">RevertAutoRotationPreferences</target>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>Support simultaneous photo and video capture</source>
          <target state="new">Support simultaneous photo and video capture</target>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows.Media.Capture<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226738)</ept> API allows you to capture photos and videos simultaneously on devices that support it.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows.Media.Capture<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226738)</ept> API allows you to capture photos and videos simultaneously on devices that support it.</target>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>For brevity, this example uses the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ConcurrentRecordAndPhotoSupported<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn278843)</ept> property to determine if simultaneous video and photo capture is supported, but a more robust and recommended way to do this is to use camera profiles.</source>
          <target state="new">For brevity, this example uses the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ConcurrentRecordAndPhotoSupported<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn278843)</ept> property to determine if simultaneous video and photo capture is supported, but a more robust and recommended way to do this is to use camera profiles.</target>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Camera profiles<ept id="p1">](camera-profiles.md)</ept>.</source>
          <target state="new">For more information, see <bpt id="p1">[</bpt>Camera profiles<ept id="p1">](camera-profiles.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>The following helper method updates the app's controls to match the current capture state of the app.</source>
          <target state="new">The following helper method updates the app's controls to match the current capture state of the app.</target>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>Call this method whenever the capture state of your app changes, such as when video capture is started or stopped.</source>
          <target state="new">Call this method whenever the capture state of your app changes, such as when video capture is started or stopped.</target>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>UpdateCaptureControls</source>
          <target state="new">UpdateCaptureControls</target>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>Support mobile-specific UI features</source>
          <target state="new">Support mobile-specific UI features</target>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>All of the code shown in this article will work in a Universal Windows app.</source>
          <target state="new">All of the code shown in this article will work in a Universal Windows app.</target>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>With a few additional lines of code, you can take advantage of special UI features that are only present on mobile devices.</source>
          <target state="new">With a few additional lines of code, you can take advantage of special UI features that are only present on mobile devices.</target>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>To use these features, you must add a reference to the Microsoft Mobile Extension SDK for Universal App Platform to your project.</source>
          <target state="new">To use these features, you must add a reference to the Microsoft Mobile Extension SDK for Universal App Platform to your project.</target>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>To add a reference to the mobile extension SDK for hardware camera button support</source>
          <target state="new">To add a reference to the mobile extension SDK for hardware camera button support</target>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, right-click <bpt id="p2">**</bpt>References<ept id="p2">**</ept> and select <bpt id="p3">**</bpt>Add Reference...<ept id="p3">**</ept></source>
          <target state="new">In <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, right-click <bpt id="p2">**</bpt>References<ept id="p2">**</ept> and select <bpt id="p3">**</bpt>Add Reference...<ept id="p3">**</ept></target>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>Expand the <bpt id="p1">**</bpt>Windows Universal<ept id="p1">**</ept> node and select <bpt id="p2">**</bpt>Extensions<ept id="p2">**</ept>.</source>
          <target state="new">Expand the <bpt id="p1">**</bpt>Windows Universal<ept id="p1">**</ept> node and select <bpt id="p2">**</bpt>Extensions<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>Click the checkbox next to <bpt id="p1">**</bpt>Microsoft Mobile Extension SDK for Universal App Platform<ept id="p1">**</ept>.</source>
          <target state="new">Click the checkbox next to <bpt id="p1">**</bpt>Microsoft Mobile Extension SDK for Universal App Platform<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>Mobile devices have a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StatusBar<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn633864)</ept> control that provides the user with status information about the device.</source>
          <target state="new">Mobile devices have a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StatusBar<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn633864)</ept> control that provides the user with status information about the device.</target>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>This control takes up space on the screen that can interfere with the media capture UI.</source>
          <target state="new">This control takes up space on the screen that can interfere with the media capture UI.</target>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>You can hide the status bar by calling <bpt id="p1">[</bpt><bpt id="p2">**</bpt>HideAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn610339)</ept>, but you must make this call from within a conditional block where you use the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>ApiInformation.IsTypePresent<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn949016)</ept> method to determine if the API is available.</source>
          <target state="new">You can hide the status bar by calling <bpt id="p1">[</bpt><bpt id="p2">**</bpt>HideAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn610339)</ept>, but you must make this call from within a conditional block where you use the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>ApiInformation.IsTypePresent<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn949016)</ept> method to determine if the API is available.</target>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>This method will only return true on mobile devices that support the status bar.</source>
          <target state="new">This method will only return true on mobile devices that support the status bar.</target>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>You should hide the status bar when your app launches or when you begin previewing from the camera.</source>
          <target state="new">You should hide the status bar when your app launches or when you begin previewing from the camera.</target>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>HideStatusBar</source>
          <target state="new">HideStatusBar</target>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>When your app is shutting down or when the user navigates away from the media capture page of your app, you make the control visible again.</source>
          <target state="new">When your app is shutting down or when the user navigates away from the media capture page of your app, you make the control visible again.</target>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>ShowStatusBar</source>
          <target state="new">ShowStatusBar</target>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>Some mobile devices have a dedicated hardware camera button that some users prefer over an on-screen control.</source>
          <target state="new">Some mobile devices have a dedicated hardware camera button that some users prefer over an on-screen control.</target>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>To be notified when the hardware camera button is pressed, register a handler for the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>HardwareButtons.CameraPressed<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn653805)</ept> event.</source>
          <target state="new">To be notified when the hardware camera button is pressed, register a handler for the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>HardwareButtons.CameraPressed<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn653805)</ept> event.</target>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>Because this API is available on mobile devices only, you must again use the <bpt id="p1">**</bpt>IsTypePresent<ept id="p1">**</ept> to make sure the API is supported on the current device before attempting to access it.</source>
          <target state="new">Because this API is available on mobile devices only, you must again use the <bpt id="p1">**</bpt>IsTypePresent<ept id="p1">**</ept> to make sure the API is supported on the current device before attempting to access it.</target>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>PhoneUsing</source>
          <target state="new">PhoneUsing</target>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>RegisterCameraButtonHandler</source>
          <target state="new">RegisterCameraButtonHandler</target>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>In the handler for the <bpt id="p1">**</bpt>CameraPressed<ept id="p1">**</ept> event, you can initiate a photo capture.</source>
          <target state="new">In the handler for the <bpt id="p1">**</bpt>CameraPressed<ept id="p1">**</ept> event, you can initiate a photo capture.</target>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>CameraPressed</source>
          <target state="new">CameraPressed</target>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>When your app is shutting down or the user moves away from the media capture page of your app, unregister the hardware button handler.</source>
          <target state="new">When your app is shutting down or the user moves away from the media capture page of your app, unregister the hardware button handler.</target>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>UnregisterCameraButtonHandler</source>
          <target state="new">UnregisterCameraButtonHandler</target>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> This article is for Windows 10 developers writing Universal Windows Platform (UWP) apps.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> This article is for Windows 10 developers writing Universal Windows Platform (UWP) apps.</target>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>If you're developing for Windows 8.x or Windows Phone 8.x, see the <bpt id="p1">[</bpt>archived documentation<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept>.</source>
          <target state="new">If you're developing for Windows 8.x or Windows Phone 8.x, see the <bpt id="p1">[</bpt>archived documentation<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept>.</target>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>Related topics</source>
          <target state="new">Related topics</target>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>Camera profiles</source>
          <target state="new">Camera profiles</target>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>High Dynamic Range (HDR) photo capture</source>
          <target state="new">High Dynamic Range (HDR) photo capture</target>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>Capture device controls for photo and video capture</source>
          <target state="new">Capture device controls for photo and video capture</target>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>Capture device controls for video capture</source>
          <target state="new">Capture device controls for video capture</target>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>Effects for video capture</source>
          <target state="new">Effects for video capture</target>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>Scene analysis for media capture</source>
          <target state="new">Scene analysis for media capture</target>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>Variable photo sequence</source>
          <target state="new">Variable photo sequence</target>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>Get a preview frame</source>
          <target state="new">Get a preview frame</target>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>CameraStarterKit sample</source>
          <target state="new">CameraStarterKit sample</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>