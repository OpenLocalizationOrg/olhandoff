<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-48076a9" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1b4209d74a1dde9a4d5695d3e2f9e3bbec7568c4</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci1\xaml-platform\x-deferloadstrategy-attribute.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>x:DeferLoadStrategy=&amp;\#0034;Lazy&amp;\#0034; delays the creation of an element and its children, decreasing startup time but increasing memory usage slightly.</source>
          <target state="new">x:DeferLoadStrategy=&amp;\#0034;Lazy&amp;\#0034; delays the creation of an element and its children, decreasing startup time but increasing memory usage slightly.</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Each element affected adds about 600 bytes to the memory usage.</source>
          <target state="new">Each element affected adds about 600 bytes to the memory usage.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>x:DeferLoadStrategy attribute'</source>
          <target state="new">x:DeferLoadStrategy attribute'</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>x:DeferLoadStrategy attribute</source>
          <target state="new">x:DeferLoadStrategy attribute</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>\[ Updated for UWP apps on Windows 10.</source>
          <target state="new">\[ Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>x:DeferLoadStrategy="Lazy"<ept id="p1">**</ept> delays the creation of an element and its children, decreasing startup time but increasing memory usage slightly.</source>
          <target state="new"><bpt id="p1">**</bpt>x:DeferLoadStrategy="Lazy"<ept id="p1">**</ept> delays the creation of an element and its children, decreasing startup time but increasing memory usage slightly.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Each element affected adds about 600 bytes to the memory usage.</source>
          <target state="new">Each element affected adds about 600 bytes to the memory usage.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The larger the element tree you defer, the more startup time you'll save, but at the cost of a greater memory footprint.</source>
          <target state="new">The larger the element tree you defer, the more startup time you'll save, but at the cost of a greater memory footprint.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Therefore it's possible to overuse this attribute to the extent that your performance decreases.</source>
          <target state="new">Therefore it's possible to overuse this attribute to the extent that your performance decreases.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>XAML attribute usage</source>
          <target state="new">XAML attribute usage</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Remarks</source>
          <target state="new">Remarks</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The restrictions for using <bpt id="p1">**</bpt>x:DeferLoadStrategy<ept id="p1">**</ept> are:</source>
          <target state="new">The restrictions for using <bpt id="p1">**</bpt>x:DeferLoadStrategy<ept id="p1">**</ept> are:</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Requires an <bpt id="p1">[</bpt>x:Name<ept id="p1">](x-name-attribute.md)</ept> defined, as there needs to be a way to find the element later.</source>
          <target state="new">Requires an <bpt id="p1">[</bpt>x:Name<ept id="p1">](x-name-attribute.md)</ept> defined, as there needs to be a way to find the element later.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Only a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>UIElement<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208911)</ept> can be marked as deferred, with the exception of types deriving from <bpt id="p3">[</bpt><bpt id="p4">**</bpt>FlyoutBase<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn279249)</ept>.</source>
          <target state="new">Only a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>UIElement<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208911)</ept> can be marked as deferred, with the exception of types deriving from <bpt id="p3">[</bpt><bpt id="p4">**</bpt>FlyoutBase<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn279249)</ept>.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Root elements can not be deferred in a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Page<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.controls.page)</ept>, a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>UserControls<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.controls.usercontrol)</ept>, nor a <bpt id="p5">[</bpt><bpt id="p6">**</bpt>DataTemplate<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/br242348)</ept>.</source>
          <target state="new">Root elements can not be deferred in a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Page<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.controls.page)</ept>, a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>UserControls<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.controls.usercontrol)</ept>, nor a <bpt id="p5">[</bpt><bpt id="p6">**</bpt>DataTemplate<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/br242348)</ept>.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Elements in a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ResourceDictionary<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208794)</ept> cannot be deferred.</source>
          <target state="new">Elements in a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ResourceDictionary<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208794)</ept> cannot be deferred.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Does not work with loose XAML loaded with <bpt id="p1">[</bpt><bpt id="p2">**</bpt>XamlReader.Load<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br228048)</ept>.</source>
          <target state="new">Does not work with loose XAML loaded with <bpt id="p1">[</bpt><bpt id="p2">**</bpt>XamlReader.Load<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br228048)</ept>.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Moving a parent element will clear out any elements that have not been realized.</source>
          <target state="new">Moving a parent element will clear out any elements that have not been realized.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>There are several different ways to realize the deferred elements:</source>
          <target state="new">There are several different ways to realize the deferred elements:</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Call <bpt id="p1">[</bpt><bpt id="p2">**</bpt>FindName<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208715)</ept> with the name that was defined on the element.</source>
          <target state="new">Call <bpt id="p1">[</bpt><bpt id="p2">**</bpt>FindName<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208715)</ept> with the name that was defined on the element.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Call <bpt id="p1">[</bpt><bpt id="p2">**</bpt>GetTemplateChild<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br209416)</ept> with the name that was defined on the element.</source>
          <target state="new">Call <bpt id="p1">[</bpt><bpt id="p2">**</bpt>GetTemplateChild<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br209416)</ept> with the name that was defined on the element.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>In a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>VisualState<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br209007)</ept>, use a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Setter<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br208817)</ept> or <bpt id="p5">**</bpt>Storyboard<ept id="p5">**</ept> animation that is targeting the deferred element.</source>
          <target state="new">In a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>VisualState<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br209007)</ept>, use a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Setter<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br208817)</ept> or <bpt id="p5">**</bpt>Storyboard<ept id="p5">**</ept> animation that is targeting the deferred element.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Target the deferred element in any <bpt id="p1">**</bpt>Storyboard<ept id="p1">**</ept>.</source>
          <target state="new">Target the deferred element in any <bpt id="p1">**</bpt>Storyboard<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Use a binding that is targeting the deferred element.</source>
          <target state="new">Use a binding that is targeting the deferred element.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>NOTE: Once the instantiation of an element has started, it is created on the UI thread, so it could cause the UI to stutter if too much is created at once.</source>
          <target state="new">NOTE: Once the instantiation of an element has started, it is created on the UI thread, so it could cause the UI to stutter if too much is created at once.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Once a deferred element is created by any of the methods listed above, several things will happen:</source>
          <target state="new">Once a deferred element is created by any of the methods listed above, several things will happen:</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Loaded<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208723)</ept> event on the element will get raised.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Loaded<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208723)</ept> event on the element will get raised.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Any bindings on the element will get evaluated.</source>
          <target state="new">Any bindings on the element will get evaluated.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If the application has registered to receive property change notifications on the property containing the deferred element(s), the notification will be raised.</source>
          <target state="new">If the application has registered to receive property change notifications on the property containing the deferred element(s), the notification will be raised.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>You can nest deferred elements, however they have to be realized from the outer-most element in.</source>
          <target state="new">You can nest deferred elements, however they have to be realized from the outer-most element in.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>If you try to realize a child element before the parent has been realized, an exception will be raised.</source>
          <target state="new">If you try to realize a child element before the parent has been realized, an exception will be raised.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>In general, the recommendation is to defer things that are not viewable in the first frame.</source>
          <target state="new">In general, the recommendation is to defer things that are not viewable in the first frame.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>A good guideline for finding candidates to be deferred is to look for elements that are being created with collapsed <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Visibility<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208992)</ept>.</source>
          <target state="new">A good guideline for finding candidates to be deferred is to look for elements that are being created with collapsed <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Visibility<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208992)</ept>.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Also incidental UI (that is, UI that is triggered by user interaction) is a good place to look for deferring elements.</source>
          <target state="new">Also incidental UI (that is, UI that is triggered by user interaction) is a good place to look for deferring elements.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Be wary of deferring elements in a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ListView<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242878)</ept> scenario, as it will decrease your startup time, but could also decrease your panning performance depending on what you're creating.</source>
          <target state="new">Be wary of deferring elements in a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ListView<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242878)</ept> scenario, as it will decrease your startup time, but could also decrease your panning performance depending on what you're creating.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>If you are looking to increase panning performance, please refer to the <bpt id="p1">[</bpt>{x:Bind} markup extension<ept id="p1">](x-bind-markup-extension.md)</ept> and <bpt id="p2">[</bpt>x:Phase attribute<ept id="p2">](x-phase-attribute.md)</ept> documentation.</source>
          <target state="new">If you are looking to increase panning performance, please refer to the <bpt id="p1">[</bpt>{x:Bind} markup extension<ept id="p1">](x-bind-markup-extension.md)</ept> and <bpt id="p2">[</bpt>x:Phase attribute<ept id="p2">](x-phase-attribute.md)</ept> documentation.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>If the <bpt id="p1">[</bpt>x:Phase attribute<ept id="p1">](x-phase-attribute.md)</ept> is used in conjunction with <bpt id="p2">**</bpt>x:DeferLoadStrategy<ept id="p2">**</ept> then, when an element or an element tree is realized, the bindings will be applied up to and including the current phase.</source>
          <target state="new">If the <bpt id="p1">[</bpt>x:Phase attribute<ept id="p1">](x-phase-attribute.md)</ept> is used in conjunction with <bpt id="p2">**</bpt>x:DeferLoadStrategy<ept id="p2">**</ept> then, when an element or an element tree is realized, the bindings will be applied up to and including the current phase.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The phase specified for <bpt id="p1">**</bpt>x:Phase<ept id="p1">**</ept> will not affect or control the deferral of the element.</source>
          <target state="new">The phase specified for <bpt id="p1">**</bpt>x:Phase<ept id="p1">**</ept> will not affect or control the deferral of the element.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>When a list item is recycled as part of panning, realized elements will behave in the same way as other active elements, and compiled bindings (<bpt id="p1">**</bpt>{x:Bind}<ept id="p1">**</ept> bindings) will be processed using the same rules, including phasing.</source>
          <target state="new">When a list item is recycled as part of panning, realized elements will behave in the same way as other active elements, and compiled bindings (<bpt id="p1">**</bpt>{x:Bind}<ept id="p1">**</ept> bindings) will be processed using the same rules, including phasing.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A general guideline is to measure your application before and after to make sure you are getting the performance that you want.</source>
          <target state="new">A general guideline is to measure your application before and after to make sure you are getting the performance that you want.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="new">Example</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>