<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="fr-fr">
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>description: This article explains how to support the Share contract in a Universal Windows Platform (UWP) app.</source>
          <target state="new">description: This article explains how to support the Share contract in a Universal Windows Platform (UWP) app.</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>title: Share data</source>
          <target state="new">title: Share data</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>ms.assetid: 32287F5E-EB86-4B98-97FF-8F6228D06782</source>
          <target state="new">ms.assetid: 32287F5E-EB86-4B98-97FF-8F6228D06782</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Share data</source>
          <target state="new">Share data</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>\[ Updated for UWP apps on Windows 10.</source>
          <target state="new">\[ Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This article explains how to support the Share contract in a Universal Windows Platform (UWP) app.</source>
          <target state="new">This article explains how to support the Share contract in a Universal Windows Platform (UWP) app.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The Share contract is an easy way to quickly share data, such as text, links, photos, and videos, between apps.</source>
          <target state="new">The Share contract is an easy way to quickly share data, such as text, links, photos, and videos, between apps.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For example, a user might want to share a webpage with their friends using a social networking app, or save a link in a notes app to refer to later.</source>
          <target state="new">For example, a user might want to share a webpage with their friends using a social networking app, or save a link in a notes app to refer to later.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Set up an event handler</source>
          <target state="new">Set up an event handler</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Add a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DataRequested<ept id="p2">**</ept><ept id="p1">][DataRequested]</ept> event handler to be called whenever a user invokes share.</source>
          <target state="new">Add a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DataRequested<ept id="p2">**</ept><ept id="p1">][DataRequested]</ept> event handler to be called whenever a user invokes share.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This can occur either when the user taps a control in your app (such as a button or app bar command) or automatically in a specific scenario (if the user finishes a level and gets a high score, for example).</source>
          <target state="new">This can occur either when the user taps a control in your app (such as a button or app bar command) or automatically in a specific scenario (if the user finishes a level and gets a high score, for example).</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>[!code-cs<bpt id="p1">[</bpt>Main<ept id="p1">](./code/share_data/cs/MainPage.xaml.cs#SnippetPrepareToShare)</ept>]</source>
          <target state="new">[!code-cs<bpt id="p1">[</bpt>Main<ept id="p1">](./code/share_data/cs/MainPage.xaml.cs#SnippetPrepareToShare)</ept>]</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>When a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DataRequested<ept id="p2">**</ept><ept id="p1">][DataRequested]</ept> event occurs, your app receives a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>DataRequest<ept id="p4">**</ept><ept id="p3">][DataRequest]</ept> object.</source>
          <target state="new">When a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DataRequested<ept id="p2">**</ept><ept id="p1">][DataRequested]</ept> event occurs, your app receives a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>DataRequest<ept id="p4">**</ept><ept id="p3">][DataRequest]</ept> object.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This contains a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DataPackage<ept id="p2">**</ept><ept id="p1">][DataPackage]</ept> that you can use to provide the content that the user wants to share.</source>
          <target state="new">This contains a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DataPackage<ept id="p2">**</ept><ept id="p1">][DataPackage]</ept> that you can use to provide the content that the user wants to share.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You must provide a title and data to share.</source>
          <target state="new">You must provide a title and data to share.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>A description is optional, but recommended.</source>
          <target state="new">A description is optional, but recommended.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>[!code-cs<bpt id="p1">[</bpt>Main<ept id="p1">](./code/share_data/cs/MainPage.xaml.cs#SnippetCreateRequest)</ept>]</source>
          <target state="new">[!code-cs<bpt id="p1">[</bpt>Main<ept id="p1">](./code/share_data/cs/MainPage.xaml.cs#SnippetCreateRequest)</ept>]</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Choose data</source>
          <target state="new">Choose data</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>You can share various types of data, including:</source>
          <target state="new">You can share various types of data, including:</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Plain text</source>
          <target state="new">Plain text</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Uniform Resource Identifiers (URIs)</source>
          <target state="new">Uniform Resource Identifiers (URIs)</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>HTML</source>
          <target state="new">HTML</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Formatted text</source>
          <target state="new">Formatted text</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Bitmaps</source>
          <target state="new">Bitmaps</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Plain text</source>
          <target state="new">Plain text</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Files</source>
          <target state="new">Files</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Custom developer-defined data</source>
          <target state="new">Custom developer-defined data</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DataPackage<ept id="p2">**</ept><ept id="p1">][DataPackage]</ept> object can contain one or more of these formats, in any combination.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DataPackage<ept id="p2">**</ept><ept id="p1">][DataPackage]</ept> object can contain one or more of these formats, in any combination.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The following example demonstrates sharing text.</source>
          <target state="new">The following example demonstrates sharing text.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>[!code-cs<bpt id="p1">[</bpt>Main<ept id="p1">](./code/share_data/cs/MainPage.xaml.cs#SnippetSetContent)</ept>]</source>
          <target state="new">[!code-cs<bpt id="p1">[</bpt>Main<ept id="p1">](./code/share_data/cs/MainPage.xaml.cs#SnippetSetContent)</ept>]</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Set properties</source>
          <target state="new">Set properties</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>When you package data for sharing, you can supply a variety of properties that provide additional information about the content being shared.</source>
          <target state="new">When you package data for sharing, you can supply a variety of properties that provide additional information about the content being shared.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>These properties help target apps improve the user experience.</source>
          <target state="new">These properties help target apps improve the user experience.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>For example, a description helps when the user is sharing content with more than one app.</source>
          <target state="new">For example, a description helps when the user is sharing content with more than one app.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Adding a thumbnail when sharing an image or a link to a web page provides a visual reference to the user.</source>
          <target state="new">Adding a thumbnail when sharing an image or a link to a web page provides a visual reference to the user.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DataPackage.DataPackagePropertySet<ept id="p2">**</ept><ept id="p1">][DataPackagePropertySet]</ept>.</source>
          <target state="new">For more information, see <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DataPackage.DataPackagePropertySet<ept id="p2">**</ept><ept id="p1">][DataPackagePropertySet]</ept>.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>All properties except the title are optional.</source>
          <target state="new">All properties except the title are optional.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The title property is mandatory and must be set.</source>
          <target state="new">The title property is mandatory and must be set.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>[!code-cs<bpt id="p1">[</bpt>Main<ept id="p1">](./code/share_data/cs/MainPage.xaml.cs#SnippetSetProperties)</ept>]</source>
          <target state="new">[!code-cs<bpt id="p1">[</bpt>Main<ept id="p1">](./code/share_data/cs/MainPage.xaml.cs#SnippetSetProperties)</ept>]</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Launch the share UI</source>
          <target state="new">Launch the share UI</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>A UI for sharing is provided by the system.</source>
          <target state="new">A UI for sharing is provided by the system.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>To launch it, call the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ShowShareUI<ept id="p2">**</ept><ept id="p1">][ShowShareUi]</ept> method.</source>
          <target state="new">To launch it, call the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ShowShareUI<ept id="p2">**</ept><ept id="p1">][ShowShareUi]</ept> method.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>[!code-cs<bpt id="p1">[</bpt>Main<ept id="p1">](./code/share_data/cs/MainPage.xaml.cs#SnippetShowUI)</ept>]</source>
          <target state="new">[!code-cs<bpt id="p1">[</bpt>Main<ept id="p1">](./code/share_data/cs/MainPage.xaml.cs#SnippetShowUI)</ept>]</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Handle errors</source>
          <target state="new">Handle errors</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>In most cases, sharing content is a straightforward process.</source>
          <target state="new">In most cases, sharing content is a straightforward process.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>However, there's always a chance that something unexpected could happen.</source>
          <target state="new">However, there's always a chance that something unexpected could happen.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>For example, the app might require the user to select content for sharing but the user didn't select any.</source>
          <target state="new">For example, the app might require the user to select content for sharing but the user didn't select any.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>To handle these situations, use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>FailWithDisplayText<ept id="p2">**</ept><ept id="p1">][FailWithDisplayText]</ept> method, which will display a message to the user if something goes wrong.</source>
          <target state="new">To handle these situations, use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>FailWithDisplayText<ept id="p2">**</ept><ept id="p1">][FailWithDisplayText]</ept> method, which will display a message to the user if something goes wrong.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Delay share with delegates</source>
          <target state="new">Delay share with delegates</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Sometimes, it might not make sense to prepare the data that the user wants to share right away.</source>
          <target state="new">Sometimes, it might not make sense to prepare the data that the user wants to share right away.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>For example, if your app supports sending a large image file in several different possible formats, it's inefficient to create all those images before the user makes their selection.</source>
          <target state="new">For example, if your app supports sending a large image file in several different possible formats, it's inefficient to create all those images before the user makes their selection.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>To solve this problem, a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DataPackage<ept id="p2">**</ept><ept id="p1">][DataPackage]</ept> can contain a delegate — a function that is called when the receiving app requests data.</source>
          <target state="new">To solve this problem, a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DataPackage<ept id="p2">**</ept><ept id="p1">][DataPackage]</ept> can contain a delegate — a function that is called when the receiving app requests data.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>We recommend using a delegate any time that the data a user wants to share is resource-intensive.</source>
          <target state="new">We recommend using a delegate any time that the data a user wants to share is resource-intensive.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><ph id="ph1">
```cs
async void OnDeferredImageRequestedHandler(DataProviderRequest request)
{
    // Provide updated bitmap data using delayed rendering
    if (this.imageStream != null)
    {
        DataProviderDeferral deferral = request.GetDeferral();
        InMemoryRandomAccessStream inMemoryStream = new InMemoryRandomAccessStream();

        // Decode the image.
        BitmapDecoder imageDecoder = await BitmapDecoder.CreateAsync(this.imageStream);

        // Re-encode the image at 50% width and height.
        BitmapEncoder imageEncoder = await BitmapEncoder.CreateForTranscodingAsync(inMemoryStream, imageDecoder);
        imageEncoder.BitmapTransform.ScaledWidth = (uint)(imageDecoder.OrientedPixelHeight * 0.5);
        imageEncoder.BitmapTransform.ScaledHeight = (uint)(imageDecoder.OrientedPixelHeight * 0.5);
        await imageEncoder.FlushAsync();

        request.SetData(RandomAccessStreamReference.CreateFromStream(inMemoryStream));
        deferral.Complete();
    }
}
```

##</ph> Related topics
<bpt id="p1">* [</bpt><ept id="p1">Receive data](receive-data.md)</ept><ph id="ph2">


</ph></source>
          <target state="new"><ph id="ph1">
```cs
async void OnDeferredImageRequestedHandler(DataProviderRequest request)
{
    // Provide updated bitmap data using delayed rendering
    if (this.imageStream != null)
    {
        DataProviderDeferral deferral = request.GetDeferral();
        InMemoryRandomAccessStream inMemoryStream = new InMemoryRandomAccessStream();

        // Decode the image.
        BitmapDecoder imageDecoder = await BitmapDecoder.CreateAsync(this.imageStream);

        // Re-encode the image at 50% width and height.
        BitmapEncoder imageEncoder = await BitmapEncoder.CreateForTranscodingAsync(inMemoryStream, imageDecoder);
        imageEncoder.BitmapTransform.ScaledWidth = (uint)(imageDecoder.OrientedPixelHeight * 0.5);
        imageEncoder.BitmapTransform.ScaledHeight = (uint)(imageDecoder.OrientedPixelHeight * 0.5);
        await imageEncoder.FlushAsync();

        request.SetData(RandomAccessStreamReference.CreateFromStream(inMemoryStream));
        deferral.Complete();
    }
}
```

##</ph> Related topics
<bpt id="p1">* [</bpt><ept id="p1">Receive data](receive-data.md)</ept><ph id="ph2">


</ph></target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
    </xliffext:oltranslationpriority>
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b34d0b68388aa72abab4f30bf7e41d6707195b19</xliffext:olfilehash>
  </header>
</xliff>