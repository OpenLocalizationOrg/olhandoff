<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-48076a9" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">12f5e0dbf2eaf7a8ea903ed0e7cb7ecd5a6eb0f9</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci1\usability\accessibility\accessibility-overview.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>This article is an overview of the concepts and technologies related to accessibility scenarios for Universal Windows Platform (UWP) apps.</source>
          <target state="new">This article is an overview of the concepts and technologies related to accessibility scenarios for Universal Windows Platform (UWP) apps.</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Accessibility overview</source>
          <target state="new">Accessibility overview</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Accessibility overview</source>
          <target state="new">Accessibility overview</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>\[ Updated for UWP apps on Windows 10.</source>
          <target state="new">\[ Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This article is an overview of the concepts and technologies related to accessibility scenarios for Universal Windows Platform (UWP) apps.</source>
          <target state="new">This article is an overview of the concepts and technologies related to accessibility scenarios for Universal Windows Platform (UWP) apps.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Accessibility and your app</source>
          <target state="new">Accessibility and your app</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>There are many possible disabilities or impairments, including limitations in mobility, vision, color perception, hearing, speech, cognition, and literacy.</source>
          <target state="new">There are many possible disabilities or impairments, including limitations in mobility, vision, color perception, hearing, speech, cognition, and literacy.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>However, you can address most requirements by following the guidelines offered here.</source>
          <target state="new">However, you can address most requirements by following the guidelines offered here.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This means providing:</source>
          <target state="new">This means providing:</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Support for keyboard interactions and screen readers.</source>
          <target state="new">Support for keyboard interactions and screen readers.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Support for user customization, such as font, zoom setting (magnification), color, and high-contrast settings.</source>
          <target state="new">Support for user customization, such as font, zoom setting (magnification), color, and high-contrast settings.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Alternatives or supplements for parts of your UI.</source>
          <target state="new">Alternatives or supplements for parts of your UI.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Controls for XAML provide built-in keyboard support and support for assistive technologies such as screen readers, which take advantage of accessibility frameworks that already support UWP apps, HTML, and other UI technologies.</source>
          <target state="new">Controls for XAML provide built-in keyboard support and support for assistive technologies such as screen readers, which take advantage of accessibility frameworks that already support UWP apps, HTML, and other UI technologies.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This built-in support enables a basic level of accessibility that you can customize with very little work, by setting just a handful of properties.</source>
          <target state="new">This built-in support enables a basic level of accessibility that you can customize with very little work, by setting just a handful of properties.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If you are creating your own custom XAML components and controls, you can also add similar support to those controls by using the concept of an <bpt id="p1">*</bpt>automation peer<ept id="p1">*</ept>.</source>
          <target state="new">If you are creating your own custom XAML components and controls, you can also add similar support to those controls by using the concept of an <bpt id="p1">*</bpt>automation peer<ept id="p1">*</ept>.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>In addition, data binding, style, and template features make it easy to implement support for dynamic changes to display settings and text for alternative UIs.</source>
          <target state="new">In addition, data binding, style, and template features make it easy to implement support for dynamic changes to display settings and text for alternative UIs.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>UI Automation</source>
          <target state="new">UI Automation</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Accessibility support comes primarily from the integrated support for the Microsoft UI Automation framework.</source>
          <target state="new">Accessibility support comes primarily from the integrated support for the Microsoft UI Automation framework.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>That support is provided through base classes and the built-in behavior of the class implementation for control types, and an interface representation of the UI Automation provider API.</source>
          <target state="new">That support is provided through base classes and the built-in behavior of the class implementation for control types, and an interface representation of the UI Automation provider API.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Each control class uses the UI Automation concepts of automation peers and automation patterns that report the control's role and content to UI Automation clients.</source>
          <target state="new">Each control class uses the UI Automation concepts of automation peers and automation patterns that report the control's role and content to UI Automation clients.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The app is treated as a top-level window by UI Automation, and through the UI Automation framework all the accessibility-relevant content within that app window is available to a UI Automation client.</source>
          <target state="new">The app is treated as a top-level window by UI Automation, and through the UI Automation framework all the accessibility-relevant content within that app window is available to a UI Automation client.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For more info about UI Automation, see <bpt id="p1">[</bpt>UI Automation Overview<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/Ee684076)</ept>.</source>
          <target state="new">For more info about UI Automation, see <bpt id="p1">[</bpt>UI Automation Overview<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/Ee684076)</ept>.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Assistive technology</source>
          <target state="new">Assistive technology</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Many user accessibility needs are met by assistive technology products installed by the user or by tools and settings provided by the operating system.</source>
          <target state="new">Many user accessibility needs are met by assistive technology products installed by the user or by tools and settings provided by the operating system.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This includes functionality such as screen readers, screen magnification, and high-contrast settings.</source>
          <target state="new">This includes functionality such as screen readers, screen magnification, and high-contrast settings.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Assistive technology products include a wide variety of software and hardware.</source>
          <target state="new">Assistive technology products include a wide variety of software and hardware.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>These products work through the standard keyboard interface and accessibility frameworks that report information about the content and structure of a UI to screen readers and other assistive technologies.</source>
          <target state="new">These products work through the standard keyboard interface and accessibility frameworks that report information about the content and structure of a UI to screen readers and other assistive technologies.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Examples of assistive technology products include:</source>
          <target state="new">Examples of assistive technology products include:</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The On-Screen Keyboard, which enables people to use a pointer in place of a keyboard to type text.</source>
          <target state="new">The On-Screen Keyboard, which enables people to use a pointer in place of a keyboard to type text.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Voice-recognition software, which converts spoken words into typed text.</source>
          <target state="new">Voice-recognition software, which converts spoken words into typed text.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Screen readers, which convert text into spoken words or other forms such as Braille.</source>
          <target state="new">Screen readers, which convert text into spoken words or other forms such as Braille.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The Narrator screen reader, which is specifically part of Windows.</source>
          <target state="new">The Narrator screen reader, which is specifically part of Windows.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Narrator has a touch mode, which can perform screen reading tasks by processing touch gestures, for when there is no keyboard available.</source>
          <target state="new">Narrator has a touch mode, which can perform screen reading tasks by processing touch gestures, for when there is no keyboard available.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Programs or settings that adjust the display or areas of it, for example high contrast themes, dots per inch (dpi) settings of the display, or the Magnifier tool.</source>
          <target state="new">Programs or settings that adjust the display or areas of it, for example high contrast themes, dots per inch (dpi) settings of the display, or the Magnifier tool.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Apps that have good keyboard and screen reader support usually work well with various assistive technology products.</source>
          <target state="new">Apps that have good keyboard and screen reader support usually work well with various assistive technology products.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>In many cases, a UWP app works with these products without additional modification of information or structure.</source>
          <target state="new">In many cases, a UWP app works with these products without additional modification of information or structure.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>However, you may want to modify some settings for optimal accessibility experience or to implement additional support.</source>
          <target state="new">However, you may want to modify some settings for optimal accessibility experience or to implement additional support.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Some of the options that you can use for testing basic accessibility scenarios with assistive technologies are listed in <bpt id="p1">[</bpt>Accessibility testing<ept id="p1">](accessibility-testing.md)</ept>.</source>
          <target state="new">Some of the options that you can use for testing basic accessibility scenarios with assistive technologies are listed in <bpt id="p1">[</bpt>Accessibility testing<ept id="p1">](accessibility-testing.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Screen reader support and basic accessibility information</source>
          <target state="new">Screen reader support and basic accessibility information</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Screen readers provide access to the text in an app by rendering it in some other format, such as spoken language or Braille output.</source>
          <target state="new">Screen readers provide access to the text in an app by rendering it in some other format, such as spoken language or Braille output.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The exact behavior of a screen reader depends on the software and on the user's configuration of it.</source>
          <target state="new">The exact behavior of a screen reader depends on the software and on the user's configuration of it.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>For example, some screen readers read the entire app UI when the user starts or switches to the app being viewed, which enables the user to receive all of the available informational content before attempting to navigate it.</source>
          <target state="new">For example, some screen readers read the entire app UI when the user starts or switches to the app being viewed, which enables the user to receive all of the available informational content before attempting to navigate it.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Some screen readers also read the text associated with an individual control when it receives focus during tab navigation.</source>
          <target state="new">Some screen readers also read the text associated with an individual control when it receives focus during tab navigation.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>This enables users to orient themselves as they navigate among the input controls of an application.</source>
          <target state="new">This enables users to orient themselves as they navigate among the input controls of an application.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Narrator is an example of a screen reader that provides both behaviors, depending on user choice.</source>
          <target state="new">Narrator is an example of a screen reader that provides both behaviors, depending on user choice.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The most important information that a screen reader or any other assistive technology needs in order to help users understand or navigate an app is an <bpt id="p1">*</bpt>accessible name<ept id="p1">*</ept> for the element parts of the app.</source>
          <target state="new">The most important information that a screen reader or any other assistive technology needs in order to help users understand or navigate an app is an <bpt id="p1">*</bpt>accessible name<ept id="p1">*</ept> for the element parts of the app.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>In many cases, a control or element already has an accessible name that is calculated from other property values that you have otherwise provided.</source>
          <target state="new">In many cases, a control or element already has an accessible name that is calculated from other property values that you have otherwise provided.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The most common case in which you can use an already-calculated name is with an element that supports and displays inner text.</source>
          <target state="new">The most common case in which you can use an already-calculated name is with an element that supports and displays inner text.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>For other elements, you sometimes need to account for other ways to provide an accessible name by following best practices for element structure.</source>
          <target state="new">For other elements, you sometimes need to account for other ways to provide an accessible name by following best practices for element structure.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>And sometimes you need to provide a name that is explicitly intended as the accessible name for app accessibility.</source>
          <target state="new">And sometimes you need to provide a name that is explicitly intended as the accessible name for app accessibility.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>For a listing of how many of these calculated values work in common UI elements, and for more info about accessible names in general, see <bpt id="p1">[</bpt>Basic accessibility information<ept id="p1">](basic-accessibility-information.md)</ept>.</source>
          <target state="new">For a listing of how many of these calculated values work in common UI elements, and for more info about accessible names in general, see <bpt id="p1">[</bpt>Basic accessibility information<ept id="p1">](basic-accessibility-information.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>There are several other automation properties available (including the keyboard properties described in the next section).</source>
          <target state="new">There are several other automation properties available (including the keyboard properties described in the next section).</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>However, not all screen readers support all automation properties.</source>
          <target state="new">However, not all screen readers support all automation properties.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>In general, you should set all appropriate automation properties and test to provide the widest possible support for screen readers.</source>
          <target state="new">In general, you should set all appropriate automation properties and test to provide the widest possible support for screen readers.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Keyboard support</source>
          <target state="new">Keyboard support</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>To provide good keyboard support, you must ensure that every part of your application can be used with a keyboard.</source>
          <target state="new">To provide good keyboard support, you must ensure that every part of your application can be used with a keyboard.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>If your app uses mostly the standard controls and doesn't use any custom controls, you are most of the way there already.</source>
          <target state="new">If your app uses mostly the standard controls and doesn't use any custom controls, you are most of the way there already.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The basic XAML control model provides built-in keyboard support including tab navigation, text input, and control-specific support.</source>
          <target state="new">The basic XAML control model provides built-in keyboard support including tab navigation, text input, and control-specific support.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The elements that serve as layout containers (such as panels) use the layout order to establish a default tab order.</source>
          <target state="new">The elements that serve as layout containers (such as panels) use the layout order to establish a default tab order.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>That order is often the correct tab order to use for an accessible representation of the UI.</source>
          <target state="new">That order is often the correct tab order to use for an accessible representation of the UI.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>If you use <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ListBox<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR242868)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>GridView<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR242705)</ept> controls to display data, they provide built-in arrow-key navigation.</source>
          <target state="new">If you use <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ListBox<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR242868)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>GridView<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR242705)</ept> controls to display data, they provide built-in arrow-key navigation.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Or if you use a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Button<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209265)</ept> control, it already handles the Spacebar or Enter keys for button activation.</source>
          <target state="new">Or if you use a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Button<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209265)</ept> control, it already handles the Spacebar or Enter keys for button activation.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>For more info about all the aspects of keyboard support, including tab order and key-based activation or navigation, see <bpt id="p1">[</bpt>Keyboard accessibility<ept id="p1">](keyboard-accessibility.md)</ept>.</source>
          <target state="new">For more info about all the aspects of keyboard support, including tab order and key-based activation or navigation, see <bpt id="p1">[</bpt>Keyboard accessibility<ept id="p1">](keyboard-accessibility.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Media and captioning</source>
          <target state="new">Media and captioning</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>You typically display audiovisual media through a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MediaElement<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR242926)</ept> object.</source>
          <target state="new">You typically display audiovisual media through a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MediaElement<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR242926)</ept> object.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>You can use <bpt id="p1">**</bpt>MediaElement<ept id="p1">**</ept> APIs to control the media playback.</source>
          <target state="new">You can use <bpt id="p1">**</bpt>MediaElement<ept id="p1">**</ept> APIs to control the media playback.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>For accessibility purposes, provide controls that enable users to play, pause, and stop the media as needed.</source>
          <target state="new">For accessibility purposes, provide controls that enable users to play, pause, and stop the media as needed.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Sometimes, media includes additional components that are intended for accessibility, such as captioning or alternative audio tracks that include narrative descriptions.</source>
          <target state="new">Sometimes, media includes additional components that are intended for accessibility, such as captioning or alternative audio tracks that include narrative descriptions.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Accessible text</source>
          <target state="new">Accessible text</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Three main aspects of text are relevant to accessibility:</source>
          <target state="new">Three main aspects of text are relevant to accessibility:</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Tools must determine whether the text is to be read as part of a tab-sequence traversal or only as part of an overall document representation.</source>
          <target state="new">Tools must determine whether the text is to be read as part of a tab-sequence traversal or only as part of an overall document representation.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>You can help control this determination by choosing the appropriate element for displaying the text or by adjusting properties of those text elements.</source>
          <target state="new">You can help control this determination by choosing the appropriate element for displaying the text or by adjusting properties of those text elements.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Each text element has a specific purpose, and that purpose often has a corresponding UI Automation role.</source>
          <target state="new">Each text element has a specific purpose, and that purpose often has a corresponding UI Automation role.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Using the wrong element can result in reporting the wrong role to UI Automation and creating a confusing experience for an assistive technology user.</source>
          <target state="new">Using the wrong element can result in reporting the wrong role to UI Automation and creating a confusing experience for an assistive technology user.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Many users have sight limitations that make it difficult for them to read text unless it has adequate contrast against the background.</source>
          <target state="new">Many users have sight limitations that make it difficult for them to read text unless it has adequate contrast against the background.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>How this impacts the user is not intuitive for app designers who do not have that sight limitation.</source>
          <target state="new">How this impacts the user is not intuitive for app designers who do not have that sight limitation.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>For example, for color-blind users, poor color choices in the design can prevent some users from being able to read the text.</source>
          <target state="new">For example, for color-blind users, poor color choices in the design can prevent some users from being able to read the text.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Accessibility recommendations that were originally made for web content define standards for contrast that can avoid these problems in apps as well.</source>
          <target state="new">Accessibility recommendations that were originally made for web content define standards for contrast that can avoid these problems in apps as well.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>For more info, see <bpt id="p1">[</bpt>Accessible text requirements<ept id="p1">](accessible-text-requirements.md)</ept>.</source>
          <target state="new">For more info, see <bpt id="p1">[</bpt>Accessible text requirements<ept id="p1">](accessible-text-requirements.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Many users have difficulty reading text that is simply too small.</source>
          <target state="new">Many users have difficulty reading text that is simply too small.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>You can prevent this issue by making the text in your app's UI reasonably large in the first place.</source>
          <target state="new">You can prevent this issue by making the text in your app's UI reasonably large in the first place.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>However, that's challenging for apps that display large quantities of text, or text interspersed with other visual elements.</source>
          <target state="new">However, that's challenging for apps that display large quantities of text, or text interspersed with other visual elements.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>In such cases, make sure that the app correctly interacts with the system features that can scale up the display, so that any text in apps scales up along with it.</source>
          <target state="new">In such cases, make sure that the app correctly interacts with the system features that can scale up the display, so that any text in apps scales up along with it.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>(Some users change dpi values as an accessibility option.</source>
          <target state="new">(Some users change dpi values as an accessibility option.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>That option is available from <bpt id="p1">**</bpt>Make things on the screen larger<ept id="p1">**</ept> in <bpt id="p2">**</bpt>Ease of Access<ept id="p2">**</ept>, which redirects to a <bpt id="p3">**</bpt>Control Panel<ept id="p3">**</ept> UI for <bpt id="p4">**</bpt>Appearance and Personalization<ept id="p4">**</ept><ph id="ph1"> / </ph><bpt id="p5">**</bpt>Display<ept id="p5">**</ept>.)</source>
          <target state="new">That option is available from <bpt id="p1">**</bpt>Make things on the screen larger<ept id="p1">**</ept> in <bpt id="p2">**</bpt>Ease of Access<ept id="p2">**</ept>, which redirects to a <bpt id="p3">**</bpt>Control Panel<ept id="p3">**</ept> UI for <bpt id="p4">**</bpt>Appearance and Personalization<ept id="p4">**</ept><ph id="ph1"> / </ph><bpt id="p5">**</bpt>Display<ept id="p5">**</ept>.)</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Supporting high-contrast themes</source>
          <target state="new">Supporting high-contrast themes</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>UI controls use a visual representation that is defined as part of a XAML resource dictionary of themes.</source>
          <target state="new">UI controls use a visual representation that is defined as part of a XAML resource dictionary of themes.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>One or more of these themes is specifically used when the system is set for high contrast.</source>
          <target state="new">One or more of these themes is specifically used when the system is set for high contrast.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>When the user switches to high contrast, by looking up the appropriate theme from a resource dictionary dynamically, all your UI controls will use an appropriate high-contrast theme too.</source>
          <target state="new">When the user switches to high contrast, by looking up the appropriate theme from a resource dictionary dynamically, all your UI controls will use an appropriate high-contrast theme too.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Just make sure that you haven't disabled the themes by specifying an explicit style or using another styling technique that prevents the high-contrast themes from loading and overriding your style changes.</source>
          <target state="new">Just make sure that you haven't disabled the themes by specifying an explicit style or using another styling technique that prevents the high-contrast themes from loading and overriding your style changes.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>For more info, see <bpt id="p1">[</bpt>High-contrast themes<ept id="p1">](high-contrast-themes.md)</ept>.</source>
          <target state="new">For more info, see <bpt id="p1">[</bpt>High-contrast themes<ept id="p1">](high-contrast-themes.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Design for alternative UI</source>
          <target state="new">Design for alternative UI</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>When you design your apps, consider how they may be used by people with limited mobility, vision, and hearing.</source>
          <target state="new">When you design your apps, consider how they may be used by people with limited mobility, vision, and hearing.</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Because assistive technology products make extensive use of standard UI, it is particularly important to provide good keyboard and screen-reader support even if you make no other adjustments for accessibility.</source>
          <target state="new">Because assistive technology products make extensive use of standard UI, it is particularly important to provide good keyboard and screen-reader support even if you make no other adjustments for accessibility.</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>In many cases, you can convey essential information by using multiple techniques to widen your audience.</source>
          <target state="new">In many cases, you can convey essential information by using multiple techniques to widen your audience.</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>For example, you can highlight information using both icon and color information to help users who are color blind, and you can display visual alerts along with sound effects to help users who are hearing impaired.</source>
          <target state="new">For example, you can highlight information using both icon and color information to help users who are color blind, and you can display visual alerts along with sound effects to help users who are hearing impaired.</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>If necessary, you can provide alternative, accessible user interface elements that completely remove nonessential elements and animations, and provide other simplifications to streamline the user experience.</source>
          <target state="new">If necessary, you can provide alternative, accessible user interface elements that completely remove nonessential elements and animations, and provide other simplifications to streamline the user experience.</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The following code example demonstrates how to display one <bpt id="p1">[</bpt><bpt id="p2">**</bpt>UserControl<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR227647)</ept> instance in place of another depending on a user setting.</source>
          <target state="new">The following code example demonstrates how to display one <bpt id="p1">[</bpt><bpt id="p2">**</bpt>UserControl<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR227647)</ept> instance in place of another depending on a user setting.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="new">Example:</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Verification and publishing</source>
          <target state="new">Verification and publishing</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>For more info about accessibility declarations and publishing your app, see <bpt id="p1">[</bpt>Accessibility in the Store<ept id="p1">](accessibility-in-the-store.md)</ept>.</source>
          <target state="new">For more info about accessibility declarations and publishing your app, see <bpt id="p1">[</bpt>Accessibility in the Store<ept id="p1">](accessibility-in-the-store.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  Declaring the app as accessible is only relevant to the Windows Store.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  Declaring the app as accessible is only relevant to the Windows Store.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Assistive technology support in custom controls</source>
          <target state="new">Assistive technology support in custom controls</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>When you create a custom control, we recommend that you also implement or extend one or more <bpt id="p1">[</bpt><bpt id="p2">**</bpt>AutomationPeer<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209185)</ept> subclasses to provide accessibility support.</source>
          <target state="new">When you create a custom control, we recommend that you also implement or extend one or more <bpt id="p1">[</bpt><bpt id="p2">**</bpt>AutomationPeer<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209185)</ept> subclasses to provide accessibility support.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>In some cases, so long as you use the same peer class as was used by the base control class, the automation support for your derived class is adequate at a basic level.</source>
          <target state="new">In some cases, so long as you use the same peer class as was used by the base control class, the automation support for your derived class is adequate at a basic level.</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>However, you should test this, and implementing a peer is still recommended as a best practice so that the peer can correctly report the class name of your new control class.</source>
          <target state="new">However, you should test this, and implementing a peer is still recommended as a best practice so that the peer can correctly report the class name of your new control class.</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Implementing a custom automation peer has a few steps involved.</source>
          <target state="new">Implementing a custom automation peer has a few steps involved.</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>For more info, see <bpt id="p1">[</bpt>Custom automation peers<ept id="p1">](custom-automation-peers.md)</ept>.</source>
          <target state="new">For more info, see <bpt id="p1">[</bpt>Custom automation peers<ept id="p1">](custom-automation-peers.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Assistive technology support in apps that support XAML / Microsoft DirectX interop</source>
          <target state="new">Assistive technology support in apps that support XAML / Microsoft DirectX interop</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Microsoft DirectX content that's hosted in a XAML UI (using <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SwapChainPanel<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Dn252834)</ept> or <bpt id="p3">[</bpt><bpt id="p4">**</bpt>SurfaceImageSource<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/Hh702041)</ept>) is not accessible by default.</source>
          <target state="new">Microsoft DirectX content that's hosted in a XAML UI (using <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SwapChainPanel<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Dn252834)</ept> or <bpt id="p3">[</bpt><bpt id="p4">**</bpt>SurfaceImageSource<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/Hh702041)</ept>) is not accessible by default.</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>XAML SwapChainPanel DirectX interop sample<ept id="p1">](http://go.microsoft.com/fwlink/p/?LinkID=309155)</ept> shows how to create UI Automation peers for the hosted DirectX content.</source>
          <target state="new">The <bpt id="p1">[</bpt>XAML SwapChainPanel DirectX interop sample<ept id="p1">](http://go.microsoft.com/fwlink/p/?LinkID=309155)</ept> shows how to create UI Automation peers for the hosted DirectX content.</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>This technique makes the hosted content accessible through UI Automation.</source>
          <target state="new">This technique makes the hosted content accessible through UI Automation.</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Related topics</source>
          <target state="new">Related topics</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Windows.UI.Xaml.Automation</source>
          <target state="new">Windows.UI.Xaml.Automation</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Design for accessibility</source>
          <target state="new">Design for accessibility</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>XAML accessibility sample</source>
          <target state="new">XAML accessibility sample</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>