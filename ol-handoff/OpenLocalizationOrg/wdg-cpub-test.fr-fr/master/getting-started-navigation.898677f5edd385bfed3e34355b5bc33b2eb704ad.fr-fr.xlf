<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-48076a9" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b29b3a2822da6791ac3de48ff4d3ca714c58366f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci1\porting\getting-started-navigation.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>ms.assetid: F4DF5C5F-C886-4483-BBDA-498C4E2C1BAF description: Getting started: Navigation title: Getting started: Navigation</source>
          <target state="new">ms.assetid: F4DF5C5F-C886-4483-BBDA-498C4E2C1BAF description: Getting started: Navigation title: Getting started: Navigation</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Getting started: Navigation</source>
          <target state="new">Getting started: Navigation</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>\[ Updated for UWP apps on Windows 10.</source>
          <target state="new">\[ Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Adding navigation</source>
          <target state="new">Adding navigation</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>iOS provides the <bpt id="p1">**</bpt>UINavigationController<ept id="p1">**</ept> class to help with in-app navigation: you can push and pop views to create the hierarchy of <bpt id="p2">**</bpt>UIViewControllers<ept id="p2">**</ept> that define your app.</source>
          <target state="new">iOS provides the <bpt id="p1">**</bpt>UINavigationController<ept id="p1">**</ept> class to help with in-app navigation: you can push and pop views to create the hierarchy of <bpt id="p2">**</bpt>UIViewControllers<ept id="p2">**</ept> that define your app.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>In contrast, a Windows 10 app containing multiple views takes more of a web-site approach to navigation.</source>
          <target state="new">In contrast, a Windows 10 app containing multiple views takes more of a web-site approach to navigation.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You can imagine your users hopping from page to page as they click on controls to work their way through the app.</source>
          <target state="new">You can imagine your users hopping from page to page as they click on controls to work their way through the app.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For more info, see <bpt id="p1">[</bpt>Navigation design basics<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn958438)</ept>.</source>
          <target state="new">For more info, see <bpt id="p1">[</bpt>Navigation design basics<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn958438)</ept>.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>One of the ways to manage this navigation in a Windows 10 app is to use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Frame<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242682)</ept> class.</source>
          <target state="new">One of the ways to manage this navigation in a Windows 10 app is to use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Frame<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242682)</ept> class.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The following walkthrough shows you how to try this out.</source>
          <target state="new">The following walkthrough shows you how to try this out.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Continuing with the solution you started earlier, open the <bpt id="p1">**</bpt>MainPage.xaml<ept id="p1">**</ept> file, and add a button in the <bpt id="p2">**</bpt>Design<ept id="p2">**</ept> view.</source>
          <target state="new">Continuing with the solution you started earlier, open the <bpt id="p1">**</bpt>MainPage.xaml<ept id="p1">**</ept> file, and add a button in the <bpt id="p2">**</bpt>Design<ept id="p2">**</ept> view.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Change the button's <bpt id="p1">**</bpt>Content<ept id="p1">**</ept> property from "Button" to "Go To Page".</source>
          <target state="new">Change the button's <bpt id="p1">**</bpt>Content<ept id="p1">**</ept> property from "Button" to "Go To Page".</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Then, create a handler for the button's <bpt id="p1">**</bpt>Click<ept id="p1">**</ept> event, as shown in the following figure.</source>
          <target state="new">Then, create a handler for the button's <bpt id="p1">**</bpt>Click<ept id="p1">**</ept> event, as shown in the following figure.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If you don't remember how to do this, review the walkthrough in the previous section (Hint: double-click the button in the <bpt id="p1">**</bpt>Design<ept id="p1">**</ept> view).</source>
          <target state="new">If you don't remember how to do this, review the walkthrough in the previous section (Hint: double-click the button in the <bpt id="p1">**</bpt>Design<ept id="p1">**</ept> view).</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>adding a button and its click event in visual studio</source>
          <target state="new">adding a button and its click event in visual studio</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Let's add a new page.</source>
          <target state="new">Let's add a new page.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Solution<ept id="p1">**</ept> view, tap the <bpt id="p2">**</bpt>Project<ept id="p2">**</ept> menu, and tap <bpt id="p3">**</bpt>Add New Item<ept id="p3">**</ept>.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Solution<ept id="p1">**</ept> view, tap the <bpt id="p2">**</bpt>Project<ept id="p2">**</ept> menu, and tap <bpt id="p3">**</bpt>Add New Item<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Tap <bpt id="p1">**</bpt>Blank Page<ept id="p1">**</ept> as shown in the following figure, and then tap <bpt id="p2">**</bpt>Add<ept id="p2">**</ept>.</source>
          <target state="new">Tap <bpt id="p1">**</bpt>Blank Page<ept id="p1">**</ept> as shown in the following figure, and then tap <bpt id="p2">**</bpt>Add<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>adding a new page in visual studio</source>
          <target state="new">adding a new page in visual studio</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Next, add a button to the BlankPage.xaml file.</source>
          <target state="new">Next, add a button to the BlankPage.xaml file.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Let's use the AppBarButton control, and let's give it a back arrow image: in the <bpt id="p1">**</bpt>XAML<ept id="p1">**</ept> view, add <ph id="ph1">` &lt;AppBarButton Icon="Back"/&gt;`</ph> between the <ph id="ph2">`&lt;Grid&gt; &lt;/Grid&gt;`</ph> elements.</source>
          <target state="new">Let's use the AppBarButton control, and let's give it a back arrow image: in the <bpt id="p1">**</bpt>XAML<ept id="p1">**</ept> view, add <ph id="ph1">` &lt;AppBarButton Icon="Back"/&gt;`</ph> between the <ph id="ph2">`&lt;Grid&gt; &lt;/Grid&gt;`</ph> elements.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Now, let's add an event handler to the button: double-click the control in the <bpt id="p1">**</bpt>Design<ept id="p1">**</ept> view and Microsoft Visual Studio adds the text "AppBarButton\_Click" to the <bpt id="p2">**</bpt>Click<ept id="p2">**</ept> box, as shown in the following figure, and then adds and displays the corresponding event handler in the BlankPage.xaml.cs file.</source>
          <target state="new">Now, let's add an event handler to the button: double-click the control in the <bpt id="p1">**</bpt>Design<ept id="p1">**</ept> view and Microsoft Visual Studio adds the text "AppBarButton\_Click" to the <bpt id="p2">**</bpt>Click<ept id="p2">**</ept> box, as shown in the following figure, and then adds and displays the corresponding event handler in the BlankPage.xaml.cs file.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>adding a back button and its click event in visual studio</source>
          <target state="new">adding a back button and its click event in visual studio</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>If you return to the BlankPage.xaml file's <bpt id="p1">**</bpt>XAML<ept id="p1">**</ept> view, the <ph id="ph1">`&lt;AppBarButton&gt;`</ph> element's Extensible Application Markup Language (XAML) code should now look like this:</source>
          <target state="new">If you return to the BlankPage.xaml file's <bpt id="p1">**</bpt>XAML<ept id="p1">**</ept> view, the <ph id="ph1">`&lt;AppBarButton&gt;`</ph> element's Extensible Application Markup Language (XAML) code should now look like this:</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Return to the BlankPage.xaml.cs file, and add this code to go to the previous page after the user taps the button.</source>
          <target state="new">Return to the BlankPage.xaml.cs file, and add this code to go to the previous page after the user taps the button.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Finally, open the MainPage.xaml.cs file and add this code.</source>
          <target state="new">Finally, open the MainPage.xaml.cs file and add this code.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>It opens BlankPage after the user taps the button.</source>
          <target state="new">It opens BlankPage after the user taps the button.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Now, run the program.</source>
          <target state="new">Now, run the program.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Tap the "Go To Page" button to go to the other page, and then tap the back-arrow button to return to the previous page.</source>
          <target state="new">Tap the "Go To Page" button to go to the other page, and then tap the back-arrow button to return to the previous page.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Page navigation is managed by the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Frame<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242682)</ept> class.</source>
          <target state="new">Page navigation is managed by the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Frame<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242682)</ept> class.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>As the <bpt id="p1">**</bpt>UINavigationController<ept id="p1">**</ept> class in iOS uses <bpt id="p2">**</bpt>pushViewController<ept id="p2">**</ept> and <bpt id="p3">**</bpt>popViewController<ept id="p3">**</ept> methods, the <bpt id="p4">**</bpt>Frame<ept id="p4">**</ept> class for Windows Store apps provides <bpt id="p5">[</bpt><bpt id="p6">**</bpt>Navigate<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/br242694)</ept> and <bpt id="p7">[</bpt><bpt id="p8">**</bpt>GoBack<ept id="p8">**</ept><ept id="p7">](https://msdn.microsoft.com/library/windows/apps/dn996568)</ept> methods.</source>
          <target state="new">As the <bpt id="p1">**</bpt>UINavigationController<ept id="p1">**</ept> class in iOS uses <bpt id="p2">**</bpt>pushViewController<ept id="p2">**</ept> and <bpt id="p3">**</bpt>popViewController<ept id="p3">**</ept> methods, the <bpt id="p4">**</bpt>Frame<ept id="p4">**</ept> class for Windows Store apps provides <bpt id="p5">[</bpt><bpt id="p6">**</bpt>Navigate<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/br242694)</ept> and <bpt id="p7">[</bpt><bpt id="p8">**</bpt>GoBack<ept id="p8">**</ept><ept id="p7">](https://msdn.microsoft.com/library/windows/apps/dn996568)</ept> methods.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Frame<ept id="p1">**</ept> class also has a method called <bpt id="p2">[</bpt><bpt id="p3">**</bpt>GoForward<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br242693)</ept>, which does what you might expect.</source>
          <target state="new">The <bpt id="p1">**</bpt>Frame<ept id="p1">**</ept> class also has a method called <bpt id="p2">[</bpt><bpt id="p3">**</bpt>GoForward<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br242693)</ept>, which does what you might expect.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This walkthrough creates a new instance of BlankPage each time you navigate to it.</source>
          <target state="new">This walkthrough creates a new instance of BlankPage each time you navigate to it.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>(The previous instance will be freed, or <bpt id="p1">*</bpt>released<ept id="p1">*</ept>, automatically).</source>
          <target state="new">(The previous instance will be freed, or <bpt id="p1">*</bpt>released<ept id="p1">*</ept>, automatically).</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>If you don't want a new instance to be created each time, add the following code to the BlankPage class's constructor in the BlankPage.xaml.cs file.</source>
          <target state="new">If you don't want a new instance to be created each time, add the following code to the BlankPage class's constructor in the BlankPage.xaml.cs file.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>This will enable the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>NavigationCacheMode<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br227506)</ept> behavior.</source>
          <target state="new">This will enable the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>NavigationCacheMode<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br227506)</ept> behavior.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>You can also get or set the <bpt id="p1">**</bpt>Frame<ept id="p1">**</ept> class's <bpt id="p2">[</bpt><bpt id="p3">**</bpt>CacheSize<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br242683)</ept> property to manage how many pages in the navigation history can be cached.</source>
          <target state="new">You can also get or set the <bpt id="p1">**</bpt>Frame<ept id="p1">**</ept> class's <bpt id="p2">[</bpt><bpt id="p3">**</bpt>CacheSize<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br242683)</ept> property to manage how many pages in the navigation history can be cached.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>For more info about navigation, see <bpt id="p1">[</bpt>Navigation<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/mt187344)</ept> and <bpt id="p2">[</bpt>XAML personality animations sample<ept id="p2">](http://go.microsoft.com/fwlink/p/?LinkID=242401)</ept>.</source>
          <target state="new">For more info about navigation, see <bpt id="p1">[</bpt>Navigation<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/mt187344)</ept> and <bpt id="p2">[</bpt>XAML personality animations sample<ept id="p2">](http://go.microsoft.com/fwlink/p/?LinkID=242401)</ept>.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  For info about navigation for Windows Store apps using JavaScript and HTML, see <bpt id="p2">[</bpt>Quickstart: Using single-page navigation<ept id="p2">](https://msdn.microsoft.com/library/windows/apps/hh452768)</ept>.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  For info about navigation for Windows Store apps using JavaScript and HTML, see <bpt id="p2">[</bpt>Quickstart: Using single-page navigation<ept id="p2">](https://msdn.microsoft.com/library/windows/apps/hh452768)</ept>.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Next step</source>
          <target state="new">Next step</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Getting started: Animation</source>
          <target state="new">Getting started: Animation</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>