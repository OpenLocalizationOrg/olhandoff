<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-48076a9" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">666f2a8169020de22b9c3bb8541ec188c07dd623</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci2\gaming\multisampling--multi-sample-anti-aliasing--in-windows-store-apps.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Multisampling in Universal Windows Platform (UWP) apps</source>
          <target state="new">Multisampling in Universal Windows Platform (UWP) apps</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to use multisampling in Universal Windows Platform (UWP) apps built with Direct3D.</source>
          <target state="new">Learn how to use multisampling in Universal Windows Platform (UWP) apps built with Direct3D.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Multisampling in Universal Windows Platform (UWP) apps</source>
          <target state="new">Multisampling in Universal Windows Platform (UWP) apps</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>\[ Updated for UWP apps on Windows 10.</source>
          <target state="new">\[ Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Learn how to use multisampling in Universal Windows Platform (UWP) apps built with Direct3D.</source>
          <target state="new">Learn how to use multisampling in Universal Windows Platform (UWP) apps built with Direct3D.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Multisampling, also known as multi-sample antialiasing, is a graphics technique used to reduce the appearance of aliased edges.</source>
          <target state="new">Multisampling, also known as multi-sample antialiasing, is a graphics technique used to reduce the appearance of aliased edges.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>It works by drawing more pixels than are actually in the final render target, then averaging values to maintain the appearance of a "partial" edge in certain pixels.</source>
          <target state="new">It works by drawing more pixels than are actually in the final render target, then averaging values to maintain the appearance of a "partial" edge in certain pixels.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For a detailed description of how multisampling actually works in Direct3D, see <bpt id="p1">[</bpt>Multisample Anti-Aliasing Rasterization Rules<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/cc627092#Multisample)</ept>.</source>
          <target state="new">For a detailed description of how multisampling actually works in Direct3D, see <bpt id="p1">[</bpt>Multisample Anti-Aliasing Rasterization Rules<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/cc627092#Multisample)</ept>.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Multisampling and the flip model swap chain</source>
          <target state="new">Multisampling and the flip model swap chain</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>UWP apps that use DirectX must use flip model swap chains.</source>
          <target state="new">UWP apps that use DirectX must use flip model swap chains.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Flip model swap chains don't support multisampling directly, but multisampling can still be applied in a different way by rendering the scene to a multisampled render target view, and then resolving the multisampled render target to the back buffer before presenting.</source>
          <target state="new">Flip model swap chains don't support multisampling directly, but multisampling can still be applied in a different way by rendering the scene to a multisampled render target view, and then resolving the multisampled render target to the back buffer before presenting.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This article explains the steps required to add multisampling to your UWP app.</source>
          <target state="new">This article explains the steps required to add multisampling to your UWP app.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>How to use multisampling</source>
          <target state="new">How to use multisampling</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Direct3D feature levels guarantee support for specific, minimum sample count capabilities, and guarantee certain buffer formats will be available that support multisampling.</source>
          <target state="new">Direct3D feature levels guarantee support for specific, minimum sample count capabilities, and guarantee certain buffer formats will be available that support multisampling.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Graphics devices often support a wider range of formats and sample counts than the minimum required.</source>
          <target state="new">Graphics devices often support a wider range of formats and sample counts than the minimum required.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Multisampling support can be determined at run-time by checking feature support for multisampling with specific DXGI formats, and then checking the sample counts you can use with each supported format.</source>
          <target state="new">Multisampling support can be determined at run-time by checking feature support for multisampling with specific DXGI formats, and then checking the sample counts you can use with each supported format.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Call <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ID3D11Device::CheckFeatureSupport<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ff476497)</ept> to find out which DXGI formats can be used with multisampling.</source>
          <target state="new">Call <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ID3D11Device::CheckFeatureSupport<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ff476497)</ept> to find out which DXGI formats can be used with multisampling.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Supply the render target formats your game can use.</source>
          <target state="new">Supply the render target formats your game can use.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Both the render target and resolve target must use the same format, so check for both <bpt id="p1">[</bpt><bpt id="p2">**</bpt>D3D11\_FORMAT\_SUPPORT\_MULTISAMPLE\_RENDERTARGET<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ff476134)</ept> and <bpt id="p3">**</bpt>D3D11\_FORMAT\_SUPPORT\_MULTISAMPLE\_RESOLVE<ept id="p3">**</ept>.</source>
          <target state="new">Both the render target and resolve target must use the same format, so check for both <bpt id="p1">[</bpt><bpt id="p2">**</bpt>D3D11\_FORMAT\_SUPPORT\_MULTISAMPLE\_RENDERTARGET<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ff476134)</ept> and <bpt id="p3">**</bpt>D3D11\_FORMAT\_SUPPORT\_MULTISAMPLE\_RESOLVE<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Feature level 9:  <ept id="p1">**</ept> Although feature level 9 devices <bpt id="p2">[</bpt>guarantee support for multisampled render target formats<ept id="p2">](https://msdn.microsoft.com/library/windows/desktop/ff471324#MultiSample_RenderTarget)</ept>, support is not guaranteed for multisample resolve targets.</source>
          <target state="new"><bpt id="p1">**</bpt>Feature level 9:  <ept id="p1">**</ept> Although feature level 9 devices <bpt id="p2">[</bpt>guarantee support for multisampled render target formats<ept id="p2">](https://msdn.microsoft.com/library/windows/desktop/ff471324#MultiSample_RenderTarget)</ept>, support is not guaranteed for multisample resolve targets.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>So this check is necessary before trying to use the multisampling technique described in this topic.</source>
          <target state="new">So this check is necessary before trying to use the multisampling technique described in this topic.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The following code checks multisampling support for all the DXGI\_FORMAT values:</source>
          <target state="new">The following code checks multisampling support for all the DXGI\_FORMAT values:</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For each supported format, query for sample count support by calling <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ID3D11Device::CheckMultisampleQualityLevels<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ff476499)</ept>.</source>
          <target state="new">For each supported format, query for sample count support by calling <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ID3D11Device::CheckMultisampleQualityLevels<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ff476499)</ept>.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The following code checks sample size support for supported DXGI formats:</source>
          <target state="new">The following code checks sample size support for supported DXGI formats:</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>   Use <bpt id="p2">[</bpt><bpt id="p3">**</bpt>ID3D11Device2::CheckMultisampleQualityLevels1<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/desktop/dn280494)</ept> instead if you need to check multisample support for tiled resource buffers.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>   Use <bpt id="p2">[</bpt><bpt id="p3">**</bpt>ID3D11Device2::CheckMultisampleQualityLevels1<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/desktop/dn280494)</ept> instead if you need to check multisample support for tiled resource buffers.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Create a buffer and render target view with the desired sample count.</source>
          <target state="new">Create a buffer and render target view with the desired sample count.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Use the same DXGI\_FORMAT, width, and height as the swap chain, but specify a sample count greater than 1 and use a multisampled texture dimension (<bpt id="p1">**</bpt>D3D11\_RTV\_DIMENSION\_TEXTURE2DMS<ept id="p1">**</ept> for example).</source>
          <target state="new">Use the same DXGI\_FORMAT, width, and height as the swap chain, but specify a sample count greater than 1 and use a multisampled texture dimension (<bpt id="p1">**</bpt>D3D11\_RTV\_DIMENSION\_TEXTURE2DMS<ept id="p1">**</ept> for example).</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>If necessary, you can re-create the swap chain with new settings that are optimal for multisampling.</source>
          <target state="new">If necessary, you can re-create the swap chain with new settings that are optimal for multisampling.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The following code creates a multisampled render target:</source>
          <target state="new">The following code creates a multisampled render target:</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The depth buffer must have the same width, height, sample count, and texture dimension to match the multisampled render target.</source>
          <target state="new">The depth buffer must have the same width, height, sample count, and texture dimension to match the multisampled render target.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The following code creates a multisampled depth buffer:</source>
          <target state="new">The following code creates a multisampled depth buffer:</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Now is a good time to create the viewport, because the viewport width and height must also match the render target.</source>
          <target state="new">Now is a good time to create the viewport, because the viewport width and height must also match the render target.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The following code creates a viewport:</source>
          <target state="new">The following code creates a viewport:</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Render each frame to the multisampled render target.</source>
          <target state="new">Render each frame to the multisampled render target.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>When rendering is complete, call <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ID3D11DeviceContext::ResolveSubresource<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ff476474)</ept> before presenting the frame.</source>
          <target state="new">When rendering is complete, call <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ID3D11DeviceContext::ResolveSubresource<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ff476474)</ept> before presenting the frame.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>This instructs Direct3D to peform the multisampling operation, computing the value of each pixel for display and placing the result in the back buffer.</source>
          <target state="new">This instructs Direct3D to peform the multisampling operation, computing the value of each pixel for display and placing the result in the back buffer.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The back buffer then contains the final anti-aliased image and can be presented.</source>
          <target state="new">The back buffer then contains the final anti-aliased image and can be presented.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The following code resolves the subresource before presenting the frame:</source>
          <target state="new">The following code resolves the subresource before presenting the frame:</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>