<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-48076a9" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a102762568166a569f357065bbd1c0f73856482b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci2\launch-resume\handle-a-cancelled-background-task.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Handle a cancelled background task</source>
          <target state="new">Handle a cancelled background task</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to make a background task that recognizes cancellation requests and stops work, reporting the cancellation to the app using persistent storage.</source>
          <target state="new">Learn how to make a background task that recognizes cancellation requests and stops work, reporting the cancellation to the app using persistent storage.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Handle a cancelled background task</source>
          <target state="new">Handle a cancelled background task</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>\[ Updated for UWP apps on Windows 10.</source>
          <target state="new">\[ Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Important APIs</source>
          <target state="new">Important APIs</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>BackgroundTaskCanceledEventHandler</source>
          <target state="new">BackgroundTaskCanceledEventHandler</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>IBackgroundTaskInstance</source>
          <target state="new">IBackgroundTaskInstance</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>ApplicationData.Current</source>
          <target state="new">ApplicationData.Current</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Learn how to make a background task that recognizes cancellation requests and stops work, reporting the cancellation to the app using persistent storage.</source>
          <target state="new">Learn how to make a background task that recognizes cancellation requests and stops work, reporting the cancellation to the app using persistent storage.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  For all device families except desktop, if the device becomes low on memory, background tasks may be terminated.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  For all device families except desktop, if the device becomes low on memory, background tasks may be terminated.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If an out of memory exception is not surfaced, or the app does not handle it, then the background task will be terminated without warning and without raising the OnCanceled event.</source>
          <target state="new">If an out of memory exception is not surfaced, or the app does not handle it, then the background task will be terminated without warning and without raising the OnCanceled event.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This helps to ensure the user experience of the app in the foreground.</source>
          <target state="new">This helps to ensure the user experience of the app in the foreground.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Your background task should be designed to handle this scenario.</source>
          <target state="new">Your background task should be designed to handle this scenario.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This topic assumes you have already created a background task class, including the Run method that is used as the background task entry point.</source>
          <target state="new">This topic assumes you have already created a background task class, including the Run method that is used as the background task entry point.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>To get started quickly building a background task, see <bpt id="p1">[</bpt>Create and register a background task<ept id="p1">](create-and-register-a-background-task.md)</ept>.</source>
          <target state="new">To get started quickly building a background task, see <bpt id="p1">[</bpt>Create and register a background task<ept id="p1">](create-and-register-a-background-task.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For more in-depth information on conditions and triggers, see <bpt id="p1">[</bpt>Support your app with background tasks<ept id="p1">](support-your-app-with-background-tasks.md)</ept>.</source>
          <target state="new">For more in-depth information on conditions and triggers, see <bpt id="p1">[</bpt>Support your app with background tasks<ept id="p1">](support-your-app-with-background-tasks.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Use the OnCanceled method to recognize cancellation requests</source>
          <target state="new">Use the OnCanceled method to recognize cancellation requests</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Write a method to handle the cancellation event.</source>
          <target state="new">Write a method to handle the cancellation event.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Create a method named OnCanceled that has the following footprint.</source>
          <target state="new">Create a method named OnCanceled that has the following footprint.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This method is the entry point called by the Windows Runtime whenever a cancellation request is made against your background task.</source>
          <target state="new">This method is the entry point called by the Windows Runtime whenever a cancellation request is made against your background task.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The OnCanceled method needs to have the following footprint:</source>
          <target state="new">The OnCanceled method needs to have the following footprint:</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Add a flag variable called <bpt id="p1">**</bpt>\_CancelRequested<ept id="p1">**</ept> to the background task class.</source>
          <target state="new">Add a flag variable called <bpt id="p1">**</bpt>\_CancelRequested<ept id="p1">**</ept> to the background task class.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This variable will be used to indicate when a cancellation request has been made.</source>
          <target state="new">This variable will be used to indicate when a cancellation request has been made.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>In the OnCanceled method you created in step 1, set the flag variable <bpt id="p1">**</bpt>\_CancelRequested<ept id="p1">**</ept> to <bpt id="p2">**</bpt>true<ept id="p2">**</ept>.</source>
          <target state="new">In the OnCanceled method you created in step 1, set the flag variable <bpt id="p1">**</bpt>\_CancelRequested<ept id="p1">**</ept> to <bpt id="p2">**</bpt>true<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The full <bpt id="p1">[</bpt>background task sample<ept id="p1">]( http://go.microsoft.com/fwlink/p/?linkid=227509)</ept> OnCanceled method sets <bpt id="p2">**</bpt>\_CancelRequested<ept id="p2">**</ept> to <bpt id="p3">**</bpt>true<ept id="p3">**</ept> and writes potentially useful debug output:</source>
          <target state="new">The full <bpt id="p1">[</bpt>background task sample<ept id="p1">]( http://go.microsoft.com/fwlink/p/?linkid=227509)</ept> OnCanceled method sets <bpt id="p2">**</bpt>\_CancelRequested<ept id="p2">**</ept> to <bpt id="p3">**</bpt>true<ept id="p3">**</ept> and writes potentially useful debug output:</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>In the background task's Run method, register the OnCanceled event handler method before starting work.</source>
          <target state="new">In the background task's Run method, register the OnCanceled event handler method before starting work.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For example, use the following line of code:</source>
          <target state="new">For example, use the following line of code:</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Handle cancellation by exiting the Run method</source>
          <target state="new">Handle cancellation by exiting the Run method</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>When a cancellation request is received, the Run method needs to stop work and exit by recognizing when <bpt id="p1">**</bpt>\_cancelRequested<ept id="p1">**</ept> is set to <bpt id="p2">**</bpt>true<ept id="p2">**</ept>.</source>
          <target state="new">When a cancellation request is received, the Run method needs to stop work and exit by recognizing when <bpt id="p1">**</bpt>\_cancelRequested<ept id="p1">**</ept> is set to <bpt id="p2">**</bpt>true<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Modify the code of your background task class to check the flag variable while it's working.</source>
          <target state="new">Modify the code of your background task class to check the flag variable while it's working.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">**</bpt>\_cancelRequested<ept id="p1">**</ept> set to true, stop work from continuing.</source>
          <target state="new">If <bpt id="p1">**</bpt>\_cancelRequested<ept id="p1">**</ept> set to true, stop work from continuing.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>background task sample<ept id="p1">](http://go.microsoft.com/fwlink/p/?LinkId=618666)</ept> includes a check that stops the periodic timer callback if the background task is canceled:</source>
          <target state="new">The <bpt id="p1">[</bpt>background task sample<ept id="p1">](http://go.microsoft.com/fwlink/p/?LinkId=618666)</ept> includes a check that stops the periodic timer callback if the background task is canceled:</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  The code sample shown above uses the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>IBackgroundTaskInstance<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br224797)</ept>.<bpt id="p4">[</bpt><bpt id="p5">**</bpt>Progress<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/br224800)</ept> property being used to record background task progress.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  The code sample shown above uses the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>IBackgroundTaskInstance<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br224797)</ept>.<bpt id="p4">[</bpt><bpt id="p5">**</bpt>Progress<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/br224800)</ept> property being used to record background task progress.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Progress is reported back to the app using the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>BackgroundTaskProgressEventArgs<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br224782)</ept> class.</source>
          <target state="new">Progress is reported back to the app using the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>BackgroundTaskProgressEventArgs<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br224782)</ept> class.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Modify the Run method so that after work has stopped, it records whether the task completed or was cancelled.</source>
          <target state="new">Modify the Run method so that after work has stopped, it records whether the task completed or was cancelled.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>background task sample<ept id="p1">](http://go.microsoft.com/fwlink/p/?LinkId=618666)</ept> records status in LocalSettings:</source>
          <target state="new">The <bpt id="p1">[</bpt>background task sample<ept id="p1">](http://go.microsoft.com/fwlink/p/?LinkId=618666)</ept> records status in LocalSettings:</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Remarks</source>
          <target state="new">Remarks</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>You can download the <bpt id="p1">[</bpt>background task sample<ept id="p1">](http://go.microsoft.com/fwlink/p/?LinkId=618666)</ept> to see these code examples in the context of methods.</source>
          <target state="new">You can download the <bpt id="p1">[</bpt>background task sample<ept id="p1">](http://go.microsoft.com/fwlink/p/?LinkId=618666)</ept> to see these code examples in the context of methods.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>For illustrative purposes, the sample code shows only portions of the Run method (and callback timer) from the <bpt id="p1">[</bpt>background task sample<ept id="p1">](http://go.microsoft.com/fwlink/p/?LinkId=618666)</ept>.</source>
          <target state="new">For illustrative purposes, the sample code shows only portions of the Run method (and callback timer) from the <bpt id="p1">[</bpt>background task sample<ept id="p1">](http://go.microsoft.com/fwlink/p/?LinkId=618666)</ept>.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Run method example</source>
          <target state="new">Run method example</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The complete Run method, and timer callback code, from the <bpt id="p1">[</bpt>background task sample<ept id="p1">](http://go.microsoft.com/fwlink/p/?LinkId=618666)</ept> are shown below for context:</source>
          <target state="new">The complete Run method, and timer callback code, from the <bpt id="p1">[</bpt>background task sample<ept id="p1">](http://go.microsoft.com/fwlink/p/?LinkId=618666)</ept> are shown below for context:</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  This article is for Windows 10 developers writing Universal Windows Platform (UWP) apps.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  This article is for Windows 10 developers writing Universal Windows Platform (UWP) apps.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>If you’re developing for Windows 8.x or Windows Phone 8.x, see the <bpt id="p1">[</bpt>archived documentation<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept>.</source>
          <target state="new">If you’re developing for Windows 8.x or Windows Phone 8.x, see the <bpt id="p1">[</bpt>archived documentation<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept>.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Related topics</source>
          <target state="new">Related topics</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Create and register a background task</source>
          <target state="new">Create and register a background task</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Declare background tasks in the application manifest</source>
          <target state="new">Declare background tasks in the application manifest</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Guidelines for background tasks</source>
          <target state="new">Guidelines for background tasks</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Monitor background task progress and completion</source>
          <target state="new">Monitor background task progress and completion</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Register a background task</source>
          <target state="new">Register a background task</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Respond to system events with background tasks</source>
          <target state="new">Respond to system events with background tasks</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Run a background task on a timer</source>
          <target state="new">Run a background task on a timer</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Set conditions for running a background task</source>
          <target state="new">Set conditions for running a background task</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Update a live tile from a background task</source>
          <target state="new">Update a live tile from a background task</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Use a maintenance trigger</source>
          <target state="new">Use a maintenance trigger</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Debug a background task</source>
          <target state="new">Debug a background task</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>How to trigger suspend, resume, and background events in Windows Store apps (when debugging)</source>
          <target state="new">How to trigger suspend, resume, and background events in Windows Store apps (when debugging)</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>