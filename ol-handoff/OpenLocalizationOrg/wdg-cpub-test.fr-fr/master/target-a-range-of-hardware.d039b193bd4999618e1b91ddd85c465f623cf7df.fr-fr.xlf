<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-48076a9" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">44ec3fc664eb61791d020cef5070c09c022d1a49</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci2\gaming\target-a-range-of-hardware.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Support shadow maps on a range of hardware</source>
          <target state="new">Support shadow maps on a range of hardware</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Render higher-fidelity shadows on faster devices and faster shadows on less powerful devices.</source>
          <target state="new">Render higher-fidelity shadows on faster devices and faster shadows on less powerful devices.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Support shadow maps on a range of hardware</source>
          <target state="new">Support shadow maps on a range of hardware</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>\[ Updated for UWP apps on Windows 10.</source>
          <target state="new">\[ Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Render higher-fidelity shadows on faster devices and faster shadows on less powerful devices.</source>
          <target state="new">Render higher-fidelity shadows on faster devices and faster shadows on less powerful devices.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Part 4 of <bpt id="p1">[</bpt>Walkthrough: Implement shadow volumes using depth buffers in Direct3D 11<ept id="p1">](implementing-depth-buffers-for-shadow-mapping.md)</ept>.</source>
          <target state="new">Part 4 of <bpt id="p1">[</bpt>Walkthrough: Implement shadow volumes using depth buffers in Direct3D 11<ept id="p1">](implementing-depth-buffers-for-shadow-mapping.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Comparison filter types</source>
          <target state="new">Comparison filter types</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Only use linear filtering if the device can afford the performance penalty.</source>
          <target state="new">Only use linear filtering if the device can afford the performance penalty.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Generally, Direct3D feature level 9\_1 devices don't have enough power to spare for linear filtering on shadows.</source>
          <target state="new">Generally, Direct3D feature level 9\_1 devices don't have enough power to spare for linear filtering on shadows.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Use point filtering instead on these devices.</source>
          <target state="new">Use point filtering instead on these devices.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>When you use linear filtering, adjust the pixel shader so that it blends the shadow edges.</source>
          <target state="new">When you use linear filtering, adjust the pixel shader so that it blends the shadow edges.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Create the comparison sampler for point filtering:</source>
          <target state="new">Create the comparison sampler for point filtering:</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Then create a sampler for linear filtering:</source>
          <target state="new">Then create a sampler for linear filtering:</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Choose a sampler:</source>
          <target state="new">Choose a sampler:</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Blend shadow edges with linear filtering:</source>
          <target state="new">Blend shadow edges with linear filtering:</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Shadow buffer size</source>
          <target state="new">Shadow buffer size</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Larger shadow maps won't look as blocky but they take up more space in graphics memory.</source>
          <target state="new">Larger shadow maps won't look as blocky but they take up more space in graphics memory.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Experiment with different shadow map sizes in your game and observe the results in different types of devices and different display sizes.</source>
          <target state="new">Experiment with different shadow map sizes in your game and observe the results in different types of devices and different display sizes.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Consider an optimization like cascaded shadow maps to get better results with less graphics memory.</source>
          <target state="new">Consider an optimization like cascaded shadow maps to get better results with less graphics memory.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Common Techniques to Improve Shadow Depth Maps<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ee416324)</ept>.</source>
          <target state="new">See <bpt id="p1">[</bpt>Common Techniques to Improve Shadow Depth Maps<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ee416324)</ept>.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Shadow buffer depth</source>
          <target state="new">Shadow buffer depth</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Greater precision in the shadow buffer will give more accurate depth test results, which helps avoid issues like z-buffer fighting.</source>
          <target state="new">Greater precision in the shadow buffer will give more accurate depth test results, which helps avoid issues like z-buffer fighting.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>But like larger shadow maps, greater precision takes up more memory.</source>
          <target state="new">But like larger shadow maps, greater precision takes up more memory.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Experiment with different depth precision types in your game - DXGI\_FORMAT\_R24G8\_TYPELESS versus DXGI\_FORMAT\_R16\_TYPELESS - and observe the speed and quality on different feature levels.</source>
          <target state="new">Experiment with different depth precision types in your game - DXGI\_FORMAT\_R24G8\_TYPELESS versus DXGI\_FORMAT\_R16\_TYPELESS - and observe the speed and quality on different feature levels.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Optimizing precompiled shaders</source>
          <target state="new">Optimizing precompiled shaders</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Universal Windows Platform (UWP) apps can use dynamic shader compilation, but it's faster to use dynamic shader linking.</source>
          <target state="new">Universal Windows Platform (UWP) apps can use dynamic shader compilation, but it's faster to use dynamic shader linking.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>You can also use compiler directives and <ph id="ph1">`#ifdef`</ph> blocks to create different versions of shaders.</source>
          <target state="new">You can also use compiler directives and <ph id="ph1">`#ifdef`</ph> blocks to create different versions of shaders.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This is done by opening the Visual Studio project file in a text editor and adding multiple <ph id="ph1">`&lt;FxcCompiler&gt;`</ph> entries for the HLSL (each with the appropriate preprocessor definitions).</source>
          <target state="new">This is done by opening the Visual Studio project file in a text editor and adding multiple <ph id="ph1">`&lt;FxcCompiler&gt;`</ph> entries for the HLSL (each with the appropriate preprocessor definitions).</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Note that this necessitates different filenames; in this case, Visual Studio appends \_point and \_linear to the different versions of the shader.</source>
          <target state="new">Note that this necessitates different filenames; in this case, Visual Studio appends \_point and \_linear to the different versions of the shader.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The project file entry for the linear filtered version of the shader defines LINEAR:</source>
          <target state="new">The project file entry for the linear filtered version of the shader defines LINEAR:</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The project file entry for the linear filtered version of the shader does not include preprocessor definitions:</source>
          <target state="new">The project file entry for the linear filtered version of the shader does not include preprocessor definitions:</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>