<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-48076a9" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a447cb93cfba0156012f968c7aac99a72b82de0f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci1\app-to-app\copy-and-paste.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>This article explains how to support copy and paste in Universal Windows Platform (UWP) apps using the clipboard.</source>
          <target state="new">This article explains how to support copy and paste in Universal Windows Platform (UWP) apps using the clipboard.</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Copy and paste</source>
          <target state="new">Copy and paste</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Copy and paste</source>
          <target state="new">Copy and paste</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>\[ Updated for UWP apps on Windows 10.</source>
          <target state="new">\[ Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This article explains how to support copy and paste in Universal Windows Platform (UWP) apps using the clipboard.</source>
          <target state="new">This article explains how to support copy and paste in Universal Windows Platform (UWP) apps using the clipboard.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Copy and paste is the classic way to exchange data either between apps, or within an app, and almost every app can support clipboard operations to some degree.</source>
          <target state="new">Copy and paste is the classic way to exchange data either between apps, or within an app, and almost every app can support clipboard operations to some degree.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Check for built-in clipboard support</source>
          <target state="new">Check for built-in clipboard support</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>In many cases, you do not need to write code to support clipboard operations.</source>
          <target state="new">In many cases, you do not need to write code to support clipboard operations.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Many of the default XAML controls you can use to create apps already support clipboard operations.</source>
          <target state="new">Many of the default XAML controls you can use to create apps already support clipboard operations.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For more information about which controls are available, see the <bpt id="p1">[</bpt>controls list<ept id="p1">]</ept><bpt id="p2">[</bpt>ControlsList<ept id="p2">]</ept>.</source>
          <target state="new">For more information about which controls are available, see the <bpt id="p1">[</bpt>controls list<ept id="p1">]</ept><bpt id="p2">[</bpt>ControlsList<ept id="p2">]</ept>.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Get set up</source>
          <target state="new">Get set up</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>First, include the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows.ApplicationModel.DataTransfer<ept id="p2">**</ept><ept id="p1">]</ept><bpt id="p3">[</bpt>DataTransfer<ept id="p3">]</ept> namespace in your app.</source>
          <target state="new">First, include the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows.ApplicationModel.DataTransfer<ept id="p2">**</ept><ept id="p1">]</ept><bpt id="p3">[</bpt>DataTransfer<ept id="p3">]</ept> namespace in your app.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Then, add an instance of the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DataPackage<ept id="p2">**</ept><ept id="p1">]</ept><bpt id="p3">[</bpt>DataPackage<ept id="p3">]</ept> object.</source>
          <target state="new">Then, add an instance of the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DataPackage<ept id="p2">**</ept><ept id="p1">]</ept><bpt id="p3">[</bpt>DataPackage<ept id="p3">]</ept> object.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This object contains both the data the user wants to copy and any properties (such as a description) that you want to include.</source>
          <target state="new">This object contains both the data the user wants to copy and any properties (such as a description) that you want to include.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Copy and cut</source>
          <target state="new">Copy and cut</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Copy and cut (also referred to as move) work almost exactly the same.</source>
          <target state="new">Copy and cut (also referred to as move) work almost exactly the same.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Choose which operation you want using the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DataPackage.RequestedOperation<ept id="p2">**</ept><ept id="p1">]</ept><bpt id="p3">[</bpt>RequestedOperation<ept id="p3">]</ept> property.</source>
          <target state="new">Choose which operation you want using the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DataPackage.RequestedOperation<ept id="p2">**</ept><ept id="p1">]</ept><bpt id="p3">[</bpt>RequestedOperation<ept id="p3">]</ept> property.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Next, you can add the data that a user has selected to the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DataPackage<ept id="p2">**</ept><ept id="p1">]</ept><bpt id="p3">[</bpt>DataPackage<ept id="p3">]</ept> object.</source>
          <target state="new">Next, you can add the data that a user has selected to the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DataPackage<ept id="p2">**</ept><ept id="p1">]</ept><bpt id="p3">[</bpt>DataPackage<ept id="p3">]</ept> object.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If this data is supported by the <bpt id="p1">**</bpt>DataPackage<ept id="p1">**</ept> class, you can use one of the corresponding methods in the <bpt id="p2">**</bpt>DataPackage<ept id="p2">**</ept> object.</source>
          <target state="new">If this data is supported by the <bpt id="p1">**</bpt>DataPackage<ept id="p1">**</ept> class, you can use one of the corresponding methods in the <bpt id="p2">**</bpt>DataPackage<ept id="p2">**</ept> object.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Here's how to add text:</source>
          <target state="new">Here's how to add text:</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The last step is to add the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DataPackage<ept id="p2">**</ept><ept id="p1">]</ept><bpt id="p3">[</bpt>DataPackage<ept id="p3">]</ept> to the clipboard by calling the static <bpt id="p4">[</bpt><bpt id="p5">**</bpt>Clipboard.SetContent<ept id="p5">**</ept><ept id="p4">]</ept><bpt id="p6">[</bpt>SetContent<ept id="p6">]</ept> method.</source>
          <target state="new">The last step is to add the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DataPackage<ept id="p2">**</ept><ept id="p1">]</ept><bpt id="p3">[</bpt>DataPackage<ept id="p3">]</ept> to the clipboard by calling the static <bpt id="p4">[</bpt><bpt id="p5">**</bpt>Clipboard.SetContent<ept id="p5">**</ept><ept id="p4">]</ept><bpt id="p6">[</bpt>SetContent<ept id="p6">]</ept> method.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Paste</source>
          <target state="new">Paste</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>To get the contents of the clipboard, call the static [<bpt id="p1">**</bpt>Clipboard.GetContent<ept id="p1">**</ept><bpt id="p2">[</bpt>GetContent<ept id="p2">]</ept> method.</source>
          <target state="new">To get the contents of the clipboard, call the static [<bpt id="p1">**</bpt>Clipboard.GetContent<ept id="p1">**</ept><bpt id="p2">[</bpt>GetContent<ept id="p2">]</ept> method.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This method returns a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DataPackageView<ept id="p2">**</ept><ept id="p1">]</ept><bpt id="p3">[</bpt>DataPackageView<ept id="p3">]</ept> that contains the content.</source>
          <target state="new">This method returns a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DataPackageView<ept id="p2">**</ept><ept id="p1">]</ept><bpt id="p3">[</bpt>DataPackageView<ept id="p3">]</ept> that contains the content.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This object is almost identical to a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DataPackage<ept id="p2">**</ept><ept id="p1">]</ept><bpt id="p3">[</bpt>DataPackage<ept id="p3">]</ept> object, except that its contents are read-only.</source>
          <target state="new">This object is almost identical to a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DataPackage<ept id="p2">**</ept><ept id="p1">]</ept><bpt id="p3">[</bpt>DataPackage<ept id="p3">]</ept> object, except that its contents are read-only.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>With that object, you can use either the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>AvailableFormats<ept id="p2">**</ept><ept id="p1">]</ept><bpt id="p3">[</bpt>AvailableFormats<ept id="p3">]</ept> or the <bpt id="p4">[</bpt><bpt id="p5">**</bpt>Contains<ept id="p5">**</ept><ept id="p4">]</ept><bpt id="p6">[</bpt>Contains<ept id="p6">]</ept> method to identify what formats are available.</source>
          <target state="new">With that object, you can use either the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>AvailableFormats<ept id="p2">**</ept><ept id="p1">]</ept><bpt id="p3">[</bpt>AvailableFormats<ept id="p3">]</ept> or the <bpt id="p4">[</bpt><bpt id="p5">**</bpt>Contains<ept id="p5">**</ept><ept id="p4">]</ept><bpt id="p6">[</bpt>Contains<ept id="p6">]</ept> method to identify what formats are available.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Then, you can call the corresponding <bpt id="p1">**</bpt>DataPackageView<ept id="p1">**</ept> method to get the data.</source>
          <target state="new">Then, you can call the corresponding <bpt id="p1">**</bpt>DataPackageView<ept id="p1">**</ept> method to get the data.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Track changes to the clipboard</source>
          <target state="new">Track changes to the clipboard</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>In addition to copy and paste commands, you may also want to track clipboard changes.</source>
          <target state="new">In addition to copy and paste commands, you may also want to track clipboard changes.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Do this by handling the clipboard's <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Clipboard.ContentChanged<ept id="p2">**</ept><ept id="p1">]</ept><bpt id="p3">[</bpt>ContentChanged<ept id="p3">]</ept> event.</source>
          <target state="new">Do this by handling the clipboard's <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Clipboard.ContentChanged<ept id="p2">**</ept><ept id="p1">]</ept><bpt id="p3">[</bpt>ContentChanged<ept id="p3">]</ept> event.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>DataTransfer</source>
          <target state="new">DataTransfer</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>DataPackage</source>
          <target state="new">DataPackage</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>DataPackageView</source>
          <target state="new">DataPackageView</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>DataPackagePropertySet</source>
          <target state="new">DataPackagePropertySet</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>DataRequest</source>
          <target state="new">DataRequest</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>DataRequested</source>
          <target state="new">DataRequested</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>FailWithDisplayText</source>
          <target state="new">FailWithDisplayText</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>ShowShareUi</source>
          <target state="new">ShowShareUi</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>RequestedOperation</source>
          <target state="new">RequestedOperation</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>ControlsList</source>
          <target state="new">ControlsList</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>SetContent</source>
          <target state="new">SetContent</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>GetContent</source>
          <target state="new">GetContent</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>AvailableFormats</source>
          <target state="new">AvailableFormats</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Contains</source>
          <target state="new">Contains</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>ContentChanged</source>
          <target state="new">ContentChanged</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>