<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-48076a9" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6aeeb89ad859269b91648f00749d84206f38946b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci2\accessibility\practices-to-avoid.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Lists the practices to avoid if you want to create an accessible Universal Windows Platform (UWP) app.</source>
          <target state="new">Lists the practices to avoid if you want to create an accessible Universal Windows Platform (UWP) app.</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Accessibility practices to avoid</source>
          <target state="new">Accessibility practices to avoid</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Accessibility practices to avoid</source>
          <target state="new">Accessibility practices to avoid</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>\[ Updated for UWP apps on Windows 10.</source>
          <target state="new">\[ Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Lists the practices to avoid if you want to create an accessible Universal Windows Platform (UWP) app.</source>
          <target state="new">Lists the practices to avoid if you want to create an accessible Universal Windows Platform (UWP) app.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Avoid building custom UI elements if you can use the default Windows controls or controls that have already implemented Microsoft UI Automation support.</source>
          <target state="new">Avoid building custom UI elements if you can use the default Windows controls or controls that have already implemented Microsoft UI Automation support.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Standard Windows controls are accessible by default and usually require adding only a few accessibility attributes that are app-specific.</source>
          <target state="new">Standard Windows controls are accessible by default and usually require adding only a few accessibility attributes that are app-specific.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>In contrast, implementing the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>AutomationPeer<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209185)</ept> support for a true custom control is somewhat more involved (see <bpt id="p3">[</bpt>Custom automation peers<ept id="p3">](custom-automation-peers.md)</ept>).</source>
          <target state="new">In contrast, implementing the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>AutomationPeer<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209185)</ept> support for a true custom control is somewhat more involved (see <bpt id="p3">[</bpt>Custom automation peers<ept id="p3">](custom-automation-peers.md)</ept>).</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Don't put static text or other non-interactive elements into the tab order (for example, by setting the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TabIndex<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209461)</ept> property for an element that is not interactive).</source>
          <target state="new">Don't put static text or other non-interactive elements into the tab order (for example, by setting the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TabIndex<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209461)</ept> property for an element that is not interactive).</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>If non-interactive elements are in the tab order, that is against keyboard accessibility guidelines because it decreases efficiency of keyboard navigation for users.</source>
          <target state="new">If non-interactive elements are in the tab order, that is against keyboard accessibility guidelines because it decreases efficiency of keyboard navigation for users.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Many assistive technologies use tab order and ability to focus an element as part of their logic for how to present an app's interface to the assistive technology user.</source>
          <target state="new">Many assistive technologies use tab order and ability to focus an element as part of their logic for how to present an app's interface to the assistive technology user.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Text-only elements in the tab order can confuse users who expect only interactive elements in the tab order (buttons, check boxes, text input fields, combo boxes, lists, and so on).</source>
          <target state="new">Text-only elements in the tab order can confuse users who expect only interactive elements in the tab order (buttons, check boxes, text input fields, combo boxes, lists, and so on).</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Avoid using absolute positioning of UI elements (such as in a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Canvas<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209267)</ept> element) because the presentation order often differs from the child element declaration order (which is the de facto logical order).</source>
          <target state="new">Avoid using absolute positioning of UI elements (such as in a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Canvas<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209267)</ept> element) because the presentation order often differs from the child element declaration order (which is the de facto logical order).</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Whenever possible, arrange UI elements in document or logical order to ensure that screen readers can read those elements in the correct order.</source>
          <target state="new">Whenever possible, arrange UI elements in document or logical order to ensure that screen readers can read those elements in the correct order.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If the visible order of UI elements can diverge from the document or logical order, use explicit tab index values (set <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TabIndex<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209461)</ept>) to define the correct reading order.</source>
          <target state="new">If the visible order of UI elements can diverge from the document or logical order, use explicit tab index values (set <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TabIndex<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209461)</ept>) to define the correct reading order.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Don’t use color as the only way to convey information.</source>
          <target state="new">Don’t use color as the only way to convey information.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Users who are color blind cannot receive information that is conveyed only through color, such as in a color status indicator.</source>
          <target state="new">Users who are color blind cannot receive information that is conveyed only through color, such as in a color status indicator.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Include other visual cues, preferably text, to ensure that information is accessible.</source>
          <target state="new">Include other visual cues, preferably text, to ensure that information is accessible.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Don’t automatically refresh an entire app canvas unless it is really necessary for app functionality.</source>
          <target state="new">Don’t automatically refresh an entire app canvas unless it is really necessary for app functionality.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If you need to automatically refresh page content, update only certain areas of the page.</source>
          <target state="new">If you need to automatically refresh page content, update only certain areas of the page.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Assistive technologies generally must assume that a refreshed app canvas is a totally new structure, even if the effective changes were minimal.</source>
          <target state="new">Assistive technologies generally must assume that a refreshed app canvas is a totally new structure, even if the effective changes were minimal.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The cost of this to the assistive technology user is that any document view or description of the refreshed app now must be recreated and presented to the user again.</source>
          <target state="new">The cost of this to the assistive technology user is that any document view or description of the refreshed app now must be recreated and presented to the user again.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  If you do refresh content within a region, consider setting the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>AccessibilityProperties.LiveSetting<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/JJ191516)</ept> accessibility property on that element to one of the non-default settings <bpt id="p4">**</bpt>Polite<ept id="p4">**</ept> or <bpt id="p5">**</bpt>Assertive<ept id="p5">**</ept>.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  If you do refresh content within a region, consider setting the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>AccessibilityProperties.LiveSetting<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/JJ191516)</ept> accessibility property on that element to one of the non-default settings <bpt id="p4">**</bpt>Polite<ept id="p4">**</ept> or <bpt id="p5">**</bpt>Assertive<ept id="p5">**</ept>.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Some assistive technologies can map this setting to the Accessible Rich Internet Applications (ARIA) concept of live regions and can thus inform the user that a region of content has changed.</source>
          <target state="new">Some assistive technologies can map this setting to the Accessible Rich Internet Applications (ARIA) concept of live regions and can thus inform the user that a region of content has changed.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>A deliberate page navigation that is initiated by the user is a legitimate case for refreshing the app's structure.</source>
          <target state="new">A deliberate page navigation that is initiated by the user is a legitimate case for refreshing the app's structure.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>But make sure that the UI item that initiates the navigation is correctly identified or named to give some indication that invoking it will result in a context change and page reload.</source>
          <target state="new">But make sure that the UI item that initiates the navigation is correctly identified or named to give some indication that invoking it will result in a context change and page reload.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Don’t use UI elements that flash more than three times per second.</source>
          <target state="new">Don’t use UI elements that flash more than three times per second.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Flashing elements can cause some people to have seizures.</source>
          <target state="new">Flashing elements can cause some people to have seizures.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>It is best to avoid using UI elements that flash.</source>
          <target state="new">It is best to avoid using UI elements that flash.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Don’t change user context or activate functionality automatically.</source>
          <target state="new">Don’t change user context or activate functionality automatically.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Context or activation changes should occur only when the user takes a direct action on a UI element that has focus.</source>
          <target state="new">Context or activation changes should occur only when the user takes a direct action on a UI element that has focus.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Changes in user context include changing focus, displaying new content, and navigating to a different page.</source>
          <target state="new">Changes in user context include changing focus, displaying new content, and navigating to a different page.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Making context changes without involving the user can be disorienting for users who have disabilities.</source>
          <target state="new">Making context changes without involving the user can be disorienting for users who have disabilities.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The exceptions to this requirement include displaying submenus, validating forms, displaying help text in another control, and changing context in response to an asynchronous event.</source>
          <target state="new">The exceptions to this requirement include displaying submenus, validating forms, displaying help text in another control, and changing context in response to an asynchronous event.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Related topics</source>
          <target state="new">Related topics</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Accessibility</source>
          <target state="new">Accessibility</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Accessibility in the Store</source>
          <target state="new">Accessibility in the Store</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Accessibility checklist</source>
          <target state="new">Accessibility checklist</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>