<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-48076a9" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">34d58800e3ae3889589fa4fc264111069e5e0d16</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci1\audio-video-camera\background-audio.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>This article describes how to create Universal Windows Platform (UWP) apps that play audio in the background.</source>
          <target state="new">This article describes how to create Universal Windows Platform (UWP) apps that play audio in the background.</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Background Audio</source>
          <target state="new">Background Audio</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Background Audio</source>
          <target state="new">Background Audio</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>\[ Updated for UWP apps on Windows 10.</source>
          <target state="new">\[ Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This article describes how to create Universal Windows Platform (UWP) apps that play audio in the background.</source>
          <target state="new">This article describes how to create Universal Windows Platform (UWP) apps that play audio in the background.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This means that even after the user has minimized your app, returned to the home screen, or has navigated away from your app in some other way, your app can continue to play audio.</source>
          <target state="new">This means that even after the user has minimized your app, returned to the home screen, or has navigated away from your app in some other way, your app can continue to play audio.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This article discusses the components of a background audio app and how they work together.</source>
          <target state="new">This article discusses the components of a background audio app and how they work together.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Scenarios for background audio playback include:</source>
          <target state="new">Scenarios for background audio playback include:</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Long-running playlists:<ept id="p1">**</ept> The user briefly brings up a foreground app to select and start a playlist, after which the user expects the playlist to continue playing in the background.</source>
          <target state="new"><bpt id="p1">**</bpt>Long-running playlists:<ept id="p1">**</ept> The user briefly brings up a foreground app to select and start a playlist, after which the user expects the playlist to continue playing in the background.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Using task switcher:<ept id="p1">**</ept> The user briefly brings up a foreground app to start playing audio, then switches to another open app using the task switcher.</source>
          <target state="new"><bpt id="p1">**</bpt>Using task switcher:<ept id="p1">**</ept> The user briefly brings up a foreground app to start playing audio, then switches to another open app using the task switcher.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The user expects the audio to continue playing in the background.</source>
          <target state="new">The user expects the audio to continue playing in the background.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The background audio implementation described in this article will allow your app to run universally on all Windows devices including Mobile, Desktop, and Xbox.</source>
          <target state="new">The background audio implementation described in this article will allow your app to run universally on all Windows devices including Mobile, Desktop, and Xbox.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Note</source>
          <target state="new">Note</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>Background audio UWP sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=619485)</ept> implements the code discussed in this overview.</source>
          <target state="new">The <bpt id="p1">[</bpt>Background audio UWP sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=619485)</ept> implements the code discussed in this overview.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You can download the sample to see the code in context or to use as a starting point for your own app.</source>
          <target state="new">You can download the sample to see the code in context or to use as a starting point for your own app.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Background audio architecture</source>
          <target state="new">Background audio architecture</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>An app performing background playback consists of two processes.</source>
          <target state="new">An app performing background playback consists of two processes.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The first process is the main app, which contains the app UI and client logic, running in the foreground.</source>
          <target state="new">The first process is the main app, which contains the app UI and client logic, running in the foreground.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The second process is the background playback task, which implements <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IBackgroundTask<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br224794)</ept> like all UWP app background tasks.</source>
          <target state="new">The second process is the background playback task, which implements <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IBackgroundTask<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br224794)</ept> like all UWP app background tasks.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The background task contains the audio playback logic and background services.</source>
          <target state="new">The background task contains the audio playback logic and background services.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The background task communicates with the system through the System Media Transport Controls.</source>
          <target state="new">The background task communicates with the system through the System Media Transport Controls.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The following diagram is an overview of how the system is designed.</source>
          <target state="new">The following diagram is an overview of how the system is designed.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>windows 10 background audio architecture</source>
          <target state="new">windows 10 background audio architecture</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>MediaPlayer</source>
          <target state="new">MediaPlayer</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows.Media.Playback<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn640562)</ept> namespace contains APIs used to play audio in the background.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows.Media.Playback<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn640562)</ept> namespace contains APIs used to play audio in the background.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>There is a single instance of <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MediaPlayer<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn652535)</ept> per app through which playback occurs.</source>
          <target state="new">There is a single instance of <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MediaPlayer<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn652535)</ept> per app through which playback occurs.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Your background audio app calls methods and sets properties on the <bpt id="p1">**</bpt>MediaPlayer<ept id="p1">**</ept> class to set the current track, start playback, pause, fast forward, rewind, and so on.</source>
          <target state="new">Your background audio app calls methods and sets properties on the <bpt id="p1">**</bpt>MediaPlayer<ept id="p1">**</ept> class to set the current track, start playback, pause, fast forward, rewind, and so on.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The media player object instance is always accessed through the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>BackgroundMediaPlayer.Current<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn652528)</ept> property.</source>
          <target state="new">The media player object instance is always accessed through the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>BackgroundMediaPlayer.Current<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn652528)</ept> property.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>MediaPlayer Proxy and Stub</source>
          <target state="new">MediaPlayer Proxy and Stub</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>When <bpt id="p1">**</bpt>BackgroundMediaPlayer.Current<ept id="p1">**</ept> is accessed from your app's background process, the <bpt id="p2">**</bpt>MediaPlayer<ept id="p2">**</ept> instance is activated in the background task host and can be manipulated directly.</source>
          <target state="new">When <bpt id="p1">**</bpt>BackgroundMediaPlayer.Current<ept id="p1">**</ept> is accessed from your app's background process, the <bpt id="p2">**</bpt>MediaPlayer<ept id="p2">**</ept> instance is activated in the background task host and can be manipulated directly.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>When <bpt id="p1">**</bpt>BackgroundMediaPlayer.Current<ept id="p1">**</ept> is accessed from the foreground application, the <bpt id="p2">**</bpt>MediaPlayer<ept id="p2">**</ept> instance that is returned is actually a proxy that communicates with a stub in the background process.</source>
          <target state="new">When <bpt id="p1">**</bpt>BackgroundMediaPlayer.Current<ept id="p1">**</ept> is accessed from the foreground application, the <bpt id="p2">**</bpt>MediaPlayer<ept id="p2">**</ept> instance that is returned is actually a proxy that communicates with a stub in the background process.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This stub communicates with the actual <bpt id="p1">**</bpt>MediaPlayer<ept id="p1">**</ept> instance, which is also hosted in the background process.</source>
          <target state="new">This stub communicates with the actual <bpt id="p1">**</bpt>MediaPlayer<ept id="p1">**</ept> instance, which is also hosted in the background process.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Both the foreground and background process can access most of the properties of the <bpt id="p1">**</bpt>MediaPlayer<ept id="p1">**</ept> instance, with the exception of <bpt id="p2">[</bpt><bpt id="p3">**</bpt>MediaPlayer.Source<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/dn987010)</ept> and <bpt id="p4">[</bpt><bpt id="p5">**</bpt>MediaPlayer.SystemMediaTransportControls<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/dn926635)</ept> which can only be accessed from the background process.</source>
          <target state="new">Both the foreground and background process can access most of the properties of the <bpt id="p1">**</bpt>MediaPlayer<ept id="p1">**</ept> instance, with the exception of <bpt id="p2">[</bpt><bpt id="p3">**</bpt>MediaPlayer.Source<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/dn987010)</ept> and <bpt id="p4">[</bpt><bpt id="p5">**</bpt>MediaPlayer.SystemMediaTransportControls<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/dn926635)</ept> which can only be accessed from the background process.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The foreground app and the background process can both receive notifications of media-specific events like <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MediaOpened<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn652609)</ept>, <bpt id="p3">[</bpt><bpt id="p4">**</bpt>MediaEnded<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn652603)</ept>, and <bpt id="p5">[</bpt><bpt id="p6">**</bpt>MediaFailed<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/dn652606)</ept>.</source>
          <target state="new">The foreground app and the background process can both receive notifications of media-specific events like <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MediaOpened<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn652609)</ept>, <bpt id="p3">[</bpt><bpt id="p4">**</bpt>MediaEnded<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn652603)</ept>, and <bpt id="p5">[</bpt><bpt id="p6">**</bpt>MediaFailed<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/dn652606)</ept>.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Playback Lists</source>
          <target state="new">Playback Lists</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>A common scenario for background audio applications is to play multiple items in a row.</source>
          <target state="new">A common scenario for background audio applications is to play multiple items in a row.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This is most easily accomplished in your background process by using a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MediaPlaybackList<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn930955)</ept> object, which can be set as a source on the <bpt id="p3">**</bpt>MediaPlayer<ept id="p3">**</ept> by assigning it to the <bpt id="p4">[</bpt><bpt id="p5">**</bpt>MediaPlayer.Source<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/dn987010)</ept> property.</source>
          <target state="new">This is most easily accomplished in your background process by using a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MediaPlaybackList<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn930955)</ept> object, which can be set as a source on the <bpt id="p3">**</bpt>MediaPlayer<ept id="p3">**</ept> by assigning it to the <bpt id="p4">[</bpt><bpt id="p5">**</bpt>MediaPlayer.Source<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/dn987010)</ept> property.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>It is not possible to access a <bpt id="p1">**</bpt>MediaPlaybackList<ept id="p1">**</ept> from the foreground process that was set in the background process.</source>
          <target state="new">It is not possible to access a <bpt id="p1">**</bpt>MediaPlaybackList<ept id="p1">**</ept> from the foreground process that was set in the background process.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>System Media Transport Controls</source>
          <target state="new">System Media Transport Controls</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A user may control audio playback without directly using your app's UI through means such as Bluetooth devices, SmartGlass, and the System Media Transport Controls.</source>
          <target state="new">A user may control audio playback without directly using your app's UI through means such as Bluetooth devices, SmartGlass, and the System Media Transport Controls.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Your background task uses the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SystemMediaTransportControls<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn278677)</ept> class to subscribe to these user-initiated system events.</source>
          <target state="new">Your background task uses the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SystemMediaTransportControls<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn278677)</ept> class to subscribe to these user-initiated system events.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>To get a <bpt id="p1">**</bpt>SystemMediaTransportControls<ept id="p1">**</ept> instance from within the background process, use the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>MediaPlayer.SystemMediaTransportControls<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/dn926635)</ept> property.</source>
          <target state="new">To get a <bpt id="p1">**</bpt>SystemMediaTransportControls<ept id="p1">**</ept> instance from within the background process, use the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>MediaPlayer.SystemMediaTransportControls<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/dn926635)</ept> property.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Foreground apps get an instance of the class by calling <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SystemMediaTransportControls.GetForCurrentView<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn278708)</ept>, but the instance returned is a foreground-only instance that does not relate to the background task.</source>
          <target state="new">Foreground apps get an instance of the class by calling <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SystemMediaTransportControls.GetForCurrentView<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn278708)</ept>, but the instance returned is a foreground-only instance that does not relate to the background task.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Sending Messages Between Tasks</source>
          <target state="new">Sending Messages Between Tasks</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>There are times when you will want to communicate between the two processes of a background audio app.</source>
          <target state="new">There are times when you will want to communicate between the two processes of a background audio app.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For example, you might want the background task to notify the foreground task when a new track starts playing, and then send the new song title to the foreground task to display on the screen.</source>
          <target state="new">For example, you might want the background task to notify the foreground task when a new track starts playing, and then send the new song title to the foreground task to display on the screen.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>A simple communication mechanism raises events in both the foreground and background processes.</source>
          <target state="new">A simple communication mechanism raises events in both the foreground and background processes.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SendMessageToForeground<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn652533)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>SendMessageToBackground<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn652532)</ept> methods each invoke events in the corresponding process.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SendMessageToForeground<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn652533)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>SendMessageToBackground<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn652532)</ept> methods each invoke events in the corresponding process.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Messages can be received by subscribing to the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MessageReceivedFromBackground<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn652530)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>MessageReceivedFromForeground<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn652531)</ept> events.</source>
          <target state="new">Messages can be received by subscribing to the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MessageReceivedFromBackground<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn652530)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>MessageReceivedFromForeground<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn652531)</ept> events.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Data can be passed as an argument to the send message methods that are then passed into the message received event handlers.</source>
          <target state="new">Data can be passed as an argument to the send message methods that are then passed into the message received event handlers.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Pass data using the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ValueSet<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn636131)</ept> class.</source>
          <target state="new">Pass data using the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ValueSet<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn636131)</ept> class.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>This class is a dictionary that contains a string as a key and other value types as values.</source>
          <target state="new">This class is a dictionary that contains a string as a key and other value types as values.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>You can pass simple value types such as integers, strings, and booleans.</source>
          <target state="new">You can pass simple value types such as integers, strings, and booleans.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Background Task Life Cycle</source>
          <target state="new">Background Task Life Cycle</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The lifetime of a background task is closely tied to your app's current playback status.</source>
          <target state="new">The lifetime of a background task is closely tied to your app's current playback status.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>For example, when the user pauses audio playback, the system may terminate or cancel your app depending on the circumstances.</source>
          <target state="new">For example, when the user pauses audio playback, the system may terminate or cancel your app depending on the circumstances.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>After a period of time without audio playback, the system may automatically shut down the background task.</source>
          <target state="new">After a period of time without audio playback, the system may automatically shut down the background task.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IBackgroundTask.Run<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br224811)</ept> method is called the first time your app accesses either <bpt id="p3">[</bpt><bpt id="p4">**</bpt>BackgroundMediaPlayer.Current<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn652528)</ept> from code running in the foreground app or when you register a handler for the <bpt id="p5">[</bpt><bpt id="p6">**</bpt>MessageReceivedFromBackground<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/dn652530)</ept> event, whichever occurs first.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IBackgroundTask.Run<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br224811)</ept> method is called the first time your app accesses either <bpt id="p3">[</bpt><bpt id="p4">**</bpt>BackgroundMediaPlayer.Current<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn652528)</ept> from code running in the foreground app or when you register a handler for the <bpt id="p5">[</bpt><bpt id="p6">**</bpt>MessageReceivedFromBackground<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/dn652530)</ept> event, whichever occurs first.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>It is recommended that you register for the message received handler before calling <bpt id="p1">**</bpt>BackgroundMediaPlayer.Current<ept id="p1">**</ept> for the first time so that the foreground app doesn't miss any messages sent from the background process.</source>
          <target state="new">It is recommended that you register for the message received handler before calling <bpt id="p1">**</bpt>BackgroundMediaPlayer.Current<ept id="p1">**</ept> for the first time so that the foreground app doesn't miss any messages sent from the background process.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>To keep the background task alive, your app must request a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>BackgroundTaskDeferral<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh700499)</ept> from within the <bpt id="p3">**</bpt>Run<ept id="p3">**</ept> method and call <bpt id="p4">[</bpt><bpt id="p5">**</bpt>BackgroundTaskDeferral.Complete<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/hh700504)</ept> when the task instance receives the <bpt id="p6">[</bpt><bpt id="p7">**</bpt>Canceled<ept id="p7">**</ept><ept id="p6">](https://msdn.microsoft.com/library/windows/apps/br224798)</ept> or <bpt id="p8">[</bpt><bpt id="p9">**</bpt>Completed<ept id="p9">**</ept><ept id="p8">](https://msdn.microsoft.com/library/windows/apps/br224788)</ept> events.</source>
          <target state="new">To keep the background task alive, your app must request a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>BackgroundTaskDeferral<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh700499)</ept> from within the <bpt id="p3">**</bpt>Run<ept id="p3">**</ept> method and call <bpt id="p4">[</bpt><bpt id="p5">**</bpt>BackgroundTaskDeferral.Complete<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/hh700504)</ept> when the task instance receives the <bpt id="p6">[</bpt><bpt id="p7">**</bpt>Canceled<ept id="p7">**</ept><ept id="p6">](https://msdn.microsoft.com/library/windows/apps/br224798)</ept> or <bpt id="p8">[</bpt><bpt id="p9">**</bpt>Completed<ept id="p9">**</ept><ept id="p8">](https://msdn.microsoft.com/library/windows/apps/br224788)</ept> events.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Do not loop or wait in the <bpt id="p1">**</bpt>Run<ept id="p1">**</ept> method because this consumes resources and may cause your app's background task to be terminated by the system.</source>
          <target state="new">Do not loop or wait in the <bpt id="p1">**</bpt>Run<ept id="p1">**</ept> method because this consumes resources and may cause your app's background task to be terminated by the system.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Your background task gets the <bpt id="p1">**</bpt>Completed<ept id="p1">**</ept> event when the <bpt id="p2">**</bpt>Run<ept id="p2">**</ept> method is completed and deferral is not requested.</source>
          <target state="new">Your background task gets the <bpt id="p1">**</bpt>Completed<ept id="p1">**</ept> event when the <bpt id="p2">**</bpt>Run<ept id="p2">**</ept> method is completed and deferral is not requested.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>In some cases, when your app gets the <bpt id="p1">**</bpt>Canceled<ept id="p1">**</ept> event, it can be also followed by the <bpt id="p2">**</bpt>Completed<ept id="p2">**</ept> event.</source>
          <target state="new">In some cases, when your app gets the <bpt id="p1">**</bpt>Canceled<ept id="p1">**</ept> event, it can be also followed by the <bpt id="p2">**</bpt>Completed<ept id="p2">**</ept> event.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Your task may receive a <bpt id="p1">**</bpt>Canceled<ept id="p1">**</ept> event while <bpt id="p2">**</bpt>Run<ept id="p2">**</ept> is executing, so be sure to manage this potential concurrence.</source>
          <target state="new">Your task may receive a <bpt id="p1">**</bpt>Canceled<ept id="p1">**</ept> event while <bpt id="p2">**</bpt>Run<ept id="p2">**</ept> is executing, so be sure to manage this potential concurrence.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Situations in which the background task can be cancelled include:</source>
          <target state="new">Situations in which the background task can be cancelled include:</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>A new app with audio playback capabilities starts on systems that enforce the exclusivity sub-policy.</source>
          <target state="new">A new app with audio playback capabilities starts on systems that enforce the exclusivity sub-policy.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>See the <bpt id="p1">[</bpt>System policies for background audio task lifetime<ept id="p1">](#system-policies-for-background-audio-task-lifetime)</ept> section below.</source>
          <target state="new">See the <bpt id="p1">[</bpt>System policies for background audio task lifetime<ept id="p1">](#system-policies-for-background-audio-task-lifetime)</ept> section below.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>A background task has been launched but music is not yet playing, and then the foreground app is suspended.</source>
          <target state="new">A background task has been launched but music is not yet playing, and then the foreground app is suspended.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Other media interruptions, such as incoming phone calls or VoIP calls.</source>
          <target state="new">Other media interruptions, such as incoming phone calls or VoIP calls.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Situations in which the background task can be terminated without notice include:</source>
          <target state="new">Situations in which the background task can be terminated without notice include:</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>A VoIP call comes in and there is not enough available memory on the system to keep the background task alive.</source>
          <target state="new">A VoIP call comes in and there is not enough available memory on the system to keep the background task alive.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>A resource policy is violated.</source>
          <target state="new">A resource policy is violated.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Task cancellation or completion does not end gracefully.</source>
          <target state="new">Task cancellation or completion does not end gracefully.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>System policies for background audio task lifetime</source>
          <target state="new">System policies for background audio task lifetime</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The following policies help determine how the system manages the lifetime of background audio tasks.</source>
          <target state="new">The following policies help determine how the system manages the lifetime of background audio tasks.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Exclusivity</source>
          <target state="new">Exclusivity</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>If enabled, this sub-policy limits the number of background audio tasks to be at most 1 at any given time.</source>
          <target state="new">If enabled, this sub-policy limits the number of background audio tasks to be at most 1 at any given time.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>It is enabled on Mobile and other non-Desktop SKUs.</source>
          <target state="new">It is enabled on Mobile and other non-Desktop SKUs.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Inactivity Timeout</source>
          <target state="new">Inactivity Timeout</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Due to resource constraints, the system may terminate your background task after a period of inactivity.</source>
          <target state="new">Due to resource constraints, the system may terminate your background task after a period of inactivity.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>A background task is considered “inactive” if both of the following conditions are met:</source>
          <target state="new">A background task is considered “inactive” if both of the following conditions are met:</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The foreground app is not visible (it is suspended or terminated).</source>
          <target state="new">The foreground app is not visible (it is suspended or terminated).</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The background media player is not in the playing state.</source>
          <target state="new">The background media player is not in the playing state.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>If both of these conditions are satisfied, the background media system policy will start a timer.</source>
          <target state="new">If both of these conditions are satisfied, the background media system policy will start a timer.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>If neither condition has changed when the timer expires, the background media system policy will terminate the background task.</source>
          <target state="new">If neither condition has changed when the timer expires, the background media system policy will terminate the background task.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Shared Lifetime</source>
          <target state="new">Shared Lifetime</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>If enabled, this sub-policy forces the background task to be dependent on the lifetime of the foreground task.</source>
          <target state="new">If enabled, this sub-policy forces the background task to be dependent on the lifetime of the foreground task.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>If the foreground task is shut down, either by the user or the system, the background task will also shut down.</source>
          <target state="new">If the foreground task is shut down, either by the user or the system, the background task will also shut down.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>However, note that this does not mean that the foreground is dependent on the background.</source>
          <target state="new">However, note that this does not mean that the foreground is dependent on the background.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>If the background task is shut down, this does not force the foreground task to shut down.</source>
          <target state="new">If the background task is shut down, this does not force the foreground task to shut down.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The following table lists the which policies are enforced on which device types.</source>
          <target state="new">The following table lists the which policies are enforced on which device types.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Sub-policy</source>
          <target state="new">Sub-policy</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Desktop</source>
          <target state="new">Desktop</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Mobile</source>
          <target state="new">Mobile</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Other</source>
          <target state="new">Other</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Exclusivity</source>
          <target state="new">Exclusivity</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Disabled</source>
          <target state="new">Disabled</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Enabled</source>
          <target state="new">Enabled</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Enabled</source>
          <target state="new">Enabled</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Inactivity Timeout</source>
          <target state="new">Inactivity Timeout</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Disabled</source>
          <target state="new">Disabled</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Enabled</source>
          <target state="new">Enabled</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Disabled</source>
          <target state="new">Disabled</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Shared Lifetime</source>
          <target state="new">Shared Lifetime</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Enabled</source>
          <target state="new">Enabled</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Disabled</source>
          <target state="new">Disabled</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Disabled</source>
          <target state="new">Disabled</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>