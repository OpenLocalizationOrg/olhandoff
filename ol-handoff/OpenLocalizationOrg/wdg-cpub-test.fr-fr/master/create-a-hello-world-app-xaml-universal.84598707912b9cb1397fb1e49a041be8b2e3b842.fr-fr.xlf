<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-48076a9" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05358eaace659edd690c939d4c93be9aff6ba023</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci1\get-started\create-a-hello-world-app-xaml-universal.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Create a Hello, world app (XAML)</source>
          <target state="new">Create a Hello, world app (XAML)</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This tutorial teaches you how to use Extensible Application Markup Language (XAML) with C# to create a simple Hello, world app that targets the Universal Windows Platform (UWP) on Windows 10.</source>
          <target state="new">This tutorial teaches you how to use Extensible Application Markup Language (XAML) with C# to create a simple Hello, world app that targets the Universal Windows Platform (UWP) on Windows 10.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Create a "Hello, world" app (XAML)</source>
          <target state="new">Create a "Hello, world" app (XAML)</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This tutorial teaches you how to use Extensible Application Markup Language (XAML) with C# to create a simple "Hello, world" app that targets the Universal Windows Platform (UWP) on Windows 10.</source>
          <target state="new">This tutorial teaches you how to use Extensible Application Markup Language (XAML) with C# to create a simple "Hello, world" app that targets the Universal Windows Platform (UWP) on Windows 10.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>With a single project in Microsoft Visual Studio, you can build an app that runs on any Windows 10 device.</source>
          <target state="new">With a single project in Microsoft Visual Studio, you can build an app that runs on any Windows 10 device.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Here we focus on creating an app that runs equally well on desktop and mobile devices.</source>
          <target state="new">Here we focus on creating an app that runs equally well on desktop and mobile devices.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Important<ept id="p1">**</ept>   This tutorial is for use with Microsoft Visual Studio 2015 and Windows 10.</source>
          <target state="new"><bpt id="p1">**</bpt>Important<ept id="p1">**</ept>   This tutorial is for use with Microsoft Visual Studio 2015 and Windows 10.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>It won't work correctly with earlier versions.</source>
          <target state="new">It won't work correctly with earlier versions.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Here you'll learn how to:</source>
          <target state="new">Here you'll learn how to:</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Create a new Visual Studio project that targets Windows 10 and the UWP.</source>
          <target state="new">Create a new Visual Studio project that targets Windows 10 and the UWP.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Add XAML content to your start page.</source>
          <target state="new">Add XAML content to your start page.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Handle touch, pen, and mouse input.</source>
          <target state="new">Handle touch, pen, and mouse input.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Run the project on the local desktop and on the phone emulator in Visual Studio.</source>
          <target state="new">Run the project on the local desktop and on the phone emulator in Visual Studio.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Adapt the UI to different screen sizes.</source>
          <target state="new">Adapt the UI to different screen sizes.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Before you start...</source>
          <target state="new">Before you start...</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>We're going to jump right into the steps you use to create a simple universal app.</source>
          <target state="new">We're going to jump right into the steps you use to create a simple universal app.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>So we strongly recommend that you read and understand the overview information in <bpt id="p1">[</bpt>What's new in Windows 10<ept id="p1">](https://dev.windows.com/whats-new-windows-10-dev-preview)</ept> and <bpt id="p2">[</bpt>What's a Universal Windows app<ept id="p2">](whats-a-uwp.md)</ept> before you start this tutorial.</source>
          <target state="new">So we strongly recommend that you read and understand the overview information in <bpt id="p1">[</bpt>What's new in Windows 10<ept id="p1">](https://dev.windows.com/whats-new-windows-10-dev-preview)</ept> and <bpt id="p2">[</bpt>What's a Universal Windows app<ept id="p2">](whats-a-uwp.md)</ept> before you start this tutorial.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To complete this tutorial, you need Windows 10 and Visual Studio 2015.</source>
          <target state="new">To complete this tutorial, you need Windows 10 and Visual Studio 2015.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Get set up<ept id="p1">](get-set-up.md)</ept> for more info.</source>
          <target state="new">See <bpt id="p1">[</bpt>Get set up<ept id="p1">](get-set-up.md)</ept> for more info.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>We assume you have a basic understanding of XAML and the concepts in the <bpt id="p1">[</bpt>XAML overview<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Mt185595)</ept>.</source>
          <target state="new">We assume you have a basic understanding of XAML and the concepts in the <bpt id="p1">[</bpt>XAML overview<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Mt185595)</ept>.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>We also assume you're using the default window layout in Visual Studio.</source>
          <target state="new">We also assume you're using the default window layout in Visual Studio.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If you change the default layout, you can reset it in the <bpt id="p1">**</bpt>Window<ept id="p1">**</ept> menu by using the <bpt id="p2">**</bpt>Reset Window Layout<ept id="p2">**</ept> command.</source>
          <target state="new">If you change the default layout, you can reset it in the <bpt id="p1">**</bpt>Window<ept id="p1">**</ept> menu by using the <bpt id="p2">**</bpt>Reset Window Layout<ept id="p2">**</ept> command.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Step 1: Create a new project in Visual Studio</source>
          <target state="new">Step 1: Create a new project in Visual Studio</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Launch Visual Studio 2015.</source>
          <target state="new">Launch Visual Studio 2015.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The Visual Studio 2015 Start page appears.</source>
          <target state="new">The Visual Studio 2015 Start page appears.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>(From now on, we'll refer to Visual Studio 2015 simply as Visual Studio .)</source>
          <target state="new">(From now on, we'll refer to Visual Studio 2015 simply as Visual Studio .)</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p1">**</bpt>File<ept id="p1">**</ept> menu, select <bpt id="p2">**</bpt>New<ept id="p2">**</ept><ph id="ph1"> &gt; </ph><bpt id="p3">**</bpt>Project<ept id="p3">**</ept>.</source>
          <target state="new">On the <bpt id="p1">**</bpt>File<ept id="p1">**</ept> menu, select <bpt id="p2">**</bpt>New<ept id="p2">**</ept><ph id="ph1"> &gt; </ph><bpt id="p3">**</bpt>Project<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>New Project<ept id="p1">**</ept> dialog appears.</source>
          <target state="new">The <bpt id="p1">**</bpt>New Project<ept id="p1">**</ept> dialog appears.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The left pane of the dialog lets you select the type of templates to display.</source>
          <target state="new">The left pane of the dialog lets you select the type of templates to display.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>In the left pane, expand <bpt id="p1">**</bpt>Installed &gt; Templates &gt; Visual C# &gt; Windows<ept id="p1">**</ept>, then pick the <bpt id="p2">**</bpt>Universal<ept id="p2">**</ept> template group.</source>
          <target state="new">In the left pane, expand <bpt id="p1">**</bpt>Installed &gt; Templates &gt; Visual C# &gt; Windows<ept id="p1">**</ept>, then pick the <bpt id="p2">**</bpt>Universal<ept id="p2">**</ept> template group.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The dialog's center pane displays a list of project templates for Universal Windows Platform (UWP) apps.</source>
          <target state="new">The dialog's center pane displays a list of project templates for Universal Windows Platform (UWP) apps.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The New Project window</source>
          <target state="new">The New Project window</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>In the center pane, select the <bpt id="p1">**</bpt>Blank App (Universal Windows)<ept id="p1">**</ept> template.</source>
          <target state="new">In the center pane, select the <bpt id="p1">**</bpt>Blank App (Universal Windows)<ept id="p1">**</ept> template.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Blank App<ept id="p1">**</ept> template creates a minimal UWP app that compiles and runs, but contains no user-interface controls or data.</source>
          <target state="new">The <bpt id="p1">**</bpt>Blank App<ept id="p1">**</ept> template creates a minimal UWP app that compiles and runs, but contains no user-interface controls or data.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>You add controls to the app over the course of this tutorial.</source>
          <target state="new">You add controls to the app over the course of this tutorial.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Name<ept id="p1">**</ept> text box, type "HelloWorld".</source>
          <target state="new">In the <bpt id="p1">**</bpt>Name<ept id="p1">**</ept> text box, type "HelloWorld".</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>OK<ept id="p1">**</ept> to create the project.</source>
          <target state="new">Click <bpt id="p1">**</bpt>OK<ept id="p1">**</ept> to create the project.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Visual Studio creates your project and displays it in the <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>.</source>
          <target state="new">Visual Studio creates your project and displays it in the <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Visual Studio Solution Explorer for the HelloWorld project</source>
          <target state="new">Visual Studio Solution Explorer for the HelloWorld project</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Although the <bpt id="p1">**</bpt>Blank App<ept id="p1">**</ept> is a minimal template, it still contains a lot of files:</source>
          <target state="new">Although the <bpt id="p1">**</bpt>Blank App<ept id="p1">**</ept> is a minimal template, it still contains a lot of files:</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A manifest file (Package.appxmanifest) that describes your app (its name, description, tile, start page, and so on) and lists the files that your app contains.</source>
          <target state="new">A manifest file (Package.appxmanifest) that describes your app (its name, description, tile, start page, and so on) and lists the files that your app contains.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>A set of logo images (Assets/Square150x150Logo.scale-200.png, Assets/Square44x44Logo.scale-200.png, and Assets/Wide310x150Logo.scale-200.png)to display in the start menu.</source>
          <target state="new">A set of logo images (Assets/Square150x150Logo.scale-200.png, Assets/Square44x44Logo.scale-200.png, and Assets/Wide310x150Logo.scale-200.png)to display in the start menu.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>An image (Assets/StoreLogo.png) to represent your app in the Windows Store.</source>
          <target state="new">An image (Assets/StoreLogo.png) to represent your app in the Windows Store.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A splash screen (Assets/SplashScreen.scale-200.png) to display when your app starts.</source>
          <target state="new">A splash screen (Assets/SplashScreen.scale-200.png) to display when your app starts.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>XAML and code files for the app (App.xaml and App.xaml.cs).</source>
          <target state="new">XAML and code files for the app (App.xaml and App.xaml.cs).</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>A start page (MainPage.xaml) and an accompanying code file (MainPage.xaml.cs) that run when your app starts.</source>
          <target state="new">A start page (MainPage.xaml) and an accompanying code file (MainPage.xaml.cs) that run when your app starts.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>These files are essential to all UWP apps using C#.</source>
          <target state="new">These files are essential to all UWP apps using C#.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Every project that you create in Visual Studio contains them.</source>
          <target state="new">Every project that you create in Visual Studio contains them.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Step 2: Modify your start page</source>
          <target state="new">Step 2: Modify your start page</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>What's in the files?</source>
          <target state="new">What's in the files?</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>To view and edit a file in your project, double-click the file in the <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>.</source>
          <target state="new">To view and edit a file in your project, double-click the file in the <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>By default, you can expand a XAML file just like a folder to see its associated code file.</source>
          <target state="new">By default, you can expand a XAML file just like a folder to see its associated code file.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>XAML files open in a split view that shows both the design surface and the XAML editor.</source>
          <target state="new">XAML files open in a split view that shows both the design surface and the XAML editor.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>In this tutorial, you work with just a few of the files listed previously: App.xaml, MainPage.xaml, and MainPage.xaml.cs.</source>
          <target state="new">In this tutorial, you work with just a few of the files listed previously: App.xaml, MainPage.xaml, and MainPage.xaml.cs.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>App.xaml and App.xaml.cs</source>
          <target state="new">App.xaml and App.xaml.cs</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>App.xaml is where you declare resources that are used across the app.</source>
          <target state="new">App.xaml is where you declare resources that are used across the app.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>App.xaml.cs is the code-behind file for App.xaml.</source>
          <target state="new">App.xaml.cs is the code-behind file for App.xaml.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Code-behind is the code that is joined with the XAML page's partial class.</source>
          <target state="new">Code-behind is the code that is joined with the XAML page's partial class.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Together, the XAML and code-behind make a complete class.</source>
          <target state="new">Together, the XAML and code-behind make a complete class.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>App.xaml.cs is the entry point for your app.</source>
          <target state="new">App.xaml.cs is the entry point for your app.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Like all code-behind pages, it contains a constructor that calls the <ph id="ph1">`InitializeComponent`</ph> method.</source>
          <target state="new">Like all code-behind pages, it contains a constructor that calls the <ph id="ph1">`InitializeComponent`</ph> method.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>You don't write the <ph id="ph1">`InitializeComponent`</ph> method.</source>
          <target state="new">You don't write the <ph id="ph1">`InitializeComponent`</ph> method.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>It's generated by Visual Studio, and its main purpose is to initialize the elements declared in the XAML file.</source>
          <target state="new">It's generated by Visual Studio, and its main purpose is to initialize the elements declared in the XAML file.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>App.xaml.cs also contains methods to handle activation and suspension of the app.</source>
          <target state="new">App.xaml.cs also contains methods to handle activation and suspension of the app.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>MainPage.xaml</source>
          <target state="new">MainPage.xaml</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>In MainPage.xaml you define the UI for your app.</source>
          <target state="new">In MainPage.xaml you define the UI for your app.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>You can add elements directly using XAML markup, or you can use the design tools provided by Visual Studio.</source>
          <target state="new">You can add elements directly using XAML markup, or you can use the design tools provided by Visual Studio.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>MainPage.xaml.cs is the code-behind page for MainPage.xaml.</source>
          <target state="new">MainPage.xaml.cs is the code-behind page for MainPage.xaml.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>It's where you add your app logic and event handlers.</source>
          <target state="new">It's where you add your app logic and event handlers.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Together these two files define a new class called <ph id="ph1">`MainPage`</ph>, which inherits from <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Page<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR227503)</ept>, in the <ph id="ph2">`HelloWorld`</ph> namespace.</source>
          <target state="new">Together these two files define a new class called <ph id="ph1">`MainPage`</ph>, which inherits from <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Page<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR227503)</ept>, in the <ph id="ph2">`HelloWorld`</ph> namespace.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>MainPage.xaml</source>
          <target state="new">MainPage.xaml</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>MainPage.xaml.cs</source>
          <target state="new">MainPage.xaml.cs</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Modify the start page</source>
          <target state="new">Modify the start page</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Now, let's add some content to the app.</source>
          <target state="new">Now, let's add some content to the app.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>To modify the start page</source>
          <target state="new">To modify the start page</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Double-click MainPage.xaml in <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept> to open it.</source>
          <target state="new">Double-click MainPage.xaml in <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept> to open it.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>In the XAML editor, add the controls for the UI.</source>
          <target state="new">In the XAML editor, add the controls for the UI.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>In the root <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Grid<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR242704)</ept>, add this XAML.</source>
          <target state="new">In the root <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Grid<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR242704)</ept>, add this XAML.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>It contains a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StackPanel<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209635)</ept> with a title <bpt id="p3">[</bpt><bpt id="p4">**</bpt>TextBlock<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR209652)</ept>, a <bpt id="p5">**</bpt>TextBlock<ept id="p5">**</ept> that asks the user's name, a <bpt id="p6">[</bpt><bpt id="p7">**</bpt>TextBox<ept id="p7">**</ept><ept id="p6">](https://msdn.microsoft.com/library/windows/apps/BR209683)</ept> element to accept the user's name, a <bpt id="p8">[</bpt><bpt id="p9">**</bpt>Button<ept id="p9">**</ept><ept id="p8">](https://msdn.microsoft.com/library/windows/apps/BR209265)</ept>, and another <bpt id="p10">**</bpt>TextBlock<ept id="p10">**</ept> to show a greeting.</source>
          <target state="new">It contains a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StackPanel<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209635)</ept> with a title <bpt id="p3">[</bpt><bpt id="p4">**</bpt>TextBlock<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR209652)</ept>, a <bpt id="p5">**</bpt>TextBlock<ept id="p5">**</ept> that asks the user's name, a <bpt id="p6">[</bpt><bpt id="p7">**</bpt>TextBox<ept id="p7">**</ept><ept id="p6">](https://msdn.microsoft.com/library/windows/apps/BR209683)</ept> element to accept the user's name, a <bpt id="p8">[</bpt><bpt id="p9">**</bpt>Button<ept id="p9">**</ept><ept id="p8">](https://msdn.microsoft.com/library/windows/apps/BR209265)</ept>, and another <bpt id="p10">**</bpt>TextBlock<ept id="p10">**</ept> to show a greeting.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Some of these controls have names so that you can refer to them later in your code.</source>
          <target state="new">Some of these controls have names so that you can refer to them later in your code.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Step 3: Start the app</source>
          <target state="new">Step 3: Start the app</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>At this point, you've created a very simple app.</source>
          <target state="new">At this point, you've created a very simple app.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>This is a good time to build, deploy, and launch your app and see what it looks like.</source>
          <target state="new">This is a good time to build, deploy, and launch your app and see what it looks like.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>You can debug your app on the local machine, in a simulator or emulator, or on a remote device.</source>
          <target state="new">You can debug your app on the local machine, in a simulator or emulator, or on a remote device.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Here's the target device menu in Visual Studio.</source>
          <target state="new">Here's the target device menu in Visual Studio.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Drop-down list of device targets for debugging your app</source>
          <target state="new">Drop-down list of device targets for debugging your app</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Start the app on a Desktop device</source>
          <target state="new">Start the app on a Desktop device</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>By default, the app runs on the local machine.</source>
          <target state="new">By default, the app runs on the local machine.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The target device menu provides several options for debugging your app on devices from the desktop device family.</source>
          <target state="new">The target device menu provides several options for debugging your app on devices from the desktop device family.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Simulator</source>
          <target state="new">Simulator</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Local Machine</source>
          <target state="new">Local Machine</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Remote Machine</source>
          <target state="new">Remote Machine</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>To start debugging on the local machine</source>
          <target state="new">To start debugging on the local machine</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>In the target device menu (<ph id="ph1">![</ph>Start debugging menu<ph id="ph2">](images/startdebug-full.png)</ph>) on the <bpt id="p1">**</bpt>Standard<ept id="p1">**</ept> toolbar, make sure that <bpt id="p2">**</bpt>Local Machine<ept id="p2">**</ept> is selected.</source>
          <target state="new">In the target device menu (<ph id="ph1">![</ph>Start debugging menu<ph id="ph2">](images/startdebug-full.png)</ph>) on the <bpt id="p1">**</bpt>Standard<ept id="p1">**</ept> toolbar, make sure that <bpt id="p2">**</bpt>Local Machine<ept id="p2">**</ept> is selected.</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>(It's the default selection.)</source>
          <target state="new">(It's the default selection.)</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>Start Debugging<ept id="p1">**</ept> button (<ph id="ph1">![</ph>Start debugging button<ph id="ph2">](images/startdebug-sm.png)</ph>) on the toolbar.</source>
          <target state="new">Click the <bpt id="p1">**</bpt>Start Debugging<ept id="p1">**</ept> button (<ph id="ph1">![</ph>Start debugging button<ph id="ph2">](images/startdebug-sm.png)</ph>) on the toolbar.</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>–or–</source>
          <target state="new">–or–</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>From the <bpt id="p1">**</bpt>Debug<ept id="p1">**</ept> menu, click <bpt id="p2">**</bpt>Start Debugging<ept id="p2">**</ept>.</source>
          <target state="new">From the <bpt id="p1">**</bpt>Debug<ept id="p1">**</ept> menu, click <bpt id="p2">**</bpt>Start Debugging<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>–or–</source>
          <target state="new">–or–</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Press F5.</source>
          <target state="new">Press F5.</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The app opens in a window, and a default splash screen appears first.</source>
          <target state="new">The app opens in a window, and a default splash screen appears first.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The splash screen is defined by an image (SplashScreen.png) and a background color (specified in your app's manifest file).</source>
          <target state="new">The splash screen is defined by an image (SplashScreen.png) and a background color (specified in your app's manifest file).</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The splash screen disappears, and then your app appears.</source>
          <target state="new">The splash screen disappears, and then your app appears.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>It looks like this.</source>
          <target state="new">It looks like this.</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Initial app screen</source>
          <target state="new">Initial app screen</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Press the Windows key to open the <bpt id="p1">**</bpt>Start<ept id="p1">**</ept> menu, then show all apps.</source>
          <target state="new">Press the Windows key to open the <bpt id="p1">**</bpt>Start<ept id="p1">**</ept> menu, then show all apps.</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Notice that deploying the app locally adds its tile to the <bpt id="p1">**</bpt>Start<ept id="p1">**</ept> menu.</source>
          <target state="new">Notice that deploying the app locally adds its tile to the <bpt id="p1">**</bpt>Start<ept id="p1">**</ept> menu.</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>To run the app again (not in debugging mode), tap or click its tile in the <bpt id="p1">**</bpt>Start<ept id="p1">**</ept> menu.</source>
          <target state="new">To run the app again (not in debugging mode), tap or click its tile in the <bpt id="p1">**</bpt>Start<ept id="p1">**</ept> menu.</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>It doesn't do much—yet—but congratulations, you've built your first UWP app!</source>
          <target state="new">It doesn't do much—yet—but congratulations, you've built your first UWP app!</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>To stop debugging</source>
          <target state="new">To stop debugging</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>Stop Debugging<ept id="p1">**</ept> button (<ph id="ph1">![</ph>Stop debugging button<ph id="ph2">](images/stopdebug.png)</ph>) in the toolbar.</source>
          <target state="new">Click the <bpt id="p1">**</bpt>Stop Debugging<ept id="p1">**</ept> button (<ph id="ph1">![</ph>Stop debugging button<ph id="ph2">](images/stopdebug.png)</ph>) in the toolbar.</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>–or–</source>
          <target state="new">–or–</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>From the <bpt id="p1">**</bpt>Debug<ept id="p1">**</ept> menu, click <bpt id="p2">**</bpt>Stop debugging<ept id="p2">**</ept>.</source>
          <target state="new">From the <bpt id="p1">**</bpt>Debug<ept id="p1">**</ept> menu, click <bpt id="p2">**</bpt>Stop debugging<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>–or–</source>
          <target state="new">–or–</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Close the app window.</source>
          <target state="new">Close the app window.</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Start the app on a mobile device emulator</source>
          <target state="new">Start the app on a mobile device emulator</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Your app runs on any Windows 10 device, so let’s see how it looks on a Windows Phone.</source>
          <target state="new">Your app runs on any Windows 10 device, so let’s see how it looks on a Windows Phone.</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>In addition to the options to debug on a desktop device, Visual Studio provides options for deploying and debugging your app on a physical mobile device connected to the computer, or on a mobile device emulator.</source>
          <target state="new">In addition to the options to debug on a desktop device, Visual Studio provides options for deploying and debugging your app on a physical mobile device connected to the computer, or on a mobile device emulator.</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>You can choose among emulators for devices with different memory and display configurations.</source>
          <target state="new">You can choose among emulators for devices with different memory and display configurations.</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Device</source>
          <target state="new">Device</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Emulator <ph id="ph1">&lt;SDK version&gt;</ph> WVGA 4 inch 512MB</source>
          <target state="new">Emulator <ph id="ph1">&lt;SDK version&gt;</ph> WVGA 4 inch 512MB</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Emulator <ph id="ph1">&lt;SDK version&gt;</ph> WVGA 4 inch 1GB</source>
          <target state="new">Emulator <ph id="ph1">&lt;SDK version&gt;</ph> WVGA 4 inch 1GB</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>etc... (Various emulators in other configurations)</source>
          <target state="new">etc... (Various emulators in other configurations)</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>It's a good idea to test your app on a device with a small screen and limited memory, so use the <bpt id="p1">**</bpt>Emulator 10.0.10240.0 WVGA 4 inch 512MB<ept id="p1">**</ept> option.</source>
          <target state="new">It's a good idea to test your app on a device with a small screen and limited memory, so use the <bpt id="p1">**</bpt>Emulator 10.0.10240.0 WVGA 4 inch 512MB<ept id="p1">**</ept> option.</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>To start debugging on a mobile device emulator</source>
          <target state="new">To start debugging on a mobile device emulator</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>In the target device menu (<ph id="ph1">![</ph>Start debugging menu<ph id="ph2">](images/startdebug-full.png)</ph>) on the <bpt id="p1">**</bpt>Standard<ept id="p1">**</ept> toolbar, pick <bpt id="p2">**</bpt>Emulator 10.0.10240.0 WVGA 4 inch 512MB<ept id="p2">**</ept>.</source>
          <target state="new">In the target device menu (<ph id="ph1">![</ph>Start debugging menu<ph id="ph2">](images/startdebug-full.png)</ph>) on the <bpt id="p1">**</bpt>Standard<ept id="p1">**</ept> toolbar, pick <bpt id="p2">**</bpt>Emulator 10.0.10240.0 WVGA 4 inch 512MB<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>Start Debugging<ept id="p1">**</ept> button (<ph id="ph1">![</ph>Start debugging button<ph id="ph2">](images/startdebug-sm.png)</ph>) in the toolbar.</source>
          <target state="new">Click the <bpt id="p1">**</bpt>Start Debugging<ept id="p1">**</ept> button (<ph id="ph1">![</ph>Start debugging button<ph id="ph2">](images/startdebug-sm.png)</ph>) in the toolbar.</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>–or–</source>
          <target state="new">–or–</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>From the <bpt id="p1">**</bpt>Debug<ept id="p1">**</ept> menu, click <bpt id="p2">**</bpt>Start Debugging<ept id="p2">**</ept>.</source>
          <target state="new">From the <bpt id="p1">**</bpt>Debug<ept id="p1">**</ept> menu, click <bpt id="p2">**</bpt>Start Debugging<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>–or–</source>
          <target state="new">–or–</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Press F5.</source>
          <target state="new">Press F5.</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Visual Studio starts the selected emulator and then deploys and starts your app.</source>
          <target state="new">Visual Studio starts the selected emulator and then deploys and starts your app.</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>On the mobile device emulator, the app looks like this.</source>
          <target state="new">On the mobile device emulator, the app looks like this.</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Initial app screen on mobile device</source>
          <target state="new">Initial app screen on mobile device</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The first thing you'll notice is the button is pushed off the smaller screen of a mobile device.</source>
          <target state="new">The first thing you'll notice is the button is pushed off the smaller screen of a mobile device.</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Later in this tutorial, you'll learn how to adapt the UI to different screen sizes so your app always looks good.</source>
          <target state="new">Later in this tutorial, you'll learn how to adapt the UI to different screen sizes so your app always looks good.</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>You might also notice that you can type in the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TextBox<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209683)</ept>, but right now, clicking or tapping the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Button<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR209265)</ept> doesn't do anything.</source>
          <target state="new">You might also notice that you can type in the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TextBox<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209683)</ept>, but right now, clicking or tapping the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Button<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR209265)</ept> doesn't do anything.</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>In the next steps, you create an event handler for the button's <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Click<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR227737)</ept> event to display a personalized greeting.</source>
          <target state="new">In the next steps, you create an event handler for the button's <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Click<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR227737)</ept> event to display a personalized greeting.</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>You add the event handler code to your MainPage.xaml.cs file.</source>
          <target state="new">You add the event handler code to your MainPage.xaml.cs file.</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Step 4: Create an event handler</source>
          <target state="new">Step 4: Create an event handler</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>XAML elements can send messages when certain events occur.</source>
          <target state="new">XAML elements can send messages when certain events occur.</target>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>These event messages give you the opportunity to take some action in response to the event.</source>
          <target state="new">These event messages give you the opportunity to take some action in response to the event.</target>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>You put your code to respond to the event in an event handler method.</source>
          <target state="new">You put your code to respond to the event in an event handler method.</target>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>One of the most common events in many apps is a user clicking a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Button<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209265)</ept>.</source>
          <target state="new">One of the most common events in many apps is a user clicking a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Button<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209265)</ept>.</target>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Let's create an event handler for your button's <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Click<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR227737)</ept> event.</source>
          <target state="new">Let's create an event handler for your button's <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Click<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR227737)</ept> event.</target>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The event handler will get the user's name from the <ph id="ph1">`nameInput`</ph> <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TextBox<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209683)</ept> control and use it to output a greeting to the <ph id="ph2">`greetingOutput`</ph> <bpt id="p3">[</bpt><bpt id="p4">**</bpt>TextBlock<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR209652)</ept>.</source>
          <target state="new">The event handler will get the user's name from the <ph id="ph1">`nameInput`</ph> <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TextBox<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209683)</ept> control and use it to output a greeting to the <ph id="ph2">`greetingOutput`</ph> <bpt id="p3">[</bpt><bpt id="p4">**</bpt>TextBlock<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR209652)</ept>.</target>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Using events that work for touch, mouse, and pen input</source>
          <target state="new">Using events that work for touch, mouse, and pen input</target>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>What events should you handle?</source>
          <target state="new">What events should you handle?</target>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Because they can run on a variety of devices, design your Windows Store apps with touch input in mind.</source>
          <target state="new">Because they can run on a variety of devices, design your Windows Store apps with touch input in mind.</target>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Your app must also be able to handle input from a mouse or a stylus.</source>
          <target state="new">Your app must also be able to handle input from a mouse or a stylus.</target>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Fortunately, events such as <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Click<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR227737)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>DoubleTapped<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR208922)</ept> are device-independent.</source>
          <target state="new">Fortunately, events such as <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Click<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR227737)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>DoubleTapped<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR208922)</ept> are device-independent.</target>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>If you're familiar with Microsoft .NET programming, you might have seen separate events for mouse, touch, and stylus input, like <bpt id="p1">**</bpt>MouseMove<ept id="p1">**</ept>, <bpt id="p2">**</bpt>TouchMove<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>StylusMove<ept id="p3">**</ept>.</source>
          <target state="new">If you're familiar with Microsoft .NET programming, you might have seen separate events for mouse, touch, and stylus input, like <bpt id="p1">**</bpt>MouseMove<ept id="p1">**</ept>, <bpt id="p2">**</bpt>TouchMove<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>StylusMove<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>In Windows Store apps, these separate events are replaced with a single <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PointerMoved<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR208970)</ept> event that works equally well for touch, mouse, and stylus input.</source>
          <target state="new">In Windows Store apps, these separate events are replaced with a single <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PointerMoved<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR208970)</ept> event that works equally well for touch, mouse, and stylus input.</target>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>To add an event handler</source>
          <target state="new">To add an event handler</target>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>In XAML or design view, select the "Say Hello" <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Button<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209265)</ept> that you added to MainPage.xaml.</source>
          <target state="new">In XAML or design view, select the "Say Hello" <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Button<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209265)</ept> that you added to MainPage.xaml.</target>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Properties Window<ept id="p1">**</ept>, click the Events button (<ph id="ph1">![</ph>Events button<ph id="ph2">](images/eventsbutton.png)</ph>).</source>
          <target state="new">In the <bpt id="p1">**</bpt>Properties Window<ept id="p1">**</ept>, click the Events button (<ph id="ph1">![</ph>Events button<ph id="ph2">](images/eventsbutton.png)</ph>).</target>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Find the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Click<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR227737)</ept> event at the top of the event list.</source>
          <target state="new">Find the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Click<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR227737)</ept> event at the top of the event list.</target>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>In the text box for the event, type the name of the function that handles the <bpt id="p1">**</bpt>Click<ept id="p1">**</ept> event.</source>
          <target state="new">In the text box for the event, type the name of the function that handles the <bpt id="p1">**</bpt>Click<ept id="p1">**</ept> event.</target>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>For this example, type "Button\_Click".</source>
          <target state="new">For this example, type "Button\_Click".</target>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Events list in the properties window</source>
          <target state="new">Events list in the properties window</target>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Press Enter.</source>
          <target state="new">Press Enter.</target>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The event handler method is created and opened in the code editor so you can add code to be executed when the event occurs.</source>
          <target state="new">The event handler method is created and opened in the code editor so you can add code to be executed when the event occurs.</target>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>In the XAML editor, the XAML for the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Button<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209265)</ept> is updated to declare the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Click<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR227737)</ept> event handler like this.</source>
          <target state="new">In the XAML editor, the XAML for the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Button<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209265)</ept> is updated to declare the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Click<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR227737)</ept> event handler like this.</target>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Add code to the event handler that you created in the code-behind page.</source>
          <target state="new">Add code to the event handler that you created in the code-behind page.</target>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>In the event handler, retrieve the user's name from the <ph id="ph1">`nameInput`</ph> <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TextBox<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209683)</ept> control and use it to create a greeting.</source>
          <target state="new">In the event handler, retrieve the user's name from the <ph id="ph1">`nameInput`</ph> <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TextBox<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209683)</ept> control and use it to create a greeting.</target>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">`greetingOutput`</ph> <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TextBlock<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209652)</ept> to display the result.</source>
          <target state="new">Use the <ph id="ph1">`greetingOutput`</ph> <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TextBlock<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209652)</ept> to display the result.</target>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Debug the app on the local machine.</source>
          <target state="new">Debug the app on the local machine.</target>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>When you enter your name in the text box and click the button, the app displays a personalized greeting.</source>
          <target state="new">When you enter your name in the text box and click the button, the app displays a personalized greeting.</target>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Step 5: Adapt the UI to different window sizes</source>
          <target state="new">Step 5: Adapt the UI to different window sizes</target>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Now we'll make the UI adapt to different screen sizes so it looks good on mobile devices.</source>
          <target state="new">Now we'll make the UI adapt to different screen sizes so it looks good on mobile devices.</target>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>To do this, you add a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>VisualStateManager<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209021)</ept> and set properties that are applied for different visual states.</source>
          <target state="new">To do this, you add a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>VisualStateManager<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209021)</ept> and set properties that are applied for different visual states.</target>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>To adjust the UI layout</source>
          <target state="new">To adjust the UI layout</target>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>In the XAML editor, add this block of XAML after the opening tag of the root <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Grid<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR242704)</ept> element.</source>
          <target state="new">In the XAML editor, add this block of XAML after the opening tag of the root <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Grid<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR242704)</ept> element.</target>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Debug the app on the local machine.</source>
          <target state="new">Debug the app on the local machine.</target>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Notice that the UI looks the same as before unless the window gets narrower than 641 pixels.</source>
          <target state="new">Notice that the UI looks the same as before unless the window gets narrower than 641 pixels.</target>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Debug the app on the mobile device emulator.</source>
          <target state="new">Debug the app on the mobile device emulator.</target>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Notice that the UI uses the properties you defined in the <ph id="ph1">`narrowState`</ph> and appears correctly on the small screen.</source>
          <target state="new">Notice that the UI uses the properties you defined in the <ph id="ph1">`narrowState`</ph> and appears correctly on the small screen.</target>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Mobile app screen</source>
          <target state="new">Mobile app screen</target>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>If you've used a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>VisualStateManager<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209021)</ept> in previous versions of XAML, you might notice that the XAML here uses a simplified syntax.</source>
          <target state="new">If you've used a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>VisualStateManager<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209021)</ept> in previous versions of XAML, you might notice that the XAML here uses a simplified syntax.</target>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>VisualState<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209007)</ept> named <ph id="ph1">`wideState`</ph> has an <bpt id="p3">[</bpt><bpt id="p4">**</bpt>AdaptiveTrigger<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/Dn890382)</ept> with its <bpt id="p5">[</bpt><bpt id="p6">**</bpt>MinWindowWidth<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.adaptivetrigger.minwindowwidth)</ept> property set to 641.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>VisualState<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209007)</ept> named <ph id="ph1">`wideState`</ph> has an <bpt id="p3">[</bpt><bpt id="p4">**</bpt>AdaptiveTrigger<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/Dn890382)</ept> with its <bpt id="p5">[</bpt><bpt id="p6">**</bpt>MinWindowWidth<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.adaptivetrigger.minwindowwidth)</ept> property set to 641.</target>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>This means that the state is to be applied only when the window width is not less than the minimum of 641 pixels.</source>
          <target state="new">This means that the state is to be applied only when the window width is not less than the minimum of 641 pixels.</target>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>You don't define any <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Setter<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR208817)</ept> objects for this state, so it uses the layout properties you defined in the XAML for the page content.</source>
          <target state="new">You don't define any <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Setter<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR208817)</ept> objects for this state, so it uses the layout properties you defined in the XAML for the page content.</target>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>The second <bpt id="p1">[</bpt><bpt id="p2">**</bpt>VisualState<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209007)</ept>, <ph id="ph1">`narrowState`</ph>, has an <bpt id="p3">[</bpt><bpt id="p4">**</bpt>AdaptiveTrigger<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/Dn890382)</ept> with its <bpt id="p5">[</bpt><bpt id="p6">**</bpt>MinWindowWidth<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.adaptivetrigger.minwindowwidth)</ept> property set to 0.</source>
          <target state="new">The second <bpt id="p1">[</bpt><bpt id="p2">**</bpt>VisualState<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209007)</ept>, <ph id="ph1">`narrowState`</ph>, has an <bpt id="p3">[</bpt><bpt id="p4">**</bpt>AdaptiveTrigger<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/Dn890382)</ept> with its <bpt id="p5">[</bpt><bpt id="p6">**</bpt>MinWindowWidth<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.adaptivetrigger.minwindowwidth)</ept> property set to 0.</target>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>This state is applied when the window width is greater than 0, but less than 641 pixels.</source>
          <target state="new">This state is applied when the window width is greater than 0, but less than 641 pixels.</target>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>(At 641 pixels, the <ph id="ph1">`wideState`</ph> is applied.) In this state, you do define some <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Setter<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR208817)</ept> objects to change the layout properties of controls in the UI:</source>
          <target state="new">(At 641 pixels, the <ph id="ph1">`wideState`</ph> is applied.) In this state, you do define some <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Setter<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR208817)</ept> objects to change the layout properties of controls in the UI:</target>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>You change the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Orientation<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.stackpanel.orientation)</ept> of the <ph id="ph1">`inputPanel`</ph> element from <bpt id="p3">**</bpt>Horizontal<ept id="p3">**</ept> to <bpt id="p4">**</bpt>Vertical<ept id="p4">**</ept>.</source>
          <target state="new">You change the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Orientation<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.stackpanel.orientation)</ept> of the <ph id="ph1">`inputPanel`</ph> element from <bpt id="p3">**</bpt>Horizontal<ept id="p3">**</ept> to <bpt id="p4">**</bpt>Vertical<ept id="p4">**</ept>.</target>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>You add a top margin of 4 to the <ph id="ph1">`inputButton`</ph> element.</source>
          <target state="new">You add a top margin of 4 to the <ph id="ph1">`inputButton`</ph> element.</target>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Summary</source>
          <target state="new">Summary</target>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Congratulations, you've created your first app for Windows 10 and the UWP!</source>
          <target state="new">Congratulations, you've created your first app for Windows 10 and the UWP!</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>