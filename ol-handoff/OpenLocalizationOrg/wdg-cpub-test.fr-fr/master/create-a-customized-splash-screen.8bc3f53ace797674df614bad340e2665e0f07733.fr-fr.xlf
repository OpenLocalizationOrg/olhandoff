<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-48076a9" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">915d388ee2a9810acfba98ca7791b625fa472c3d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci2\launch-resume\create-a-customized-splash-screen.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Display a splash screen for more time</source>
          <target state="new">Display a splash screen for more time</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Display a splash screen for more time by creating an extended splash screen for your app.</source>
          <target state="new">Display a splash screen for more time by creating an extended splash screen for your app.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This extended screen imitates the splash screen shown when your app is launched, but can be customized.</source>
          <target state="new">This extended screen imitates the splash screen shown when your app is launched, but can be customized.</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Display a splash screen for more time</source>
          <target state="new">Display a splash screen for more time</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>\[ Updated for UWP apps on Windows 10.</source>
          <target state="new">\[ Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Important APIs</source>
          <target state="new">Important APIs</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>SplashScreen class</source>
          <target state="new">SplashScreen class</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Window.SizeChanged event</source>
          <target state="new">Window.SizeChanged event</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Application.OnLaunched method</source>
          <target state="new">Application.OnLaunched method</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Display a splash screen for more time by creating an extended splash screen for your app.</source>
          <target state="new">Display a splash screen for more time by creating an extended splash screen for your app.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This extended screen imitates the splash screen shown when your app is launched, but can be customized.</source>
          <target state="new">This extended screen imitates the splash screen shown when your app is launched, but can be customized.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Whether you want to show real-time loading information or simply give your app extra time to prepare its initial UI, an extended splash screen lets you define the launch experience.</source>
          <target state="new">Whether you want to show real-time loading information or simply give your app extra time to prepare its initial UI, an extended splash screen lets you define the launch experience.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  The phrase "extended splash screen" in this topic refers to a splash screen that stays on the screen for an extended period of time.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  The phrase "extended splash screen" in this topic refers to a splash screen that stays on the screen for an extended period of time.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>It does not mean a subclass that derives from the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SplashScreen<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br224763)</ept> class.</source>
          <target state="new">It does not mean a subclass that derives from the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SplashScreen<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br224763)</ept> class.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Make sure your extended splash screen accurately imitates the default splash screen by following these recommendations:</source>
          <target state="new">Make sure your extended splash screen accurately imitates the default splash screen by following these recommendations:</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Your extended splash screen page should use a 620 x 300 pixel image that is consistent with the image specified for your splash screen in your app manifest (your app's splash screen image).</source>
          <target state="new">Your extended splash screen page should use a 620 x 300 pixel image that is consistent with the image specified for your splash screen in your app manifest (your app's splash screen image).</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>In Microsoft Visual Studio 2015, splash screen settings are stored in the <bpt id="p1">**</bpt>Splash Screen<ept id="p1">**</ept> section of the <bpt id="p2">**</bpt>Visual Assets<ept id="p2">**</ept> tab in your app manifest (Package.appxmanifest file).</source>
          <target state="new">In Microsoft Visual Studio 2015, splash screen settings are stored in the <bpt id="p1">**</bpt>Splash Screen<ept id="p1">**</ept> section of the <bpt id="p2">**</bpt>Visual Assets<ept id="p2">**</ept> tab in your app manifest (Package.appxmanifest file).</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Your extended splash screen should use a background color that is consistent with the background color specified for your splash screen in your app manifest (your app's splash screen background).</source>
          <target state="new">Your extended splash screen should use a background color that is consistent with the background color specified for your splash screen in your app manifest (your app's splash screen background).</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Your code should use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SplashScreen<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br224763)</ept> class to position your app's splash screen image at the same screen coordinates as the default splash screen.</source>
          <target state="new">Your code should use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SplashScreen<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br224763)</ept> class to position your app's splash screen image at the same screen coordinates as the default splash screen.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Your code should respond to window resize events (such as when the screen is rotated or your app is moved next to another app onscreen) by using the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SplashScreen<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br224763)</ept> class to reposition items on your extended splash screen.</source>
          <target state="new">Your code should respond to window resize events (such as when the screen is rotated or your app is moved next to another app onscreen) by using the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SplashScreen<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br224763)</ept> class to reposition items on your extended splash screen.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Use the following steps to create an extended splash screen that effectively imitates the default splash screen.</source>
          <target state="new">Use the following steps to create an extended splash screen that effectively imitates the default splash screen.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Add a <bpt id="p1">**</bpt>Blank Page<ept id="p1">**</ept> item to your existing app</source>
          <target state="new">Add a <bpt id="p1">**</bpt>Blank Page<ept id="p1">**</ept> item to your existing app</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This topic assumes you want to add an extended splash screen to an existing Universal Windows Platform (UWP) app project using C#, Visual Basic, or C++.</source>
          <target state="new">This topic assumes you want to add an extended splash screen to an existing Universal Windows Platform (UWP) app project using C#, Visual Basic, or C++.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Open your app in Visual Studio 2015.</source>
          <target state="new">Open your app in Visual Studio 2015.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Press or open <bpt id="p1">**</bpt>Project<ept id="p1">**</ept> from the menu bar and click <bpt id="p2">**</bpt>Add New Item<ept id="p2">**</ept>.</source>
          <target state="new">Press or open <bpt id="p1">**</bpt>Project<ept id="p1">**</ept> from the menu bar and click <bpt id="p2">**</bpt>Add New Item<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">**</bpt>Add New Item<ept id="p1">**</ept> dialog box will appear.</source>
          <target state="new">An <bpt id="p1">**</bpt>Add New Item<ept id="p1">**</ept> dialog box will appear.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>From this dialog box, add a new <bpt id="p1">**</bpt>Blank Page<ept id="p1">**</ept> to your app.</source>
          <target state="new">From this dialog box, add a new <bpt id="p1">**</bpt>Blank Page<ept id="p1">**</ept> to your app.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This topic names the extended splash screen page "ExtendedSplash".</source>
          <target state="new">This topic names the extended splash screen page "ExtendedSplash".</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Adding a <bpt id="p1">**</bpt>Blank Page<ept id="p1">**</ept> item generates two files, one for markup (ExtendedSplash.xaml) and another for code (ExtendedSplash.xaml.cs).</source>
          <target state="new">Adding a <bpt id="p1">**</bpt>Blank Page<ept id="p1">**</ept> item generates two files, one for markup (ExtendedSplash.xaml) and another for code (ExtendedSplash.xaml.cs).</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Essential XAML for an extended splash screen</source>
          <target state="new">Essential XAML for an extended splash screen</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Follow these steps to add an image and progress control to your extended splash screen.</source>
          <target state="new">Follow these steps to add an image and progress control to your extended splash screen.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>In your ExtendedSplash.xaml file:</source>
          <target state="new">In your ExtendedSplash.xaml file:</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Change the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Background<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br209396)</ept> property of the default <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Grid<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br242704)</ept> element to match the background color you set for your app's splash screen in your app manifest (in the <bpt id="p5">**</bpt>Visual Assets<ept id="p5">**</ept> section of your Package.appxmanifest file).</source>
          <target state="new">Change the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Background<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br209396)</ept> property of the default <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Grid<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br242704)</ept> element to match the background color you set for your app's splash screen in your app manifest (in the <bpt id="p5">**</bpt>Visual Assets<ept id="p5">**</ept> section of your Package.appxmanifest file).</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The default splash screen color is a light gray (hex value \#464646).</source>
          <target state="new">The default splash screen color is a light gray (hex value \#464646).</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Note that this <bpt id="p1">**</bpt>Grid<ept id="p1">**</ept> element is provided by default when you create a new <bpt id="p2">**</bpt>Blank Page<ept id="p2">**</ept>.</source>
          <target state="new">Note that this <bpt id="p1">**</bpt>Grid<ept id="p1">**</ept> element is provided by default when you create a new <bpt id="p2">**</bpt>Blank Page<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>You don't have to use a <bpt id="p1">**</bpt>Grid<ept id="p1">**</ept>; it's just a convenient base for building an extended splash screen.</source>
          <target state="new">You don't have to use a <bpt id="p1">**</bpt>Grid<ept id="p1">**</ept>; it's just a convenient base for building an extended splash screen.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Add a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Canvas<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br209267)</ept> element to the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Grid<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br242704)</ept>.</source>
          <target state="new">Add a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Canvas<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br209267)</ept> element to the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Grid<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br242704)</ept>.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>You'll use this <bpt id="p1">**</bpt>Canvas<ept id="p1">**</ept> to position your extended splash screen image.</source>
          <target state="new">You'll use this <bpt id="p1">**</bpt>Canvas<ept id="p1">**</ept> to position your extended splash screen image.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Add an <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Image<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242752)</ept> element to the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Canvas<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br209267)</ept>.</source>
          <target state="new">Add an <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Image<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242752)</ept> element to the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Canvas<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br209267)</ept>.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Use the same 600 x 320 pixel image for your extended splash screen that you chose for the default splash screen.</source>
          <target state="new">Use the same 600 x 320 pixel image for your extended splash screen that you chose for the default splash screen.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>(Optional) Add a progress control to show users that your app is loading.</source>
          <target state="new">(Optional) Add a progress control to show users that your app is loading.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This topic adds a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ProgressRing<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br227538)</ept>, instead of a determinate or indeterminate <bpt id="p3">[</bpt><bpt id="p4">**</bpt>ProgressBar<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br227529)</ept>.</source>
          <target state="new">This topic adds a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ProgressRing<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br227538)</ept>, instead of a determinate or indeterminate <bpt id="p3">[</bpt><bpt id="p4">**</bpt>ProgressBar<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br227529)</ept>.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Add the following code to define <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Canvas<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br209267)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Image<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br242752)</ept> elements, as well as a <bpt id="p5">[</bpt><bpt id="p6">**</bpt>ProgressRing<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/br227538)</ept> control, in ExtendedSplash.xaml:</source>
          <target state="new">Add the following code to define <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Canvas<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br209267)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Image<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br242752)</ept> elements, as well as a <bpt id="p5">[</bpt><bpt id="p6">**</bpt>ProgressRing<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/br227538)</ept> control, in ExtendedSplash.xaml:</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  This code sets the width of the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>ProgressRing<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br227538)</ept> to 20 pixels.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  This code sets the width of the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>ProgressRing<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br227538)</ept> to 20 pixels.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>You can manually set its width to a value that works for your app, however, the control will not render at widths of less than 20 pixels.</source>
          <target state="new">You can manually set its width to a value that works for your app, however, the control will not render at widths of less than 20 pixels.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Essential code for an extended splash screen class</source>
          <target state="new">Essential code for an extended splash screen class</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Your extended splash screen needs to respond whenever the window size (Windows only) or orientation changes.</source>
          <target state="new">Your extended splash screen needs to respond whenever the window size (Windows only) or orientation changes.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The position of the image you use must be updated so that your extended splash screen looks good no matter how the window changes.</source>
          <target state="new">The position of the image you use must be updated so that your extended splash screen looks good no matter how the window changes.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Use these steps to define methods to correctly display your extended splash screen.</source>
          <target state="new">Use these steps to define methods to correctly display your extended splash screen.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Add required namespaces</source>
          <target state="new">Add required namespaces</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>You'll need to add the following namespaces to ExtendedSplash.xaml.cs to access the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SplashScreen<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br224763)</ept> class, <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Window.SizeChanged<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br209055)</ept> events.</source>
          <target state="new">You'll need to add the following namespaces to ExtendedSplash.xaml.cs to access the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SplashScreen<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br224763)</ept> class, <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Window.SizeChanged<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br209055)</ept> events.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Create a partial class and declare class variables</source>
          <target state="new">Create a partial class and declare class variables</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Include the following code in ExtendedSplash.xaml.cs to create a partial class to represent an extended splash screen.</source>
          <target state="new">Include the following code in ExtendedSplash.xaml.cs to create a partial class to represent an extended splash screen.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>These class variables are used by several methods.</source>
          <target state="new">These class variables are used by several methods.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`splashImageRect`</ph> variable stores the coordinates where the system displayed the splash screen image for the app.</source>
          <target state="new">The <ph id="ph1">`splashImageRect`</ph> variable stores the coordinates where the system displayed the splash screen image for the app.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`splash`</ph> variable stores a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SplashScreen<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br224763)</ept> object, and the <ph id="ph2">`dismissed`</ph> variable tracks whether or not the splash screen that is displayed by the system has been dismissed.</source>
          <target state="new">The <ph id="ph1">`splash`</ph> variable stores a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SplashScreen<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br224763)</ept> object, and the <ph id="ph2">`dismissed`</ph> variable tracks whether or not the splash screen that is displayed by the system has been dismissed.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Define a constructor for your class that correctly positions the image</source>
          <target state="new">Define a constructor for your class that correctly positions the image</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The following code defines a constructor for the extended splash screen class that listens for window resizing events, positions the image and (optional) progress control on the extended splash screen, creates a frame for navigation, and calls an asynchronous method to restore a saved session state.</source>
          <target state="new">The following code defines a constructor for the extended splash screen class that listens for window resizing events, positions the image and (optional) progress control on the extended splash screen, creates a frame for navigation, and calls an asynchronous method to restore a saved session state.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Make sure to register your <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Window.SizeChanged<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br209055)</ept> handler (<ph id="ph1">`ExtendedSplash_OnResize`</ph> in the example) in your class constructor so that your app positions the image correctly in your extended splash screen.</source>
          <target state="new">Make sure to register your <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Window.SizeChanged<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br209055)</ept> handler (<ph id="ph1">`ExtendedSplash_OnResize`</ph> in the example) in your class constructor so that your app positions the image correctly in your extended splash screen.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Define a class method to position the image in your extended splash screen</source>
          <target state="new">Define a class method to position the image in your extended splash screen</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>This code demonstrates how to position the image on the extended splash screen page with the <ph id="ph1">`splashImageRect`</ph> class variable.</source>
          <target state="new">This code demonstrates how to position the image on the extended splash screen page with the <ph id="ph1">`splashImageRect`</ph> class variable.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>(Optional) Define a class method to position a progress control in your extended splash screen</source>
          <target state="new">(Optional) Define a class method to position a progress control in your extended splash screen</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>If you chose to add a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ProgressRing<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br227538)</ept> to your extended splash screen, position it relative to the splash screen image.</source>
          <target state="new">If you chose to add a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ProgressRing<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br227538)</ept> to your extended splash screen, position it relative to the splash screen image.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Add the following code to ExtendedSplash.xaml.cs to center the <bpt id="p1">**</bpt>ProgressRing<ept id="p1">**</ept> 32 pixels below the image.</source>
          <target state="new">Add the following code to ExtendedSplash.xaml.cs to center the <bpt id="p1">**</bpt>ProgressRing<ept id="p1">**</ept> 32 pixels below the image.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Inside the class, define a handler for the Dismissed event</source>
          <target state="new">Inside the class, define a handler for the Dismissed event</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>In ExtendedSplash.xaml.cs, respond when the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SplashScreen.Dismissed<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br224764)</ept> event occurs by setting the <ph id="ph1">`dismissed`</ph> class variable to true.</source>
          <target state="new">In ExtendedSplash.xaml.cs, respond when the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SplashScreen.Dismissed<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br224764)</ept> event occurs by setting the <ph id="ph1">`dismissed`</ph> class variable to true.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>If your app has setup operations, add them to this event handler.</source>
          <target state="new">If your app has setup operations, add them to this event handler.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>After app setup is complete, navigate away from your extended splash screen.</source>
          <target state="new">After app setup is complete, navigate away from your extended splash screen.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The following code defines a method called <ph id="ph1">`DismissExtendedSplash`</ph> that navigates to the <ph id="ph2">`MainPage`</ph> defined in your app's MainPage.xaml file.</source>
          <target state="new">The following code defines a method called <ph id="ph1">`DismissExtendedSplash`</ph> that navigates to the <ph id="ph2">`MainPage`</ph> defined in your app's MainPage.xaml file.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Inside the class, define a handler for Window.SizeChanged events</source>
          <target state="new">Inside the class, define a handler for Window.SizeChanged events</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Prepare your extended splash screen to reposition its elements if a user resizes the window.</source>
          <target state="new">Prepare your extended splash screen to reposition its elements if a user resizes the window.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>This code responds when a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Window.SizeChanged<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br209055)</ept> event occurs by capturing the new coordinates and repositioning the image.</source>
          <target state="new">This code responds when a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Window.SizeChanged<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br209055)</ept> event occurs by capturing the new coordinates and repositioning the image.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>If you added a progress control to your extended splash screen, reposition it inside this event handler as well.</source>
          <target state="new">If you added a progress control to your extended splash screen, reposition it inside this event handler as well.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  Before you try to get the image location make sure the class variable (<ph id="ph1">`splash`</ph>) contains a valid <bpt id="p2">[</bpt><bpt id="p3">**</bpt>SplashScreen<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br224763)</ept> object, as shown in the example.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  Before you try to get the image location make sure the class variable (<ph id="ph1">`splash`</ph>) contains a valid <bpt id="p2">[</bpt><bpt id="p3">**</bpt>SplashScreen<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br224763)</ept> object, as shown in the example.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>(Optional) Add a class method to restore a saved session state</source>
          <target state="new">(Optional) Add a class method to restore a saved session state</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The code you added to the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>OnLaunched<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242335)</ept> method in Step 4: <bpt id="p3">[</bpt>Modify the launch activation handler<ept id="p3">](#modify-the-launch-activation-handler)</ept> causes your app to display an extended splash screen when it launches.</source>
          <target state="new">The code you added to the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>OnLaunched<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242335)</ept> method in Step 4: <bpt id="p3">[</bpt>Modify the launch activation handler<ept id="p3">](#modify-the-launch-activation-handler)</ept> causes your app to display an extended splash screen when it launches.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>To consolidate all methods related to app launch in your extended splash screen class, you could consider adding an asynchronous method to your ExtendedSplash.xaml.cs file to restore the app's state.</source>
          <target state="new">To consolidate all methods related to app launch in your extended splash screen class, you could consider adding an asynchronous method to your ExtendedSplash.xaml.cs file to restore the app's state.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>When you modify the launch activation handler in App.xaml.cs, you'll also set <ph id="ph1">`loadstate`</ph> to true if the previous <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ApplicationExecutionState<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br224694)</ept> of your app was <bpt id="p3">**</bpt>Terminated<ept id="p3">**</ept>.</source>
          <target state="new">When you modify the launch activation handler in App.xaml.cs, you'll also set <ph id="ph1">`loadstate`</ph> to true if the previous <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ApplicationExecutionState<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br224694)</ept> of your app was <bpt id="p3">**</bpt>Terminated<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>If so, the <ph id="ph1">`RestoreStateAsync`</ph> method restores the app to its previous state.</source>
          <target state="new">If so, the <ph id="ph1">`RestoreStateAsync`</ph> method restores the app to its previous state.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>For an overview of app launch, suspension, and termination, see <bpt id="p1">[</bpt>App lifecycle<ept id="p1">](app-lifecycle.md)</ept>.</source>
          <target state="new">For an overview of app launch, suspension, and termination, see <bpt id="p1">[</bpt>App lifecycle<ept id="p1">](app-lifecycle.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Modify the launch activation handler</source>
          <target state="new">Modify the launch activation handler</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>When your app is launched, the system passes splash screen information to the app's launch activation event handler.</source>
          <target state="new">When your app is launched, the system passes splash screen information to the app's launch activation event handler.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>You can use this information to correctly position the image on your extended splash screen page.</source>
          <target state="new">You can use this information to correctly position the image on your extended splash screen page.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>You can get this splash screen information from the activation event arguments that are passed to your app's <bpt id="p1">[</bpt><bpt id="p2">**</bpt>OnLaunched<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242335)</ept> handler (see the <ph id="ph1">`args`</ph> variable in the following code).</source>
          <target state="new">You can get this splash screen information from the activation event arguments that are passed to your app's <bpt id="p1">[</bpt><bpt id="p2">**</bpt>OnLaunched<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242335)</ept> handler (see the <ph id="ph1">`args`</ph> variable in the following code).</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>If you have not already overridden the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>OnLaunched<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242335)</ept> handler for your app, see <bpt id="p3">[</bpt>App lifecycle<ept id="p3">](app-lifecycle.md)</ept> to learn how to handle activation events.</source>
          <target state="new">If you have not already overridden the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>OnLaunched<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242335)</ept> handler for your app, see <bpt id="p3">[</bpt>App lifecycle<ept id="p3">](app-lifecycle.md)</ept> to learn how to handle activation events.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>In App.xaml.cs, add the following code to create and display an extended splash screen.</source>
          <target state="new">In App.xaml.cs, add the following code to create and display an extended splash screen.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Complete code</source>
          <target state="new">Complete code</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  The following code slightly differs from the snippets shown in the previous steps.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  The following code slightly differs from the snippets shown in the previous steps.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>ExtendedSplash.xaml includes a <ph id="ph1">`DismissSplash`</ph> button.</source>
          <target state="new">ExtendedSplash.xaml includes a <ph id="ph1">`DismissSplash`</ph> button.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>When this button is clicked, an event handler, <ph id="ph1">`DismissSplashButton_Click`</ph>, calls the <ph id="ph2">`DismissExtendedSplash`</ph> method.</source>
          <target state="new">When this button is clicked, an event handler, <ph id="ph1">`DismissSplashButton_Click`</ph>, calls the <ph id="ph2">`DismissExtendedSplash`</ph> method.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>In your app, call <ph id="ph1">`DismissExtendedSplash`</ph> when your app is done loading resources or initializing its UI.</source>
          <target state="new">In your app, call <ph id="ph1">`DismissExtendedSplash`</ph> when your app is done loading resources or initializing its UI.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>This app also uses a UWP app project template, which uses <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Frame<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242682)</ept> navigation.</source>
          <target state="new">This app also uses a UWP app project template, which uses <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Frame<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242682)</ept> navigation.</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>As a result, in App.xaml.cs, the launch activation handler (<bpt id="p1">[</bpt><bpt id="p2">**</bpt>OnLaunched<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242335)</ept>) defines a <ph id="ph1">`rootFrame`</ph> and uses it to set the content of the app window.</source>
          <target state="new">As a result, in App.xaml.cs, the launch activation handler (<bpt id="p1">[</bpt><bpt id="p2">**</bpt>OnLaunched<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242335)</ept>) defines a <ph id="ph1">`rootFrame`</ph> and uses it to set the content of the app window.</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>ExtendedSplash.xaml: This example includes a <ph id="ph1">`DismissSplash`</ph> button because it doesn't have app resources to load.</source>
          <target state="new">ExtendedSplash.xaml: This example includes a <ph id="ph1">`DismissSplash`</ph> button because it doesn't have app resources to load.</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>In your app, dismiss the extended splash screen automatically when your app is done loading resources or preparing its initial UI.</source>
          <target state="new">In your app, dismiss the extended splash screen automatically when your app is done loading resources or preparing its initial UI.</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>ExtendedSplash.xaml.cs: Note that the <ph id="ph1">`DismissExtendedSplash`</ph> method is called from the click event handler for the <ph id="ph2">`DismissSplash`</ph> button.</source>
          <target state="new">ExtendedSplash.xaml.cs: Note that the <ph id="ph1">`DismissExtendedSplash`</ph> method is called from the click event handler for the <ph id="ph2">`DismissSplash`</ph> button.</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>In your app, you won't need a <ph id="ph1">`DismissSplash`</ph> button.</source>
          <target state="new">In your app, you won't need a <ph id="ph1">`DismissSplash`</ph> button.</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Instead, call <ph id="ph1">`DismissExtendedSplash`</ph> when your app is done loading resources and you want to navigate to its main page.</source>
          <target state="new">Instead, call <ph id="ph1">`DismissExtendedSplash`</ph> when your app is done loading resources and you want to navigate to its main page.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>App.xaml.cs: This project was created using the UWP app <bpt id="p1">**</bpt>Blank App (XAML)<ept id="p1">**</ept> project template in Visual Studio 2015.</source>
          <target state="new">App.xaml.cs: This project was created using the UWP app <bpt id="p1">**</bpt>Blank App (XAML)<ept id="p1">**</ept> project template in Visual Studio 2015.</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Both the <ph id="ph1">`OnNavigationFailed`</ph> and <ph id="ph2">`OnSuspending`</ph> event handlers are automatically generated and don't need to be changed to implement an extended splash screen.</source>
          <target state="new">Both the <ph id="ph1">`OnNavigationFailed`</ph> and <ph id="ph2">`OnSuspending`</ph> event handlers are automatically generated and don't need to be changed to implement an extended splash screen.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>This topic only modifies <ph id="ph1">`OnLaunched`</ph>.</source>
          <target state="new">This topic only modifies <ph id="ph1">`OnLaunched`</ph>.</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>If you didn't use a project template for your app, see Step 4: <bpt id="p1">[</bpt>Modify the launch activation handler<ept id="p1">](#modify_the_launch_activation_handler)</ept> for an example of a modified <ph id="ph1">`OnLaunched`</ph> that doesn't use <bpt id="p2">[</bpt><bpt id="p3">**</bpt>Frame<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br242682)</ept> navigation.</source>
          <target state="new">If you didn't use a project template for your app, see Step 4: <bpt id="p1">[</bpt>Modify the launch activation handler<ept id="p1">](#modify_the_launch_activation_handler)</ept> for an example of a modified <ph id="ph1">`OnLaunched`</ph> that doesn't use <bpt id="p2">[</bpt><bpt id="p3">**</bpt>Frame<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br242682)</ept> navigation.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Related topics</source>
          <target state="new">Related topics</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>App lifecycle</source>
          <target state="new">App lifecycle</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Reference</source>
          <target state="new">Reference</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Windows.ApplicationModel.Activation namespace</source>
          <target state="new">Windows.ApplicationModel.Activation namespace</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Windows.ApplicationModel.Activation.SplashScreen class</source>
          <target state="new">Windows.ApplicationModel.Activation.SplashScreen class</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Windows.ApplicationModel.Activation.SplashScreen.ImageLocation property</source>
          <target state="new">Windows.ApplicationModel.Activation.SplashScreen.ImageLocation property</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Windows.ApplicationModel.Core.CoreApplicationView.Activated event</source>
          <target state="new">Windows.ApplicationModel.Core.CoreApplicationView.Activated event</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>