<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-48076a9" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2b16e149a84dc1273676164a9e353cb68d99ff56</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci\files\file-access-permissions.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>File access permissions</source>
          <target state="new">File access permissions</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>\[ Updated for UWP apps on Windows 10.</source>
          <target state="new">\[ Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Apps can access certain file system locations by default.</source>
          <target state="new">Apps can access certain file system locations by default.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Apps can also access additional locations through the file picker, or by declaring capabilities.</source>
          <target state="new">Apps can also access additional locations through the file picker, or by declaring capabilities.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The locations that all apps can access</source>
          <target state="new">The locations that all apps can access</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>When you create a new app, you can access the following file system locations by default:</source>
          <target state="new">When you create a new app, you can access the following file system locations by default:</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Application install directory<ept id="p1">**</ept>.</source>
          <target state="new"><bpt id="p1">**</bpt>Application install directory<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The folder where your app is installed on the user’s system.</source>
          <target state="new">The folder where your app is installed on the user’s system.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>There are two primary ways to access files and folders in your app’s install directory:</source>
          <target state="new">There are two primary ways to access files and folders in your app’s install directory:</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You can retrieve a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StorageFolder<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br227230)</ept> that represents your app's install directory, like this:</source>
          <target state="new">You can retrieve a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StorageFolder<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br227230)</ept> that represents your app's install directory, like this:</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You can then access files and folders in the directory using <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StorageFolder<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br227230)</ept> methods.</source>
          <target state="new">You can then access files and folders in the directory using <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StorageFolder<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br227230)</ept> methods.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>In the example, this <bpt id="p1">**</bpt>StorageFolder<ept id="p1">**</ept> is stored in the <ph id="ph1">`installDirectory`</ph> variable.</source>
          <target state="new">In the example, this <bpt id="p1">**</bpt>StorageFolder<ept id="p1">**</ept> is stored in the <ph id="ph1">`installDirectory`</ph> variable.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can learn more about working with your app package and install directory by downloading the <bpt id="p1">[</bpt>App package information sample<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=231526)</ept> for Windows 8.1 and re-using its source code in your Windows 10 app.</source>
          <target state="new">You can learn more about working with your app package and install directory by downloading the <bpt id="p1">[</bpt>App package information sample<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=231526)</ept> for Windows 8.1 and re-using its source code in your Windows 10 app.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>You can retrieve a file directly from your app's install directory by using an app URI, like this:</source>
          <target state="new">You can retrieve a file directly from your app's install directory by using an app URI, like this:</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>When <bpt id="p1">[</bpt><bpt id="p2">**</bpt>GetFileFromApplicationUriAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh701741)</ept> completes, it returns a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>StorageFile<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br227171)</ept> that represents the <bpt id="p5">*</bpt>file.txt<ept id="p5">*</ept> file in the app's install directory (<ph id="ph1">`file`</ph> in the example).</source>
          <target state="new">When <bpt id="p1">[</bpt><bpt id="p2">**</bpt>GetFileFromApplicationUriAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh701741)</ept> completes, it returns a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>StorageFile<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br227171)</ept> that represents the <bpt id="p5">*</bpt>file.txt<ept id="p5">*</ept> file in the app's install directory (<ph id="ph1">`file`</ph> in the example).</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The "ms-appx:///" prefix in the URI refers to the app's install directory.</source>
          <target state="new">The "ms-appx:///" prefix in the URI refers to the app's install directory.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You can learn more about using app URIs in <bpt id="p1">[</bpt>How to use URIs to reference content<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh781215)</ept>.</source>
          <target state="new">You can learn more about using app URIs in <bpt id="p1">[</bpt>How to use URIs to reference content<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh781215)</ept>.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>In addition, and unlike other locations, you can also access files in your app install directory by using some <bpt id="p1">[</bpt>Win32 and COM for Universal Windows Platform (UWP) apps<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br205757)</ept> and some <bpt id="p2">[</bpt>C/C++ Standard Library functions from Microsoft Visual Studio<ept id="p2">](http://msdn.microsoft.com/library/hh875057.aspx)</ept>.</source>
          <target state="new">In addition, and unlike other locations, you can also access files in your app install directory by using some <bpt id="p1">[</bpt>Win32 and COM for Universal Windows Platform (UWP) apps<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br205757)</ept> and some <bpt id="p2">[</bpt>C/C++ Standard Library functions from Microsoft Visual Studio<ept id="p2">](http://msdn.microsoft.com/library/hh875057.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The app's install directory is a read-only location.</source>
          <target state="new">The app's install directory is a read-only location.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You can’t gain access to the install directory through the file picker.</source>
          <target state="new">You can’t gain access to the install directory through the file picker.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Application data locations.</source>
          <target state="new">Application data locations.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The folders where your app can store data.</source>
          <target state="new">The folders where your app can store data.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>These folders (local, roaming and temporary) are created when your app is installed.</source>
          <target state="new">These folders (local, roaming and temporary) are created when your app is installed.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>There are two primary ways to access files and folders from your app’s data locations:</source>
          <target state="new">There are two primary ways to access files and folders from your app’s data locations:</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Use <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ApplicationData<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br241587)</ept> properties to retrieve an app data folder.</source>
          <target state="new">Use <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ApplicationData<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br241587)</ept> properties to retrieve an app data folder.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For example, you can use <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ApplicationData<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br241587)</ept>.<bpt id="p3">[</bpt><bpt id="p4">**</bpt>LocalFolder<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br241621)</ept> to retrieve a <bpt id="p5">[</bpt><bpt id="p6">**</bpt>StorageFolder<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/br227230)</ept> that represents your app's local folder like this:</source>
          <target state="new">For example, you can use <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ApplicationData<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br241587)</ept>.<bpt id="p3">[</bpt><bpt id="p4">**</bpt>LocalFolder<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br241621)</ept> to retrieve a <bpt id="p5">[</bpt><bpt id="p6">**</bpt>StorageFolder<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/br227230)</ept> that represents your app's local folder like this:</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If you want to access your app's roaming or temporary folder, use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>RoamingFolder<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br241623)</ept> or <bpt id="p3">[</bpt><bpt id="p4">**</bpt>TemporaryFolder<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br241629)</ept> property instead.</source>
          <target state="new">If you want to access your app's roaming or temporary folder, use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>RoamingFolder<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br241623)</ept> or <bpt id="p3">[</bpt><bpt id="p4">**</bpt>TemporaryFolder<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br241629)</ept> property instead.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>After you retrieve a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StorageFolder<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br227230)</ept> that represents an app data location, you can access files and folders in that location by using <bpt id="p3">**</bpt>StorageFolder<ept id="p3">**</ept> methods.</source>
          <target state="new">After you retrieve a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StorageFolder<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br227230)</ept> that represents an app data location, you can access files and folders in that location by using <bpt id="p3">**</bpt>StorageFolder<ept id="p3">**</ept> methods.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>In the example, these <bpt id="p1">**</bpt>StorageFolder<ept id="p1">**</ept> objects are stored in the <ph id="ph1">`localFolder`</ph> variable.</source>
          <target state="new">In the example, these <bpt id="p1">**</bpt>StorageFolder<ept id="p1">**</ept> objects are stored in the <ph id="ph1">`localFolder`</ph> variable.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>You can learn more about using app data locations in <bpt id="p1">[</bpt>Managing application data<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh465109)</ept>, and by downloading the <bpt id="p2">[</bpt>Application data sample<ept id="p2">](http://go.microsoft.com/fwlink/p/?linkid=231478)</ept> for Windows 8.1 and re-using its source code in your Windows 10 app.</source>
          <target state="new">You can learn more about using app data locations in <bpt id="p1">[</bpt>Managing application data<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh465109)</ept>, and by downloading the <bpt id="p2">[</bpt>Application data sample<ept id="p2">](http://go.microsoft.com/fwlink/p/?linkid=231478)</ept> for Windows 8.1 and re-using its source code in your Windows 10 app.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>For example, you can retrieve a file directly from your app's local folder by using an app URI, like this:</source>
          <target state="new">For example, you can retrieve a file directly from your app's local folder by using an app URI, like this:</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>When <bpt id="p1">[</bpt><bpt id="p2">**</bpt>GetFileFromApplicationUriAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh701741)</ept> completes, it returns a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>StorageFile<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br227171)</ept> that represents the <bpt id="p5">*</bpt>file.txt<ept id="p5">*</ept> file in the app's local folder (<ph id="ph1">`file`</ph> in the example).</source>
          <target state="new">When <bpt id="p1">[</bpt><bpt id="p2">**</bpt>GetFileFromApplicationUriAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh701741)</ept> completes, it returns a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>StorageFile<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br227171)</ept> that represents the <bpt id="p5">*</bpt>file.txt<ept id="p5">*</ept> file in the app's local folder (<ph id="ph1">`file`</ph> in the example).</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The "ms-appdata:///local/" prefix in the URI refers to the app's local folder.</source>
          <target state="new">The "ms-appdata:///local/" prefix in the URI refers to the app's local folder.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>To access files in the app's roaming or temporary folders use "ms-appdata:///roaming/" or "ms-appdata:///temporary/" instead.</source>
          <target state="new">To access files in the app's roaming or temporary folders use "ms-appdata:///roaming/" or "ms-appdata:///temporary/" instead.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>You can learn more about using app URIs in <bpt id="p1">[</bpt>How to load file resources<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh781229)</ept>.</source>
          <target state="new">You can learn more about using app URIs in <bpt id="p1">[</bpt>How to load file resources<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh781229)</ept>.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>In addition, and unlike other locations, you can also access files in your app data locations by using some <bpt id="p1">[</bpt>Win32 and COM for UWP apps<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br205757)</ept> and some C/C++ Standard Library functions from Visual Studio.</source>
          <target state="new">In addition, and unlike other locations, you can also access files in your app data locations by using some <bpt id="p1">[</bpt>Win32 and COM for UWP apps<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br205757)</ept> and some C/C++ Standard Library functions from Visual Studio.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>You can’t access the local, roaming, or temporary folders through the file picker.</source>
          <target state="new">You can’t access the local, roaming, or temporary folders through the file picker.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Removable devices.</source>
          <target state="new">Removable devices.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Additionally, your app can access some of the files on connected devices by default.</source>
          <target state="new">Additionally, your app can access some of the files on connected devices by default.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>This is an option if your app uses the <bpt id="p1">[</bpt>AutoPlay extension<ept id="p1">](https://msdn.microsoft.com/en-us/library/windows/apps/xaml/hh464906.aspx#autoplay)</ept> to launch automatically when users connect a device, like a camera or USB thumb drive, to their system.</source>
          <target state="new">This is an option if your app uses the <bpt id="p1">[</bpt>AutoPlay extension<ept id="p1">](https://msdn.microsoft.com/en-us/library/windows/apps/xaml/hh464906.aspx#autoplay)</ept> to launch automatically when users connect a device, like a camera or USB thumb drive, to their system.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The files your app can access are limited to specific file types that are specified via File Type Association declarations in your app manifest.</source>
          <target state="new">The files your app can access are limited to specific file types that are specified via File Type Association declarations in your app manifest.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Of course, you can also gain access to files and folders on a removable device by calling the file picker (using <bpt id="p1">[</bpt><bpt id="p2">**</bpt>FileOpenPicker<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br207847)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>FolderPicker<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br207881)</ept>) and letting the user pick files and folders for your app to access.</source>
          <target state="new">Of course, you can also gain access to files and folders on a removable device by calling the file picker (using <bpt id="p1">[</bpt><bpt id="p2">**</bpt>FileOpenPicker<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br207847)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>FolderPicker<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br207881)</ept>) and letting the user pick files and folders for your app to access.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Learn how to use the file picker in <bpt id="p1">[</bpt>Open files and folders with a picker<ept id="p1">](quickstart-using-file-and-folder-pickers.md)</ept>.</source>
          <target state="new">Learn how to use the file picker in <bpt id="p1">[</bpt>Open files and folders with a picker<ept id="p1">](quickstart-using-file-and-folder-pickers.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  For more info about accessing an SD card from a mobile app, see <bpt id="p2">[</bpt>Access the SD card<ept id="p2">](access-the-sd-card.md)</ept>.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  For more info about accessing an SD card from a mobile app, see <bpt id="p2">[</bpt>Access the SD card<ept id="p2">](access-the-sd-card.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Locations Windows Store apps can access</source>
          <target state="new">Locations Windows Store apps can access</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>User’s Downloads folder.</source>
          <target state="new">User’s Downloads folder.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The folder where downloaded files are saved by default.</source>
          <target state="new">The folder where downloaded files are saved by default.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>By default, your app can only access files and folders in the user's Downloads folder that your app created.</source>
          <target state="new">By default, your app can only access files and folders in the user's Downloads folder that your app created.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>However, you can gain access to files and folders in the user's Downloads folder by calling a file picker (<bpt id="p1">[</bpt><bpt id="p2">**</bpt>FileOpenPicker<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br207847)</ept> or <bpt id="p3">[</bpt><bpt id="p4">**</bpt>FolderPicker<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br207881)</ept>) so that users can navigate and pick files or folders for your app to access.</source>
          <target state="new">However, you can gain access to files and folders in the user's Downloads folder by calling a file picker (<bpt id="p1">[</bpt><bpt id="p2">**</bpt>FileOpenPicker<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br207847)</ept> or <bpt id="p3">[</bpt><bpt id="p4">**</bpt>FolderPicker<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br207881)</ept>) so that users can navigate and pick files or folders for your app to access.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>You can create a file in the user's Downloads folder like this:</source>
          <target state="new">You can create a file in the user's Downloads folder like this:</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>DownloadsFolder<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br241632)</ept>.<bpt id="p3">[</bpt><bpt id="p4">**</bpt>CreateFileAsync<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/hh996761)</ept> is overloaded so that you can specify what the system should do if there is already an existing file in the Downloads folder that has the same name.</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>DownloadsFolder<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br241632)</ept>.<bpt id="p3">[</bpt><bpt id="p4">**</bpt>CreateFileAsync<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/hh996761)</ept> is overloaded so that you can specify what the system should do if there is already an existing file in the Downloads folder that has the same name.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>When these methods complete, they return a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StorageFile<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br227171)</ept> that represents the file that was created.</source>
          <target state="new">When these methods complete, they return a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StorageFile<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br227171)</ept> that represents the file that was created.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>This file is called <ph id="ph1">`newFile`</ph> in the example.</source>
          <target state="new">This file is called <ph id="ph1">`newFile`</ph> in the example.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>You can create a subfolder in the user's Downloads folder like this:</source>
          <target state="new">You can create a subfolder in the user's Downloads folder like this:</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>DownloadsFolder<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br241632)</ept>.<bpt id="p3">[</bpt><bpt id="p4">**</bpt>CreateFolderAsync<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/hh996763)</ept> is overloaded so that you can specify what the system should do if there is already an existing subfolder in the Downloads folder that has the same name.</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>DownloadsFolder<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br241632)</ept>.<bpt id="p3">[</bpt><bpt id="p4">**</bpt>CreateFolderAsync<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/hh996763)</ept> is overloaded so that you can specify what the system should do if there is already an existing subfolder in the Downloads folder that has the same name.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>When these methods complete, they return a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StorageFolder<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br227230)</ept> that represents the subfolder that was created.</source>
          <target state="new">When these methods complete, they return a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StorageFolder<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br227230)</ept> that represents the subfolder that was created.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>This file is called <ph id="ph1">`newFolder`</ph> in the example.</source>
          <target state="new">This file is called <ph id="ph1">`newFolder`</ph> in the example.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>If you create a file or folder in the Downloads folder, we recommend that you add that item to your app's <bpt id="p1">[</bpt><bpt id="p2">**</bpt>FutureAccessList<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br207457)</ept> so that your app can readily access that item in the future.</source>
          <target state="new">If you create a file or folder in the Downloads folder, we recommend that you add that item to your app's <bpt id="p1">[</bpt><bpt id="p2">**</bpt>FutureAccessList<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br207457)</ept> so that your app can readily access that item in the future.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Accessing additional locations</source>
          <target state="new">Accessing additional locations</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>In addition to the default locations, an app can access additional files and folders by declaring capabilities in the app manifest (see <bpt id="p1">[</bpt>App capability declarations<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/mt270968)</ept>), or by calling a file picker to let the user pick files and folders for the app to access (see <bpt id="p2">[</bpt>Open files and folders with a picker<ept id="p2">](quickstart-using-file-and-folder-pickers.md)</ept>).</source>
          <target state="new">In addition to the default locations, an app can access additional files and folders by declaring capabilities in the app manifest (see <bpt id="p1">[</bpt>App capability declarations<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/mt270968)</ept>), or by calling a file picker to let the user pick files and folders for the app to access (see <bpt id="p2">[</bpt>Open files and folders with a picker<ept id="p2">](quickstart-using-file-and-folder-pickers.md)</ept>).</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The following table lists additional locations that you can access by declaring a capability (or capabilities) and using the associated <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows.Storage<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br227346)</ept> API:</source>
          <target state="new">The following table lists additional locations that you can access by declaring a capability (or capabilities) and using the associated <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows.Storage<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br227346)</ept> API:</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Location</source>
          <target state="new">Location</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Capability</source>
          <target state="new">Capability</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Windows.Storage API</source>
          <target state="new">Windows.Storage API</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Documents</source>
          <target state="new">Documents</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>DocumentsLibrary</source>
          <target state="new">DocumentsLibrary</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Note: You must add File Type Associations to your app manifest that declare specific file types that your app can access in this location.</source>
          <target state="new">Note: You must add File Type Associations to your app manifest that declare specific file types that your app can access in this location.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Use this capability if your app:</source>
          <target state="new">Use this capability if your app:</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>- Facilitates cross-platform offline access to specific OneDrive content using valid OneDrive URLs or Resource IDs</source>
          <target state="new">- Facilitates cross-platform offline access to specific OneDrive content using valid OneDrive URLs or Resource IDs</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>- Saves open files to the user’s OneDrive automatically while offline</source>
          <target state="new">- Saves open files to the user’s OneDrive automatically while offline</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>KnownFolders.DocumentsLibrary</source>
          <target state="new">KnownFolders.DocumentsLibrary</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Music</source>
          <target state="new">Music</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>MusicLibrary</source>
          <target state="new">MusicLibrary</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Also see <bpt id="p1">[</bpt>Files and folders in the Music, Pictures, and Videos libraries<ept id="p1">](quickstart-managing-folders-in-the-music-pictures-and-videos-libraries.md)</ept>.</source>
          <target state="new">Also see <bpt id="p1">[</bpt>Files and folders in the Music, Pictures, and Videos libraries<ept id="p1">](quickstart-managing-folders-in-the-music-pictures-and-videos-libraries.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>KnownFolders.MusicLibrary</source>
          <target state="new">KnownFolders.MusicLibrary</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Pictures</source>
          <target state="new">Pictures</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>PicturesLibrary</source>
          <target state="new">PicturesLibrary</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Also see <bpt id="p1">[</bpt>Files and folders in the Music, Pictures, and Videos libraries<ept id="p1">](quickstart-managing-folders-in-the-music-pictures-and-videos-libraries.md)</ept>.</source>
          <target state="new">Also see <bpt id="p1">[</bpt>Files and folders in the Music, Pictures, and Videos libraries<ept id="p1">](quickstart-managing-folders-in-the-music-pictures-and-videos-libraries.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>KnownFolders.PicturesLibrary</source>
          <target state="new">KnownFolders.PicturesLibrary</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Videos</source>
          <target state="new">Videos</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>VideosLibrary</source>
          <target state="new">VideosLibrary</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Also see <bpt id="p1">[</bpt>Files and folders in the Music, Pictures, and Videos libraries<ept id="p1">](quickstart-managing-folders-in-the-music-pictures-and-videos-libraries.md)</ept>.</source>
          <target state="new">Also see <bpt id="p1">[</bpt>Files and folders in the Music, Pictures, and Videos libraries<ept id="p1">](quickstart-managing-folders-in-the-music-pictures-and-videos-libraries.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>KnownFolders.VideosLibrary</source>
          <target state="new">KnownFolders.VideosLibrary</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Removable devices</source>
          <target state="new">Removable devices</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>RemovableDevices</source>
          <target state="new">RemovableDevices</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Note  You must add File Type Associations to your app manifest that declare specific file types that your app can access in this location.</source>
          <target state="new">Note  You must add File Type Associations to your app manifest that declare specific file types that your app can access in this location.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Also see <bpt id="p1">[</bpt>Access the SD card<ept id="p1">](access-the-sd-card.md)</ept>.</source>
          <target state="new">Also see <bpt id="p1">[</bpt>Access the SD card<ept id="p1">](access-the-sd-card.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>KnownFolders.RemovableDevices</source>
          <target state="new">KnownFolders.RemovableDevices</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Homegroup libraries</source>
          <target state="new">Homegroup libraries</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>At least one of the following capabilities is needed.</source>
          <target state="new">At least one of the following capabilities is needed.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>- MusicLibrary</source>
          <target state="new">- MusicLibrary</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>- PicturesLibrary</source>
          <target state="new">- PicturesLibrary</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>- VideosLibrary</source>
          <target state="new">- VideosLibrary</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>KnownFolders.HomeGroup</source>
          <target state="new">KnownFolders.HomeGroup</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Media server devices (DLNA)</source>
          <target state="new">Media server devices (DLNA)</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>At least one of the following capabilities is needed.</source>
          <target state="new">At least one of the following capabilities is needed.</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>- MusicLibrary</source>
          <target state="new">- MusicLibrary</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>- PicturesLibrary</source>
          <target state="new">- PicturesLibrary</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>- VideosLibrary</source>
          <target state="new">- VideosLibrary</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>KnownFolders.MediaServerDevices</source>
          <target state="new">KnownFolders.MediaServerDevices</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Universal Naming Convention (UNC) folders</source>
          <target state="new">Universal Naming Convention (UNC) folders</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>A combination of the following capabilities is needed.</source>
          <target state="new">A combination of the following capabilities is needed.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The home and work networks capability:</source>
          <target state="new">The home and work networks capability:</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>- PrivateNetworkClientServer</source>
          <target state="new">- PrivateNetworkClientServer</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>And at least one internet and public networks capability:</source>
          <target state="new">And at least one internet and public networks capability:</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>- InternetClient</source>
          <target state="new">- InternetClient</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>- InternetClientServer</source>
          <target state="new">- InternetClientServer</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>And, if applicable, the domain credentials capability:</source>
          <target state="new">And, if applicable, the domain credentials capability:</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>- EnterpriseAuthentication</source>
          <target state="new">- EnterpriseAuthentication</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Note: You must add File Type Associations to your app manifest that declare specific file types that your app can access in this location.</source>
          <target state="new">Note: You must add File Type Associations to your app manifest that declare specific file types that your app can access in this location.</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Retrieve a folder using:</source>
          <target state="new">Retrieve a folder using:</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>StorageFolder.GetFolderFromPathAsync</source>
          <target state="new">StorageFolder.GetFolderFromPathAsync</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Retrieve a file using:</source>
          <target state="new">Retrieve a file using:</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>StorageFile.GetFileFromPathAsync</source>
          <target state="new">StorageFile.GetFileFromPathAsync</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>