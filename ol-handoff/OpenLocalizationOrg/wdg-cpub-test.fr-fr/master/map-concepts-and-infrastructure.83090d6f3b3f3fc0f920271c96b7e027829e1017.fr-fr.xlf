<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-48076a9" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3b0aa3cb9dd678b9ba6e4d54961b788867a9d5d8</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci2\gaming\map-concepts-and-infrastructure.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Map OpenGL ES 2.0 to Direct3D 11</source>
          <target state="new">Map OpenGL ES 2.0 to Direct3D 11</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>When starting the process of porting your graphics architecture from OpenGL ES 2.0 to Direct3D for the first time, familiarize yourself with the key differences between the APIs.</source>
          <target state="new">When starting the process of porting your graphics architecture from OpenGL ES 2.0 to Direct3D for the first time, familiarize yourself with the key differences between the APIs.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Map OpenGL ES 2.0 to Direct3D 11</source>
          <target state="new">Map OpenGL ES 2.0 to Direct3D 11</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>\[ Updated for UWP apps on Windows 10.</source>
          <target state="new">\[ Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>When starting the process of porting your graphics architecture from OpenGL ES 2.0 to Direct3D for the first time, familiarize yourself with the key differences between the APIs.</source>
          <target state="new">When starting the process of porting your graphics architecture from OpenGL ES 2.0 to Direct3D for the first time, familiarize yourself with the key differences between the APIs.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The topics in this section help you plan your port strategy and the API changes that you must make when moving your graphics processing to Direct3D.</source>
          <target state="new">The topics in this section help you plan your port strategy and the API changes that you must make when moving your graphics processing to Direct3D.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Topic</source>
          <target state="new">Topic</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="new">Description</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Plan your port from OpenGL ES 2.0 to Direct3D</source>
          <target state="new">Plan your port from OpenGL ES 2.0 to Direct3D</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>If you are porting a game from the iOS or Android platforms, you have probably made a significant investment in OpenGL ES 2.0.</source>
          <target state="new">If you are porting a game from the iOS or Android platforms, you have probably made a significant investment in OpenGL ES 2.0.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>When preparing to move your graphics pipeline codebase to Direct3D 11 and the Windows Runtime, there are a few things you should consider before you start.</source>
          <target state="new">When preparing to move your graphics pipeline codebase to Direct3D 11 and the Windows Runtime, there are a few things you should consider before you start.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Compare EGL code to DXGI and Direct3D</source>
          <target state="new">Compare EGL code to DXGI and Direct3D</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The DirectX Graphics Interface (DXGI) and several Direct3D APIs serve the same role as EGL.</source>
          <target state="new">The DirectX Graphics Interface (DXGI) and several Direct3D APIs serve the same role as EGL.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This topic helps you understand DXGI and Direct3D 11 from the perspective of EGL.</source>
          <target state="new">This topic helps you understand DXGI and Direct3D 11 from the perspective of EGL.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Compare OpenGL ES 2.0 buffers, uniforms, and vertex attributes to Direct3D</source>
          <target state="new">Compare OpenGL ES 2.0 buffers, uniforms, and vertex attributes to Direct3D</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>During the process of porting to Direct3D 11 from OpenGL ES 2.0, you must change the syntax and API behavior for passing data between the app and the shader programs.</source>
          <target state="new">During the process of porting to Direct3D 11 from OpenGL ES 2.0, you must change the syntax and API behavior for passing data between the app and the shader programs.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Compare the OpenGL ES 2.0 shader pipeline to Direct3D</source>
          <target state="new">Compare the OpenGL ES 2.0 shader pipeline to Direct3D</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Conceptually, the Direct3D 11 shader pipeline is very similar to the one in OpenGL ES 2.0.</source>
          <target state="new">Conceptually, the Direct3D 11 shader pipeline is very similar to the one in OpenGL ES 2.0.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>In terms of API design, however, the major components for creating and managing the shader stages are parts of two primary interfaces, [<ph id="ph1">&lt;strong&gt;</ph>ID3D11Device1<ph id="ph2">&lt;/strong&gt;</ph>](https://msdn.microsoft.com/library/windows/desktop/hh404575) and [<ph id="ph3">&lt;strong&gt;</ph>ID3D11DeviceContext1<ph id="ph4">&lt;/strong&gt;</ph>](https://msdn.microsoft.com/library/windows/desktop/hh404598).</source>
          <target state="new">In terms of API design, however, the major components for creating and managing the shader stages are parts of two primary interfaces, [<ph id="ph1">&lt;strong&gt;</ph>ID3D11Device1<ph id="ph2">&lt;/strong&gt;</ph>](https://msdn.microsoft.com/library/windows/desktop/hh404575) and [<ph id="ph3">&lt;strong&gt;</ph>ID3D11DeviceContext1<ph id="ph4">&lt;/strong&gt;</ph>](https://msdn.microsoft.com/library/windows/desktop/hh404598).</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This topic attempts to map common OpenGL ES 2.0 shader pipeline API patterns to the Direct3D 11 equivalents in these interfaces.</source>
          <target state="new">This topic attempts to map common OpenGL ES 2.0 shader pipeline API patterns to the Direct3D 11 equivalents in these interfaces.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Notes on specific OpenGL ES 2.0 providers</source>
          <target state="new">Notes on specific OpenGL ES 2.0 providers</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>These topics use the Khronos OpenGL ES 2.0 specification with platform-agnostic C. Both iOS and Android utilize the same specification and OpenGL ES 2.0 code developed for those platforms is very similar to the code snippets we will walk through, although they are typically exposed as object-oriented APIs.</source>
          <target state="new">These topics use the Khronos OpenGL ES 2.0 specification with platform-agnostic C. Both iOS and Android utilize the same specification and OpenGL ES 2.0 code developed for those platforms is very similar to the code snippets we will walk through, although they are typically exposed as object-oriented APIs.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Also, due to the intricacies and language differences of each platform, there may be minor differences, especially in method parameter types, or in general language syntax.</source>
          <target state="new">Also, due to the intricacies and language differences of each platform, there may be minor differences, especially in method parameter types, or in general language syntax.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>iOS, for instance, uses Objective-C.</source>
          <target state="new">iOS, for instance, uses Objective-C.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Android has the capability to use C++; however, some developers may have relied on a pure Java implementation.</source>
          <target state="new">Android has the capability to use C++; however, some developers may have relied on a pure Java implementation.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>With that in mind, these topics should still be useful as the overall concepts, structure and usage of the OpenGL ES APIs do not differ.</source>
          <target state="new">With that in mind, these topics should still be useful as the overall concepts, structure and usage of the OpenGL ES APIs do not differ.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>