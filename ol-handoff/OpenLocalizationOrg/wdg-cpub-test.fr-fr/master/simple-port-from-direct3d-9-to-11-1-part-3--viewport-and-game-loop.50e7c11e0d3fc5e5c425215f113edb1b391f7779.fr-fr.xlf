<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-48076a9" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">986e99cae036ff2a87de055aed0a261e4977b2ec</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci2\gaming\simple-port-from-direct3d-9-to-11-1-part-3--viewport-and-game-loop.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Port the game loop</source>
          <target state="new">Port the game loop</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Shows how to implement a window for a Universal Windows Platform (UWP) game and how to bring over the game loop, including how to build an IFrameworkView to control a full-screen CoreWindow.</source>
          <target state="new">Shows how to implement a window for a Universal Windows Platform (UWP) game and how to bring over the game loop, including how to build an IFrameworkView to control a full-screen CoreWindow.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Port the game loop</source>
          <target state="new">Port the game loop</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>\[ Updated for UWP apps on Windows 10.</source>
          <target state="new">\[ Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Summary</source>
          <target state="new">Summary</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Part 1: Initialize Direct3D 11</source>
          <target state="new">Part 1: Initialize Direct3D 11</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Part 2: Convert the rendering framework</source>
          <target state="new">Part 2: Convert the rendering framework</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Part 3: Port the game loop</source>
          <target state="new">Part 3: Port the game loop</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Shows how to implement a window for a Universal Windows Platform (UWP) game and how to bring over the game loop, including how to build an <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IFrameworkView<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh700478)</ept> to control a full-screen <bpt id="p3">[</bpt><bpt id="p4">**</bpt>CoreWindow<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br208225)</ept>.</source>
          <target state="new">Shows how to implement a window for a Universal Windows Platform (UWP) game and how to bring over the game loop, including how to build an <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IFrameworkView<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh700478)</ept> to control a full-screen <bpt id="p3">[</bpt><bpt id="p4">**</bpt>CoreWindow<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br208225)</ept>.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Part 3 of the <bpt id="p1">[</bpt>Port a simple Direct3D 9 app to DirectX 11 and UWP<ept id="p1">](walkthrough--simple-port-from-direct3d-9-to-11-1.md)</ept> walkthrough.</source>
          <target state="new">Part 3 of the <bpt id="p1">[</bpt>Port a simple Direct3D 9 app to DirectX 11 and UWP<ept id="p1">](walkthrough--simple-port-from-direct3d-9-to-11-1.md)</ept> walkthrough.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Create a window</source>
          <target state="new">Create a window</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>To set up a desktop window with a Direct3D 9 viewport, we had to implement the traditional windowing framework for desktop apps.</source>
          <target state="new">To set up a desktop window with a Direct3D 9 viewport, we had to implement the traditional windowing framework for desktop apps.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>We had to create an HWND, set the window size, provide a window processing callback, make it visible, and so on.</source>
          <target state="new">We had to create an HWND, set the window size, provide a window processing callback, make it visible, and so on.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The UWP environment has a much simpler system.</source>
          <target state="new">The UWP environment has a much simpler system.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Instead of setting up a traditional window, a Windows Store game using DirectX implements <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IFrameworkView<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh700478)</ept>.</source>
          <target state="new">Instead of setting up a traditional window, a Windows Store game using DirectX implements <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IFrameworkView<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh700478)</ept>.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This interface exists for DirectX apps and games to run directly in a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CoreWindow<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208225)</ept> inside the app container.</source>
          <target state="new">This interface exists for DirectX apps and games to run directly in a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CoreWindow<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208225)</ept> inside the app container.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>   Windows supplies managed pointers to resources such as the source application object and the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>CoreWindow<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br208225)</ept>.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>   Windows supplies managed pointers to resources such as the source application object and the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>CoreWindow<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br208225)</ept>.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>See [<bpt id="p1">**</bpt>Handle to Object Operator (^)<ept id="p1">**</ept>]https://msdn.microsoft.com/library/windows/apps/yk97tc08.aspx.</source>
          <target state="new">See [<bpt id="p1">**</bpt>Handle to Object Operator (^)<ept id="p1">**</ept>]https://msdn.microsoft.com/library/windows/apps/yk97tc08.aspx.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Your "main" class needs to inherit from <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IFrameworkView<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh700478)</ept> and implement the five <bpt id="p3">**</bpt>IFrameworkView<ept id="p3">**</ept> methods: <bpt id="p4">[</bpt><bpt id="p5">**</bpt>Initialize<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/hh700495)</ept>, <bpt id="p6">[</bpt><bpt id="p7">**</bpt>SetWindow<ept id="p7">**</ept><ept id="p6">](https://msdn.microsoft.com/library/windows/apps/hh700509)</ept>, <bpt id="p8">[</bpt><bpt id="p9">**</bpt>Load<ept id="p9">**</ept><ept id="p8">](https://msdn.microsoft.com/library/windows/apps/hh700501)</ept>, <bpt id="p10">[</bpt><bpt id="p11">**</bpt>Run<ept id="p11">**</ept><ept id="p10">](https://msdn.microsoft.com/library/windows/apps/hh700505)</ept>, and <bpt id="p12">[</bpt><bpt id="p13">**</bpt>Uninitialize<ept id="p13">**</ept><ept id="p12">](https://msdn.microsoft.com/library/windows/apps/hh700523)</ept>.</source>
          <target state="new">Your "main" class needs to inherit from <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IFrameworkView<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh700478)</ept> and implement the five <bpt id="p3">**</bpt>IFrameworkView<ept id="p3">**</ept> methods: <bpt id="p4">[</bpt><bpt id="p5">**</bpt>Initialize<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/hh700495)</ept>, <bpt id="p6">[</bpt><bpt id="p7">**</bpt>SetWindow<ept id="p7">**</ept><ept id="p6">](https://msdn.microsoft.com/library/windows/apps/hh700509)</ept>, <bpt id="p8">[</bpt><bpt id="p9">**</bpt>Load<ept id="p9">**</ept><ept id="p8">](https://msdn.microsoft.com/library/windows/apps/hh700501)</ept>, <bpt id="p10">[</bpt><bpt id="p11">**</bpt>Run<ept id="p11">**</ept><ept id="p10">](https://msdn.microsoft.com/library/windows/apps/hh700505)</ept>, and <bpt id="p12">[</bpt><bpt id="p13">**</bpt>Uninitialize<ept id="p13">**</ept><ept id="p12">](https://msdn.microsoft.com/library/windows/apps/hh700523)</ept>.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>In addition to creating the <bpt id="p1">**</bpt>IFrameworkView<ept id="p1">**</ept>, which is (essentially) where your game will reside, you need to implement a factory class that creates an instance of your <bpt id="p2">**</bpt>IFrameworkView<ept id="p2">**</ept>.</source>
          <target state="new">In addition to creating the <bpt id="p1">**</bpt>IFrameworkView<ept id="p1">**</ept>, which is (essentially) where your game will reside, you need to implement a factory class that creates an instance of your <bpt id="p2">**</bpt>IFrameworkView<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Your game still has an executable with a method called <bpt id="p1">**</bpt>main()<ept id="p1">**</ept>, but all main can do is use the factory to create the <bpt id="p2">**</bpt>IFrameworkView<ept id="p2">**</ept> instance.</source>
          <target state="new">Your game still has an executable with a method called <bpt id="p1">**</bpt>main()<ept id="p1">**</ept>, but all main can do is use the factory to create the <bpt id="p2">**</bpt>IFrameworkView<ept id="p2">**</ept> instance.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Main function</source>
          <target state="new">Main function</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>IFrameworkView factory</source>
          <target state="new">IFrameworkView factory</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Port the game loop</source>
          <target state="new">Port the game loop</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Let's look at the game loop from our Direct3D 9 implementation.</source>
          <target state="new">Let's look at the game loop from our Direct3D 9 implementation.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This code exists in the app's main function.</source>
          <target state="new">This code exists in the app's main function.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Each iteration of this loop processes a window message or renders a frame.</source>
          <target state="new">Each iteration of this loop processes a window message or renders a frame.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Game loop in Direct3D 9 desktop game</source>
          <target state="new">Game loop in Direct3D 9 desktop game</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The game loop is similar - but easier - in the UWP version of our game:</source>
          <target state="new">The game loop is similar - but easier - in the UWP version of our game:</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The game loop goes in the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IFrameworkView::Run<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh700505)</ept> method (instead of <bpt id="p3">**</bpt>main()<ept id="p3">**</ept>) because our game functions within the <bpt id="p4">[</bpt><bpt id="p5">**</bpt>IFrameworkView<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/hh700478)</ept> class.</source>
          <target state="new">The game loop goes in the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IFrameworkView::Run<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh700505)</ept> method (instead of <bpt id="p3">**</bpt>main()<ept id="p3">**</ept>) because our game functions within the <bpt id="p4">[</bpt><bpt id="p5">**</bpt>IFrameworkView<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/hh700478)</ept> class.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Instead of implementing a message handling framework and calling <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PeekMessage<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ms644943)</ept>, we can call the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>ProcessEvents<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br208215)</ept> method built in to our app window's <bpt id="p5">[</bpt><bpt id="p6">**</bpt>CoreDispatcher<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/br208211)</ept>.</source>
          <target state="new">Instead of implementing a message handling framework and calling <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PeekMessage<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ms644943)</ept>, we can call the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>ProcessEvents<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br208215)</ept> method built in to our app window's <bpt id="p5">[</bpt><bpt id="p6">**</bpt>CoreDispatcher<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/br208211)</ept>.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>There's no need for the game loop to branch and handle messages - just call <bpt id="p1">**</bpt>ProcessEvents<ept id="p1">**</ept> and proceed.</source>
          <target state="new">There's no need for the game loop to branch and handle messages - just call <bpt id="p1">**</bpt>ProcessEvents<ept id="p1">**</ept> and proceed.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Game loop in Direct3D 11 Windows Store game</source>
          <target state="new">Game loop in Direct3D 11 Windows Store game</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Now we have a UWP app that sets up the same basic graphics infrastructure, and renders the same colorful cube, as our DirectX 9 example.</source>
          <target state="new">Now we have a UWP app that sets up the same basic graphics infrastructure, and renders the same colorful cube, as our DirectX 9 example.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Where do I go from here?</source>
          <target state="new">Where do I go from here?</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Bookmark the <bpt id="p1">[</bpt>DirectX 11 porting FAQ<ept id="p1">](directx-porting-faq.md)</ept>.</source>
          <target state="new">Bookmark the <bpt id="p1">[</bpt>DirectX 11 porting FAQ<ept id="p1">](directx-porting-faq.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The DirectX UWP templates include a robust Direct3D device infrastructure that's ready for use with your game.</source>
          <target state="new">The DirectX UWP templates include a robust Direct3D device infrastructure that's ready for use with your game.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Create a DirectX game project from a template<ept id="p1">](user-interface.md)</ept> for guidance on picking the right template.</source>
          <target state="new">See <bpt id="p1">[</bpt>Create a DirectX game project from a template<ept id="p1">](user-interface.md)</ept> for guidance on picking the right template.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Visit the following in-depth Windows Store game game development articles:</source>
          <target state="new">Visit the following in-depth Windows Store game game development articles:</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Walkthrough: a simple UWP game with DirectX</source>
          <target state="new">Walkthrough: a simple UWP game with DirectX</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Audio for games</source>
          <target state="new">Audio for games</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Move-look controls for games</source>
          <target state="new">Move-look controls for games</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>