<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-48076a9" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f0c419674105f3406b3acf0a05287726485f0aaf</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci2\layout\peer-to-peer-navigation-between-two-pages.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Learn how to navigate in a basic two page peer-to-peer Universal Windows Platform (UWP) app.</source>
          <target state="new">Learn how to navigate in a basic two page peer-to-peer Universal Windows Platform (UWP) app.</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Peer-to-peer navigation between two pages</source>
          <target state="new">Peer-to-peer navigation between two pages</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Peer-to-peer navigation between two pages</source>
          <target state="new">Peer-to-peer navigation between two pages</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>\[ Updated for UWP apps on Windows 10.</source>
          <target state="new">\[ Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Learn how to navigate in a basic two page peer-to-peer Universal Windows Platform (UWP) app.</source>
          <target state="new">Learn how to navigate in a basic two page peer-to-peer Universal Windows Platform (UWP) app.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>two-page peer-to-peer navigation example</source>
          <target state="new">two-page peer-to-peer navigation example</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Important APIs</source>
          <target state="new">Important APIs</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Windows.UI.Xaml.Controls.Frame</source>
          <target state="new">Windows.UI.Xaml.Controls.Frame</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Windows.UI.Xaml.Controls.Page</source>
          <target state="new">Windows.UI.Xaml.Controls.Page</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Windows.UI.Xaml.Navigation</source>
          <target state="new">Windows.UI.Xaml.Navigation</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Create the blank app</source>
          <target state="new">Create the blank app</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>On the Microsoft Visual Studio menu, choose <bpt id="p1">**</bpt>File <ph id="ph1">&amp;gt;</ph> New Project<ept id="p1">**</ept>.</source>
          <target state="new">On the Microsoft Visual Studio menu, choose <bpt id="p1">**</bpt>File <ph id="ph1">&amp;gt;</ph> New Project<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>In the left pane of the <bpt id="p1">**</bpt>New Project<ept id="p1">**</ept> dialog box, choose the <bpt id="p2">**</bpt>Visual C# -<ph id="ph1">&amp;gt;</ph> Windows -<ph id="ph2">&amp;gt;</ph> Universal<ept id="p2">**</ept> or the <bpt id="p3">**</bpt>Visual C++ -<ph id="ph3">&amp;gt;</ph> Windows -<ph id="ph4">&amp;gt;</ph> Universal<ept id="p3">**</ept> node.</source>
          <target state="new">In the left pane of the <bpt id="p1">**</bpt>New Project<ept id="p1">**</ept> dialog box, choose the <bpt id="p2">**</bpt>Visual C# -<ph id="ph1">&amp;gt;</ph> Windows -<ph id="ph2">&amp;gt;</ph> Universal<ept id="p2">**</ept> or the <bpt id="p3">**</bpt>Visual C++ -<ph id="ph3">&amp;gt;</ph> Windows -<ph id="ph4">&amp;gt;</ph> Universal<ept id="p3">**</ept> node.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>In the center pane, choose <bpt id="p1">**</bpt>Blank App<ept id="p1">**</ept>.</source>
          <target state="new">In the center pane, choose <bpt id="p1">**</bpt>Blank App<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Name<ept id="p1">**</ept> box, enter <bpt id="p2">**</bpt>NavApp1<ept id="p2">**</ept>, and then choose the <bpt id="p3">**</bpt>OK<ept id="p3">**</ept> button.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Name<ept id="p1">**</ept> box, enter <bpt id="p2">**</bpt>NavApp1<ept id="p2">**</ept>, and then choose the <bpt id="p3">**</bpt>OK<ept id="p3">**</ept> button.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The solution is created and the project files appear in <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>.</source>
          <target state="new">The solution is created and the project files appear in <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Important<ept id="p1">**</ept>  When you run Visual Studio for the first time, it prompts you to obtain a developer license.</source>
          <target state="new"><bpt id="p1">**</bpt>Important<ept id="p1">**</ept>  When you run Visual Studio for the first time, it prompts you to obtain a developer license.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For more info, see <bpt id="p1">[</bpt>Enable your device for development<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn706236)</ept>.</source>
          <target state="new">For more info, see <bpt id="p1">[</bpt>Enable your device for development<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn706236)</ept>.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>To run the program, choose <bpt id="p1">**</bpt>Debug<ept id="p1">**</ept> <ph id="ph1">&amp;gt;</ph> <bpt id="p2">**</bpt>Start Debugging<ept id="p2">**</ept> from the menu, or press F5.</source>
          <target state="new">To run the program, choose <bpt id="p1">**</bpt>Debug<ept id="p1">**</ept> <ph id="ph1">&amp;gt;</ph> <bpt id="p2">**</bpt>Start Debugging<ept id="p2">**</ept> from the menu, or press F5.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A blank page is displayed.</source>
          <target state="new">A blank page is displayed.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Press Shift+F5 to stop debugging and return to Visual Studio.</source>
          <target state="new">Press Shift+F5 to stop debugging and return to Visual Studio.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Add basic pages</source>
          <target state="new">Add basic pages</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Next, add two content pages to the project.</source>
          <target state="new">Next, add two content pages to the project.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Do the following steps two times to add two pages to navigate between.</source>
          <target state="new">Do the following steps two times to add two pages to navigate between.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, right-click the <bpt id="p2">**</bpt>BlankApp<ept id="p2">**</ept> project node to open the shortcut menu.</source>
          <target state="new">In <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, right-click the <bpt id="p2">**</bpt>BlankApp<ept id="p2">**</ept> project node to open the shortcut menu.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Choose <bpt id="p1">**</bpt>Add<ept id="p1">**</ept> <ph id="ph1">&amp;gt;</ph> <bpt id="p2">**</bpt>New Item<ept id="p2">**</ept> from the shortcut menu.</source>
          <target state="new">Choose <bpt id="p1">**</bpt>Add<ept id="p1">**</ept> <ph id="ph1">&amp;gt;</ph> <bpt id="p2">**</bpt>New Item<ept id="p2">**</ept> from the shortcut menu.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Add New Item<ept id="p1">**</ept> dialog box, choose <bpt id="p2">**</bpt>Blank Page<ept id="p2">**</ept> in the middle pane.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Add New Item<ept id="p1">**</ept> dialog box, choose <bpt id="p2">**</bpt>Blank Page<ept id="p2">**</ept> in the middle pane.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Name<ept id="p1">**</ept> box, enter <bpt id="p2">**</bpt>Page1<ept id="p2">**</ept> (or <bpt id="p3">**</bpt>Page2<ept id="p3">**</ept>) and press the <bpt id="p4">**</bpt>Add<ept id="p4">**</ept> button.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Name<ept id="p1">**</ept> box, enter <bpt id="p2">**</bpt>Page1<ept id="p2">**</ept> (or <bpt id="p3">**</bpt>Page2<ept id="p3">**</ept>) and press the <bpt id="p4">**</bpt>Add<ept id="p4">**</ept> button.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>These files should now be listed as part of your NavApp1 project.</source>
          <target state="new">These files should now be listed as part of your NavApp1 project.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>CS</source>
          <target state="new">CS</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>C++</source>
          <target state="new">C++</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Page1.xaml</source>
          <target state="new">Page1.xaml</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Page1.xaml.cs</source>
          <target state="new">Page1.xaml.cs</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Page2.xaml</source>
          <target state="new">Page2.xaml</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Page2.xaml.cs</source>
          <target state="new">Page2.xaml.cs</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Page1.xaml</source>
          <target state="new">Page1.xaml</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Page1.xaml.cpp</source>
          <target state="new">Page1.xaml.cpp</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Page1.xaml.h</source>
          <target state="new">Page1.xaml.h</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Page2.xaml</source>
          <target state="new">Page2.xaml</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Page2.xaml.cpp</source>
          <target state="new">Page2.xaml.cpp</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Page2.xaml.h</source>
          <target state="new">Page2.xaml.h</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Note</source>
          <target state="new">Note</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Functions are declared in the header (.h) file and implemented in the code-behind file (.cpp).</source>
          <target state="new">Functions are declared in the header (.h) file and implemented in the code-behind file (.cpp).</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Add the following content to the UI of Page1.xaml.</source>
          <target state="new">Add the following content to the UI of Page1.xaml.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Add a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TextBlock<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br209652)</ept> element named <ph id="ph1">`pageTitle`</ph> as a child element of the root <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Grid<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br242704)</ept>.</source>
          <target state="new">Add a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TextBlock<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br209652)</ept> element named <ph id="ph1">`pageTitle`</ph> as a child element of the root <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Grid<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br242704)</ept>.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Change the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Text<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br209676)</ept> property to <ph id="ph1">`Page 1`</ph>.</source>
          <target state="new">Change the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Text<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br209676)</ept> property to <ph id="ph1">`Page 1`</ph>.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Add the following <bpt id="p1">[</bpt><bpt id="p2">**</bpt>HyperlinkButton<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242739)</ept> element as a child element of the root <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Grid<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br242704)</ept> and after the <ph id="ph1">`pageTitle`</ph> <bpt id="p5">[</bpt><bpt id="p6">**</bpt>TextBlock<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/br209652)</ept> element.</source>
          <target state="new">Add the following <bpt id="p1">[</bpt><bpt id="p2">**</bpt>HyperlinkButton<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242739)</ept> element as a child element of the root <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Grid<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br242704)</ept> and after the <ph id="ph1">`pageTitle`</ph> <bpt id="p5">[</bpt><bpt id="p6">**</bpt>TextBlock<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/br209652)</ept> element.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Add the following code to the <ph id="ph1">`Page1`</ph> class in the Page1.xaml code-behind file to handle the <ph id="ph2">`Click`</ph> event of the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>HyperlinkButton<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242739)</ept> you added previously.</source>
          <target state="new">Add the following code to the <ph id="ph1">`Page1`</ph> class in the Page1.xaml code-behind file to handle the <ph id="ph2">`Click`</ph> event of the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>HyperlinkButton<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242739)</ept> you added previously.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Here, we navigate to Page2.xaml.</source>
          <target state="new">Here, we navigate to Page2.xaml.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Make the following changes to the UI of Page2.xaml.</source>
          <target state="new">Make the following changes to the UI of Page2.xaml.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Add a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TextBlock<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br209652)</ept> element named <ph id="ph1">`pageTitle`</ph> as a child element of the root <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Grid<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br242704)</ept>.</source>
          <target state="new">Add a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TextBlock<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br209652)</ept> element named <ph id="ph1">`pageTitle`</ph> as a child element of the root <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Grid<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br242704)</ept>.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Change the value of the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Text<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br209676)</ept> property to <ph id="ph1">`Page 2`</ph>.</source>
          <target state="new">Change the value of the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Text<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br209676)</ept> property to <ph id="ph1">`Page 2`</ph>.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Add the following <bpt id="p1">[</bpt><bpt id="p2">**</bpt>HyperlinkButton<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242739)</ept> element as a child element of the root <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Grid<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br242704)</ept> and after the <ph id="ph1">`pageTitle`</ph> <bpt id="p5">[</bpt><bpt id="p6">**</bpt>TextBlock<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/br209652)</ept> element.</source>
          <target state="new">Add the following <bpt id="p1">[</bpt><bpt id="p2">**</bpt>HyperlinkButton<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242739)</ept> element as a child element of the root <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Grid<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br242704)</ept> and after the <ph id="ph1">`pageTitle`</ph> <bpt id="p5">[</bpt><bpt id="p6">**</bpt>TextBlock<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/br209652)</ept> element.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Add the following code to the <ph id="ph1">`Page2`</ph> class in the Page2.xaml code-behind file to handle the <ph id="ph2">`Click`</ph> event of the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>HyperlinkButton<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242739)</ept> you added previously.</source>
          <target state="new">Add the following code to the <ph id="ph1">`Page2`</ph> class in the Page2.xaml code-behind file to handle the <ph id="ph2">`Click`</ph> event of the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>HyperlinkButton<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242739)</ept> you added previously.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Here, we navigate to Page1.xaml.</source>
          <target state="new">Here, we navigate to Page1.xaml.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Note</source>
          <target state="new">Note</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>For C++ projects, you must add a <ph id="ph1">`#include`</ph> directive in the header file of each page that references another page.</source>
          <target state="new">For C++ projects, you must add a <ph id="ph1">`#include`</ph> directive in the header file of each page that references another page.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>For the inter-page navigation example presented here, page1.xaml.h file contains <ph id="ph1">`#include "Page2.xaml.h"`</ph>, in turn, page2.xaml.h contains <ph id="ph2">`#include "Page1.xaml.h"`</ph>.</source>
          <target state="new">For the inter-page navigation example presented here, page1.xaml.h file contains <ph id="ph1">`#include "Page2.xaml.h"`</ph>, in turn, page2.xaml.h contains <ph id="ph2">`#include "Page1.xaml.h"`</ph>.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Now that we've prepared the content pages, we need to make Page1.xaml display when the app starts.</source>
          <target state="new">Now that we've prepared the content pages, we need to make Page1.xaml display when the app starts.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Open the app.xaml code-behind file and change the <ph id="ph1">`OnLaunched`</ph> handler.</source>
          <target state="new">Open the app.xaml code-behind file and change the <ph id="ph1">`OnLaunched`</ph> handler.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Here, we specify <ph id="ph1">`Page1`</ph> in the call to <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Frame.Navigate<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242694)</ept> instead of <ph id="ph2">`MainPage`</ph>.</source>
          <target state="new">Here, we specify <ph id="ph1">`Page1`</ph> in the call to <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Frame.Navigate<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242694)</ept> instead of <ph id="ph2">`MainPage`</ph>.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  The code here uses the return value of <bpt id="p2">[</bpt><bpt id="p3">**</bpt>Navigate<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br242694)</ept> to throw an app exception if the navigation to the app's initial window frame fails.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  The code here uses the return value of <bpt id="p2">[</bpt><bpt id="p3">**</bpt>Navigate<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br242694)</ept> to throw an app exception if the navigation to the app's initial window frame fails.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>When <bpt id="p1">**</bpt>Navigate<ept id="p1">**</ept> returns <bpt id="p2">**</bpt>true<ept id="p2">**</ept>, the navigation happens.</source>
          <target state="new">When <bpt id="p1">**</bpt>Navigate<ept id="p1">**</ept> returns <bpt id="p2">**</bpt>true<ept id="p2">**</ept>, the navigation happens.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Now, build and run the app.</source>
          <target state="new">Now, build and run the app.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Click the link that says "Click to go to page 2".</source>
          <target state="new">Click the link that says "Click to go to page 2".</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The second page that says "Page 2" at the top should be loaded and displayed in the frame.</source>
          <target state="new">The second page that says "Page 2" at the top should be loaded and displayed in the frame.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Frame and Page classes</source>
          <target state="new">Frame and Page classes</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Before we add more functionality to our app, let's look at how the pages we added provide navigation support for the app.</source>
          <target state="new">Before we add more functionality to our app, let's look at how the pages we added provide navigation support for the app.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>First, a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Frame<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242682)</ept> (<ph id="ph1">`rootFrame`</ph>) is created for the app in the <ph id="ph2">`App.OnLaunched`</ph> method of the App.xaml code-behind file.</source>
          <target state="new">First, a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Frame<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242682)</ept> (<ph id="ph1">`rootFrame`</ph>) is created for the app in the <ph id="ph2">`App.OnLaunched`</ph> method of the App.xaml code-behind file.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Navigate<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242694)</ept> method is used to display content in this <bpt id="p3">**</bpt>Frame<ept id="p3">**</ept>.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Navigate<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242694)</ept> method is used to display content in this <bpt id="p3">**</bpt>Frame<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Note</source>
          <target state="new">Note</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Frame<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242682)</ept> class supports various navigation methods such as <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Navigate<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br242694)</ept>, <bpt id="p5">[</bpt><bpt id="p6">**</bpt>GoBack<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/dn996568)</ept>, and <bpt id="p7">[</bpt><bpt id="p8">**</bpt>GoForward<ept id="p8">**</ept><ept id="p7">](https://msdn.microsoft.com/library/windows/apps/br242693)</ept>, and properties such as <bpt id="p9">[</bpt><bpt id="p10">**</bpt>BackStack<ept id="p10">**</ept><ept id="p9">](https://msdn.microsoft.com/library/windows/apps/dn279543)</ept>, <bpt id="p11">[</bpt><bpt id="p12">**</bpt>ForwardStack<ept id="p12">**</ept><ept id="p11">](https://msdn.microsoft.com/library/windows/apps/dn279547)</ept>, and <bpt id="p13">[</bpt><bpt id="p14">**</bpt>BackStackDepth<ept id="p14">**</ept><ept id="p13">](https://msdn.microsoft.com/library/windows/apps/hh967995)</ept>.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Frame<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242682)</ept> class supports various navigation methods such as <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Navigate<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br242694)</ept>, <bpt id="p5">[</bpt><bpt id="p6">**</bpt>GoBack<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/dn996568)</ept>, and <bpt id="p7">[</bpt><bpt id="p8">**</bpt>GoForward<ept id="p8">**</ept><ept id="p7">](https://msdn.microsoft.com/library/windows/apps/br242693)</ept>, and properties such as <bpt id="p9">[</bpt><bpt id="p10">**</bpt>BackStack<ept id="p10">**</ept><ept id="p9">](https://msdn.microsoft.com/library/windows/apps/dn279543)</ept>, <bpt id="p11">[</bpt><bpt id="p12">**</bpt>ForwardStack<ept id="p12">**</ept><ept id="p11">](https://msdn.microsoft.com/library/windows/apps/dn279547)</ept>, and <bpt id="p13">[</bpt><bpt id="p14">**</bpt>BackStackDepth<ept id="p14">**</ept><ept id="p13">](https://msdn.microsoft.com/library/windows/apps/hh967995)</ept>.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>In our example, <ph id="ph1">`Page1`</ph> is passed to the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Navigate<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242694)</ept> method.</source>
          <target state="new">In our example, <ph id="ph1">`Page1`</ph> is passed to the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Navigate<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242694)</ept> method.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>This method sets the content of the app's current window to the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Frame<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242682)</ept> and loads the content of the page you specify into the <bpt id="p3">**</bpt>Frame<ept id="p3">**</ept> (Page1.xaml in our example, or MainPage.xaml, by default).</source>
          <target state="new">This method sets the content of the app's current window to the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Frame<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242682)</ept> and loads the content of the page you specify into the <bpt id="p3">**</bpt>Frame<ept id="p3">**</ept> (Page1.xaml in our example, or MainPage.xaml, by default).</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>is a subclass of the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Page<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br227503)</ept> class.</source>
          <target state="new">is a subclass of the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Page<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br227503)</ept> class.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Page<ept id="p1">**</ept> class has a read-only <bpt id="p2">[</bpt><bpt id="p3">**</bpt>Frame<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br227504)</ept> property that gets the <bpt id="p4">[</bpt><bpt id="p5">**</bpt>Frame<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/br242682)</ept> containing the <bpt id="p6">**</bpt>Page<ept id="p6">**</ept>.</source>
          <target state="new">The <bpt id="p1">**</bpt>Page<ept id="p1">**</ept> class has a read-only <bpt id="p2">[</bpt><bpt id="p3">**</bpt>Frame<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br227504)</ept> property that gets the <bpt id="p4">[</bpt><bpt id="p5">**</bpt>Frame<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/br242682)</ept> containing the <bpt id="p6">**</bpt>Page<ept id="p6">**</ept>.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>When the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Click<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br227737)</ept> event handler of the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>HyperlinkButton<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br242739)</ept> calls<ph id="ph1">` Frame.Navigate(typeof(Page2))`</ph>, the <bpt id="p5">**</bpt>Frame<ept id="p5">**</ept> in the app's window displays the content of Page2.xaml.</source>
          <target state="new">When the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Click<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br227737)</ept> event handler of the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>HyperlinkButton<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br242739)</ept> calls<ph id="ph1">` Frame.Navigate(typeof(Page2))`</ph>, the <bpt id="p5">**</bpt>Frame<ept id="p5">**</ept> in the app's window displays the content of Page2.xaml.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Whenever a page is loaded into the frame, that page is added as a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PageStackEntry<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn298572)</ept> to the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>BackStack<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn279543)</ept> or <bpt id="p5">[</bpt><bpt id="p6">**</bpt>ForwardStack<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/dn279547)</ept> of the <bpt id="p7">[</bpt><bpt id="p8">**</bpt>Frame<ept id="p8">**</ept><ept id="p7">](https://msdn.microsoft.com/library/windows/apps/br227504)</ept>.</source>
          <target state="new">Whenever a page is loaded into the frame, that page is added as a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PageStackEntry<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn298572)</ept> to the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>BackStack<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn279543)</ept> or <bpt id="p5">[</bpt><bpt id="p6">**</bpt>ForwardStack<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/dn279547)</ept> of the <bpt id="p7">[</bpt><bpt id="p8">**</bpt>Frame<ept id="p8">**</ept><ept id="p7">](https://msdn.microsoft.com/library/windows/apps/br227504)</ept>.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Pass information between pages</source>
          <target state="new">Pass information between pages</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Our app navigates between two pages, but it really doesn't do anything interesting yet.</source>
          <target state="new">Our app navigates between two pages, but it really doesn't do anything interesting yet.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Often, when an app has multiple pages, the pages need to share information.</source>
          <target state="new">Often, when an app has multiple pages, the pages need to share information.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Let's pass some information from the first page to the second page.</source>
          <target state="new">Let's pass some information from the first page to the second page.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>In Page1.xaml, replace the the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>HyperlinkButton<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242739)</ept> you added earlier with the following <bpt id="p3">[</bpt><bpt id="p4">**</bpt>StackPanel<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br209635)</ept>.</source>
          <target state="new">In Page1.xaml, replace the the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>HyperlinkButton<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242739)</ept> you added earlier with the following <bpt id="p3">[</bpt><bpt id="p4">**</bpt>StackPanel<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br209635)</ept>.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Here, we add a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TextBlock<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br209652)</ept> label and a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>TextBox<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br209683)</ept> (<ph id="ph1">`name`</ph>) for entering a text string.</source>
          <target state="new">Here, we add a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TextBlock<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br209652)</ept> label and a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>TextBox<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br209683)</ept> (<ph id="ph1">`name`</ph>) for entering a text string.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">`HyperlinkButton_Click`</ph> event handler of the Page1.xaml code-behind file, add a parameter referencing the <ph id="ph2">`Text`</ph> property of the <ph id="ph3">`name`</ph> <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TextBox<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br209683)</ept> to the <ph id="ph4">`Navigate`</ph> method.</source>
          <target state="new">In the <ph id="ph1">`HyperlinkButton_Click`</ph> event handler of the Page1.xaml code-behind file, add a parameter referencing the <ph id="ph2">`Text`</ph> property of the <ph id="ph3">`name`</ph> <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TextBox<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br209683)</ept> to the <ph id="ph4">`Navigate`</ph> method.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>In the Page2.xaml code-behind file, override the <ph id="ph1">`OnNavigatedTo`</ph> method with the following:</source>
          <target state="new">In the Page2.xaml code-behind file, override the <ph id="ph1">`OnNavigatedTo`</ph> method with the following:</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Run the app, type your name in the text box, and then click the link that says <bpt id="p1">**</bpt>Click to go to page 2<ept id="p1">**</ept>.</source>
          <target state="new">Run the app, type your name in the text box, and then click the link that says <bpt id="p1">**</bpt>Click to go to page 2<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>When you called <ph id="ph1">`this.Frame.Navigate(typeof(Page2), tb1.Text)`</ph> in the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Click<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br227737)</ept> event of the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>HyperlinkButton<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br242739)</ept>, the <ph id="ph2">`name.Text`</ph> property was passed to <ph id="ph3">`Page2`</ph> and the value from the event data is used for the message displayed on the page.</source>
          <target state="new">When you called <ph id="ph1">`this.Frame.Navigate(typeof(Page2), tb1.Text)`</ph> in the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Click<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br227737)</ept> event of the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>HyperlinkButton<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br242739)</ept>, the <ph id="ph2">`name.Text`</ph> property was passed to <ph id="ph3">`Page2`</ph> and the value from the event data is used for the message displayed on the page.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Cache a page</source>
          <target state="new">Cache a page</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Page content and state is not cached by default, you must enable it in each page of your app.</source>
          <target state="new">Page content and state is not cached by default, you must enable it in each page of your app.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>In our basic peer-to-peer example, there is no back button (we demonstrate back navigation in <bpt id="p1">[</bpt>Back button navigation<ept id="p1">](navigation-history-and-backwards-navigation.md)</ept>), but if you did click a back button on <ph id="ph1">`Page2`</ph>, the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>TextBox<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br209683)</ept> (and any other field) on <ph id="ph2">`Page1`</ph> would be set to its default state.</source>
          <target state="new">In our basic peer-to-peer example, there is no back button (we demonstrate back navigation in <bpt id="p1">[</bpt>Back button navigation<ept id="p1">](navigation-history-and-backwards-navigation.md)</ept>), but if you did click a back button on <ph id="ph1">`Page2`</ph>, the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>TextBox<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br209683)</ept> (and any other field) on <ph id="ph2">`Page1`</ph> would be set to its default state.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>One way to work around this is to use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>NavigationCacheMode<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br227506)</ept> property to specify that a page be added to the frame's page cache.</source>
          <target state="new">One way to work around this is to use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>NavigationCacheMode<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br227506)</ept> property to specify that a page be added to the frame's page cache.</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>In the constructor of <ph id="ph1">`Page1`</ph>, set <bpt id="p1">[</bpt><bpt id="p2">**</bpt>NavigationCacheMode<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br227506)</ept> to <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Enabled<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br243284)</ept>.</source>
          <target state="new">In the constructor of <ph id="ph1">`Page1`</ph>, set <bpt id="p1">[</bpt><bpt id="p2">**</bpt>NavigationCacheMode<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br227506)</ept> to <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Enabled<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br243284)</ept>.</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>This retains all content and state values for the page until the page cache for the frame is exceeded.</source>
          <target state="new">This retains all content and state values for the page until the page cache for the frame is exceeded.</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Set <bpt id="p1">[</bpt><bpt id="p2">**</bpt>NavigationCacheMode<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br227506)</ept> to <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Required<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br243284)</ept> if you want to ignore cache size limits for the frame.</source>
          <target state="new">Set <bpt id="p1">[</bpt><bpt id="p2">**</bpt>NavigationCacheMode<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br227506)</ept> to <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Required<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br243284)</ept> if you want to ignore cache size limits for the frame.</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>However, cache size limits might be crucial, depending on the memory limits of a device.</source>
          <target state="new">However, cache size limits might be crucial, depending on the memory limits of a device.</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  The <bpt id="p2">[</bpt><bpt id="p3">**</bpt>CacheSize<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br242683)</ept> property specifies the number of pages in the navigation history that can be cached for the frame.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  The <bpt id="p2">[</bpt><bpt id="p3">**</bpt>CacheSize<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br242683)</ept> property specifies the number of pages in the navigation history that can be cached for the frame.</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Related articles</source>
          <target state="new">Related articles</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Navigation design basics for UWP apps</source>
          <target state="new">Navigation design basics for UWP apps</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Guidelines for tabs and pivots</source>
          <target state="new">Guidelines for tabs and pivots</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Guidelines for navigation panes</source>
          <target state="new">Guidelines for navigation panes</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>