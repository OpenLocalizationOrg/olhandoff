<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-48076a9" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">16ae34742832f17eebb3d8dfbaa08ab57ce9bfb8</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\v-paulj\Windows-driver-docs_develop\avoiding_floating_point_errors_in_custom_build_environments.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Avoiding Floating Point Errors in Custom Build Environments</source>
          <target state="new">Avoiding Floating Point Errors in Custom Build Environments</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This information is intended for developers and build engineers who compile kernel-mode drivers for Windows.</source>
          <target state="new">This information is intended for developers and build engineers who compile kernel-mode drivers for Windows.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>In Microsoft Visual Studio Professional 2012, the default architecture for the Visual C++ (VC++) compiler changed from IA32 to the Streaming SIMD Extensions 2 (SSE2) instruction set.</source>
          <target state="new">In Microsoft Visual Studio Professional 2012, the default architecture for the Visual C++ (VC++) compiler changed from IA32 to the Streaming SIMD Extensions 2 (SSE2) instruction set.</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>As a result of this change, SSE2 floating point (FP) instructions injected into the binary at compile time can generate floating-point errors if not accounted for.</source>
          <target state="new">As a result of this change, SSE2 floating point (FP) instructions injected into the binary at compile time can generate floating-point errors if not accounted for.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The issue can be encountered by those who use the Microsoft VC++ compiler, or a custom build environment to develop Windows drivers.</source>
          <target state="new">The issue can be encountered by those who use the Microsoft VC++ compiler, or a custom build environment to develop Windows drivers.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>However, the issue does not affect developers who use the Microsoft Visual Studio development environment, or who use the MSbuild utility to build drivers with an unmodified toolset.</source>
          <target state="new">However, the issue does not affect developers who use the Microsoft Visual Studio development environment, or who use the MSbuild utility to build drivers with an unmodified toolset.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Floating point errors can cause data corruption or computer crashes</source>
          <target state="new">Floating point errors can cause data corruption or computer crashes</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>If you compile a driver <bpt id="p1">*</bpt>without<ept id="p1">*</ept> using the WDK, Visual Studio, and the recommended platform toolset for Windows drivers (<bpt id="p2">**</bpt>WindowsKernelModeDriver8.0<ept id="p2">**</ept>), the driver might not manage floating point operations correctly, even if the driver compiles without errors.</source>
          <target state="new">If you compile a driver <bpt id="p1">*</bpt>without<ept id="p1">*</ept> using the WDK, Visual Studio, and the recommended platform toolset for Windows drivers (<bpt id="p2">**</bpt>WindowsKernelModeDriver8.0<ept id="p2">**</ept>), the driver might not manage floating point operations correctly, even if the driver compiles without errors.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The Visual Studio Professional 2012 VC++ compiler emits code that uses the SSE2 instruction set by setting the <bpt id="p1">**</bpt>/arch:sse2<ept id="p1">**</ept> compiler option.</source>
          <target state="new">The Visual Studio Professional 2012 VC++ compiler emits code that uses the SSE2 instruction set by setting the <bpt id="p1">**</bpt>/arch:sse2<ept id="p1">**</ept> compiler option.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Starting with Visual Studio Professional 2012, this is the default option for x86 VC++ compiler code generation.</source>
          <target state="new">Starting with Visual Studio Professional 2012, this is the default option for x86 VC++ compiler code generation.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Specifically, the default value changes from <bpt id="p1">**</bpt>/arch:ia32<ept id="p1">**</ept> to <bpt id="p2">**</bpt>/arch:sse2<ept id="p2">**</ept>.</source>
          <target state="new">Specifically, the default value changes from <bpt id="p1">**</bpt>/arch:ia32<ept id="p1">**</ept> to <bpt id="p2">**</bpt>/arch:sse2<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For applications this change generates code that performs better and uses less processor time during execution.</source>
          <target state="new">For applications this change generates code that performs better and uses less processor time during execution.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>However, for kernel-mode drivers this change will not manage the floating point (FP) state properly.</source>
          <target state="new">However, for kernel-mode drivers this change will not manage the floating point (FP) state properly.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This is due to the VC++ compiler introducing FP instruction sequences in places where the context has not been saved.</source>
          <target state="new">This is due to the VC++ compiler introducing FP instruction sequences in places where the context has not been saved.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Any binary floating-point system can represent only a finite number of floating-point values in exact form, with the rest being approximations.</source>
          <target state="new">Any binary floating-point system can represent only a finite number of floating-point values in exact form, with the rest being approximations.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The floating-point control state, such as, rounding mode or precision, is what keeps FP operations in sync with each other.</source>
          <target state="new">The floating-point control state, such as, rounding mode or precision, is what keeps FP operations in sync with each other.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>When the state is undefined, this leads to FP calculation errors.</source>
          <target state="new">When the state is undefined, this leads to FP calculation errors.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>These calculation errors are hard to detect because in most cases application state corruption is the only sign of this issue.</source>
          <target state="new">These calculation errors are hard to detect because in most cases application state corruption is the only sign of this issue.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This corruption can manifest itself in many ways, ranging from random crashes to data corruption.</source>
          <target state="new">This corruption can manifest itself in many ways, ranging from random crashes to data corruption.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Solution</source>
          <target state="new">Solution</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>To avoid these problem with floating-point calculations, add the <bpt id="p1">**</bpt>/kernel<ept id="p1">**</ept> flag to the C++ compiler and linker command lines to prevent generating SSE2 instructions.</source>
          <target state="new">To avoid these problem with floating-point calculations, add the <bpt id="p1">**</bpt>/kernel<ept id="p1">**</ept> flag to the C++ compiler and linker command lines to prevent generating SSE2 instructions.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>/kernel<ept id="p1">**</ept> flag changes the default <bpt id="p2">**</bpt>/arch:sse2<ept id="p2">**</ept> value back to <bpt id="p3">**</bpt>/arch:ia32<ept id="p3">**</ept>.</source>
          <target state="new">The <bpt id="p1">**</bpt>/kernel<ept id="p1">**</ept> flag changes the default <bpt id="p2">**</bpt>/arch:sse2<ept id="p2">**</ept> value back to <bpt id="p3">**</bpt>/arch:ia32<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>In addition, if you build a driver using the WDK and the Visual Studio Professional 2012 development environment, or use MSBuild, in a Visual Studio Command prompt window, the Microsoft provided platform toolset (<bpt id="p1">**</bpt>WindowsKernelModeDriver8.0<ept id="p1">**</ept>) sets the <bpt id="p2">**</bpt>/kernel<ept id="p2">**</ept> flag.</source>
          <target state="new">In addition, if you build a driver using the WDK and the Visual Studio Professional 2012 development environment, or use MSBuild, in a Visual Studio Command prompt window, the Microsoft provided platform toolset (<bpt id="p1">**</bpt>WindowsKernelModeDriver8.0<ept id="p1">**</ept>) sets the <bpt id="p2">**</bpt>/kernel<ept id="p2">**</ept> flag.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>As a result, floating-point generation errors are avoided.</source>
          <target state="new">As a result, floating-point generation errors are avoided.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Recommendations</source>
          <target state="new">Recommendations</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Here are the recommended solutions based on the type of development environment you use:</source>
          <target state="new">Here are the recommended solutions based on the type of development environment you use:</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Microsoft tool set (MSBuild)<ept id="p1">**</ept> - No work required.</source>
          <target state="new"><bpt id="p1">**</bpt>Microsoft tool set (MSBuild)<ept id="p1">**</ept> - No work required.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Use <bpt id="p1">**</bpt>WindowsKernelModeDriver8.0<ept id="p1">**</ept> as the platform toolset the <bpt id="p2">**</bpt>/kernel<ept id="p2">**</ept> is automatically added where appropriate.</source>
          <target state="new">Use <bpt id="p1">**</bpt>WindowsKernelModeDriver8.0<ept id="p1">**</ept> as the platform toolset the <bpt id="p2">**</bpt>/kernel<ept id="p2">**</ept> is automatically added where appropriate.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Microsoft VC++ Compiler<ept id="p1">**</ept> - Add the <bpt id="p2">**</bpt>/kernel<ept id="p2">**</ept> flag to prevent compiler from emitting SSE2.</source>
          <target state="new"><bpt id="p1">**</bpt>Microsoft VC++ Compiler<ept id="p1">**</ept> - Add the <bpt id="p2">**</bpt>/kernel<ept id="p2">**</ept> flag to prevent compiler from emitting SSE2.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Custom Tooling/Non-Microsoft Compiler<ept id="p1">**</ept> - You must manually account for the assembly instructions used in the resulting binary.</source>
          <target state="new"><bpt id="p1">**</bpt>Custom Tooling/Non-Microsoft Compiler<ept id="p1">**</ept> - You must manually account for the assembly instructions used in the resulting binary.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Send comments about this topic to Microsoft<ept id="p1">]</ept><bpt id="p2">(mailto:wsddocfb@microsoft.com?subject=Documentation%20feedback%20[VsDriver\vsdriver]:%20Avoiding%20Floating%20Point%20Errors%20in%20Custom%20Build%20Environments%20%20RELEASE:%20%289/30/2015%29&amp;body=%0A%0APRIVACY%20STATEMENT%0A%0AWe%20use%20your%20feedback%20to%20improve%20the%20documentation.%20We%20don't%20use%20your%20email%20address%20for%20any%20other%20purpose,%20and%20we'll%20remove%20your%20email%20address%20from%20our%20system%20after%20the%20issue%20that%20you're%20reporting%20is%20fixed.%20While%20we're%20working%20to%20fix%20this%20issue,%20we%20might%20send%20you%20an%20email%20message%20to%20ask%20for%20more%20info.%20Later,%20we%20might%20also%20send%20you%20an%20email%20message%20to%20let%20you%20know%20that%20we've%20addressed%20your%20feedback.%0A%0AFor%20more%20info%20about%20Microsoft's%20privacy%20policy,%20see%20http://privacy.microsoft.com/en-us/default. "</bpt>Send comments about this topic to Microsoft<ept id="p2">")</ept></source>
          <target state="new"><bpt id="p1">[</bpt>Send comments about this topic to Microsoft<ept id="p1">]</ept><bpt id="p2">(mailto:wsddocfb@microsoft.com?subject=Documentation%20feedback%20[VsDriver\vsdriver]:%20Avoiding%20Floating%20Point%20Errors%20in%20Custom%20Build%20Environments%20%20RELEASE:%20%289/30/2015%29&amp;body=%0A%0APRIVACY%20STATEMENT%0A%0AWe%20use%20your%20feedback%20to%20improve%20the%20documentation.%20We%20don't%20use%20your%20email%20address%20for%20any%20other%20purpose,%20and%20we'll%20remove%20your%20email%20address%20from%20our%20system%20after%20the%20issue%20that%20you're%20reporting%20is%20fixed.%20While%20we're%20working%20to%20fix%20this%20issue,%20we%20might%20send%20you%20an%20email%20message%20to%20ask%20for%20more%20info.%20Later,%20we%20might%20also%20send%20you%20an%20email%20message%20to%20let%20you%20know%20that%20we've%20addressed%20your%20feedback.%0A%0AFor%20more%20info%20about%20Microsoft's%20privacy%20policy,%20see%20http://privacy.microsoft.com/en-us/default. "</bpt>Send comments about this topic to Microsoft<ept id="p2">")</ept></target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>