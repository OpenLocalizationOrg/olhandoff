<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-48076a9" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">42a467217a899c25bab315314763b2ba6d7ac77a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci1\porting\w8x-to-uwp-case-study-bookstore1.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>ms.assetid: e4582717-afb5-4cde-86bb-31fb1c5fc8f3 description: This topic presents a case study of porting a very simple Universal 8.1 app to a Windows 10&amp;\#160;Universal Windows Platform (UWP) app.</source>
          <target state="new">ms.assetid: e4582717-afb5-4cde-86bb-31fb1c5fc8f3 description: This topic presents a case study of porting a very simple Universal 8.1 app to a Windows 10&amp;\#160;Universal Windows Platform (UWP) app.</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>title: Windows Runtime 8.x to UWP case study: Bookstore1</source>
          <target state="new">title: Windows Runtime 8.x to UWP case study: Bookstore1</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Windows Runtime 8.x to UWP case study: Bookstore1</source>
          <target state="new">Windows Runtime 8.x to UWP case study: Bookstore1</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>\[ Updated for UWP apps on Windows 10.</source>
          <target state="new">\[ Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This topic presents a case study of porting a very simple Universal 8.1 app to a Windows 10 Universal Windows Platform (UWP) app.</source>
          <target state="new">This topic presents a case study of porting a very simple Universal 8.1 app to a Windows 10 Universal Windows Platform (UWP) app.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>A Universal 8.1 app is one that builds one app package for Windows 8.1, and a different app package for Windows Phone 8.1.</source>
          <target state="new">A Universal 8.1 app is one that builds one app package for Windows 8.1, and a different app package for Windows Phone 8.1.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>With Windows 10, you can create a single app package that your customers can install onto a wide range of devices, and that's what we'll do in this case study.</source>
          <target state="new">With Windows 10, you can create a single app package that your customers can install onto a wide range of devices, and that's what we'll do in this case study.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Guide to UWP apps<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn894631)</ept>.</source>
          <target state="new">See <bpt id="p1">[</bpt>Guide to UWP apps<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn894631)</ept>.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The app we'll port consists of a <bpt id="p1">**</bpt>ListBox<ept id="p1">**</ept> bound to a view model.</source>
          <target state="new">The app we'll port consists of a <bpt id="p1">**</bpt>ListBox<ept id="p1">**</ept> bound to a view model.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The view model has a list of books that shows title, author, and book cover.</source>
          <target state="new">The view model has a list of books that shows title, author, and book cover.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The book cover images have <bpt id="p1">**</bpt>Build Action<ept id="p1">**</ept> set to <bpt id="p2">**</bpt>Content<ept id="p2">**</ept> and <bpt id="p3">**</bpt>Copy to Output Directory<ept id="p3">**</ept> set to <bpt id="p4">**</bpt>Do not copy<ept id="p4">**</ept>.</source>
          <target state="new">The book cover images have <bpt id="p1">**</bpt>Build Action<ept id="p1">**</ept> set to <bpt id="p2">**</bpt>Content<ept id="p2">**</ept> and <bpt id="p3">**</bpt>Copy to Output Directory<ept id="p3">**</ept> set to <bpt id="p4">**</bpt>Do not copy<ept id="p4">**</ept>.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The previous topics in this section describe the differences between the platforms, and they give details and guidance on the porting process for various aspects of an app from XAML markup, through binding to a view model, down to accessing data.</source>
          <target state="new">The previous topics in this section describe the differences between the platforms, and they give details and guidance on the porting process for various aspects of an app from XAML markup, through binding to a view model, down to accessing data.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A case study aims to complement that guidance by showing it in action in a real example.</source>
          <target state="new">A case study aims to complement that guidance by showing it in action in a real example.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The case studies assume you've read the guidance, which they do not repeat.</source>
          <target state="new">The case studies assume you've read the guidance, which they do not repeat.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>   When opening Bookstore1Universal\_10 in Visual Studio, if you see the message "Visual Studio update required", then follow the steps in <bpt id="p2">[</bpt>TargetPlatformVersion<ept id="p2">](w8x-to-uwp-troubleshooting.md#targetplatformversion)</ept>.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>   When opening Bookstore1Universal\_10 in Visual Studio, if you see the message "Visual Studio update required", then follow the steps in <bpt id="p2">[</bpt>TargetPlatformVersion<ept id="p2">](w8x-to-uwp-troubleshooting.md#targetplatformversion)</ept>.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Downloads</source>
          <target state="new">Downloads</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Download the Bookstore1\_81 Universal 8.1 app<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=532946)</ept>.</source>
          <target state="new"><bpt id="p1">[</bpt>Download the Bookstore1\_81 Universal 8.1 app<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=532946)</ept>.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Download the Bookstore1Universal\_10 Windows 10 app<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=532950)</ept>.</source>
          <target state="new"><bpt id="p1">[</bpt>Download the Bookstore1Universal\_10 Windows 10 app<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=532950)</ept>.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The Universal 8.1 app</source>
          <target state="new">The Universal 8.1 app</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Here’s what Bookstore1\_81—the app that we're going to port—looks like.</source>
          <target state="new">Here’s what Bookstore1\_81—the app that we're going to port—looks like.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>It's just a vertically-scrolling list box of books beneath the heading of the app's name and page title.</source>
          <target state="new">It's just a vertically-scrolling list box of books beneath the heading of the app's name and page title.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>how bookstore1\-81 looks on windows</source>
          <target state="new">how bookstore1\-81 looks on windows</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Bookstore1\_81 on Windows</source>
          <target state="new">Bookstore1\_81 on Windows</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>how bookstore1\-81 looks on windows phone</source>
          <target state="new">how bookstore1\-81 looks on windows phone</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Bookstore1\_81 on Windows Phone</source>
          <target state="new">Bookstore1\_81 on Windows Phone</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Porting to a Windows 10 project</source>
          <target state="new">Porting to a Windows 10 project</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The Bookstore1\_81 solution is an 8.1 Universal App project, and it contains these projects.</source>
          <target state="new">The Bookstore1\_81 solution is an 8.1 Universal App project, and it contains these projects.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Bookstore1\_81.Windows.</source>
          <target state="new">Bookstore1\_81.Windows.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This is the project that builds the app package for Windows 8.1.</source>
          <target state="new">This is the project that builds the app package for Windows 8.1.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Bookstore1\_81.WindowsPhone.</source>
          <target state="new">Bookstore1\_81.WindowsPhone.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This is the project that builds the app package for Windows Phone 8.1.</source>
          <target state="new">This is the project that builds the app package for Windows Phone 8.1.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Bookstore1\_81.Shared.</source>
          <target state="new">Bookstore1\_81.Shared.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This is the project that contains source code, markup files, and other assets and resources, that are used by both of the other two projects.</source>
          <target state="new">This is the project that contains source code, markup files, and other assets and resources, that are used by both of the other two projects.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>For this case study, we have the usual options described in <bpt id="p1">[</bpt>If you have a Universal 8.1 app<ept id="p1">](w8x-to-uwp-root.md#if-you-have-an-81-universal-windows-app)</ept> with respect to what devices to support.</source>
          <target state="new">For this case study, we have the usual options described in <bpt id="p1">[</bpt>If you have a Universal 8.1 app<ept id="p1">](w8x-to-uwp-root.md#if-you-have-an-81-universal-windows-app)</ept> with respect to what devices to support.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The decision here is a simple one: this app has the same features, and does so mostly with the same code, in both its Windows 8.1 and Windows Phone 8.1 forms.</source>
          <target state="new">The decision here is a simple one: this app has the same features, and does so mostly with the same code, in both its Windows 8.1 and Windows Phone 8.1 forms.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>So, we'll port the contents of the Shared project (and anything else we need from the other projects) to a Windows 10 that targets the Universal device family (one that you can install onto the widest range of devices).</source>
          <target state="new">So, we'll port the contents of the Shared project (and anything else we need from the other projects) to a Windows 10 that targets the Universal device family (one that you can install onto the widest range of devices).</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>It's a very quick task to create a new project in Visual Studio, copy files over to it from Bookstore1\_81, and include the copied files in the new project.</source>
          <target state="new">It's a very quick task to create a new project in Visual Studio, copy files over to it from Bookstore1\_81, and include the copied files in the new project.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Start by creating a new Blank Application (Windows Universal) project.</source>
          <target state="new">Start by creating a new Blank Application (Windows Universal) project.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Name it Bookstore1Universal\_10.</source>
          <target state="new">Name it Bookstore1Universal\_10.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>These are the files to copy over from Bookstore1\_81 to Bookstore1Universal\_10.</source>
          <target state="new">These are the files to copy over from Bookstore1\_81 to Bookstore1Universal\_10.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>From the Shared project</source>
          <target state="new">From the Shared project</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Copy the folder containing the book cover image PNG files (the folder is \\Assets\\CoverImages).</source>
          <target state="new">Copy the folder containing the book cover image PNG files (the folder is \\Assets\\CoverImages).</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>After copying the folder, in <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, make sure <bpt id="p2">**</bpt>Show All Files<ept id="p2">**</ept> is toggled on.</source>
          <target state="new">After copying the folder, in <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, make sure <bpt id="p2">**</bpt>Show All Files<ept id="p2">**</ept> is toggled on.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Right-click the folder that you copied and click <bpt id="p1">**</bpt>Include In Project<ept id="p1">**</ept>.</source>
          <target state="new">Right-click the folder that you copied and click <bpt id="p1">**</bpt>Include In Project<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>That command is what we mean by "including" files or folders in a project.</source>
          <target state="new">That command is what we mean by "including" files or folders in a project.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Each time you copy a file or folder, each copy, click <bpt id="p1">**</bpt>Refresh<ept id="p1">**</ept> in <bpt id="p2">**</bpt>Solution Explorer<ept id="p2">**</ept> and then include the file or folder in the project.</source>
          <target state="new">Each time you copy a file or folder, each copy, click <bpt id="p1">**</bpt>Refresh<ept id="p1">**</ept> in <bpt id="p2">**</bpt>Solution Explorer<ept id="p2">**</ept> and then include the file or folder in the project.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>There's no need to do this for files that you're replacing in the destination.</source>
          <target state="new">There's no need to do this for files that you're replacing in the destination.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Copy the folder containing the view model source file (the folder is \\ViewModel).</source>
          <target state="new">Copy the folder containing the view model source file (the folder is \\ViewModel).</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Copy MainPage.xaml and replace the file in the destination.</source>
          <target state="new">Copy MainPage.xaml and replace the file in the destination.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>From the Windows project</source>
          <target state="new">From the Windows project</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Copy BookstoreStyles.xaml.</source>
          <target state="new">Copy BookstoreStyles.xaml.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>We'll use this one as a good starting-point because all the resource keys in this file will resolve in a Windows 10 app; some of those in the equivalent WindowsPhone file will not.</source>
          <target state="new">We'll use this one as a good starting-point because all the resource keys in this file will resolve in a Windows 10 app; some of those in the equivalent WindowsPhone file will not.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Edit the source code and markup files that you just copied and change any references to the Bookstore1\_81 namespace to Bookstore1Universal\_10.</source>
          <target state="new">Edit the source code and markup files that you just copied and change any references to the Bookstore1\_81 namespace to Bookstore1Universal\_10.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>A quick way to do that is to use the <bpt id="p1">**</bpt>Replace In Files<ept id="p1">**</ept> feature.</source>
          <target state="new">A quick way to do that is to use the <bpt id="p1">**</bpt>Replace In Files<ept id="p1">**</ept> feature.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>No code changes are needed in the view model, nor in any other imperative code.</source>
          <target state="new">No code changes are needed in the view model, nor in any other imperative code.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>But, just to make it easier to see which version of the app is running, change the value returned by the <bpt id="p1">**</bpt>Bookstore1Universal\_10.BookstoreViewModel.AppName<ept id="p1">**</ept> property from "BOOKSTORE1\_81" to "BOOKSTORE1UNIVERSAL\_10".</source>
          <target state="new">But, just to make it easier to see which version of the app is running, change the value returned by the <bpt id="p1">**</bpt>Bookstore1Universal\_10.BookstoreViewModel.AppName<ept id="p1">**</ept> property from "BOOKSTORE1\_81" to "BOOKSTORE1UNIVERSAL\_10".</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Right now, you can build and run.</source>
          <target state="new">Right now, you can build and run.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Here's how our new UWP app looks after having done no explicit work yet to port it to Windows 10.</source>
          <target state="new">Here's how our new UWP app looks after having done no explicit work yet to port it to Windows 10.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>the windows 10 app with initial source code changes</source>
          <target state="new">the windows 10 app with initial source code changes</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The Windows 10 app with initial source code changes running on a Desktop device</source>
          <target state="new">The Windows 10 app with initial source code changes running on a Desktop device</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>the windows 10 app with initial source code changes</source>
          <target state="new">the windows 10 app with initial source code changes</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The Windows 10 app with initial source code changes running on a Mobile device</source>
          <target state="new">The Windows 10 app with initial source code changes running on a Mobile device</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The view and the view model are working together correctly, and the <bpt id="p1">**</bpt>ListBox<ept id="p1">**</ept> is functioning.</source>
          <target state="new">The view and the view model are working together correctly, and the <bpt id="p1">**</bpt>ListBox<ept id="p1">**</ept> is functioning.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>We just need to fix the styling.</source>
          <target state="new">We just need to fix the styling.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>On a Mobile device, in light theme, we can see the border of the list box, but that will be easy to hide.</source>
          <target state="new">On a Mobile device, in light theme, we can see the border of the list box, but that will be easy to hide.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>And, the typography is too big, so we'll change the styles we're using.</source>
          <target state="new">And, the typography is too big, so we'll change the styles we're using.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Also, the app should be light in color when running on a Desktop device if we want it to look like the default.</source>
          <target state="new">Also, the app should be light in color when running on a Desktop device if we want it to look like the default.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>So, we'll change that.</source>
          <target state="new">So, we'll change that.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Universal styling</source>
          <target state="new">Universal styling</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The Bookstore1\_81 app used two different resource dictionaries (BookstoreStyles.xaml) to tailor its styles to the Windows 8.1 and Windows Phone 8.1 operating systems.</source>
          <target state="new">The Bookstore1\_81 app used two different resource dictionaries (BookstoreStyles.xaml) to tailor its styles to the Windows 8.1 and Windows Phone 8.1 operating systems.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Neither of those two BookstoreStyles.xaml files contains exactly the styles we need for our Windows 10 app.</source>
          <target state="new">Neither of those two BookstoreStyles.xaml files contains exactly the styles we need for our Windows 10 app.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>But, the good news is that what we want is actually much simpler than either of them.</source>
          <target state="new">But, the good news is that what we want is actually much simpler than either of them.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>So, the next steps will mostly involve removing and simplifying our project files and markup.</source>
          <target state="new">So, the next steps will mostly involve removing and simplifying our project files and markup.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The steps are below.</source>
          <target state="new">The steps are below.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>And you can use the links at the top of this topic to download the projects and see the results of all the changes between here and the end of the case study.</source>
          <target state="new">And you can use the links at the top of this topic to download the projects and see the results of all the changes between here and the end of the case study.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>To tighten up the spacing between items, find the <ph id="ph1">`BookTemplate`</ph> data template in MainPage.xaml and delete the <ph id="ph2">`Margin="0,0,0,8"`</ph> from the root <bpt id="p1">**</bpt>Grid<ept id="p1">**</ept>.</source>
          <target state="new">To tighten up the spacing between items, find the <ph id="ph1">`BookTemplate`</ph> data template in MainPage.xaml and delete the <ph id="ph2">`Margin="0,0,0,8"`</ph> from the root <bpt id="p1">**</bpt>Grid<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Also, in <ph id="ph1">`BookTemplate`</ph>, there are references to <ph id="ph2">`BookTemplateTitleTextBlockStyle`</ph> and <ph id="ph3">`BookTemplateAuthorTextBlockStyle`</ph>.</source>
          <target state="new">Also, in <ph id="ph1">`BookTemplate`</ph>, there are references to <ph id="ph2">`BookTemplateTitleTextBlockStyle`</ph> and <ph id="ph3">`BookTemplateAuthorTextBlockStyle`</ph>.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Bookstore1\_81 used those keys as an indirection so that a single key had different implementations in the two apps.</source>
          <target state="new">Bookstore1\_81 used those keys as an indirection so that a single key had different implementations in the two apps.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>We don't need that indirection any more; we can just reference system styles directly.</source>
          <target state="new">We don't need that indirection any more; we can just reference system styles directly.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>So, replace those references with <ph id="ph1">`TitleTextBlockStyle`</ph> and <ph id="ph2">`SubtitleTextBlockStyle`</ph>, respectively.</source>
          <target state="new">So, replace those references with <ph id="ph1">`TitleTextBlockStyle`</ph> and <ph id="ph2">`SubtitleTextBlockStyle`</ph>, respectively.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Now, we need to set <ph id="ph1">`LayoutRoot`</ph>'s Background to the correct default value so that the app looks appropriate when running on all devices no matter what the theme is.</source>
          <target state="new">Now, we need to set <ph id="ph1">`LayoutRoot`</ph>'s Background to the correct default value so that the app looks appropriate when running on all devices no matter what the theme is.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Change it from <ph id="ph1">`"Transparent"`</ph> to <ph id="ph2">`"{ThemeResource ApplicationPageBackgroundThemeBrush}"`</ph>.</source>
          <target state="new">Change it from <ph id="ph1">`"Transparent"`</ph> to <ph id="ph2">`"{ThemeResource ApplicationPageBackgroundThemeBrush}"`</ph>.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">`TitlePanel`</ph>, change the reference to <ph id="ph2">`TitleTextBlockStyle`</ph> (which is now a little too big) to a reference to <ph id="ph3">`CaptionTextBlockStyle`</ph>.</source>
          <target state="new">In <ph id="ph1">`TitlePanel`</ph>, change the reference to <ph id="ph2">`TitleTextBlockStyle`</ph> (which is now a little too big) to a reference to <ph id="ph3">`CaptionTextBlockStyle`</ph>.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>is another Bookstore1\_81 indirection that we don't need any longer.</source>
          <target state="new">is another Bookstore1\_81 indirection that we don't need any longer.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Change that to reference <ph id="ph1">`HeaderTextBlockStyle`</ph> instead.</source>
          <target state="new">Change that to reference <ph id="ph1">`HeaderTextBlockStyle`</ph> instead.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>We no longer need to set any special Background, Style, nor ItemContainerStyle on the <bpt id="p1">**</bpt>ListBox<ept id="p1">**</ept>, so just delete those three attributes and their values from the markup.</source>
          <target state="new">We no longer need to set any special Background, Style, nor ItemContainerStyle on the <bpt id="p1">**</bpt>ListBox<ept id="p1">**</ept>, so just delete those three attributes and their values from the markup.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>We do want to hide the border of the <bpt id="p1">**</bpt>ListBox<ept id="p1">**</ept>, though, so add <ph id="ph1">`BorderBrush="{x:Null}"`</ph> to it.</source>
          <target state="new">We do want to hide the border of the <bpt id="p1">**</bpt>ListBox<ept id="p1">**</ept>, though, so add <ph id="ph1">`BorderBrush="{x:Null}"`</ph> to it.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>We're not referencing any of the resources in the BookstoreStyles.xaml <bpt id="p1">**</bpt>ResourceDictionary<ept id="p1">**</ept> file any longer.</source>
          <target state="new">We're not referencing any of the resources in the BookstoreStyles.xaml <bpt id="p1">**</bpt>ResourceDictionary<ept id="p1">**</ept> file any longer.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>You can delete all of those resources.</source>
          <target state="new">You can delete all of those resources.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>But, don't delete the BookstoreStyles.xaml file itself: we still have one last use for it, as you'll see in the next section.</source>
          <target state="new">But, don't delete the BookstoreStyles.xaml file itself: we still have one last use for it, as you'll see in the next section.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>That last sequence of styling operations leaves the app looking like this.</source>
          <target state="new">That last sequence of styling operations leaves the app looking like this.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>the almost-ported windows 10 app</source>
          <target state="new">the almost-ported windows 10 app</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The almost-ported Windows 10 app running on a Desktop device</source>
          <target state="new">The almost-ported Windows 10 app running on a Desktop device</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>the almost-ported windows 10 app</source>
          <target state="new">the almost-ported windows 10 app</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The almost-ported Windows 10 app running on a Mobile device</source>
          <target state="new">The almost-ported Windows 10 app running on a Mobile device</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>An optional adjustment to the list box for Mobile devices</source>
          <target state="new">An optional adjustment to the list box for Mobile devices</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>When the app is running on a Mobile device, the background of a list box is light by default in both themes.</source>
          <target state="new">When the app is running on a Mobile device, the background of a list box is light by default in both themes.</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>That may be the style that you prefer and, if so, then there's nothing more to do except to tidy up: delete the BookstoreStyles.xaml resource dictionary file from your project, and remove the markup that merges it into MainPage.xaml.</source>
          <target state="new">That may be the style that you prefer and, if so, then there's nothing more to do except to tidy up: delete the BookstoreStyles.xaml resource dictionary file from your project, and remove the markup that merges it into MainPage.xaml.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>But, controls are designed so that you can customize their look while leaving their behavior unaffected.</source>
          <target state="new">But, controls are designed so that you can customize their look while leaving their behavior unaffected.</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>So, if you want the list box to be dark in the dark theme—the way the original app looked—then this section describes a way to do that.</source>
          <target state="new">So, if you want the list box to be dark in the dark theme—the way the original app looked—then this section describes a way to do that.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The change we make only needs to affect the app when it's running on Mobile devices.</source>
          <target state="new">The change we make only needs to affect the app when it's running on Mobile devices.</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>So, we'll use a very slightly customized list box style when we're running on the Mobile device family, and we'll continue to use the default style when we're running everywhere else.</source>
          <target state="new">So, we'll use a very slightly customized list box style when we're running on the Mobile device family, and we'll continue to use the default style when we're running everywhere else.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>To do that, we'll make a copy of BookstoreStyles.xaml and we'll give it a special MRT-qualified name, which will cause it to be loaded only on Mobile devices.</source>
          <target state="new">To do that, we'll make a copy of BookstoreStyles.xaml and we'll give it a special MRT-qualified name, which will cause it to be loaded only on Mobile devices.</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Add a new <bpt id="p1">**</bpt>ResourceDictionary<ept id="p1">**</ept> project item and name it BookstoreStyles.DeviceFamily-Mobile.xaml.</source>
          <target state="new">Add a new <bpt id="p1">**</bpt>ResourceDictionary<ept id="p1">**</ept> project item and name it BookstoreStyles.DeviceFamily-Mobile.xaml.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>You now have two files both of whose logical name is BookstoreStyles.xaml (and that's the name you use in your markup and code).</source>
          <target state="new">You now have two files both of whose logical name is BookstoreStyles.xaml (and that's the name you use in your markup and code).</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The files have different physical names, though, so they can contain different markup.</source>
          <target state="new">The files have different physical names, though, so they can contain different markup.</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>You can use this MRT-qualified naming scheme with any xaml file, but be aware that all xaml files with the same logical name share a single xaml.cs code-behind file (where one is applicable).</source>
          <target state="new">You can use this MRT-qualified naming scheme with any xaml file, but be aware that all xaml files with the same logical name share a single xaml.cs code-behind file (where one is applicable).</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Edit a copy of the control template for the list box and store that with the key of <ph id="ph1">`BookstoreListBoxStyle`</ph> in the new resource dictionary, BookstoreStyles.DeviceFamily-Mobile.xaml.</source>
          <target state="new">Edit a copy of the control template for the list box and store that with the key of <ph id="ph1">`BookstoreListBoxStyle`</ph> in the new resource dictionary, BookstoreStyles.DeviceFamily-Mobile.xaml.</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Now, we'll make simple changes to three of the setters.</source>
          <target state="new">Now, we'll make simple changes to three of the setters.</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>In the Foreground setter, change the value to <ph id="ph1">`"{x:Null}"`</ph>.</source>
          <target state="new">In the Foreground setter, change the value to <ph id="ph1">`"{x:Null}"`</ph>.</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Note that setting a property to <ph id="ph1">`"{x:Null}"`</ph> directly on an element is the same as setting it to <ph id="ph2">`null`</ph> in code.</source>
          <target state="new">Note that setting a property to <ph id="ph1">`"{x:Null}"`</ph> directly on an element is the same as setting it to <ph id="ph2">`null`</ph> in code.</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>But, using a value of <ph id="ph1">`"{x:Null}"`</ph> in a setter has a unique effect: it overrides the setter in the default style (for the same property) and restores the default value of the property on the target element.</source>
          <target state="new">But, using a value of <ph id="ph1">`"{x:Null}"`</ph> in a setter has a unique effect: it overrides the setter in the default style (for the same property) and restores the default value of the property on the target element.</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>In the Background setter, change the value to <ph id="ph1">`"Transparent"`</ph> to remove that light background.</source>
          <target state="new">In the Background setter, change the value to <ph id="ph1">`"Transparent"`</ph> to remove that light background.</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>In the Template setter, find the visual state named <ph id="ph1">`Focused`</ph> and delete its Storyboard, making it into an empty tag.</source>
          <target state="new">In the Template setter, find the visual state named <ph id="ph1">`Focused`</ph> and delete its Storyboard, making it into an empty tag.</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Delete all the other setters from the markup.</source>
          <target state="new">Delete all the other setters from the markup.</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Finally, copy <ph id="ph1">`BookstoreListBoxStyle`</ph> into BookstoreStyles.xaml and delete its three setters, making it into an empty tag.</source>
          <target state="new">Finally, copy <ph id="ph1">`BookstoreListBoxStyle`</ph> into BookstoreStyles.xaml and delete its three setters, making it into an empty tag.</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>We do this so that on devices other than Mobile ones, our reference to BookstoreStyles.xaml and to <ph id="ph1">`BookstoreListBoxStyle`</ph> will resolve, but will have no effect.</source>
          <target state="new">We do this so that on devices other than Mobile ones, our reference to BookstoreStyles.xaml and to <ph id="ph1">`BookstoreListBoxStyle`</ph> will resolve, but will have no effect.</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>the ported windows 10 app</source>
          <target state="new">the ported windows 10 app</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The ported Windows 10 app running on a Mobile device</source>
          <target state="new">The ported Windows 10 app running on a Mobile device</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Conclusion</source>
          <target state="new">Conclusion</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>This case study showed the process of porting a very simple app—arguably an unrealistically simple one.</source>
          <target state="new">This case study showed the process of porting a very simple app—arguably an unrealistically simple one.</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>For instance, a list box can be used for selection or for establishing a context for navigation; the app navigates to a page with more details about the item that was tapped.</source>
          <target state="new">For instance, a list box can be used for selection or for establishing a context for navigation; the app navigates to a page with more details about the item that was tapped.</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>This particular app does nothing with the user's selection, and it has no navigation.</source>
          <target state="new">This particular app does nothing with the user's selection, and it has no navigation.</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Even so, the case study served to break the ice, to introduce the porting process, and to demonstrate important techniques that you can use in real UWP apps.</source>
          <target state="new">Even so, the case study served to break the ice, to introduce the porting process, and to demonstrate important techniques that you can use in real UWP apps.</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>We also saw evidence that porting view models is generally a smooth process.</source>
          <target state="new">We also saw evidence that porting view models is generally a smooth process.</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>User interface, and form factor support, are aspects that are more likely to require our attention when porting.</source>
          <target state="new">User interface, and form factor support, are aspects that are more likely to require our attention when porting.</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The next case study is <bpt id="p1">[</bpt>Bookstore2<ept id="p1">](w8x-to-uwp-case-study-bookstore2.md)</ept>, in which we look at accessing and displaying grouped data.</source>
          <target state="new">The next case study is <bpt id="p1">[</bpt>Bookstore2<ept id="p1">](w8x-to-uwp-case-study-bookstore2.md)</ept>, in which we look at accessing and displaying grouped data.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>