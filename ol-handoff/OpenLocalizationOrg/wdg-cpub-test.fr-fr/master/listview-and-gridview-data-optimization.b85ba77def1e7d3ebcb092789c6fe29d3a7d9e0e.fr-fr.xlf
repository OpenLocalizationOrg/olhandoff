<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-48076a9" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2e38cd45843a15226b1456fecd150523c2add6bc</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci1\debug-test-perf\listview-and-gridview-data-optimization.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>ListView and GridView data virtualization</source>
          <target state="new">ListView and GridView data virtualization</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Improve ListView and GridView performance and startup time through data virtualization.</source>
          <target state="new">Improve ListView and GridView performance and startup time through data virtualization.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>ListView and GridView data virtualization</source>
          <target state="new">ListView and GridView data virtualization</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>\[ Updated for UWP apps on Windows 10.</source>
          <target state="new">\[ Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  For more details, see the //build/ session <bpt id="p2">[</bpt>Dramatically Increase Performance when Users Interact with Large Amounts of Data in GridView and ListView<ept id="p2">](https://channel9.msdn.com/Events/Build/2013/3-158)</ept>.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  For more details, see the //build/ session <bpt id="p2">[</bpt>Dramatically Increase Performance when Users Interact with Large Amounts of Data in GridView and ListView<ept id="p2">](https://channel9.msdn.com/Events/Build/2013/3-158)</ept>.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Improve <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ListView<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR242878)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>GridView<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR242705)</ept> performance and startup time through data virtualization.</source>
          <target state="new">Improve <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ListView<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR242878)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>GridView<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR242705)</ept> performance and startup time through data virtualization.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For UI virtualization, element reduction, and progressive updating of items, see <bpt id="p1">[</bpt>ListView and GridView UI optimization<ept id="p1">](optimize-gridview-and-listview.md)</ept>.</source>
          <target state="new">For UI virtualization, element reduction, and progressive updating of items, see <bpt id="p1">[</bpt>ListView and GridView UI optimization<ept id="p1">](optimize-gridview-and-listview.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A method of data virtualization is needed for a data set that is so large that it cannot or should not all be stored in memory at one time.</source>
          <target state="new">A method of data virtualization is needed for a data set that is so large that it cannot or should not all be stored in memory at one time.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You load an initial portion into memory (from local disk, network, or cloud) and apply UI virtualization to this partial data set.</source>
          <target state="new">You load an initial portion into memory (from local disk, network, or cloud) and apply UI virtualization to this partial data set.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You can later load data incrementally, or from arbitrary points in the master data set (random access), on demand.</source>
          <target state="new">You can later load data incrementally, or from arbitrary points in the master data set (random access), on demand.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Whether data virtualization is appropriate for you depends on many factors.</source>
          <target state="new">Whether data virtualization is appropriate for you depends on many factors.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The size of your data set</source>
          <target state="new">The size of your data set</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The size of each item</source>
          <target state="new">The size of each item</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The source of the data set (local disk, network, or cloud)</source>
          <target state="new">The source of the data set (local disk, network, or cloud)</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The overall memory consumption of your app</source>
          <target state="new">The overall memory consumption of your app</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  Be aware that a feature is enabled by default for ListView and GridView that displays temporary placeholder visuals while the user is panning/scrolling quickly.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  Be aware that a feature is enabled by default for ListView and GridView that displays temporary placeholder visuals while the user is panning/scrolling quickly.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>As data is loaded, these placeholder visuals are replaced with your item template.</source>
          <target state="new">As data is loaded, these placeholder visuals are replaced with your item template.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You can turn the feature off by setting <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ListViewBase.ShowsScrollingPlaceholders<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR242878base-showsscrollingplaceholders)</ept> to false, but if you do so then we recommend that you use the x:Phase attribute to progressively render the elements in your item template.</source>
          <target state="new">You can turn the feature off by setting <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ListViewBase.ShowsScrollingPlaceholders<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR242878base-showsscrollingplaceholders)</ept> to false, but if you do so then we recommend that you use the x:Phase attribute to progressively render the elements in your item template.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Update ListView and GridView items progressively<ept id="p1">](optimize-gridview-and-listview.md#update-items-incrementally)</ept>.</source>
          <target state="new">See <bpt id="p1">[</bpt>Update ListView and GridView items progressively<ept id="p1">](optimize-gridview-and-listview.md#update-items-incrementally)</ept>.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Here are more details about the incremental and random-access data virtualization techniques.</source>
          <target state="new">Here are more details about the incremental and random-access data virtualization techniques.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Incremental data virtualization</source>
          <target state="new">Incremental data virtualization</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Incremental data virtualization loads data sequentially.</source>
          <target state="new">Incremental data virtualization loads data sequentially.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ListView<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR242878)</ept> that uses incremental data virtualization may be used to view a collection of a million items, but only 50 items are loaded initially.</source>
          <target state="new">A <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ListView<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR242878)</ept> that uses incremental data virtualization may be used to view a collection of a million items, but only 50 items are loaded initially.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>As the user pans/scrolls, the next 50 are loaded.</source>
          <target state="new">As the user pans/scrolls, the next 50 are loaded.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>As items are loaded, the scroll bar's thumb decreases in size.</source>
          <target state="new">As items are loaded, the scroll bar's thumb decreases in size.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For this type of data virtualization you write a data source class that implements these interfaces.</source>
          <target state="new">For this type of data virtualization you write a data source class that implements these interfaces.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>IList</source>
          <target state="new">IList</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>INotifyCollectionChanged<ept id="p2">**</ept><ept id="p1">](T:System.Collections.Specialized.INotifyCollectionChanged)</ept> (C#/VB) or <bpt id="p3">[</bpt><bpt id="p4">**</bpt>IObservableVector<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR226052)</ept> (C++/CX)</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>INotifyCollectionChanged<ept id="p2">**</ept><ept id="p1">](T:System.Collections.Specialized.INotifyCollectionChanged)</ept> (C#/VB) or <bpt id="p3">[</bpt><bpt id="p4">**</bpt>IObservableVector<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR226052)</ept> (C++/CX)</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>ISupportIncrementalLoading</source>
          <target state="new">ISupportIncrementalLoading</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>A data source like this is an in-memory list that can be continually extended.</source>
          <target state="new">A data source like this is an in-memory list that can be continually extended.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The items control will ask for items using the standard <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IList<ept id="p2">**</ept><ept id="p1">](T:System.Collections.IList)</ept> indexer and count properties.</source>
          <target state="new">The items control will ask for items using the standard <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IList<ept id="p2">**</ept><ept id="p1">](T:System.Collections.IList)</ept> indexer and count properties.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The count should represent the number of items locally, not the true size of the dataset.</source>
          <target state="new">The count should represent the number of items locally, not the true size of the dataset.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>When the items control gets close to the end of the existing data, it will call <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ISupportIncrementalLoading.HasMoreItems<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Hh701916-hasmoreitems)</ept>.</source>
          <target state="new">When the items control gets close to the end of the existing data, it will call <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ISupportIncrementalLoading.HasMoreItems<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Hh701916-hasmoreitems)</ept>.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>If you return <bpt id="p1">**</bpt>true<ept id="p1">**</ept>, then it will call <bpt id="p2">[</bpt><bpt id="p3">**</bpt>ISupportIncrementalLoading.LoadMoreItemsAsync<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/Hh701916-loadmoreitemsasync)</ept> passing an advised number of items to load.</source>
          <target state="new">If you return <bpt id="p1">**</bpt>true<ept id="p1">**</ept>, then it will call <bpt id="p2">[</bpt><bpt id="p3">**</bpt>ISupportIncrementalLoading.LoadMoreItemsAsync<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/Hh701916-loadmoreitemsasync)</ept> passing an advised number of items to load.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Depending on where you're loading data from (local disk, network, or cloud), you may choose to load a different number of items than that advised.</source>
          <target state="new">Depending on where you're loading data from (local disk, network, or cloud), you may choose to load a different number of items than that advised.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>For example, if your service supports batches of 50 items but the items control only asks for 10 then you can load 50.</source>
          <target state="new">For example, if your service supports batches of 50 items but the items control only asks for 10 then you can load 50.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Load the data from your back end, add it to your list, and raise a change notification via <bpt id="p1">[</bpt><bpt id="p2">**</bpt>INotifyCollectionChanged<ept id="p2">**</ept><ept id="p1">](T:System.Collections.Specialized.INotifyCollectionChanged)</ept> or <bpt id="p3">[</bpt><bpt id="p4">**</bpt>IObservableVector<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR226052)</ept> so that the items control knows about the new items.</source>
          <target state="new">Load the data from your back end, add it to your list, and raise a change notification via <bpt id="p1">[</bpt><bpt id="p2">**</bpt>INotifyCollectionChanged<ept id="p2">**</ept><ept id="p1">](T:System.Collections.Specialized.INotifyCollectionChanged)</ept> or <bpt id="p3">[</bpt><bpt id="p4">**</bpt>IObservableVector<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR226052)</ept> so that the items control knows about the new items.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Also return a count of the items you actually loaded.</source>
          <target state="new">Also return a count of the items you actually loaded.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If you load fewer items than advised, or the items control has been panned/scrolled even further in the interim, then your data source will be called again for more items and the cycle will continue.</source>
          <target state="new">If you load fewer items than advised, or the items control has been panned/scrolled even further in the interim, then your data source will be called again for more items and the cycle will continue.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>You can learn more by downloading the <bpt id="p1">[</bpt>XAML data binding sample<ept id="p1">](https://code.msdn.microsoft.com/windowsapps/Data-Binding-7b1d67b5)</ept> for Windows 8.1 and re-using its source code in your Windows 10 app.</source>
          <target state="new">You can learn more by downloading the <bpt id="p1">[</bpt>XAML data binding sample<ept id="p1">](https://code.msdn.microsoft.com/windowsapps/Data-Binding-7b1d67b5)</ept> for Windows 8.1 and re-using its source code in your Windows 10 app.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Random access data virtualization</source>
          <target state="new">Random access data virtualization</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Random access data virtualization allows loading from an arbitrary point in the data set.</source>
          <target state="new">Random access data virtualization allows loading from an arbitrary point in the data set.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ListView<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR242878)</ept> that uses random access data virtualization, used to view a collection of a million items, can load the items 100,000 – 100,050.</source>
          <target state="new">A <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ListView<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR242878)</ept> that uses random access data virtualization, used to view a collection of a million items, can load the items 100,000 – 100,050.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>If the user then moves to the beginning of the list, the control loads items 1 – 50.</source>
          <target state="new">If the user then moves to the beginning of the list, the control loads items 1 – 50.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>At all times, the scroll bar's thumb indicates that the <bpt id="p1">**</bpt>ListView<ept id="p1">**</ept> contains a million items.</source>
          <target state="new">At all times, the scroll bar's thumb indicates that the <bpt id="p1">**</bpt>ListView<ept id="p1">**</ept> contains a million items.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The position of the scroll bar's thumb is relative to where the visible items are located in the collection's entire data set.</source>
          <target state="new">The position of the scroll bar's thumb is relative to where the visible items are located in the collection's entire data set.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>This type of data virtualization can significantly reduce the memory requirements and load times for the collection.</source>
          <target state="new">This type of data virtualization can significantly reduce the memory requirements and load times for the collection.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>To enable it you need to write a data source class that fetches data on demand and manages a local cache and implements these interfaces.</source>
          <target state="new">To enable it you need to write a data source class that fetches data on demand and manages a local cache and implements these interfaces.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>IList</source>
          <target state="new">IList</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>INotifyCollectionChanged<ept id="p2">**</ept><ept id="p1">](T:System.Collections.Specialized.INotifyCollectionChanged)</ept> (C#/VB) or <bpt id="p3">[</bpt><bpt id="p4">**</bpt>IObservableVector<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR226052)</ept> (C++/CX)</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>INotifyCollectionChanged<ept id="p2">**</ept><ept id="p1">](T:System.Collections.Specialized.INotifyCollectionChanged)</ept> (C#/VB) or <bpt id="p3">[</bpt><bpt id="p4">**</bpt>IObservableVector<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR226052)</ept> (C++/CX)</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>(Optionally) <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IItemsRangeInfo<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Dn877070)</ept></source>
          <target state="new">(Optionally) <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IItemsRangeInfo<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Dn877070)</ept></target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>(Optionally) <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ISelectionInfo<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Dn877074)</ept></source>
          <target state="new">(Optionally) <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ISelectionInfo<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Dn877074)</ept></target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>IItemsRangeInfo<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Dn877070)</ept> provides information on which items the control is actively using.</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>IItemsRangeInfo<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Dn877070)</ept> provides information on which items the control is actively using.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The items control will call this method whenever its view is changing, and will include these two sets of ranges.</source>
          <target state="new">The items control will call this method whenever its view is changing, and will include these two sets of ranges.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The set of items that are in the viewport.</source>
          <target state="new">The set of items that are in the viewport.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>A set of non-virtualized items that the control is using that may not be in the viewport.</source>
          <target state="new">A set of non-virtualized items that the control is using that may not be in the viewport.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>A buffer of items around the viewport that the items control keeps so that touch panning is smooth.</source>
          <target state="new">A buffer of items around the viewport that the items control keeps so that touch panning is smooth.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The focused item.</source>
          <target state="new">The focused item.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The first item.</source>
          <target state="new">The first item.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>By implementing <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IItemsRangeInfo<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Dn877070)</ept> your data source knows what items need to be fetched and cached, and when to prune from the cache data that is no longer needed.</source>
          <target state="new">By implementing <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IItemsRangeInfo<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Dn877070)</ept> your data source knows what items need to be fetched and cached, and when to prune from the cache data that is no longer needed.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>IItemsRangeInfo<ept id="p1">**</ept> uses <bpt id="p2">[</bpt><bpt id="p3">**</bpt>ItemIndexRange<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/Dn877081)</ept> objects to describe a set of items based on their index in the collection.</source>
          <target state="new"><bpt id="p1">**</bpt>IItemsRangeInfo<ept id="p1">**</ept> uses <bpt id="p2">[</bpt><bpt id="p3">**</bpt>ItemIndexRange<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/Dn877081)</ept> objects to describe a set of items based on their index in the collection.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>This is so that it doesn't use item pointers, which may not be correct or stable.</source>
          <target state="new">This is so that it doesn't use item pointers, which may not be correct or stable.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>IItemsRangeInfo<ept id="p1">**</ept> is designed to be used by only a single instance of an items control because it relies on state information for that items control.</source>
          <target state="new"><bpt id="p1">**</bpt>IItemsRangeInfo<ept id="p1">**</ept> is designed to be used by only a single instance of an items control because it relies on state information for that items control.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>If multiple items controls need access to the same data then you will need a separate instance of the data source for each.</source>
          <target state="new">If multiple items controls need access to the same data then you will need a separate instance of the data source for each.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>They can share a common cache, but the logic to purge from the cache will be more complicated.</source>
          <target state="new">They can share a common cache, but the logic to purge from the cache will be more complicated.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Here's the basic strategy for your random access data virtualization data source.</source>
          <target state="new">Here's the basic strategy for your random access data virtualization data source.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>When asked for an item</source>
          <target state="new">When asked for an item</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>If you have it available in memory, then return it.</source>
          <target state="new">If you have it available in memory, then return it.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>If you don’t have it, then return either null or a placeholder item.</source>
          <target state="new">If you don’t have it, then return either null or a placeholder item.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Use the request for an item (or the range information from <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IItemsRangeInfo<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Dn877070)</ept>) to know which items are needed, and to fetch data for items from your back end asynchronously.</source>
          <target state="new">Use the request for an item (or the range information from <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IItemsRangeInfo<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Dn877070)</ept>) to know which items are needed, and to fetch data for items from your back end asynchronously.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>After retrieving the data, raise a change notification via <bpt id="p1">[</bpt><bpt id="p2">**</bpt>INotifyCollectionChanged<ept id="p2">**</ept><ept id="p1">](T:System.Collections.Specialized.INotifyCollectionChanged)</ept> or <bpt id="p3">[</bpt><bpt id="p4">**</bpt>IObservableVector<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR226052)</ept> so that the items control knows about the new item.</source>
          <target state="new">After retrieving the data, raise a change notification via <bpt id="p1">[</bpt><bpt id="p2">**</bpt>INotifyCollectionChanged<ept id="p2">**</ept><ept id="p1">](T:System.Collections.Specialized.INotifyCollectionChanged)</ept> or <bpt id="p3">[</bpt><bpt id="p4">**</bpt>IObservableVector<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR226052)</ept> so that the items control knows about the new item.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>(Optionally) as the items control's viewport changes, identify what items are needed from your data source via your implementation of <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IItemsRangeInfo<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Dn877070)</ept>.</source>
          <target state="new">(Optionally) as the items control's viewport changes, identify what items are needed from your data source via your implementation of <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IItemsRangeInfo<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Dn877070)</ept>.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Beyond that, the strategy for when to load data items, how many to load, and which items to keep in memory is up to your application.</source>
          <target state="new">Beyond that, the strategy for when to load data items, how many to load, and which items to keep in memory is up to your application.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Some general considerations to keep in mind:</source>
          <target state="new">Some general considerations to keep in mind:</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Make asynchronous requests for data; don't block the UI thread.</source>
          <target state="new">Make asynchronous requests for data; don't block the UI thread.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Find the sweet spot in the size of the batches you fetch items in.</source>
          <target state="new">Find the sweet spot in the size of the batches you fetch items in.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Prefer chunky to chatty.</source>
          <target state="new">Prefer chunky to chatty.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Not so small that you make too many small requests; not too large that they take too long to retrieve.</source>
          <target state="new">Not so small that you make too many small requests; not too large that they take too long to retrieve.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Consider how many requests you want to have pending at the same time.</source>
          <target state="new">Consider how many requests you want to have pending at the same time.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Performing one at a time is easier, but it may be too slow if turnaround time is high.</source>
          <target state="new">Performing one at a time is easier, but it may be too slow if turnaround time is high.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Can you cancel requests for data?</source>
          <target state="new">Can you cancel requests for data?</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>If using a hosted service, is there a cost per transaction?</source>
          <target state="new">If using a hosted service, is there a cost per transaction?</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>What kind of notifications are provided by the service when the results of a query are changed?</source>
          <target state="new">What kind of notifications are provided by the service when the results of a query are changed?</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Will you know if an item is inserted at index 33?</source>
          <target state="new">Will you know if an item is inserted at index 33?</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>If your service supports queries based on a key-plus-offset, that may be better than just using an index.</source>
          <target state="new">If your service supports queries based on a key-plus-offset, that may be better than just using an index.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>How smart do you want to be in pre-fetching items?</source>
          <target state="new">How smart do you want to be in pre-fetching items?</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Are you going to try and track the direction and velocity of scrolling to predict which items are needed?</source>
          <target state="new">Are you going to try and track the direction and velocity of scrolling to predict which items are needed?</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>How aggressive do you want to be in purging the cache?</source>
          <target state="new">How aggressive do you want to be in purging the cache?</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>This is a tradeoff of memory versus experience.</source>
          <target state="new">This is a tradeoff of memory versus experience.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>