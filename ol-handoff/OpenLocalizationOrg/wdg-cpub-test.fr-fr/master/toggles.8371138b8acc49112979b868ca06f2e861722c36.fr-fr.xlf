<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-48076a9" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">09ea0f8d35c70f997c76bc6dd84587ab7c937345</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci2\controls-and-patterns\toggles.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>The toggle switch represents a physical switch that allows users to turn things on or off.</source>
          <target state="new">The toggle switch represents a physical switch that allows users to turn things on or off.</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Guidelines for toggle switch controls</source>
          <target state="new">Guidelines for toggle switch controls</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Toggle switches</source>
          <target state="new">Toggle switches</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The toggle switch represents a physical switch that allows users to turn things on or off.</source>
          <target state="new">The toggle switch represents a physical switch that allows users to turn things on or off.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Use <bpt id="p1">**</bpt>ToggleSwitch<ept id="p1">**</ept> controls to present users with exactly two mutually exclusive options (like on/off), where choosing an option results in an immediate action.</source>
          <target state="new">Use <bpt id="p1">**</bpt>ToggleSwitch<ept id="p1">**</ept> controls to present users with exactly two mutually exclusive options (like on/off), where choosing an option results in an immediate action.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Important APIs</source>
          <target state="new">Important APIs</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>ToggleSwitch class</source>
          <target state="new">ToggleSwitch class</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>IsOn property</source>
          <target state="new">IsOn property</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Toggled event</source>
          <target state="new">Toggled event</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Is this the right control?</source>
          <target state="new">Is this the right control?</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Use a toggle switch for binary operations that take effect right after the user flips the toggle switch.</source>
          <target state="new">Use a toggle switch for binary operations that take effect right after the user flips the toggle switch.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For example, use a toggle switch to turn services or hardware components on or off, such as WiFi:</source>
          <target state="new">For example, use a toggle switch to turn services or hardware components on or off, such as WiFi:</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>WiFi toggle switch, on and off</source>
          <target state="new">WiFi toggle switch, on and off</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If a physical switch would work for the action, a toggle switch is probably the best control to use.</source>
          <target state="new">If a physical switch would work for the action, a toggle switch is probably the best control to use.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>After the user toggles the switch on or off, we recommend that the corresponding action is immediately performed.</source>
          <target state="new">After the user toggles the switch on or off, we recommend that the corresponding action is immediately performed.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Choosing between toggle switch and check box</source>
          <target state="new">Choosing between toggle switch and check box</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For some actions, either a toggle switch or a check box might work.</source>
          <target state="new">For some actions, either a toggle switch or a check box might work.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To decide which control would work better, follow these tips:</source>
          <target state="new">To decide which control would work better, follow these tips:</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Use a toggle switch for binary settings when changes become effective immediately after the user changes them.</source>
          <target state="new">Use a toggle switch for binary settings when changes become effective immediately after the user changes them.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Toggle switch versus check box</source>
          <target state="new">Toggle switch versus check box</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>In the above example, it's clear with the toggle switch that the wireless is set to "On."</source>
          <target state="new">In the above example, it's clear with the toggle switch that the wireless is set to "On."</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>But with the checkbox, the user needs to think about whether the wireless is on now or whether they need to check the box to turn wireless on.</source>
          <target state="new">But with the checkbox, the user needs to think about whether the wireless is on now or whether they need to check the box to turn wireless on.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Use a checkbox when the user has to perform extra steps for changes to be effective.</source>
          <target state="new">Use a checkbox when the user has to perform extra steps for changes to be effective.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For example, if the user must click a "submit" or "next" button to apply changes, use a check box.</source>
          <target state="new">For example, if the user must click a "submit" or "next" button to apply changes, use a check box.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>A checkbox and a Submit button</source>
          <target state="new">A checkbox and a Submit button</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Use check boxes or a <bpt id="p1">[</bpt>list box<ept id="p1">](lists.md)</ept> when the user can select multiple items:</source>
          <target state="new">Use check boxes or a <bpt id="p1">[</bpt>list box<ept id="p1">](lists.md)</ept> when the user can select multiple items:</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A checkbox that has multiple items selected</source>
          <target state="new">A checkbox that has multiple items selected</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="new">Examples</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Toggle switches in the general settings of the News app.</source>
          <target state="new">Toggle switches in the general settings of the News app.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Toggle switches in the general settings of the News app</source>
          <target state="new">Toggle switches in the general settings of the News app</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Toggle switches in the start menu settings in Windows.</source>
          <target state="new">Toggle switches in the start menu settings in Windows.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Toggle switches in the start menu settings in Windows</source>
          <target state="new">Toggle switches in the start menu settings in Windows</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Create a toggle switch</source>
          <target state="new">Create a toggle switch</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Here's how to create a simple toggle switch.</source>
          <target state="new">Here's how to create a simple toggle switch.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This XAML creates the WiFi toggle switch shown previously.</source>
          <target state="new">This XAML creates the WiFi toggle switch shown previously.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Here's how to create the same toggle switch in code.</source>
          <target state="new">Here's how to create the same toggle switch in code.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>IsOn</source>
          <target state="new">IsOn</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The switch can be either on or off.</source>
          <target state="new">The switch can be either on or off.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IsOn<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.toggleswitch.ison.aspx)</ept> property to determine the state of the switch.</source>
          <target state="new">Use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IsOn<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.toggleswitch.ison.aspx)</ept> property to determine the state of the switch.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>When the switch is used to control the state of another binary property, you can use a binding as shown here.</source>
          <target state="new">When the switch is used to control the state of another binary property, you can use a binding as shown here.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Toggled</source>
          <target state="new">Toggled</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>In other cases, you can handle the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Toggled<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.toggleswitch.toggled.aspx)</ept> event to respond to changes in the state.</source>
          <target state="new">In other cases, you can handle the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Toggled<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.toggleswitch.toggled.aspx)</ept> event to respond to changes in the state.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This example shows how to add a Toggled event handler in XAML and in code.</source>
          <target state="new">This example shows how to add a Toggled event handler in XAML and in code.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The Toggled event is handled to turn a progress ring on or off, and change its visibility.</source>
          <target state="new">The Toggled event is handled to turn a progress ring on or off, and change its visibility.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Here's how to create the same toggle switch in code.</source>
          <target state="new">Here's how to create the same toggle switch in code.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Here's the handler for the Toggled event.</source>
          <target state="new">Here's the handler for the Toggled event.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>On/Off labels</source>
          <target state="new">On/Off labels</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>By default, the toggle switch includes literal On and Off labels, which are localized automatically.</source>
          <target state="new">By default, the toggle switch includes literal On and Off labels, which are localized automatically.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>You can replace these labels by setting the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>OnContent<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.toggleswitch.oncontent.aspx)</ept>, and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>OffContent<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.toggleswitch.offcontent.aspx)</ept> properties.</source>
          <target state="new">You can replace these labels by setting the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>OnContent<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.toggleswitch.oncontent.aspx)</ept>, and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>OffContent<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.toggleswitch.offcontent.aspx)</ept> properties.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>This example replaces the On/Off labels with Show/Hide labels.</source>
          <target state="new">This example replaces the On/Off labels with Show/Hide labels.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>You can also use more complex content by setting the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>OnContentTemplate<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.toggleswitch.oncontenttemplate.aspx)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>OffContentTemplate<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.toggleswitch.offcontenttemplate.aspx)</ept> properties.</source>
          <target state="new">You can also use more complex content by setting the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>OnContentTemplate<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.toggleswitch.oncontenttemplate.aspx)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>OffContentTemplate<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.toggleswitch.offcontenttemplate.aspx)</ept> properties.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Recommendations</source>
          <target state="new">Recommendations</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Replace the On and Off labels when there are more specific labels for the setting.</source>
          <target state="new">Replace the On and Off labels when there are more specific labels for the setting.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>If there are short (3-4 characters) labels that represent binary opposites that are more appropriate for a particular setting, use those.</source>
          <target state="new">If there are short (3-4 characters) labels that represent binary opposites that are more appropriate for a particular setting, use those.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>For example, you could use "Show/Hide" if the setting is "Show images."</source>
          <target state="new">For example, you could use "Show/Hide" if the setting is "Show images."</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Using more specific labels can help when localizing the UI.</source>
          <target state="new">Using more specific labels can help when localizing the UI.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Avoid replacing the On and Off labels unless you must; stick with the default labels unless the situation calls for custom ones.</source>
          <target state="new">Avoid replacing the On and Off labels unless you must; stick with the default labels unless the situation calls for custom ones.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Labels should be no more than 4 characters long.</source>
          <target state="new">Labels should be no more than 4 characters long.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Related articles</source>
          <target state="new">Related articles</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>ToggleSwitch</source>
          <target state="new">ToggleSwitch</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Radio buttons</source>
          <target state="new">Radio buttons</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Toggle switches</source>
          <target state="new">Toggle switches</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Check boxes</source>
          <target state="new">Check boxes</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>For developers (XAML)</source>
          <target state="new">For developers (XAML)</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>ToggleSwitch class</source>
          <target state="new">ToggleSwitch class</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>