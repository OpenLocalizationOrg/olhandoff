<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-48076a9" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">789e2ca9bc49393f50c5e06bb38b4d156fae5446</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci2\launch-resume\how-to-launch-an-app-for-results.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Launch an app for results</source>
          <target state="new">Launch an app for results</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to launch an app from another app and exchange data between the two.</source>
          <target state="new">Learn how to launch an app from another app and exchange data between the two.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This is called launching an app for results.</source>
          <target state="new">This is called launching an app for results.</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Launch an app for results</source>
          <target state="new">Launch an app for results</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>\[ Updated for UWP apps on Windows 10.</source>
          <target state="new">\[ Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Important APIs</source>
          <target state="new">Important APIs</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>LaunchUriForResultsAsync</source>
          <target state="new">LaunchUriForResultsAsync</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>ValueSet</source>
          <target state="new">ValueSet</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Learn how to launch an app from another app and exchange data between the two.</source>
          <target state="new">Learn how to launch an app from another app and exchange data between the two.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This is called <bpt id="p1">*</bpt>launching an app for results<ept id="p1">*</ept>.</source>
          <target state="new">This is called <bpt id="p1">*</bpt>launching an app for results<ept id="p1">*</ept>.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The example here shows you how to use <bpt id="p1">[</bpt><bpt id="p2">**</bpt>LaunchUriForResultsAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn956686)</ept> to launch an app for results.</source>
          <target state="new">The example here shows you how to use <bpt id="p1">[</bpt><bpt id="p2">**</bpt>LaunchUriForResultsAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn956686)</ept> to launch an app for results.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>New app-to-app communication APIs in Windows 10 make it possible for Windows apps (and Windows Web apps) to launch an app and exchange data and files.</source>
          <target state="new">New app-to-app communication APIs in Windows 10 make it possible for Windows apps (and Windows Web apps) to launch an app and exchange data and files.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This enables you to build mash-up solutions from multiple apps.</source>
          <target state="new">This enables you to build mash-up solutions from multiple apps.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Using these new APIs, complex tasks that would have required the user to use multiple apps can now be handled seamlessly.</source>
          <target state="new">Using these new APIs, complex tasks that would have required the user to use multiple apps can now be handled seamlessly.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For example, your app could launch a social networking app to choose a contact, or launch a checkout app to complete a payment process.</source>
          <target state="new">For example, your app could launch a social networking app to choose a contact, or launch a checkout app to complete a payment process.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The app that you'll launch for results will be referred to as the launched app.</source>
          <target state="new">The app that you'll launch for results will be referred to as the launched app.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The app that launches the app will be referred to as the calling app.</source>
          <target state="new">The app that launches the app will be referred to as the calling app.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For this example you will write both the calling app and the launched app.</source>
          <target state="new">For this example you will write both the calling app and the launched app.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Step 1: Register the protocol to be handled in the app that you'll launch for results</source>
          <target state="new">Step 1: Register the protocol to be handled in the app that you'll launch for results</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>In the Package.appxmanifest file of the launched app, add a protocol extension to the <bpt id="p1">**</bpt><ph id="ph1">&amp;lt;</ph>Application<ph id="ph2">&amp;gt;</ph><ept id="p1">**</ept> section.</source>
          <target state="new">In the Package.appxmanifest file of the launched app, add a protocol extension to the <bpt id="p1">**</bpt><ph id="ph1">&amp;lt;</ph>Application<ph id="ph2">&amp;gt;</ph><ept id="p1">**</ept> section.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The example here uses a fictional protocol named <bpt id="p1">**</bpt>test-app2app<ept id="p1">**</ept>.</source>
          <target state="new">The example here uses a fictional protocol named <bpt id="p1">**</bpt>test-app2app<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>ReturnResults<ept id="p1">**</ept> attribute in the protocol extension accepts one of these values:</source>
          <target state="new">The <bpt id="p1">**</bpt>ReturnResults<ept id="p1">**</ept> attribute in the protocol extension accepts one of these values:</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>optional<ept id="p1">**</ept>—The app can be launched for results by using the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>LaunchUriForResultsAsync<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/dn956686)</ept> method, or not for results by using <bpt id="p4">[</bpt><bpt id="p5">**</bpt>LaunchUriAsync<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/hh701476)</ept>.</source>
          <target state="new"><bpt id="p1">**</bpt>optional<ept id="p1">**</ept>—The app can be launched for results by using the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>LaunchUriForResultsAsync<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/dn956686)</ept> method, or not for results by using <bpt id="p4">[</bpt><bpt id="p5">**</bpt>LaunchUriAsync<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/hh701476)</ept>.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>When you use <bpt id="p1">**</bpt>optional<ept id="p1">**</ept>, the launched app must determine whether it was launched for results.</source>
          <target state="new">When you use <bpt id="p1">**</bpt>optional<ept id="p1">**</ept>, the launched app must determine whether it was launched for results.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>It can do that by checking the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>OnActivated<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242330)</ept> event argument.</source>
          <target state="new">It can do that by checking the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>OnActivated<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242330)</ept> event argument.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>If the argument's <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IActivatedEventArgs.Kind<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br224728)</ept> property returns <bpt id="p3">[</bpt><bpt id="p4">**</bpt>ActivationKind.ProtocolForResults<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br224693)</ept>, or if the type of the event argument is <bpt id="p5">[</bpt><bpt id="p6">**</bpt>ProtocolActivatedEventArgs<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/br224742)</ept>, the app was launched via <bpt id="p7">**</bpt>LaunchUriForResultsAsync<ept id="p7">**</ept>.</source>
          <target state="new">If the argument's <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IActivatedEventArgs.Kind<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br224728)</ept> property returns <bpt id="p3">[</bpt><bpt id="p4">**</bpt>ActivationKind.ProtocolForResults<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br224693)</ept>, or if the type of the event argument is <bpt id="p5">[</bpt><bpt id="p6">**</bpt>ProtocolActivatedEventArgs<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/br224742)</ept>, the app was launched via <bpt id="p7">**</bpt>LaunchUriForResultsAsync<ept id="p7">**</ept>.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>always<ept id="p1">**</ept>—The app can be launched only for results; that is, it can respond only to <bpt id="p2">[</bpt><bpt id="p3">**</bpt>LaunchUriForResultsAsync<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/dn956686)</ept>.</source>
          <target state="new"><bpt id="p1">**</bpt>always<ept id="p1">**</ept>—The app can be launched only for results; that is, it can respond only to <bpt id="p2">[</bpt><bpt id="p3">**</bpt>LaunchUriForResultsAsync<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/dn956686)</ept>.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>none<ept id="p1">**</ept>—The app cannot be launched for results; it can respond only to <bpt id="p2">[</bpt><bpt id="p3">**</bpt>LaunchUriAsync<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/hh701476)</ept>.</source>
          <target state="new"><bpt id="p1">**</bpt>none<ept id="p1">**</ept>—The app cannot be launched for results; it can respond only to <bpt id="p2">[</bpt><bpt id="p3">**</bpt>LaunchUriAsync<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/hh701476)</ept>.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>In this protocol-extension example, the app can be launched only for results.</source>
          <target state="new">In this protocol-extension example, the app can be launched only for results.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This simplifies the logic inside the <bpt id="p1">**</bpt>OnActivated<ept id="p1">**</ept> method, discussed below, because we have to handle only the "launched for results" case and not the other ways that the app could be activated.</source>
          <target state="new">This simplifies the logic inside the <bpt id="p1">**</bpt>OnActivated<ept id="p1">**</ept> method, discussed below, because we have to handle only the "launched for results" case and not the other ways that the app could be activated.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Step 2: Override Application.OnActivated in the app that you'll launch for results</source>
          <target state="new">Step 2: Override Application.OnActivated in the app that you'll launch for results</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>If this method does not already exist in the launched app, create it within the <ph id="ph1">`App`</ph> class defined in App.xaml.cs.</source>
          <target state="new">If this method does not already exist in the launched app, create it within the <ph id="ph1">`App`</ph> class defined in App.xaml.cs.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>In an app that lets you pick your friends in a social network, this function could be where you open the people-picker page.</source>
          <target state="new">In an app that lets you pick your friends in a social network, this function could be where you open the people-picker page.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>In this next example, a page named <bpt id="p1">**</bpt>LaunchedForResultsPage<ept id="p1">**</ept> is displayed when the app is activated for results.</source>
          <target state="new">In this next example, a page named <bpt id="p1">**</bpt>LaunchedForResultsPage<ept id="p1">**</ept> is displayed when the app is activated for results.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Ensure that the <bpt id="p1">**</bpt>using<ept id="p1">**</ept> statement is included at the top of the file.</source>
          <target state="new">Ensure that the <bpt id="p1">**</bpt>using<ept id="p1">**</ept> statement is included at the top of the file.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Because the protocol extension in the Package.appxmanifest file specifies <bpt id="p1">**</bpt>ReturnResults<ept id="p1">**</ept> as <bpt id="p2">**</bpt>always<ept id="p2">**</ept>, the code just shown can cast <ph id="ph1">`args`</ph> directly to <bpt id="p3">[</bpt><bpt id="p4">**</bpt>ProtocolForResultsActivatedEventArgs<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn906905)</ept> with confidence that only <bpt id="p5">**</bpt>ProtocolForResultsActivatedEventArgs<ept id="p5">**</ept> will be sent to <bpt id="p6">**</bpt>OnActivated<ept id="p6">**</ept> for this app.</source>
          <target state="new">Because the protocol extension in the Package.appxmanifest file specifies <bpt id="p1">**</bpt>ReturnResults<ept id="p1">**</ept> as <bpt id="p2">**</bpt>always<ept id="p2">**</ept>, the code just shown can cast <ph id="ph1">`args`</ph> directly to <bpt id="p3">[</bpt><bpt id="p4">**</bpt>ProtocolForResultsActivatedEventArgs<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn906905)</ept> with confidence that only <bpt id="p5">**</bpt>ProtocolForResultsActivatedEventArgs<ept id="p5">**</ept> will be sent to <bpt id="p6">**</bpt>OnActivated<ept id="p6">**</ept> for this app.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>If your app can be activated in ways other than launching for results, you can check whether <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IActivatedEventArgs.Kind<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br224728)</ept> property returns <bpt id="p3">[</bpt><bpt id="p4">**</bpt>ActivationKind.ProtocolForResults<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br224693)</ept> to tell whether the app was launched for results.</source>
          <target state="new">If your app can be activated in ways other than launching for results, you can check whether <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IActivatedEventArgs.Kind<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br224728)</ept> property returns <bpt id="p3">[</bpt><bpt id="p4">**</bpt>ActivationKind.ProtocolForResults<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br224693)</ept> to tell whether the app was launched for results.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Step 3: Add a ProtocolForResultsOperation field to the app you launch for results</source>
          <target state="new">Step 3: Add a ProtocolForResultsOperation field to the app you launch for results</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>You'll use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ProtocolForResultsOperation<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn906913)</ept> field to signal when the launched app is ready to return the result to the calling app.</source>
          <target state="new">You'll use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ProtocolForResultsOperation<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn906913)</ept> field to signal when the launched app is ready to return the result to the calling app.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>In this example, the field is added to the <bpt id="p1">**</bpt>LaunchedForResultsPage<ept id="p1">**</ept> class because you'll complete the launch-for-results operation from that page and will need access to it.</source>
          <target state="new">In this example, the field is added to the <bpt id="p1">**</bpt>LaunchedForResultsPage<ept id="p1">**</ept> class because you'll complete the launch-for-results operation from that page and will need access to it.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Step 4: Override OnNavigatedTo() in the app you launch for results</source>
          <target state="new">Step 4: Override OnNavigatedTo() in the app you launch for results</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Override the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>OnNavigatedTo<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br227508)</ept> method on the page that you'll display when your app is launched for results.</source>
          <target state="new">Override the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>OnNavigatedTo<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br227508)</ept> method on the page that you'll display when your app is launched for results.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>If this method does not already exist, create it within the class for the page defined in <ph id="ph1">&amp;lt;</ph>pagename<ph id="ph2">&amp;gt;</ph>.xaml.cs.</source>
          <target state="new">If this method does not already exist, create it within the class for the page defined in <ph id="ph1">&amp;lt;</ph>pagename<ph id="ph2">&amp;gt;</ph>.xaml.cs.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Ensure that the following <bpt id="p1">**</bpt>using<ept id="p1">**</ept> statement is included at the top of the file:</source>
          <target state="new">Ensure that the following <bpt id="p1">**</bpt>using<ept id="p1">**</ept> statement is included at the top of the file:</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>NavigationEventArgs<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br243285)</ept> object in the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>OnNavigatedTo<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br227508)</ept> method contains the data passed from the calling app.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>NavigationEventArgs<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br243285)</ept> object in the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>OnNavigatedTo<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br227508)</ept> method contains the data passed from the calling app.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The data may not exceed 100KB and is stored in a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ValueSet<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn636131)</ept> object.</source>
          <target state="new">The data may not exceed 100KB and is stored in a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ValueSet<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn636131)</ept> object.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>In this example code, the launched app expects the data sent from the calling app to be in a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ValueSet<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn636131)</ept> under a key named <bpt id="p3">**</bpt>TestData<ept id="p3">**</ept>, because that's what the example's calling app is coded to send.</source>
          <target state="new">In this example code, the launched app expects the data sent from the calling app to be in a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ValueSet<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn636131)</ept> under a key named <bpt id="p3">**</bpt>TestData<ept id="p3">**</ept>, because that's what the example's calling app is coded to send.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Step 5: Write code to return data to the calling app</source>
          <target state="new">Step 5: Write code to return data to the calling app</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>In the launched app, use <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ProtocolForResultsOperation<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn906913)</ept> to return data to the calling app.</source>
          <target state="new">In the launched app, use <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ProtocolForResultsOperation<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn906913)</ept> to return data to the calling app.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>In this example code, a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ValueSet<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn636131)</ept> object is created that contains the value to return to the calling app.</source>
          <target state="new">In this example code, a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ValueSet<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn636131)</ept> object is created that contains the value to return to the calling app.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>ProtocolForResultsOperation<ept id="p1">**</ept> field is then used to send the value to the calling app.</source>
          <target state="new">The <bpt id="p1">**</bpt>ProtocolForResultsOperation<ept id="p1">**</ept> field is then used to send the value to the calling app.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Step 6: Write code to launch the app for results and get the returned data</source>
          <target state="new">Step 6: Write code to launch the app for results and get the returned data</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Launch the app from within an async method in your calling app as shown in this example code.</source>
          <target state="new">Launch the app from within an async method in your calling app as shown in this example code.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Note the <bpt id="p1">**</bpt>using<ept id="p1">**</ept> statements, which are necessary for the code to compile:</source>
          <target state="new">Note the <bpt id="p1">**</bpt>using<ept id="p1">**</ept> statements, which are necessary for the code to compile:</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>In this example, a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ValueSet<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn636131)</ept> containing the key <bpt id="p3">**</bpt>TestData<ept id="p3">**</ept> is passed to the launched app.</source>
          <target state="new">In this example, a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ValueSet<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn636131)</ept> containing the key <bpt id="p3">**</bpt>TestData<ept id="p3">**</ept> is passed to the launched app.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The launched app creates a <bpt id="p1">**</bpt>ValueSet<ept id="p1">**</ept> with a key named <bpt id="p2">**</bpt>ReturnedData<ept id="p2">**</ept> that contains the result returned to the caller.</source>
          <target state="new">The launched app creates a <bpt id="p1">**</bpt>ValueSet<ept id="p1">**</ept> with a key named <bpt id="p2">**</bpt>ReturnedData<ept id="p2">**</ept> that contains the result returned to the caller.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>You must build and deploy the app that you'll launch for results before running your calling app.</source>
          <target state="new">You must build and deploy the app that you'll launch for results before running your calling app.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Otherwise, <bpt id="p1">[</bpt><bpt id="p2">**</bpt>LaunchUriResult.Status<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn906892)</ept> will report <bpt id="p3">**</bpt>LaunchUriStatus.AppUnavailable<ept id="p3">**</ept>.</source>
          <target state="new">Otherwise, <bpt id="p1">[</bpt><bpt id="p2">**</bpt>LaunchUriResult.Status<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn906892)</ept> will report <bpt id="p3">**</bpt>LaunchUriStatus.AppUnavailable<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>You'll need the family name of the launched app when you set the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TargetApplicationPackageFamilyName<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn893511)</ept>.</source>
          <target state="new">You'll need the family name of the launched app when you set the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TargetApplicationPackageFamilyName<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn893511)</ept>.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>One way to get the family name is to make the following call from within the launched app:</source>
          <target state="new">One way to get the family name is to make the following call from within the launched app:</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Remarks</source>
          <target state="new">Remarks</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The example in this how-to provides a "hello world" introduction to launching an app for results.</source>
          <target state="new">The example in this how-to provides a "hello world" introduction to launching an app for results.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The key things to note are that the new <bpt id="p1">[</bpt><bpt id="p2">**</bpt>LaunchUriForResultsAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn956686)</ept> API lets you asynchronously launch an app and communicate via the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>ValueSet<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn636131)</ept> class.</source>
          <target state="new">The key things to note are that the new <bpt id="p1">[</bpt><bpt id="p2">**</bpt>LaunchUriForResultsAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn956686)</ept> API lets you asynchronously launch an app and communicate via the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>ValueSet<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn636131)</ept> class.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Passing data via a <bpt id="p1">**</bpt>ValueSet<ept id="p1">**</ept> is limited to 100KB.</source>
          <target state="new">Passing data via a <bpt id="p1">**</bpt>ValueSet<ept id="p1">**</ept> is limited to 100KB.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>If you need to pass larger amounts of data, you can share files by using the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SharedStorageAccessManager<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn889985)</ept> class to create file tokens that you can pass between apps.</source>
          <target state="new">If you need to pass larger amounts of data, you can share files by using the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SharedStorageAccessManager<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn889985)</ept> class to create file tokens that you can pass between apps.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>For example, given a <bpt id="p1">**</bpt>ValueSet<ept id="p1">**</ept> named <ph id="ph1">`inputData`</ph>, you could store the token to a file that you want to share with the launched app:</source>
          <target state="new">For example, given a <bpt id="p1">**</bpt>ValueSet<ept id="p1">**</ept> named <ph id="ph1">`inputData`</ph>, you could store the token to a file that you want to share with the launched app:</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Then pass it to the launched app via <bpt id="p1">**</bpt>LaunchUriForResultsAsync<ept id="p1">**</ept>.</source>
          <target state="new">Then pass it to the launched app via <bpt id="p1">**</bpt>LaunchUriForResultsAsync<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Related topics</source>
          <target state="new">Related topics</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>LaunchUri</source>
          <target state="new">LaunchUri</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>LaunchUriForResultsAsync</source>
          <target state="new">LaunchUriForResultsAsync</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>ValueSet</source>
          <target state="new">ValueSet</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>