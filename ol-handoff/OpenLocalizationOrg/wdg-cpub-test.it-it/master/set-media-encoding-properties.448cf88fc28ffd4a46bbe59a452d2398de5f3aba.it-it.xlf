<?xml version="1.0" encoding="utf-8"?>
<xliff srcLang="en-US" trgLang="it-it" version="2.0" xmlns="urn:oasis:names:tc:xliff:document:2.0" xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">66739a9e94aab0b070b09ce8e924853a1b0d8c13</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source xml:space="preserve">ms.assetid: 09BA9250-A476-4803-910E-52F0A51704B1</source>
          <target xml:space="preserve">ms.assetid: 09BA9250-A476-4803-910E-52F0A51704B1</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source xml:space="preserve">description: This article shows you how to use the IMediaEncodingProperties interface to set the resolution and frame rate of the camera preview stream and captured photos and video.</source>
          <target xml:space="preserve">description: This article shows you how to use the IMediaEncodingProperties interface to set the resolution and frame rate of the camera preview stream and captured photos and video.</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source xml:space="preserve">title: Set media encoding properties</source>
          <target xml:space="preserve">title: Set media encoding properties</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source xml:space="preserve">Set media encoding properties</source>
          <target xml:space="preserve">Set media encoding properties</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source xml:space="preserve">\[ Updated for UWP apps on Windows 10.</source>
          <target xml:space="preserve">\[ Updated for UWP apps on Windows 10.</target>
        </segment>
      </unit>
      <unit id="106">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
          <target xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
        </segment>
      </unit>
      <unit id="107">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh701011)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">This article shows you how to use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IMediaEncodingProperties</pc></pc> interface to set the resolution and frame rate of the camera preview stream and captured photos and video.</source>
          <target xml:space="preserve">This article shows you how to use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IMediaEncodingProperties</pc></pc> interface to set the resolution and frame rate of the camera preview stream and captured photos and video.</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source xml:space="preserve">It also shows how to ensure that the aspect ratio of the preview stream matches that of the captured media.</source>
          <target xml:space="preserve">It also shows how to ensure that the aspect ratio of the preview stream matches that of the captured media.</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source xml:space="preserve">Camera profiles offer a more advanced way of discovering and setting the stream properties of the camera, but they are not supported for all devices.</source>
          <target xml:space="preserve">Camera profiles offer a more advanced way of discovering and setting the stream properties of the camera, but they are not supported for all devices.</target>
        </segment>
      </unit>
      <unit id="110">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](camera-profiles.md)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For more information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Camera profiles</pc>.</source>
          <target xml:space="preserve">For more information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Camera profiles</pc>.</target>
        </segment>
      </unit>
      <unit id="111">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?LinkId=624252&amp;clcid=0x409)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The code in this article was adapted from the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">CameraResolution sample</pc>.</source>
          <target xml:space="preserve">The code in this article was adapted from the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">CameraResolution sample</pc>.</target>
        </segment>
      </unit>
      <unit id="112">
        <segment state="initial">
          <source xml:space="preserve">You can download the sample to see the code used in context or to use the sample as a starting point for your own app.</source>
          <target xml:space="preserve">You can download the sample to see the code used in context or to use the sample as a starting point for your own app.</target>
        </segment>
      </unit>
      <unit id="113">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>
					</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>
					</target>
        </segment>
      </unit>
      <unit id="114">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](capture-photos-and-video-with-mediacapture.md)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">This article builds on concepts and code discussed in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Capture Photos and Video with MediaCapture</pc>, which describes the steps for implementing basic photo and video capture.</source>
          <target xml:space="preserve">This article builds on concepts and code discussed in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Capture Photos and Video with MediaCapture</pc>, which describes the steps for implementing basic photo and video capture.</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source xml:space="preserve">It is recommended that you familiarize yourself with the basic media capture pattern in that article before moving on to more advanced capture scenarios.</source>
          <target xml:space="preserve">It is recommended that you familiarize yourself with the basic media capture pattern in that article before moving on to more advanced capture scenarios.</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source xml:space="preserve">The code in this article assumes that your app already has an instance of MediaCapture that has been properly initialized.</source>
          <target xml:space="preserve">The code in this article assumes that your app already has an instance of MediaCapture that has been properly initialized.</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source xml:space="preserve">A media encoding properties helper class</source>
          <target xml:space="preserve">A media encoding properties helper class</target>
        </segment>
      </unit>
      <unit id="118">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh701011)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Creating a simple helper class to wrap the functionality of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IMediaEncodingProperties</pc></pc> interface makes it easier to select a set of encoding properties that meet particular criteria.</source>
          <target xml:space="preserve">Creating a simple helper class to wrap the functionality of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IMediaEncodingProperties</pc></pc> interface makes it easier to select a set of encoding properties that meet particular criteria.</target>
        </segment>
      </unit>
      <unit id="119">
        <segment state="initial">
          <source xml:space="preserve">This helper class is particularly useful due to the following behavior of the encoding properties feature:</source>
          <target xml:space="preserve">This helper class is particularly useful due to the following behavior of the encoding properties feature:</target>
        </segment>
      </unit>
      <unit id="120">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Warning</pc>
					</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Warning</pc>
					</target>
        </segment>
      </unit>
      <unit id="121">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br211994)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/br226640)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
          <data id="id9">**</data>
          <data id="id10">**</data>
          <data id="id11">**</data>
          <data id="id12">**</data>
          <data id="id13">[</data>
          <data id="id14">](https://msdn.microsoft.com/library/windows/apps/hh700993)</data>
          <data id="id15">**</data>
          <data id="id16">**</data>
          <data id="id17">[</data>
          <data id="id18">](https://msdn.microsoft.com/library/windows/apps/hh701217)</data>
          <data id="id19">**</data>
          <data id="id20">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">VideoDeviceController.GetAvailableMediaStreamProperties</pc></pc> method takes a member of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">MediaStreamType</pc></pc> enumeration, such as <pc dataRefEnd="id10" dataRefStart="id9" id="p5">VideoRecord</pc> or <pc dataRefEnd="id12" dataRefStart="id11" id="p6">Photo</pc>, and returns a list of either <pc dataRefEnd="id14" dataRefStart="id13" id="p7"><pc dataRefEnd="id16" dataRefStart="id15" id="p8">ImageEncodingProperties</pc></pc> or <pc dataRefEnd="id18" dataRefStart="id17" id="p9"><pc dataRefEnd="id20" dataRefStart="id19" id="p10">VideoEncodingProperties</pc></pc> objects that convey the stream encoding settings, such as the resolution of the captured photo or video.</source>
          <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">VideoDeviceController.GetAvailableMediaStreamProperties</pc></pc> method takes a member of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">MediaStreamType</pc></pc> enumeration, such as <pc dataRefEnd="id10" dataRefStart="id9" id="p5">VideoRecord</pc> or <pc dataRefEnd="id12" dataRefStart="id11" id="p6">Photo</pc>, and returns a list of either <pc dataRefEnd="id14" dataRefStart="id13" id="p7"><pc dataRefEnd="id16" dataRefStart="id15" id="p8">ImageEncodingProperties</pc></pc> or <pc dataRefEnd="id18" dataRefStart="id17" id="p9"><pc dataRefEnd="id20" dataRefStart="id19" id="p10">VideoEncodingProperties</pc></pc> objects that convey the stream encoding settings, such as the resolution of the captured photo or video.</target>
        </segment>
      </unit>
      <unit id="122">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The results of calling <pc dataRefEnd="id2" dataRefStart="id1" id="p1">GetAvailableMediaStreamProperties</pc> may include <pc dataRefEnd="id4" dataRefStart="id3" id="p2">ImageEncodingProperties</pc> or <pc dataRefEnd="id6" dataRefStart="id5" id="p3">VideoEncodingProperties</pc> regardless of what <pc dataRefEnd="id8" dataRefStart="id7" id="p4">MediaStreamType</pc> value is specified.</source>
          <target xml:space="preserve">The results of calling <pc dataRefEnd="id2" dataRefStart="id1" id="p1">GetAvailableMediaStreamProperties</pc> may include <pc dataRefEnd="id4" dataRefStart="id3" id="p2">ImageEncodingProperties</pc> or <pc dataRefEnd="id6" dataRefStart="id5" id="p3">VideoEncodingProperties</pc> regardless of what <pc dataRefEnd="id8" dataRefStart="id7" id="p4">MediaStreamType</pc> value is specified.</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source xml:space="preserve">For this reason, you should always check the type of each returned value and cast it to the appropriate type before attempting to access any of the property values.</source>
          <target xml:space="preserve">For this reason, you should always check the type of each returned value and cast it to the appropriate type before attempting to access any of the property values.</target>
        </segment>
      </unit>
      <unit id="124">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh700993)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/hh701217)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The helper class defined below handles the type checking and casting for <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ImageEncodingProperties</pc></pc> or <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">VideoEncodingProperties</pc></pc> so that your app code doesn't need to distinguish between the two types.</source>
          <target xml:space="preserve">The helper class defined below handles the type checking and casting for <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ImageEncodingProperties</pc></pc> or <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">VideoEncodingProperties</pc></pc> so that your app code doesn't need to distinguish between the two types.</target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source xml:space="preserve">In addition to this, the helper class exposes properties for the aspect ratio of the properties, the frame rate (for video encoding properties only), and a friendly name that makes it easier to display the encoding properties in the app's UI.</source>
          <target xml:space="preserve">In addition to this, the helper class exposes properties for the aspect ratio of the properties, the frame rate (for video encoding properties only), and a friendly name that makes it easier to display the encoding properties in the app's UI.</target>
        </segment>
      </unit>
      <unit id="126">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh701296)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">You must include the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Media.MediaProperties</pc></pc> namespace in the source file for the helper class.</source>
          <target xml:space="preserve">You must include the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Media.MediaProperties</pc></pc> namespace in the source file for the helper class.</target>
        </segment>
      </unit>
      <unit id="127">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/BasicMediaCaptureWin10/cs/MainPage.xaml.cs#SnippetMediaEncodingPropertiesUsing)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaEncodingPropertiesUsing</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaEncodingPropertiesUsing</pc>]</target>
        </segment>
      </unit>
      <unit id="128">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/BasicMediaCaptureWin10/cs/StreamPropertiesHelper.cs#SnippetStreamPropertiesHelper)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">StreamPropertiesHelper</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">StreamPropertiesHelper</pc>]</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source xml:space="preserve">Determine if the preview and capture streams are independent</source>
          <target xml:space="preserve">Determine if the preview and capture streams are independent</target>
        </segment>
      </unit>
      <unit id="130">
        <segment state="initial">
          <source xml:space="preserve">On some devices, the same hardware pin is used for both preview and capture streams.</source>
          <target xml:space="preserve">On some devices, the same hardware pin is used for both preview and capture streams.</target>
        </segment>
      </unit>
      <unit id="131">
        <segment state="initial">
          <source xml:space="preserve">On these devices, setting the encoding properties of one will also set the other.</source>
          <target xml:space="preserve">On these devices, setting the encoding properties of one will also set the other.</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source xml:space="preserve">On devices that use different hardware pins for capture and preview, the properties can be set for each stream independently.</source>
          <target xml:space="preserve">On devices that use different hardware pins for capture and preview, the properties can be set for each stream independently.</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source xml:space="preserve">Use the following code to determine if the preview and capture streams are independent.</source>
          <target xml:space="preserve">Use the following code to determine if the preview and capture streams are independent.</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source xml:space="preserve">You should adjust your UI to enable or disable the setting of the streams independently based on the result of this test.</source>
          <target xml:space="preserve">You should adjust your UI to enable or disable the setting of the streams independently based on the result of this test.</target>
        </segment>
      </unit>
      <unit id="135">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/BasicMediaCaptureWin10/cs/MainPage.xaml.cs#SnippetCheckIfStreamsAreIdentical)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">CheckIfStreamsAreIdentical</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">CheckIfStreamsAreIdentical</pc>]</target>
        </segment>
      </unit>
      <unit id="136">
        <segment state="initial">
          <source xml:space="preserve">Get a list of available stream properties</source>
          <target xml:space="preserve">Get a list of available stream properties</target>
        </segment>
      </unit>
      <unit id="137">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br226825)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](capture-photos-and-video-with-mediacapture.md)</data>
          <data id="id7">[</data>
          <data id="id8">](https://msdn.microsoft.com/library/windows/apps/br211994)</data>
          <data id="id9">**</data>
          <data id="id10">**</data>
          <data id="id11">[</data>
          <data id="id12">](https://msdn.microsoft.com/library/windows/apps/br226640)</data>
          <data id="id13">**</data>
          <data id="id14">**</data>
          <data id="id15">**</data>
          <data id="id16">**</data>
          <data id="id17">**</data>
          <data id="id18">**</data>
          <data id="id19">**</data>
          <data id="id20">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Get a list of the available stream properties for a capture device by getting the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">VideoDeviceController</pc></pc> for your app's <pc dataRefEnd="id6" dataRefStart="id5" id="p3">MediaCapture</pc> object and then calling <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">GetAvailableMediaStreamProperties</pc></pc> and passing in one of the <pc dataRefEnd="id12" dataRefStart="id11" id="p6"><pc dataRefEnd="id14" dataRefStart="id13" id="p7">MediaStreamType</pc></pc> values, <pc dataRefEnd="id16" dataRefStart="id15" id="p8">VideoPreview</pc>, <pc dataRefEnd="id18" dataRefStart="id17" id="p9">VideoRecord</pc>, or <pc dataRefEnd="id20" dataRefStart="id19" id="p10">Photo</pc>.</source>
          <target xml:space="preserve">Get a list of the available stream properties for a capture device by getting the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">VideoDeviceController</pc></pc> for your app's <pc dataRefEnd="id6" dataRefStart="id5" id="p3">MediaCapture</pc> object and then calling <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">GetAvailableMediaStreamProperties</pc></pc> and passing in one of the <pc dataRefEnd="id12" dataRefStart="id11" id="p6"><pc dataRefEnd="id14" dataRefStart="id13" id="p7">MediaStreamType</pc></pc> values, <pc dataRefEnd="id16" dataRefStart="id15" id="p8">VideoPreview</pc>, <pc dataRefEnd="id18" dataRefStart="id17" id="p9">VideoRecord</pc>, or <pc dataRefEnd="id20" dataRefStart="id19" id="p10">Photo</pc>.</target>
        </segment>
      </unit>
      <unit id="138">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/hh701011)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">In this example, Linq syntax is used to create a list of <pc dataRefEnd="id2" dataRefStart="id1" id="p1">StreamPropertiesHelper</pc> objects, defined previously in this article, for each of the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">IMediaEncodingProperties</pc></pc> values returned from <pc dataRefEnd="id8" dataRefStart="id7" id="p4">GetAvailableMediaStreamProperties</pc>.</source>
          <target xml:space="preserve">In this example, Linq syntax is used to create a list of <pc dataRefEnd="id2" dataRefStart="id1" id="p1">StreamPropertiesHelper</pc> objects, defined previously in this article, for each of the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">IMediaEncodingProperties</pc></pc> values returned from <pc dataRefEnd="id8" dataRefStart="id7" id="p4">GetAvailableMediaStreamProperties</pc>.</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source xml:space="preserve">This example first uses Linq extension methods to order the returned properties based first on resolution and then on frame rate.</source>
          <target xml:space="preserve">This example first uses Linq extension methods to order the returned properties based first on resolution and then on frame rate.</target>
        </segment>
      </unit>
      <unit id="140">
        <segment state="initial">
          <source xml:space="preserve">If your app has specific resolution or frame rate requirements, you can select a set of media encoding properties programmatically.</source>
          <target xml:space="preserve">If your app has specific resolution or frame rate requirements, you can select a set of media encoding properties programmatically.</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source xml:space="preserve">A typical camera app will instead expose the list of available properties in the UI and allow the user to select their desired settings.</source>
          <target xml:space="preserve">A typical camera app will instead expose the list of available properties in the UI and allow the user to select their desired settings.</target>
        </segment>
      </unit>
      <unit id="142">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">A <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ComboBoxItem</pc> is created for each item in the list of <pc dataRefEnd="id4" dataRefStart="id3" id="p2">StreamPropertiesHelper</pc> objects in the list.</source>
          <target xml:space="preserve">A <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ComboBoxItem</pc> is created for each item in the list of <pc dataRefEnd="id4" dataRefStart="id3" id="p2">StreamPropertiesHelper</pc> objects in the list.</target>
        </segment>
      </unit>
      <unit id="143">
        <segment state="initial">
          <source xml:space="preserve">The content is set to the friendly name returned by the helper class and the tag is set to the helper class itself so it can be used later to retrieve the associated encoding properties.</source>
          <target xml:space="preserve">The content is set to the friendly name returned by the helper class and the tag is set to the helper class itself so it can be used later to retrieve the associated encoding properties.</target>
        </segment>
      </unit>
      <unit id="144">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Each <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ComboBoxItem</pc> is then added to the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">ComboBox</pc> passed into the method.</source>
          <target xml:space="preserve">Each <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ComboBoxItem</pc> is then added to the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">ComboBox</pc> passed into the method.</target>
        </segment>
      </unit>
      <unit id="145">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/BasicMediaCaptureWin10/cs/MainPage.xaml.cs#SnippetPopulateStreamPropertiesUI)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">PopulateStreamPropertiesUI</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">PopulateStreamPropertiesUI</pc>]</target>
        </segment>
      </unit>
      <unit id="146">
        <segment state="initial">
          <source xml:space="preserve">Set the desired stream properties</source>
          <target xml:space="preserve">Set the desired stream properties</target>
        </segment>
      </unit>
      <unit id="147">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh700895)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Tell the video device controller to use your desired encoding properties by calling <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SetMediaStreamPropertiesAsync</pc></pc>, passing in the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">MediaStreamType</pc> value indicating whether the photo, video, or preview properties should be set.</source>
          <target xml:space="preserve">Tell the video device controller to use your desired encoding properties by calling <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SetMediaStreamPropertiesAsync</pc></pc>, passing in the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">MediaStreamType</pc> value indicating whether the photo, video, or preview properties should be set.</target>
        </segment>
      </unit>
      <unit id="148">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">This example sets the requested encoding properties when the user selects an item in one of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ComboBox</pc> objects populated with the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">PopulateStreamPropertiesUI</pc> helper method.</source>
          <target xml:space="preserve">This example sets the requested encoding properties when the user selects an item in one of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ComboBox</pc> objects populated with the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">PopulateStreamPropertiesUI</pc> helper method.</target>
        </segment>
      </unit>
      <unit id="149">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/BasicMediaCaptureWin10/cs/MainPage.xaml.cs#SnippetPreviewSettingsChanged)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">PreviewSettingsChanged</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">PreviewSettingsChanged</pc>]</target>
        </segment>
      </unit>
      <unit id="150">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/BasicMediaCaptureWin10/cs/MainPage.xaml.cs#SnippetPhotoSettingsChanged)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">PhotoSettingsChanged</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">PhotoSettingsChanged</pc>]</target>
        </segment>
      </unit>
      <unit id="151">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/BasicMediaCaptureWin10/cs/MainPage.xaml.cs#SnippetVideoSettingsChanged)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">VideoSettingsChanged</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">VideoSettingsChanged</pc>]</target>
        </segment>
      </unit>
      <unit id="152">
        <segment state="initial">
          <source xml:space="preserve">Match the aspect ratio of the preview and capture streams</source>
          <target xml:space="preserve">Match the aspect ratio of the preview and capture streams</target>
        </segment>
      </unit>
      <unit id="153">
        <segment state="initial">
          <source xml:space="preserve">A typical camera app will provide UI for the user to select the video or photo capture resolution but will programmatically set the preview resolution.</source>
          <target xml:space="preserve">A typical camera app will provide UI for the user to select the video or photo capture resolution but will programmatically set the preview resolution.</target>
        </segment>
      </unit>
      <unit id="154">
        <segment state="initial">
          <source xml:space="preserve">There are a few different strategies for selecting the best preview stream resolution for your app:</source>
          <target xml:space="preserve">There are a few different strategies for selecting the best preview stream resolution for your app:</target>
        </segment>
      </unit>
      <unit id="155">
        <segment state="initial">
          <source xml:space="preserve">Select the highest available preview resolution, letting the UI framework perform any necessary scaling of the preview.</source>
          <target xml:space="preserve">Select the highest available preview resolution, letting the UI framework perform any necessary scaling of the preview.</target>
        </segment>
      </unit>
      <unit id="156">
        <segment state="initial">
          <source xml:space="preserve">Select the preview resolution closest to the capture resolution so that the preview displays the closest representation to the final captured media.</source>
          <target xml:space="preserve">Select the preview resolution closest to the capture resolution so that the preview displays the closest representation to the final captured media.</target>
        </segment>
      </unit>
      <unit id="157">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br209278)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Select the preview resolution closest to the size of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CaptureElement</pc></pc> so that no more pixels than necessary are going through the preview stream pipeline.</source>
          <target xml:space="preserve">Select the preview resolution closest to the size of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CaptureElement</pc></pc> so that no more pixels than necessary are going through the preview stream pipeline.</target>
        </segment>
      </unit>
      <unit id="158">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Important</pc>
					</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Important</pc>
					</target>
        </segment>
      </unit>
      <unit id="159">
        <segment state="initial">
          <source xml:space="preserve">It is possible, on some devices, to set a different aspect ratio for the camera's preview stream and capture stream.</source>
          <target xml:space="preserve">It is possible, on some devices, to set a different aspect ratio for the camera's preview stream and capture stream.</target>
        </segment>
      </unit>
      <unit id="160">
        <segment state="initial">
          <source xml:space="preserve">Frame cropping caused by this mismatch can result in content being present in the captured media that was not visible in the preview which can result in a negative user experience.</source>
          <target xml:space="preserve">Frame cropping caused by this mismatch can result in content being present in the captured media that was not visible in the preview which can result in a negative user experience.</target>
        </segment>
      </unit>
      <unit id="161">
        <segment state="initial">
          <source xml:space="preserve">It is strongly recommended that you use the same aspect ratio, within a small tolerance window, for the preview and capture streams.</source>
          <target xml:space="preserve">It is strongly recommended that you use the same aspect ratio, within a small tolerance window, for the preview and capture streams.</target>
        </segment>
      </unit>
      <unit id="162">
        <segment state="initial">
          <source xml:space="preserve">It is fine to have entirely different resolutions enabled for capture and preview as long as the aspect ratio match closely.</source>
          <target xml:space="preserve">It is fine to have entirely different resolutions enabled for capture and preview as long as the aspect ratio match closely.</target>
        </segment>
      </unit>
      <unit id="163">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br211995)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To ensure that the photo or video capture streams match the aspect ratio of the preview stream, this example calls <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">VideoDeviceController.GetMediaStreamProperties</pc></pc> and passes in the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">VideoPreview</pc> enum value to request the current stream properties for the preview stream.</source>
          <target xml:space="preserve">To ensure that the photo or video capture streams match the aspect ratio of the preview stream, this example calls <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">VideoDeviceController.GetMediaStreamProperties</pc></pc> and passes in the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">VideoPreview</pc> enum value to request the current stream properties for the preview stream.</target>
        </segment>
      </unit>
      <unit id="164">
        <segment state="initial">
          <source xml:space="preserve">Next a small aspect ratio tolerance window is defined so that we can include aspect ratios that are not exactly the same as the preview stream, as long as they are close.</source>
          <target xml:space="preserve">Next a small aspect ratio tolerance window is defined so that we can include aspect ratios that are not exactly the same as the preview stream, as long as they are close.</target>
        </segment>
      </unit>
      <unit id="165">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Next, a Linq extension method is used to select just the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">StreamPropertiesHelper</pc> objects where the aspect ratio is within the defined tolerance range of the preview stream.</source>
          <target xml:space="preserve">Next, a Linq extension method is used to select just the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">StreamPropertiesHelper</pc> objects where the aspect ratio is within the defined tolerance range of the preview stream.</target>
        </segment>
      </unit>
      <unit id="166">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/BasicMediaCaptureWin10/cs/MainPage.xaml.cs#SnippetMatchPreviewAspectRatio)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">MatchPreviewAspectRatio</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">MatchPreviewAspectRatio</pc>]</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>