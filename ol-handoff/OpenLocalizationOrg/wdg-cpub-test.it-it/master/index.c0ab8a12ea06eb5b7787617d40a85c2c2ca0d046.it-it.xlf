<?xml version="1.0" encoding="utf-8"?>
<xliff srcLang="en-US" trgLang="it-it" version="2.0" xmlns="urn:oasis:names:tc:xliff:document:2.0" xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">05077cfa25a79cdd5edfbe0bbc5d4bbc8025be35</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source xml:space="preserve">ms.assetid: 83b4be37-6613-4d00-a48a-0451a24a30fb</source>
          <target xml:space="preserve">ms.assetid: 83b4be37-6613-4d00-a48a-0451a24a30fb</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source xml:space="preserve">title: Data binding</source>
          <target xml:space="preserve">title: Data binding</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source xml:space="preserve">description: .</source>
          <target xml:space="preserve">description: .</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source xml:space="preserve">Data binding</source>
          <target xml:space="preserve">Data binding</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source xml:space="preserve">\[ Updated for UWP apps on Windows 10.</source>
          <target xml:space="preserve">\[ Updated for UWP apps on Windows 10.</target>
        </segment>
      </unit>
      <unit id="106">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
          <target xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source xml:space="preserve">Data binding is a way for your app's UI to display data, and optionally to stay in sync with that data.</source>
          <target xml:space="preserve">Data binding is a way for your app's UI to display data, and optionally to stay in sync with that data.</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source xml:space="preserve">Data binding allows you to separate the concern of data from the concern of UI, and that results in a simpler conceptual model as well as better readability, testability, and maintainability of your app.</source>
          <target xml:space="preserve">Data binding allows you to separate the concern of data from the concern of UI, and that results in a simpler conceptual model as well as better readability, testability, and maintainability of your app.</target>
        </segment>
      </unit>
      <unit id="109">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/Mt204783)</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/Mt204782)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">In markup, you can choose to use either the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">{x:Bind} markup extension</pc> or the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">{Binding} markup extension</pc>.</source>
          <target xml:space="preserve">In markup, you can choose to use either the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">{x:Bind} markup extension</pc> or the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">{Binding} markup extension</pc>.</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source xml:space="preserve">And you can even use a mixture of the two in the same app—even on the same UI element.</source>
          <target xml:space="preserve">And you can even use a mixture of the two in the same app—even on the same UI element.</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source xml:space="preserve">{x:Bind} is new for Windows 10 and it has better performance.</source>
          <target xml:space="preserve">{x:Bind} is new for Windows 10 and it has better performance.</target>
        </segment>
      </unit>
      <unit id="112">
        <segment state="initial">
          <source xml:space="preserve">{Binding} has more features.</source>
          <target xml:space="preserve">{Binding} has more features.</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source xml:space="preserve">Topic</source>
          <target xml:space="preserve">Topic</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source xml:space="preserve">Description</source>
          <target xml:space="preserve">Description</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source xml:space="preserve">Data binding overview</source>
          <target xml:space="preserve">Data binding overview</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source xml:space="preserve">This topic shows you how to bind a control (or other UI element) to a single item or bind an items control to a collection of items in a Universal Windows Platform (UWP) app.</source>
          <target xml:space="preserve">This topic shows you how to bind a control (or other UI element) to a single item or bind an items control to a collection of items in a Universal Windows Platform (UWP) app.</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source xml:space="preserve">In addition, we show how to control the rendering of items, implement a details view based on a selection, and convert data for display.</source>
          <target xml:space="preserve">In addition, we show how to control the rendering of items, implement a details view based on a selection, and convert data for display.</target>
        </segment>
      </unit>
      <unit id="118">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](data-binding-in-depth.md)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For more detailed info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Data binding in depth</pc>.</source>
          <target xml:space="preserve">For more detailed info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Data binding in depth</pc>.</target>
        </segment>
      </unit>
      <unit id="119">
        <segment state="initial">
          <source xml:space="preserve">Data binding in depth</source>
          <target xml:space="preserve">Data binding in depth</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source xml:space="preserve">Data binding is a way for your app's UI to display data, and optionally to stay in sync with that data.</source>
          <target xml:space="preserve">Data binding is a way for your app's UI to display data, and optionally to stay in sync with that data.</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source xml:space="preserve">Data binding allows you to separate the concern of data from the concern of UI, and that results in a simpler conceptual model as well as better readability, testability, and maintainability of your app.</source>
          <target xml:space="preserve">Data binding allows you to separate the concern of data from the concern of UI, and that results in a simpler conceptual model as well as better readability, testability, and maintainability of your app.</target>
        </segment>
      </unit>
      <unit id="122">
        <segment state="initial">
          <source xml:space="preserve">Sample data on the design surface, and for prototyping</source>
          <target xml:space="preserve">Sample data on the design surface, and for prototyping</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source xml:space="preserve">It may be impossible or undesirable (perhaps for reasons of privacy or performance) for your app to display live data on the design surface in Microsoft Visual Studio or Blend for Visual Studio.</source>
          <target xml:space="preserve">It may be impossible or undesirable (perhaps for reasons of privacy or performance) for your app to display live data on the design surface in Microsoft Visual Studio or Blend for Visual Studio.</target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source xml:space="preserve">In order to have your controls populated with data (so that you can work on your app's layout, templates, and other visual properties), there are various ways in which you can use design-time sample data.</source>
          <target xml:space="preserve">In order to have your controls populated with data (so that you can work on your app's layout, templates, and other visual properties), there are various ways in which you can use design-time sample data.</target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source xml:space="preserve">Sample data can also be really useful and time-saving if you're building a sketch (or prototype) app.</source>
          <target xml:space="preserve">Sample data can also be really useful and time-saving if you're building a sketch (or prototype) app.</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source xml:space="preserve">You can use sample data in your sketch or prototype at run-time to illustrate your ideas without going as far as connecting to real, live data.</source>
          <target xml:space="preserve">You can use sample data in your sketch or prototype at run-time to illustrate your ideas without going as far as connecting to real, live data.</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source xml:space="preserve">Bind hierarchical data and create a master/details view</source>
          <target xml:space="preserve">Bind hierarchical data and create a master/details view</target>
        </segment>
      </unit>
      <unit id="128">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR209833)</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">You can make a multi-level master/details (also known as list-details) view of hierarchical data by binding items controls to <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />CollectionViewSource<ph dataRef="id4" id="ph2" /></pc> instances that are bound together in a chain.</source>
          <target xml:space="preserve">You can make a multi-level master/details (also known as list-details) view of hierarchical data by binding items controls to <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />CollectionViewSource<ph dataRef="id4" id="ph2" /></pc> instances that are bound together in a chain.</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>