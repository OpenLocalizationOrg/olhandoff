<?xml version="1.0" encoding="utf-8"?>
<xliff srcLang="en-US" trgLang="it-it" version="2.0" xmlns="urn:oasis:names:tc:xliff:document:2.0" xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">7705d7a4dd1dc693c409d1d3c039feab7ec1030a</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source xml:space="preserve">Description: Lists the Microsoft UI Automation control patterns, the classes that clients use to access them, and the interfaces providers use to implement them.</source>
          <target xml:space="preserve">Description: Lists the Microsoft UI Automation control patterns, the classes that clients use to access them, and the interfaces providers use to implement them.</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source xml:space="preserve">title: Control patterns and interfaces</source>
          <target xml:space="preserve">title: Control patterns and interfaces</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source xml:space="preserve">ms.assetid: 2091883C-5D0C-44ED-936A-709022926A42</source>
          <target xml:space="preserve">ms.assetid: 2091883C-5D0C-44ED-936A-709022926A42</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source xml:space="preserve">label: Control patterns and interfaces</source>
          <target xml:space="preserve">label: Control patterns and interfaces</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source xml:space="preserve">template: detail.hbs</source>
          <target xml:space="preserve">template: detail.hbs</target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source xml:space="preserve">Control patterns and interfaces</source>
          <target xml:space="preserve">Control patterns and interfaces</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source xml:space="preserve">\[ Updated for UWP apps on Windows 10.</source>
          <target xml:space="preserve">\[ Updated for UWP apps on Windows 10.</target>
        </segment>
      </unit>
      <unit id="108">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
          <target xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source xml:space="preserve">Lists the Microsoft UI Automation control patterns, the classes that clients use to access them, and the interfaces providers use to implement them.</source>
          <target xml:space="preserve">Lists the Microsoft UI Automation control patterns, the classes that clients use to access them, and the interfaces providers use to implement them.</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source xml:space="preserve">The table in this topic describes the Microsoft UI Automation control patterns.</source>
          <target xml:space="preserve">The table in this topic describes the Microsoft UI Automation control patterns.</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source xml:space="preserve">The table also lists the classes used by UI Automation clients to access the control patterns and the interfaces used by UI Automation providers to implement them.</source>
          <target xml:space="preserve">The table also lists the classes used by UI Automation clients to access the control patterns and the interfaces used by UI Automation providers to implement them.</target>
        </segment>
      </unit>
      <unit id="112">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/desktop/Ee671199)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Control pattern</pc> column shows the pattern name from the UI Automation client perspective, as a constant value listed in <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">Control Pattern Availability Property Identifiers</pc></pc>.</source>
          <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Control pattern</pc> column shows the pattern name from the UI Automation client perspective, as a constant value listed in <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">Control Pattern Availability Property Identifiers</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="113">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR242496)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">From the UI Automation provider perspective, each of these patterns is a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PatternInterface</pc></pc> constant name.</source>
          <target xml:space="preserve">From the UI Automation provider perspective, each of these patterns is a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PatternInterface</pc></pc> constant name.</target>
        </segment>
      </unit>
      <unit id="114">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Class provider interface</pc> column shows the name of the interface that providers implement to provide this pattern for a custom XAML control.</source>
          <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Class provider interface</pc> column shows the name of the interface that providers implement to provide this pattern for a custom XAML control.</target>
        </segment>
      </unit>
      <unit id="115">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](custom-automation-peers.md)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For more info about how to implement custom automation peers that expose control patterns and implement the interfaces, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Custom automation peers</pc>.</source>
          <target xml:space="preserve">For more info about how to implement custom automation peers that expose control patterns and implement the interfaces, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Custom automation peers</pc>.</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source xml:space="preserve">When you implement a control pattern, you should also consult the UI Automation provider documentation that explains some of the expectations that clients will have of a control pattern regardless of which UI framework is used to implement it.</source>
          <target xml:space="preserve">When you implement a control pattern, you should also consult the UI Automation provider documentation that explains some of the expectations that clients will have of a control pattern regardless of which UI framework is used to implement it.</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source xml:space="preserve">Some of the info listed in the general UI Automation provider documentation will influence how you implement your peers and correctly support that pattern.</source>
          <target xml:space="preserve">Some of the info listed in the general UI Automation provider documentation will influence how you implement your peers and correctly support that pattern.</target>
        </segment>
      </unit>
      <unit id="118">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/desktop/Ee671292)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Implementing UI Automation Control Patterns</pc>, and view the page that documents the pattern you intend to implement.</source>
          <target xml:space="preserve">See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Implementing UI Automation Control Patterns</pc>, and view the page that documents the pattern you intend to implement.</target>
        </segment>
      </unit>
      <unit id="119">
        <segment state="initial">
          <source xml:space="preserve">Control pattern</source>
          <target xml:space="preserve">Control pattern</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source xml:space="preserve">Class provider interface</source>
          <target xml:space="preserve">Class provider interface</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source xml:space="preserve">Description</source>
          <target xml:space="preserve">Description</target>
        </segment>
      </unit>
      <unit id="122">
        <segment state="initial">
          <source xml:space="preserve">Annotation</source>
          <target xml:space="preserve">Annotation</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source xml:space="preserve">IAnnotationProvider</source>
          <target xml:space="preserve">IAnnotationProvider</target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source xml:space="preserve">Used to expose the properties of an annotation in a document.</source>
          <target xml:space="preserve">Used to expose the properties of an annotation in a document.</target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source xml:space="preserve">Dock</source>
          <target xml:space="preserve">Dock</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source xml:space="preserve">IDockProvider</source>
          <target xml:space="preserve">IDockProvider</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source xml:space="preserve">Used for controls that can be docked in a docking container.</source>
          <target xml:space="preserve">Used for controls that can be docked in a docking container.</target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source xml:space="preserve">For example, toolbars or tool palettes.</source>
          <target xml:space="preserve">For example, toolbars or tool palettes.</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source xml:space="preserve">Drag</source>
          <target xml:space="preserve">Drag</target>
        </segment>
      </unit>
      <unit id="130">
        <segment state="initial">
          <source xml:space="preserve">IDragProvider</source>
          <target xml:space="preserve">IDragProvider</target>
        </segment>
      </unit>
      <unit id="131">
        <segment state="initial">
          <source xml:space="preserve">Used to support draggable controls, or controls with draggable items.</source>
          <target xml:space="preserve">Used to support draggable controls, or controls with draggable items.</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source xml:space="preserve">DropTarget</source>
          <target xml:space="preserve">DropTarget</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source xml:space="preserve">IDropTargetProvider</source>
          <target xml:space="preserve">IDropTargetProvider</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source xml:space="preserve">Used to support controls that can be the target of a drag-and-drop operation.</source>
          <target xml:space="preserve">Used to support controls that can be the target of a drag-and-drop operation.</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source xml:space="preserve">ExpandCollapse</source>
          <target xml:space="preserve">ExpandCollapse</target>
        </segment>
      </unit>
      <unit id="136">
        <segment state="initial">
          <source xml:space="preserve">IExpandCollapseProvider</source>
          <target xml:space="preserve">IExpandCollapseProvider</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source xml:space="preserve">Used to support controls that visually expand to display more content and collapse to hide content.</source>
          <target xml:space="preserve">Used to support controls that visually expand to display more content and collapse to hide content.</target>
        </segment>
      </unit>
      <unit id="138">
        <segment state="initial">
          <source xml:space="preserve">Grid</source>
          <target xml:space="preserve">Grid</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source xml:space="preserve">IGridProvider</source>
          <target xml:space="preserve">IGridProvider</target>
        </segment>
      </unit>
      <unit id="140">
        <segment state="initial">
          <source xml:space="preserve">Used for controls that support grid functionality such as sizing and moving to a specified cell.</source>
          <target xml:space="preserve">Used for controls that support grid functionality such as sizing and moving to a specified cell.</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source xml:space="preserve">Note that Grid itself does not implement this pattern because it provides layout but is not a control.</source>
          <target xml:space="preserve">Note that Grid itself does not implement this pattern because it provides layout but is not a control.</target>
        </segment>
      </unit>
      <unit id="142">
        <segment state="initial">
          <source xml:space="preserve">GridItem</source>
          <target xml:space="preserve">GridItem</target>
        </segment>
      </unit>
      <unit id="143">
        <segment state="initial">
          <source xml:space="preserve">IGridItemProvider</source>
          <target xml:space="preserve">IGridItemProvider</target>
        </segment>
      </unit>
      <unit id="144">
        <segment state="initial">
          <source xml:space="preserve">Used for controls that have cells within grids.</source>
          <target xml:space="preserve">Used for controls that have cells within grids.</target>
        </segment>
      </unit>
      <unit id="145">
        <segment state="initial">
          <source xml:space="preserve">Invoke</source>
          <target xml:space="preserve">Invoke</target>
        </segment>
      </unit>
      <unit id="146">
        <segment state="initial">
          <source xml:space="preserve">IInvokeProvider</source>
          <target xml:space="preserve">IInvokeProvider</target>
        </segment>
      </unit>
      <unit id="147">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR209265)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Used for controls that can be invoked, such as a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Button</pc></pc>.</source>
          <target xml:space="preserve">Used for controls that can be invoked, such as a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Button</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="148">
        <segment state="initial">
          <source xml:space="preserve">ItemContainer</source>
          <target xml:space="preserve">ItemContainer</target>
        </segment>
      </unit>
      <unit id="149">
        <segment state="initial">
          <source xml:space="preserve">IItemContainerProvider</source>
          <target xml:space="preserve">IItemContainerProvider</target>
        </segment>
      </unit>
      <unit id="150">
        <segment state="initial">
          <source xml:space="preserve">Enables applications to find an element in a container, such as a virtualized list.</source>
          <target xml:space="preserve">Enables applications to find an element in a container, such as a virtualized list.</target>
        </segment>
      </unit>
      <unit id="151">
        <segment state="initial">
          <source xml:space="preserve">MultipleView</source>
          <target xml:space="preserve">MultipleView</target>
        </segment>
      </unit>
      <unit id="152">
        <segment state="initial">
          <source xml:space="preserve">IMultipleViewProvider</source>
          <target xml:space="preserve">IMultipleViewProvider</target>
        </segment>
      </unit>
      <unit id="153">
        <segment state="initial">
          <source xml:space="preserve">Used for controls that can switch between multiple representations of the same set of information, data, or children.</source>
          <target xml:space="preserve">Used for controls that can switch between multiple representations of the same set of information, data, or children.</target>
        </segment>
      </unit>
      <unit id="154">
        <segment state="initial">
          <source xml:space="preserve">ObjectModel</source>
          <target xml:space="preserve">ObjectModel</target>
        </segment>
      </unit>
      <unit id="155">
        <segment state="initial">
          <source xml:space="preserve">IObjectModelProvider</source>
          <target xml:space="preserve">IObjectModelProvider</target>
        </segment>
      </unit>
      <unit id="156">
        <segment state="initial">
          <source xml:space="preserve">Used to expose a pointer to the underlying object model of a document.</source>
          <target xml:space="preserve">Used to expose a pointer to the underlying object model of a document.</target>
        </segment>
      </unit>
      <unit id="157">
        <segment state="initial">
          <source xml:space="preserve">RangeValue</source>
          <target xml:space="preserve">RangeValue</target>
        </segment>
      </unit>
      <unit id="158">
        <segment state="initial">
          <source xml:space="preserve">IRangeValueProvider</source>
          <target xml:space="preserve">IRangeValueProvider</target>
        </segment>
      </unit>
      <unit id="159">
        <segment state="initial">
          <source xml:space="preserve">Used for controls that have a range of values that can be applied to the control.</source>
          <target xml:space="preserve">Used for controls that have a range of values that can be applied to the control.</target>
        </segment>
      </unit>
      <unit id="160">
        <segment state="initial">
          <source xml:space="preserve">For example, a spinner control containing years might have a range of 1900 to the current year, while another spinner control presenting months would have a range of 1 to 12.</source>
          <target xml:space="preserve">For example, a spinner control containing years might have a range of 1900 to the current year, while another spinner control presenting months would have a range of 1 to 12.</target>
        </segment>
      </unit>
      <unit id="161">
        <segment state="initial">
          <source xml:space="preserve">Scroll</source>
          <target xml:space="preserve">Scroll</target>
        </segment>
      </unit>
      <unit id="162">
        <segment state="initial">
          <source xml:space="preserve">IScrollProvider</source>
          <target xml:space="preserve">IScrollProvider</target>
        </segment>
      </unit>
      <unit id="163">
        <segment state="initial">
          <source xml:space="preserve">Used for controls that can scroll.</source>
          <target xml:space="preserve">Used for controls that can scroll.</target>
        </segment>
      </unit>
      <unit id="164">
        <segment state="initial">
          <source xml:space="preserve">For example, a control that has scroll bars that are active when there is more information than can be displayed in the viewable area of the control.</source>
          <target xml:space="preserve">For example, a control that has scroll bars that are active when there is more information than can be displayed in the viewable area of the control.</target>
        </segment>
      </unit>
      <unit id="165">
        <segment state="initial">
          <source xml:space="preserve">ScrollItem</source>
          <target xml:space="preserve">ScrollItem</target>
        </segment>
      </unit>
      <unit id="166">
        <segment state="initial">
          <source xml:space="preserve">IScrollItemProvider</source>
          <target xml:space="preserve">IScrollItemProvider</target>
        </segment>
      </unit>
      <unit id="167">
        <segment state="initial">
          <source xml:space="preserve">Used for controls that have individual items in a list that scrolls.</source>
          <target xml:space="preserve">Used for controls that have individual items in a list that scrolls.</target>
        </segment>
      </unit>
      <unit id="168">
        <segment state="initial">
          <source xml:space="preserve">For example, a list control that has individual items in the scroll list, such as a combo box control.</source>
          <target xml:space="preserve">For example, a list control that has individual items in the scroll list, such as a combo box control.</target>
        </segment>
      </unit>
      <unit id="169">
        <segment state="initial">
          <source xml:space="preserve">Selection</source>
          <target xml:space="preserve">Selection</target>
        </segment>
      </unit>
      <unit id="170">
        <segment state="initial">
          <source xml:space="preserve">ISelectionProvider</source>
          <target xml:space="preserve">ISelectionProvider</target>
        </segment>
      </unit>
      <unit id="171">
        <segment state="initial">
          <source xml:space="preserve">Used for selection container controls.</source>
          <target xml:space="preserve">Used for selection container controls.</target>
        </segment>
      </unit>
      <unit id="172">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR242868)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/BR209348)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For example, <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ListBox</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">ComboBox</pc></pc>.</source>
          <target xml:space="preserve">For example, <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ListBox</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">ComboBox</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="173">
        <segment state="initial">
          <source xml:space="preserve">SelectionItem</source>
          <target xml:space="preserve">SelectionItem</target>
        </segment>
      </unit>
      <unit id="174">
        <segment state="initial">
          <source xml:space="preserve">ISelectionItemProvider</source>
          <target xml:space="preserve">ISelectionItemProvider</target>
        </segment>
      </unit>
      <unit id="175">
        <segment state="initial">
          <source xml:space="preserve">Used for individual items in selection container controls, such as list boxes and combo boxes.</source>
          <target xml:space="preserve">Used for individual items in selection container controls, such as list boxes and combo boxes.</target>
        </segment>
      </unit>
      <unit id="176">
        <segment state="initial">
          <source xml:space="preserve">Spreadsheet</source>
          <target xml:space="preserve">Spreadsheet</target>
        </segment>
      </unit>
      <unit id="177">
        <segment state="initial">
          <source xml:space="preserve">ISpreadsheetProvider</source>
          <target xml:space="preserve">ISpreadsheetProvider</target>
        </segment>
      </unit>
      <unit id="178">
        <segment state="initial">
          <source xml:space="preserve">Used to expose the contents of a spreadsheet or other grid-based document.</source>
          <target xml:space="preserve">Used to expose the contents of a spreadsheet or other grid-based document.</target>
        </segment>
      </unit>
      <unit id="179">
        <segment state="initial">
          <source xml:space="preserve">SpreadsheetItem</source>
          <target xml:space="preserve">SpreadsheetItem</target>
        </segment>
      </unit>
      <unit id="180">
        <segment state="initial">
          <source xml:space="preserve">ISpreadsheetItemProvider</source>
          <target xml:space="preserve">ISpreadsheetItemProvider</target>
        </segment>
      </unit>
      <unit id="181">
        <segment state="initial">
          <source xml:space="preserve">Used to expose the properties of a cell in a spreadsheet or other grid-based document.</source>
          <target xml:space="preserve">Used to expose the properties of a cell in a spreadsheet or other grid-based document.</target>
        </segment>
      </unit>
      <unit id="182">
        <segment state="initial">
          <source xml:space="preserve">Styles</source>
          <target xml:space="preserve">Styles</target>
        </segment>
      </unit>
      <unit id="183">
        <segment state="initial">
          <source xml:space="preserve">IStylesProvider</source>
          <target xml:space="preserve">IStylesProvider</target>
        </segment>
      </unit>
      <unit id="184">
        <segment state="initial">
          <source xml:space="preserve">Used to describe a UI element that has a specific style, fill color, fill pattern, or shape.</source>
          <target xml:space="preserve">Used to describe a UI element that has a specific style, fill color, fill pattern, or shape.</target>
        </segment>
      </unit>
      <unit id="185">
        <segment state="initial">
          <source xml:space="preserve">SynchronizedInput</source>
          <target xml:space="preserve">SynchronizedInput</target>
        </segment>
      </unit>
      <unit id="186">
        <segment state="initial">
          <source xml:space="preserve">ISynchronizedInputProvider</source>
          <target xml:space="preserve">ISynchronizedInputProvider</target>
        </segment>
      </unit>
      <unit id="187">
        <segment state="initial">
          <source xml:space="preserve">Enables UI Automation client apps to direct the mouse or keyboard input to a specific UI element.</source>
          <target xml:space="preserve">Enables UI Automation client apps to direct the mouse or keyboard input to a specific UI element.</target>
        </segment>
      </unit>
      <unit id="188">
        <segment state="initial">
          <source xml:space="preserve">Table</source>
          <target xml:space="preserve">Table</target>
        </segment>
      </unit>
      <unit id="189">
        <segment state="initial">
          <source xml:space="preserve">ITableProvider</source>
          <target xml:space="preserve">ITableProvider</target>
        </segment>
      </unit>
      <unit id="190">
        <segment state="initial">
          <source xml:space="preserve">Used for controls that have a grid as well as header information.</source>
          <target xml:space="preserve">Used for controls that have a grid as well as header information.</target>
        </segment>
      </unit>
      <unit id="191">
        <segment state="initial">
          <source xml:space="preserve">For example, a tabular calendar control.</source>
          <target xml:space="preserve">For example, a tabular calendar control.</target>
        </segment>
      </unit>
      <unit id="192">
        <segment state="initial">
          <source xml:space="preserve">TableItem</source>
          <target xml:space="preserve">TableItem</target>
        </segment>
      </unit>
      <unit id="193">
        <segment state="initial">
          <source xml:space="preserve">ITableItemProvider</source>
          <target xml:space="preserve">ITableItemProvider</target>
        </segment>
      </unit>
      <unit id="194">
        <segment state="initial">
          <source xml:space="preserve">Used for items in a table.</source>
          <target xml:space="preserve">Used for items in a table.</target>
        </segment>
      </unit>
      <unit id="195">
        <segment state="initial">
          <source xml:space="preserve">Text</source>
          <target xml:space="preserve">Text</target>
        </segment>
      </unit>
      <unit id="196">
        <segment state="initial">
          <source xml:space="preserve">ITextProvider</source>
          <target xml:space="preserve">ITextProvider</target>
        </segment>
      </unit>
      <unit id="197">
        <segment state="initial">
          <source xml:space="preserve">Used for edit controls and documents that expose textual information.</source>
          <target xml:space="preserve">Used for edit controls and documents that expose textual information.</target>
        </segment>
      </unit>
      <unit id="198">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR242634)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/BR2426272)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">See also <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ITextRangeProvider</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">ITextProvider2</pc></pc>.</source>
          <target xml:space="preserve">See also <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ITextRangeProvider</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">ITextProvider2</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="199">
        <segment state="initial">
          <source xml:space="preserve">TextChild</source>
          <target xml:space="preserve">TextChild</target>
        </segment>
      </unit>
      <unit id="200">
        <segment state="initial">
          <source xml:space="preserve">ITextChildProvider</source>
          <target xml:space="preserve">ITextChildProvider</target>
        </segment>
      </unit>
      <unit id="201">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Used to access an element’s nearest ancestor that supports the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Text</pc> control pattern.</source>
          <target xml:space="preserve">Used to access an element’s nearest ancestor that supports the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Text</pc> control pattern.</target>
        </segment>
      </unit>
      <unit id="202">
        <segment state="initial">
          <source xml:space="preserve">TextEdit</source>
          <target xml:space="preserve">TextEdit</target>
        </segment>
      </unit>
      <unit id="203">
        <segment state="initial">
          <source xml:space="preserve">No managed class available</source>
          <target xml:space="preserve">No managed class available</target>
        </segment>
      </unit>
      <unit id="204">
        <segment state="initial">
          <source xml:space="preserve">Provides access to a control that modifies text, for example a control that performs auto-correction or enables input composition through an Input Method Editor (IME).</source>
          <target xml:space="preserve">Provides access to a control that modifies text, for example a control that performs auto-correction or enables input composition through an Input Method Editor (IME).</target>
        </segment>
      </unit>
      <unit id="205">
        <segment state="initial">
          <source xml:space="preserve">TextRange</source>
          <target xml:space="preserve">TextRange</target>
        </segment>
      </unit>
      <unit id="206">
        <segment state="initial">
          <source xml:space="preserve">ITextRangeProvider</source>
          <target xml:space="preserve">ITextRangeProvider</target>
        </segment>
      </unit>
      <unit id="207">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR242627)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Provides access to a span of continuous text in a text container that implements <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ITextProvider</pc></pc>.</source>
          <target xml:space="preserve">Provides access to a span of continuous text in a text container that implements <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ITextProvider</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="208">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR2426342)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">See also <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ITextRangeProvider2</pc></pc>.</source>
          <target xml:space="preserve">See also <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ITextRangeProvider2</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="209">
        <segment state="initial">
          <source xml:space="preserve">Toggle</source>
          <target xml:space="preserve">Toggle</target>
        </segment>
      </unit>
      <unit id="210">
        <segment state="initial">
          <source xml:space="preserve">IToggleProvider</source>
          <target xml:space="preserve">IToggleProvider</target>
        </segment>
      </unit>
      <unit id="211">
        <segment state="initial">
          <source xml:space="preserve">Used for controls where the state can be toggled.</source>
          <target xml:space="preserve">Used for controls where the state can be toggled.</target>
        </segment>
      </unit>
      <unit id="212">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR209316)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For example, <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CheckBox</pc></pc> and menu items that can be checked.</source>
          <target xml:space="preserve">For example, <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CheckBox</pc></pc> and menu items that can be checked.</target>
        </segment>
      </unit>
      <unit id="213">
        <segment state="initial">
          <source xml:space="preserve">Transform</source>
          <target xml:space="preserve">Transform</target>
        </segment>
      </unit>
      <unit id="214">
        <segment state="initial">
          <source xml:space="preserve">ITransformProvider</source>
          <target xml:space="preserve">ITransformProvider</target>
        </segment>
      </unit>
      <unit id="215">
        <segment state="initial">
          <source xml:space="preserve">Used for controls that can be resized, moved, and rotated.</source>
          <target xml:space="preserve">Used for controls that can be resized, moved, and rotated.</target>
        </segment>
      </unit>
      <unit id="216">
        <segment state="initial">
          <source xml:space="preserve">Typical uses for the Transform control pattern are in designers, forms, graphical editors, and drawing applications.</source>
          <target xml:space="preserve">Typical uses for the Transform control pattern are in designers, forms, graphical editors, and drawing applications.</target>
        </segment>
      </unit>
      <unit id="217">
        <segment state="initial">
          <source xml:space="preserve">Value</source>
          <target xml:space="preserve">Value</target>
        </segment>
      </unit>
      <unit id="218">
        <segment state="initial">
          <source xml:space="preserve">IValueProvider</source>
          <target xml:space="preserve">IValueProvider</target>
        </segment>
      </unit>
      <unit id="219">
        <segment state="initial">
          <source xml:space="preserve">Allows clients to get or set a value on controls that do not support a range of values.</source>
          <target xml:space="preserve">Allows clients to get or set a value on controls that do not support a range of values.</target>
        </segment>
      </unit>
      <unit id="220">
        <segment state="initial">
          <source xml:space="preserve">VirtualizedItem</source>
          <target xml:space="preserve">VirtualizedItem</target>
        </segment>
      </unit>
      <unit id="221">
        <segment state="initial">
          <source xml:space="preserve">IVirtualizedItemProvider</source>
          <target xml:space="preserve">IVirtualizedItemProvider</target>
        </segment>
      </unit>
      <unit id="222">
        <segment state="initial">
          <source xml:space="preserve">Exposes items inside containers that are virtualized and need to be made fully accessible as UI Automation elements.</source>
          <target xml:space="preserve">Exposes items inside containers that are virtualized and need to be made fully accessible as UI Automation elements.</target>
        </segment>
      </unit>
      <unit id="223">
        <segment state="initial">
          <source xml:space="preserve">Window</source>
          <target xml:space="preserve">Window</target>
        </segment>
      </unit>
      <unit id="224">
        <segment state="initial">
          <source xml:space="preserve">IWindowProvider</source>
          <target xml:space="preserve">IWindowProvider</target>
        </segment>
      </unit>
      <unit id="225">
        <segment state="initial">
          <source xml:space="preserve">Exposes information specific to windows, a fundamental concept to the Microsoft Windows operating system.</source>
          <target xml:space="preserve">Exposes information specific to windows, a fundamental concept to the Microsoft Windows operating system.</target>
        </segment>
      </unit>
      <unit id="226">
        <segment state="initial">
          <source xml:space="preserve">Examples of controls that are windows are child windows and dialogs.</source>
          <target xml:space="preserve">Examples of controls that are windows are child windows and dialogs.</target>
        </segment>
      </unit>
      <unit id="227">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  You won't necessarily find implementations of all these patterns in existing XAML controls.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  You won't necessarily find implementations of all these patterns in existing XAML controls.</target>
        </segment>
      </unit>
      <unit id="228">
        <segment state="initial">
          <source xml:space="preserve">Some of the patterns have interfaces solely to support parity with the general UI Automation framework definition of patterns, and to support automation peer scenarios that will require a purely custom implementation to support that pattern.</source>
          <target xml:space="preserve">Some of the patterns have interfaces solely to support parity with the general UI Automation framework definition of patterns, and to support automation peer scenarios that will require a purely custom implementation to support that pattern.</target>
        </segment>
      </unit>
      <unit id="229">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  Windows Phone Store apps do not support all the UI Automation control patterns listed here.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  Windows Phone Store apps do not support all the UI Automation control patterns listed here.</target>
        </segment>
      </unit>
      <unit id="230">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
          <data id="id9">**</data>
          <data id="id10">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Annotation</pc>, <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Dock</pc>, <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Drag</pc>, <pc dataRefEnd="id8" dataRefStart="id7" id="p4">DropTarget</pc>, <pc dataRefEnd="id10" dataRefStart="id9" id="p5">ObjectModel</pc> are some of the unsupported patterns.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Annotation</pc>, <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Dock</pc>, <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Drag</pc>, <pc dataRefEnd="id8" dataRefStart="id7" id="p4">DropTarget</pc>, <pc dataRefEnd="id10" dataRefStart="id9" id="p5">ObjectModel</pc> are some of the unsupported patterns.</target>
        </segment>
      </unit>
      <unit id="231">
        <segment state="initial">
          <source xml:space="preserve">Related topics</source>
          <target xml:space="preserve">Related topics</target>
        </segment>
      </unit>
      <unit id="232">
        <segment state="initial">
          <source xml:space="preserve">Custom automation peers</source>
          <target xml:space="preserve">Custom automation peers</target>
        </segment>
      </unit>
      <unit id="233">
        <segment state="initial">
          <source xml:space="preserve">Accessibility</source>
          <target xml:space="preserve">Accessibility</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>