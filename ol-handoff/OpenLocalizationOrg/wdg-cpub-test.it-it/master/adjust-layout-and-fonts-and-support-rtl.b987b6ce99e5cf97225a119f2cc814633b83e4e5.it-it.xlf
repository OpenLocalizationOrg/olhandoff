<?xml version="1.0" encoding="utf-8"?>
<xliff srcLang="en-US" trgLang="it-it" version="2.0" xmlns="urn:oasis:names:tc:xliff:document:2.0" xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">3ee0b0f4215b4ec4973f6e52849ffff56bd49e48</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source xml:space="preserve">Description: Develop your app to support the layouts and fonts of multiple languages, including RTL (right-to-left) flow direction.</source>
          <target xml:space="preserve">Description: Develop your app to support the layouts and fonts of multiple languages, including RTL (right-to-left) flow direction.</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source xml:space="preserve">title: Adjust layout and fonts, and support RTL</source>
          <target xml:space="preserve">title: Adjust layout and fonts, and support RTL</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source xml:space="preserve">ms.assetid: F2522B07-017D-40F1-B3C8-C4D0DFD03AC3</source>
          <target xml:space="preserve">ms.assetid: F2522B07-017D-40F1-B3C8-C4D0DFD03AC3</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source xml:space="preserve">label: Adjust layout and fonts, and support RTL</source>
          <target xml:space="preserve">label: Adjust layout and fonts, and support RTL</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source xml:space="preserve">template: detail.hbs</source>
          <target xml:space="preserve">template: detail.hbs</target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source xml:space="preserve">Adjust layout and fonts, and support RTL</source>
          <target xml:space="preserve">Adjust layout and fonts, and support RTL</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source xml:space="preserve">\[ Updated for UWP apps on Windows 10.</source>
          <target xml:space="preserve">\[ Updated for UWP apps on Windows 10.</target>
        </segment>
      </unit>
      <unit id="108">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
          <target xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source xml:space="preserve">Develop your app to support the layouts and fonts of multiple languages, including RTL (right-to-left) flow direction.</source>
          <target xml:space="preserve">Develop your app to support the layouts and fonts of multiple languages, including RTL (right-to-left) flow direction.</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source xml:space="preserve">Layout guidelines</source>
          <target xml:space="preserve">Layout guidelines</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source xml:space="preserve">Some languages, such as German and Finnish, require more space than English for their text.</source>
          <target xml:space="preserve">Some languages, such as German and Finnish, require more space than English for their text.</target>
        </segment>
      </unit>
      <unit id="112">
        <segment state="initial">
          <source xml:space="preserve">The fonts for some languages, such as Japanese, require more height.</source>
          <target xml:space="preserve">The fonts for some languages, such as Japanese, require more height.</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source xml:space="preserve">And some languages, such as Arabic and Hebrew, require that text layout and app layout must be in right-to-left (RTL) reading order.</source>
          <target xml:space="preserve">And some languages, such as Arabic and Hebrew, require that text layout and app layout must be in right-to-left (RTL) reading order.</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source xml:space="preserve">Use flexible layout mechanisms instead of absolute positioning, fixed widths, or fixed heights.</source>
          <target xml:space="preserve">Use flexible layout mechanisms instead of absolute positioning, fixed widths, or fixed heights.</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source xml:space="preserve">When necessary, particular UI elements can be adjusted based on language.</source>
          <target xml:space="preserve">When necessary, particular UI elements can be adjusted based on language.</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source xml:space="preserve">XAML</source>
          <target xml:space="preserve">XAML</target>
        </segment>
      </unit>
      <unit id="117">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Specify a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Uid</pc> for an element:</source>
          <target xml:space="preserve">Specify a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Uid</pc> for an element:</target>
        </segment>
      </unit>
      <unit id="118">
        <segment state="initial">
          <source xml:space="preserve">Ensure that your app's ResW file has a resource for Block1.Width, which you can set for each language that you localize into.</source>
          <target xml:space="preserve">Ensure that your app's ResW file has a resource for Block1.Width, which you can set for each language that you localize into.</target>
        </segment>
      </unit>
      <unit id="119">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br208716)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For Windows Store apps using C++, C\#, or Visual Basic, use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FlowDirection</pc></pc> property, with symmetrical padding and margins, to enable localization for other layout directions.</source>
          <target xml:space="preserve">For Windows Store apps using C++, C\#, or Visual Basic, use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FlowDirection</pc></pc> property, with symmetrical padding and margins, to enable localization for other layout directions.</target>
        </segment>
      </unit>
      <unit id="120">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br242704)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/br208716)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">XAML layout controls such as <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Grid</pc></pc> scale and flip automatically with the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">FlowDirection</pc></pc> property.</source>
          <target xml:space="preserve">XAML layout controls such as <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Grid</pc></pc> scale and flip automatically with the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">FlowDirection</pc></pc> property.</target>
        </segment>
      </unit>
      <unit id="121">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Expose your own <pc dataRefEnd="id2" dataRefStart="id1" id="p1">FlowDirection</pc> property in your app as a resource for localizers.</source>
          <target xml:space="preserve">Expose your own <pc dataRefEnd="id2" dataRefStart="id1" id="p1">FlowDirection</pc> property in your app as a resource for localizers.</target>
        </segment>
      </unit>
      <unit id="122">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Specify a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Uid</pc> for the main page of your app:</source>
          <target xml:space="preserve">Specify a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Uid</pc> for the main page of your app:</target>
        </segment>
      </unit>
      <unit id="123">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Ensure that your app's <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ResW</pc> file has a resource for MainPage.FlowDirection, which you can set for each language that you localize into.</source>
          <target xml:space="preserve">Ensure that your app's <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ResW</pc> file has a resource for MainPage.FlowDirection, which you can set for each language that you localize into.</target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source xml:space="preserve">HTML</source>
          <target xml:space="preserve">HTML</target>
        </segment>
      </unit>
      <unit id="125">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/ms531209)</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/en-us/library/windows/apps/hh465453.aspx#g_section)</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/en-us/library/windows/apps/hh465453.aspx#f_section)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For Windows Store apps using JavaScript, use <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Cascading Style Sheets (CSS)</pc> layout mechanisms such as <pc dataRefEnd="id4" dataRefStart="id3" id="p2">-ms-grid</pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3">–ms-box</pc>.</source>
          <target xml:space="preserve">For Windows Store apps using JavaScript, use <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Cascading Style Sheets (CSS)</pc> layout mechanisms such as <pc dataRefEnd="id4" dataRefStart="id3" id="p2">-ms-grid</pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3">–ms-box</pc>.</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source xml:space="preserve">Use symmetrical padding and margins to enable localization for various layout directions.</source>
          <target xml:space="preserve">Use symmetrical padding and margins to enable localization for various layout directions.</target>
        </segment>
      </unit>
      <unit id="127">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/cc848867)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Your app can also use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">:-ms-lang()</pc></pc> pseudo-class selector to adjust CSS properties such as width on particular elements based on the language of the app.</source>
          <target xml:space="preserve">Your app can also use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">:-ms-lang()</pc></pc> pseudo-class selector to adjust CSS properties such as width on particular elements based on the language of the app.</target>
        </segment>
      </unit>
      <unit id="128">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To enable this, the App Host sets the root element's <pc dataRefEnd="id2" dataRefStart="id1" id="p1">lang</pc> attribute to the app language.</source>
          <target xml:space="preserve">To enable this, the App Host sets the root element's <pc dataRefEnd="id2" dataRefStart="id1" id="p1">lang</pc> attribute to the app language.</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source xml:space="preserve">CSS</source>
          <target xml:space="preserve">CSS</target>
        </segment>
      </unit>
      <unit id="130">
        <segment state="initial">
          <source xml:space="preserve">Windows Store apps using JavaScript that use the ui-light.css or ui-dark.css style sheets have their body layout direction set automatically, based on the app language.</source>
          <target xml:space="preserve">Windows Store apps using JavaScript that use the ui-light.css or ui-dark.css style sheets have their body layout direction set automatically, based on the app language.</target>
        </segment>
      </unit>
      <unit id="131">
        <segment state="initial">
          <source xml:space="preserve">The following CSS is in ui-light and ui-dark.css, and you don't need to write it yourself.</source>
          <target xml:space="preserve">The following CSS is in ui-light and ui-dark.css, and you don't need to write it yourself.</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source xml:space="preserve">CSS</source>
          <target xml:space="preserve">CSS</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source xml:space="preserve">This means that most app layouts are set correctly when the system uses a right-to-left language.</source>
          <target xml:space="preserve">This means that most app layouts are set correctly when the system uses a right-to-left language.</target>
        </segment>
      </unit>
      <unit id="134">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br229782)</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/cc848867)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
          <data id="id9">**</data>
          <data id="id10">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Like <pc dataRefEnd="id2" dataRefStart="id1" id="p1">WinJS.UI</pc> controls, your app can use the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">:-ms-lang()</pc></pc> pseudo-class selector to adjust physical CSS properties, such as <pc dataRefEnd="id8" dataRefStart="id7" id="p4">margin</pc> and <pc dataRefEnd="id10" dataRefStart="id9" id="p5">padding</pc>.</source>
          <target xml:space="preserve">Like <pc dataRefEnd="id2" dataRefStart="id1" id="p1">WinJS.UI</pc> controls, your app can use the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">:-ms-lang()</pc></pc> pseudo-class selector to adjust physical CSS properties, such as <pc dataRefEnd="id8" dataRefStart="id7" id="p4">margin</pc> and <pc dataRefEnd="id10" dataRefStart="id9" id="p5">padding</pc>.</target>
        </segment>
      </unit>
      <unit id="135">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">You don't need to adjust logical CSS properties that use keywords such as <pc dataRefEnd="id2" dataRefStart="id1" id="p1">after</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">before</pc>.</source>
          <target xml:space="preserve">You don't need to adjust logical CSS properties that use keywords such as <pc dataRefEnd="id2" dataRefStart="id1" id="p1">after</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">before</pc>.</target>
        </segment>
      </unit>
      <unit id="136">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Don't use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">align</pc> property or attribute in HTML.</source>
          <target xml:space="preserve">Don't use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">align</pc> property or attribute in HTML.</target>
        </segment>
      </unit>
      <unit id="137">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Instead, use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">direction</pc> property to control alignment of particular components.</source>
          <target xml:space="preserve">Instead, use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">direction</pc> property to control alignment of particular components.</target>
        </segment>
      </unit>
      <unit id="138">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/ms531187)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">writing-mode</pc></pc> property to support vertical text layouts in CSS.</source>
          <target xml:space="preserve">Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">writing-mode</pc></pc> property to support vertical text layouts in CSS.</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source xml:space="preserve">Mirroring images</source>
          <target xml:space="preserve">Mirroring images</target>
        </segment>
      </unit>
      <unit id="140">
        <segment state="initial">
          <source xml:space="preserve">XAML</source>
          <target xml:space="preserve">XAML</target>
        </segment>
      </unit>
      <unit id="141">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br208716)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">If your app has images that must be mirrored (that is, the same image can be flipped) for RTL, you can apply the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FlowDirection</pc></pc> property:</source>
          <target xml:space="preserve">If your app has images that must be mirrored (that is, the same image can be flipped) for RTL, you can apply the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FlowDirection</pc></pc> property:</target>
        </segment>
      </unit>
      <unit id="142">
        <segment state="initial">
          <source xml:space="preserve">HTML</source>
          <target xml:space="preserve">HTML</target>
        </segment>
      </unit>
      <unit id="143">
        <segment state="initial">
          <source xml:space="preserve">If your app has images that must be mirrored (that is, the same image can be flipped) for RTL, you can use CSS transforms to mirror your images at rendering time by adding a .mirrorable class to your elements and adding the following CSS class:</source>
          <target xml:space="preserve">If your app has images that must be mirrored (that is, the same image can be flipped) for RTL, you can use CSS transforms to mirror your images at rendering time by adding a .mirrorable class to your elements and adding the following CSS class:</target>
        </segment>
      </unit>
      <unit id="144">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/xaml/hh965324)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">For both XAML and HTML:</pc> If your app requires a different image to flip the image correctly, you can use the resource management system with the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">layoutdir qualifier</pc>.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">For both XAML and HTML:</pc> If your app requires a different image to flip the image correctly, you can use the resource management system with the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">layoutdir qualifier</pc>.</target>
        </segment>
      </unit>
      <unit id="145">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](manage-language-and-region.md)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The system chooses an image named file.layoutdir-rtl.png when the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">application language</pc> is set to an RTL language.</source>
          <target xml:space="preserve">The system chooses an image named file.layoutdir-rtl.png when the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">application language</pc> is set to an RTL language.</target>
        </segment>
      </unit>
      <unit id="146">
        <segment state="initial">
          <source xml:space="preserve">This approach may be necessary when some part of the image is flipped, but another part isn't.</source>
          <target xml:space="preserve">This approach may be necessary when some part of the image is flipped, but another part isn't.</target>
        </segment>
      </unit>
      <unit id="147">
        <segment state="initial">
          <source xml:space="preserve">Fonts</source>
          <target xml:space="preserve">Fonts</target>
        </segment>
      </unit>
      <unit id="148">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/br206864)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">For both XAML and HTML:</pc> Use the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">LanguageFont</pc></pc> font-mapping APIs for programmatic access to the recommended font family, size, weight, and style for a particular language.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">For both XAML and HTML:</pc> Use the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">LanguageFont</pc></pc> font-mapping APIs for programmatic access to the recommended font family, size, weight, and style for a particular language.</target>
        </segment>
      </unit>
      <unit id="149">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">LanguageFont</pc> object provides access to the correct font info for various categories of content including UI headers, notifications, body text, and user-editable document body fonts.</source>
          <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">LanguageFont</pc> object provides access to the correct font info for various categories of content including UI headers, notifications, body text, and user-editable document body fonts.</target>
        </segment>
      </unit>
      <unit id="150">
        <segment state="initial">
          <source xml:space="preserve">HTML</source>
          <target xml:space="preserve">HTML</target>
        </segment>
      </unit>
      <unit id="151">
        <segment state="initial">
          <source xml:space="preserve">Windows Store apps using JavaScript that use the ui-light.css or ui-dark.css style sheets have their font set automatically to the most appropriate font, based on the app language.</source>
          <target xml:space="preserve">Windows Store apps using JavaScript that use the ui-light.css or ui-dark.css style sheets have their font set automatically to the most appropriate font, based on the app language.</target>
        </segment>
      </unit>
      <unit id="152">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The App Host sets the root element's <pc dataRefEnd="id2" dataRefStart="id1" id="p1">lang</pc> attribute to the app language.</source>
          <target xml:space="preserve">The App Host sets the root element's <pc dataRefEnd="id2" dataRefStart="id1" id="p1">lang</pc> attribute to the app language.</target>
        </segment>
      </unit>
      <unit id="153">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Apps that display multiple languages on a single page should set the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">lang</pc> attribute for the section in each language.</source>
          <target xml:space="preserve">Apps that display multiple languages on a single page should set the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">lang</pc> attribute for the section in each language.</target>
        </segment>
      </unit>
      <unit id="154">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/cc848867)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">:-ms-lang()</pc></pc> pseudo-class selector picks up the correct font for each section of the page.</source>
          <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">:-ms-lang()</pc></pc> pseudo-class selector picks up the correct font for each section of the page.</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>