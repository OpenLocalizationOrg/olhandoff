<?xml version="1.0" encoding="utf-8"?>
<xliff srcLang="en-US" trgLang="it-it" version="2.0" xmlns="urn:oasis:names:tc:xliff:document:2.0" xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">50a09bbaef62ce825801aeaa7716912ab739771e</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source xml:space="preserve">Description: When submitting an IAP, the options on the Properties page help determine the behavior of your IAP when offered to customers.</source>
          <target xml:space="preserve">Description: When submitting an IAP, the options on the Properties page help determine the behavior of your IAP when offered to customers.</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source xml:space="preserve">title: Enter IAP properties</source>
          <target xml:space="preserve">title: Enter IAP properties</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source xml:space="preserve">ms.assetid: 26D2139F-66FD-479E-940B-7491238ADCAE</source>
          <target xml:space="preserve">ms.assetid: 26D2139F-66FD-479E-940B-7491238ADCAE</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source xml:space="preserve">Enter IAP properties</source>
          <target xml:space="preserve">Enter IAP properties</target>
        </segment>
      </unit>
      <unit id="105">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">When submitting an IAP, the options on the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Properties</pc> page help determine the behavior of your IAP when offered to customers.</source>
          <target xml:space="preserve">When submitting an IAP, the options on the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Properties</pc> page help determine the behavior of your IAP when offered to customers.</target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source xml:space="preserve">Product type</source>
          <target xml:space="preserve">Product type</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source xml:space="preserve">First, you'll need to indicate which type of IAP you are offering.</source>
          <target xml:space="preserve">First, you'll need to indicate which type of IAP you are offering.</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source xml:space="preserve">This selection refers to how the customer can use your IAP.</source>
          <target xml:space="preserve">This selection refers to how the customer can use your IAP.</target>
        </segment>
      </unit>
      <unit id="109">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  You won't be able to change the product type for this IAP after it's been published.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  You won't be able to change the product type for this IAP after it's been published.</target>
        </segment>
      </unit>
      <unit id="110">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Consumable:</pc> A product that can be purchased, used (consumed), and then purchased again.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Consumable:</pc> A product that can be purchased, used (consumed), and then purchased again.</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source xml:space="preserve">Consumable IAPs are often used for things like in-game currency (gold, coins, etc.) which can be purchased in set amounts and then used up by the customer.</source>
          <target xml:space="preserve">Consumable IAPs are often used for things like in-game currency (gold, coins, etc.) which can be purchased in set amounts and then used up by the customer.</target>
        </segment>
      </unit>
      <unit id="112">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Durable:</pc> A product that’s bought and owned by the buyer for a specified period of time.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Durable:</pc> A product that’s bought and owned by the buyer for a specified period of time.</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source xml:space="preserve">Durable IAPs are often used to unlock additional functionality in an app.</source>
          <target xml:space="preserve">Durable IAPs are often used to unlock additional functionality in an app.</target>
        </segment>
      </unit>
      <unit id="114">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Durable IAPs are not consumed, but you can set the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Product lifetime</pc> so that they expire after a set duration (with options from 1-365 days).</source>
          <target xml:space="preserve">Durable IAPs are not consumed, but you can set the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Product lifetime</pc> so that they expire after a set duration (with options from 1-365 days).</target>
        </segment>
      </unit>
      <unit id="115">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The default <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Product lifetime</pc> for a durable IAP is <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Forever</pc>, which means the IAP never expires.</source>
          <target xml:space="preserve">The default <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Product lifetime</pc> for a durable IAP is <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Forever</pc>, which means the IAP never expires.</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source xml:space="preserve">Content type</source>
          <target xml:space="preserve">Content type</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source xml:space="preserve">Regardless of your IAP's product type, you'll also need to indicate the type of content you're offering.</source>
          <target xml:space="preserve">Regardless of your IAP's product type, you'll also need to indicate the type of content you're offering.</target>
        </segment>
      </unit>
      <unit id="118">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">By default, this is set to <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Electronic software download</pc>.</source>
          <target xml:space="preserve">By default, this is set to <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Electronic software download</pc>.</target>
        </segment>
      </unit>
      <unit id="119">
        <segment state="initial">
          <source xml:space="preserve">If another option from the list seems to describe your IAP better (for example, if you are offering a music download or an e-book), choose that instead.</source>
          <target xml:space="preserve">If another option from the list seems to describe your IAP better (for example, if you are offering a music download or an e-book), choose that instead.</target>
        </segment>
      </unit>
      <unit id="120">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Otherwise, you can leave this set to <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Electronic software download</pc>, which is appropriate for most IAPs.</source>
          <target xml:space="preserve">Otherwise, you can leave this set to <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Electronic software download</pc>, which is appropriate for most IAPs.</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source xml:space="preserve">Electronic software download</source>
          <target xml:space="preserve">Electronic software download</target>
        </segment>
      </unit>
      <unit id="122">
        <segment state="initial">
          <source xml:space="preserve">Electronic books</source>
          <target xml:space="preserve">Electronic books</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source xml:space="preserve">Electronic magazine single issue</source>
          <target xml:space="preserve">Electronic magazine single issue</target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source xml:space="preserve">Electronic newspaper single issue</source>
          <target xml:space="preserve">Electronic newspaper single issue</target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source xml:space="preserve">Music download</source>
          <target xml:space="preserve">Music download</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source xml:space="preserve">Music streaming</source>
          <target xml:space="preserve">Music streaming</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source xml:space="preserve">Online data storage/services</source>
          <target xml:space="preserve">Online data storage/services</target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source xml:space="preserve">Video download</source>
          <target xml:space="preserve">Video download</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source xml:space="preserve">Video streaming</source>
          <target xml:space="preserve">Video streaming</target>
        </segment>
      </unit>
      <unit id="130">
        <segment state="initial">
          <source xml:space="preserve">Software as a service</source>
          <target xml:space="preserve">Software as a service</target>
        </segment>
      </unit>
      <unit id="131">
        <segment state="initial">
          <source xml:space="preserve">Keywords</source>
          <target xml:space="preserve">Keywords</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source xml:space="preserve">You have the option to provide up to ten keywords of up to 30 characters each for each IAP you submit.</source>
          <target xml:space="preserve">You have the option to provide up to ten keywords of up to 30 characters each for each IAP you submit.</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source xml:space="preserve">Your app can then query for products that match these words.</source>
          <target xml:space="preserve">Your app can then query for products that match these words.</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source xml:space="preserve">This feature lets you build screens in your app that can load IAPs without you having to directly specify the product ID in your app's code.</source>
          <target xml:space="preserve">This feature lets you build screens in your app that can load IAPs without you having to directly specify the product ID in your app's code.</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source xml:space="preserve">You can then change the IAP's keywords anytime, without having to make code changes in your app or submit the app again.</source>
          <target xml:space="preserve">You can then change the IAP's keywords anytime, without having to make code changes in your app or submit the app again.</target>
        </segment>
      </unit>
      <unit id="136">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  Keywords are not available for use in packages targeting Windows 8 and Windows 8.1.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  Keywords are not available for use in packages targeting Windows 8 and Windows 8.1.</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source xml:space="preserve">Tag</source>
          <target xml:space="preserve">Tag</target>
        </segment>
      </unit>
      <unit id="138">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">You also have the option to enter up to 3000 characters into the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Tag</pc> field.</source>
          <target xml:space="preserve">You also have the option to enter up to 3000 characters into the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Tag</pc> field.</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source xml:space="preserve">This is a way to provide extra context for your in-app product.</source>
          <target xml:space="preserve">This is a way to provide extra context for your in-app product.</target>
        </segment>
      </unit>
      <unit id="140">
        <segment state="initial">
          <source xml:space="preserve">Let’s say you have a game, and you’re selling a bag of gold coins as an IAP.</source>
          <target xml:space="preserve">Let’s say you have a game, and you’re selling a bag of gold coins as an IAP.</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source xml:space="preserve">Using the Tags field, the app can query for this bag of gold.</source>
          <target xml:space="preserve">Using the Tags field, the app can query for this bag of gold.</target>
        </segment>
      </unit>
      <unit id="142">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">You can adjust the value at any time (in this case, the number of coins in your bag) by updating the info in the IAP's <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Tag</pc> field, without having to make code changes in your app or submit the app again.</source>
          <target xml:space="preserve">You can adjust the value at any time (in this case, the number of coins in your bag) by updating the info in the IAP's <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Tag</pc> field, without having to make code changes in your app or submit the app again.</target>
        </segment>
      </unit>
      <unit id="143">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  The <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Tag</pc> field is not available for use in packages targeting Windows 8 and Windows 8.1.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  The <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Tag</pc> field is not available for use in packages targeting Windows 8 and Windows 8.1.</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>