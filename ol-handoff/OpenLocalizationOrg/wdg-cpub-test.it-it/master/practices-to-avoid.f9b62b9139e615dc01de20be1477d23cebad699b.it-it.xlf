<?xml version="1.0" encoding="utf-8"?>
<xliff srcLang="en-US" trgLang="it-it" version="2.0" xmlns="urn:oasis:names:tc:xliff:document:2.0" xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">8453a20805addc41c4d77464bfb0f43f85b5cfa2</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source xml:space="preserve">Description: Lists the practices to avoid if you want to create an accessible Universal Windows Platform (UWP) app.</source>
          <target xml:space="preserve">Description: Lists the practices to avoid if you want to create an accessible Universal Windows Platform (UWP) app.</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source xml:space="preserve">title: Accessibility practices to avoid</source>
          <target xml:space="preserve">title: Accessibility practices to avoid</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source xml:space="preserve">ms.assetid: 024A9B70-9821-45BB-93F1-61C0B2ECF53E</source>
          <target xml:space="preserve">ms.assetid: 024A9B70-9821-45BB-93F1-61C0B2ECF53E</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source xml:space="preserve">label: Practices to avoid</source>
          <target xml:space="preserve">label: Practices to avoid</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source xml:space="preserve">template: detail.hbs</source>
          <target xml:space="preserve">template: detail.hbs</target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source xml:space="preserve">Accessibility practices to avoid</source>
          <target xml:space="preserve">Accessibility practices to avoid</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source xml:space="preserve">\[ Updated for UWP apps on Windows 10.</source>
          <target xml:space="preserve">\[ Updated for UWP apps on Windows 10.</target>
        </segment>
      </unit>
      <unit id="108">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
          <target xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source xml:space="preserve">Lists the practices to avoid if you want to create an accessible Universal Windows Platform (UWP) app.</source>
          <target xml:space="preserve">Lists the practices to avoid if you want to create an accessible Universal Windows Platform (UWP) app.</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source xml:space="preserve">Avoid building custom UI elements if you can use the default Windows controls or controls that have already implemented Microsoft UI Automation support.</source>
          <target xml:space="preserve">Avoid building custom UI elements if you can use the default Windows controls or controls that have already implemented Microsoft UI Automation support.</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source xml:space="preserve">Standard Windows controls are accessible by default and usually require adding only a few accessibility attributes that are app-specific.</source>
          <target xml:space="preserve">Standard Windows controls are accessible by default and usually require adding only a few accessibility attributes that are app-specific.</target>
        </segment>
      </unit>
      <unit id="112">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR209185)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](custom-automation-peers.md)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">In contrast, implementing the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">AutomationPeer</pc></pc> support for a true custom control is somewhat more involved (see <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Custom automation peers</pc>).</source>
          <target xml:space="preserve">In contrast, implementing the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">AutomationPeer</pc></pc> support for a true custom control is somewhat more involved (see <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Custom automation peers</pc>).</target>
        </segment>
      </unit>
      <unit id="113">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR209461)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Don't put static text or other non-interactive elements into the tab order (for example, by setting the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">TabIndex</pc></pc> property for an element that is not interactive).</source>
          <target xml:space="preserve">Don't put static text or other non-interactive elements into the tab order (for example, by setting the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">TabIndex</pc></pc> property for an element that is not interactive).</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source xml:space="preserve">If non-interactive elements are in the tab order, that is against keyboard accessibility guidelines because it decreases efficiency of keyboard navigation for users.</source>
          <target xml:space="preserve">If non-interactive elements are in the tab order, that is against keyboard accessibility guidelines because it decreases efficiency of keyboard navigation for users.</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source xml:space="preserve">Many assistive technologies use tab order and ability to focus an element as part of their logic for how to present an app's interface to the assistive technology user.</source>
          <target xml:space="preserve">Many assistive technologies use tab order and ability to focus an element as part of their logic for how to present an app's interface to the assistive technology user.</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source xml:space="preserve">Text-only elements in the tab order can confuse users who expect only interactive elements in the tab order (buttons, check boxes, text input fields, combo boxes, lists, and so on).</source>
          <target xml:space="preserve">Text-only elements in the tab order can confuse users who expect only interactive elements in the tab order (buttons, check boxes, text input fields, combo boxes, lists, and so on).</target>
        </segment>
      </unit>
      <unit id="117">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR209267)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Avoid using absolute positioning of UI elements (such as in a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Canvas</pc></pc> element) because the presentation order often differs from the child element declaration order (which is the de facto logical order).</source>
          <target xml:space="preserve">Avoid using absolute positioning of UI elements (such as in a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Canvas</pc></pc> element) because the presentation order often differs from the child element declaration order (which is the de facto logical order).</target>
        </segment>
      </unit>
      <unit id="118">
        <segment state="initial">
          <source xml:space="preserve">Whenever possible, arrange UI elements in document or logical order to ensure that screen readers can read those elements in the correct order.</source>
          <target xml:space="preserve">Whenever possible, arrange UI elements in document or logical order to ensure that screen readers can read those elements in the correct order.</target>
        </segment>
      </unit>
      <unit id="119">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR209461)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">If the visible order of UI elements can diverge from the document or logical order, use explicit tab index values (set <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">TabIndex</pc></pc>) to define the correct reading order.</source>
          <target xml:space="preserve">If the visible order of UI elements can diverge from the document or logical order, use explicit tab index values (set <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">TabIndex</pc></pc>) to define the correct reading order.</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source xml:space="preserve">Don’t use color as the only way to convey information.</source>
          <target xml:space="preserve">Don’t use color as the only way to convey information.</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source xml:space="preserve">Users who are color blind cannot receive information that is conveyed only through color, such as in a color status indicator.</source>
          <target xml:space="preserve">Users who are color blind cannot receive information that is conveyed only through color, such as in a color status indicator.</target>
        </segment>
      </unit>
      <unit id="122">
        <segment state="initial">
          <source xml:space="preserve">Include other visual cues, preferably text, to ensure that information is accessible.</source>
          <target xml:space="preserve">Include other visual cues, preferably text, to ensure that information is accessible.</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source xml:space="preserve">Don’t automatically refresh an entire app canvas unless it is really necessary for app functionality.</source>
          <target xml:space="preserve">Don’t automatically refresh an entire app canvas unless it is really necessary for app functionality.</target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source xml:space="preserve">If you need to automatically refresh page content, update only certain areas of the page.</source>
          <target xml:space="preserve">If you need to automatically refresh page content, update only certain areas of the page.</target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source xml:space="preserve">Assistive technologies generally must assume that a refreshed app canvas is a totally new structure, even if the effective changes were minimal.</source>
          <target xml:space="preserve">Assistive technologies generally must assume that a refreshed app canvas is a totally new structure, even if the effective changes were minimal.</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source xml:space="preserve">The cost of this to the assistive technology user is that any document view or description of the refreshed app now must be recreated and presented to the user again.</source>
          <target xml:space="preserve">The cost of this to the assistive technology user is that any document view or description of the refreshed app now must be recreated and presented to the user again.</target>
        </segment>
      </unit>
      <unit id="127">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/JJ191516)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
          <data id="id9">**</data>
          <data id="id10">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  If you do refresh content within a region, consider setting the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">AccessibilityProperties.LiveSetting</pc></pc> accessibility property on that element to one of the non-default settings <pc dataRefEnd="id8" dataRefStart="id7" id="p4">Polite</pc> or <pc dataRefEnd="id10" dataRefStart="id9" id="p5">Assertive</pc>.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  If you do refresh content within a region, consider setting the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">AccessibilityProperties.LiveSetting</pc></pc> accessibility property on that element to one of the non-default settings <pc dataRefEnd="id8" dataRefStart="id7" id="p4">Polite</pc> or <pc dataRefEnd="id10" dataRefStart="id9" id="p5">Assertive</pc>.</target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source xml:space="preserve">Some assistive technologies can map this setting to the Accessible Rich Internet Applications (ARIA) concept of live regions and can thus inform the user that a region of content has changed.</source>
          <target xml:space="preserve">Some assistive technologies can map this setting to the Accessible Rich Internet Applications (ARIA) concept of live regions and can thus inform the user that a region of content has changed.</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source xml:space="preserve">A deliberate page navigation that is initiated by the user is a legitimate case for refreshing the app's structure.</source>
          <target xml:space="preserve">A deliberate page navigation that is initiated by the user is a legitimate case for refreshing the app's structure.</target>
        </segment>
      </unit>
      <unit id="130">
        <segment state="initial">
          <source xml:space="preserve">But make sure that the UI item that initiates the navigation is correctly identified or named to give some indication that invoking it will result in a context change and page reload.</source>
          <target xml:space="preserve">But make sure that the UI item that initiates the navigation is correctly identified or named to give some indication that invoking it will result in a context change and page reload.</target>
        </segment>
      </unit>
      <unit id="131">
        <segment state="initial">
          <source xml:space="preserve">Don’t use UI elements that flash more than three times per second.</source>
          <target xml:space="preserve">Don’t use UI elements that flash more than three times per second.</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source xml:space="preserve">Flashing elements can cause some people to have seizures.</source>
          <target xml:space="preserve">Flashing elements can cause some people to have seizures.</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source xml:space="preserve">It is best to avoid using UI elements that flash.</source>
          <target xml:space="preserve">It is best to avoid using UI elements that flash.</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source xml:space="preserve">Don’t change user context or activate functionality automatically.</source>
          <target xml:space="preserve">Don’t change user context or activate functionality automatically.</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source xml:space="preserve">Context or activation changes should occur only when the user takes a direct action on a UI element that has focus.</source>
          <target xml:space="preserve">Context or activation changes should occur only when the user takes a direct action on a UI element that has focus.</target>
        </segment>
      </unit>
      <unit id="136">
        <segment state="initial">
          <source xml:space="preserve">Changes in user context include changing focus, displaying new content, and navigating to a different page.</source>
          <target xml:space="preserve">Changes in user context include changing focus, displaying new content, and navigating to a different page.</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source xml:space="preserve">Making context changes without involving the user can be disorienting for users who have disabilities.</source>
          <target xml:space="preserve">Making context changes without involving the user can be disorienting for users who have disabilities.</target>
        </segment>
      </unit>
      <unit id="138">
        <segment state="initial">
          <source xml:space="preserve">The exceptions to this requirement include displaying submenus, validating forms, displaying help text in another control, and changing context in response to an asynchronous event.</source>
          <target xml:space="preserve">The exceptions to this requirement include displaying submenus, validating forms, displaying help text in another control, and changing context in response to an asynchronous event.</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source xml:space="preserve">Related topics</source>
          <target xml:space="preserve">Related topics</target>
        </segment>
      </unit>
      <unit id="140">
        <segment state="initial">
          <source xml:space="preserve">Accessibility</source>
          <target xml:space="preserve">Accessibility</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source xml:space="preserve">Accessibility in the Store</source>
          <target xml:space="preserve">Accessibility in the Store</target>
        </segment>
      </unit>
      <unit id="142">
        <segment state="initial">
          <source xml:space="preserve">Accessibility checklist</source>
          <target xml:space="preserve">Accessibility checklist</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>