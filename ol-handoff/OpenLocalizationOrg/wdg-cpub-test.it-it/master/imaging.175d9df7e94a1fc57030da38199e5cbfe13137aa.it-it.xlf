<?xml version="1.0" encoding="utf-8"?>
<xliff srcLang="en-US" trgLang="it-it" version="2.0" xmlns="urn:oasis:names:tc:xliff:document:2.0" xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">0e69633b69b7e5a7ee4206aaf3c68b3201fd0c16</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source xml:space="preserve">ms.assetid: 3FD2AA71-EF67-47B2-9332-3FFA5D3703EA</source>
          <target xml:space="preserve">ms.assetid: 3FD2AA71-EF67-47B2-9332-3FFA5D3703EA</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source xml:space="preserve">description: This article explains how to load and save image files using BitmapDecoder and BitmapEncoder and how to use the SoftwareBitmap object to represent bitmap images.</source>
          <target xml:space="preserve">description: This article explains how to load and save image files using BitmapDecoder and BitmapEncoder and how to use the SoftwareBitmap object to represent bitmap images.</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source xml:space="preserve">title: Imaging</source>
          <target xml:space="preserve">title: Imaging</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source xml:space="preserve">Imaging</source>
          <target xml:space="preserve">Imaging</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source xml:space="preserve">\[ Updated for UWP apps on Windows 10.</source>
          <target xml:space="preserve">\[ Updated for UWP apps on Windows 10.</target>
        </segment>
      </unit>
      <unit id="106">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
          <target xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
        </segment>
      </unit>
      <unit id="107">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br226176)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/br226206)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
          <data id="id9">[</data>
          <data id="id10">](https://msdn.microsoft.com/library/windows/apps/dn887358)</data>
          <data id="id11">**</data>
          <data id="id12">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">This article explains how to load and save image files using <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">BitmapDecoder</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">BitmapEncoder</pc></pc> and how to use the <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">SoftwareBitmap</pc></pc> object to represent bitmap images.</source>
          <target xml:space="preserve">This article explains how to load and save image files using <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">BitmapDecoder</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">BitmapEncoder</pc></pc> and how to use the <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">SoftwareBitmap</pc></pc> object to represent bitmap images.</target>
        </segment>
      </unit>
      <unit id="108">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/br243259)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">SoftwareBitmap</pc> class is a versatile API that can be created from multiple sources including image files, <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">WriteableBitmap</pc></pc> objects, Direct3D surfaces, and code.</source>
          <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">SoftwareBitmap</pc> class is a versatile API that can be created from multiple sources including image files, <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">WriteableBitmap</pc></pc> objects, Direct3D surfaces, and code.</target>
        </segment>
      </unit>
      <unit id="109">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">SoftwareBitmap</pc> allows you to easily convert between different pixel formats and alpha modes, and allows low-level access to pixel data.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">SoftwareBitmap</pc> allows you to easily convert between different pixel formats and alpha modes, and allows low-level access to pixel data.</target>
        </segment>
      </unit>
      <unit id="110">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Also, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">SoftwareBitmap</pc> is a common interface used by multiple features of Windows, including:</source>
          <target xml:space="preserve">Also, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">SoftwareBitmap</pc> is a common interface used by multiple features of Windows, including:</target>
        </segment>
      </unit>
      <unit id="111">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn278725)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">
							<pc dataRefEnd="id4" dataRefStart="id3" id="p2">CapturedFrame</pc>
						</pc> allows you to get frames captured by the camera as a <pc dataRefEnd="id6" dataRefStart="id5" id="p3">SoftwareBitmap</pc>.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">
							<pc dataRefEnd="id4" dataRefStart="id3" id="p2">CapturedFrame</pc>
						</pc> allows you to get frames captured by the camera as a <pc dataRefEnd="id6" dataRefStart="id5" id="p3">SoftwareBitmap</pc>.</target>
        </segment>
      </unit>
      <unit id="112">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn930917)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">
							<pc dataRefEnd="id4" dataRefStart="id3" id="p2">VideoFrame</pc>
						</pc> allows you to get a <pc dataRefEnd="id6" dataRefStart="id5" id="p3">SoftwareBitmap</pc> representation of a <pc dataRefEnd="id8" dataRefStart="id7" id="p4">VideoFrame</pc>.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">
							<pc dataRefEnd="id4" dataRefStart="id3" id="p2">VideoFrame</pc>
						</pc> allows you to get a <pc dataRefEnd="id6" dataRefStart="id5" id="p3">SoftwareBitmap</pc> representation of a <pc dataRefEnd="id8" dataRefStart="id7" id="p4">VideoFrame</pc>.</target>
        </segment>
      </unit>
      <unit id="113">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn974129)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">
							<pc dataRefEnd="id4" dataRefStart="id3" id="p2">FaceDetector</pc>
						</pc> allows you to detect faces in a <pc dataRefEnd="id6" dataRefStart="id5" id="p3">SoftwareBitmap</pc>.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">
							<pc dataRefEnd="id4" dataRefStart="id3" id="p2">FaceDetector</pc>
						</pc> allows you to detect faces in a <pc dataRefEnd="id6" dataRefStart="id5" id="p3">SoftwareBitmap</pc>.</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source xml:space="preserve">The sample code in this article uses APIs from the following namespaces.</source>
          <target xml:space="preserve">The sample code in this article uses APIs from the following namespaces.</target>
        </segment>
      </unit>
      <unit id="115">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/ImagingWin10/cs/MainPage.xaml.cs#SnippetNamespaces)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Namespaces</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Namespaces</pc>]</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source xml:space="preserve">Create a SoftwareBitmap from an image file with BitmapDecoder</source>
          <target xml:space="preserve">Create a SoftwareBitmap from an image file with BitmapDecoder</target>
        </segment>
      </unit>
      <unit id="117">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn887358)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/br227171)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To create a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SoftwareBitmap</pc></pc> from a file, get an instance of <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">StorageFile</pc></pc> containing the image data.</source>
          <target xml:space="preserve">To create a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SoftwareBitmap</pc></pc> from a file, get an instance of <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">StorageFile</pc></pc> containing the image data.</target>
        </segment>
      </unit>
      <unit id="118">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br207847)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">This example uses a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FileOpenPicker</pc></pc> to allow the user to select an image file.</source>
          <target xml:space="preserve">This example uses a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FileOpenPicker</pc></pc> to allow the user to select an image file.</target>
        </segment>
      </unit>
      <unit id="119">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/ImagingWin10/cs/MainPage.xaml.cs#SnippetPickInputFile)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">PickInputFile</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">PickInputFile</pc>]</target>
        </segment>
      </unit>
      <unit id="120">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227116)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Call the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">OpenAsync</pc></pc> method of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">StorageFile</pc> object to get a random access stream containing the image data.</source>
          <target xml:space="preserve">Call the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">OpenAsync</pc></pc> method of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">StorageFile</pc> object to get a random access stream containing the image data.</target>
        </segment>
      </unit>
      <unit id="121">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br226182)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/br226176)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Call the static method <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">BitmapDecoder.CreateAsync</pc></pc> to get an instance of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">BitmapDecoder</pc></pc> class for the specified stream.</source>
          <target xml:space="preserve">Call the static method <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">BitmapDecoder.CreateAsync</pc></pc> to get an instance of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">BitmapDecoder</pc></pc> class for the specified stream.</target>
        </segment>
      </unit>
      <unit id="122">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn887332)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/dn887358)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetSoftwareBitmapAsync</pc></pc> to get a <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">SoftwareBitmap</pc></pc> object containing the image.</source>
          <target xml:space="preserve">Call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetSoftwareBitmapAsync</pc></pc> to get a <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">SoftwareBitmap</pc></pc> object containing the image.</target>
        </segment>
      </unit>
      <unit id="123">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/ImagingWin10/cs/MainPage.xaml.cs#SnippetCreateSoftwareBitmapFromFile)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">CreateSoftwareBitmapFromFile</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">CreateSoftwareBitmapFromFile</pc>]</target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source xml:space="preserve">Save a SoftwareBitmap to a file with BitmapEncoder</source>
          <target xml:space="preserve">Save a SoftwareBitmap to a file with BitmapEncoder</target>
        </segment>
      </unit>
      <unit id="125">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To save a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">SoftwareBitmap</pc> to a file, get an instance of <pc dataRefEnd="id4" dataRefStart="id3" id="p2">StorageFile</pc> to which the image will be saved.</source>
          <target xml:space="preserve">To save a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">SoftwareBitmap</pc> to a file, get an instance of <pc dataRefEnd="id4" dataRefStart="id3" id="p2">StorageFile</pc> to which the image will be saved.</target>
        </segment>
      </unit>
      <unit id="126">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br207871)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">This example uses a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FileSavePicker</pc></pc> to allow the user to select an output file.</source>
          <target xml:space="preserve">This example uses a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FileSavePicker</pc></pc> to allow the user to select an output file.</target>
        </segment>
      </unit>
      <unit id="127">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/ImagingWin10/cs/MainPage.xaml.cs#SnippetPickOuputFile)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">PickOuputFile</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">PickOuputFile</pc>]</target>
        </segment>
      </unit>
      <unit id="128">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227116)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Call the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">OpenAsync</pc></pc> method of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">StorageFile</pc> object to get a random access stream to which the image will be written.</source>
          <target xml:space="preserve">Call the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">OpenAsync</pc></pc> method of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">StorageFile</pc> object to get a random access stream to which the image will be written.</target>
        </segment>
      </unit>
      <unit id="129">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br226211)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/br226206)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Call the static method <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">BitmapEncoder.CreateAsync</pc></pc> to get an instance of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">BitmapEncoder</pc></pc> class for the specified stream.</source>
          <target xml:space="preserve">Call the static method <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">BitmapEncoder.CreateAsync</pc></pc> to get an instance of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">BitmapEncoder</pc></pc> class for the specified stream.</target>
        </segment>
      </unit>
      <unit id="130">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The first parameter to <pc dataRefEnd="id2" dataRefStart="id1" id="p1">CreateAsync</pc> is a GUID representing the codec that should be used to encode the image.</source>
          <target xml:space="preserve">The first parameter to <pc dataRefEnd="id2" dataRefStart="id1" id="p1">CreateAsync</pc> is a GUID representing the codec that should be used to encode the image.</target>
        </segment>
      </unit>
      <unit id="131">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/br226226)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">BitmapEncoder</pc> class exposes a property containing the ID for each codec supported by the encoder, such as <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">JpegEncoderId</pc></pc>.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">BitmapEncoder</pc> class exposes a property containing the ID for each codec supported by the encoder, such as <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">JpegEncoderId</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="132">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn887337)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SetSoftwareBitmap</pc></pc> method to set the image that will be encoded.</source>
          <target xml:space="preserve">Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SetSoftwareBitmap</pc></pc> method to set the image that will be encoded.</target>
        </segment>
      </unit>
      <unit id="133">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br226254)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">You can set values of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">BitmapTransform</pc></pc> property to apply basic transforms to the image while it is being encoded.</source>
          <target xml:space="preserve">You can set values of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">BitmapTransform</pc></pc> property to apply basic transforms to the image while it is being encoded.</target>
        </segment>
      </unit>
      <unit id="134">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br226225)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IsThumbnailGenerated</pc></pc> property determines whether a thumbnail is generated by the encoder.</source>
          <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IsThumbnailGenerated</pc></pc> property determines whether a thumbnail is generated by the encoder.</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source xml:space="preserve">Note that not all file formats support thumbnails, so if you use this feature, you should catch the unsupported operation error that will be thrown if thumbnails are not supported.</source>
          <target xml:space="preserve">Note that not all file formats support thumbnails, so if you use this feature, you should catch the unsupported operation error that will be thrown if thumbnails are not supported.</target>
        </segment>
      </unit>
      <unit id="136">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br226216)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FlushAsync</pc></pc> to cause the encoder to write the image data to the specified file.</source>
          <target xml:space="preserve">Call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FlushAsync</pc></pc> to cause the encoder to write the image data to the specified file.</target>
        </segment>
      </unit>
      <unit id="137">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/ImagingWin10/cs/MainPage.xaml.cs#SnippetSaveSoftwareBitmapToFile)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">SaveSoftwareBitmapToFile</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">SaveSoftwareBitmapToFile</pc>]</target>
        </segment>
      </unit>
      <unit id="138">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/hh974338)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">[</data>
          <data id="id8">](https://msdn.microsoft.com/library/windows/apps/hh700687)</data>
          <data id="id9">**</data>
          <data id="id10">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">You can specify additional encoding options when you create the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">BitmapEncoder</pc> by creating a new <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">BitmapPropertySet</pc></pc> object and populating it with one or more <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">BitmapTypedValue</pc></pc> objects representing the encoder settings.</source>
          <target xml:space="preserve">You can specify additional encoding options when you create the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">BitmapEncoder</pc> by creating a new <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">BitmapPropertySet</pc></pc> object and populating it with one or more <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">BitmapTypedValue</pc></pc> objects representing the encoder settings.</target>
        </segment>
      </unit>
      <unit id="139">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](bitmapencoder-options-reference.md)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For a list of supported encoder options, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">BitmapEncoder options reference</pc>.</source>
          <target xml:space="preserve">For a list of supported encoder options, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">BitmapEncoder options reference</pc>.</target>
        </segment>
      </unit>
      <unit id="140">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/ImagingWin10/cs/MainPage.xaml.cs#SnippetUseEncodingOptions)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">UseEncodingOptions</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">UseEncodingOptions</pc>]</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source xml:space="preserve">Use SoftwareBitmap with a XAML Image control</source>
          <target xml:space="preserve">Use SoftwareBitmap with a XAML Image control</target>
        </segment>
      </unit>
      <unit id="142">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br242752)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To display an image within a XAML page using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Image</pc></pc> control, first define an <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Image</pc> control in your XAML page.</source>
          <target xml:space="preserve">To display an image within a XAML page using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Image</pc></pc> control, first define an <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Image</pc> control in your XAML page.</target>
        </segment>
      </unit>
      <unit id="143">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/ImagingWin10/cs/MainPage.xaml#SnippetImageControl)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-xml<pc dataRefEnd="id2" dataRefStart="id1" id="p1">ImageControl</pc>]</source>
          <target xml:space="preserve">[!code-xml<pc dataRefEnd="id2" dataRefStart="id1" id="p1">ImageControl</pc>]</target>
        </segment>
      </unit>
      <unit id="144">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn997854)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Create a new <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SoftwareBitmapSource</pc></pc> object.</source>
          <target xml:space="preserve">Create a new <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SoftwareBitmapSource</pc></pc> object.</target>
        </segment>
      </unit>
      <unit id="145">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn997856)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Set the contents of the source object by calling <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SetBitmapAsync</pc></pc>, passing in a <pc dataRefEnd="id6" dataRefStart="id5" id="p3">SoftwareBitmap</pc>.</source>
          <target xml:space="preserve">Set the contents of the source object by calling <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SetBitmapAsync</pc></pc>, passing in a <pc dataRefEnd="id6" dataRefStart="id5" id="p3">SoftwareBitmap</pc>.</target>
        </segment>
      </unit>
      <unit id="146">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br242760)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Then you can set the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Source</pc></pc> property of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Image</pc> control to the newly created <pc dataRefEnd="id8" dataRefStart="id7" id="p4">SoftwareBitmapSource</pc>.</source>
          <target xml:space="preserve">Then you can set the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Source</pc></pc> property of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Image</pc> control to the newly created <pc dataRefEnd="id8" dataRefStart="id7" id="p4">SoftwareBitmapSource</pc>.</target>
        </segment>
      </unit>
      <unit id="147">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/ImagingWin10/cs/MainPage.xaml.cs#SnippetSoftwareBitmapToWriteableBitmap)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">SoftwareBitmapToWriteableBitmap</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">SoftwareBitmapToWriteableBitmap</pc>]</target>
        </segment>
      </unit>
      <unit id="148">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/br210105)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
          <data id="id9">[</data>
          <data id="id10">](https://msdn.microsoft.com/library/windows/apps/br210101)</data>
          <data id="id11">**</data>
          <data id="id12">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">You can also use <pc dataRefEnd="id2" dataRefStart="id1" id="p1">SoftwareBitmapSource</pc> to set a <pc dataRefEnd="id4" dataRefStart="id3" id="p2">SoftwareBitmap</pc> as the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">ImageSource</pc></pc> for an <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">ImageBrush</pc></pc>.</source>
          <target xml:space="preserve">You can also use <pc dataRefEnd="id2" dataRefStart="id1" id="p1">SoftwareBitmapSource</pc> to set a <pc dataRefEnd="id4" dataRefStart="id3" id="p2">SoftwareBitmap</pc> as the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">ImageSource</pc></pc> for an <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">ImageBrush</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="149">
        <segment state="initial">
          <source xml:space="preserve">Create a SoftwareBitmap from a WriteableBitmap</source>
          <target xml:space="preserve">Create a SoftwareBitmap from a WriteableBitmap</target>
        </segment>
      </unit>
      <unit id="150">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/dn887370)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
          <data id="id9">**</data>
          <data id="id10">**</data>
          <data id="id11">**</data>
          <data id="id12">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">You can create a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">SoftwareBitmap</pc> from an existing <pc dataRefEnd="id4" dataRefStart="id3" id="p2">WriteableBitmap</pc> by calling <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">SoftwareBitmap.CreateCopyFromBuffer</pc></pc> and supplying the <pc dataRefEnd="id10" dataRefStart="id9" id="p5">PixelBuffer</pc> property of the <pc dataRefEnd="id12" dataRefStart="id11" id="p6">WriteableBitmap</pc> to set the pixel data.</source>
          <target xml:space="preserve">You can create a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">SoftwareBitmap</pc> from an existing <pc dataRefEnd="id4" dataRefStart="id3" id="p2">WriteableBitmap</pc> by calling <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">SoftwareBitmap.CreateCopyFromBuffer</pc></pc> and supplying the <pc dataRefEnd="id10" dataRefStart="id9" id="p5">PixelBuffer</pc> property of the <pc dataRefEnd="id12" dataRefStart="id11" id="p6">WriteableBitmap</pc> to set the pixel data.</target>
        </segment>
      </unit>
      <unit id="151">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The second argument allows you to request a pixel format for the newly created <pc dataRefEnd="id2" dataRefStart="id1" id="p1">WriteableBitmap</pc>.</source>
          <target xml:space="preserve">The second argument allows you to request a pixel format for the newly created <pc dataRefEnd="id2" dataRefStart="id1" id="p1">WriteableBitmap</pc>.</target>
        </segment>
      </unit>
      <unit id="152">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br243253)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/br243251)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
          <data id="id9">**</data>
          <data id="id10">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">You can use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PixelWidth</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">PixelHeight</pc></pc> properties of the <pc dataRefEnd="id10" dataRefStart="id9" id="p5">WriteableBitmap</pc> to specify the dimensions of the new image.</source>
          <target xml:space="preserve">You can use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PixelWidth</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">PixelHeight</pc></pc> properties of the <pc dataRefEnd="id10" dataRefStart="id9" id="p5">WriteableBitmap</pc> to specify the dimensions of the new image.</target>
        </segment>
      </unit>
      <unit id="153">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/ImagingWin10/cs/MainPage.xaml.cs#SnippetWriteableBitmapToSoftwareBitmap)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">WriteableBitmapToSoftwareBitmap</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">WriteableBitmapToSoftwareBitmap</pc>]</target>
        </segment>
      </unit>
      <unit id="154">
        <segment state="initial">
          <source xml:space="preserve">Create or edit a SoftwareBitmap programmatically</source>
          <target xml:space="preserve">Create or edit a SoftwareBitmap programmatically</target>
        </segment>
      </unit>
      <unit id="155">
        <segment state="initial">
          <source xml:space="preserve">So far this topic has addressed working with image files.</source>
          <target xml:space="preserve">So far this topic has addressed working with image files.</target>
        </segment>
      </unit>
      <unit id="156">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">You can also create a new <pc dataRefEnd="id2" dataRefStart="id1" id="p1">SoftwareBitmap</pc> programatically in code and use the same technique to access and modify the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">SoftwareBitmap</pc>'s pixel data.</source>
          <target xml:space="preserve">You can also create a new <pc dataRefEnd="id2" dataRefStart="id1" id="p1">SoftwareBitmap</pc> programatically in code and use the same technique to access and modify the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">SoftwareBitmap</pc>'s pixel data.</target>
        </segment>
      </unit>
      <unit id="157">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">SoftwareBitmap</pc> uses COM interop to expose the raw buffer containing the pixel data.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">SoftwareBitmap</pc> uses COM interop to expose the raw buffer containing the pixel data.</target>
        </segment>
      </unit>
      <unit id="158">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To use COM interop, you must include a reference to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">System.Runtime.InteropServices</pc> namespace in your project.</source>
          <target xml:space="preserve">To use COM interop, you must include a reference to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">System.Runtime.InteropServices</pc> namespace in your project.</target>
        </segment>
      </unit>
      <unit id="159">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/ImagingWin10/cs/MainPage.xaml.cs#SnippetInteropNamespace)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">InteropNamespace</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">InteropNamespace</pc>]</target>
        </segment>
      </unit>
      <unit id="160">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/desktop/mt297505)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Initialize the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IMemoryBufferByteAccess</pc></pc> COM interface by adding the following code within your namespace.</source>
          <target xml:space="preserve">Initialize the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IMemoryBufferByteAccess</pc></pc> COM interface by adding the following code within your namespace.</target>
        </segment>
      </unit>
      <unit id="161">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/ImagingWin10/cs/MainPage.xaml.cs#SnippetCOMImport)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">COMImport</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">COMImport</pc>]</target>
        </segment>
      </unit>
      <unit id="162">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Create a new <pc dataRefEnd="id2" dataRefStart="id1" id="p1">SoftwareBitmap</pc> with pixel format and size you want.</source>
          <target xml:space="preserve">Create a new <pc dataRefEnd="id2" dataRefStart="id1" id="p1">SoftwareBitmap</pc> with pixel format and size you want.</target>
        </segment>
      </unit>
      <unit id="163">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Or, use an existing <pc dataRefEnd="id2" dataRefStart="id1" id="p1">SoftwareBitmap</pc> for which you want to edit the pixel data.</source>
          <target xml:space="preserve">Or, use an existing <pc dataRefEnd="id2" dataRefStart="id1" id="p1">SoftwareBitmap</pc> for which you want to edit the pixel data.</target>
        </segment>
      </unit>
      <unit id="164">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn887380)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/dn887325)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SoftwareBitmap.LockBuffer</pc></pc> to obtain an instance of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">BitmapBuffer</pc></pc> class representing the pixel data buffer.</source>
          <target xml:space="preserve">Call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SoftwareBitmap.LockBuffer</pc></pc> to obtain an instance of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">BitmapBuffer</pc></pc> class representing the pixel data buffer.</target>
        </segment>
      </unit>
      <unit id="165">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/desktop/mt297506)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Cast the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">BitmapBuffer</pc> to the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">IMemoryBufferByteAccess</pc> COM interface and then call <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">IMemoryBufferByteAccess.GetBuffer</pc></pc> to populate a byte array with data.</source>
          <target xml:space="preserve">Cast the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">BitmapBuffer</pc> to the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">IMemoryBufferByteAccess</pc> COM interface and then call <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">IMemoryBufferByteAccess.GetBuffer</pc></pc> to populate a byte array with data.</target>
        </segment>
      </unit>
      <unit id="166">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn887330)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/dn887342)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">BitmapBuffer.GetPlaneDescription</pc></pc> method to get a <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">BitmapPlaneDescription</pc></pc> object that will help you calculate the offset into the buffer for each pixel.</source>
          <target xml:space="preserve">Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">BitmapBuffer.GetPlaneDescription</pc></pc> method to get a <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">BitmapPlaneDescription</pc></pc> object that will help you calculate the offset into the buffer for each pixel.</target>
        </segment>
      </unit>
      <unit id="167">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/ImagingWin10/cs/MainPage.xaml.cs#SnippetCreateNewSoftwareBitmap)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">CreateNewSoftwareBitmap</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">CreateNewSoftwareBitmap</pc>]</target>
        </segment>
      </unit>
      <unit id="168">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Because this method accesses the raw buffer underlying the Windows Runtime types, it must be declared using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">unsafe</pc> keyword.</source>
          <target xml:space="preserve">Because this method accesses the raw buffer underlying the Windows Runtime types, it must be declared using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">unsafe</pc> keyword.</target>
        </segment>
      </unit>
      <unit id="169">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">You must also configure your project in Microsoft Visual Studio to allow the compilation of unsafe code by opening the project's <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Properties</pc> page, clicking the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Build</pc> property page, and selecting the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Allow Unsafe Code</pc> checkbox.</source>
          <target xml:space="preserve">You must also configure your project in Microsoft Visual Studio to allow the compilation of unsafe code by opening the project's <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Properties</pc> page, clicking the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Build</pc> property page, and selecting the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Allow Unsafe Code</pc> checkbox.</target>
        </segment>
      </unit>
      <unit id="170">
        <segment state="initial">
          <source xml:space="preserve">Create a SoftwareBitmap from a Direct3D surface</source>
          <target xml:space="preserve">Create a SoftwareBitmap from a Direct3D surface</target>
        </segment>
      </unit>
      <unit id="171">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/dn895104)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To create a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">SoftwareBitmap</pc> object from a Direct3D surface, you must include the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">Windows.Graphics.DirectX.Direct3D11</pc></pc> namespace in your project.</source>
          <target xml:space="preserve">To create a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">SoftwareBitmap</pc> object from a Direct3D surface, you must include the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">Windows.Graphics.DirectX.Direct3D11</pc></pc> namespace in your project.</target>
        </segment>
      </unit>
      <unit id="172">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/ImagingWin10/cs/MainPage.xaml.cs#SnippetDirect3DNamespace)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Direct3DNamespace</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Direct3DNamespace</pc>]</target>
        </segment>
      </unit>
      <unit id="173">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn887373)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CreateCopyFromSurfaceAsync</pc></pc> to create a new <pc dataRefEnd="id6" dataRefStart="id5" id="p3">SoftwareBitmap</pc> from the surface.</source>
          <target xml:space="preserve">Call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CreateCopyFromSurfaceAsync</pc></pc> to create a new <pc dataRefEnd="id6" dataRefStart="id5" id="p3">SoftwareBitmap</pc> from the surface.</target>
        </segment>
      </unit>
      <unit id="174">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">As the name indicates, the new <pc dataRefEnd="id2" dataRefStart="id1" id="p1">SoftwareBitmap</pc> has a separate copy of the image data.</source>
          <target xml:space="preserve">As the name indicates, the new <pc dataRefEnd="id2" dataRefStart="id1" id="p1">SoftwareBitmap</pc> has a separate copy of the image data.</target>
        </segment>
      </unit>
      <unit id="175">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Modifications to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">SoftwareBitmap</pc> will not have any effect on the Direct3D surface.</source>
          <target xml:space="preserve">Modifications to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">SoftwareBitmap</pc> will not have any effect on the Direct3D surface.</target>
        </segment>
      </unit>
      <unit id="176">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/ImagingWin10/cs/MainPage.xaml.cs#SnippetCreateSoftwareBitmapFromSurface)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">CreateSoftwareBitmapFromSurface</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">CreateSoftwareBitmapFromSurface</pc>]</target>
        </segment>
      </unit>
      <unit id="177">
        <segment state="initial">
          <source xml:space="preserve">Convert a SoftwareBitmap to a different pixel format</source>
          <target xml:space="preserve">Convert a SoftwareBitmap to a different pixel format</target>
        </segment>
      </unit>
      <unit id="178">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/dn887362)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
          <data id="id9">**</data>
          <data id="id10">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">SoftwareBitmap</pc> class provides the static method, <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">Convert</pc></pc>, that allows you to easily create a new <pc dataRefEnd="id8" dataRefStart="id7" id="p4">SoftwareBitmap</pc> that uses the pixel format and alpha mode you specify from an existing <pc dataRefEnd="id10" dataRefStart="id9" id="p5">SoftwareBitmap</pc>.</source>
          <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">SoftwareBitmap</pc> class provides the static method, <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">Convert</pc></pc>, that allows you to easily create a new <pc dataRefEnd="id8" dataRefStart="id7" id="p4">SoftwareBitmap</pc> that uses the pixel format and alpha mode you specify from an existing <pc dataRefEnd="id10" dataRefStart="id9" id="p5">SoftwareBitmap</pc>.</target>
        </segment>
      </unit>
      <unit id="179">
        <segment state="initial">
          <source xml:space="preserve">Note that the newly created bitmap has a separate copy of the image data.</source>
          <target xml:space="preserve">Note that the newly created bitmap has a separate copy of the image data.</target>
        </segment>
      </unit>
      <unit id="180">
        <segment state="initial">
          <source xml:space="preserve">Modifications to the new bitmap will not affect the source bitmap.</source>
          <target xml:space="preserve">Modifications to the new bitmap will not affect the source bitmap.</target>
        </segment>
      </unit>
      <unit id="181">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/ImagingWin10/cs/MainPage.xaml.cs#SnippetConvert)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Convert</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Convert</pc>]</target>
        </segment>
      </unit>
      <unit id="182">
        <segment state="initial">
          <source xml:space="preserve">Transcode an image file</source>
          <target xml:space="preserve">Transcode an image file</target>
        </segment>
      </unit>
      <unit id="183">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br226176)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/br226206)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">You can transcode an image file directly from a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">BitmapDecoder</pc></pc> to a <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">BitmapEncoder</pc></pc>.</source>
          <target xml:space="preserve">You can transcode an image file directly from a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">BitmapDecoder</pc></pc> to a <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">BitmapEncoder</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="184">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br241731)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Create a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IRandomAccessStream</pc></pc> from the file to be transcoded.</source>
          <target xml:space="preserve">Create a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IRandomAccessStream</pc></pc> from the file to be transcoded.</target>
        </segment>
      </unit>
      <unit id="185">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Create a new <pc dataRefEnd="id2" dataRefStart="id1" id="p1">BitmapDecoder</pc> from the input stream.</source>
          <target xml:space="preserve">Create a new <pc dataRefEnd="id2" dataRefStart="id1" id="p1">BitmapDecoder</pc> from the input stream.</target>
        </segment>
      </unit>
      <unit id="186">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br241720)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/br226214)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Create a new <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">InMemoryRandomAccessStream</pc></pc> for the encoder to write to and call <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">BitmapEncoder.CreateForTranscodingAsync</pc></pc>, passing in the in-memory stream and the decoder object.</source>
          <target xml:space="preserve">Create a new <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">InMemoryRandomAccessStream</pc></pc> for the encoder to write to and call <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">BitmapEncoder.CreateForTranscodingAsync</pc></pc>, passing in the in-memory stream and the decoder object.</target>
        </segment>
      </unit>
      <unit id="187">
        <segment state="initial">
          <source xml:space="preserve">Set the encoding properties you want.</source>
          <target xml:space="preserve">Set the encoding properties you want.</target>
        </segment>
      </unit>
      <unit id="188">
        <segment state="initial">
          <source xml:space="preserve">Any properties in the input image file that you do not specifically set on the encoder, will be written to the output file unchanged.</source>
          <target xml:space="preserve">Any properties in the input image file that you do not specifically set on the encoder, will be written to the output file unchanged.</target>
        </segment>
      </unit>
      <unit id="189">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br226216)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FlushAsync</pc></pc> to cause the encoder to encode to the in-memory stream.</source>
          <target xml:space="preserve">Call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FlushAsync</pc></pc> to cause the encoder to encode to the in-memory stream.</target>
        </segment>
      </unit>
      <unit id="190">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh701827)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Finally, seek the file stream and the in-memory stream to the beginning and call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CopyAsync</pc></pc> to write the in-memory stream out to the file stream.</source>
          <target xml:space="preserve">Finally, seek the file stream and the in-memory stream to the beginning and call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CopyAsync</pc></pc> to write the in-memory stream out to the file stream.</target>
        </segment>
      </unit>
      <unit id="191">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/ImagingWin10/cs/MainPage.xaml.cs#SnippetTranscodeImageFile)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">TranscodeImageFile</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">TranscodeImageFile</pc>]</target>
        </segment>
      </unit>
      <unit id="192">
        <segment state="initial">
          <source xml:space="preserve">Related topics</source>
          <target xml:space="preserve">Related topics</target>
        </segment>
      </unit>
      <unit id="193">
        <segment state="initial">
          <source xml:space="preserve">BitmapEncoder options reference</source>
          <target xml:space="preserve">BitmapEncoder options reference</target>
        </segment>
      </unit>
      <unit id="194">
        <segment state="initial">
          <source xml:space="preserve">Image Metadata</source>
          <target xml:space="preserve">Image Metadata</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>