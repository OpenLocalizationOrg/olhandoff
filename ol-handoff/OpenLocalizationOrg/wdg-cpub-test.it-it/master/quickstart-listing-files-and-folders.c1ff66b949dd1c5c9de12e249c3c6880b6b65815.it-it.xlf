<?xml version="1.0" encoding="utf-8"?>
<xliff srcLang="en-US" trgLang="it-it" version="2.0" xmlns="urn:oasis:names:tc:xliff:document:2.0" xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">0198b7b94a6e25e85535d90b8086931ad47658dc</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source xml:space="preserve">Enumerate and query files and folders</source>
          <target xml:space="preserve">Enumerate and query files and folders</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source xml:space="preserve">\[ Updated for UWP apps on Windows 10.</source>
          <target xml:space="preserve">\[ Updated for UWP apps on Windows 10.</target>
        </segment>
      </unit>
      <unit id="103">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
          <target xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source xml:space="preserve">Access files and folders in either a folder, library, device, or network location.</source>
          <target xml:space="preserve">Access files and folders in either a folder, library, device, or network location.</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source xml:space="preserve">You can also query the files and folders in a location by constructing file and folder queries.</source>
          <target xml:space="preserve">You can also query the files and folders in a location by constructing file and folder queries.</target>
        </segment>
      </unit>
      <unit id="106">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](http://go.microsoft.com/fwlink/p/?linkid=619993)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  Also see the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Folder enumeration sample</pc>.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  Also see the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Folder enumeration sample</pc>.</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source xml:space="preserve">Prerequisites</source>
          <target xml:space="preserve">Prerequisites</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source xml:space="preserve">Understand async programming for Universal Windows Platform (UWP) apps</source>
          <target xml:space="preserve">Understand async programming for Universal Windows Platform (UWP) apps</target>
        </segment>
      </unit>
      <unit id="109">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/mt187337)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">You can learn how to write asynchronous apps in C\# or Visual Basic, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Call asynchronous APIs in C\# or Visual Basic</pc>.</source>
          <target xml:space="preserve">You can learn how to write asynchronous apps in C\# or Visual Basic, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Call asynchronous APIs in C\# or Visual Basic</pc>.</target>
        </segment>
      </unit>
      <unit id="110">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/mt187334)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To learn how to write asynchronous apps in C++, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Asynchronous programming in C++</pc>.</source>
          <target xml:space="preserve">To learn how to write asynchronous apps in C++, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Asynchronous programming in C++</pc>.</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source xml:space="preserve">Access permissions to the location</source>
          <target xml:space="preserve">Access permissions to the location</target>
        </segment>
      </unit>
      <unit id="112">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For example, the code in these examples require the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">picturesLibrary</pc> capability, but your location may require a different capability or no capability at all.</source>
          <target xml:space="preserve">For example, the code in these examples require the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">picturesLibrary</pc> capability, but your location may require a different capability or no capability at all.</target>
        </segment>
      </unit>
      <unit id="113">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](file-access-permissions.md)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To learn more, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">File access permissions</pc>.</source>
          <target xml:space="preserve">To learn more, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">File access permissions</pc>.</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source xml:space="preserve">Enumerate files and folders in a location</source>
          <target xml:space="preserve">Enumerate files and folders in a location</target>
        </segment>
      </unit>
      <unit id="115">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  Remember to declare the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">picturesLibrary</pc> capability.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  Remember to declare the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">picturesLibrary</pc> capability.</target>
        </segment>
      </unit>
      <unit id="116">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227276)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/br227156)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">In this example we first use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StorageFolder.GetFilesAsync</pc></pc> method to get all the files in the root folder of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">PicturesLibrary</pc></pc> (not in subfolders) and list the name of each file.</source>
          <target xml:space="preserve">In this example we first use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StorageFolder.GetFilesAsync</pc></pc> method to get all the files in the root folder of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">PicturesLibrary</pc></pc> (not in subfolders) and list the name of each file.</target>
        </segment>
      </unit>
      <unit id="117">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227280)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Next, we use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetFoldersAsync</pc></pc> method to get all the subfolders in the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">PicturesLibrary</pc> and list the name of each subfolder.</source>
          <target xml:space="preserve">Next, we use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetFoldersAsync</pc></pc> method to get all the subfolders in the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">PicturesLibrary</pc> and list the name of each subfolder.</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>