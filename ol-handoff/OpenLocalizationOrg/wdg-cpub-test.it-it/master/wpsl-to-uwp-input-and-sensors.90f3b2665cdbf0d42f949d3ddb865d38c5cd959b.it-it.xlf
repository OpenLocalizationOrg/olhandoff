<?xml version="1.0" encoding="utf-8"?>
<xliff srcLang="en-US" trgLang="it-it" version="2.0" xmlns="urn:oasis:names:tc:xliff:document:2.0" xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">643aa46fd5d69ea9d88ac8ee67428337fa4c0164</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source xml:space="preserve">description: Code that integrates with the device itself and its sensors involves input from, and output to, the user.</source>
          <target xml:space="preserve">description: Code that integrates with the device itself and its sensors involves input from, and output to, the user.</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source xml:space="preserve">title: Porting Windows Phone Silverlight to UWP for I/O, device, and app model'</source>
          <target xml:space="preserve">title: Porting Windows Phone Silverlight to UWP for I/O, device, and app model'</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source xml:space="preserve">ms.assetid: bf9f2c03-12c1-49e4-934b-e3fa98919c53</source>
          <target xml:space="preserve">ms.assetid: bf9f2c03-12c1-49e4-934b-e3fa98919c53</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source xml:space="preserve">Porting Windows Phone Silverlight to UWP for I/O, device, and app model</source>
          <target xml:space="preserve">Porting Windows Phone Silverlight to UWP for I/O, device, and app model</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source xml:space="preserve">\[ Updated for UWP apps on Windows 10.</source>
          <target xml:space="preserve">\[ Updated for UWP apps on Windows 10.</target>
        </segment>
      </unit>
      <unit id="106">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
          <target xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
        </segment>
      </unit>
      <unit id="107">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](wpsl-to-uwp-porting-xaml-and-ui.md)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The previous topic was <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Porting XAML and UI</pc>.</source>
          <target xml:space="preserve">The previous topic was <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Porting XAML and UI</pc>.</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source xml:space="preserve">Code that integrates with the device itself and its sensors involves input from, and output to, the user.</source>
          <target xml:space="preserve">Code that integrates with the device itself and its sensors involves input from, and output to, the user.</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source xml:space="preserve">It can also involve processing data.</source>
          <target xml:space="preserve">It can also involve processing data.</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source xml:space="preserve">But, this code is not generally thought of as either the UI layer or the data layer.</source>
          <target xml:space="preserve">But, this code is not generally thought of as either the UI layer or the data layer.</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source xml:space="preserve">This code includes integration with the vibration controller, accelerometer, gyroscope, microphone and speaker (which intersect with speech recognition and synthesis), (geo)location, and input modalities such as touch, mouse, keyboard, and pen.</source>
          <target xml:space="preserve">This code includes integration with the vibration controller, accelerometer, gyroscope, microphone and speaker (which intersect with speech recognition and synthesis), (geo)location, and input modalities such as touch, mouse, keyboard, and pen.</target>
        </segment>
      </unit>
      <unit id="112">
        <segment state="initial">
          <source xml:space="preserve">Application lifecycle (process lifetime management)</source>
          <target xml:space="preserve">Application lifecycle (process lifetime management)</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source xml:space="preserve">Your Windows Phone Silverlight app contains code to save and restore its application state and its view state in order to support being tombstoned and subsequently re-activated.</source>
          <target xml:space="preserve">Your Windows Phone Silverlight app contains code to save and restore its application state and its view state in order to support being tombstoned and subsequently re-activated.</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source xml:space="preserve">The app lifecycle of Universal Windows Platform (UWP) apps has strong parallels with that of Windows Phone Silverlight apps, since they're both designed with the same goal of maximizing the resources available to whichever app the user has chosen to have in the foreground at any moment.</source>
          <target xml:space="preserve">The app lifecycle of Universal Windows Platform (UWP) apps has strong parallels with that of Windows Phone Silverlight apps, since they're both designed with the same goal of maximizing the resources available to whichever app the user has chosen to have in the foreground at any moment.</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source xml:space="preserve">You'll find that your code will adapt to the new system reasonable easily.</source>
          <target xml:space="preserve">You'll find that your code will adapt to the new system reasonable easily.</target>
        </segment>
      </unit>
      <unit id="116">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>   Pressing the hardware <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Back</pc> button automatically terminates a Windows Phone Silverlight app.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>   Pressing the hardware <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Back</pc> button automatically terminates a Windows Phone Silverlight app.</target>
        </segment>
      </unit>
      <unit id="117">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">*</data>
          <data id="id4">*</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Pressing the hardware <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Back</pc> button on a mobile device <pc dataRefEnd="id4" dataRefStart="id3" id="p2">does not</pc> automatically terminate a UWP app.</source>
          <target xml:space="preserve">Pressing the hardware <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Back</pc> button on a mobile device <pc dataRefEnd="id4" dataRefStart="id3" id="p2">does not</pc> automatically terminate a UWP app.</target>
        </segment>
      </unit>
      <unit id="118">
        <segment state="initial">
          <source xml:space="preserve">Instead, it becomes suspended, and then it may be terminated.</source>
          <target xml:space="preserve">Instead, it becomes suspended, and then it may be terminated.</target>
        </segment>
      </unit>
      <unit id="119">
        <segment state="initial">
          <source xml:space="preserve">But, those details are transparent to an app that responds appropriately to application lifecycle events.</source>
          <target xml:space="preserve">But, those details are transparent to an app that responds appropriately to application lifecycle events.</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source xml:space="preserve">A "debounce window" is the period of time between the app becoming inactive and the system raising the suspending event.</source>
          <target xml:space="preserve">A "debounce window" is the period of time between the app becoming inactive and the system raising the suspending event.</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source xml:space="preserve">For a UWP app, there is no debounce window; the suspension event is raised as soon as an app becomes inactive.</source>
          <target xml:space="preserve">For a UWP app, there is no debounce window; the suspension event is raised as soon as an app becomes inactive.</target>
        </segment>
      </unit>
      <unit id="122">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/mt243287)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">App lifecycle</pc>.</source>
          <target xml:space="preserve">For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">App lifecycle</pc>.</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source xml:space="preserve">Camera</source>
          <target xml:space="preserve">Camera</target>
        </segment>
      </unit>
      <unit id="124">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Windows Phone Silverlight camera capture code uses the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Microsoft.Devices.Camera</pc>, <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Microsoft.Devices.PhotoCamera</pc>, or <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Microsoft.Phone.Tasks.CameraCaptureTask</pc> classes.</source>
          <target xml:space="preserve">Windows Phone Silverlight camera capture code uses the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Microsoft.Devices.Camera</pc>, <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Microsoft.Devices.PhotoCamera</pc>, or <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Microsoft.Phone.Tasks.CameraCaptureTask</pc> classes.</target>
        </segment>
      </unit>
      <unit id="125">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br241124)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To port that code to the Universal Windows Platform (UWP), you can use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaCapture</pc></pc> class.</source>
          <target xml:space="preserve">To port that code to the Universal Windows Platform (UWP), you can use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaCapture</pc></pc> class.</target>
        </segment>
      </unit>
      <unit id="126">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh700836)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">There is a code example in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CapturePhotoToStorageFileAsync</pc></pc> topic.</source>
          <target xml:space="preserve">There is a code example in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CapturePhotoToStorageFileAsync</pc></pc> topic.</target>
        </segment>
      </unit>
      <unit id="127">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/dn934747)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">That method allows you to capture a photo to a storage file, and it requires the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">microphone</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">webcam</pc> <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">device capabilities</pc></pc> to be set in the app package manifest.</source>
          <target xml:space="preserve">That method allows you to capture a photo to a storage file, and it requires the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">microphone</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">webcam</pc> <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">device capabilities</pc></pc> to be set in the app package manifest.</target>
        </segment>
      </unit>
      <unit id="128">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br241030)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
          <data id="id9">[</data>
          <data id="id10">](https://msdn.microsoft.com/library/windows/apps/dn934747)</data>
          <data id="id11">**</data>
          <data id="id12">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Another option is the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CameraCaptureUI</pc></pc> class, which also requires the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">microphone</pc> and <pc dataRefEnd="id8" dataRefStart="id7" id="p4">webcam</pc> <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">device capabilities</pc></pc>.</source>
          <target xml:space="preserve">Another option is the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CameraCaptureUI</pc></pc> class, which also requires the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">microphone</pc> and <pc dataRefEnd="id8" dataRefStart="id7" id="p4">webcam</pc> <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">device capabilities</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source xml:space="preserve">Lens apps are not supported for UWP apps.</source>
          <target xml:space="preserve">Lens apps are not supported for UWP apps.</target>
        </segment>
      </unit>
      <unit id="130">
        <segment state="initial">
          <source xml:space="preserve">Detecting the platform your app is running on</source>
          <target xml:space="preserve">Detecting the platform your app is running on</target>
        </segment>
      </unit>
      <unit id="131">
        <segment state="initial">
          <source xml:space="preserve">The way of thinking about app-targeting changes with Windows 10.</source>
          <target xml:space="preserve">The way of thinking about app-targeting changes with Windows 10.</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source xml:space="preserve">The new conceptual model is that an app targets the Universal Windows Platform (UWP) and runs across all Windows devices.</source>
          <target xml:space="preserve">The new conceptual model is that an app targets the Universal Windows Platform (UWP) and runs across all Windows devices.</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source xml:space="preserve">It can then opt to light up features that are exclusive to particular device families.</source>
          <target xml:space="preserve">It can then opt to light up features that are exclusive to particular device families.</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source xml:space="preserve">If needed, the app also has the option to limit itself to targeting one or more device families specifically.</source>
          <target xml:space="preserve">If needed, the app also has the option to limit itself to targeting one or more device families specifically.</target>
        </segment>
      </unit>
      <unit id="135">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn894631)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For more info on what device families are—and how to decide which device family to target—see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Guide to UWP apps</pc>.</source>
          <target xml:space="preserve">For more info on what device families are—and how to decide which device family to target—see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Guide to UWP apps</pc>.</target>
        </segment>
      </unit>
      <unit id="136">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>   We recommend that you not use operating system or device family to detect the presence of features.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>   We recommend that you not use operating system or device family to detect the presence of features.</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source xml:space="preserve">Identifying the current operating system or device family is usually not the best way to determine whether a particular operating system or device family feature is present.</source>
          <target xml:space="preserve">Identifying the current operating system or device family is usually not the best way to determine whether a particular operating system or device family feature is present.</target>
        </segment>
      </unit>
      <unit id="138">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](wpsl-to-uwp-porting-to-a-uwp-project.md#conditional-compilation)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Rather than detecting the operating system or device family (and version number), test for the presence of the feature itself (see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Conditional compilation, and adaptive code</pc>).</source>
          <target xml:space="preserve">Rather than detecting the operating system or device family (and version number), test for the presence of the feature itself (see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Conditional compilation, and adaptive code</pc>).</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source xml:space="preserve">If you must require a particular operating system or device family, be sure to use it as a minimum supported version, rather than design the test for that one version.</source>
          <target xml:space="preserve">If you must require a particular operating system or device family, be sure to use it as a minimum supported version, rather than design the test for that one version.</target>
        </segment>
      </unit>
      <unit id="140">
        <segment state="initial">
          <source xml:space="preserve">To tailor your app's UI to different devices, there are several techniques that we recommend.</source>
          <target xml:space="preserve">To tailor your app's UI to different devices, there are several techniques that we recommend.</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source xml:space="preserve">Continue to use auto-sized elements and dynamic layout panels as you always have.</source>
          <target xml:space="preserve">Continue to use auto-sized elements and dynamic layout panels as you always have.</target>
        </segment>
      </unit>
      <unit id="142">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](wpsl-to-uwp-porting-xaml-and-ui.md#effective-pixels)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">In your XAML markup, continue to use sizes in effective pixels (formerly view pixels) so that your UI adapts to different resolutions and scale factors (see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">View/effective pixels, viewing distance, and scale factors</pc>.).</source>
          <target xml:space="preserve">In your XAML markup, continue to use sizes in effective pixels (formerly view pixels) so that your UI adapts to different resolutions and scale factors (see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">View/effective pixels, viewing distance, and scale factors</pc>.).</target>
        </segment>
      </unit>
      <unit id="143">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn894631)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">And use Visual State Manager's adaptive triggers and setters to adapt your UI to the window size (see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Guide to UWP apps</pc>.).</source>
          <target xml:space="preserve">And use Visual State Manager's adaptive triggers and setters to adapt your UI to the window size (see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Guide to UWP apps</pc>.).</target>
        </segment>
      </unit>
      <unit id="144">
        <segment state="initial">
          <source xml:space="preserve">However, if you have a scenario where it is unavoidable to detect the device family, then you can do that.</source>
          <target xml:space="preserve">However, if you have a scenario where it is unavoidable to detect the device family, then you can do that.</target>
        </segment>
      </unit>
      <unit id="145">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn960165)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">In this example, we use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">AnalyticsVersionInfo</pc></pc> class to navigate to a page tailored for the mobile device family where appropriate, and we make sure to fall back to a default page otherwise.</source>
          <target xml:space="preserve">In this example, we use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">AnalyticsVersionInfo</pc></pc> class to navigate to a page tailored for the mobile device family where appropriate, and we make sure to fall back to a default page otherwise.</target>
        </segment>
      </unit>
      <unit id="146">
        <segment state="initial">
          <source xml:space="preserve">Your app can also determine the device family that it is running on from the resource selection factors that are in effect.</source>
          <target xml:space="preserve">Your app can also determine the device family that it is running on from the resource selection factors that are in effect.</target>
        </segment>
      </unit>
      <unit id="147">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br206071)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The example below shows how to do this imperatively, and the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ResourceContext.QualifierValues</pc></pc> topic describes the more typical use case for the class in loading device family-specific resources based on the device family factor.</source>
          <target xml:space="preserve">The example below shows how to do this imperatively, and the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ResourceContext.QualifierValues</pc></pc> topic describes the more typical use case for the class in loading device family-specific resources based on the device family factor.</target>
        </segment>
      </unit>
      <unit id="148">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](wpsl-to-uwp-porting-to-a-uwp-project.md#conditional-compilation)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Also, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Conditional compilation, and adaptive code</pc>.</source>
          <target xml:space="preserve">Also, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Conditional compilation, and adaptive code</pc>.</target>
        </segment>
      </unit>
      <unit id="149">
        <segment state="initial">
          <source xml:space="preserve">Device status</source>
          <target xml:space="preserve">Device status</target>
        </segment>
      </unit>
      <unit id="150">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">A Windows Phone Silverlight app can use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Microsoft.Phone.Info.DeviceStatus</pc> class to get info about the device on which the app is running.</source>
          <target xml:space="preserve">A Windows Phone Silverlight app can use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Microsoft.Phone.Info.DeviceStatus</pc> class to get info about the device on which the app is running.</target>
        </segment>
      </unit>
      <unit id="151">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">While there is no direct UWP equivalent for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Microsoft.Phone.Info</pc> namespace, here are some properties and events that you can use in a UWP app in place of calls to members of the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">DeviceStatus</pc> class.</source>
          <target xml:space="preserve">While there is no direct UWP equivalent for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Microsoft.Phone.Info</pc> namespace, here are some properties and events that you can use in a UWP app in place of calls to members of the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">DeviceStatus</pc> class.</target>
        </segment>
      </unit>
      <unit id="152">
        <segment state="initial">
          <source xml:space="preserve">Windows Phone Silverlight</source>
          <target xml:space="preserve">Windows Phone Silverlight</target>
        </segment>
      </unit>
      <unit id="153">
        <segment state="initial">
          <source xml:space="preserve">UWP</source>
          <target xml:space="preserve">UWP</target>
        </segment>
      </unit>
      <unit id="154">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">ApplicationCurrentMemoryUsage</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationCurrentMemoryUsageLimit</pc> properties</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">ApplicationCurrentMemoryUsage</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationCurrentMemoryUsageLimit</pc> properties</target>
        </segment>
      </unit>
      <unit id="155">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn633832)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/dn633836)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">
							<pc dataRefEnd="id4" dataRefStart="id3" id="p2">MemoryManager.AppMemoryUsage</pc>
						</pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">AppMemoryUsageLimit</pc></pc> properties</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">
							<pc dataRefEnd="id4" dataRefStart="id3" id="p2">MemoryManager.AppMemoryUsage</pc>
						</pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">AppMemoryUsageLimit</pc></pc> properties</target>
        </segment>
      </unit>
      <unit id="156">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">ApplicationPeakMemoryUsage</pc> property</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">ApplicationPeakMemoryUsage</pc> property</target>
        </segment>
      </unit>
      <unit id="157">
        <segment state="initial">
          <source xml:space="preserve">Use the memory profiling tools in Visual Studio.</source>
          <target xml:space="preserve">Use the memory profiling tools in Visual Studio.</target>
        </segment>
      </unit>
      <unit id="158">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://msdn.microsoft.com/library/windows/apps/dn645469.aspx)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Analyze memory usage</pc>.</source>
          <target xml:space="preserve">For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Analyze memory usage</pc>.</target>
        </segment>
      </unit>
      <unit id="159">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">DeviceFirmwareVersion</pc> property</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">DeviceFirmwareVersion</pc> property</target>
        </segment>
      </unit>
      <unit id="160">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn608144)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">
							<pc dataRefEnd="id4" dataRefStart="id3" id="p2">EasClientDeviceInformation.SystemFirmwareVersion</pc>
						</pc> property (desktop device family only)</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">
							<pc dataRefEnd="id4" dataRefStart="id3" id="p2">EasClientDeviceInformation.SystemFirmwareVersion</pc>
						</pc> property (desktop device family only)</target>
        </segment>
      </unit>
      <unit id="161">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">DeviceHardwareVersion</pc> property</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">DeviceHardwareVersion</pc> property</target>
        </segment>
      </unit>
      <unit id="162">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn608145)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">
							<pc dataRefEnd="id4" dataRefStart="id3" id="p2">EasClientDeviceInformation.SystemHardwareVersion</pc>
						</pc> property (desktop device family only)</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">
							<pc dataRefEnd="id4" dataRefStart="id3" id="p2">EasClientDeviceInformation.SystemHardwareVersion</pc>
						</pc> property (desktop device family only)</target>
        </segment>
      </unit>
      <unit id="163">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">DeviceManufacturer</pc> property</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">DeviceManufacturer</pc> property</target>
        </segment>
      </unit>
      <unit id="164">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh701398)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">
							<pc dataRefEnd="id4" dataRefStart="id3" id="p2">EasClientDeviceInformation.SystemManufacturer</pc>
						</pc> property (desktop device family only)</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">
							<pc dataRefEnd="id4" dataRefStart="id3" id="p2">EasClientDeviceInformation.SystemManufacturer</pc>
						</pc> property (desktop device family only)</target>
        </segment>
      </unit>
      <unit id="165">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">DeviceName</pc> property</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">DeviceName</pc> property</target>
        </segment>
      </unit>
      <unit id="166">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh701401)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">
							<pc dataRefEnd="id4" dataRefStart="id3" id="p2">EasClientDeviceInformation.SystemProductName</pc>
						</pc> property (desktop device family only)</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">
							<pc dataRefEnd="id4" dataRefStart="id3" id="p2">EasClientDeviceInformation.SystemProductName</pc>
						</pc> property (desktop device family only)</target>
        </segment>
      </unit>
      <unit id="167">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">DeviceTotalMemory</pc> property</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">DeviceTotalMemory</pc> property</target>
        </segment>
      </unit>
      <unit id="168">
        <segment state="initial">
          <source xml:space="preserve">No equivalent</source>
          <target xml:space="preserve">No equivalent</target>
        </segment>
      </unit>
      <unit id="169">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">IsKeyboardDeployed</pc> property</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">IsKeyboardDeployed</pc> property</target>
        </segment>
      </unit>
      <unit id="170">
        <segment state="initial">
          <source xml:space="preserve">No equivalent.</source>
          <target xml:space="preserve">No equivalent.</target>
        </segment>
      </unit>
      <unit id="171">
        <segment state="initial">
          <source xml:space="preserve">This property provides information about hardware keyboards for mobile devices, which are not commonly used.</source>
          <target xml:space="preserve">This property provides information about hardware keyboards for mobile devices, which are not commonly used.</target>
        </segment>
      </unit>
      <unit id="172">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">IsKeyboardPresent</pc> property</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">IsKeyboardPresent</pc> property</target>
        </segment>
      </unit>
      <unit id="173">
        <segment state="initial">
          <source xml:space="preserve">No equivalent.</source>
          <target xml:space="preserve">No equivalent.</target>
        </segment>
      </unit>
      <unit id="174">
        <segment state="initial">
          <source xml:space="preserve">This property provides information about hardware keyboards for mobile devices, which are not commonly used.</source>
          <target xml:space="preserve">This property provides information about hardware keyboards for mobile devices, which are not commonly used.</target>
        </segment>
      </unit>
      <unit id="175">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">KeyboardDeployedChanged</pc> event</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">KeyboardDeployedChanged</pc> event</target>
        </segment>
      </unit>
      <unit id="176">
        <segment state="initial">
          <source xml:space="preserve">No equivalent.</source>
          <target xml:space="preserve">No equivalent.</target>
        </segment>
      </unit>
      <unit id="177">
        <segment state="initial">
          <source xml:space="preserve">This property provides information about hardware keyboards for mobile devices, which are not commonly used.</source>
          <target xml:space="preserve">This property provides information about hardware keyboards for mobile devices, which are not commonly used.</target>
        </segment>
      </unit>
      <unit id="178">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">PowerSource</pc> property</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">PowerSource</pc> property</target>
        </segment>
      </unit>
      <unit id="179">
        <segment state="initial">
          <source xml:space="preserve">No equivalent</source>
          <target xml:space="preserve">No equivalent</target>
        </segment>
      </unit>
      <unit id="180">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">PowerSourceChanged</pc> event</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">PowerSourceChanged</pc> event</target>
        </segment>
      </unit>
      <unit id="181">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/jj207240)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Handle the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">RemainingChargePercentChanged</pc></pc> event (mobile device family only).</source>
          <target xml:space="preserve">Handle the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">RemainingChargePercentChanged</pc></pc> event (mobile device family only).</target>
        </segment>
      </unit>
      <unit id="182">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/jj207239)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The event is raised when the value of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">RemainingChargePercent</pc></pc> property (mobile device family only) decreases by 1%.</source>
          <target xml:space="preserve">The event is raised when the value of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">RemainingChargePercent</pc></pc> property (mobile device family only) decreases by 1%.</target>
        </segment>
      </unit>
      <unit id="183">
        <segment state="initial">
          <source xml:space="preserve">Location</source>
          <target xml:space="preserve">Location</target>
        </segment>
      </unit>
      <unit id="184">
        <segment state="initial">
          <source xml:space="preserve">When an app that declares the Location capability in its app package manifest runs on Windows 10, the system will prompt the end-user for consent.</source>
          <target xml:space="preserve">When an app that declares the Location capability in its app package manifest runs on Windows 10, the system will prompt the end-user for consent.</target>
        </segment>
      </unit>
      <unit id="185">
        <segment state="initial">
          <source xml:space="preserve">So, if your app displays its own custom consent prompt, or if it provides an on-off toggle, then you will want to remove that so that the end-user is only prompted once.</source>
          <target xml:space="preserve">So, if your app displays its own custom consent prompt, or if it provides an on-off toggle, then you will want to remove that so that the end-user is only prompted once.</target>
        </segment>
      </unit>
      <unit id="186">
        <segment state="initial">
          <source xml:space="preserve">Orientation</source>
          <target xml:space="preserve">Orientation</target>
        </segment>
      </unit>
      <unit id="187">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/dn934798)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The UWP app equivalent of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">PhoneApplicationPage.SupportedOrientations</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Orientation</pc> properties is the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">uap:InitialRotationPreference</pc></pc> element in the app package manifest.</source>
          <target xml:space="preserve">The UWP app equivalent of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">PhoneApplicationPage.SupportedOrientations</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Orientation</pc> properties is the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">uap:InitialRotationPreference</pc></pc> element in the app package manifest.</target>
        </segment>
      </unit>
      <unit id="188">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Select the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Application</pc> tab if it isn't already selected and select one or more check boxes under <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Supported rotations</pc> to record your preferences.</source>
          <target xml:space="preserve">Select the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Application</pc> tab if it isn't already selected and select one or more check boxes under <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Supported rotations</pc> to record your preferences.</target>
        </segment>
      </unit>
      <unit id="189">
        <segment state="initial">
          <source xml:space="preserve">You're encouraged, however, to design the UI of your UWP app to look great regardless of device orientation and screen size.</source>
          <target xml:space="preserve">You're encouraged, however, to design the UI of your UWP app to look great regardless of device orientation and screen size.</target>
        </segment>
      </unit>
      <unit id="190">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](wpsl-to-uwp-form-factors-and-ux.md)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">There's more about that in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Porting for form factors and user experience</pc>, which is the topic after next.</source>
          <target xml:space="preserve">There's more about that in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Porting for form factors and user experience</pc>, which is the topic after next.</target>
        </segment>
      </unit>
      <unit id="191">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](wpsl-to-uwp-business-and-data.md)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The next topic is <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Porting business and data layers</pc>.</source>
          <target xml:space="preserve">The next topic is <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Porting business and data layers</pc>.</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>