<?xml version="1.0" encoding="utf-8"?>
<xliff srcLang="en-US" trgLang="it-it" version="2.0" xmlns="urn:oasis:names:tc:xliff:document:2.0" xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">fd4c27b6fbef674c5c4f63b01083db888cdd1fe6</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source xml:space="preserve">Sensors</source>
          <target xml:space="preserve">Sensors</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source xml:space="preserve">\[ Updated for UWP apps on Windows 10.</source>
          <target xml:space="preserve">\[ Updated for UWP apps on Windows 10.</target>
        </segment>
      </unit>
      <unit id="103">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
          <target xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source xml:space="preserve">Sensors let your app know the relationship between a device and the physical world around it.</source>
          <target xml:space="preserve">Sensors let your app know the relationship between a device and the physical world around it.</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source xml:space="preserve">Sensors can tell your app the direction, orientation, and movement of the device.</source>
          <target xml:space="preserve">Sensors can tell your app the direction, orientation, and movement of the device.</target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source xml:space="preserve">These sensors can help make your game, augmented reality app, or utility app more useful and interactive by providing a unique form of input, such as using the motion of the device to arrange the characters on the screen or to simulate being in a cockpit and using the device as the steering wheel.</source>
          <target xml:space="preserve">These sensors can help make your game, augmented reality app, or utility app more useful and interactive by providing a unique form of input, such as using the motion of the device to arrange the characters on the screen or to simulate being in a cockpit and using the device as the steering wheel.</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source xml:space="preserve">As a general rule, decide from the outset whether your app will depend exclusively on sensors or if sensors will just offer an additional control mechanism.</source>
          <target xml:space="preserve">As a general rule, decide from the outset whether your app will depend exclusively on sensors or if sensors will just offer an additional control mechanism.</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source xml:space="preserve">For example, a driving game using a device as a virtual steering wheel could alternatively be controlled through an on-screen GUI – this way, the app works regardless of the sensors available on the system.</source>
          <target xml:space="preserve">For example, a driving game using a device as a virtual steering wheel could alternatively be controlled through an on-screen GUI – this way, the app works regardless of the sensors available on the system.</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source xml:space="preserve">On the other hand, a marble tilt maze could be coded to only work on systems that have the appropriate sensors.</source>
          <target xml:space="preserve">On the other hand, a marble tilt maze could be coded to only work on systems that have the appropriate sensors.</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source xml:space="preserve">You must make the strategic choice of whether to fully rely on sensors.</source>
          <target xml:space="preserve">You must make the strategic choice of whether to fully rely on sensors.</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source xml:space="preserve">Note that a mouse/touch control scheme trades immersion for greater control.</source>
          <target xml:space="preserve">Note that a mouse/touch control scheme trades immersion for greater control.</target>
        </segment>
      </unit>
      <unit id="112">
        <segment state="initial">
          <source xml:space="preserve">The following video demonstrates some of the sensors available to you when you are building your app.</source>
          <target xml:space="preserve">The following video demonstrates some of the sensors available to you when you are building your app.</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source xml:space="preserve">This is not an exhaustive list, but goes over some of the more common sensors and demonstrates their purpose.</source>
          <target xml:space="preserve">This is not an exhaustive list, but goes over some of the more common sensors and demonstrates their purpose.</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source xml:space="preserve">One dev minute - Sensors Overview</source>
          <target xml:space="preserve">One dev minute - Sensors Overview</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source xml:space="preserve">Topic</source>
          <target xml:space="preserve">Topic</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source xml:space="preserve">Description</source>
          <target xml:space="preserve">Description</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source xml:space="preserve">Calibrate sensors</source>
          <target xml:space="preserve">Calibrate sensors</target>
        </segment>
      </unit>
      <unit id="118">
        <segment state="initial">
          <source xml:space="preserve">Sensors in a device based on the magnetometer – the compass, inclinometer and orientation sensor - can become in need of calibration due to environmental factors.</source>
          <target xml:space="preserve">Sensors in a device based on the magnetometer – the compass, inclinometer and orientation sensor - can become in need of calibration due to environmental factors.</target>
        </segment>
      </unit>
      <unit id="119">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/Dn297552)</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />MagnetometerAccuracy<ph dataRef="id4" id="ph2" /></pc> enumeration can help determine a course of action when your device is in need of calibration.</source>
          <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />MagnetometerAccuracy<ph dataRef="id4" id="ph2" /></pc> enumeration can help determine a course of action when your device is in need of calibration.</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source xml:space="preserve">Sensor orientation</source>
          <target xml:space="preserve">Sensor orientation</target>
        </segment>
      </unit>
      <unit id="121">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR206371)</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Sensor data from the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />OrientationSensor<ph dataRef="id4" id="ph2" /></pc> classes is defined by their reference axes.</source>
          <target xml:space="preserve">Sensor data from the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />OrientationSensor<ph dataRef="id4" id="ph2" /></pc> classes is defined by their reference axes.</target>
        </segment>
      </unit>
      <unit id="122">
        <segment state="initial">
          <source xml:space="preserve">These axes are defined by the device's landscape orientation and rotate with the device as the user turns it.</source>
          <target xml:space="preserve">These axes are defined by the device's landscape orientation and rotate with the device as the user turns it.</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source xml:space="preserve">Use the accelerometer</source>
          <target xml:space="preserve">Use the accelerometer</target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source xml:space="preserve">Learn how to use the accelerometer to respond to user movement.</source>
          <target xml:space="preserve">Learn how to use the accelerometer to respond to user movement.</target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source xml:space="preserve">Use the compass</source>
          <target xml:space="preserve">Use the compass</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source xml:space="preserve">Learn how to use the compass to determine the current heading.</source>
          <target xml:space="preserve">Learn how to use the compass to determine the current heading.</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source xml:space="preserve">Use the gyrometer</source>
          <target xml:space="preserve">Use the gyrometer</target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source xml:space="preserve">Learn how to use the gyrometer to detect changes in user movement.</source>
          <target xml:space="preserve">Learn how to use the gyrometer to detect changes in user movement.</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source xml:space="preserve">Use the inclinometer</source>
          <target xml:space="preserve">Use the inclinometer</target>
        </segment>
      </unit>
      <unit id="130">
        <segment state="initial">
          <source xml:space="preserve">Learn how to use the inclinometer to determine pitch, roll, and yaw.</source>
          <target xml:space="preserve">Learn how to use the inclinometer to determine pitch, roll, and yaw.</target>
        </segment>
      </unit>
      <unit id="131">
        <segment state="initial">
          <source xml:space="preserve">Use the light sensor</source>
          <target xml:space="preserve">Use the light sensor</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source xml:space="preserve">Learn how to use the ambient light sensor to detect changes in lighting.</source>
          <target xml:space="preserve">Learn how to use the ambient light sensor to detect changes in lighting.</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source xml:space="preserve">Use the orientation sensor</source>
          <target xml:space="preserve">Use the orientation sensor</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source xml:space="preserve">Learn how to use the orientation sensors to determine the device orientation.</source>
          <target xml:space="preserve">Learn how to use the orientation sensors to determine the device orientation.</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source xml:space="preserve">Sensor batching</source>
          <target xml:space="preserve">Sensor batching</target>
        </segment>
      </unit>
      <unit id="136">
        <segment state="initial">
          <source xml:space="preserve">Some sensors support the concept of batching.</source>
          <target xml:space="preserve">Some sensors support the concept of batching.</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source xml:space="preserve">This will vary depending on the individual sensor available.</source>
          <target xml:space="preserve">This will vary depending on the individual sensor available.</target>
        </segment>
      </unit>
      <unit id="138">
        <segment state="initial">
          <source xml:space="preserve">When a sensor implements batching, it collects several points of data over a specified time interval and then transfers all of that data at one time.</source>
          <target xml:space="preserve">When a sensor implements batching, it collects several points of data over a specified time interval and then transfers all of that data at one time.</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source xml:space="preserve">This is different from normal behavior where a sensor reports its findings as soon as it performs a reading.</source>
          <target xml:space="preserve">This is different from normal behavior where a sensor reports its findings as soon as it performs a reading.</target>
        </segment>
      </unit>
      <unit id="140">
        <segment state="initial">
          <source xml:space="preserve">Consider the following diagram which shows how data is collected and then delivered, first with normal delivery and then with batched delivery.</source>
          <target xml:space="preserve">Consider the following diagram which shows how data is collected and then delivered, first with normal delivery and then with batched delivery.</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source xml:space="preserve">Sensor batch collection</source>
          <target xml:space="preserve">Sensor batch collection</target>
        </segment>
      </unit>
      <unit id="142">
        <segment state="initial">
          <source xml:space="preserve">The primary advantage for sensor batching is prolonging battery life.</source>
          <target xml:space="preserve">The primary advantage for sensor batching is prolonging battery life.</target>
        </segment>
      </unit>
      <unit id="143">
        <segment state="initial">
          <source xml:space="preserve">When the data is not sent immediately, that saves on processor power and prevents the data from needing to be immediately processed.</source>
          <target xml:space="preserve">When the data is not sent immediately, that saves on processor power and prevents the data from needing to be immediately processed.</target>
        </segment>
      </unit>
      <unit id="144">
        <segment state="initial">
          <source xml:space="preserve">Parts of the system can sleep until they are needed, which generates a significant power savings.</source>
          <target xml:space="preserve">Parts of the system can sleep until they are needed, which generates a significant power savings.</target>
        </segment>
      </unit>
      <unit id="145">
        <segment state="initial">
          <source xml:space="preserve">You can influence how often the sensor sends batches by adjusting the latency.</source>
          <target xml:space="preserve">You can influence how often the sensor sends batches by adjusting the latency.</target>
        </segment>
      </unit>
      <unit id="146">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR225687)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/windows.devices.sensors.accelerometer.reportlatency)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For example, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Accelerometer</pc></pc> sensor has the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">ReportLatency</pc></pc> property.</source>
          <target xml:space="preserve">For example, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Accelerometer</pc></pc> sensor has the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">ReportLatency</pc></pc> property.</target>
        </segment>
      </unit>
      <unit id="147">
        <segment state="initial">
          <source xml:space="preserve">When this property is set for an application, the sensor will send data after the specified amount of time.</source>
          <target xml:space="preserve">When this property is set for an application, the sensor will send data after the specified amount of time.</target>
        </segment>
      </unit>
      <unit id="148">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/windows.devices.sensors.accelerometer.reportinterval)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">You can control how much data is accumulated over a given latency by setting the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ReportInterval</pc></pc> property.</source>
          <target xml:space="preserve">You can control how much data is accumulated over a given latency by setting the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ReportInterval</pc></pc> property.</target>
        </segment>
      </unit>
      <unit id="149">
        <segment state="initial">
          <source xml:space="preserve">There are a couple of caveats to keep in mind with respect to setting the latency.</source>
          <target xml:space="preserve">There are a couple of caveats to keep in mind with respect to setting the latency.</target>
        </segment>
      </unit>
      <unit id="150">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.devices.sensors.accelerometer.maxbatchsize.aspx)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The first caveat is that each sensor has a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MaxBatchSize</pc></pc> that it can support based on the sensor itself.</source>
          <target xml:space="preserve">The first caveat is that each sensor has a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MaxBatchSize</pc></pc> that it can support based on the sensor itself.</target>
        </segment>
      </unit>
      <unit id="151">
        <segment state="initial">
          <source xml:space="preserve">This is the number of events that the sensor can cache before it is forced to send them.</source>
          <target xml:space="preserve">This is the number of events that the sensor can cache before it is forced to send them.</target>
        </segment>
      </unit>
      <unit id="152">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/windows.devices.sensors.accelerometer.reportinterval)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">[</data>
          <data id="id8">](https://msdn.microsoft.com/library/windows/apps/windows.devices.sensors.accelerometer.reportlatency)</data>
          <data id="id9">**</data>
          <data id="id10">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">If you multiply <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MaxBatchSize</pc> by <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">ReportInterval</pc></pc>, that determines the maximum <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">ReportLatency</pc></pc> value.</source>
          <target xml:space="preserve">If you multiply <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MaxBatchSize</pc> by <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">ReportInterval</pc></pc>, that determines the maximum <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">ReportLatency</pc></pc> value.</target>
        </segment>
      </unit>
      <unit id="153">
        <segment state="initial">
          <source xml:space="preserve">If you specify a higher value than this, the maximum latency will be used so that you do not lose data.</source>
          <target xml:space="preserve">If you specify a higher value than this, the maximum latency will be used so that you do not lose data.</target>
        </segment>
      </unit>
      <unit id="154">
        <segment state="initial">
          <source xml:space="preserve">In addition, multiple applications can each set a desired latency.</source>
          <target xml:space="preserve">In addition, multiple applications can each set a desired latency.</target>
        </segment>
      </unit>
      <unit id="155">
        <segment state="initial">
          <source xml:space="preserve">In order to meet the needs of all applications, the shortest latency period will be used.</source>
          <target xml:space="preserve">In order to meet the needs of all applications, the shortest latency period will be used.</target>
        </segment>
      </unit>
      <unit id="156">
        <segment state="initial">
          <source xml:space="preserve">Because of these facts, the latency you set in your application may not match the observed latency.</source>
          <target xml:space="preserve">Because of these facts, the latency you set in your application may not match the observed latency.</target>
        </segment>
      </unit>
      <unit id="157">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/windows.devices.sensors.accelerometer.getcurrentreading)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">If a sensor is using batch reporting, calling <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetCurrentReading</pc></pc> will clear the current batch of data and start a new latency period.</source>
          <target xml:space="preserve">If a sensor is using batch reporting, calling <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetCurrentReading</pc></pc> will clear the current batch of data and start a new latency period.</target>
        </segment>
      </unit>
      <unit id="158">
        <segment state="initial">
          <source xml:space="preserve">Accelerometer</source>
          <target xml:space="preserve">Accelerometer</target>
        </segment>
      </unit>
      <unit id="159">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR225687)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Accelerometer</pc></pc> sensor measures G-force values along the X, Y, and Z axes of the device and is great for simple motion-based applications.</source>
          <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Accelerometer</pc></pc> sensor measures G-force values along the X, Y, and Z axes of the device and is great for simple motion-based applications.</target>
        </segment>
      </unit>
      <unit id="160">
        <segment state="initial">
          <source xml:space="preserve">Note that G-force values include acceleration due to gravity.</source>
          <target xml:space="preserve">Note that G-force values include acceleration due to gravity.</target>
        </segment>
      </unit>
      <unit id="161">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR206399)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">If the device has the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SimpleOrientation</pc></pc> of <pc dataRefEnd="id6" dataRefStart="id5" id="p3">FaceUp</pc> on a table, then the accelerometer would read -1 G on the Z axis.</source>
          <target xml:space="preserve">If the device has the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SimpleOrientation</pc></pc> of <pc dataRefEnd="id6" dataRefStart="id5" id="p3">FaceUp</pc> on a table, then the accelerometer would read -1 G on the Z axis.</target>
        </segment>
      </unit>
      <unit id="162">
        <segment state="initial">
          <source xml:space="preserve">Thus, accelerometers do not necessarily measure just coordinate acceleration – the rate of change of velocity.</source>
          <target xml:space="preserve">Thus, accelerometers do not necessarily measure just coordinate acceleration – the rate of change of velocity.</target>
        </segment>
      </unit>
      <unit id="163">
        <segment state="initial">
          <source xml:space="preserve">When using an accelerometer, make sure to differentiate between the gravitational vector from gravity and the linear acceleration vector from motion.</source>
          <target xml:space="preserve">When using an accelerometer, make sure to differentiate between the gravitational vector from gravity and the linear acceleration vector from motion.</target>
        </segment>
      </unit>
      <unit id="164">
        <segment state="initial">
          <source xml:space="preserve">Note that the gravitational vector should normalize to 1 for a stationary device.</source>
          <target xml:space="preserve">Note that the gravitational vector should normalize to 1 for a stationary device.</target>
        </segment>
      </unit>
      <unit id="165">
        <segment state="initial">
          <source xml:space="preserve">The following diagrams illustrate:</source>
          <target xml:space="preserve">The following diagrams illustrate:</target>
        </segment>
      </unit>
      <unit id="166">
        <segment state="initial">
          <source xml:space="preserve">V1 = Vector 1 = Force due to gravity</source>
          <target xml:space="preserve">V1 = Vector 1 = Force due to gravity</target>
        </segment>
      </unit>
      <unit id="167">
        <segment state="initial">
          <source xml:space="preserve">V2 = Vector 2 = -Z axis of device chassis (points out of back of screen)</source>
          <target xml:space="preserve">V2 = Vector 2 = -Z axis of device chassis (points out of back of screen)</target>
        </segment>
      </unit>
      <unit id="168">
        <segment state="initial">
          <source xml:space="preserve">Θi = Tilt angle (inclination) = angle between –Z axis of device chassis and gravity vector</source>
          <target xml:space="preserve">Θi = Tilt angle (inclination) = angle between –Z axis of device chassis and gravity vector</target>
        </segment>
      </unit>
      <unit id="169">
        <segment state="initial">
          <source xml:space="preserve">Accelerometer</source>
          <target xml:space="preserve">Accelerometer</target>
        </segment>
      </unit>
      <unit id="170">
        <segment state="initial">
          <source xml:space="preserve">Accelerometer measurement</source>
          <target xml:space="preserve">Accelerometer measurement</target>
        </segment>
      </unit>
      <unit id="171">
        <segment state="initial">
          <source xml:space="preserve">Apps that might use the accelerometer sensor include a game where a marble on the screen rolls in the direction you tilt the device (gravitational vector).</source>
          <target xml:space="preserve">Apps that might use the accelerometer sensor include a game where a marble on the screen rolls in the direction you tilt the device (gravitational vector).</target>
        </segment>
      </unit>
      <unit id="172">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR225766)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">This type of functionality closely mirrors that of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Inclinometer</pc></pc> and could also be done with that sensor by using a combination of pitch and roll.</source>
          <target xml:space="preserve">This type of functionality closely mirrors that of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Inclinometer</pc></pc> and could also be done with that sensor by using a combination of pitch and roll.</target>
        </segment>
      </unit>
      <unit id="173">
        <segment state="initial">
          <source xml:space="preserve">Using the accelerometer’s gravity vector simplifies this somewhat by providing an easily mathematically manipulated vector for device tilt.</source>
          <target xml:space="preserve">Using the accelerometer’s gravity vector simplifies this somewhat by providing an easily mathematically manipulated vector for device tilt.</target>
        </segment>
      </unit>
      <unit id="174">
        <segment state="initial">
          <source xml:space="preserve">Another example would be an app that makes a whip’s cracking sound when the user flicks the device through the air (linear acceleration vector).</source>
          <target xml:space="preserve">Another example would be an app that makes a whip’s cracking sound when the user flicks the device through the air (linear acceleration vector).</target>
        </segment>
      </unit>
      <unit id="175">
        <segment state="initial">
          <source xml:space="preserve">Activity sensor</source>
          <target xml:space="preserve">Activity sensor</target>
        </segment>
      </unit>
      <unit id="176">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/Dn785096)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Activity</pc></pc> sensor determines the current status of the device attached to the sensor.</source>
          <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Activity</pc></pc> sensor determines the current status of the device attached to the sensor.</target>
        </segment>
      </unit>
      <unit id="177">
        <segment state="initial">
          <source xml:space="preserve">This sensor is frequently used in fitness applications to keep track of when a user carrying a device is running or walking.</source>
          <target xml:space="preserve">This sensor is frequently used in fitness applications to keep track of when a user carrying a device is running or walking.</target>
        </segment>
      </unit>
      <unit id="178">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/Dn785128)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">See <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ActivityType</pc></pc> for a list of possible activities that can be detected by this sensor API.</source>
          <target xml:space="preserve">See <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ActivityType</pc></pc> for a list of possible activities that can be detected by this sensor API.</target>
        </segment>
      </unit>
      <unit id="179">
        <segment state="initial">
          <source xml:space="preserve">Altimeter</source>
          <target xml:space="preserve">Altimeter</target>
        </segment>
      </unit>
      <unit id="180">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/Dn858893)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Altimeter</pc></pc> sensor returns a value that indicates the altitude of the sensor.</source>
          <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Altimeter</pc></pc> sensor returns a value that indicates the altitude of the sensor.</target>
        </segment>
      </unit>
      <unit id="181">
        <segment state="initial">
          <source xml:space="preserve">This enables you to keep track of a change in altitude in terms of meters from sea level.</source>
          <target xml:space="preserve">This enables you to keep track of a change in altitude in terms of meters from sea level.</target>
        </segment>
      </unit>
      <unit id="182">
        <segment state="initial">
          <source xml:space="preserve">One example of an app that might use this would be a running app that keeps track of the elevation changes during a run to calculate the calories burned.</source>
          <target xml:space="preserve">One example of an app that might use this would be a running app that keeps track of the elevation changes during a run to calculate the calories burned.</target>
        </segment>
      </unit>
      <unit id="183">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/Dn785096)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">In this case, this sensor data could be combined with the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Activity</pc></pc> sensor to provide more accurate tracking information.</source>
          <target xml:space="preserve">In this case, this sensor data could be combined with the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Activity</pc></pc> sensor to provide more accurate tracking information.</target>
        </segment>
      </unit>
      <unit id="184">
        <segment state="initial">
          <source xml:space="preserve">Barometer</source>
          <target xml:space="preserve">Barometer</target>
        </segment>
      </unit>
      <unit id="185">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/Dn872405)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Barometer</pc></pc> sensor enables an application to get barometric readings.</source>
          <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Barometer</pc></pc> sensor enables an application to get barometric readings.</target>
        </segment>
      </unit>
      <unit id="186">
        <segment state="initial">
          <source xml:space="preserve">A weather application could use this information to provide the current atmospheric pressure.</source>
          <target xml:space="preserve">A weather application could use this information to provide the current atmospheric pressure.</target>
        </segment>
      </unit>
      <unit id="187">
        <segment state="initial">
          <source xml:space="preserve">This could be used to provide more detailed information and predict potential weather changes.</source>
          <target xml:space="preserve">This could be used to provide more detailed information and predict potential weather changes.</target>
        </segment>
      </unit>
      <unit id="188">
        <segment state="initial">
          <source xml:space="preserve">Compass</source>
          <target xml:space="preserve">Compass</target>
        </segment>
      </unit>
      <unit id="189">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR225705)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Compass</pc></pc> sensor returns a 2D heading with respect to magnetic north based on the horizontal plane of the earth.</source>
          <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Compass</pc></pc> sensor returns a 2D heading with respect to magnetic north based on the horizontal plane of the earth.</target>
        </segment>
      </unit>
      <unit id="190">
        <segment state="initial">
          <source xml:space="preserve">The compass sensor should not be used in determining specific device orientation or for representing anything in 3D space.</source>
          <target xml:space="preserve">The compass sensor should not be used in determining specific device orientation or for representing anything in 3D space.</target>
        </segment>
      </unit>
      <unit id="191">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR225705reading_headingmagneticnorth)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/BR225705reading_headingtruenorth)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Geographical features can cause natural declination in the heading, so some systems support both <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">HeadingMagneticNorth</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">HeadingTrueNorth</pc></pc>.</source>
          <target xml:space="preserve">Geographical features can cause natural declination in the heading, so some systems support both <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">HeadingMagneticNorth</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">HeadingTrueNorth</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="192">
        <segment state="initial">
          <source xml:space="preserve">Think about which one your app prefers, but remember that not all systems will report a true north value.</source>
          <target xml:space="preserve">Think about which one your app prefers, but remember that not all systems will report a true north value.</target>
        </segment>
      </unit>
      <unit id="193">
        <segment state="initial">
          <source xml:space="preserve">The gyrometer and magnetometer (a device measuring magnetic strength magnitude) sensors combine their data to produce the compass heading, which has the net effect of stabilizing the data (magnetic field strength is very unstable due to electrical system components).</source>
          <target xml:space="preserve">The gyrometer and magnetometer (a device measuring magnetic strength magnitude) sensors combine their data to produce the compass heading, which has the net effect of stabilizing the data (magnetic field strength is very unstable due to electrical system components).</target>
        </segment>
      </unit>
      <unit id="194">
        <segment state="initial">
          <source xml:space="preserve">Compass readings in regards to Magnetic North Pole</source>
          <target xml:space="preserve">Compass readings in regards to Magnetic North Pole</target>
        </segment>
      </unit>
      <unit id="195">
        <segment state="initial">
          <source xml:space="preserve">Apps that want to display a compass rose or navigate a map would typically use the compass sensor.</source>
          <target xml:space="preserve">Apps that want to display a compass rose or navigate a map would typically use the compass sensor.</target>
        </segment>
      </unit>
      <unit id="196">
        <segment state="initial">
          <source xml:space="preserve">Gyrometer</source>
          <target xml:space="preserve">Gyrometer</target>
        </segment>
      </unit>
      <unit id="197">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR225718)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Gyrometer</pc></pc> sensor measures angular velocities along the X, Y, and Z axes.</source>
          <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Gyrometer</pc></pc> sensor measures angular velocities along the X, Y, and Z axes.</target>
        </segment>
      </unit>
      <unit id="198">
        <segment state="initial">
          <source xml:space="preserve">These are very useful in simple motion-based apps that do not concern themselves with device orientation but care about the device rotating at different speeds.</source>
          <target xml:space="preserve">These are very useful in simple motion-based apps that do not concern themselves with device orientation but care about the device rotating at different speeds.</target>
        </segment>
      </unit>
      <unit id="199">
        <segment state="initial">
          <source xml:space="preserve">Gyrometers can suffer from noise in the data or a constant bias along one or more of the axes.</source>
          <target xml:space="preserve">Gyrometers can suffer from noise in the data or a constant bias along one or more of the axes.</target>
        </segment>
      </unit>
      <unit id="200">
        <segment state="initial">
          <source xml:space="preserve">You should query the accelerometer to verify whether the device is moving in order to determine if the gyrometer suffers from a bias, and then compensate accordingly in your app.</source>
          <target xml:space="preserve">You should query the accelerometer to verify whether the device is moving in order to determine if the gyrometer suffers from a bias, and then compensate accordingly in your app.</target>
        </segment>
      </unit>
      <unit id="201">
        <segment state="initial">
          <source xml:space="preserve">Gyrometer with pitch, roll, and yaw</source>
          <target xml:space="preserve">Gyrometer with pitch, roll, and yaw</target>
        </segment>
      </unit>
      <unit id="202">
        <segment state="initial">
          <source xml:space="preserve">An example of an app that could use the gyrometer sensor is a game that spins a roulette wheel based on a quick rotational jerk of the device.</source>
          <target xml:space="preserve">An example of an app that could use the gyrometer sensor is a game that spins a roulette wheel based on a quick rotational jerk of the device.</target>
        </segment>
      </unit>
      <unit id="203">
        <segment state="initial">
          <source xml:space="preserve">Inclinometer</source>
          <target xml:space="preserve">Inclinometer</target>
        </segment>
      </unit>
      <unit id="204">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR225766)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Inclinometer</pc></pc> sensor specifies the yaw, pitch, and roll values of a device and work best with apps that care about how the device is situated in space.</source>
          <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Inclinometer</pc></pc> sensor specifies the yaw, pitch, and roll values of a device and work best with apps that care about how the device is situated in space.</target>
        </segment>
      </unit>
      <unit id="205">
        <segment state="initial">
          <source xml:space="preserve">Pitch and roll are derived by taking the accelerometer’s gravity vector and by integrating the data from the gyrometer.</source>
          <target xml:space="preserve">Pitch and roll are derived by taking the accelerometer’s gravity vector and by integrating the data from the gyrometer.</target>
        </segment>
      </unit>
      <unit id="206">
        <segment state="initial">
          <source xml:space="preserve">Yaw is established from magnetometer and gyrometer (similar to compass heading) data.</source>
          <target xml:space="preserve">Yaw is established from magnetometer and gyrometer (similar to compass heading) data.</target>
        </segment>
      </unit>
      <unit id="207">
        <segment state="initial">
          <source xml:space="preserve">Inclinometers offer advanced orientation data in an easily digestible and understandable way.</source>
          <target xml:space="preserve">Inclinometers offer advanced orientation data in an easily digestible and understandable way.</target>
        </segment>
      </unit>
      <unit id="208">
        <segment state="initial">
          <source xml:space="preserve">Use inclinometers when you need device orientation but do not need to manipulate the sensor data.</source>
          <target xml:space="preserve">Use inclinometers when you need device orientation but do not need to manipulate the sensor data.</target>
        </segment>
      </unit>
      <unit id="209">
        <segment state="initial">
          <source xml:space="preserve">Inclinometer with pitch, roll and yaw data</source>
          <target xml:space="preserve">Inclinometer with pitch, roll and yaw data</target>
        </segment>
      </unit>
      <unit id="210">
        <segment state="initial">
          <source xml:space="preserve">Apps that change their view to match the orientation of the device can use the inclinometer sensor.</source>
          <target xml:space="preserve">Apps that change their view to match the orientation of the device can use the inclinometer sensor.</target>
        </segment>
      </unit>
      <unit id="211">
        <segment state="initial">
          <source xml:space="preserve">Also, an app that displays an airplane that matches the yaw, pitch, and roll of the device would also use the inclinometer readings.</source>
          <target xml:space="preserve">Also, an app that displays an airplane that matches the yaw, pitch, and roll of the device would also use the inclinometer readings.</target>
        </segment>
      </unit>
      <unit id="212">
        <segment state="initial">
          <source xml:space="preserve">Light sensor</source>
          <target xml:space="preserve">Light sensor</target>
        </segment>
      </unit>
      <unit id="213">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR225790)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Light</pc></pc> sensor is capable of determining the ambient light surrounding the sensor.</source>
          <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Light</pc></pc> sensor is capable of determining the ambient light surrounding the sensor.</target>
        </segment>
      </unit>
      <unit id="214">
        <segment state="initial">
          <source xml:space="preserve">This enables an app to determine when the light setting surrounding a device has changed.</source>
          <target xml:space="preserve">This enables an app to determine when the light setting surrounding a device has changed.</target>
        </segment>
      </unit>
      <unit id="215">
        <segment state="initial">
          <source xml:space="preserve">For example, a user with a slate device might walk from indoors to outdoors on a sunny day.</source>
          <target xml:space="preserve">For example, a user with a slate device might walk from indoors to outdoors on a sunny day.</target>
        </segment>
      </unit>
      <unit id="216">
        <segment state="initial">
          <source xml:space="preserve">A smart application could use this value to increase the contrast between the background and the font being rendered.</source>
          <target xml:space="preserve">A smart application could use this value to increase the contrast between the background and the font being rendered.</target>
        </segment>
      </unit>
      <unit id="217">
        <segment state="initial">
          <source xml:space="preserve">That would make the content still readable in the brighter, outdoor setting.</source>
          <target xml:space="preserve">That would make the content still readable in the brighter, outdoor setting.</target>
        </segment>
      </unit>
      <unit id="218">
        <segment state="initial">
          <source xml:space="preserve">Orientation sensor</source>
          <target xml:space="preserve">Orientation sensor</target>
        </segment>
      </unit>
      <unit id="219">
        <segment state="initial">
          <source xml:space="preserve">Device orientation is expressed through both quaternion and a rotation matrix.</source>
          <target xml:space="preserve">Device orientation is expressed through both quaternion and a rotation matrix.</target>
        </segment>
      </unit>
      <unit id="220">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR206371)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">OrientationSensor</pc></pc> offers a high degree of precision in determining how the device is situated in space with respect to absolute heading.</source>
          <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">OrientationSensor</pc></pc> offers a high degree of precision in determining how the device is situated in space with respect to absolute heading.</target>
        </segment>
      </unit>
      <unit id="221">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">OrientationSensor</pc> data is derived from the accelerometer, gyrometer, and magnetometer.</source>
          <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">OrientationSensor</pc> data is derived from the accelerometer, gyrometer, and magnetometer.</target>
        </segment>
      </unit>
      <unit id="222">
        <segment state="initial">
          <source xml:space="preserve">As such, both the inclinometer and compass sensors can be derived from the quaternion values.</source>
          <target xml:space="preserve">As such, both the inclinometer and compass sensors can be derived from the quaternion values.</target>
        </segment>
      </unit>
      <unit id="223">
        <segment state="initial">
          <source xml:space="preserve">Quaternions and rotation matrices lend themselves well to advanced mathematical manipulation and are often used in graphical programming.</source>
          <target xml:space="preserve">Quaternions and rotation matrices lend themselves well to advanced mathematical manipulation and are often used in graphical programming.</target>
        </segment>
      </unit>
      <unit id="224">
        <segment state="initial">
          <source xml:space="preserve">Apps using complex manipulation should favor the orientation sensor as many transforms are based off of quaternions and rotation matrices.</source>
          <target xml:space="preserve">Apps using complex manipulation should favor the orientation sensor as many transforms are based off of quaternions and rotation matrices.</target>
        </segment>
      </unit>
      <unit id="225">
        <segment state="initial">
          <source xml:space="preserve">Orientation sensor data</source>
          <target xml:space="preserve">Orientation sensor data</target>
        </segment>
      </unit>
      <unit id="226">
        <segment state="initial">
          <source xml:space="preserve">The orientation sensor is often used in advanced augmented reality apps that paint an overlay on your surroundings based on the direction the back of the device is pointing.</source>
          <target xml:space="preserve">The orientation sensor is often used in advanced augmented reality apps that paint an overlay on your surroundings based on the direction the back of the device is pointing.</target>
        </segment>
      </unit>
      <unit id="227">
        <segment state="initial">
          <source xml:space="preserve">Pedometer</source>
          <target xml:space="preserve">Pedometer</target>
        </segment>
      </unit>
      <unit id="228">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/Dn878203)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Pedometer</pc></pc> sensor keeps track of the number of steps taken by the user carrying the connected device.</source>
          <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Pedometer</pc></pc> sensor keeps track of the number of steps taken by the user carrying the connected device.</target>
        </segment>
      </unit>
      <unit id="229">
        <segment state="initial">
          <source xml:space="preserve">The sensor is configured to keep track of the number of steps over a given time period.</source>
          <target xml:space="preserve">The sensor is configured to keep track of the number of steps over a given time period.</target>
        </segment>
      </unit>
      <unit id="230">
        <segment state="initial">
          <source xml:space="preserve">Several fitness applications like to keep track of the number of steps taken in order to help the user set and reach various goals.</source>
          <target xml:space="preserve">Several fitness applications like to keep track of the number of steps taken in order to help the user set and reach various goals.</target>
        </segment>
      </unit>
      <unit id="231">
        <segment state="initial">
          <source xml:space="preserve">This information can then be collected and stored to show progress over time.</source>
          <target xml:space="preserve">This information can then be collected and stored to show progress over time.</target>
        </segment>
      </unit>
      <unit id="232">
        <segment state="initial">
          <source xml:space="preserve">Proximity sensor</source>
          <target xml:space="preserve">Proximity sensor</target>
        </segment>
      </unit>
      <unit id="233">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/Dn872427)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Proximity</pc></pc> sensor can be used to indicate whether or not objects are detected by the sensor.</source>
          <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Proximity</pc></pc> sensor can be used to indicate whether or not objects are detected by the sensor.</target>
        </segment>
      </unit>
      <unit id="234">
        <segment state="initial">
          <source xml:space="preserve">In addition to determining whether or not an object is within range of the device, the proximity sensor also can determine the distance to the detected object.</source>
          <target xml:space="preserve">In addition to determining whether or not an object is within range of the device, the proximity sensor also can determine the distance to the detected object.</target>
        </segment>
      </unit>
      <unit id="235">
        <segment state="initial">
          <source xml:space="preserve">One example where this could be used is with an application that wants to emerge from a sleep state when a user comes within a specified range.</source>
          <target xml:space="preserve">One example where this could be used is with an application that wants to emerge from a sleep state when a user comes within a specified range.</target>
        </segment>
      </unit>
      <unit id="236">
        <segment state="initial">
          <source xml:space="preserve">The device could be in a low-powered sleep state until the proximity sensor detects an object, and then could enter a more active state.</source>
          <target xml:space="preserve">The device could be in a low-powered sleep state until the proximity sensor detects an object, and then could enter a more active state.</target>
        </segment>
      </unit>
      <unit id="237">
        <segment state="initial">
          <source xml:space="preserve">Simple orientation</source>
          <target xml:space="preserve">Simple orientation</target>
        </segment>
      </unit>
      <unit id="238">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR206399sensor)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SimpleOrientationSensor</pc></pc> detects the current quadrant orientation of the specified device or it’s face-up or face-down.</source>
          <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SimpleOrientationSensor</pc></pc> detects the current quadrant orientation of the specified device or it’s face-up or face-down.</target>
        </segment>
      </unit>
      <unit id="239">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR206399)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
          <data id="id9">**</data>
          <data id="id10">**</data>
          <data id="id11">**</data>
          <data id="id12">**</data>
          <data id="id13">**</data>
          <data id="id14">**</data>
          <data id="id15">**</data>
          <data id="id16">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">It has six possible <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SimpleOrientation</pc></pc> states (<pc dataRefEnd="id6" dataRefStart="id5" id="p3">NotRotated</pc>, <pc dataRefEnd="id8" dataRefStart="id7" id="p4">Rotated90</pc>, <pc dataRefEnd="id10" dataRefStart="id9" id="p5">Rotated180</pc>, <pc dataRefEnd="id12" dataRefStart="id11" id="p6">Rotated270</pc>, <pc dataRefEnd="id14" dataRefStart="id13" id="p7">FaceUp</pc>, <pc dataRefEnd="id16" dataRefStart="id15" id="p8">FaceDown</pc>).</source>
          <target xml:space="preserve">It has six possible <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SimpleOrientation</pc></pc> states (<pc dataRefEnd="id6" dataRefStart="id5" id="p3">NotRotated</pc>, <pc dataRefEnd="id8" dataRefStart="id7" id="p4">Rotated90</pc>, <pc dataRefEnd="id10" dataRefStart="id9" id="p5">Rotated180</pc>, <pc dataRefEnd="id12" dataRefStart="id11" id="p6">Rotated270</pc>, <pc dataRefEnd="id14" dataRefStart="id13" id="p7">FaceUp</pc>, <pc dataRefEnd="id16" dataRefStart="id15" id="p8">FaceDown</pc>).</target>
        </segment>
      </unit>
      <unit id="240">
        <segment state="initial">
          <source xml:space="preserve">A reader app that changes its display based on the device being held parallel or perpendicular to the ground would use the values from the SimpleOrientationSensor to determine how the device is being held.</source>
          <target xml:space="preserve">A reader app that changes its display based on the device being held parallel or perpendicular to the ground would use the values from the SimpleOrientationSensor to determine how the device is being held.</target>
        </segment>
      </unit>
      <unit id="241">
        <segment state="initial">
          <source xml:space="preserve">Samples</source>
          <target xml:space="preserve">Samples</target>
        </segment>
      </unit>
      <unit id="242">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/?LinkID=616041)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For some samples that demonstrate using a couple of different sensors, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows Sensor Samples</pc>.</source>
          <target xml:space="preserve">For some samples that demonstrate using a couple of different sensors, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows Sensor Samples</pc>.</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>