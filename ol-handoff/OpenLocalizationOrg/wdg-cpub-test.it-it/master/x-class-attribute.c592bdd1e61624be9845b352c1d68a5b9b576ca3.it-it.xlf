<?xml version="1.0" encoding="utf-8"?>
<xliff srcLang="en-US" trgLang="it-it" version="2.0" xmlns="urn:oasis:names:tc:xliff:document:2.0" xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">daca0d528ae54849d010e3799fa6ee299fe7d3f2</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source xml:space="preserve">description: Configures XAML compilation to join partial classes between markup and code-behind.</source>
          <target xml:space="preserve">description: Configures XAML compilation to join partial classes between markup and code-behind.</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source xml:space="preserve">The code partial class is defined in a separate code file, and the markup partial class is created by code generation during XAML compilation.</source>
          <target xml:space="preserve">The code partial class is defined in a separate code file, and the markup partial class is created by code generation during XAML compilation.</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source xml:space="preserve">title: x:Class attribute'</source>
          <target xml:space="preserve">title: x:Class attribute'</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source xml:space="preserve">ms.assetid: 40A7C036-133A-44DF-9D11-0D39232C948F</source>
          <target xml:space="preserve">ms.assetid: 40A7C036-133A-44DF-9D11-0D39232C948F</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source xml:space="preserve">x:Class attribute</source>
          <target xml:space="preserve">x:Class attribute</target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source xml:space="preserve">\[ Updated for UWP apps on Windows 10.</source>
          <target xml:space="preserve">\[ Updated for UWP apps on Windows 10.</target>
        </segment>
      </unit>
      <unit id="107">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
          <target xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source xml:space="preserve">Configures XAML compilation to join partial classes between markup and code-behind.</source>
          <target xml:space="preserve">Configures XAML compilation to join partial classes between markup and code-behind.</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source xml:space="preserve">The code partial class is defined in a separate code file, and the markup partial class is created by code generation during XAML compilation.</source>
          <target xml:space="preserve">The code partial class is defined in a separate code file, and the markup partial class is created by code generation during XAML compilation.</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source xml:space="preserve">XAML attribute usage</source>
          <target xml:space="preserve">XAML attribute usage</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source xml:space="preserve">XAML values</source>
          <target xml:space="preserve">XAML values</target>
        </segment>
      </unit>
      <unit id="112">
        <segment state="initial">
          <source xml:space="preserve">Term</source>
          <target xml:space="preserve">Term</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source xml:space="preserve">Description</source>
          <target xml:space="preserve">Description</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source xml:space="preserve">namespace</source>
          <target xml:space="preserve">namespace</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source xml:space="preserve">Optional.</source>
          <target xml:space="preserve">Optional.</target>
        </segment>
      </unit>
      <unit id="116">
        <originalData>
          <data id="id1">_</data>
          <data id="id2">_</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Specifies a namespace that contains the partial class identified by <pc dataRefEnd="id2" dataRefStart="id1" id="p1">classname</pc>.</source>
          <target xml:space="preserve">Specifies a namespace that contains the partial class identified by <pc dataRefEnd="id2" dataRefStart="id1" id="p1">classname</pc>.</target>
        </segment>
      </unit>
      <unit id="117">
        <originalData>
          <data id="id1">_</data>
          <data id="id2">_</data>
          <data id="id3">_</data>
          <data id="id4">_</data>
          <data id="id5">_</data>
          <data id="id6">_</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">If <pc dataRefEnd="id2" dataRefStart="id1" id="p1">namespace</pc> is specified, a dot (.) separates <pc dataRefEnd="id4" dataRefStart="id3" id="p2">namespace</pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3">classname</pc>.</source>
          <target xml:space="preserve">If <pc dataRefEnd="id2" dataRefStart="id1" id="p1">namespace</pc> is specified, a dot (.) separates <pc dataRefEnd="id4" dataRefStart="id3" id="p2">namespace</pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3">classname</pc>.</target>
        </segment>
      </unit>
      <unit id="118">
        <originalData>
          <data id="id1">_</data>
          <data id="id2">_</data>
          <data id="id3">_</data>
          <data id="id4">_</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">If <pc dataRefEnd="id2" dataRefStart="id1" id="p1">namespace</pc> is omitted, <pc dataRefEnd="id4" dataRefStart="id3" id="p2">classname</pc> is assumed to have no namespace.</source>
          <target xml:space="preserve">If <pc dataRefEnd="id2" dataRefStart="id1" id="p1">namespace</pc> is omitted, <pc dataRefEnd="id4" dataRefStart="id3" id="p2">classname</pc> is assumed to have no namespace.</target>
        </segment>
      </unit>
      <unit id="119">
        <segment state="initial">
          <source xml:space="preserve">classname</source>
          <target xml:space="preserve">classname</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source xml:space="preserve">Required.</source>
          <target xml:space="preserve">Required.</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source xml:space="preserve">Specifies the name of the partial class that connects the loaded XAML and your code-behind for that XAML.</source>
          <target xml:space="preserve">Specifies the name of the partial class that connects the loaded XAML and your code-behind for that XAML.</target>
        </segment>
      </unit>
      <unit id="122">
        <segment state="initial">
          <source xml:space="preserve">Remarks</source>
          <target xml:space="preserve">Remarks</target>
        </segment>
      </unit>
      <unit id="123">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/br242324)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">x:Class</pc> can be declared as an attribute for any element that is the root of a XAML file/object tree and is being compiled by build actions, or for the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">Application</pc></pc> root in the application definition of a compiled application.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">x:Class</pc> can be declared as an attribute for any element that is the root of a XAML file/object tree and is being compiled by build actions, or for the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">Application</pc></pc> root in the application definition of a compiled application.</target>
        </segment>
      </unit>
      <unit id="124">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Declaring <pc dataRefEnd="id2" dataRefStart="id1" id="p1">x:Class</pc> on any element other than a page root or application root, and under any circumstances for a XAML file that is not compiled with the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Page</pc> build action, results in a compile-time error.</source>
          <target xml:space="preserve">Declaring <pc dataRefEnd="id2" dataRefStart="id1" id="p1">x:Class</pc> on any element other than a page root or application root, and under any circumstances for a XAML file that is not compiled with the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Page</pc> build action, results in a compile-time error.</target>
        </segment>
      </unit>
      <unit id="125">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The class used as <pc dataRefEnd="id2" dataRefStart="id1" id="p1">x:Class</pc> cannot be a nested class.</source>
          <target xml:space="preserve">The class used as <pc dataRefEnd="id2" dataRefStart="id1" id="p1">x:Class</pc> cannot be a nested class.</target>
        </segment>
      </unit>
      <unit id="126">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The value of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">x:Class</pc> attribute must be a string that specifies the fully qualified name of a class.</source>
          <target xml:space="preserve">The value of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">x:Class</pc> attribute must be a string that specifies the fully qualified name of a class.</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source xml:space="preserve">You can omit namespace information so long as that is how the code-behind is structured also (your class definition starts at the class level).</source>
          <target xml:space="preserve">You can omit namespace information so long as that is how the code-behind is structured also (your class definition starts at the class level).</target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source xml:space="preserve">The code-behind file for a page or application definition must be within a code file that is included as part of the project.</source>
          <target xml:space="preserve">The code-behind file for a page or application definition must be within a code file that is included as part of the project.</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source xml:space="preserve">The code-behind class must be public.</source>
          <target xml:space="preserve">The code-behind class must be public.</target>
        </segment>
      </unit>
      <unit id="130">
        <segment state="initial">
          <source xml:space="preserve">The code-behind class must be partial.</source>
          <target xml:space="preserve">The code-behind class must be partial.</target>
        </segment>
      </unit>
      <unit id="131">
        <segment state="initial">
          <source xml:space="preserve">CLR language rules</source>
          <target xml:space="preserve">CLR language rules</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source xml:space="preserve">Although your code-behind file can be a C++ file, there are certain conventions that still follow the CLR language form, so that there is no difference in the XAML syntax.</source>
          <target xml:space="preserve">Although your code-behind file can be a C++ file, there are certain conventions that still follow the CLR language form, so that there is no difference in the XAML syntax.</target>
        </segment>
      </unit>
      <unit id="133">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">In particular, the separator between the namespace and classname components of any <pc dataRefEnd="id2" dataRefStart="id1" id="p1">x:Class</pc> value is always a dot ("."), even though the separator between namespace and classname in the C++ code file associated with the XAML is "::".</source>
          <target xml:space="preserve">In particular, the separator between the namespace and classname components of any <pc dataRefEnd="id2" dataRefStart="id1" id="p1">x:Class</pc> value is always a dot ("."), even though the separator between namespace and classname in the C++ code file associated with the XAML is "::".</target>
        </segment>
      </unit>
      <unit id="134">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">If you declare nested namespaces in C++, then the separator between the successive nested namespace strings should also be "." rather than "::" when you specify the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">namespace</pc> part of the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">x:Class</pc> value.</source>
          <target xml:space="preserve">If you declare nested namespaces in C++, then the separator between the successive nested namespace strings should also be "." rather than "::" when you specify the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">namespace</pc> part of the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">x:Class</pc> value.</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>