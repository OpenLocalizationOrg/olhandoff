<?xml version="1.0" encoding="utf-8"?>
<xliff srcLang="en-US" trgLang="it-it" version="2.0" xmlns="urn:oasis:names:tc:xliff:document:2.0" xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">b6e33c1df9d6ddb9f45ea6882bdf20f059d6789e</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source xml:space="preserve">description: Windows apps share a common look-and-feel across PCs, mobile devices, and many other kinds of devices.</source>
          <target xml:space="preserve">description: Windows apps share a common look-and-feel across PCs, mobile devices, and many other kinds of devices.</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source xml:space="preserve">The user interface, input, and interaction patterns are very similar, and a user moving between devices will welcome the familiar experience.</source>
          <target xml:space="preserve">The user interface, input, and interaction patterns are very similar, and a user moving between devices will welcome the familiar experience.</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source xml:space="preserve">title: Porting Windows Phone Silverlight to UWP for form factor and UX</source>
          <target xml:space="preserve">title: Porting Windows Phone Silverlight to UWP for form factor and UX</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source xml:space="preserve">ms.assetid: 96244516-dd2c-494d-ab5a-14b7dcd2edbd</source>
          <target xml:space="preserve">ms.assetid: 96244516-dd2c-494d-ab5a-14b7dcd2edbd</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source xml:space="preserve">Porting Windows Phone Silverlight to UWP for form factor and UX</source>
          <target xml:space="preserve">Porting Windows Phone Silverlight to UWP for form factor and UX</target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source xml:space="preserve">\[ Updated for UWP apps on Windows 10.</source>
          <target xml:space="preserve">\[ Updated for UWP apps on Windows 10.</target>
        </segment>
      </unit>
      <unit id="107">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
          <target xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
        </segment>
      </unit>
      <unit id="108">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](wpsl-to-uwp-business-and-data.md)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The previous topic was <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Porting business and data layers</pc>.</source>
          <target xml:space="preserve">The previous topic was <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Porting business and data layers</pc>.</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source xml:space="preserve">Windows apps share a common look-and-feel across PCs, mobile devices, and many other kinds of devices.</source>
          <target xml:space="preserve">Windows apps share a common look-and-feel across PCs, mobile devices, and many other kinds of devices.</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source xml:space="preserve">The user interface, input, and interaction patterns are very similar, and a user moving between devices will welcome the familiar experience.</source>
          <target xml:space="preserve">The user interface, input, and interaction patterns are very similar, and a user moving between devices will welcome the familiar experience.</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source xml:space="preserve">Differences between devices such as physical size, default orientation, and effective pixel resolution factor into the way a Universal Windows Platform (UWP) app is rendered by Windows 10.</source>
          <target xml:space="preserve">Differences between devices such as physical size, default orientation, and effective pixel resolution factor into the way a Universal Windows Platform (UWP) app is rendered by Windows 10.</target>
        </segment>
      </unit>
      <unit id="112">
        <segment state="initial">
          <source xml:space="preserve">The good news is that much of the heavy lifting is handled for you by the system using smart concepts such as effective pixels.</source>
          <target xml:space="preserve">The good news is that much of the heavy lifting is handled for you by the system using smart concepts such as effective pixels.</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source xml:space="preserve">Different form factors and user experience</source>
          <target xml:space="preserve">Different form factors and user experience</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source xml:space="preserve">Different devices have multiple possible portrait and landscape resolutions, in a variety of aspect ratios.</source>
          <target xml:space="preserve">Different devices have multiple possible portrait and landscape resolutions, in a variety of aspect ratios.</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source xml:space="preserve">How will the visual aspects of its interface, text, and assets of your UWP app scale?</source>
          <target xml:space="preserve">How will the visual aspects of its interface, text, and assets of your UWP app scale?</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source xml:space="preserve">How can you support touch as well as mouse and keyboard input?</source>
          <target xml:space="preserve">How can you support touch as well as mouse and keyboard input?</target>
        </segment>
      </unit>
      <unit id="117">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">And with an app that supports touch on different-sized devices with different viewing distances, how can a control both be a right-sized touch target at different pixel densities <pc dataRefEnd="id2" dataRefStart="id1" id="p1">and</pc> have its content readable at different distances?</source>
          <target xml:space="preserve">And with an app that supports touch on different-sized devices with different viewing distances, how can a control both be a right-sized touch target at different pixel densities <pc dataRefEnd="id2" dataRefStart="id1" id="p1">and</pc> have its content readable at different distances?</target>
        </segment>
      </unit>
      <unit id="118">
        <segment state="initial">
          <source xml:space="preserve">The following sections address the things you need to know.</source>
          <target xml:space="preserve">The following sections address the things you need to know.</target>
        </segment>
      </unit>
      <unit id="119">
        <segment state="initial">
          <source xml:space="preserve">What is the size of a screen, really?</source>
          <target xml:space="preserve">What is the size of a screen, really?</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source xml:space="preserve">The short answer is that it's subjective, because it depends not only on the objective size of the display but also on how far away from it you are.</source>
          <target xml:space="preserve">The short answer is that it's subjective, because it depends not only on the objective size of the display but also on how far away from it you are.</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source xml:space="preserve">The subjectivity means that we have to put ourselves in the shoes of the user, and that's something that developers of good apps do in any case.</source>
          <target xml:space="preserve">The subjectivity means that we have to put ourselves in the shoes of the user, and that's something that developers of good apps do in any case.</target>
        </segment>
      </unit>
      <unit id="122">
        <segment state="initial">
          <source xml:space="preserve">Objectively, a screen is measured in units of inches, and physical (raw) pixels.</source>
          <target xml:space="preserve">Objectively, a screen is measured in units of inches, and physical (raw) pixels.</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source xml:space="preserve">Knowing both of those metrics lets you know how many pixels fit into an inch.</source>
          <target xml:space="preserve">Knowing both of those metrics lets you know how many pixels fit into an inch.</target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source xml:space="preserve">That's the pixel density, also known as DPI (dots per inch), also known as PPI (pixels per inch).</source>
          <target xml:space="preserve">That's the pixel density, also known as DPI (dots per inch), also known as PPI (pixels per inch).</target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source xml:space="preserve">And the reciprocal of the DPI is the physical size of the pixels as a fraction of an inch.</source>
          <target xml:space="preserve">And the reciprocal of the DPI is the physical size of the pixels as a fraction of an inch.</target>
        </segment>
      </unit>
      <unit id="126">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Pixel density is also known as <pc dataRefEnd="id2" dataRefStart="id1" id="p1">resolution</pc>, although that term is often used loosely to mean pixel count.</source>
          <target xml:space="preserve">Pixel density is also known as <pc dataRefEnd="id2" dataRefStart="id1" id="p1">resolution</pc>, although that term is often used loosely to mean pixel count.</target>
        </segment>
      </unit>
      <unit id="127">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
          <data id="id3">*</data>
          <data id="id4">*</data>
          <data id="id5">*</data>
          <data id="id6">*</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">As viewing distance increases, all those objective metrics <pc dataRefEnd="id2" dataRefStart="id1" id="p1">seem</pc> smaller, and they resolve into the screen's <pc dataRefEnd="id4" dataRefStart="id3" id="p2">effective size</pc>, and its <pc dataRefEnd="id6" dataRefStart="id5" id="p3">effective resolution</pc>.</source>
          <target xml:space="preserve">As viewing distance increases, all those objective metrics <pc dataRefEnd="id2" dataRefStart="id1" id="p1">seem</pc> smaller, and they resolve into the screen's <pc dataRefEnd="id4" dataRefStart="id3" id="p2">effective size</pc>, and its <pc dataRefEnd="id6" dataRefStart="id5" id="p3">effective resolution</pc>.</target>
        </segment>
      </unit>
      <unit id="128">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://www.microsoft.com/microsoft-surface-hub)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Your phone is usually held closest to your eye; your tablet then your PC monitor are next, and furthest away are <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Surface Hub</pc> devices and TVs.</source>
          <target xml:space="preserve">Your phone is usually held closest to your eye; your tablet then your PC monitor are next, and furthest away are <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Surface Hub</pc> devices and TVs.</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source xml:space="preserve">To compensate, devices tend to get objectively larger with viewing distance.</source>
          <target xml:space="preserve">To compensate, devices tend to get objectively larger with viewing distance.</target>
        </segment>
      </unit>
      <unit id="130">
        <segment state="initial">
          <source xml:space="preserve">When you set sizes on your UI elements, you are setting those sizes in units called effective pixels (epx).</source>
          <target xml:space="preserve">When you set sizes on your UI elements, you are setting those sizes in units called effective pixels (epx).</target>
        </segment>
      </unit>
      <unit id="131">
        <segment state="initial">
          <source xml:space="preserve">And Windows 10 will take into account DPI, and the typical viewing distance from a device, to calculate the best size of your UI elements in physical pixels to give the best viewing experience.</source>
          <target xml:space="preserve">And Windows 10 will take into account DPI, and the typical viewing distance from a device, to calculate the best size of your UI elements in physical pixels to give the best viewing experience.</target>
        </segment>
      </unit>
      <unit id="132">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](wpsl-to-uwp-porting-xaml-and-ui.md#effective-pixels)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">View/effective pixels, viewing distance, and scale factors</pc>.</source>
          <target xml:space="preserve">See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">View/effective pixels, viewing distance, and scale factors</pc>.</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source xml:space="preserve">Even so, we recommend that you test your app with many different devices so that you can confirm each experience for yourself.</source>
          <target xml:space="preserve">Even so, we recommend that you test your app with many different devices so that you can confirm each experience for yourself.</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source xml:space="preserve">Touch resolution and viewing resolution</source>
          <target xml:space="preserve">Touch resolution and viewing resolution</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source xml:space="preserve">Affordances (UI widgets) need to be the right size to touch.</source>
          <target xml:space="preserve">Affordances (UI widgets) need to be the right size to touch.</target>
        </segment>
      </unit>
      <unit id="136">
        <segment state="initial">
          <source xml:space="preserve">So, a touch target needs to more-or-less retain its physical size across different devices that might have different pixel densities.</source>
          <target xml:space="preserve">So, a touch target needs to more-or-less retain its physical size across different devices that might have different pixel densities.</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source xml:space="preserve">Effective pixels help you out here, too: they're scaled on different devices—taking pixel density into account—in order to achieve a more-or-less constant physical size that's ideal for touch targets.</source>
          <target xml:space="preserve">Effective pixels help you out here, too: they're scaled on different devices—taking pixel density into account—in order to achieve a more-or-less constant physical size that's ideal for touch targets.</target>
        </segment>
      </unit>
      <unit id="138">
        <segment state="initial">
          <source xml:space="preserve">Text needs to be the right size to read (12 point text at a 20 inch viewing distance is a good rule of thumb), and an image needs to be the right size and effective resolution, for the viewing distance.</source>
          <target xml:space="preserve">Text needs to be the right size to read (12 point text at a 20 inch viewing distance is a good rule of thumb), and an image needs to be the right size and effective resolution, for the viewing distance.</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source xml:space="preserve">On different devices, that same effective pixel scaling keeps UI elements right-sized and readable.</source>
          <target xml:space="preserve">On different devices, that same effective pixel scaling keeps UI elements right-sized and readable.</target>
        </segment>
      </unit>
      <unit id="140">
        <segment state="initial">
          <source xml:space="preserve">Text and other vector-based graphics scale automatically, and very well.</source>
          <target xml:space="preserve">Text and other vector-based graphics scale automatically, and very well.</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source xml:space="preserve">Raster (bitmap)-based graphics are also scaled automatically if the developer provides an asset in a single, large size.</source>
          <target xml:space="preserve">Raster (bitmap)-based graphics are also scaled automatically if the developer provides an asset in a single, large size.</target>
        </segment>
      </unit>
      <unit id="142">
        <segment state="initial">
          <source xml:space="preserve">But, it's preferable for the developer to provide each asset in a range of sizes so that the appropriate one for a target device's scaling factor can be automatically loaded.</source>
          <target xml:space="preserve">But, it's preferable for the developer to provide each asset in a range of sizes so that the appropriate one for a target device's scaling factor can be automatically loaded.</target>
        </segment>
      </unit>
      <unit id="143">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](wpsl-to-uwp-porting-xaml-and-ui.md#effective-pixels)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For more info on that, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">View/effective pixels, viewing distance, and scale factors</pc>.</source>
          <target xml:space="preserve">For more info on that, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">View/effective pixels, viewing distance, and scale factors</pc>.</target>
        </segment>
      </unit>
      <unit id="144">
        <segment state="initial">
          <source xml:space="preserve">Layout, and adaptive Visual State Manager</source>
          <target xml:space="preserve">Layout, and adaptive Visual State Manager</target>
        </segment>
      </unit>
      <unit id="145">
        <segment state="initial">
          <source xml:space="preserve">We've described the factors involved in a meaningful understanding of screen size.</source>
          <target xml:space="preserve">We've described the factors involved in a meaningful understanding of screen size.</target>
        </segment>
      </unit>
      <unit id="146">
        <segment state="initial">
          <source xml:space="preserve">Now, let's think about the layout of your app, and how to make use of extra screen real-estate when it's available.</source>
          <target xml:space="preserve">Now, let's think about the layout of your app, and how to make use of extra screen real-estate when it's available.</target>
        </segment>
      </unit>
      <unit id="147">
        <segment state="initial">
          <source xml:space="preserve">Consider this page from a very simple app that was designed to run on a narrow mobile device.</source>
          <target xml:space="preserve">Consider this page from a very simple app that was designed to run on a narrow mobile device.</target>
        </segment>
      </unit>
      <unit id="148">
        <segment state="initial">
          <source xml:space="preserve">What should this page look like on a larger screen?</source>
          <target xml:space="preserve">What should this page look like on a larger screen?</target>
        </segment>
      </unit>
      <unit id="149">
        <segment state="initial">
          <source xml:space="preserve">the ported windows phone store app</source>
          <target xml:space="preserve">the ported windows phone store app</target>
        </segment>
      </unit>
      <unit id="150">
        <segment state="initial">
          <source xml:space="preserve">The mobile version is constrained to portrait-only orientation because that's the best aspect ratio for the book list; and we'd do the same for a page of text, which is best kept to a single column on mobile devices.</source>
          <target xml:space="preserve">The mobile version is constrained to portrait-only orientation because that's the best aspect ratio for the book list; and we'd do the same for a page of text, which is best kept to a single column on mobile devices.</target>
        </segment>
      </unit>
      <unit id="151">
        <segment state="initial">
          <source xml:space="preserve">But, PC and tablet screens are large in either orientation, so that mobile device constraint seems like an unnecessary limitation on larger devices.</source>
          <target xml:space="preserve">But, PC and tablet screens are large in either orientation, so that mobile device constraint seems like an unnecessary limitation on larger devices.</target>
        </segment>
      </unit>
      <unit id="152">
        <segment state="initial">
          <source xml:space="preserve">Optically zooming the app to look like the mobile version, just bigger, doesn't take advantage of the device and its additional space, and that doesn't serve the user well.</source>
          <target xml:space="preserve">Optically zooming the app to look like the mobile version, just bigger, doesn't take advantage of the device and its additional space, and that doesn't serve the user well.</target>
        </segment>
      </unit>
      <unit id="153">
        <segment state="initial">
          <source xml:space="preserve">We should be thinking of showing more content, rather than the same content bigger.</source>
          <target xml:space="preserve">We should be thinking of showing more content, rather than the same content bigger.</target>
        </segment>
      </unit>
      <unit id="154">
        <segment state="initial">
          <source xml:space="preserve">Even on a phablet, we could show some more rows of content.</source>
          <target xml:space="preserve">Even on a phablet, we could show some more rows of content.</target>
        </segment>
      </unit>
      <unit id="155">
        <segment state="initial">
          <source xml:space="preserve">We could use extra space to display different content, such as ads, or we could change the list box into a list view and have it wrap items into multiple columns, when it can, to use the space that way.</source>
          <target xml:space="preserve">We could use extra space to display different content, such as ads, or we could change the list box into a list view and have it wrap items into multiple columns, when it can, to use the space that way.</target>
        </segment>
      </unit>
      <unit id="156">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/mt186889)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Guidelines for list and grid view controls</pc>.</source>
          <target xml:space="preserve">See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Guidelines for list and grid view controls</pc>.</target>
        </segment>
      </unit>
      <unit id="157">
        <segment state="initial">
          <source xml:space="preserve">In addition to new controls such as list view and grid view, most of the established layout types from Windows Phone Silverlight have equivalents in the Universal Windows Platform (UWP).</source>
          <target xml:space="preserve">In addition to new controls such as list view and grid view, most of the established layout types from Windows Phone Silverlight have equivalents in the Universal Windows Platform (UWP).</target>
        </segment>
      </unit>
      <unit id="158">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br209267)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/br242704)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
          <data id="id9">[</data>
          <data id="id10">](https://msdn.microsoft.com/library/windows/apps/br209635)</data>
          <data id="id11">**</data>
          <data id="id12">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For example, <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Canvas</pc></pc>, <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Grid</pc></pc>, and <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">StackPanel</pc></pc>.</source>
          <target xml:space="preserve">For example, <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Canvas</pc></pc>, <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Grid</pc></pc>, and <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">StackPanel</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="159">
        <segment state="initial">
          <source xml:space="preserve">Porting much of the UI that uses these types should be straightforward, but always look for ways to leverage the dynamic layout capabilities of these layout panels to automatically resize and re-lay out on devices of different sizes.</source>
          <target xml:space="preserve">Porting much of the UI that uses these types should be straightforward, but always look for ways to leverage the dynamic layout capabilities of these layout panels to automatically resize and re-lay out on devices of different sizes.</target>
        </segment>
      </unit>
      <unit id="160">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](wpsl-to-uwp-porting-xaml-and-ui.md#adaptive-ui)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Going beyond the dynamic layout built into the system controls and layout panels, we can use a new Windows 10 feature called <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Adaptive Visual State Manager</pc>.</source>
          <target xml:space="preserve">Going beyond the dynamic layout built into the system controls and layout panels, we can use a new Windows 10 feature called <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Adaptive Visual State Manager</pc>.</target>
        </segment>
      </unit>
      <unit id="161">
        <segment state="initial">
          <source xml:space="preserve">Input modalities</source>
          <target xml:space="preserve">Input modalities</target>
        </segment>
      </unit>
      <unit id="162">
        <segment state="initial">
          <source xml:space="preserve">A Windows Phone Silverlight interface is touch-specific.</source>
          <target xml:space="preserve">A Windows Phone Silverlight interface is touch-specific.</target>
        </segment>
      </unit>
      <unit id="163">
        <segment state="initial">
          <source xml:space="preserve">And your ported app's interface should of course also support touch, but you can choose to support other input modalities in addition, such as mouse and keyboard.</source>
          <target xml:space="preserve">And your ported app's interface should of course also support touch, but you can choose to support other input modalities in addition, such as mouse and keyboard.</target>
        </segment>
      </unit>
      <unit id="164">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">In the UWP, mouse, pen, and touch input are unified as <pc dataRefEnd="id2" dataRefStart="id1" id="p1">pointer input</pc>.</source>
          <target xml:space="preserve">In the UWP, mouse, pen, and touch input are unified as <pc dataRefEnd="id2" dataRefStart="id1" id="p1">pointer input</pc>.</target>
        </segment>
      </unit>
      <unit id="165">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/mt404610)</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/mt185607)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Handle pointer input</pc>, and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Keyboard interactions</pc>.</source>
          <target xml:space="preserve">For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Handle pointer input</pc>, and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Keyboard interactions</pc>.</target>
        </segment>
      </unit>
      <unit id="166">
        <segment state="initial">
          <source xml:space="preserve">Maximizing markup and code re-use</source>
          <target xml:space="preserve">Maximizing markup and code re-use</target>
        </segment>
      </unit>
      <unit id="167">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](wpsl-to-uwp-porting-to-a-uwp-project.md#markup-and-code-reuse)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Refer back to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">maximizing markup and code reuse</pc> list for techniques on sharing your UI to target devices with a wide range of form factors.</source>
          <target xml:space="preserve">Refer back to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">maximizing markup and code reuse</pc> list for techniques on sharing your UI to target devices with a wide range of form factors.</target>
        </segment>
      </unit>
      <unit id="168">
        <segment state="initial">
          <source xml:space="preserve">More info and design guidelines</source>
          <target xml:space="preserve">More info and design guidelines</target>
        </segment>
      </unit>
      <unit id="169">
        <segment state="initial">
          <source xml:space="preserve">Design UWP apps</source>
          <target xml:space="preserve">Design UWP apps</target>
        </segment>
      </unit>
      <unit id="170">
        <segment state="initial">
          <source xml:space="preserve">Guidelines for fonts</source>
          <target xml:space="preserve">Guidelines for fonts</target>
        </segment>
      </unit>
      <unit id="171">
        <segment state="initial">
          <source xml:space="preserve">Plan for different form factors</source>
          <target xml:space="preserve">Plan for different form factors</target>
        </segment>
      </unit>
      <unit id="172">
        <segment state="initial">
          <source xml:space="preserve">Related topics</source>
          <target xml:space="preserve">Related topics</target>
        </segment>
      </unit>
      <unit id="173">
        <segment state="initial">
          <source xml:space="preserve">Namespace and class mappings</source>
          <target xml:space="preserve">Namespace and class mappings</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>