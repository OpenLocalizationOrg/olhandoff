<?xml version="1.0" encoding="utf-8"?>
<xliff srcLang="en-US" trgLang="it-it" version="2.0" xmlns="urn:oasis:names:tc:xliff:document:2.0" xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">21c0151b9900d8505cd78ecdee4daa69c897caaa</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source xml:space="preserve">ms.assetid: 79C284CA-C53A-4C24-807E-6D4CE1A29BFA</source>
          <target xml:space="preserve">ms.assetid: 79C284CA-C53A-4C24-807E-6D4CE1A29BFA</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source xml:space="preserve">description: This section describes how to modify your PlayReady Web app to support the changes made from the previous Windows 8.1 version to the Windows 10 version.</source>
          <target xml:space="preserve">description: This section describes how to modify your PlayReady Web app to support the changes made from the previous Windows 8.1 version to the Windows 10 version.</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source xml:space="preserve">title: PlayReady Encrypted Media Extension</source>
          <target xml:space="preserve">title: PlayReady Encrypted Media Extension</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source xml:space="preserve">PlayReady Encrypted Media Extension</source>
          <target xml:space="preserve">PlayReady Encrypted Media Extension</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source xml:space="preserve">\[ Updated for UWP apps on Windows 10.</source>
          <target xml:space="preserve">\[ Updated for UWP apps on Windows 10.</target>
        </segment>
      </unit>
      <unit id="106">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
          <target xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source xml:space="preserve">This section describes how to modify your PlayReady Web app to support the changes made from the previous Windows 8.1 version to the Windows 10 version.</source>
          <target xml:space="preserve">This section describes how to modify your PlayReady Web app to support the changes made from the previous Windows 8.1 version to the Windows 10 version.</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source xml:space="preserve">Using PlayReady media elements in Internet Explorer enables developers to create Web apps capable of providing PlayReady content to the user while enforcing the access rules defined by the content provider.</source>
          <target xml:space="preserve">Using PlayReady media elements in Internet Explorer enables developers to create Web apps capable of providing PlayReady content to the user while enforcing the access rules defined by the content provider.</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source xml:space="preserve">This section describes how to add PlayReady media elements to your existing Web apps using only HTML5 and JavaScript.</source>
          <target xml:space="preserve">This section describes how to add PlayReady media elements to your existing Web apps using only HTML5 and JavaScript.</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source xml:space="preserve">What's New in PlayReady Encrypted Media Extension</source>
          <target xml:space="preserve">What's New in PlayReady Encrypted Media Extension</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source xml:space="preserve">This section provides a list of changes made to the PlayReady Encrypted Media Extension to enable PlayReady content protection on Windows 10.</source>
          <target xml:space="preserve">This section provides a list of changes made to the PlayReady Encrypted Media Extension to enable PlayReady content protection on Windows 10.</target>
        </segment>
      </unit>
      <unit id="112">
        <segment state="initial">
          <source xml:space="preserve">The following list describes the new features and changes made to PlayReady Encrypted Media Extension for Windows 10:</source>
          <target xml:space="preserve">The following list describes the new features and changes made to PlayReady Encrypted Media Extension for Windows 10:</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source xml:space="preserve">Added hardware digital rights management (DRM).</source>
          <target xml:space="preserve">Added hardware digital rights management (DRM).</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source xml:space="preserve">Hardware-based content protection support enables secure playback of high definition (HD) and ultra-high definition (UHD) content on multiple device platforms.</source>
          <target xml:space="preserve">Hardware-based content protection support enables secure playback of high definition (HD) and ultra-high definition (UHD) content on multiple device platforms.</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source xml:space="preserve">Key material (including private keys, content keys, and any other key material used to derive or unlock said keys), and decrypted compressed and uncompressed video samples are protected by leveraging hardware security.</source>
          <target xml:space="preserve">Key material (including private keys, content keys, and any other key material used to derive or unlock said keys), and decrypted compressed and uncompressed video samples are protected by leveraging hardware security.</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source xml:space="preserve">Provides proactive acquisition of non-persistent licenses.</source>
          <target xml:space="preserve">Provides proactive acquisition of non-persistent licenses.</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source xml:space="preserve">Provides acquisition of multiple licenses in one message.</source>
          <target xml:space="preserve">Provides acquisition of multiple licenses in one message.</target>
        </segment>
      </unit>
      <unit id="118">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://go.microsoft.com/fwlink/p/?LinkID=626819)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">You can either use a PlayReady object with multiple key identifiers (KeyIDs) as in Windows 8.1, or use <pc dataRefEnd="id2" dataRefStart="id1" id="p1">content decryption model data (CDMData)</pc> with multiple KeyIDs.</source>
          <target xml:space="preserve">You can either use a PlayReady object with multiple key identifiers (KeyIDs) as in Windows 8.1, or use <pc dataRefEnd="id2" dataRefStart="id1" id="p1">content decryption model data (CDMData)</pc> with multiple KeyIDs.</target>
        </segment>
      </unit>
      <unit id="119">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  In Windows 10, multiple key identifiers are supported under &amp;lt;KeyID&amp;gt; in CDMData.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  In Windows 10, multiple key identifiers are supported under &amp;lt;KeyID&amp;gt; in CDMData.</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source xml:space="preserve">Added real time expiration support, or limited duration license (LDL).</source>
          <target xml:space="preserve">Added real time expiration support, or limited duration license (LDL).</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source xml:space="preserve">Provides the ability to set real-time expiration on licenses.</source>
          <target xml:space="preserve">Provides the ability to set real-time expiration on licenses.</target>
        </segment>
      </unit>
      <unit id="122">
        <segment state="initial">
          <source xml:space="preserve">Added HDCP Type 1 (version 2.2) policy support.</source>
          <target xml:space="preserve">Added HDCP Type 1 (version 2.2) policy support.</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source xml:space="preserve">Miracast is now implicit as an output.</source>
          <target xml:space="preserve">Miracast is now implicit as an output.</target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source xml:space="preserve">Added secure stop.</source>
          <target xml:space="preserve">Added secure stop.</target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source xml:space="preserve">Secure stop provides the means for a PlayReady device to confidently assert to a media streaming service that media playback has stopped for any given piece of content.</source>
          <target xml:space="preserve">Secure stop provides the means for a PlayReady device to confidently assert to a media streaming service that media playback has stopped for any given piece of content.</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source xml:space="preserve">Added audio and video license separation.</source>
          <target xml:space="preserve">Added audio and video license separation.</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source xml:space="preserve">Separate tracks prevent video from being decoded as audio; enabling more robust content protection.</source>
          <target xml:space="preserve">Separate tracks prevent video from being decoded as audio; enabling more robust content protection.</target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source xml:space="preserve">Emerging standards are requiring separate keys for audio and visual tracks.</source>
          <target xml:space="preserve">Emerging standards are requiring separate keys for audio and visual tracks.</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source xml:space="preserve">Added MaxResDecode.</source>
          <target xml:space="preserve">Added MaxResDecode.</target>
        </segment>
      </unit>
      <unit id="130">
        <segment state="initial">
          <source xml:space="preserve">This feature was added to limit playback of content to a maximum resolution even when in possession of a more capable key (but not a license).</source>
          <target xml:space="preserve">This feature was added to limit playback of content to a maximum resolution even when in possession of a more capable key (but not a license).</target>
        </segment>
      </unit>
      <unit id="131">
        <segment state="initial">
          <source xml:space="preserve">It supports cases where multiple stream sizes are encoded with a single key.</source>
          <target xml:space="preserve">It supports cases where multiple stream sizes are encoded with a single key.</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source xml:space="preserve">Encrypted Media Extension Support in PlayReady</source>
          <target xml:space="preserve">Encrypted Media Extension Support in PlayReady</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source xml:space="preserve">This section describes the version of the W3C Encrypted Media Extension supported by PlayReady.</source>
          <target xml:space="preserve">This section describes the version of the W3C Encrypted Media Extension supported by PlayReady.</target>
        </segment>
      </unit>
      <unit id="134">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://www.w3.org/TR/2013/WD-encrypted-media-20130510/)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">PlayReady for Web Apps is currently bound to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">W3C Encrypted Media Extension (EME) draft of May 10, 2013</pc>.</source>
          <target xml:space="preserve">PlayReady for Web Apps is currently bound to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">W3C Encrypted Media Extension (EME) draft of May 10, 2013</pc>.</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source xml:space="preserve">This support will be changed to the updated EME specification in future versions of Windows.</source>
          <target xml:space="preserve">This support will be changed to the updated EME specification in future versions of Windows.</target>
        </segment>
      </unit>
      <unit id="136">
        <segment state="initial">
          <source xml:space="preserve">Use Hardware DRM</source>
          <target xml:space="preserve">Use Hardware DRM</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source xml:space="preserve">This section describes how your web app can use PlayReady hardware DRM, and how to disable hardware DRM if the protected content does not support it.</source>
          <target xml:space="preserve">This section describes how your web app can use PlayReady hardware DRM, and how to disable hardware DRM if the protected content does not support it.</target>
        </segment>
      </unit>
      <unit id="138">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">`com.microsoft.playready.hardware`</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To use PlayReady hardware DRM, your JavaScript web app should use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">isTypeSupported</pc> EME method with a key system identifier of <ph dataRef="id3" id="ph1" /> to query for PlayReady hardware DRM support from the browser.</source>
          <target xml:space="preserve">To use PlayReady hardware DRM, your JavaScript web app should use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">isTypeSupported</pc> EME method with a key system identifier of <ph dataRef="id3" id="ph1" /> to query for PlayReady hardware DRM support from the browser.</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source xml:space="preserve">Occasionally, some content is not supported in hardware DRM.</source>
          <target xml:space="preserve">Occasionally, some content is not supported in hardware DRM.</target>
        </segment>
      </unit>
      <unit id="140">
        <segment state="initial">
          <source xml:space="preserve">Cocktail content is never supported in hardware DRM; if you want to play cocktail content, you must opt out of hardware DRM.</source>
          <target xml:space="preserve">Cocktail content is never supported in hardware DRM; if you want to play cocktail content, you must opt out of hardware DRM.</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source xml:space="preserve">Some hardware DRM will support HEVC and some will not; if you want to play HEVC content and hardware DRM doesn’t support it, you will want to opt out as well.</source>
          <target xml:space="preserve">Some hardware DRM will support HEVC and some will not; if you want to play HEVC content and hardware DRM doesn’t support it, you will want to opt out as well.</target>
        </segment>
      </unit>
      <unit id="142">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">`com.microsoft.playready`</data>
          <data id="id4">[</data>
          <data id="id5">](https://msdn.microsoft.com/library/windows/apps/dn986441)</data>
          <data id="id6">**</data>
          <data id="id7">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  To determine whether HEVC content is supported, after instantiating <ph dataRef="id3" id="ph1" />, use the <pc dataRefEnd="id5" dataRefStart="id4" id="p2"><pc dataRefEnd="id7" dataRefStart="id6" id="p3">PlayReadyStatics.CheckSupportedHardware</pc></pc> method.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  To determine whether HEVC content is supported, after instantiating <ph dataRef="id3" id="ph1" />, use the <pc dataRefEnd="id5" dataRefStart="id4" id="p2"><pc dataRefEnd="id7" dataRefStart="id6" id="p3">PlayReadyStatics.CheckSupportedHardware</pc></pc> method.</target>
        </segment>
      </unit>
      <unit id="143">
        <segment state="initial">
          <source xml:space="preserve">Add Secure Stop to your Web App</source>
          <target xml:space="preserve">Add Secure Stop to your Web App</target>
        </segment>
      </unit>
      <unit id="144">
        <segment state="initial">
          <source xml:space="preserve">This section describes how to add secure stop to your web app.</source>
          <target xml:space="preserve">This section describes how to add secure stop to your web app.</target>
        </segment>
      </unit>
      <unit id="145">
        <segment state="initial">
          <source xml:space="preserve">Secure stop provides the means for a PlayReady device to confidently assert to a media streaming service that media playback has stopped for any given piece of content.</source>
          <target xml:space="preserve">Secure stop provides the means for a PlayReady device to confidently assert to a media streaming service that media playback has stopped for any given piece of content.</target>
        </segment>
      </unit>
      <unit id="146">
        <segment state="initial">
          <source xml:space="preserve">This capability ensures your media streaming services provide accurate enforcement and reporting of usage limitations on different devices for a given account.</source>
          <target xml:space="preserve">This capability ensures your media streaming services provide accurate enforcement and reporting of usage limitations on different devices for a given account.</target>
        </segment>
      </unit>
      <unit id="147">
        <segment state="initial">
          <source xml:space="preserve">There are two primary scenarios for sending a secure stop challenge:</source>
          <target xml:space="preserve">There are two primary scenarios for sending a secure stop challenge:</target>
        </segment>
      </unit>
      <unit id="148">
        <segment state="initial">
          <source xml:space="preserve">When the media presentation stops because end of content was reached or when the user stopped the media presentation somewhere in the middle.</source>
          <target xml:space="preserve">When the media presentation stops because end of content was reached or when the user stopped the media presentation somewhere in the middle.</target>
        </segment>
      </unit>
      <unit id="149">
        <segment state="initial">
          <source xml:space="preserve">When the previous session ends unexpectedly (for example, due to a system or app crash).</source>
          <target xml:space="preserve">When the previous session ends unexpectedly (for example, due to a system or app crash).</target>
        </segment>
      </unit>
      <unit id="150">
        <segment state="initial">
          <source xml:space="preserve">The app will need to query, either at startup or shutdown, for any outstanding secure stop sessions and send challenge(s) separate from any other media playback.</source>
          <target xml:space="preserve">The app will need to query, either at startup or shutdown, for any outstanding secure stop sessions and send challenge(s) separate from any other media playback.</target>
        </segment>
      </unit>
      <unit id="151">
        <segment state="initial">
          <source xml:space="preserve">The following procedures describe how to set up secure stop for various scenarios.</source>
          <target xml:space="preserve">The following procedures describe how to set up secure stop for various scenarios.</target>
        </segment>
      </unit>
      <unit id="152">
        <segment state="initial">
          <source xml:space="preserve">To set up secure stop for a normal end of a presentation:</source>
          <target xml:space="preserve">To set up secure stop for a normal end of a presentation:</target>
        </segment>
      </unit>
      <unit id="153">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Register the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">onEnded</pc> event before playback starts.</source>
          <target xml:space="preserve">Register the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">onEnded</pc> event before playback starts.</target>
        </segment>
      </unit>
      <unit id="154">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">`removeAttribute(“src”)`</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">onEnded</pc> event handler needs to call <ph dataRef="id3" id="ph1" /> from the video/audio element object to set the source to <pc dataRefEnd="id5" dataRefStart="id4" id="p2">NULL</pc> which will trigger the media foundation to tear down the topology, destroy the decryptor(s), and set the stop state.</source>
          <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">onEnded</pc> event handler needs to call <ph dataRef="id3" id="ph1" /> from the video/audio element object to set the source to <pc dataRefEnd="id5" dataRefStart="id4" id="p2">NULL</pc> which will trigger the media foundation to tear down the topology, destroy the decryptor(s), and set the stop state.</target>
        </segment>
      </unit>
      <unit id="155">
        <segment state="initial">
          <source xml:space="preserve">You can start the secure stop CDM session inside the handler to send the secure stop challenge to the server to notify the playback has stopped at this time, but it can be done later as well.</source>
          <target xml:space="preserve">You can start the secure stop CDM session inside the handler to send the secure stop challenge to the server to notify the playback has stopped at this time, but it can be done later as well.</target>
        </segment>
      </unit>
      <unit id="156">
        <segment state="initial">
          <source xml:space="preserve">To set up secure stop if the user navigates away from the page or closes down the tab or browser:</source>
          <target xml:space="preserve">To set up secure stop if the user navigates away from the page or closes down the tab or browser:</target>
        </segment>
      </unit>
      <unit id="157">
        <segment state="initial">
          <source xml:space="preserve">No app action is required to record the stop state; it will be recorded for you.</source>
          <target xml:space="preserve">No app action is required to record the stop state; it will be recorded for you.</target>
        </segment>
      </unit>
      <unit id="158">
        <segment state="initial">
          <source xml:space="preserve">To set up secure stop for custom page controls or user actions (such as custom navigation buttons or starting a new presentation before the current presentation completed):</source>
          <target xml:space="preserve">To set up secure stop for custom page controls or user actions (such as custom navigation buttons or starting a new presentation before the current presentation completed):</target>
        </segment>
      </unit>
      <unit id="159">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">When custom user action occurs, the app needs to set the source to <pc dataRefEnd="id2" dataRefStart="id1" id="p1">NULL</pc> which will trigger the media foundation to tear down the topology, destroy the decryptor(s), and set the stop state.</source>
          <target xml:space="preserve">When custom user action occurs, the app needs to set the source to <pc dataRefEnd="id2" dataRefStart="id1" id="p1">NULL</pc> which will trigger the media foundation to tear down the topology, destroy the decryptor(s), and set the stop state.</target>
        </segment>
      </unit>
      <unit id="160">
        <segment state="initial">
          <source xml:space="preserve">The following example demonstrates how to use secure stop in your web app:</source>
          <target xml:space="preserve">The following example demonstrates how to use secure stop in your web app:</target>
        </segment>
      </unit>
      <unit id="161">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">`&lt;SessionID&gt;B64 encoded session ID&lt;/SessionID&gt;`</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  The secure stop data’s <ph dataRef="id3" id="ph1" /> in the sample above can be an asterisk (\*), which is a wild card for all the secure stop sessions recorded.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  The secure stop data’s <ph dataRef="id3" id="ph1" /> in the sample above can be an asterisk (\*), which is a wild card for all the secure stop sessions recorded.</target>
        </segment>
      </unit>
      <unit id="162">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">That is, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">SessionID</pc> tag can be a specific session, or a wild card (\*) to select all the secure stop sessions.</source>
          <target xml:space="preserve">That is, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">SessionID</pc> tag can be a specific session, or a wild card (\*) to select all the secure stop sessions.</target>
        </segment>
      </unit>
      <unit id="163">
        <segment state="initial">
          <source xml:space="preserve">Programming Considerations for Encrypted Media Extension</source>
          <target xml:space="preserve">Programming Considerations for Encrypted Media Extension</target>
        </segment>
      </unit>
      <unit id="164">
        <segment state="initial">
          <source xml:space="preserve">This section lists the programming considerations that you should take into account when creating your PlayReady-enabled web app for Windows 10.</source>
          <target xml:space="preserve">This section lists the programming considerations that you should take into account when creating your PlayReady-enabled web app for Windows 10.</target>
        </segment>
      </unit>
      <unit id="165">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MSMediaKeys</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">MSMediaKeySession</pc> objects created by your app must be kept alive until your app closes.</source>
          <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MSMediaKeys</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">MSMediaKeySession</pc> objects created by your app must be kept alive until your app closes.</target>
        </segment>
      </unit>
      <unit id="166">
        <segment state="initial">
          <source xml:space="preserve">One way of ensuring these objects stay alive is to assign them as global variables (the variables would become out of scope and subject to garbage collection if declared as a local variable inside of a function).</source>
          <target xml:space="preserve">One way of ensuring these objects stay alive is to assign them as global variables (the variables would become out of scope and subject to garbage collection if declared as a local variable inside of a function).</target>
        </segment>
      </unit>
      <unit id="167">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
          <data id="id3">*</data>
          <data id="id4">*</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For example, the following sample assigns the variables <pc dataRefEnd="id2" dataRefStart="id1" id="p1">g\_msMediaKeys</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">g\_mediaKeySession</pc> as global variables, which are then assigned to the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">MSMediaKeys</pc> and <pc dataRefEnd="id8" dataRefStart="id7" id="p4">MSMediaKeySession</pc> objects in the function.</source>
          <target xml:space="preserve">For example, the following sample assigns the variables <pc dataRefEnd="id2" dataRefStart="id1" id="p1">g\_msMediaKeys</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">g\_mediaKeySession</pc> as global variables, which are then assigned to the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">MSMediaKeys</pc> and <pc dataRefEnd="id8" dataRefStart="id7" id="p4">MSMediaKeySession</pc> objects in the function.</target>
        </segment>
      </unit>
      <unit id="168">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://code.msdn.microsoft.com/windowsapps/PlayReady-samples-for-124a3738)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Refer to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">sample applications</pc> for more information.</source>
          <target xml:space="preserve">Refer to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">sample applications</pc> for more information.</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>