<?xml version="1.0" encoding="utf-8"?>
<xliff srcLang="en-US" trgLang="it-it" version="2.0" xmlns="urn:oasis:names:tc:xliff:document:2.0" xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">d5f1f92bb1616ffc5aa315e4805b02a8fefb8178</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source xml:space="preserve">ms.assetid: a2751e22-6842-073a-daec-425fb981bafe</source>
          <target xml:space="preserve">ms.assetid: a2751e22-6842-073a-daec-425fb981bafe</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source xml:space="preserve">title: Visual Layer</source>
          <target xml:space="preserve">title: Visual Layer</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source xml:space="preserve">description: The Windows.UI.Composition API gives you access to the composition layer between the framework layer (XAML), and the graphics layer (DirectX).</source>
          <target xml:space="preserve">description: The Windows.UI.Composition API gives you access to the composition layer between the framework layer (XAML), and the graphics layer (DirectX).</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source xml:space="preserve">Visual Layer</source>
          <target xml:space="preserve">Visual Layer</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source xml:space="preserve">\[ Updated for UWP apps on Windows 10.</source>
          <target xml:space="preserve">\[ Updated for UWP apps on Windows 10.</target>
        </segment>
      </unit>
      <unit id="106">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
          <target xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source xml:space="preserve">In Windows 10, significant work was done to create a new unified compositor and rendering engine for all Windows applications, be it desktop or mobile.</source>
          <target xml:space="preserve">In Windows 10, significant work was done to create a new unified compositor and rendering engine for all Windows applications, be it desktop or mobile.</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source xml:space="preserve">A result of that work was the unified Composition WinRT API called Windows.UI.Composition that offers access to new lightweight Composition objects along with new Compositor driven Animations and Effects.</source>
          <target xml:space="preserve">A result of that work was the unified Composition WinRT API called Windows.UI.Composition that offers access to new lightweight Composition objects along with new Compositor driven Animations and Effects.</target>
        </segment>
      </unit>
      <unit id="109">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/desktop/ff684178.aspx)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Windows.UI.Composition is a declarative, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Retained-Mode</pc> API that can be called from any Universal Windows Platform (UWP) Application to create composition objects, animations and effects directly in an application.</source>
          <target xml:space="preserve">Windows.UI.Composition is a declarative, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Retained-Mode</pc> API that can be called from any Universal Windows Platform (UWP) Application to create composition objects, animations and effects directly in an application.</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source xml:space="preserve">The API is a powerful supplement to existing frameworks such as XAML to give developers of UWP applications a familiar C# surface to add to their application.</source>
          <target xml:space="preserve">The API is a powerful supplement to existing frameworks such as XAML to give developers of UWP applications a familiar C# surface to add to their application.</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source xml:space="preserve">These APIs can be used to create DX style framework-less applications.</source>
          <target xml:space="preserve">These APIs can be used to create DX style framework-less applications.</target>
        </segment>
      </unit>
      <unit id="112">
        <segment state="initial">
          <source xml:space="preserve">A XAML developer can “drop down” to the composition layer in C# to do custom work in the composition layer using WinRT to create a “Composition Island” of objects in their XAML application rather than dropping all the way down to the graphics layer and using DirectX and C++ for any custom UI work.</source>
          <target xml:space="preserve">A XAML developer can “drop down” to the composition layer in C# to do custom work in the composition layer using WinRT to create a “Composition Island” of objects in their XAML application rather than dropping all the way down to the graphics layer and using DirectX and C++ for any custom UI work.</target>
        </segment>
      </unit>
      <unit id="113">
        <originalData>
          <data id="id1">&lt;span id="Composition_Objects_and_The_Compositor"&gt;</data>
          <data id="id2">&lt;/span&gt;</data>
          <data id="id3">&lt;span id="composition_objects_and_the_compositor"&gt;</data>
          <data id="id4">&lt;/span&gt;</data>
          <data id="id5">&lt;span id="COMPOSITION_OBJECTS_AND_THE_COMPOSITOR"&gt;</data>
          <data id="id6">&lt;/span&gt;</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<ph dataRef="id1" id="ph1" />
						<ph dataRef="id2" id="ph2" />
						<ph dataRef="id3" id="ph3" />
						<ph dataRef="id4" id="ph4" />
						<ph dataRef="id5" id="ph5" />
						<ph dataRef="id6" id="ph6" />Composition Objects and The Compositor</source>
          <target xml:space="preserve">
						<ph dataRef="id1" id="ph1" />
						<ph dataRef="id2" id="ph2" />
						<ph dataRef="id3" id="ph3" />
						<ph dataRef="id4" id="ph4" />
						<ph dataRef="id5" id="ph5" />
						<ph dataRef="id6" id="ph6" />Composition Objects and The Compositor</target>
        </segment>
      </unit>
      <unit id="114">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/Dn706789)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Composition objects are created by the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Compositor</pc></pc> which acts as a factory for composition objects.</source>
          <target xml:space="preserve">Composition objects are created by the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Compositor</pc></pc> which acts as a factory for composition objects.</target>
        </segment>
      </unit>
      <unit id="115">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/Dn706858)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The compositor can create <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Visual</pc></pc> objects, which allow for the creation of a visual tree structure on which all other features and Composition objects in the API use and build on.</source>
          <target xml:space="preserve">The compositor can create <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Visual</pc></pc> objects, which allow for the creation of a visual tree structure on which all other features and Composition objects in the API use and build on.</target>
        </segment>
      </unit>
      <unit id="116">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/Dn706858)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The API allows developers to define and create one or many <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Visual</pc></pc> objects each representing a single node in a Visual tree.</source>
          <target xml:space="preserve">The API allows developers to define and create one or many <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Visual</pc></pc> objects each representing a single node in a Visual tree.</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source xml:space="preserve">Visuals can be containers for other Visuals or can host content Visuals.</source>
          <target xml:space="preserve">Visuals can be containers for other Visuals or can host content Visuals.</target>
        </segment>
      </unit>
      <unit id="118">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/Dn706858)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The API allows for ease of use by providing a clear set of <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Visual</pc></pc> objects for specific tasks that exist in a hierarchy:</source>
          <target xml:space="preserve">The API allows for ease of use by providing a clear set of <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Visual</pc></pc> objects for specific tasks that exist in a hierarchy:</target>
        </segment>
      </unit>
      <unit id="119">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/Dn706858)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">
							<pc dataRefEnd="id4" dataRefStart="id3" id="p2">Visual</pc>
						</pc> – The base object.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">
							<pc dataRefEnd="id4" dataRefStart="id3" id="p2">Visual</pc>
						</pc> – The base object.</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source xml:space="preserve">The majority of the properties are here, and inherited by the other Visual objects.</source>
          <target xml:space="preserve">The majority of the properties are here, and inherited by the other Visual objects.</target>
        </segment>
      </unit>
      <unit id="121">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/Dn706810)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/Dn706858)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">
							<pc dataRefEnd="id4" dataRefStart="id3" id="p2">ContainerVisual</pc>
						</pc> – Derives from <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Visual</pc></pc>, and adds the ability to insert child visuals.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">
							<pc dataRefEnd="id4" dataRefStart="id3" id="p2">ContainerVisual</pc>
						</pc> – Derives from <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Visual</pc></pc>, and adds the ability to insert child visuals.</target>
        </segment>
      </unit>
      <unit id="122">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/Mt589433)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/Dn706810)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">
							<pc dataRefEnd="id4" dataRefStart="id3" id="p2">SpriteVisual</pc>
						</pc> – Derives from <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">ContainerVisual</pc></pc>, and contains content in the form of images, effects, and swapchains.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">
							<pc dataRefEnd="id4" dataRefStart="id3" id="p2">SpriteVisual</pc>
						</pc> – Derives from <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">ContainerVisual</pc></pc>, and contains content in the form of images, effects, and swapchains.</target>
        </segment>
      </unit>
      <unit id="123">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/Dn706789)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">
							<pc dataRefEnd="id4" dataRefStart="id3" id="p2">Compositor</pc>
						</pc> – The object factory that manages the relationship between an application and the system compositor process.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">
							<pc dataRefEnd="id4" dataRefStart="id3" id="p2">Compositor</pc>
						</pc> – The object factory that manages the relationship between an application and the system compositor process.</target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source xml:space="preserve">The compositor is also a factory for a number of other composition objects used to clip or transform visuals in the tree as well as a rich set of animations and effects.</source>
          <target xml:space="preserve">The compositor is also a factory for a number of other composition objects used to clip or transform visuals in the tree as well as a rich set of animations and effects.</target>
        </segment>
      </unit>
      <unit id="125">
        <originalData>
          <data id="id1">&lt;span id="Effects_System"&gt;</data>
          <data id="id2">&lt;/span&gt;</data>
          <data id="id3">&lt;span id="effects_system"&gt;</data>
          <data id="id4">&lt;/span&gt;</data>
          <data id="id5">&lt;span id="EFFECTS_SYSTEM"&gt;</data>
          <data id="id6">&lt;/span&gt;</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<ph dataRef="id1" id="ph1" />
						<ph dataRef="id2" id="ph2" />
						<ph dataRef="id3" id="ph3" />
						<ph dataRef="id4" id="ph4" />
						<ph dataRef="id5" id="ph5" />
						<ph dataRef="id6" id="ph6" />Effects System</source>
          <target xml:space="preserve">
						<ph dataRef="id1" id="ph1" />
						<ph dataRef="id2" id="ph2" />
						<ph dataRef="id3" id="ph3" />
						<ph dataRef="id4" id="ph4" />
						<ph dataRef="id5" id="ph5" />
						<ph dataRef="id6" id="ph6" />Effects System</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source xml:space="preserve">Windows.UI.Composition supports real time effects that can be animated, customized and chained.</source>
          <target xml:space="preserve">Windows.UI.Composition supports real time effects that can be animated, customized and chained.</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source xml:space="preserve">Effects include 2D affine transforms, arithmetic composites, blends, color source, composite, contrast, exposure, grayscale, gamma transfer, hue rotate, invert, saturate, sepia, temperature and tint.</source>
          <target xml:space="preserve">Effects include 2D affine transforms, arithmetic composites, blends, color source, composite, contrast, exposure, grayscale, gamma transfer, hue rotate, invert, saturate, sepia, temperature and tint.</target>
        </segment>
      </unit>
      <unit id="128">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](composition-effects.md)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For more information, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Composition Effects</pc> overview.</source>
          <target xml:space="preserve">For more information, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Composition Effects</pc> overview.</target>
        </segment>
      </unit>
      <unit id="129">
        <originalData>
          <data id="id1">&lt;span id="Animation_System"&gt;</data>
          <data id="id2">&lt;/span&gt;</data>
          <data id="id3">&lt;span id="animation_system"&gt;</data>
          <data id="id4">&lt;/span&gt;</data>
          <data id="id5">&lt;span id="ANIMATION_SYSTEM"&gt;</data>
          <data id="id6">&lt;/span&gt;</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<ph dataRef="id1" id="ph1" />
						<ph dataRef="id2" id="ph2" />
						<ph dataRef="id3" id="ph3" />
						<ph dataRef="id4" id="ph4" />
						<ph dataRef="id5" id="ph5" />
						<ph dataRef="id6" id="ph6" />Animation System</source>
          <target xml:space="preserve">
						<ph dataRef="id1" id="ph1" />
						<ph dataRef="id2" id="ph2" />
						<ph dataRef="id3" id="ph3" />
						<ph dataRef="id4" id="ph4" />
						<ph dataRef="id5" id="ph5" />
						<ph dataRef="id6" id="ph6" />Animation System</target>
        </segment>
      </unit>
      <unit id="130">
        <segment state="initial">
          <source xml:space="preserve">Windows.UI.Composition contains an expressive, framework agnostic animation system that allows you to set up two types of Animations: key frame animations and expression animations.</source>
          <target xml:space="preserve">Windows.UI.Composition contains an expressive, framework agnostic animation system that allows you to set up two types of Animations: key frame animations and expression animations.</target>
        </segment>
      </unit>
      <unit id="131">
        <segment state="initial">
          <source xml:space="preserve">These are used to move visual objects, drive a transform or a clip, or animate an effect.</source>
          <target xml:space="preserve">These are used to move visual objects, drive a transform or a clip, or animate an effect.</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source xml:space="preserve">By running directly in the compositor process, this ensures smoothness and scale, letting you run large numbers of concurrent, unique animations.</source>
          <target xml:space="preserve">By running directly in the compositor process, this ensures smoothness and scale, letting you run large numbers of concurrent, unique animations.</target>
        </segment>
      </unit>
      <unit id="133">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](composition-animation.md)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For more information, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Composition animations</pc> overview.</source>
          <target xml:space="preserve">For more information, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Composition animations</pc> overview.</target>
        </segment>
      </unit>
      <unit id="134">
        <originalData>
          <data id="id1">&lt;span id="XAML_Interoperation"&gt;</data>
          <data id="id2">&lt;/span&gt;</data>
          <data id="id3">&lt;span id="xaml_interoperation"&gt;</data>
          <data id="id4">&lt;/span&gt;</data>
          <data id="id5">&lt;span id="XAML_INTEROPERATION"&gt;</data>
          <data id="id6">&lt;/span&gt;</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<ph dataRef="id1" id="ph1" />
						<ph dataRef="id2" id="ph2" />
						<ph dataRef="id3" id="ph3" />
						<ph dataRef="id4" id="ph4" />
						<ph dataRef="id5" id="ph5" />
						<ph dataRef="id6" id="ph6" />XAML Interoperation</source>
          <target xml:space="preserve">
						<ph dataRef="id1" id="ph1" />
						<ph dataRef="id2" id="ph2" />
						<ph dataRef="id3" id="ph3" />
						<ph dataRef="id4" id="ph4" />
						<ph dataRef="id5" id="ph5" />
						<ph dataRef="id6" id="ph6" />XAML Interoperation</target>
        </segment>
      </unit>
      <unit id="135">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/Mt608976)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/Hh701908)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">In addition to creating a visual tree from scratch, the Composition API can interoperate with an existing XAML UI using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ElementCompositionPreview</pc></pc> class in <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Windows.UI.Xaml.Hosting</pc></pc>.</source>
          <target xml:space="preserve">In addition to creating a visual tree from scratch, the Composition API can interoperate with an existing XAML UI using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ElementCompositionPreview</pc></pc> class in <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Windows.UI.Xaml.Hosting</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="136">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>
					</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>
					</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source xml:space="preserve">This article is for Windows 10 developers writing Universal Windows Platform (UWP) apps.</source>
          <target xml:space="preserve">This article is for Windows 10 developers writing Universal Windows Platform (UWP) apps.</target>
        </segment>
      </unit>
      <unit id="138">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">If you’re developing for Windows 8.x or Windows Phone 8.x, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archived documentation</pc>.</source>
          <target xml:space="preserve">If you’re developing for Windows 8.x or Windows Phone 8.x, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archived documentation</pc>.</target>
        </segment>
      </unit>
      <unit id="139">
        <originalData>
          <data id="id1">&lt;span id="Additional_Resources_"&gt;</data>
          <data id="id2">&lt;/span&gt;</data>
          <data id="id3">&lt;span id="additional_resources_"&gt;</data>
          <data id="id4">&lt;/span&gt;</data>
          <data id="id5">&lt;span id="ADDITIONAL_RESOURCES_"&gt;</data>
          <data id="id6">&lt;/span&gt;</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<ph dataRef="id1" id="ph1" />
						<ph dataRef="id2" id="ph2" />
						<ph dataRef="id3" id="ph3" />
						<ph dataRef="id4" id="ph4" />
						<ph dataRef="id5" id="ph5" />
						<ph dataRef="id6" id="ph6" />Additional Resources:</source>
          <target xml:space="preserve">
						<ph dataRef="id1" id="ph1" />
						<ph dataRef="id2" id="ph2" />
						<ph dataRef="id3" id="ph3" />
						<ph dataRef="id4" id="ph4" />
						<ph dataRef="id5" id="ph5" />
						<ph dataRef="id6" id="ph6" />Additional Resources:</target>
        </segment>
      </unit>
      <unit id="140">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/magazine/mt590968)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Read Kenny Kerr's MSDN Article on this API: <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Graphics and Animation - Windows Composition Turns 10</pc></source>
          <target xml:space="preserve">Read Kenny Kerr's MSDN Article on this API: <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Graphics and Animation - Windows Composition Turns 10</pc></target>
        </segment>
      </unit>
      <unit id="141">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://github.com/Microsoft/composition)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Composition samples in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Composition GitHub</pc>.</source>
          <target xml:space="preserve">Composition samples in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Composition GitHub</pc>.</target>
        </segment>
      </unit>
      <unit id="142">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/Dn706878)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">
							<pc dataRefEnd="id4" dataRefStart="id3" id="p2">Full reference documentation for the API</pc>
						</pc>.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">
							<pc dataRefEnd="id4" dataRefStart="id3" id="p2">Full reference documentation for the API</pc>
						</pc>.</target>
        </segment>
      </unit>
      <unit id="143">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://social.msdn.microsoft.com/Forums/en-US/home?forum=Win10SDKToolsIssues)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Known issues: <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Known Issues</pc>.</source>
          <target xml:space="preserve">Known issues: <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Known Issues</pc>.</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>