<?xml version="1.0" encoding="utf-8"?>
<xliff srcLang="en-US" trgLang="it-it" version="2.0" xmlns="urn:oasis:names:tc:xliff:document:2.0" xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">50bf5c1bb012ba7e81d44cbc93d78e2ea2e45520</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source xml:space="preserve">ms.assetid: 40B97E0C-EB1B-40C2-A022-1AB95DFB085E</source>
          <target xml:space="preserve">ms.assetid: 40B97E0C-EB1B-40C2-A022-1AB95DFB085E</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source xml:space="preserve">description: This article shows you how to cast media to remote devices from a Universal Windows app.</source>
          <target xml:space="preserve">description: This article shows you how to cast media to remote devices from a Universal Windows app.</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source xml:space="preserve">title: Media casting</source>
          <target xml:space="preserve">title: Media casting</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source xml:space="preserve">Media casting</source>
          <target xml:space="preserve">Media casting</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source xml:space="preserve">\[ Updated for UWP apps on Windows 10.</source>
          <target xml:space="preserve">\[ Updated for UWP apps on Windows 10.</target>
        </segment>
      </unit>
      <unit id="106">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
          <target xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source xml:space="preserve">This article shows you how to cast media to remote devices from a Universal Windows app.</source>
          <target xml:space="preserve">This article shows you how to cast media to remote devices from a Universal Windows app.</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source xml:space="preserve">Built-in media casting with MediaElement</source>
          <target xml:space="preserve">Built-in media casting with MediaElement</target>
        </segment>
      </unit>
      <unit id="109">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br242926)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The simplest way to cast media from a Universal Windows app is to use the built-in casting capability of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaElement</pc></pc> control.</source>
          <target xml:space="preserve">The simplest way to cast media from a Universal Windows app is to use the built-in casting capability of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaElement</pc></pc> control.</target>
        </segment>
      </unit>
      <unit id="110">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To allow the user to open a video file to be played in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaElement</pc> control, add the following namespaces to your project.</source>
          <target xml:space="preserve">To allow the user to open a video file to be played in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaElement</pc> control, add the following namespaces to your project.</target>
        </segment>
      </unit>
      <unit id="111">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/MediaCastingWin10/cs/MainPage.xaml.cs#SnippetBuiltInCastingUsing)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">BuiltInCastingUsing</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">BuiltInCastingUsing</pc>]</target>
        </segment>
      </unit>
      <unit id="112">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/dn298977)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">In your app's XAML file, add a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaElement</pc> and set <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">AreTransportControlsEnabled</pc></pc> to true.</source>
          <target xml:space="preserve">In your app's XAML file, add a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaElement</pc> and set <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">AreTransportControlsEnabled</pc></pc> to true.</target>
        </segment>
      </unit>
      <unit id="113">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/MediaCastingWin10/cs/MainPage.xaml#SnippetMediaElement)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-xml<pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaElement</pc>]</source>
          <target xml:space="preserve">[!code-xml<pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaElement</pc>]</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source xml:space="preserve">Add a button to let the user initiate picking a file.</source>
          <target xml:space="preserve">Add a button to let the user initiate picking a file.</target>
        </segment>
      </unit>
      <unit id="115">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/MediaCastingWin10/cs/MainPage.xaml#SnippetOpenButton)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-xml<pc dataRefEnd="id2" dataRefStart="id1" id="p1">OpenButton</pc>]</source>
          <target xml:space="preserve">[!code-xml<pc dataRefEnd="id2" dataRefStart="id1" id="p1">OpenButton</pc>]</target>
        </segment>
      </unit>
      <unit id="116">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227737)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/br207847)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
          <data id="id9">[</data>
          <data id="id10">](https://msdn.microsoft.com/library/windows/apps/br207850)</data>
          <data id="id11">**</data>
          <data id="id12">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Click</pc></pc> event handler for the button, create a new instance of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">FileOpenPicker</pc></pc>, add video file types to the <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">FileTypeFilter</pc></pc> collection, and set the starting location to the user's videos library.</source>
          <target xml:space="preserve">In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Click</pc></pc> event handler for the button, create a new instance of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">FileOpenPicker</pc></pc>, add video file types to the <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">FileTypeFilter</pc></pc> collection, and set the starting location to the user's videos library.</target>
        </segment>
      </unit>
      <unit id="117">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/jj635275)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PickSingleFileAsync</pc></pc> to launch the file picker dialog.</source>
          <target xml:space="preserve">Call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PickSingleFileAsync</pc></pc> to launch the file picker dialog.</target>
        </segment>
      </unit>
      <unit id="118">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227171)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">When this method returns, the result is a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StorageFile</pc></pc> object representing the video file.</source>
          <target xml:space="preserve">When this method returns, the result is a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StorageFile</pc></pc> object representing the video file.</target>
        </segment>
      </unit>
      <unit id="119">
        <segment state="initial">
          <source xml:space="preserve">Check to make sure the file isn't null, which it will be if the user cancels the picking operation.</source>
          <target xml:space="preserve">Check to make sure the file isn't null, which it will be if the user cancels the picking operation.</target>
        </segment>
      </unit>
      <unit id="120">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227221.aspx)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/br241731)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Call the file's <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">OpenAsync</pc></pc> method to get an <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">IRandomAccessStream</pc></pc> for the file.</source>
          <target xml:space="preserve">Call the file's <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">OpenAsync</pc></pc> method to get an <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">IRandomAccessStream</pc></pc> for the file.</target>
        </segment>
      </unit>
      <unit id="121">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/br244338)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Finally, call the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaElement</pc> object's <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">SetSource</pc></pc> method to make the video file the video source for the control.</source>
          <target xml:space="preserve">Finally, call the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaElement</pc> object's <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">SetSource</pc></pc> method to make the video file the video source for the control.</target>
        </segment>
      </unit>
      <unit id="122">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/MediaCastingWin10/cs/MainPage.xaml.cs#SnippetOpenButtonClick)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">OpenButtonClick</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">OpenButtonClick</pc>]</target>
        </segment>
      </unit>
      <unit id="123">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Once the video is loaded in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaElement</pc>, the user can simply press the casting button on the transport controls to launch a built-in dialog that allows them to choose a device to which the loaded media will be cast.</source>
          <target xml:space="preserve">Once the video is loaded in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaElement</pc>, the user can simply press the casting button on the transport controls to launch a built-in dialog that allows them to choose a device to which the loaded media will be cast.</target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source xml:space="preserve">mediaelement casting button</source>
          <target xml:space="preserve">mediaelement casting button</target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source xml:space="preserve">Media casting with the CastingDevicePicker</source>
          <target xml:space="preserve">Media casting with the CastingDevicePicker</target>
        </segment>
      </unit>
      <unit id="126">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn972525)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">A second way to cast media to a device is to use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CastingDevicePicker</pc></pc>.</source>
          <target xml:space="preserve">A second way to cast media to a device is to use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CastingDevicePicker</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="127">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn972568)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To use this class, include the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Media.Casting</pc></pc> namespace in your project.</source>
          <target xml:space="preserve">To use this class, include the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Media.Casting</pc></pc> namespace in your project.</target>
        </segment>
      </unit>
      <unit id="128">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/MediaCastingWin10/cs/MainPage.xaml.cs#SnippetCastingNamespace)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">CastingNamespace</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">CastingNamespace</pc>]</target>
        </segment>
      </unit>
      <unit id="129">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Declare a member variable for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">CastingDevicePicker</pc> object.</source>
          <target xml:space="preserve">Declare a member variable for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">CastingDevicePicker</pc> object.</target>
        </segment>
      </unit>
      <unit id="130">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/MediaCastingWin10/cs/MainPage.xaml.cs#SnippetDeclareCastingPicker)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">DeclareCastingPicker</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">DeclareCastingPicker</pc>]</target>
        </segment>
      </unit>
      <unit id="131">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn972540)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/dn972526)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">When you page is initialized, create a new instance of the casting picker and set the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Filter</pc></pc> to <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">SupportsVideo</pc></pc> property to indicate that the casting devices listed by the picker should support video.</source>
          <target xml:space="preserve">When you page is initialized, create a new instance of the casting picker and set the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Filter</pc></pc> to <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">SupportsVideo</pc></pc> property to indicate that the casting devices listed by the picker should support video.</target>
        </segment>
      </unit>
      <unit id="132">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn972539)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Register a handler for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CastingDeviceSelected</pc></pc> event, which is raised when the user picks a device for casting.</source>
          <target xml:space="preserve">Register a handler for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CastingDeviceSelected</pc></pc> event, which is raised when the user picks a device for casting.</target>
        </segment>
      </unit>
      <unit id="133">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/MediaCastingWin10/cs/MainPage.xaml.cs#SnippetInitCastingPicker)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">InitCastingPicker</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">InitCastingPicker</pc>]</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source xml:space="preserve">In your XAML file, add a button to allow the user to launch the picker.</source>
          <target xml:space="preserve">In your XAML file, add a button to allow the user to launch the picker.</target>
        </segment>
      </unit>
      <unit id="135">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/MediaCastingWin10/cs/MainPage.xaml#SnippetCastPickerButton)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-xml<pc dataRefEnd="id2" dataRefStart="id1" id="p1">CastPickerButton</pc>]</source>
          <target xml:space="preserve">[!code-xml<pc dataRefEnd="id2" dataRefStart="id1" id="p1">CastPickerButton</pc>]</target>
        </segment>
      </unit>
      <unit id="136">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/br208986)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Click</pc> event handler for the button, call <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">TransformToVisual</pc></pc> to get the transform of a UI element relative to another element.</source>
          <target xml:space="preserve">In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Click</pc> event handler for the button, call <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">TransformToVisual</pc></pc> to get the transform of a UI element relative to another element.</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source xml:space="preserve">In this example, the transform is the position of the cast picker button relative to the visual root of the application window.</source>
          <target xml:space="preserve">In this example, the transform is the position of the cast picker button relative to the visual root of the application window.</target>
        </segment>
      </unit>
      <unit id="138">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn972542)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/dn972525)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Call the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Show</pc></pc> method of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">CastingDevicePicker</pc></pc> object to launch the casting picker dialog.</source>
          <target xml:space="preserve">Call the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Show</pc></pc> method of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">CastingDevicePicker</pc></pc> object to launch the casting picker dialog.</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source xml:space="preserve">Specify the location and dimensions of the cast picker button so that the system can make the dialog fly out from the button that the user pressed.</source>
          <target xml:space="preserve">Specify the location and dimensions of the cast picker button so that the system can make the dialog fly out from the button that the user pressed.</target>
        </segment>
      </unit>
      <unit id="140">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/MediaCastingWin10/cs/MainPage.xaml.cs#SnippetCastPickerButtonClick)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">CastPickerButtonClick</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">CastPickerButtonClick</pc>]</target>
        </segment>
      </unit>
      <unit id="141">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/dn972547)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">[</data>
          <data id="id8">](https://msdn.microsoft.com/library/windows/apps/dn972546)</data>
          <data id="id9">**</data>
          <data id="id10">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">CastingDeviceSelected</pc> event handler, call the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">CreateCastingConnection</pc></pc> method of the <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">SelectedCastingDevice</pc></pc> property of the event args, which represents the casting device selected by the user.</source>
          <target xml:space="preserve">In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">CastingDeviceSelected</pc> event handler, call the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">CreateCastingConnection</pc></pc> method of the <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">SelectedCastingDevice</pc></pc> property of the event args, which represents the casting device selected by the user.</target>
        </segment>
      </unit>
      <unit id="142">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn972519)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/dn972523)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Register handlers for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ErrorOccurred</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">StateChanged</pc></pc> events.</source>
          <target xml:space="preserve">Register handlers for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ErrorOccurred</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">StateChanged</pc></pc> events.</target>
        </segment>
      </unit>
      <unit id="143">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn972520)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">[</data>
          <data id="id8">](https://msdn.microsoft.com/library/windows/apps/dn920012)</data>
          <data id="id9">**</data>
          <data id="id10">**</data>
          <data id="id11">**</data>
          <data id="id12">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Finally, call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">RequestStartCastingAsync</pc></pc> to begin casting, passing in the result of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">MediaElement</pc> object's <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">GetAsCastingSource</pc></pc> method to specify that the media to be cast is the content of the <pc dataRefEnd="id12" dataRefStart="id11" id="p6">MediaElement</pc>.</source>
          <target xml:space="preserve">Finally, call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">RequestStartCastingAsync</pc></pc> to begin casting, passing in the result of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">MediaElement</pc> object's <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">GetAsCastingSource</pc></pc> method to specify that the media to be cast is the content of the <pc dataRefEnd="id12" dataRefStart="id11" id="p6">MediaElement</pc>.</target>
        </segment>
      </unit>
      <unit id="144">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  The casting connection must be initiated on the UI thread.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  The casting connection must be initiated on the UI thread.</target>
        </segment>
      </unit>
      <unit id="145">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/hh750317)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Since the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">CastingDeviceSelected</pc> is not called on the UI thread, you must place these calls inside a call to <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">CoreDispatcher.RunAsync</pc></pc> which causes them to be called on the UI thread.</source>
          <target xml:space="preserve">Since the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">CastingDeviceSelected</pc> is not called on the UI thread, you must place these calls inside a call to <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">CoreDispatcher.RunAsync</pc></pc> which causes them to be called on the UI thread.</target>
        </segment>
      </unit>
      <unit id="146">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/MediaCastingWin10/cs/MainPage.xaml.cs#SnippetCastingDeviceSelected)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">CastingDeviceSelected</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">CastingDeviceSelected</pc>]</target>
        </segment>
      </unit>
      <unit id="147">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ErrorOccurred</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">StateChanged</pc> event handlers, you should update your UI to inform the user of the current casting status.</source>
          <target xml:space="preserve">In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ErrorOccurred</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">StateChanged</pc> event handlers, you should update your UI to inform the user of the current casting status.</target>
        </segment>
      </unit>
      <unit id="148">
        <segment state="initial">
          <source xml:space="preserve">These events are discussed in detail in the following section on creating a custom casting device picker.</source>
          <target xml:space="preserve">These events are discussed in detail in the following section on creating a custom casting device picker.</target>
        </segment>
      </unit>
      <unit id="149">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/MediaCastingWin10/cs/MainPage.xaml.cs#SnippetEmptyStateHandlers)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">EmptyStateHandlers</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">EmptyStateHandlers</pc>]</target>
        </segment>
      </unit>
      <unit id="150">
        <segment state="initial">
          <source xml:space="preserve">Media casting with a custom device picker</source>
          <target xml:space="preserve">Media casting with a custom device picker</target>
        </segment>
      </unit>
      <unit id="151">
        <segment state="initial">
          <source xml:space="preserve">The following section describes how to create your own casting device picker UI by enumerating the casting devices and initiating the connection from your code.</source>
          <target xml:space="preserve">The following section describes how to create your own casting device picker UI by enumerating the casting devices and initiating the connection from your code.</target>
        </segment>
      </unit>
      <unit id="152">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br225459)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To enumerate the available casting devices, include the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Devices.Enumeration</pc></pc> namespace in your project.</source>
          <target xml:space="preserve">To enumerate the available casting devices, include the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Devices.Enumeration</pc></pc> namespace in your project.</target>
        </segment>
      </unit>
      <unit id="153">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/MediaCastingWin10/cs/MainPage.xaml.cs#SnippetEnumerationNamespace)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">EnumerationNamespace</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">EnumerationNamespace</pc>]</target>
        </segment>
      </unit>
      <unit id="154">
        <segment state="initial">
          <source xml:space="preserve">Add the following controls to your XAML page to implement the rudimentary UI for this example:</source>
          <target xml:space="preserve">Add the following controls to your XAML page to implement the rudimentary UI for this example:</target>
        </segment>
      </unit>
      <unit id="155">
        <segment state="initial">
          <source xml:space="preserve">A button to start the device watcher that looks for available casting devices.</source>
          <target xml:space="preserve">A button to start the device watcher that looks for available casting devices.</target>
        </segment>
      </unit>
      <unit id="156">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227538)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">A <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ProgressRing</pc></pc> control to provide feedback to the user that casting enumeration is ongoing.</source>
          <target xml:space="preserve">A <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ProgressRing</pc></pc> control to provide feedback to the user that casting enumeration is ongoing.</target>
        </segment>
      </unit>
      <unit id="157">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br242868)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">A <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ListBox</pc></pc> to list the discovered casting devices.</source>
          <target xml:space="preserve">A <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ListBox</pc></pc> to list the discovered casting devices.</target>
        </segment>
      </unit>
      <unit id="158">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br242830)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/dn972549)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Define an <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ItemTemplate</pc></pc> for the control so that we can assign the casting device objects directly to the control and still display the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">FriendlyName</pc></pc> property.</source>
          <target xml:space="preserve">Define an <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ItemTemplate</pc></pc> for the control so that we can assign the casting device objects directly to the control and still display the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">FriendlyName</pc></pc> property.</target>
        </segment>
      </unit>
      <unit id="159">
        <segment state="initial">
          <source xml:space="preserve">A button to allow the user to disconnect the casting device.</source>
          <target xml:space="preserve">A button to allow the user to disconnect the casting device.</target>
        </segment>
      </unit>
      <unit id="160">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/MediaCastingWin10/cs/MainPage.xaml#SnippetCustomPickerXAML)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-xml<pc dataRefEnd="id2" dataRefStart="id1" id="p1">CustomPickerXAML</pc>]</source>
          <target xml:space="preserve">[!code-xml<pc dataRefEnd="id2" dataRefStart="id1" id="p1">CustomPickerXAML</pc>]</target>
        </segment>
      </unit>
      <unit id="161">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br225446)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/dn972510)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">In your code behind, declare member variables for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DeviceWatcher</pc></pc> and the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">CastingConnection</pc></pc>.</source>
          <target xml:space="preserve">In your code behind, declare member variables for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DeviceWatcher</pc></pc> and the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">CastingConnection</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="162">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/MediaCastingWin10/cs/MainPage.xaml.cs#SnippetDeclareDeviceWatcher)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">DeclareDeviceWatcher</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">DeclareDeviceWatcher</pc>]</target>
        </segment>
      </unit>
      <unit id="163">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">*</data>
          <data id="id4">*</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Click</pc> handler for the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">startWatcherButton</pc>, first update the UI by disabling the button and making the progress ring active while device enumeration is ongoing.</source>
          <target xml:space="preserve">In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Click</pc> handler for the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">startWatcherButton</pc>, first update the UI by disabling the button and making the progress ring active while device enumeration is ongoing.</target>
        </segment>
      </unit>
      <unit id="164">
        <segment state="initial">
          <source xml:space="preserve">Clear the list box of casting devices.</source>
          <target xml:space="preserve">Clear the list box of casting devices.</target>
        </segment>
      </unit>
      <unit id="165">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br225427)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Next, create a device watcher by calling <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DeviceInformation.CreateWatcher</pc></pc>.</source>
          <target xml:space="preserve">Next, create a device watcher by calling <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DeviceInformation.CreateWatcher</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="166">
        <segment state="initial">
          <source xml:space="preserve">This method can be used to watch for many different types of devices.</source>
          <target xml:space="preserve">This method can be used to watch for many different types of devices.</target>
        </segment>
      </unit>
      <unit id="167">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn972551)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Specify that you want to watch for devices that support video casting by using the device selector string returned by <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CastingDevice.GetDeviceSelector</pc></pc>.</source>
          <target xml:space="preserve">Specify that you want to watch for devices that support video casting by using the device selector string returned by <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CastingDevice.GetDeviceSelector</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="168">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br225450)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/br225453)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
          <data id="id9">[</data>
          <data id="id10">](https://msdn.microsoft.com/library/windows/apps/br225451)</data>
          <data id="id11">**</data>
          <data id="id12">**</data>
          <data id="id13">[</data>
          <data id="id14">](https://msdn.microsoft.com/library/windows/apps/br225457)</data>
          <data id="id15">**</data>
          <data id="id16">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Finally, register event handlers for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Added</pc></pc>, <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Removed</pc></pc>, <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">EnumerationCompleted</pc></pc>, and <pc dataRefEnd="id14" dataRefStart="id13" id="p7"><pc dataRefEnd="id16" dataRefStart="id15" id="p8">Stopped</pc></pc> events.</source>
          <target xml:space="preserve">Finally, register event handlers for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Added</pc></pc>, <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Removed</pc></pc>, <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">EnumerationCompleted</pc></pc>, and <pc dataRefEnd="id14" dataRefStart="id13" id="p7"><pc dataRefEnd="id16" dataRefStart="id15" id="p8">Stopped</pc></pc> events.</target>
        </segment>
      </unit>
      <unit id="169">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/MediaCastingWin10/cs/MainPage.xaml.cs#SnippetStartWatcherButtonClick)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">StartWatcherButtonClick</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">StartWatcherButtonClick</pc>]</target>
        </segment>
      </unit>
      <unit id="170">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Added</pc> event is raised when a new device is discovered by the watcher.</source>
          <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Added</pc> event is raised when a new device is discovered by the watcher.</target>
        </segment>
      </unit>
      <unit id="171">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn972524)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/dn972550)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
          <data id="id9">**</data>
          <data id="id10">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">In the handler for this event, create a new <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CastingDevice</pc></pc> object by calling <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">CastingDevice.FromIdAsync</pc></pc> and passing in the ID of the discovered casting device, which is contained in the <pc dataRefEnd="id10" dataRefStart="id9" id="p5">DeviceInformation</pc> object passed into the handler.</source>
          <target xml:space="preserve">In the handler for this event, create a new <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CastingDevice</pc></pc> object by calling <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">CastingDevice.FromIdAsync</pc></pc> and passing in the ID of the discovered casting device, which is contained in the <pc dataRefEnd="id10" dataRefStart="id9" id="p5">DeviceInformation</pc> object passed into the handler.</target>
        </segment>
      </unit>
      <unit id="172">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Add the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">CastingDevice</pc> to the casting device <pc dataRefEnd="id4" dataRefStart="id3" id="p2">ListBox</pc> so that the user can select it.</source>
          <target xml:space="preserve">Add the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">CastingDevice</pc> to the casting device <pc dataRefEnd="id4" dataRefStart="id3" id="p2">ListBox</pc> so that the user can select it.</target>
        </segment>
      </unit>
      <unit id="173">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br242830)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/dn972549)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Because of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ItemTemplate</pc></pc> defined in the XAML, the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">FriendlyName</pc></pc> property will be used as the item text for in the list box.</source>
          <target xml:space="preserve">Because of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ItemTemplate</pc></pc> defined in the XAML, the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">FriendlyName</pc></pc> property will be used as the item text for in the list box.</target>
        </segment>
      </unit>
      <unit id="174">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh750317)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Because this event handler is not called on the UI thread, you must update the UI from within a call to <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CoreDispatcher.RunAsync</pc></pc>.</source>
          <target xml:space="preserve">Because this event handler is not called on the UI thread, you must update the UI from within a call to <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CoreDispatcher.RunAsync</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="175">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/MediaCastingWin10/cs/MainPage.xaml.cs#SnippetWatcherAdded)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">WatcherAdded</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">WatcherAdded</pc>]</target>
        </segment>
      </unit>
      <unit id="176">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Removed</pc> event is raised when the watcher detects that a casting device is no longer present.</source>
          <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Removed</pc> event is raised when the watcher detects that a casting device is no longer present.</target>
        </segment>
      </unit>
      <unit id="177">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/br242823)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Compare the ID property of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Added</pc> object passed into the handler to the ID of each <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Added</pc> in the list box's <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Items</pc></pc> collection.</source>
          <target xml:space="preserve">Compare the ID property of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Added</pc> object passed into the handler to the ID of each <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Added</pc> in the list box's <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Items</pc></pc> collection.</target>
        </segment>
      </unit>
      <unit id="178">
        <segment state="initial">
          <source xml:space="preserve">If the ID matches, remove that object from the collection.</source>
          <target xml:space="preserve">If the ID matches, remove that object from the collection.</target>
        </segment>
      </unit>
      <unit id="179">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Again, because the UI is being updated, this call must be made from within a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">RunAsync</pc> call.</source>
          <target xml:space="preserve">Again, because the UI is being updated, this call must be made from within a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">RunAsync</pc> call.</target>
        </segment>
      </unit>
      <unit id="180">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/MediaCastingWin10/cs/MainPage.xaml.cs#SnippetWatcherRemoved)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">WatcherRemoved</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">WatcherRemoved</pc>]</target>
        </segment>
      </unit>
      <unit id="181">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">EnumerationCompleted</pc> event is raised when the watcher has finished detecting devices.</source>
          <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">EnumerationCompleted</pc> event is raised when the watcher has finished detecting devices.</target>
        </segment>
      </unit>
      <unit id="182">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br225456)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">In the handler for this event, update the UI to let the user know that device enumeration has completed and stop the device watcher by calling <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Stop</pc></pc>.</source>
          <target xml:space="preserve">In the handler for this event, update the UI to let the user know that device enumeration has completed and stop the device watcher by calling <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Stop</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="183">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/MediaCastingWin10/cs/MainPage.xaml.cs#SnippetWatcherEnumerationCompleted)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">WatcherEnumerationCompleted</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">WatcherEnumerationCompleted</pc>]</target>
        </segment>
      </unit>
      <unit id="184">
        <segment state="initial">
          <source xml:space="preserve">The Stopped event is raised when the device watcher has finished stopping.</source>
          <target xml:space="preserve">The Stopped event is raised when the device watcher has finished stopping.</target>
        </segment>
      </unit>
      <unit id="185">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227538)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">*</data>
          <data id="id6">*</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">In the handler for this event, stop the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ProgressRing</pc></pc> control and reenable the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">startWatcherButton</pc> so that the user can restart the device enumeration process.</source>
          <target xml:space="preserve">In the handler for this event, stop the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ProgressRing</pc></pc> control and reenable the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">startWatcherButton</pc> so that the user can restart the device enumeration process.</target>
        </segment>
      </unit>
      <unit id="186">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/MediaCastingWin10/cs/MainPage.xaml.cs#SnippetWatcherStopped)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">WatcherStopped</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">WatcherStopped</pc>]</target>
        </segment>
      </unit>
      <unit id="187">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br209776)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">When the user selects one of the casting devices from the list box, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SelectionChanged</pc></pc> event is raised.</source>
          <target xml:space="preserve">When the user selects one of the casting devices from the list box, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SelectionChanged</pc></pc> event is raised.</target>
        </segment>
      </unit>
      <unit id="188">
        <segment state="initial">
          <source xml:space="preserve">It is within this handler that the casting connection will be created and casting will be started.</source>
          <target xml:space="preserve">It is within this handler that the casting connection will be created and casting will be started.</target>
        </segment>
      </unit>
      <unit id="189">
        <segment state="initial">
          <source xml:space="preserve">First, make sure the device watcher is stopped so that device enumeration doesn't interfere with media casting.</source>
          <target xml:space="preserve">First, make sure the device watcher is stopped so that device enumeration doesn't interfere with media casting.</target>
        </segment>
      </unit>
      <unit id="190">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn972547)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Create a casting connection by calling <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CreateCastingConnection</pc></pc> on the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">CastingDevice</pc> object selected by the user.</source>
          <target xml:space="preserve">Create a casting connection by calling <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CreateCastingConnection</pc></pc> on the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">CastingDevice</pc> object selected by the user.</target>
        </segment>
      </unit>
      <unit id="191">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn972523)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/dn972519)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Add event handlers for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StateChanged</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">ErrorOccurred</pc></pc> events.</source>
          <target xml:space="preserve">Add event handlers for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StateChanged</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">ErrorOccurred</pc></pc> events.</target>
        </segment>
      </unit>
      <unit id="192">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn972520)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">[</data>
          <data id="id8">](https://msdn.microsoft.com/library/windows/apps/dn920012)</data>
          <data id="id9">**</data>
          <data id="id10">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Start media casting by calling <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">RequestStartCastingAsync</pc></pc>, passing in the casting source returned by calling the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">MediaElement</pc> method <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">GetAsCastingSource</pc></pc>.</source>
          <target xml:space="preserve">Start media casting by calling <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">RequestStartCastingAsync</pc></pc>, passing in the casting source returned by calling the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">MediaElement</pc> method <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">GetAsCastingSource</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="193">
        <segment state="initial">
          <source xml:space="preserve">Finally, make the disconnect button visible to allow the user to stop media casting.</source>
          <target xml:space="preserve">Finally, make the disconnect button visible to allow the user to stop media casting.</target>
        </segment>
      </unit>
      <unit id="194">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/MediaCastingWin10/cs/MainPage.xaml.cs#SnippetSelectionChanged)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">SelectionChanged</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">SelectionChanged</pc>]</target>
        </segment>
      </unit>
      <unit id="195">
        <segment state="initial">
          <source xml:space="preserve">In the state changed handler, the action you take depends on the new state of the casting connection:</source>
          <target xml:space="preserve">In the state changed handler, the action you take depends on the new state of the casting connection:</target>
        </segment>
      </unit>
      <unit id="196">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">If the state is <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Connected</pc> or <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Rendering</pc>, make sure the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">ProgressRing</pc> control is inactive and the disconnect button is visible.</source>
          <target xml:space="preserve">If the state is <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Connected</pc> or <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Rendering</pc>, make sure the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">ProgressRing</pc> control is inactive and the disconnect button is visible.</target>
        </segment>
      </unit>
      <unit id="197">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">If the state is <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Disconnected</pc>, unselect the current casting device in the list box, make the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">ProgressRing</pc> control inactive, and hide the disconnect button.</source>
          <target xml:space="preserve">If the state is <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Disconnected</pc>, unselect the current casting device in the list box, make the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">ProgressRing</pc> control inactive, and hide the disconnect button.</target>
        </segment>
      </unit>
      <unit id="198">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">If the state is <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Connecting</pc>, make the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">ProgressRing</pc> control active and hide the disconnect button.</source>
          <target xml:space="preserve">If the state is <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Connecting</pc>, make the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">ProgressRing</pc> control active and hide the disconnect button.</target>
        </segment>
      </unit>
      <unit id="199">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">If the state is <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Disconnecting</pc>, make the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">ProgressRing</pc> control active and hide the disconnect button.</source>
          <target xml:space="preserve">If the state is <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Disconnecting</pc>, make the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">ProgressRing</pc> control active and hide the disconnect button.</target>
        </segment>
      </unit>
      <unit id="200">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/MediaCastingWin10/cs/MainPage.xaml.cs#SnippetStateChanged)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">StateChanged</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">StateChanged</pc>]</target>
        </segment>
      </unit>
      <unit id="201">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">In the handler for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ErrorOccurred</pc> event, update your UI to let the user know that a casting error occurred and unselect the current <pc dataRefEnd="id4" dataRefStart="id3" id="p2">CastingDevice</pc> object in the list box.</source>
          <target xml:space="preserve">In the handler for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ErrorOccurred</pc> event, update your UI to let the user know that a casting error occurred and unselect the current <pc dataRefEnd="id4" dataRefStart="id3" id="p2">CastingDevice</pc> object in the list box.</target>
        </segment>
      </unit>
      <unit id="202">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/MediaCastingWin10/cs/MainPage.xaml.cs#SnippetErrorOccurred)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">ErrorOccurred</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">ErrorOccurred</pc>]</target>
        </segment>
      </unit>
      <unit id="203">
        <segment state="initial">
          <source xml:space="preserve">Finally, implement the handler for the disconnect button.</source>
          <target xml:space="preserve">Finally, implement the handler for the disconnect button.</target>
        </segment>
      </unit>
      <unit id="204">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/dn972518)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Stop media casting and disconnect from the casting device by calling the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">CastingConnection</pc> object's <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">DisconnectAsync</pc></pc> method.</source>
          <target xml:space="preserve">Stop media casting and disconnect from the casting device by calling the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">CastingConnection</pc> object's <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">DisconnectAsync</pc></pc> method.</target>
        </segment>
      </unit>
      <unit id="205">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh750317)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">This call must be dispatched to the UI thread by calling <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CoreDispatcher.RunAsync</pc></pc>.</source>
          <target xml:space="preserve">This call must be dispatched to the UI thread by calling <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CoreDispatcher.RunAsync</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="206">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/MediaCastingWin10/cs/MainPage.xaml.cs#SnippetDisconnectButton)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">DisconnectButton</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">DisconnectButton</pc>]</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>