<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="pt-br" original="1/5/2016 8:36:35 AM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">065f423b82d69a7c9dbc6384711d2135a3b7e5ec</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>DSC Configurations</source>
            <target state="new">DSC Configurations</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>Applies To: Windows PowerShell 4.0, Windows PowerShell 5.0</source>
            <target state="new">Applies To: Windows PowerShell 4.0, Windows PowerShell 5.0</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>DSC configurations are PowerShell scripts that define a special type of function.</source>
            <target state="new">DSC configurations are PowerShell scripts that define a special type of function.</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>To define a configuration, you use the PowerShell keyword <bpt id="2">&lt;strong&gt;</bpt>Configuration<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">To define a configuration, you use the PowerShell keyword <bpt id="2">&lt;strong&gt;</bpt>Configuration<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>Save the script as a .ps1 file.</source>
            <target state="new">Save the script as a .ps1 file.</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>Configuration syntax</source>
            <target state="new">Configuration syntax</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>A configuration script consists of the following parts:</source>
            <target state="new">A configuration script consists of the following parts:</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>The <bpt id="2">&lt;strong&gt;</bpt>Configuration<ept id="2">&lt;/strong&gt;</ept> block.</source>
            <target state="new">The <bpt id="2">&lt;strong&gt;</bpt>Configuration<ept id="2">&lt;/strong&gt;</ept> block.</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>This is the outermost script block.</source>
            <target state="new">This is the outermost script block.</target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>You define it by using the <bpt id="2">&lt;strong&gt;</bpt>Configuration<ept id="2">&lt;/strong&gt;</ept> keyword and providing a name.</source>
            <target state="new">You define it by using the <bpt id="2">&lt;strong&gt;</bpt>Configuration<ept id="2">&lt;/strong&gt;</ept> keyword and providing a name.</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>In this case, the name of the configuration is "MyDscConfiguration".</source>
            <target state="new">In this case, the name of the configuration is "MyDscConfiguration".</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>One or more <bpt id="2">&lt;strong&gt;</bpt>Node<ept id="2">&lt;/strong&gt;</ept> blocks.</source>
            <target state="new">One or more <bpt id="2">&lt;strong&gt;</bpt>Node<ept id="2">&lt;/strong&gt;</ept> blocks.</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>These define the nodes (computers or VMs) that you are configuring.</source>
            <target state="new">These define the nodes (computers or VMs) that you are configuring.</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>In the above configuration, there is one <bpt id="2">&lt;strong&gt;</bpt>Node<ept id="2">&lt;/strong&gt;</ept> block that targets a computer named "TEST-PC1".</source>
            <target state="new">In the above configuration, there is one <bpt id="2">&lt;strong&gt;</bpt>Node<ept id="2">&lt;/strong&gt;</ept> block that targets a computer named "TEST-PC1".</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>One or more resource blocks.</source>
            <target state="new">One or more resource blocks.</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>This is where the configuration sets the properties for the resources that it is configuring.</source>
            <target state="new">This is where the configuration sets the properties for the resources that it is configuring.</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>In this case, there are two resource blocks, each of which call the "WindowsFeature" resource.</source>
            <target state="new">In this case, there are two resource blocks, each of which call the "WindowsFeature" resource.</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>Within a <bpt id="2">&lt;strong&gt;</bpt>Configuration<ept id="2">&lt;/strong&gt;</ept> block, you can do anything that you normally could in a PoweShell function.</source>
            <target state="new">Within a <bpt id="2">&lt;strong&gt;</bpt>Configuration<ept id="2">&lt;/strong&gt;</ept> block, you can do anything that you normally could in a PoweShell function.</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>For example, in the previous example, if you didn't want to hard code the name of the target computer in the configuration, you could add a parameter for the node name:</source>
            <target state="new">For example, in the previous example, if you didn't want to hard code the name of the target computer in the configuration, you could add a parameter for the node name:</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>In this example, you specify the name of the node by passing it as the $computerName parameter when you [compile the configuraton](# Compiling the configuration).</source>
            <target state="new">In this example, you specify the name of the node by passing it as the $computerName parameter when you [compile the configuraton](# Compiling the configuration).</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>The name defaults to "localhost".</source>
            <target state="new">The name defaults to "localhost".</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>Compiling the configuration</source>
            <target state="new">Compiling the configuration</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>Before you can enact a configuration, you have to compile it into a MOF document.</source>
            <target state="new">Before you can enact a configuration, you have to compile it into a MOF document.</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>You do this by calling the configuration like you would a PowerShell function.</source>
            <target state="new">You do this by calling the configuration like you would a PowerShell function.</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Note:<ept id="1">&lt;/strong&gt;</ept> To call a configuration, the function must be in global scope (as with any other PowerShell function).</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Note:<ept id="1">&lt;/strong&gt;</ept> To call a configuration, the function must be in global scope (as with any other PowerShell function).</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>You can make this happen either by "dot-sourcing" the script, or by running the configuration script by using F5 or clicking on the <bpt id="2">&lt;strong&gt;</bpt>Run Script<ept id="2">&lt;/strong&gt;</ept> button in the ISE.</source>
            <target state="new">You can make this happen either by "dot-sourcing" the script, or by running the configuration script by using F5 or clicking on the <bpt id="2">&lt;strong&gt;</bpt>Run Script<ept id="2">&lt;/strong&gt;</ept> button in the ISE.</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>To dot-source the script, run the command `.</source>
            <target state="new">To dot-source the script, run the command `.</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>.\myConfig.ps1<bpt id="2">&lt;code&gt;</bpt> where <ept id="2">&lt;/code&gt;</ept>myConfig.ps1` is the name of the script file that contains your configuration.</source>
            <target state="new">.\myConfig.ps1<bpt id="2">&lt;code&gt;</bpt> where <ept id="2">&lt;/code&gt;</ept>myConfig.ps1` is the name of the script file that contains your configuration.</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>When you call the configuration, it creates:</source>
            <target state="new">When you call the configuration, it creates:</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>A folder in the current directory with the same name as the configuration.</source>
            <target state="new">A folder in the current directory with the same name as the configuration.</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>A file named <bpt id="2">&lt;em&gt;</bpt>NodeName<ept id="2">&lt;/em&gt;</ept>.mof in the new directory, where <bpt id="4">&lt;em&gt;</bpt>NodeName<ept id="4">&lt;/em&gt;</ept> is the name of the target node of the configuration.</source>
            <target state="new">A file named <bpt id="2">&lt;em&gt;</bpt>NodeName<ept id="2">&lt;/em&gt;</ept>.mof in the new directory, where <bpt id="4">&lt;em&gt;</bpt>NodeName<ept id="4">&lt;/em&gt;</ept> is the name of the target node of the configuration.</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>If there are more than one nodes, a MOF file will be created for each node.</source>
            <target state="new">If there are more than one nodes, a MOF file will be created for each node.</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Note<ept id="1">&lt;/strong&gt;</ept>: The MOF file contains all of the configuration information for the target node.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Note<ept id="1">&lt;/strong&gt;</ept>: The MOF file contains all of the configuration information for the target node.</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source>Because of this, it’s important to keep it secure.</source>
            <target state="new">Because of this, it’s important to keep it secure.</target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>For more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Securing the MOF file<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For more information, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Securing the MOF file<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>Compiling the first configuration above results in the following folder structure:</source>
            <target state="new">Compiling the first configuration above results in the following folder structure:</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>If the configuration takes a parameter, as in the second example, that has to be provided at compile time.</source>
            <target state="new">If the configuration takes a parameter, as in the second example, that has to be provided at compile time.</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source>Here's how that would look:</source>
            <target state="new">Here's how that would look:</target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source>Using DependsOn</source>
            <target state="new">Using DependsOn</target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source>A useful DSC keyword is <bpt id="2">&lt;strong&gt;</bpt>DependsOn<ept id="2">&lt;/strong&gt;</ept>.</source>
            <target state="new">A useful DSC keyword is <bpt id="2">&lt;strong&gt;</bpt>DependsOn<ept id="2">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source>Typically (though not necessarily always), DSC applies the resources in the order that they appear within the configuration.</source>
            <target state="new">Typically (though not necessarily always), DSC applies the resources in the order that they appear within the configuration.</target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source>However, <bpt id="2">&lt;strong&gt;</bpt>DependsOn<ept id="2">&lt;/strong&gt;</ept> specifies which resources depend on other resources, and the LCM ensures that they are applied in the correct order, regardless of the order in which resource instances are defined.</source>
            <target state="new">However, <bpt id="2">&lt;strong&gt;</bpt>DependsOn<ept id="2">&lt;/strong&gt;</ept> specifies which resources depend on other resources, and the LCM ensures that they are applied in the correct order, regardless of the order in which resource instances are defined.</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source>For example, a configuration might specify that an instance of the <bpt id="2">&lt;strong&gt;</bpt>User<ept id="2">&lt;/strong&gt;</ept> resource depends on the existence of a <bpt id="4">&lt;strong&gt;</bpt>Group<ept id="4">&lt;/strong&gt;</ept> instance:</source>
            <target state="new">For example, a configuration might specify that an instance of the <bpt id="2">&lt;strong&gt;</bpt>User<ept id="2">&lt;/strong&gt;</ept> resource depends on the existence of a <bpt id="4">&lt;strong&gt;</bpt>Group<ept id="4">&lt;/strong&gt;</ept> instance:</target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source>Using New Resources in Your Configuration</source>
            <target state="new">Using New Resources in Your Configuration</target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source>If you ran the previous examples, you might have noticed that you were warned that you were using a resource without explicitly importing it.</source>
            <target state="new">If you ran the previous examples, you might have noticed that you were warned that you were using a resource without explicitly importing it.</target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source>Today, DSC ships with 12 resources as part of the PSDesiredStateConfiguration module.</source>
            <target state="new">Today, DSC ships with 12 resources as part of the PSDesiredStateConfiguration module.</target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source>Other resources in external modules must be placed in <bpt id="2">&lt;code&gt;</bpt>$env:PSModulePath<ept id="2">&lt;/code&gt;</ept> in order to be recognized by the LCM.</source>
            <target state="new">Other resources in external modules must be placed in <bpt id="2">&lt;code&gt;</bpt>$env:PSModulePath<ept id="2">&lt;/code&gt;</ept> in order to be recognized by the LCM.</target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source>A new cmdlet, <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Get-DscResource<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, can be used to determine what resources are installed on the system and available for use by the LCM.</source>
            <target state="new">A new cmdlet, <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Get-DscResource<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, can be used to determine what resources are installed on the system and available for use by the LCM.</target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source>Once these modules have been placed in <bpt id="2">&lt;code&gt;</bpt>$env:PSModulePath<ept id="2">&lt;/code&gt;</ept> and are properly recognized by <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Get-DscResource<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>, they still need to be loaded within your configuration.</source>
            <target state="new">Once these modules have been placed in <bpt id="2">&lt;code&gt;</bpt>$env:PSModulePath<ept id="2">&lt;/code&gt;</ept> and are properly recognized by <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>Get-DscResource<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept>, they still need to be loaded within your configuration.</target>
          </trans-unit>
          <trans-unit id="150" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Import-DscResource<ept id="1">&lt;/strong&gt;</ept> is a dynamic keyword that can only be recognized within a <bpt id="3">&lt;strong&gt;</bpt>Configuration<ept id="3">&lt;/strong&gt;</ept> block (i.e. it is not a cmdlet).</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Import-DscResource<ept id="1">&lt;/strong&gt;</ept> is a dynamic keyword that can only be recognized within a <bpt id="3">&lt;strong&gt;</bpt>Configuration<ept id="3">&lt;/strong&gt;</ept> block (i.e. it is not a cmdlet).</target>
          </trans-unit>
          <trans-unit id="151" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Import-DscResource<ept id="1">&lt;/strong&gt;</ept> supports two parameters:</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Import-DscResource<ept id="1">&lt;/strong&gt;</ept> supports two parameters:</target>
          </trans-unit>
          <trans-unit id="152" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>ModuleName<ept id="1">&lt;/strong&gt;</ept> is the recommended way of using <bpt id="3">&lt;strong&gt;</bpt>Import-DscResource<ept id="3">&lt;/strong&gt;</ept>.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>ModuleName<ept id="1">&lt;/strong&gt;</ept> is the recommended way of using <bpt id="3">&lt;strong&gt;</bpt>Import-DscResource<ept id="3">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="153" xml:space="preserve">
            <source>It accepts the name of the module that contains the resources to be imported (as well as a string array of module names).</source>
            <target state="new">It accepts the name of the module that contains the resources to be imported (as well as a string array of module names).</target>
          </trans-unit>
          <trans-unit id="154" xml:space="preserve">
            <source><bpt id="1">&lt;strong&gt;</bpt>Name<ept id="1">&lt;/strong&gt;</ept> is the name of the resource to import.</source>
            <target state="new"><bpt id="1">&lt;strong&gt;</bpt>Name<ept id="1">&lt;/strong&gt;</ept> is the name of the resource to import.</target>
          </trans-unit>
          <trans-unit id="155" xml:space="preserve">
            <source>This is not the friendly name returned as “Name” by <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Get-DscResource<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, but the class name used when defining the resource schema (returned as <bpt id="4">&lt;strong&gt;</bpt>ResourceType<ept id="4">&lt;/strong&gt;</ept> by <bpt id="6CapsExtId1">&lt;link&gt;</bpt><bpt id="6CapsExtId2">&lt;linkText&gt;</bpt>Get-DscResource<ept id="6CapsExtId2">&lt;/linkText&gt;</ept><bpt id="6CapsExtId3">&lt;title&gt;</bpt><ept id="6CapsExtId3">&lt;/title&gt;</ept><ept id="6CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">This is not the friendly name returned as “Name” by <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Get-DscResource<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>, but the class name used when defining the resource schema (returned as <bpt id="4">&lt;strong&gt;</bpt>ResourceType<ept id="4">&lt;/strong&gt;</ept> by <bpt id="6CapsExtId1">&lt;link&gt;</bpt><bpt id="6CapsExtId2">&lt;linkText&gt;</bpt>Get-DscResource<ept id="6CapsExtId2">&lt;/linkText&gt;</ept><bpt id="6CapsExtId3">&lt;title&gt;</bpt><ept id="6CapsExtId3">&lt;/title&gt;</ept><ept id="6CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="156" xml:space="preserve">
            <source>See Also</source>
            <target state="new">See Also</target>
          </trans-unit>
          <trans-unit id="157" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Windows PowerShell Desired State Configuration Overview<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Windows PowerShell Desired State Configuration Overview<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="158" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>DSC Resources<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>DSC Resources<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="159" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Configuring The Local Configuration Manager<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Configuring The Local Configuration Manager<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>