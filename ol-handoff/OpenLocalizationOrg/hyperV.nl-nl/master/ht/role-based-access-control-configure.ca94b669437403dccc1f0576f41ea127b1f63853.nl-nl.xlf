<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="nl-nl">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">23e75b21dff15056f3e9c67bfb5d0b2b67bccfef</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Azure Active Directory AD Role-based Access Control | Microsoft Azure</source>
          <target state="new">Azure Active Directory AD Role-based Access Control | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This article describes Azure role-based access control.</source>
          <target state="new">This article describes Azure role-based access control.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Azure Role-based Access Control</source>
          <target state="new">Azure Role-based Access Control</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Role-based Access Control</source>
          <target state="new">Role-based Access Control</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Azure Role-Based Access Control (RBAC) enables fine-grained access management for Azure.</source>
          <target state="new">Azure Role-Based Access Control (RBAC) enables fine-grained access management for Azure.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Using RBAC, you can segregate duties within your DevOps team and grant only the amount of access to users that they need to perform their jobs.</source>
          <target state="new">Using RBAC, you can segregate duties within your DevOps team and grant only the amount of access to users that they need to perform their jobs.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Basics of access management in Azure</source>
          <target state="new">Basics of access management in Azure</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Each Azure subscription is homed to an Azure Active Directory.</source>
          <target state="new">Each Azure subscription is homed to an Azure Active Directory.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Only users, groups, and applications from that directory can be granted access to manage resources in the Azure subscription, using Azure portal, Azure Command-Line tools and Azure Management APIs.</source>
          <target state="new">Only users, groups, and applications from that directory can be granted access to manage resources in the Azure subscription, using Azure portal, Azure Command-Line tools and Azure Management APIs.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Access is granted by assigning the appropriate RBAC role to users, groups, and applications, at the right scope.</source>
          <target state="new">Access is granted by assigning the appropriate RBAC role to users, groups, and applications, at the right scope.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>To grant access to the entire subscription, assign a role at the subscription scope.</source>
          <target state="new">To grant access to the entire subscription, assign a role at the subscription scope.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To grant access to a specific resource group within a subscription, assign a role at the resource group scope.</source>
          <target state="new">To grant access to a specific resource group within a subscription, assign a role at the resource group scope.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You may assign roles at specific resources too, like websites, virtual machines and subnets, to grant access only to a resource.</source>
          <target state="new">You may assign roles at specific resources too, like websites, virtual machines and subnets, to grant access only to a resource.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The RBAC role that you assign to users, groups, and applications, dictates what resources the user (or application) can manage within that scope.</source>
          <target state="new">The RBAC role that you assign to users, groups, and applications, dictates what resources the user (or application) can manage within that scope.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Azure RBAC Built-In Roles</source>
          <target state="new">Azure RBAC Built-In Roles</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Azure RBAC has three basic roles that apply to all resource types: Owner, Contributor and Reader.</source>
          <target state="new">Azure RBAC has three basic roles that apply to all resource types: Owner, Contributor and Reader.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Owner has full access to all resources including the right to delegate access to others.</source>
          <target state="new">Owner has full access to all resources including the right to delegate access to others.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Contributor can create and manage all types of Azure resources but can’t grant access to others.</source>
          <target state="new">Contributor can create and manage all types of Azure resources but can’t grant access to others.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Reader can only view existing Azure resources.</source>
          <target state="new">Reader can only view existing Azure resources.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The rest of the RBAC roles in Azure allow management of specific Azure resources.</source>
          <target state="new">The rest of the RBAC roles in Azure allow management of specific Azure resources.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For instance, the Virtual Machine Contributor role allows creation and management of virtual machines but does not allow management of the virtual network or the subnet that the virtual machine connects to.</source>
          <target state="new">For instance, the Virtual Machine Contributor role allows creation and management of virtual machines but does not allow management of the virtual network or the subnet that the virtual machine connects to.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>RBAC Built in Roles<ept id="p1">](role-based-access-built-in-roles.md)</ept> lists the built-in RBAC roles available in Azure.</source>
          <target state="new"><bpt id="p1">[</bpt>RBAC Built in Roles<ept id="p1">](role-based-access-built-in-roles.md)</ept> lists the built-in RBAC roles available in Azure.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For each role it specifies the operations to which a built-in role grants access.</source>
          <target state="new">For each role it specifies the operations to which a built-in role grants access.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Azure Resource Hierarchy and Access Inheritance</source>
          <target state="new">Azure Resource Hierarchy and Access Inheritance</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Each subscription in Azure belongs to one and only one directory, each resource group belongs to one and only one subscription, and each resource belongs to one and only one resource group.</source>
          <target state="new">Each subscription in Azure belongs to one and only one directory, each resource group belongs to one and only one subscription, and each resource belongs to one and only one resource group.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Access that you grant at parent scopes is inherited at child scopes.</source>
          <target state="new">Access that you grant at parent scopes is inherited at child scopes.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>If you grant reader role to an Azure AD group at the subscription scope, the members of that group will be able to view every resource groups and every resource in the subscription.</source>
          <target state="new">If you grant reader role to an Azure AD group at the subscription scope, the members of that group will be able to view every resource groups and every resource in the subscription.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If you grant the contributor role to an application at the resource group scope, it will be able to manage resources of all types in that resource group but not other resource groups in the subscription.</source>
          <target state="new">If you grant the contributor role to an application at the resource group scope, it will be able to manage resources of all types in that resource group but not other resource groups in the subscription.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Azure RBAC vs. Classic Subscription Administrator and Co-Admins</source>
          <target state="new">Azure RBAC vs. Classic Subscription Administrator and Co-Admins</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Classic subscription administrator and co-admins have full access to the Azure subscription.</source>
          <target state="new">Classic subscription administrator and co-admins have full access to the Azure subscription.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>They can manage resources using both the Azure classic portal (https://manage.windowsazure.com), and Azure Service Manager APIs, as well as the Azure portal (https://portal.azure.com), and new Azure Resource Manager APIs.</source>
          <target state="new">They can manage resources using both the Azure classic portal (https://manage.windowsazure.com), and Azure Service Manager APIs, as well as the Azure portal (https://portal.azure.com), and new Azure Resource Manager APIs.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>In the RBAC model, classic administrators are assigned the Owner role at the subscription scope.</source>
          <target state="new">In the RBAC model, classic administrators are assigned the Owner role at the subscription scope.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The finer-grained authorization model (Azure RBAC) is supported only by the Azure portal (https://portal.azure.com) and Azure Resource Manager APIs.</source>
          <target state="new">The finer-grained authorization model (Azure RBAC) is supported only by the Azure portal (https://portal.azure.com) and Azure Resource Manager APIs.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Users and applications that are assigned RBAC roles (at subscription/resource group/resource scope) cannot use the classic management portal (http://manage.windowsazure.com) and the Azure Service Management APIs.</source>
          <target state="new">Users and applications that are assigned RBAC roles (at subscription/resource group/resource scope) cannot use the classic management portal (http://manage.windowsazure.com) and the Azure Service Management APIs.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Authorization for Management vs Data Operations</source>
          <target state="new">Authorization for Management vs Data Operations</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The finer-grained authorization model (Azure RBAC) is supported only for management operations of the Azure resources in the Azure portal and Azure Resource Manager APIs.</source>
          <target state="new">The finer-grained authorization model (Azure RBAC) is supported only for management operations of the Azure resources in the Azure portal and Azure Resource Manager APIs.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Not all data level operations for Azure resources can be authorized via RBAC.</source>
          <target state="new">Not all data level operations for Azure resources can be authorized via RBAC.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>For instance, create/read/update/delete of Storage Accounts can be controlled via RBAC, but create/read/update/delete of blobs or tables within the Storage Account cannot yet be controlled via RBAC.</source>
          <target state="new">For instance, create/read/update/delete of Storage Accounts can be controlled via RBAC, but create/read/update/delete of blobs or tables within the Storage Account cannot yet be controlled via RBAC.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Similarly, create/read/update/delete of a SQL DB can be controlled via RBAC but create/read/update/delete of SQL tables within the DB cannot yet be controlled via RBAC.</source>
          <target state="new">Similarly, create/read/update/delete of a SQL DB can be controlled via RBAC but create/read/update/delete of SQL tables within the DB cannot yet be controlled via RBAC.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Manage access using the Azure portal</source>
          <target state="new">Manage access using the Azure portal</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>View Access</source>
          <target state="new">View Access</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Select access settings in the essentials section of the resource group blade.</source>
          <target state="new">Select access settings in the essentials section of the resource group blade.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Users<ept id="p1">**</ept> blade lists all users, groups and applications that have been granted access to the resource group.</source>
          <target state="new">The <bpt id="p1">**</bpt>Users<ept id="p1">**</ept> blade lists all users, groups and applications that have been granted access to the resource group.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Access is either assigned on the resource group or inherited from an assignment on the parent subscription.</source>
          <target state="new">Access is either assigned on the resource group or inherited from an assignment on the parent subscription.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> Classic subscription admins and co-admins are in effect owners of the subscription in the new RBAC model.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> Classic subscription admins and co-admins are in effect owners of the subscription in the new RBAC model.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Add Access</source>
          <target state="new">Add Access</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>Add<ept id="p1">**</ept> icon on the <bpt id="p2">**</bpt>Users<ept id="p2">**</ept> blade.</source>
          <target state="new">Click the <bpt id="p1">**</bpt>Add<ept id="p1">**</ept> icon on the <bpt id="p2">**</bpt>Users<ept id="p2">**</ept> blade.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Select the role that you wish to assign.</source>
          <target state="new">Select the role that you wish to assign.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Search for and select the user, or group, or application that you wish to grant access to.</source>
          <target state="new">Search for and select the user, or group, or application that you wish to grant access to.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Search the directory for users, groups, and applications using display names, email addresses, and object identifiers.<ph id="ph1">![](./media/role-based-access-control-configure/grant-access2.png)</ph></source>
          <target state="new">Search the directory for users, groups, and applications using display names, email addresses, and object identifiers.<ph id="ph1">![](./media/role-based-access-control-configure/grant-access2.png)</ph></target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Remove Access</source>
          <target state="new">Remove Access</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Users<ept id="p1">**</ept> blade, select the role assignment that you wish to remove.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Users<ept id="p1">**</ept> blade, select the role assignment that you wish to remove.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>Remove<ept id="p1">**</ept> icon in the assignment details blade.</source>
          <target state="new">Click the <bpt id="p1">**</bpt>Remove<ept id="p1">**</ept> icon in the assignment details blade.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>yes<ept id="p1">**</ept> to confirm removal.</source>
          <target state="new">Click <bpt id="p1">**</bpt>yes<ept id="p1">**</ept> to confirm removal.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> Inherited assignments can not be removed from child scopes.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> Inherited assignments can not be removed from child scopes.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Navigate to the parent scope and remove such assignments.</source>
          <target state="new">Navigate to the parent scope and remove such assignments.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Manage access using Azure PowerShell</source>
          <target state="new">Manage access using Azure PowerShell</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Access can be managed used Azure RBAC commands in the Azure PowerShell tools.</source>
          <target state="new">Access can be managed used Azure RBAC commands in the Azure PowerShell tools.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">`Get-AzureRmRoleDefinition`</ph> to list RBAC roles available for assignment and to inspect the operations to which they grant access.</source>
          <target state="new">Use <ph id="ph1">`Get-AzureRmRoleDefinition`</ph> to list RBAC roles available for assignment and to inspect the operations to which they grant access.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">`Get-AzureRmRoleAssignment`</ph> to list RBAC access assignments effective at the specified subscription or resource group or resource.</source>
          <target state="new">Use <ph id="ph1">`Get-AzureRmRoleAssignment`</ph> to list RBAC access assignments effective at the specified subscription or resource group or resource.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">`ExpandPrincipalGroups`</ph> parameter to list access assignments to the specified user as well as to the groups of which the user is member.</source>
          <target state="new">Use the <ph id="ph1">`ExpandPrincipalGroups`</ph> parameter to list access assignments to the specified user as well as to the groups of which the user is member.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">`IncludeClassicAdministrators`</ph> parameter to also list classic Subscription Administrator and Co-Administrators.</source>
          <target state="new">Use the <ph id="ph1">`IncludeClassicAdministrators`</ph> parameter to also list classic Subscription Administrator and Co-Administrators.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">`New-AzureRmRoleAssignment`</ph> to grant access to users, groups and applications.</source>
          <target state="new">Use <ph id="ph1">`New-AzureRmRoleAssignment`</ph> to grant access to users, groups and applications.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">`Remove-AzureRmRoleAssignment`</ph> to remove access.</source>
          <target state="new">Use <ph id="ph1">`Remove-AzureRmRoleAssignment`</ph> to remove access.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Manage access using Azure PowerShell<ept id="p1">](role-based-access-control-manage-access-powershell.md)</ept> for more detailed examples of managing access using Azure PowerShell.</source>
          <target state="new">See <bpt id="p1">[</bpt>Manage access using Azure PowerShell<ept id="p1">](role-based-access-control-manage-access-powershell.md)</ept> for more detailed examples of managing access using Azure PowerShell.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Manage access using the Azure Command-Line Interface</source>
          <target state="new">Manage access using the Azure Command-Line Interface</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Access can be managed used Azure RBAC commands in the Azure Command-Line Interface.</source>
          <target state="new">Access can be managed used Azure RBAC commands in the Azure Command-Line Interface.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">`azure role list`</ph> to list RBAC roles available for assignment.</source>
          <target state="new">Use <ph id="ph1">`azure role list`</ph> to list RBAC roles available for assignment.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Use azure role show to inspect the operations to which they grant access.</source>
          <target state="new">Use azure role show to inspect the operations to which they grant access.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">`azure role assignment list`</ph> to list RBAC access assignments effective at the specified subscription or resource group or resource.</source>
          <target state="new">Use <ph id="ph1">`azure role assignment list`</ph> to list RBAC access assignments effective at the specified subscription or resource group or resource.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">`expandPrincipalGroups`</ph> option to list access assignments to the specified user as well as to the groups of which the user is member.</source>
          <target state="new">Use the <ph id="ph1">`expandPrincipalGroups`</ph> option to list access assignments to the specified user as well as to the groups of which the user is member.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Use the  <ph id="ph1">`includeClassicAdministrators`</ph> parameter to also list classic Subscription Administrator and Co-Administrators.</source>
          <target state="new">Use the  <ph id="ph1">`includeClassicAdministrators`</ph> parameter to also list classic Subscription Administrator and Co-Administrators.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">`azure role assignment create`</ph> to grant access to users, groups and applications.</source>
          <target state="new">Use <ph id="ph1">`azure role assignment create`</ph> to grant access to users, groups and applications.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">`azure role assignment delete`</ph> to remove access.</source>
          <target state="new">Use <ph id="ph1">`azure role assignment delete`</ph> to remove access.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Manage access using the Azure CLI<ept id="p1">](role-based-access-control-manage-access-azure-cli.md)</ept> for more detailed examples of managing access using the Azure CLI.</source>
          <target state="new">See <bpt id="p1">[</bpt>Manage access using the Azure CLI<ept id="p1">](role-based-access-control-manage-access-azure-cli.md)</ept> for more detailed examples of managing access using the Azure CLI.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Using the Access Change History Report</source>
          <target state="new">Using the Access Change History Report</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>All access changes happening in your Azure subscriptions get logged in Azure events.</source>
          <target state="new">All access changes happening in your Azure subscriptions get logged in Azure events.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Create a report with Azure PowerShell</source>
          <target state="new">Create a report with Azure PowerShell</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>To create a report of who granted/revoked what kind of access to/from whom on what scope within your Azure subscirptions use the following PowerShell command:</source>
          <target state="new">To create a report of who granted/revoked what kind of access to/from whom on what scope within your Azure subscirptions use the following PowerShell command:</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Create a report with Azure CLI</source>
          <target state="new">Create a report with Azure CLI</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>To create a report of who granted/revoked what kind of access to/from whom on what scope within your Azure subscirptions use the Azure command line interface (CLI) command:</source>
          <target state="new">To create a report of who granted/revoked what kind of access to/from whom on what scope within your Azure subscirptions use the Azure command line interface (CLI) command:</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> Access changes can be queried for the past 90 days (in 15 day batches).</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> Access changes can be queried for the past 90 days (in 15 day batches).</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The following lists all access changes in the subscription for the past 7 days.</source>
          <target state="new">The following lists all access changes in the subscription for the past 7 days.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Export Access Change to a Spreadsheet</source>
          <target state="new">Export Access Change to a Spreadsheet</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>It is convenient to export access changes into a spreadsheet for review.</source>
          <target state="new">It is convenient to export access changes into a spreadsheet for review.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Custom Roles in Azure RBAC</source>
          <target state="new">Custom Roles in Azure RBAC</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Create a custom role in Azure RBAC if none of the built-in roles meets your specific access need.</source>
          <target state="new">Create a custom role in Azure RBAC if none of the built-in roles meets your specific access need.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Custom roles can be created using RBAC command-line tools in Azure PowerShell, and Azure Command-Line Interface.</source>
          <target state="new">Custom roles can be created using RBAC command-line tools in Azure PowerShell, and Azure Command-Line Interface.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Just like built-in roles, custom roles can be assigned to users, groups, and applications at subscription, resource group, and resource scope.</source>
          <target state="new">Just like built-in roles, custom roles can be assigned to users, groups, and applications at subscription, resource group, and resource scope.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Following is an example custom role definition that allows monitoring and restarting virtual machines:</source>
          <target state="new">Following is an example custom role definition that allows monitoring and restarting virtual machines:</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Actions</source>
          <target state="new">Actions</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The actions property of a custom role specifies the Azure operations to which the role grants access.</source>
          <target state="new">The actions property of a custom role specifies the Azure operations to which the role grants access.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>It is a collection of operation strings that identify securable operations of Azure resource providers.</source>
          <target state="new">It is a collection of operation strings that identify securable operations of Azure resource providers.</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Operation strings that contain wildcards (\*) grant access go all operations that match the operation string.</source>
          <target state="new">Operation strings that contain wildcards (\*) grant access go all operations that match the operation string.</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>For instance:</source>
          <target state="new">For instance:</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`*/read`</ph> grants access to read operations for all resource types of all Azure resource providers.</source>
          <target state="new"><ph id="ph1">`*/read`</ph> grants access to read operations for all resource types of all Azure resource providers.</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Microsoft.Network/*/read`</ph> grants access to read operations for all resource types in the Microsoft.Network resource provider of Azure.</source>
          <target state="new"><ph id="ph1">`Microsoft.Network/*/read`</ph> grants access to read operations for all resource types in the Microsoft.Network resource provider of Azure.</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Microsoft.Compute/virtualMachines/*`</ph> grants access to all operations of virtual machines and its child resource types.</source>
          <target state="new"><ph id="ph1">`Microsoft.Compute/virtualMachines/*`</ph> grants access to all operations of virtual machines and its child resource types.</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Microsoft.Web/sites/restart/Action`</ph> grants access to restart websites.</source>
          <target state="new"><ph id="ph1">`Microsoft.Web/sites/restart/Action`</ph> grants access to restart websites.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">`Get-AzureRmProviderOperation`</ph> or <ph id="ph2">`azure provider operations show`</ph> commands to list operations of Azure resource providers.</source>
          <target state="new">Use <ph id="ph1">`Get-AzureRmProviderOperation`</ph> or <ph id="ph2">`azure provider operations show`</ph> commands to list operations of Azure resource providers.</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>You may also use these commands to verify that an operation string is valid, and to expand wildcard operation strings.</source>
          <target state="new">You may also use these commands to verify that an operation string is valid, and to expand wildcard operation strings.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Not Actions</source>
          <target state="new">Not Actions</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>If the set of operations that you wish to allow is easily expressed by excluding specific operations rather than including all operations operations except than the ones you wish to exclude, then use the <bpt id="p1">**</bpt>NotActions<ept id="p1">**</ept> property of a custom role.</source>
          <target state="new">If the set of operations that you wish to allow is easily expressed by excluding specific operations rather than including all operations operations except than the ones you wish to exclude, then use the <bpt id="p1">**</bpt>NotActions<ept id="p1">**</ept> property of a custom role.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The effective access granted by a custom role is computed by excluding the <bpt id="p1">**</bpt>NotActions<ept id="p1">**</ept> operations from the Actions operations.</source>
          <target state="new">The effective access granted by a custom role is computed by excluding the <bpt id="p1">**</bpt>NotActions<ept id="p1">**</ept> operations from the Actions operations.</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Note that if a user is assigned a role that excludes an operation in <bpt id="p1">**</bpt>NotActions<ept id="p1">**</ept> and is assigned a second role that grants access to the same operation – the user will be allowed to perform that operation.</source>
          <target state="new">Note that if a user is assigned a role that excludes an operation in <bpt id="p1">**</bpt>NotActions<ept id="p1">**</ept> and is assigned a second role that grants access to the same operation – the user will be allowed to perform that operation.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>NotActions<ept id="p1">**</ept> is not a deny rule – it is simply a convenient way to create a set of allowed operations when specific operations need to be excluded.</source>
          <target state="new"><bpt id="p1">**</bpt>NotActions<ept id="p1">**</ept> is not a deny rule – it is simply a convenient way to create a set of allowed operations when specific operations need to be excluded.</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>AssignableScopes</source>
          <target state="new">AssignableScopes</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>AssignableScopes<ept id="p1">**</ept> property of the custom role specifies the scopes (subscriptions, or resource groups, or resources) within which the custom role is available for assignment to users, groups, and applications.</source>
          <target state="new">The <bpt id="p1">**</bpt>AssignableScopes<ept id="p1">**</ept> property of the custom role specifies the scopes (subscriptions, or resource groups, or resources) within which the custom role is available for assignment to users, groups, and applications.</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Using <bpt id="p1">**</bpt>AssignableScopes<ept id="p1">**</ept> you can make the custom role available for assignment in only the subscriptions or resource groups that require it, and not clutter user experience for the rest of the subscriptions or resource groups.</source>
          <target state="new">Using <bpt id="p1">**</bpt>AssignableScopes<ept id="p1">**</ept> you can make the custom role available for assignment in only the subscriptions or resource groups that require it, and not clutter user experience for the rest of the subscriptions or resource groups.</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>AssignableScopes<ept id="p1">**</ept> of a custom role also control who is allowed to view, update, and delete the role.</source>
          <target state="new"><bpt id="p1">**</bpt>AssignableScopes<ept id="p1">**</ept> of a custom role also control who is allowed to view, update, and delete the role.</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Following are some valid assignable scopes:</source>
          <target state="new">Following are some valid assignable scopes:</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>“/subscriptions/c276fc76-9cd4-44c9-99a7-4fd71546436e”, “/subscriptions/e91d47c4-76f3-4271-a796-21b4ecfe3624”: makes the role available for assignment in two subscriptions.</source>
          <target state="new">“/subscriptions/c276fc76-9cd4-44c9-99a7-4fd71546436e”, “/subscriptions/e91d47c4-76f3-4271-a796-21b4ecfe3624”: makes the role available for assignment in two subscriptions.</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>“/subscriptions/c276fc76-9cd4-44c9-99a7-4fd71546436e”: makes the role available for assignment in a single subscription.</source>
          <target state="new">“/subscriptions/c276fc76-9cd4-44c9-99a7-4fd71546436e”: makes the role available for assignment in a single subscription.</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>“/subscriptions/c276fc76-9cd4-44c9-99a7-4fd71546436e/resourceGroups/Network”: makes the role available for assignment only in the Network resource group.</source>
          <target state="new">“/subscriptions/c276fc76-9cd4-44c9-99a7-4fd71546436e/resourceGroups/Network”: makes the role available for assignment only in the Network resource group.</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Custom Roles Access Control</source>
          <target state="new">Custom Roles Access Control</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>AssignableScopes<ept id="p1">**</ept> property of the custom role dictates who can view, modify, and delete the role.</source>
          <target state="new">The <bpt id="p1">**</bpt>AssignableScopes<ept id="p1">**</ept> property of the custom role dictates who can view, modify, and delete the role.</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Who can create a custom role?</source>
          <target state="new">Who can create a custom role?</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Custom role creation succeeds only if the user creating the role is allowed to create a custom role for all of the specified <bpt id="p1">**</bpt>AssignableScopes<ept id="p1">**</ept>.</source>
          <target state="new">Custom role creation succeeds only if the user creating the role is allowed to create a custom role for all of the specified <bpt id="p1">**</bpt>AssignableScopes<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Custom role creation succeeds only if the user creating the role can perform <ph id="ph1">`Microsoft.Authorization/roleDefinition/write operation`</ph> on all the <bpt id="p1">**</bpt>AssignableScopes<ept id="p1">**</ept> of the role.</source>
          <target state="new">Custom role creation succeeds only if the user creating the role can perform <ph id="ph1">`Microsoft.Authorization/roleDefinition/write operation`</ph> on all the <bpt id="p1">**</bpt>AssignableScopes<ept id="p1">**</ept> of the role.</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>So, Owners (and User Access Administrators) of subscriptions, resource groups, and resources can create custom roles for use in those scopes.</source>
          <target state="new">So, Owners (and User Access Administrators) of subscriptions, resource groups, and resources can create custom roles for use in those scopes.</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Who can modify a custom role?</source>
          <target state="new">Who can modify a custom role?</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Users who are allowed to update custom roles for all <bpt id="p1">**</bpt>AssignableScopes<ept id="p1">**</ept> of a role can modify that custom role.</source>
          <target state="new">Users who are allowed to update custom roles for all <bpt id="p1">**</bpt>AssignableScopes<ept id="p1">**</ept> of a role can modify that custom role.</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Users that can perform <ph id="ph1">`Microsoft.Authorization/roleDefinition/write`</ph> operation on all the <bpt id="p1">**</bpt>AssignableScopes<ept id="p1">**</ept> of a custom role can modify that custom role.</source>
          <target state="new">Users that can perform <ph id="ph1">`Microsoft.Authorization/roleDefinition/write`</ph> operation on all the <bpt id="p1">**</bpt>AssignableScopes<ept id="p1">**</ept> of a custom role can modify that custom role.</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>For instance, if a custom role is assignable in two Azure subscriptions (i.e. It has two subscriptions in its <bpt id="p1">**</bpt>AssignableScopes<ept id="p1">**</ept> property) - a user must be Owner (or User Access Administrators) of both subscriptions, to be able to modify the custom role.</source>
          <target state="new">For instance, if a custom role is assignable in two Azure subscriptions (i.e. It has two subscriptions in its <bpt id="p1">**</bpt>AssignableScopes<ept id="p1">**</ept> property) - a user must be Owner (or User Access Administrators) of both subscriptions, to be able to modify the custom role.</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Who can view custom roles that are available for assignment at a scope?</source>
          <target state="new">Who can view custom roles that are available for assignment at a scope?</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Users who can perform the <ph id="ph1">`Microsoft.Authorization/roleDefinition/read`</ph> operation at a scope can view the RBAC roles that are available for assignment at that scope.</source>
          <target state="new">Users who can perform the <ph id="ph1">`Microsoft.Authorization/roleDefinition/read`</ph> operation at a scope can view the RBAC roles that are available for assignment at that scope.</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>All built-in roles in Azure RBAC allow viewing of roles that are available for assignment.</source>
          <target state="new">All built-in roles in Azure RBAC allow viewing of roles that are available for assignment.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>