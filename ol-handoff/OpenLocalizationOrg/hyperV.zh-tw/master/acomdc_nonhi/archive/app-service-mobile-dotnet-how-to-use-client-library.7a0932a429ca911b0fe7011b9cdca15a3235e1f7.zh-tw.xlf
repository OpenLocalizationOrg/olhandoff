<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">acomdc_nonhi</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3801895c1aca2be8f7b7fd425de2a0698752ef4b</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1457980" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Working with the App Service Mobile Apps managed client library (Windows | Xamarin) | Microsoft Azure</source>
          <target state="new">Working with the App Service Mobile Apps managed client library (Windows | Xamarin) | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to use a .NET client for Azure App Service Mobile Apps with Windows and Xamarin apps.</source>
          <target state="new">Learn how to use a .NET client for Azure App Service Mobile Apps with Windows and Xamarin apps.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>How to use the managed client for Azure Mobile Apps</source>
          <target state="new">How to use the managed client for Azure Mobile Apps</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="new">Overview</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This guide shows you how to perform common scenarios using the managed client library for Azure App Service Mobile Apps for Windows and Xamarin apps.</source>
          <target state="new">This guide shows you how to perform common scenarios using the managed client library for Azure App Service Mobile Apps for Windows and Xamarin apps.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>If</source>
          <target state="new">If</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>you are new to Mobile Apps, you should consider first completing the <bpt id="p1">[</bpt><ept id="p1">Azure Mobile Apps quickstart]</ept> tutorial.</source>
          <target state="new">you are new to Mobile Apps, you should consider first completing the <bpt id="p1">[</bpt><ept id="p1">Azure Mobile Apps quickstart]</ept> tutorial.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>In this guide, we focus on the client-side</source>
          <target state="new">In this guide, we focus on the client-side</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>managed SDK.</source>
          <target state="new">managed SDK.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>To learn more about the server-side SDKs for Mobile Apps, see the HOWTO documentation for the <bpt id="p1">[</bpt>.NET Server SDK<ept id="p1">](app-service-mobile-dotnet-backend-how-to-use-server-sdk.md)</ept></source>
          <target state="new">To learn more about the server-side SDKs for Mobile Apps, see the HOWTO documentation for the <bpt id="p1">[</bpt>.NET Server SDK<ept id="p1">](app-service-mobile-dotnet-backend-how-to-use-server-sdk.md)</ept></target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>or the <bpt id="p1">[</bpt>Node.js Server SDK<ept id="p1">](app-service-mobile-node-backend-how-to-use-server-sdk.md)</ept>.</source>
          <target state="new">or the <bpt id="p1">[</bpt>Node.js Server SDK<ept id="p1">](app-service-mobile-node-backend-how-to-use-server-sdk.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Reference documentation</source>
          <target state="new">Reference documentation</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The reference documentation for the client SDK is located here: <bpt id="p1">[</bpt><ept id="p1">Azure Mobile Apps .NET Client Reference]</ept>.</source>
          <target state="new">The reference documentation for the client SDK is located here: <bpt id="p1">[</bpt><ept id="p1">Azure Mobile Apps .NET Client Reference]</ept>.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can also find several client samples in the <bpt id="p1">[</bpt><ept id="p1">Azure-Samples GitHub Repository]</ept>.</source>
          <target state="new">You can also find several client samples in the <bpt id="p1">[</bpt><ept id="p1">Azure-Samples GitHub Repository]</ept>.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="setup"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Setup and Prerequisites</source>
          <target state="new"><ph id="ph1">&lt;a name="setup"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Setup and Prerequisites</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>We assume that you have already created and published your Mobile App backend project, which includes at one table.</source>
          <target state="new">We assume that you have already created and published your Mobile App backend project, which includes at one table.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>In the code used in this topic, the</source>
          <target state="new">In the code used in this topic, the</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>table is named <ph id="ph1">`TodoItem`</ph> and it will have the following columns: <ph id="ph2">`Id`</ph>, <ph id="ph3">`Text`</ph>, and <ph id="ph4">`Complete`</ph>.</source>
          <target state="new">table is named <ph id="ph1">`TodoItem`</ph> and it will have the following columns: <ph id="ph2">`Id`</ph>, <ph id="ph3">`Text`</ph>, and <ph id="ph4">`Complete`</ph>.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This is the same table created when you complete the</source>
          <target state="new">This is the same table created when you complete the</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ept id="p1">Azure Mobile Apps quickstart]</ept>.</source>
          <target state="new"><bpt id="p1">[</bpt><ept id="p1">Azure Mobile Apps quickstart]</ept>.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The corresponding typed client-side type in C# is the following:</source>
          <target state="new">The corresponding typed client-side type in C# is the following:</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Note that the <bpt id="p1">[</bpt><ept id="p1">JsonPropertyAttribute]</ept> is used to define the <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> mapping between the client type and the table.</source>
          <target state="new">Note that the <bpt id="p1">[</bpt><ept id="p1">JsonPropertyAttribute]</ept> is used to define the <bpt id="p2">*</bpt>PropertyName<ept id="p2">*</ept> mapping between the client type and the table.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>To learn how to create new tables in your Mobile Apps backend, see the information in the <bpt id="p1">[</bpt>.NET Server SDK HOWTO<ept id="p1">](app-service-mobile-dotnet-backend-how-to-use-server-sdk.md#define-table-controller)</ept></source>
          <target state="new">To learn how to create new tables in your Mobile Apps backend, see the information in the <bpt id="p1">[</bpt>.NET Server SDK HOWTO<ept id="p1">](app-service-mobile-dotnet-backend-how-to-use-server-sdk.md#define-table-controller)</ept></target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>or the <bpt id="p1">[</bpt>Node.js Server SDK HOWTO<ept id="p1">](app-service-mobile-node-backend-how-to-use-server-sdk.md#howto-dynamicschema)</ept>.</source>
          <target state="new">or the <bpt id="p1">[</bpt>Node.js Server SDK HOWTO<ept id="p1">](app-service-mobile-node-backend-how-to-use-server-sdk.md#howto-dynamicschema)</ept>.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>If you</source>
          <target state="new">If you</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>created your Mobile App backend in the Azure Portal using the QuickStart, you can also use the <bpt id="p1">**</bpt>Easy tables<ept id="p1">**</ept> setting in the <bpt id="p2">[</bpt><ept id="p2">Azure portal]</ept>.</source>
          <target state="new">created your Mobile App backend in the Azure Portal using the QuickStart, you can also use the <bpt id="p1">**</bpt>Easy tables<ept id="p1">**</ept> setting in the <bpt id="p2">[</bpt><ept id="p2">Azure portal]</ept>.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="symbolsource"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Work with debug symbols in Visual Studio</source>
          <target state="new"><ph id="ph1">&lt;a name="symbolsource"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Work with debug symbols in Visual Studio</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The symbols for the Microsoft.Azure.Mobile namespace are available on <bpt id="p1">[</bpt><ept id="p1">SymbolSource]</ept>.</source>
          <target state="new">The symbols for the Microsoft.Azure.Mobile namespace are available on <bpt id="p1">[</bpt><ept id="p1">SymbolSource]</ept>.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Refer to the <bpt id="p1">[</bpt><ept id="p1">SymbolSource instructions]</ept>
to integrate SymbolSource with Visual Studio.</source>
          <target state="new">Refer to the <bpt id="p1">[</bpt><ept id="p1">SymbolSource instructions]</ept>
to integrate SymbolSource with Visual Studio.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="create-client"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Create the Mobile App client</source>
          <target state="new"><ph id="ph1">&lt;a name="create-client"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Create the Mobile App client</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The following code creates the <bpt id="p1">[</bpt><ept id="p1">MobileServiceClient]</ept> object that is used to access your Mobile App backend.</source>
          <target state="new">The following code creates the <bpt id="p1">[</bpt><ept id="p1">MobileServiceClient]</ept> object that is used to access your Mobile App backend.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>In the code above, replace <ph id="ph1">`MOBILE_APP_URL`</ph> with the URL of the Mobile App backend, which is found in the blade for your Mobile App backend in the <bpt id="p1">[</bpt><ept id="p1">Azure portal]</ept>.</source>
          <target state="new">In the code above, replace <ph id="ph1">`MOBILE_APP_URL`</ph> with the URL of the Mobile App backend, which is found in the blade for your Mobile App backend in the <bpt id="p1">[</bpt><ept id="p1">Azure portal]</ept>.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>It is normal and recommended that the client instance be a Singleton.</source>
          <target state="new">It is normal and recommended that the client instance be a Singleton.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Work with Tables</source>
          <target state="new">Work with Tables</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The following section details how to search and retrieve records and modify the data within the table.</source>
          <target state="new">The following section details how to search and retrieve records and modify the data within the table.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The following</source>
          <target state="new">The following</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>topics are covered:</source>
          <target state="new">topics are covered:</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Create a table reference</source>
          <target state="new">Create a table reference</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Query data</source>
          <target state="new">Query data</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Filter returned data</source>
          <target state="new">Filter returned data</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Sort returned data</source>
          <target state="new">Sort returned data</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Return data in pages</source>
          <target state="new">Return data in pages</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Select specific columns</source>
          <target state="new">Select specific columns</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Look up a record by Id</source>
          <target state="new">Look up a record by Id</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Dealing with untyped queries</source>
          <target state="new">Dealing with untyped queries</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Inserting data</source>
          <target state="new">Inserting data</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Updating data</source>
          <target state="new">Updating data</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Deleting data</source>
          <target state="new">Deleting data</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Conflict Resolution and Optimistic Concurrency</source>
          <target state="new">Conflict Resolution and Optimistic Concurrency</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Binding to a Windows User Interface</source>
          <target state="new">Binding to a Windows User Interface</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="instantiating"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Create a table reference</source>
          <target state="new"><ph id="ph1">&lt;a name="instantiating"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Create a table reference</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>All of the code that accesses or modifies data in a backend table calls functions on the <ph id="ph1">`MobileServiceTable`</ph> object.</source>
          <target state="new">All of the code that accesses or modifies data in a backend table calls functions on the <ph id="ph1">`MobileServiceTable`</ph> object.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>You get a reference to the table by calling the</source>
          <target state="new">You get a reference to the table by calling the</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ept id="p1">GetTable]</ept> method on an instance of the <ph id="ph1">`MobileServiceClient`</ph>, as follows:</source>
          <target state="new"><bpt id="p1">[</bpt><ept id="p1">GetTable]</ept> method on an instance of the <ph id="ph1">`MobileServiceClient`</ph>, as follows:</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>This is the typed serialization model.</source>
          <target state="new">This is the typed serialization model.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>An untyped serialization model is also supported.</source>
          <target state="new">An untyped serialization model is also supported.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The following <bpt id="p1">[</bpt><ept id="p1">creates a reference to an untyped table]</ept>:</source>
          <target state="new">The following <bpt id="p1">[</bpt><ept id="p1">creates a reference to an untyped table]</ept>:</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>In untyped queries, you must specify the underlying OData query string.</source>
          <target state="new">In untyped queries, you must specify the underlying OData query string.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="querying"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Query data from your Mobile App</source>
          <target state="new"><ph id="ph1">&lt;a name="querying"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Query data from your Mobile App</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>This section describes how to issue queries to the Mobile App backend, which includes the following functionality:</source>
          <target state="new">This section describes how to issue queries to the Mobile App backend, which includes the following functionality:</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Filter returned data</source>
          <target state="new">Filter returned data</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Sort returned data</source>
          <target state="new">Sort returned data</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Return data in pages</source>
          <target state="new">Return data in pages</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Select specific columns</source>
          <target state="new">Select specific columns</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Look up data by ID</source>
          <target state="new">Look up data by ID</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> A server-driven page size is enforced to prevent all rows from being returned.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> A server-driven page size is enforced to prevent all rows from being returned.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>This keeps default requests</source>
          <target state="new">This keeps default requests</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>for large data sets from negatively impacting the service.</source>
          <target state="new">for large data sets from negatively impacting the service.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>To return more than 50 rows, use the <ph id="ph1">`Take`</ph> method, as</source>
          <target state="new">To return more than 50 rows, use the <ph id="ph1">`Take`</ph> method, as</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>described in <bpt id="p1">[</bpt><ept id="p1">Return data in pages]</ept>.</source>
          <target state="new">described in <bpt id="p1">[</bpt><ept id="p1">Return data in pages]</ept>.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="filtering"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Filter returned data</source>
          <target state="new"><ph id="ph1">&lt;a name="filtering"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Filter returned data</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The following code illustrates how to filter data by including a <ph id="ph1">`Where`</ph> clause in a query.</source>
          <target state="new">The following code illustrates how to filter data by including a <ph id="ph1">`Where`</ph> clause in a query.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>It returns all items from</source>
          <target state="new">It returns all items from</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`todoTable`</ph> whose <ph id="ph2">`Complete`</ph> property is equal to <ph id="ph3">`false`</ph>.</source>
          <target state="new"><ph id="ph1">`todoTable`</ph> whose <ph id="ph2">`Complete`</ph> property is equal to <ph id="ph3">`false`</ph>.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><ept id="p1">Where]</ept> function applies a row filtering predicate to</source>
          <target state="new">The <bpt id="p1">[</bpt><ept id="p1">Where]</ept> function applies a row filtering predicate to</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>the query against the table.</source>
          <target state="new">the query against the table.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>You can view the URI of the request sent to the backend by using message inspection software, such as browser developer</source>
          <target state="new">You can view the URI of the request sent to the backend by using message inspection software, such as browser developer</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>tools or <bpt id="p1">[</bpt><ept id="p1">Fiddler]</ept>.</source>
          <target state="new">tools or <bpt id="p1">[</bpt><ept id="p1">Fiddler]</ept>.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>If you look at the request URI below, notice that the query string is modified:</source>
          <target state="new">If you look at the request URI below, notice that the query string is modified:</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>This OData request is translated into an SQL query by the Server SDK that is similar to this:</source>
          <target state="new">This OData request is translated into an SQL query by the Server SDK that is similar to this:</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The function which is passed to the <ph id="ph1">`Where`</ph> method can have an arbitrary number of conditions.</source>
          <target state="new">The function which is passed to the <ph id="ph1">`Where`</ph> method can have an arbitrary number of conditions.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>For example, the line below:</source>
          <target state="new">For example, the line below:</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Would be translated into an SQL query by the Server SDK that is similar to this:</source>
          <target state="new">Would be translated into an SQL query by the Server SDK that is similar to this:</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`WHERE`</ph> statement above will find items with <ph id="ph2">`Complete`</ph> status set to false with non-null <ph id="ph3">`Text`</ph>.</source>
          <target state="new">The <ph id="ph1">`WHERE`</ph> statement above will find items with <ph id="ph2">`Complete`</ph> status set to false with non-null <ph id="ph3">`Text`</ph>.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>This query can also be split into multiple clauses:</source>
          <target state="new">This query can also be split into multiple clauses:</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The two methods are equivalent and may be used interchangeably.</source>
          <target state="new">The two methods are equivalent and may be used interchangeably.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The former option&amp;mdash;of concatenating</source>
          <target state="new">The former option&amp;mdash;of concatenating</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>multiple predicates in one query&amp;mdash;is more compact and recommended.</source>
          <target state="new">multiple predicates in one query&amp;mdash;is more compact and recommended.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Where`</ph> clause supports operations that be translated into the OData subset.</source>
          <target state="new">The <ph id="ph1">`Where`</ph> clause supports operations that be translated into the OData subset.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>This includes relational</source>
          <target state="new">This includes relational</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>operators (==, !=, &lt;, &lt;=, &gt;, &gt;=), arithmetic operators (+, -, /, *, %),</source>
          <target state="new">operators (==, !=, &lt;, &lt;=, &gt;, &gt;=), arithmetic operators (+, -, /, *, %),</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>number precision (Math.Floor, Math.Ceiling), string functions (Length, Substring, Replace, IndexOf, StartsWith,</source>
          <target state="new">number precision (Math.Floor, Math.Ceiling), string functions (Length, Substring, Replace, IndexOf, StartsWith,</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>EndsWith), date properties (Year, Month, Day, Hour, Minute, Second), access properties of an object, and</source>
          <target state="new">EndsWith), date properties (Year, Month, Day, Hour, Minute, Second), access properties of an object, and</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>expressions combining all of these.</source>
          <target state="new">expressions combining all of these.</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>When considering what the Server SDK supports, you can consider</source>
          <target state="new">When considering what the Server SDK supports, you can consider</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>the <bpt id="p1">[</bpt><ept id="p1">OData v3 Documentation]</ept>.</source>
          <target state="new">the <bpt id="p1">[</bpt><ept id="p1">OData v3 Documentation]</ept>.</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="sorting"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Sort returned data</source>
          <target state="new"><ph id="ph1">&lt;a name="sorting"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Sort returned data</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The following code illustrates how to sort data by including an <bpt id="p1">[</bpt><ept id="p1">OrderBy]</ept> or <bpt id="p2">[</bpt><ept id="p2">OrderByDescending]</ept> function</source>
          <target state="new">The following code illustrates how to sort data by including an <bpt id="p1">[</bpt><ept id="p1">OrderBy]</ept> or <bpt id="p2">[</bpt><ept id="p2">OrderByDescending]</ept> function</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>in the query.</source>
          <target state="new">in the query.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>It returns items from <ph id="ph1">`todoTable`</ph> sorted ascending by the <ph id="ph2">`Text`</ph> field.</source>
          <target state="new">It returns items from <ph id="ph1">`todoTable`</ph> sorted ascending by the <ph id="ph2">`Text`</ph> field.</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="paging"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Return data in pages</source>
          <target state="new"><ph id="ph1">&lt;a name="paging"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Return data in pages</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>By default, the backend returns only the first 50 rows.</source>
          <target state="new">By default, the backend returns only the first 50 rows.</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>You can increase the number of returned rows by calling the <bpt id="p1">[</bpt><ept id="p1">Take]</ept> method.</source>
          <target state="new">You can increase the number of returned rows by calling the <bpt id="p1">[</bpt><ept id="p1">Take]</ept> method.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">`Take`</ph> along with the <bpt id="p1">[</bpt><ept id="p1">Skip]</ept> method</source>
          <target state="new">Use <ph id="ph1">`Take`</ph> along with the <bpt id="p1">[</bpt><ept id="p1">Skip]</ept> method</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>to request a specific "page" of the total dataset returned by the query.</source>
          <target state="new">to request a specific "page" of the total dataset returned by the query.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The following query, when executed, returns the top three items in the table.</source>
          <target state="new">The following query, when executed, returns the top three items in the table.</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The following revised query skips the first three results and returns the next three after that.</source>
          <target state="new">The following revised query skips the first three results and returns the next three after that.</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>This is effectively the second "page" of data, where the page size is three items.</source>
          <target state="new">This is effectively the second "page" of data, where the page size is three items.</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>You can also use the <bpt id="p1">[</bpt><ept id="p1">IncludeTotalCount]</ept> method to ensure that the query will get the total count for <ph id="ph1">&lt;i&gt;</ph>all<ph id="ph2">&lt;/i&gt;</ph> the records that would have been returned, ignoring any take</source>
          <target state="new">You can also use the <bpt id="p1">[</bpt><ept id="p1">IncludeTotalCount]</ept> method to ensure that the query will get the total count for <ph id="ph1">&lt;i&gt;</ph>all<ph id="ph2">&lt;/i&gt;</ph> the records that would have been returned, ignoring any take</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>paging/limit clause specified:</source>
          <target state="new">paging/limit clause specified:</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>This is a simplified scenario of passing hard-coded paging values to the <ph id="ph1">`Take`</ph> and <ph id="ph2">`Skip`</ph> methods.</source>
          <target state="new">This is a simplified scenario of passing hard-coded paging values to the <ph id="ph1">`Take`</ph> and <ph id="ph2">`Skip`</ph> methods.</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>In a real-world app, you can use queries similar to the above with a pager</source>
          <target state="new">In a real-world app, you can use queries similar to the above with a pager</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>control or comparable UI to let users navigate to previous and next pages.</source>
          <target state="new">control or comparable UI to let users navigate to previous and next pages.</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph>To override the 50 row limit in a Mobile App backend, you must also apply the <bpt id="p1">[</bpt><ept id="p1">EnableQueryAttribute]</ept> to the public GET method and specify the paging behavior.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph>To override the 50 row limit in a Mobile App backend, you must also apply the <bpt id="p1">[</bpt><ept id="p1">EnableQueryAttribute]</ept> to the public GET method and specify the paging behavior.</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>When</source>
          <target state="new">When</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>applied to the method, the following sets the maximum returned rows to 1000:</source>
          <target state="new">applied to the method, the following sets the maximum returned rows to 1000:</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>[EnableQuery(MaxTop=1000)]</source>
          <target state="new">[EnableQuery(MaxTop=1000)]</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="selecting"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Select specific columns</source>
          <target state="new"><ph id="ph1">&lt;a name="selecting"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Select specific columns</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>You can specify which set of properties to include in the results by adding a <bpt id="p1">[</bpt><ept id="p1">Select]</ept> clause to your query.</source>
          <target state="new">You can specify which set of properties to include in the results by adding a <bpt id="p1">[</bpt><ept id="p1">Select]</ept> clause to your query.</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>For example, the following code shows how to select just one field</source>
          <target state="new">For example, the following code shows how to select just one field</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>and also how to select and format multiple fields:</source>
          <target state="new">and also how to select and format multiple fields:</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>All the functions described so far are additive, so we can just keep calling them and we'll each time affect more of the query.</source>
          <target state="new">All the functions described so far are additive, so we can just keep calling them and we'll each time affect more of the query.</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>One more example:</source>
          <target state="new">One more example:</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="lookingup"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Look up data by ID</source>
          <target state="new"><ph id="ph1">&lt;a name="lookingup"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Look up data by ID</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><ept id="p1">LookupAsync]</ept> function can be used to look up objects from the database with a particular ID.</source>
          <target state="new">The <bpt id="p1">[</bpt><ept id="p1">LookupAsync]</ept> function can be used to look up objects from the database with a particular ID.</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="untypedqueries"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Execute untyped queries</source>
          <target state="new"><ph id="ph1">&lt;a name="untypedqueries"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Execute untyped queries</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>When executing a query using an untyped table object, you must explicitly specify the OData query string by calling <bpt id="p1">[</bpt><ept id="p1">ReadAsync]</ept>, as in the following example:</source>
          <target state="new">When executing a query using an untyped table object, you must explicitly specify the OData query string by calling <bpt id="p1">[</bpt><ept id="p1">ReadAsync]</ept>, as in the following example:</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>You get back JSON values that you can use like a property bag.</source>
          <target state="new">You get back JSON values that you can use like a property bag.</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>For more information on JToken and Newtonsoft Json.NET, see the <bpt id="p1">[</bpt><ept id="p1">Json.NET]</ept> site.</source>
          <target state="new">For more information on JToken and Newtonsoft Json.NET, see the <bpt id="p1">[</bpt><ept id="p1">Json.NET]</ept> site.</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="inserting"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Insert data into a Mobile App backend</source>
          <target state="new"><ph id="ph1">&lt;a name="inserting"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Insert data into a Mobile App backend</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>All client types must contain a member named <bpt id="p1">**</bpt>Id<ept id="p1">**</ept>, which is by default a string.</source>
          <target state="new">All client types must contain a member named <bpt id="p1">**</bpt>Id<ept id="p1">**</ept>, which is by default a string.</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>This <bpt id="p1">**</bpt>Id<ept id="p1">**</ept> is required to perform CRUD operations and for offline.</source>
          <target state="new">This <bpt id="p1">**</bpt>Id<ept id="p1">**</ept> is required to perform CRUD operations and for offline.</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The following</source>
          <target state="new">The following</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>code illustrates how to use the <bpt id="p1">[</bpt><ept id="p1">InsertAsync]</ept> method to insert new rows into a table.</source>
          <target state="new">code illustrates how to use the <bpt id="p1">[</bpt><ept id="p1">InsertAsync]</ept> method to insert new rows into a table.</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The parameter contains the data to be inserted as a .NET object.</source>
          <target state="new">The parameter contains the data to be inserted as a .NET object.</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>If a unique custom ID value is not included in the <ph id="ph1">`todoItem`</ph> passed to the <ph id="ph2">`todoTable.InsertAsync`</ph> call, a value for ID is generated by the server and is set in</source>
          <target state="new">If a unique custom ID value is not included in the <ph id="ph1">`todoItem`</ph> passed to the <ph id="ph2">`todoTable.InsertAsync`</ph> call, a value for ID is generated by the server and is set in</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>the <ph id="ph1">`todoItem`</ph> object returned to the client.</source>
          <target state="new">the <ph id="ph1">`todoItem`</ph> object returned to the client.</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>To insert untyped data, you may take advantage of Json.NET as shown below.</source>
          <target state="new">To insert untyped data, you may take advantage of Json.NET as shown below.</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Here is an example using an email address as a unique string id.</source>
          <target state="new">Here is an example using an email address as a unique string id.</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Working with ID values</source>
          <target state="new">Working with ID values</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Mobile Apps supports unique custom string values for the table's <bpt id="p1">**</bpt>id<ept id="p1">**</ept> column.</source>
          <target state="new">Mobile Apps supports unique custom string values for the table's <bpt id="p1">**</bpt>id<ept id="p1">**</ept> column.</target>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>This allows applications to use custom values such as email addresses or user names for the ID.</source>
          <target state="new">This allows applications to use custom values such as email addresses or user names for the ID.</target>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>String IDs provide you with the following benefits:</source>
          <target state="new">String IDs provide you with the following benefits:</target>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>IDs are generated without making a round-trip to the database.</source>
          <target state="new">IDs are generated without making a round-trip to the database.</target>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Records are easier to merge from different tables or databases.</source>
          <target state="new">Records are easier to merge from different tables or databases.</target>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>IDs values can integrate better with an application's logic.</source>
          <target state="new">IDs values can integrate better with an application's logic.</target>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>When a string ID value is not set on an inserted record, the Mobile App backend generates a unique value for the ID.</source>
          <target state="new">When a string ID value is not set on an inserted record, the Mobile App backend generates a unique value for the ID.</target>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">[</bpt><ept id="p1">Guid.NewGuid]</ept> method</source>
          <target state="new">You can use the <bpt id="p1">[</bpt><ept id="p1">Guid.NewGuid]</ept> method</target>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>to generate your own ID values, either on the client or in the backend.</source>
          <target state="new">to generate your own ID values, either on the client or in the backend.</target>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="modifying"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Modify data in a Mobile App backend</source>
          <target state="new"><ph id="ph1">&lt;a name="modifying"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Modify data in a Mobile App backend</target>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The following code illustrates how to use the <bpt id="p1">[</bpt><ept id="p1">UpdateAsync]</ept> method to update an existing record with the same ID with new information.</source>
          <target state="new">The following code illustrates how to use the <bpt id="p1">[</bpt><ept id="p1">UpdateAsync]</ept> method to update an existing record with the same ID with new information.</target>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The</source>
          <target state="new">The</target>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>parameter contains the data to be updated as a .NET object.</source>
          <target state="new">parameter contains the data to be updated as a .NET object.</target>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>To insert untyped data, you may take advantage of <bpt id="p1">[</bpt><ept id="p1">Json.NET]</ept> as follows:</source>
          <target state="new">To insert untyped data, you may take advantage of <bpt id="p1">[</bpt><ept id="p1">Json.NET]</ept> as follows:</target>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">`id`</ph> field must be specified when making an update.</source>
          <target state="new">An <ph id="ph1">`id`</ph> field must be specified when making an update.</target>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>This is how the backend identifies which instance to update.</source>
          <target state="new">This is how the backend identifies which instance to update.</target>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`id`</ph> field can be obtained from the</source>
          <target state="new">The <ph id="ph1">`id`</ph> field can be obtained from the</target>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>result of the <ph id="ph1">`InsertAsync`</ph> call.</source>
          <target state="new">result of the <ph id="ph1">`InsertAsync`</ph> call.</target>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">`ArgumentException`</ph> is raised if you try to update an item without providing the <ph id="ph2">`id`</ph> value.</source>
          <target state="new">An <ph id="ph1">`ArgumentException`</ph> is raised if you try to update an item without providing the <ph id="ph2">`id`</ph> value.</target>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="deleting"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Delete data in a Mobile App backend</source>
          <target state="new"><ph id="ph1">&lt;a name="deleting"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Delete data in a Mobile App backend</target>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The following code illustrates how to use the <bpt id="p1">[</bpt><ept id="p1">DeleteAsync]</ept> method to delete an existing instance.</source>
          <target state="new">The following code illustrates how to use the <bpt id="p1">[</bpt><ept id="p1">DeleteAsync]</ept> method to delete an existing instance.</target>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The instance is identified by the <ph id="ph1">`id`</ph> field set on the <ph id="ph2">`todoItem`</ph>.</source>
          <target state="new">The instance is identified by the <ph id="ph1">`id`</ph> field set on the <ph id="ph2">`todoItem`</ph>.</target>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>To delete untyped data, you may take advantage of Json.NET as follows:</source>
          <target state="new">To delete untyped data, you may take advantage of Json.NET as follows:</target>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Note that when you make a delete request, an ID must be specified.</source>
          <target state="new">Note that when you make a delete request, an ID must be specified.</target>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Other properties are not passed to the service or are ignored at the service.</source>
          <target state="new">Other properties are not passed to the service or are ignored at the service.</target>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The result of a</source>
          <target state="new">The result of a</target>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`DeleteAsync`</ph> call is usually <ph id="ph2">`null`</ph>.</source>
          <target state="new"><ph id="ph1">`DeleteAsync`</ph> call is usually <ph id="ph2">`null`</ph>.</target>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The ID to pass in can be obtained from the result of the <ph id="ph1">`InsertAsync`</ph> call.</source>
          <target state="new">The ID to pass in can be obtained from the result of the <ph id="ph1">`InsertAsync`</ph> call.</target>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`MobileServiceInvalidOperationException`</ph> is</source>
          <target state="new">A <ph id="ph1">`MobileServiceInvalidOperationException`</ph> is</target>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>thrown when you try to delete an item without specifying the <ph id="ph1">`id`</ph> field.</source>
          <target state="new">thrown when you try to delete an item without specifying the <ph id="ph1">`id`</ph> field.</target>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="optimisticconcurrency"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Use Optimistic Concurrency for conflict resolution</source>
          <target state="new"><ph id="ph1">&lt;a name="optimisticconcurrency"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Use Optimistic Concurrency for conflict resolution</target>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Two or more clients may write changes to the same item at the same time.</source>
          <target state="new">Two or more clients may write changes to the same item at the same time.</target>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Without any conflict detection, the last write would overwrite any previous updates even</source>
          <target state="new">Without any conflict detection, the last write would overwrite any previous updates even</target>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>if this was not the desired result.</source>
          <target state="new">if this was not the desired result.</target>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>Optimistic concurrency control<ept id="p1">*</ept> assumes that each transaction can commit and therefore does not use any resource locking.</source>
          <target state="new"><bpt id="p1">*</bpt>Optimistic concurrency control<ept id="p1">*</ept> assumes that each transaction can commit and therefore does not use any resource locking.</target>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Before</source>
          <target state="new">Before</target>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>committing a transaction, optimistic concurrency control verifies that no other transaction has modified the data.</source>
          <target state="new">committing a transaction, optimistic concurrency control verifies that no other transaction has modified the data.</target>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>If the data has been modified, the committing</source>
          <target state="new">If the data has been modified, the committing</target>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>transaction is rolled back.</source>
          <target state="new">transaction is rolled back.</target>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Mobile Apps supports optimistic concurrency control by tracking changes to each item using the <ph id="ph1">`version`</ph> system property column that is defined for each table</source>
          <target state="new">Mobile Apps supports optimistic concurrency control by tracking changes to each item using the <ph id="ph1">`version`</ph> system property column that is defined for each table</target>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>in your Mobile App backend.</source>
          <target state="new">in your Mobile App backend.</target>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Each time a record is updated, Mobile Apps sets the <ph id="ph1">`version`</ph> property for that record to a new value.</source>
          <target state="new">Each time a record is updated, Mobile Apps sets the <ph id="ph1">`version`</ph> property for that record to a new value.</target>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>During each update request,</source>
          <target state="new">During each update request,</target>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>the <ph id="ph1">`\version`</ph> property of the record included with the request is compared to the same property for the record on the server.</source>
          <target state="new">the <ph id="ph1">`\version`</ph> property of the record included with the request is compared to the same property for the record on the server.</target>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>If the version passed with the</source>
          <target state="new">If the version passed with the</target>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>request does not match the backend, then the client library raises a <ph id="ph1">`MobileServicePreconditionFailedException&lt;T&gt;`</ph> exception.</source>
          <target state="new">request does not match the backend, then the client library raises a <ph id="ph1">`MobileServicePreconditionFailedException&lt;T&gt;`</ph> exception.</target>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>The type included with the exception</source>
          <target state="new">The type included with the exception</target>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>is the record from the backend containing the servers version of the record.</source>
          <target state="new">is the record from the backend containing the servers version of the record.</target>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>The application can then use this information to decide whether to execute the update</source>
          <target state="new">The application can then use this information to decide whether to execute the update</target>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>request again with the correct <ph id="ph1">`version`</ph> value from the backend to commit changes.</source>
          <target state="new">request again with the correct <ph id="ph1">`version`</ph> value from the backend to commit changes.</target>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Define a column on the table class for the <ph id="ph1">`version`</ph> system property to enable optimistic concurrency.</source>
          <target state="new">Define a column on the table class for the <ph id="ph1">`version`</ph> system property to enable optimistic concurrency.</target>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>for example:</source>
          <target state="new">for example:</target>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Applications using untyped tables enable optimistic concurrency by setting the <ph id="ph1">`Version`</ph> flag on the <ph id="ph2">`SystemProperties`</ph> of the table as follows.</source>
          <target state="new">Applications using untyped tables enable optimistic concurrency by setting the <ph id="ph1">`Version`</ph> flag on the <ph id="ph2">`SystemProperties`</ph> of the table as follows.</target>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>In addition to enabling optimistic concurrency, you must also catch the <ph id="ph1">`MobileServicePreconditionFailedException&lt;T&gt;`</ph> exception in your code when calling <bpt id="p1">[</bpt><ept id="p1">UpdateAsync]</ept>.</source>
          <target state="new">In addition to enabling optimistic concurrency, you must also catch the <ph id="ph1">`MobileServicePreconditionFailedException&lt;T&gt;`</ph> exception in your code when calling <bpt id="p1">[</bpt><ept id="p1">UpdateAsync]</ept>.</target>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Resolve the conflict by applying the correct <ph id="ph1">`version`</ph> to the updated record and call <bpt id="p1">[</bpt><ept id="p1">UpdateAsync]</ept> with the resolved record.</source>
          <target state="new">Resolve the conflict by applying the correct <ph id="ph1">`version`</ph> to the updated record and call <bpt id="p1">[</bpt><ept id="p1">UpdateAsync]</ept> with the resolved record.</target>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>The following code shows how to resolve</source>
          <target state="new">The following code shows how to resolve</target>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>a write conflict once detected:</source>
          <target state="new">a write conflict once detected:</target>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt><ept id="p1">Offline Data Sync in Azure Mobile Apps]</ept> topic.</source>
          <target state="new">For more information, see the <bpt id="p1">[</bpt><ept id="p1">Offline Data Sync in Azure Mobile Apps]</ept> topic.</target>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="binding"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Bind Mobile Apps data to a Windows user interface</source>
          <target state="new"><ph id="ph1">&lt;a name="binding"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Bind Mobile Apps data to a Windows user interface</target>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>This section shows how to display returned data objects using UI elements in a Windows app.</source>
          <target state="new">This section shows how to display returned data objects using UI elements in a Windows app.</target>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>You can run the following example code to</source>
          <target state="new">You can run the following example code to</target>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>bind to the source of the list with a query for incomplete items in <ph id="ph1">`todoTable`</ph> and display it in a very simple list.</source>
          <target state="new">bind to the source of the list with a query for incomplete items in <ph id="ph1">`todoTable`</ph> and display it in a very simple list.</target>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ept id="p1">MobileServiceCollection]</ept>
creates a Mobile Apps-aware binding collection.</source>
          <target state="new"><bpt id="p1">[</bpt><ept id="p1">MobileServiceCollection]</ept>
creates a Mobile Apps-aware binding collection.</target>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Some controls in the managed runtime support an interface called <bpt id="p1">[</bpt><ept id="p1">ISupportIncrementalLoading]</ept>.</source>
          <target state="new">Some controls in the managed runtime support an interface called <bpt id="p1">[</bpt><ept id="p1">ISupportIncrementalLoading]</ept>.</target>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>This interface allows controls to request extra</source>
          <target state="new">This interface allows controls to request extra</target>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>data when the user scrolls.</source>
          <target state="new">data when the user scrolls.</target>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>There is built-in support for this interface for universal Windows apps via <bpt id="p1">[</bpt><ept id="p1">MobileServiceIncrementalLoadingCollection]</ept>,</source>
          <target state="new">There is built-in support for this interface for universal Windows apps via <bpt id="p1">[</bpt><ept id="p1">MobileServiceIncrementalLoadingCollection]</ept>,</target>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>which automatically handles the calls from the controls.</source>
          <target state="new">which automatically handles the calls from the controls.</target>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>To use <ph id="ph1">`MobileServiceIncrementalLoadingCollection`</ph> in Windows apps, do the following:</source>
          <target state="new">To use <ph id="ph1">`MobileServiceIncrementalLoadingCollection`</ph> in Windows apps, do the following:</target>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>To use the new collection on Windows Phone 8 and "Silverlight" apps, use the <ph id="ph1">`ToCollection`</ph> extension methods on <ph id="ph2">`IMobileServiceTableQuery&lt;T&gt;`</ph></source>
          <target state="new">To use the new collection on Windows Phone 8 and "Silverlight" apps, use the <ph id="ph1">`ToCollection`</ph> extension methods on <ph id="ph2">`IMobileServiceTableQuery&lt;T&gt;`</ph></target>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>and <ph id="ph1">`IMobileServiceTable&lt;T&gt;`</ph>.</source>
          <target state="new">and <ph id="ph1">`IMobileServiceTable&lt;T&gt;`</ph>.</target>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>To actually load data, call <ph id="ph1">`LoadMoreItemsAsync()`</ph>.</source>
          <target state="new">To actually load data, call <ph id="ph1">`LoadMoreItemsAsync()`</ph>.</target>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>When you use the collection created by calling <ph id="ph1">`ToCollectionAsync`</ph> or <ph id="ph2">`ToCollection`</ph>, you get a collection which can be bound to UI controls.</source>
          <target state="new">When you use the collection created by calling <ph id="ph1">`ToCollectionAsync`</ph> or <ph id="ph2">`ToCollection`</ph>, you get a collection which can be bound to UI controls.</target>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>This collection is paging-aware, i.e., a control can ask the collection to "load more items", and the collection will do it for the control.</source>
          <target state="new">This collection is paging-aware, i.e., a control can ask the collection to "load more items", and the collection will do it for the control.</target>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>At that point there is no user code involved, the control will start the flow.</source>
          <target state="new">At that point there is no user code involved, the control will start the flow.</target>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>However, since the collection is loading data from the network,</source>
          <target state="new">However, since the collection is loading data from the network,</target>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>it's expected that some times this loading will fail.</source>
          <target state="new">it's expected that some times this loading will fail.</target>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>To handle such failures, you may override the <ph id="ph1">`OnException`</ph> method on</source>
          <target state="new">To handle such failures, you may override the <ph id="ph1">`OnException`</ph> method on</target>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`MobileServiceIncrementalLoadingCollection`</ph> to handle exceptions resulting from calls to <ph id="ph2">`LoadMoreItemsAsync`</ph> performed by controls.</source>
          <target state="new"><ph id="ph1">`MobileServiceIncrementalLoadingCollection`</ph> to handle exceptions resulting from calls to <ph id="ph2">`LoadMoreItemsAsync`</ph> performed by controls.</target>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>Finally, imagine that your table has many fields, but you only want to display some of them in your control.</source>
          <target state="new">Finally, imagine that your table has many fields, but you only want to display some of them in your control.</target>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>You may use the guidance in the</source>
          <target state="new">You may use the guidance in the</target>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>section "<bpt id="p1">[</bpt>Select specific columns<ept id="p1">](#selecting)</ept>" above to select specific columns to display in the UI.</source>
          <target state="new">section "<bpt id="p1">[</bpt>Select specific columns<ept id="p1">](#selecting)</ept>" above to select specific columns to display in the UI.</target>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="#customapi"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Work with a custom API</source>
          <target state="new"><ph id="ph1">&lt;a name="#customapi"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Work with a custom API</target>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>A custom API enables you to define custom endpoints that expose server functionality that does not map to an insert, update, delete, or read operation.</source>
          <target state="new">A custom API enables you to define custom endpoints that expose server functionality that does not map to an insert, update, delete, or read operation.</target>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>By using a</source>
          <target state="new">By using a</target>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>custom API, you can have more control over messaging, including reading and setting HTTP message headers and defining a message body format other than JSON.</source>
          <target state="new">custom API, you can have more control over messaging, including reading and setting HTTP message headers and defining a message body format other than JSON.</target>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>You call a custom API by calling one of the <bpt id="p1">[</bpt><ept id="p1">InvokeApiAsync]</ept> method overloads on the client.</source>
          <target state="new">You call a custom API by calling one of the <bpt id="p1">[</bpt><ept id="p1">InvokeApiAsync]</ept> method overloads on the client.</target>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>For example, the following line of code sends a POST request to</source>
          <target state="new">For example, the following line of code sends a POST request to</target>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>the <bpt id="p1">**</bpt>completeAll<ept id="p1">**</ept> API on the backend:</source>
          <target state="new">the <bpt id="p1">**</bpt>completeAll<ept id="p1">**</ept> API on the backend:</target>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>Note that this a typed method call, which requires that the <bpt id="p1">**</bpt>MarkAllResult<ept id="p1">**</ept> return type be defined.</source>
          <target state="new">Note that this a typed method call, which requires that the <bpt id="p1">**</bpt>MarkAllResult<ept id="p1">**</ept> return type be defined.</target>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>Both typed and untyped methods are supported.</source>
          <target state="new">Both typed and untyped methods are supported.</target>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="authentication"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Authenticate users</source>
          <target state="new"><ph id="ph1">&lt;a name="authentication"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Authenticate users</target>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>Mobile Apps supports authenticating and authorizing app users using a variety of external identity providers: Facebook, Google, Microsoft Account,</source>
          <target state="new">Mobile Apps supports authenticating and authorizing app users using a variety of external identity providers: Facebook, Google, Microsoft Account,</target>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>Twitter, and Azure Active Directory.</source>
          <target state="new">Twitter, and Azure Active Directory.</target>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>You can set permissions on tables to restrict access for specific operations to only authenticated users.</source>
          <target state="new">You can set permissions on tables to restrict access for specific operations to only authenticated users.</target>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>You</source>
          <target state="new">You</target>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>can also use the identity of authenticated users to implement authorization rules in server scripts.</source>
          <target state="new">can also use the identity of authenticated users to implement authorization rules in server scripts.</target>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>For more information, see the tutorial</source>
          <target state="new">For more information, see the tutorial</target>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ept id="p1">Add authentication to your app]</ept>.</source>
          <target state="new"><bpt id="p1">[</bpt><ept id="p1">Add authentication to your app]</ept>.</target>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>Two authentication flows are supported: a <bpt id="p1">_</bpt>server flow<ept id="p1">_</ept> and a <bpt id="p2">_</bpt>client flow<ept id="p2">_</ept>.</source>
          <target state="new">Two authentication flows are supported: a <bpt id="p1">_</bpt>server flow<ept id="p1">_</ept> and a <bpt id="p2">_</bpt>client flow<ept id="p2">_</ept>.</target>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>The server flow provides the simplest authentication experience, as it</source>
          <target state="new">The server flow provides the simplest authentication experience, as it</target>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>relies on the provider's web authentication interface.</source>
          <target state="new">relies on the provider's web authentication interface.</target>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>The client flow allows for deeper integration with device-specific capabilities as it relies</source>
          <target state="new">The client flow allows for deeper integration with device-specific capabilities as it relies</target>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>on provider-specific device-specific SDKs.</source>
          <target state="new">on provider-specific device-specific SDKs.</target>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>In either case, you must register your app with your identity provider.</source>
          <target state="new">In either case, you must register your app with your identity provider.</target>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>Your identity provider will provide a client ID and a client secret.</source>
          <target state="new">Your identity provider will provide a client ID and a client secret.</target>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>You</source>
          <target state="new">You</target>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>must then configure Azure App Service Authentication / Authorization with the client ID and cleint secret provided by your identity provider.</source>
          <target state="new">must then configure Azure App Service Authentication / Authorization with the client ID and cleint secret provided by your identity provider.</target>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>For</source>
          <target state="new">For</target>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>more information, follow the detailed instructions in the tutorial <bpt id="p1">[</bpt><ept id="p1">Add authentication to your app]</ept>.</source>
          <target state="new">more information, follow the detailed instructions in the tutorial <bpt id="p1">[</bpt><ept id="p1">Add authentication to your app]</ept>.</target>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="serverflow"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Server flow</source>
          <target state="new"><ph id="ph1">&lt;a name="serverflow"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Server flow</target>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>Once you have registered your identity provider, call the MobileServiceCleint.[LoginAsync method] with the <bpt id="p1">[</bpt><ept id="p1">MobileServiceAuthenticationProvider]</ept> value</source>
          <target state="new">Once you have registered your identity provider, call the MobileServiceCleint.[LoginAsync method] with the <bpt id="p1">[</bpt><ept id="p1">MobileServiceAuthenticationProvider]</ept> value</target>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>of your provider.</source>
          <target state="new">of your provider.</target>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>For example, the following code initiates a server flow sign-in by using Facebook.</source>
          <target state="new">For example, the following code initiates a server flow sign-in by using Facebook.</target>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>If you are using an identity provider other than Facebook, change the value of <bpt id="p1">[</bpt><ept id="p1">MobileServiceAuthenticationProvider]</ept> above to the value for your provider.</source>
          <target state="new">If you are using an identity provider other than Facebook, change the value of <bpt id="p1">[</bpt><ept id="p1">MobileServiceAuthenticationProvider]</ept> above to the value for your provider.</target>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>In a server flow, Azure App Service manages the OAuth 2.0 authentication flow by displaying the sign-in page of the selected provider and generating an App Service</source>
          <target state="new">In a server flow, Azure App Service manages the OAuth 2.0 authentication flow by displaying the sign-in page of the selected provider and generating an App Service</target>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>authentication token after successful sign-on with the identity provider.</source>
          <target state="new">authentication token after successful sign-on with the identity provider.</target>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>The [LoginAsync method] returns a <bpt id="p1">[</bpt><ept id="p1">MobileServiceUser]</ept>, which provides both the <bpt id="p2">[</bpt><ept id="p2">UserId]</ept>
of the authenticated user and the <bpt id="p3">[</bpt><ept id="p3">MobileServiceAuthenticationToken]</ept>, as a JSON web token (JWT).</source>
          <target state="new">The [LoginAsync method] returns a <bpt id="p1">[</bpt><ept id="p1">MobileServiceUser]</ept>, which provides both the <bpt id="p2">[</bpt><ept id="p2">UserId]</ept>
of the authenticated user and the <bpt id="p3">[</bpt><ept id="p3">MobileServiceAuthenticationToken]</ept>, as a JSON web token (JWT).</target>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>This token can be cached and re-used until it expires.</source>
          <target state="new">This token can be cached and re-used until it expires.</target>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>For more</source>
          <target state="new">For more</target>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>information, see <bpt id="p1">[</bpt>Caching the authentication token<ept id="p1">](#caching)</ept>.</source>
          <target state="new">information, see <bpt id="p1">[</bpt>Caching the authentication token<ept id="p1">](#caching)</ept>.</target>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="client-flow"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Client flow</source>
          <target state="new"><ph id="ph1">&lt;a name="client-flow"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Client flow</target>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>Your app can also independently contact the identity provider and then provide the returned token to App Service for authentication.</source>
          <target state="new">Your app can also independently contact the identity provider and then provide the returned token to App Service for authentication.</target>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>This client flow enables you</source>
          <target state="new">This client flow enables you</target>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>to provide a single sign-in experience for users or to retrieve additional user data from the identity provider.</source>
          <target state="new">to provide a single sign-in experience for users or to retrieve additional user data from the identity provider.</target>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>Single sign-in using a token from Facebook or Google</source>
          <target state="new">Single sign-in using a token from Facebook or Google</target>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>In the most simplified form, you can use the client flow as shown in this snippet for Facebook or Google.</source>
          <target state="new">In the most simplified form, you can use the client flow as shown in this snippet for Facebook or Google.</target>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>Single sign-in using Microsoft Account with the Live SDK</source>
          <target state="new">Single sign-in using Microsoft Account with the Live SDK</target>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>To be able to authenticate users, you must register your app at the Microsoft account Developer Center.</source>
          <target state="new">To be able to authenticate users, you must register your app at the Microsoft account Developer Center.</target>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>You must then connect this registration with</source>
          <target state="new">You must then connect this registration with</target>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>your Mobile App backend.</source>
          <target state="new">your Mobile App backend.</target>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>Complete the steps in <bpt id="p1">[</bpt><ept id="p1">Register your app to use a Microsoft account login]</ept> to create a Microsoft account registration and</source>
          <target state="new">Complete the steps in <bpt id="p1">[</bpt><ept id="p1">Register your app to use a Microsoft account login]</ept> to create a Microsoft account registration and</target>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>connect it to your Mobile App backend.</source>
          <target state="new">connect it to your Mobile App backend.</target>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>If you have both Windows Store and Windows Phone 8/Silverlight versions of your app, register the</source>
          <target state="new">If you have both Windows Store and Windows Phone 8/Silverlight versions of your app, register the</target>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>Windows Store version first.</source>
          <target state="new">Windows Store version first.</target>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>The following code authenticates using Live SDK and uses the returned token to sign-in to your Mobile App backend.</source>
          <target state="new">The following code authenticates using Live SDK and uses the returned token to sign-in to your Mobile App backend.</target>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>Refer to the documentation for more information about the <bpt id="p1">[</bpt><ept id="p1">Windows Live SDK]</ept>.</source>
          <target state="new">Refer to the documentation for more information about the <bpt id="p1">[</bpt><ept id="p1">Windows Live SDK]</ept>.</target>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="caching"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Caching the authentication token</source>
          <target state="new"><ph id="ph1">&lt;a name="caching"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Caching the authentication token</target>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>In some cases, the call to the login method can be avoided after the first time the user authenticates.</source>
          <target state="new">In some cases, the call to the login method can be avoided after the first time the user authenticates.</target>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>You can use <bpt id="p1">[</bpt><ept id="p1">PasswordVault]</ept> for</source>
          <target state="new">You can use <bpt id="p1">[</bpt><ept id="p1">PasswordVault]</ept> for</target>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>Windows Store apps to cache the current user identity the first time they log in and every subsequent time you check whether you already</source>
          <target state="new">Windows Store apps to cache the current user identity the first time they log in and every subsequent time you check whether you already</target>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>have the user identity in our cache.</source>
          <target state="new">have the user identity in our cache.</target>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>When the cache is empty, you still need to send the user through the login process.</source>
          <target state="new">When the cache is empty, you still need to send the user through the login process.</target>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>For Windows Phone apps, you may encrypt and cache data using the <bpt id="p1">[</bpt><ept id="p1">ProtectedData]</ept> class and store sensitive information in isolated storage.</source>
          <target state="new">For Windows Phone apps, you may encrypt and cache data using the <bpt id="p1">[</bpt><ept id="p1">ProtectedData]</ept> class and store sensitive information in isolated storage.</target>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>--&gt;</source>
          <target state="new">--&gt;</target>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="adal"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Authenticate users with the Active Directory Authentication Library</source>
          <target state="new"><ph id="ph1">&lt;a name="adal"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Authenticate users with the Active Directory Authentication Library</target>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>You can use the Active Directory Authentication Library (ADAL) to sign users into your application using Azure Active Directory.</source>
          <target state="new">You can use the Active Directory Authentication Library (ADAL) to sign users into your application using Azure Active Directory.</target>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>This is</source>
          <target state="new">This is</target>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>often preferable to using the <ph id="ph1">`loginAsync()`</ph> methods, as it provides a more native UX feel and allows for additional customization.</source>
          <target state="new">often preferable to using the <ph id="ph1">`loginAsync()`</ph> methods, as it provides a more native UX feel and allows for additional customization.</target>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>Configure your mobile app backend for AAD sign-in by followin the <bpt id="p1">[</bpt><ept id="p1">How to configure App Service for Active Directory login]</ept> tutorial.</source>
          <target state="new">Configure your mobile app backend for AAD sign-in by followin the <bpt id="p1">[</bpt><ept id="p1">How to configure App Service for Active Directory login]</ept> tutorial.</target>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>Make sure to complete the optional step of registering a native client application.</source>
          <target state="new">Make sure to complete the optional step of registering a native client application.</target>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>In Visual Studio or Xamarin Studio, open your project and add a reference to the <ph id="ph1">`Microsoft.IdentityModel.CLients.ActiveDirectory`</ph></source>
          <target state="new">In Visual Studio or Xamarin Studio, open your project and add a reference to the <ph id="ph1">`Microsoft.IdentityModel.CLients.ActiveDirectory`</ph></target>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>NuGet package.</source>
          <target state="new">NuGet package.</target>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>When searching, include prerelease versions.</source>
          <target state="new">When searching, include prerelease versions.</target>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>Add the below code to your application, according to the platform you are using.</source>
          <target state="new">Add the below code to your application, according to the platform you are using.</target>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>In each, make the following replacements:</source>
          <target state="new">In each, make the following replacements:</target>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>Replace <bpt id="p1">**</bpt>INSERT-AUTHORITY-HERE<ept id="p1">**</ept> with the name of the tenant in which you provisioned your application.</source>
          <target state="new">Replace <bpt id="p1">**</bpt>INSERT-AUTHORITY-HERE<ept id="p1">**</ept> with the name of the tenant in which you provisioned your application.</target>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>The format should be</source>
          <target state="new">The format should be</target>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>https://login.windows.net/contoso.onmicrosoft.com.</source>
          <target state="new">https://login.windows.net/contoso.onmicrosoft.com.</target>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>This value can be copied out of the Domain tab in your Azure Active Directory</source>
          <target state="new">This value can be copied out of the Domain tab in your Azure Active Directory</target>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>in the <bpt id="p1">[</bpt><ept id="p1">Azure Classic portal]</ept>.</source>
          <target state="new">in the <bpt id="p1">[</bpt><ept id="p1">Azure Classic portal]</ept>.</target>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>Replace <bpt id="p1">**</bpt>INSERT-RESOURCE-ID-HERE<ept id="p1">**</ept> with the client ID for your mobile app backend.</source>
          <target state="new">Replace <bpt id="p1">**</bpt>INSERT-RESOURCE-ID-HERE<ept id="p1">**</ept> with the client ID for your mobile app backend.</target>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>You can obtain this from the <bpt id="p1">**</bpt>Advanced<ept id="p1">**</ept></source>
          <target state="new">You can obtain this from the <bpt id="p1">**</bpt>Advanced<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>tab under <bpt id="p1">**</bpt>Azure Active Directory Settings<ept id="p1">**</ept> in the portal.</source>
          <target state="new">tab under <bpt id="p1">**</bpt>Azure Active Directory Settings<ept id="p1">**</ept> in the portal.</target>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>Replace <bpt id="p1">**</bpt>INSERT-CLIENT-ID-HERE<ept id="p1">**</ept> with the client ID you copied from the native client application.</source>
          <target state="new">Replace <bpt id="p1">**</bpt>INSERT-CLIENT-ID-HERE<ept id="p1">**</ept> with the client ID you copied from the native client application.</target>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>Replace <bpt id="p1">**</bpt>INSERT-REDIRECT-URI-HERE<ept id="p1">**</ept> with your site's <bpt id="p2">_</bpt>/.auth/login/done<ept id="p2">_</ept> endpoint, using the HTTPS scheme.</source>
          <target state="new">Replace <bpt id="p1">**</bpt>INSERT-REDIRECT-URI-HERE<ept id="p1">**</ept> with your site's <bpt id="p2">_</bpt>/.auth/login/done<ept id="p2">_</ept> endpoint, using the HTTPS scheme.</target>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>This value should be</source>
          <target state="new">This value should be</target>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>similar to <bpt id="p1">_</bpt>https://contoso.azurewebsites.net/.auth/login/done<ept id="p1">_</ept>.</source>
          <target state="new">similar to <bpt id="p1">_</bpt>https://contoso.azurewebsites.net/.auth/login/done<ept id="p1">_</ept>.</target>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>The code needed for each platform follows:</source>
          <target state="new">The code needed for each platform follows:</target>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>Windows:</source>
          <target state="new">Windows:</target>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>Xamarin.iOS</source>
          <target state="new">Xamarin.iOS</target>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>Xamarin.Android</source>
          <target state="new">Xamarin.Android</target>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="pushnotifications"&gt;</ph>Push Notifications</source>
          <target state="new"><ph id="ph1">&lt;a name="pushnotifications"&gt;</ph>Push Notifications</target>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>The following topics cover Push Notifications:</source>
          <target state="new">The following topics cover Push Notifications:</target>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>Register for Push Notifications</source>
          <target state="new">Register for Push Notifications</target>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>Obtain a Windows Store package SID</source>
          <target state="new">Obtain a Windows Store package SID</target>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>Register with Cross-platform templates</source>
          <target state="new">Register with Cross-platform templates</target>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="register-for-push"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Register for Push Notifications</source>
          <target state="new"><ph id="ph1">&lt;a name="register-for-push"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Register for Push Notifications</target>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>The Mobile Apps client enables you to register for push notifications with Azure Notification Hubs.</source>
          <target state="new">The Mobile Apps client enables you to register for push notifications with Azure Notification Hubs.</target>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>When registering, you obtain a handle that you obtain from the</source>
          <target state="new">When registering, you obtain a handle that you obtain from the</target>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>platform-specific Push Notification Service (PNS).</source>
          <target state="new">platform-specific Push Notification Service (PNS).</target>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>You then provide this value along with any tags when you create the registration.</source>
          <target state="new">You then provide this value along with any tags when you create the registration.</target>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>The following code registers your</source>
          <target state="new">The following code registers your</target>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>Windows app for push notifications with the Windows Notification Service (WNS):</source>
          <target state="new">Windows app for push notifications with the Windows Notification Service (WNS):</target>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>If you are pushing to WNS, then you MUST obtain a Windows Store package SID (see below).</source>
          <target state="new">If you are pushing to WNS, then you MUST obtain a Windows Store package SID (see below).</target>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>Note that in this example, two tags are included with the registration.</source>
          <target state="new">Note that in this example, two tags are included with the registration.</target>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>For more</source>
          <target state="new">For more</target>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>information on Windows apps, including how to register for template registrations,  see <bpt id="p1">[</bpt><ept id="p1">Add push notifications to your app]</ept>.</source>
          <target state="new">information on Windows apps, including how to register for template registrations,  see <bpt id="p1">[</bpt><ept id="p1">Add push notifications to your app]</ept>.</target>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>Note that requesting tags from the client is not supported.</source>
          <target state="new">Note that requesting tags from the client is not supported.</target>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>Tag Requests are silently dropped from registration.</source>
          <target state="new">Tag Requests are silently dropped from registration.</target>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>If you wish to register your device with tags,</source>
          <target state="new">If you wish to register your device with tags,</target>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>create a Custom API that uses the Notification Hubs API to perform the registration on your behalf.</source>
          <target state="new">create a Custom API that uses the Notification Hubs API to perform the registration on your behalf.</target>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Call the Custom API<ept id="p1">](#customapi)</ept> instead of the</source>
          <target state="new"><bpt id="p1">[</bpt>Call the Custom API<ept id="p1">](#customapi)</ept> instead of the</target>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`RegisterNativeAsync()`</ph> method.</source>
          <target state="new"><ph id="ph1">`RegisterNativeAsync()`</ph> method.</target>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="package-sid"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Obtain a Windows Store package SID</source>
          <target state="new"><ph id="ph1">&lt;a name="package-sid"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Obtain a Windows Store package SID</target>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>A package SID is needed for enabling push notifications in Windows Store apps.</source>
          <target state="new">A package SID is needed for enabling push notifications in Windows Store apps.</target>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>The package SID is also used for other things (such as Windows Single Sign-in).</source>
          <target state="new">The package SID is also used for other things (such as Windows Single Sign-in).</target>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>You</source>
          <target state="new">You</target>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>need to register your application with the Windows Store in order to receive a package SID.</source>
          <target state="new">need to register your application with the Windows Store in order to receive a package SID.</target>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>To obtain this value:</source>
          <target state="new">To obtain this value:</target>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>In Visual Studio Solution Explorer, right-click the Windows Store app project, click <bpt id="p1">**</bpt>Store<ept id="p1">**</ept> &gt; <bpt id="p2">**</bpt>Associate App with the Store...<ept id="p2">**</ept>.</source>
          <target state="new">In Visual Studio Solution Explorer, right-click the Windows Store app project, click <bpt id="p1">**</bpt>Store<ept id="p1">**</ept> &gt; <bpt id="p2">**</bpt>Associate App with the Store...<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>In the wizard, click <bpt id="p1">**</bpt>Next<ept id="p1">**</ept>, sign in with your Microsoft account, type a name for your app in <bpt id="p2">**</bpt>Reserve a new app name<ept id="p2">**</ept>, then click <bpt id="p3">**</bpt>Reserve<ept id="p3">**</ept>.</source>
          <target state="new">In the wizard, click <bpt id="p1">**</bpt>Next<ept id="p1">**</ept>, sign in with your Microsoft account, type a name for your app in <bpt id="p2">**</bpt>Reserve a new app name<ept id="p2">**</ept>, then click <bpt id="p3">**</bpt>Reserve<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>After the app registration is successfully created, select the new app name, click <bpt id="p1">**</bpt>Next<ept id="p1">**</ept>, and then click <bpt id="p2">**</bpt>Associate<ept id="p2">**</ept>.</source>
          <target state="new">After the app registration is successfully created, select the new app name, click <bpt id="p1">**</bpt>Next<ept id="p1">**</ept>, and then click <bpt id="p2">**</bpt>Associate<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>This adds the required Windows Store registration information to the application manifest.</source>
          <target state="new">This adds the required Windows Store registration information to the application manifest.</target>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>Log into the <bpt id="p1">[</bpt><ept id="p1">Windows Dev Center]</ept> using your Microsoft Account.</source>
          <target state="new">Log into the <bpt id="p1">[</bpt><ept id="p1">Windows Dev Center]</ept> using your Microsoft Account.</target>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>Under <bpt id="p1">**</bpt>My apps<ept id="p1">**</ept>, click the app registration you just created.</source>
          <target state="new">Under <bpt id="p1">**</bpt>My apps<ept id="p1">**</ept>, click the app registration you just created.</target>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>App management<ept id="p1">**</ept> &gt; <bpt id="p2">**</bpt>App identity<ept id="p2">**</ept>, and then scroll down to find your <bpt id="p3">**</bpt>Package SID<ept id="p3">**</ept>.</source>
          <target state="new">Click <bpt id="p1">**</bpt>App management<ept id="p1">**</ept> &gt; <bpt id="p2">**</bpt>App identity<ept id="p2">**</ept>, and then scroll down to find your <bpt id="p3">**</bpt>Package SID<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>Many uses of the package SID treat it as a URI, in which case you will need to use <bpt id="p1">_</bpt>ms-app://<ept id="p1">_</ept> as the scheme.</source>
          <target state="new">Many uses of the package SID treat it as a URI, in which case you will need to use <bpt id="p1">_</bpt>ms-app://<ept id="p1">_</ept> as the scheme.</target>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>Make note of the version of your package SID formed by concatenating this value as a prefix.</source>
          <target state="new">Make note of the version of your package SID formed by concatenating this value as a prefix.</target>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>Xamarin apps require some additional code to be able to register an app running on iOS or Android app with the Apple Push Notification Service (APNS) and Google</source>
          <target state="new">Xamarin apps require some additional code to be able to register an app running on iOS or Android app with the Apple Push Notification Service (APNS) and Google</target>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>Cloud Messaging (GCM) services, respectively.</source>
          <target state="new">Cloud Messaging (GCM) services, respectively.</target>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>For more information see the topic for your platform:</source>
          <target state="new">For more information see the topic for your platform:</target>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>Xamarin.Android</source>
          <target state="new">Xamarin.Android</target>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>Xamarin.iOS</source>
          <target state="new">Xamarin.iOS</target>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="register-xplat"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Register push templates to send cross-platform notifications</source>
          <target state="new"><ph id="ph1">&lt;a name="register-xplat"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Register push templates to send cross-platform notifications</target>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>To register templates, use the <ph id="ph1">`RegisterAsync()`</ph> method with the templates, as follows:</source>
          <target state="new">To register templates, use the <ph id="ph1">`RegisterAsync()`</ph> method with the templates, as follows:</target>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>Your templates will be of type JObject and can contain multiple templates in the following JSON format:</source>
          <target state="new">Your templates will be of type JObject and can contain multiple templates in the following JSON format:</target>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>The method <bpt id="p1">**</bpt>RegisterAsync()<ept id="p1">**</ept> also accepts Secondary Tiles:</source>
          <target state="new">The method <bpt id="p1">**</bpt>RegisterAsync()<ept id="p1">**</ept> also accepts Secondary Tiles:</target>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>Note that all tags will be stripped away for security.</source>
          <target state="new">Note that all tags will be stripped away for security.</target>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>To add tags to installations or templates within installations, see</source>
          <target state="new">To add tags to installations or templates within installations, see</target>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ept id="p1">Work with the .NET backend server SDK for Azure Mobile Apps]</ept>.</source>
          <target state="new"><bpt id="p1">[</bpt><ept id="p1">Work with the .NET backend server SDK for Azure Mobile Apps]</ept>.</target>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>To send notifications utilizing these registered templates, refer to the <bpt id="p1">[</bpt><ept id="p1">Notification Hubs APIs]</ept>.</source>
          <target state="new">To send notifications utilizing these registered templates, refer to the <bpt id="p1">[</bpt><ept id="p1">Notification Hubs APIs]</ept>.</target>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="misc"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Miscellaneous Topics</source>
          <target state="new"><ph id="ph1">&lt;a name="misc"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Miscellaneous Topics</target>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="errors"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Handle errors</source>
          <target state="new"><ph id="ph1">&lt;a name="errors"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Handle errors</target>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>When an error occurs in the backend, the client SDK will raise a <ph id="ph1">`MobileServiceInvalidOperationException`</ph>.</source>
          <target state="new">When an error occurs in the backend, the client SDK will raise a <ph id="ph1">`MobileServiceInvalidOperationException`</ph>.</target>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>The following example shows</source>
          <target state="new">The following example shows</target>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>how to handle an exception that is returned by the backend:</source>
          <target state="new">how to handle an exception that is returned by the backend:</target>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>Another example of dealing with error conditions can be found in the <bpt id="p1">[</bpt><ept id="p1">Mobile Apps Files Sample]</ept> - the <bpt id="p2">[</bpt><ept id="p2">LoggingHandler]</ept>
example provides a logging delegate handler (see below) to log the requests being made to the backend.</source>
          <target state="new">Another example of dealing with error conditions can be found in the <bpt id="p1">[</bpt><ept id="p1">Mobile Apps Files Sample]</ept> - the <bpt id="p2">[</bpt><ept id="p2">LoggingHandler]</ept>
example provides a logging delegate handler (see below) to log the requests being made to the backend.</target>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>This provides</source>
          <target state="new">This provides</target>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>an easier way to debug Xamarin applications rather than relying on Fiddler.</source>
          <target state="new">an easier way to debug Xamarin applications rather than relying on Fiddler.</target>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="headers"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Customize request headers</source>
          <target state="new"><ph id="ph1">&lt;a name="headers"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Customize request headers</target>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>To support your specific app scenario, you might need to customize communication with the Mobile App backend.</source>
          <target state="new">To support your specific app scenario, you might need to customize communication with the Mobile App backend.</target>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>For example, you may want to add a</source>
          <target state="new">For example, you may want to add a</target>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>custom header to every outgoing request or even change responses status codes.</source>
          <target state="new">custom header to every outgoing request or even change responses status codes.</target>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>You can do this by providing a custom <bpt id="p1">[</bpt><ept id="p1">DelegatingHandler]</ept>, as in</source>
          <target state="new">You can do this by providing a custom <bpt id="p1">[</bpt><ept id="p1">DelegatingHandler]</ept>, as in</target>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>the following example:</source>
          <target state="new">the following example:</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>