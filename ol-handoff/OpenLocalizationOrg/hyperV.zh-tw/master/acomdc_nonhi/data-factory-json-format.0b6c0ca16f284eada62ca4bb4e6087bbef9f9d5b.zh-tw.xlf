<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">acomdc_nonhi</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f410e71f1149bfa5df0b0739283a95460e267695</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1457980" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Specifying JsonFormat</source>
          <target state="new">Specifying JsonFormat</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>If the format is set to <bpt id="p1">**</bpt>JsonFormat<ept id="p1">**</ept>, you can specify the following <bpt id="p2">**</bpt>optional<ept id="p2">**</ept> properties in the <bpt id="p3">**</bpt>Format<ept id="p3">**</ept> section.</source>
          <target state="new">If the format is set to <bpt id="p1">**</bpt>JsonFormat<ept id="p1">**</ept>, you can specify the following <bpt id="p2">**</bpt>optional<ept id="p2">**</ept> properties in the <bpt id="p3">**</bpt>Format<ept id="p3">**</ept> section.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Property</source>
          <target state="new">Property</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="new">Description</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Required</source>
          <target state="new">Required</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>filePattern</source>
          <target state="new">filePattern</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Indicate the pattern of data stored in each JSON file.</source>
          <target state="new">Indicate the pattern of data stored in each JSON file.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Allowed values are: <bpt id="p1">**</bpt>setOfObjects<ept id="p1">**</ept> and <bpt id="p2">**</bpt>arrayOfObjects<ept id="p2">**</ept>.</source>
          <target state="new">Allowed values are: <bpt id="p1">**</bpt>setOfObjects<ept id="p1">**</ept> and <bpt id="p2">**</bpt>arrayOfObjects<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>default<ept id="p1">**</ept> value is: <bpt id="p2">**</bpt>setOfObjects<ept id="p2">**</ept>.</source>
          <target state="new">The <bpt id="p1">**</bpt>default<ept id="p1">**</ept> value is: <bpt id="p2">**</bpt>setOfObjects<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>See sections below for details about these patterns.</source>
          <target state="new">See sections below for details about these patterns.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>No</source>
          <target state="new">No</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>encodingName</source>
          <target state="new">encodingName</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Specify the encoding name.</source>
          <target state="new">Specify the encoding name.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For the list of valid encoding names, see: <bpt id="p1">[</bpt>Encoding.EncodingName<ept id="p1">](https://msdn.microsoft.com/library/system.text.encoding.aspx)</ept> Property.</source>
          <target state="new">For the list of valid encoding names, see: <bpt id="p1">[</bpt>Encoding.EncodingName<ept id="p1">](https://msdn.microsoft.com/library/system.text.encoding.aspx)</ept> Property.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For example: windows-1250 or shift_jis.</source>
          <target state="new">For example: windows-1250 or shift_jis.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>default<ept id="p1">**</ept> value is: <bpt id="p2">**</bpt>UTF-8<ept id="p2">**</ept>.</source>
          <target state="new">The <bpt id="p1">**</bpt>default<ept id="p1">**</ept> value is: <bpt id="p2">**</bpt>UTF-8<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>No</source>
          <target state="new">No</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>nestingSeparator</source>
          <target state="new">nestingSeparator</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Character that is used to separate nesting levels.</source>
          <target state="new">Character that is used to separate nesting levels.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>default<ept id="p1">**</ept> value is <bpt id="p2">**</bpt>. (dot)<ept id="p2">**</ept>.</source>
          <target state="new">The <bpt id="p1">**</bpt>default<ept id="p1">**</ept> value is <bpt id="p2">**</bpt>. (dot)<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>No</source>
          <target state="new">No</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>setOfObjects file pattern</source>
          <target state="new">setOfObjects file pattern</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Each file contains single object, or line-delimited/concatenated multiple objects.</source>
          <target state="new">Each file contains single object, or line-delimited/concatenated multiple objects.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>When this option is chosen in an output dataset, copy will produce a single JSON file with each object per line (line-delimited).</source>
          <target state="new">When this option is chosen in an output dataset, copy will produce a single JSON file with each object per line (line-delimited).</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>single object</source>
          <target state="new">single object</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>line-delimited JSON</source>
          <target state="new">line-delimited JSON</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>concatenated JSON</source>
          <target state="new">concatenated JSON</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>arrayOfObjects file pattern.</source>
          <target state="new">arrayOfObjects file pattern.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Each file contains an array of objects.</source>
          <target state="new">Each file contains an array of objects.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>JsonFormat example</source>
          <target state="new">JsonFormat example</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>If you have a JSON file with the following content:</source>
          <target state="new">If you have a JSON file with the following content:</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>and you want to copy it into a an Azure SQL table in the following format:</source>
          <target state="new">and you want to copy it into a an Azure SQL table in the following format:</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Id</source>
          <target state="new">Id</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Name.First</source>
          <target state="new">Name.First</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Name.Middle</source>
          <target state="new">Name.Middle</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Name.Last</source>
          <target state="new">Name.Last</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Tags</source>
          <target state="new">Tags</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>1</source>
          <target state="new">1</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>John</source>
          <target state="new">John</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>null</source>
          <target state="new">null</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Doe</source>
          <target state="new">Doe</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>["Data Factory”, "Azure"]</source>
          <target state="new">["Data Factory”, "Azure"]</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The input dataset with JsonFormat type is defined as follows: (partial definition with only the relevant parts)</source>
          <target state="new">The input dataset with JsonFormat type is defined as follows: (partial definition with only the relevant parts)</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>If the structure is not defined, the Copy Activity flattens the structure by default and copy every thing.</source>
          <target state="new">If the structure is not defined, the Copy Activity flattens the structure by default and copy every thing.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Supported JSON structure</source>
          <target state="new">Supported JSON structure</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Note the following:</source>
          <target state="new">Note the following:</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Each object with a collection of name/value pairs will be mapped to one row of data in a tabular format.</source>
          <target state="new">Each object with a collection of name/value pairs will be mapped to one row of data in a tabular format.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Objects can be nested and you can define how to flatten the structure in a dataset with the  nesting separator (.) by default.</source>
          <target state="new">Objects can be nested and you can define how to flatten the structure in a dataset with the  nesting separator (.) by default.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>See the <bpt id="p1">[</bpt>JsonFormat example<ept id="p1">](#jsonformat-example)</ept> section above for an example.</source>
          <target state="new">See the <bpt id="p1">[</bpt>JsonFormat example<ept id="p1">](#jsonformat-example)</ept> section above for an example.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>If the structure is not defined in the Data Factory dataset, the Copy Activity detects the schema from the first object and flatten the whole object.</source>
          <target state="new">If the structure is not defined in the Data Factory dataset, the Copy Activity detects the schema from the first object and flatten the whole object.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>If the JSON input has an array, the Copy Activity converts the entire array value into a string.</source>
          <target state="new">If the JSON input has an array, the Copy Activity converts the entire array value into a string.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>You can choose to skip it by using <bpt id="p1">[</bpt>column mapping or filtering<ept id="p1">](#column-mapping-with-translator-rules)</ept>.</source>
          <target state="new">You can choose to skip it by using <bpt id="p1">[</bpt>column mapping or filtering<ept id="p1">](#column-mapping-with-translator-rules)</ept>.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>If there are duplicate name at the same level, the Copy Activity will pick the last one.</source>
          <target state="new">If there are duplicate name at the same level, the Copy Activity will pick the last one.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Property names are case sensitive.</source>
          <target state="new">Property names are case sensitive.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Two properties with same name but different casing will be treated as two separate properties.</source>
          <target state="new">Two properties with same name but different casing will be treated as two separate properties.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>