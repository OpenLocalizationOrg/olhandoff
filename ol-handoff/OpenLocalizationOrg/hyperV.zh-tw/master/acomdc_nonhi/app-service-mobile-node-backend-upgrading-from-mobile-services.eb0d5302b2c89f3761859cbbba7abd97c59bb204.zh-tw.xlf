<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">acomdc_nonhi</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d1d99492dd26745f77d5884fc19902ce06cd2836</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1457980" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Upgrade from Mobile Services to Azure App Service - Node.js</source>
          <target state="new">Upgrade from Mobile Services to Azure App Service - Node.js</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to easily upgrade your Mobile Services application to an App Service Mobile App</source>
          <target state="new">Learn how to easily upgrade your Mobile Services application to an App Service Mobile App</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Upgrade your existing Node.js Azure Mobile Service to App Service</source>
          <target state="new">Upgrade your existing Node.js Azure Mobile Service to App Service</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>App Service Mobile is a new way to build mobile applications using Microsoft Azure.</source>
          <target state="new">App Service Mobile is a new way to build mobile applications using Microsoft Azure.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>To learn more, see <bpt id="p1">[</bpt><ept id="p1">What are Mobile Apps?]</ept>.</source>
          <target state="new">To learn more, see <bpt id="p1">[</bpt><ept id="p1">What are Mobile Apps?]</ept>.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This topic describes how to upgrade an existing Node.js backend application from Azure Mobile Services to a new App Service Mobile Apps.</source>
          <target state="new">This topic describes how to upgrade an existing Node.js backend application from Azure Mobile Services to a new App Service Mobile Apps.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>While you perform this upgrade, your existing Mobile Services application can continue to operate.</source>
          <target state="new">While you perform this upgrade, your existing Mobile Services application can continue to operate.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>When a mobile backend is upgraded to Azure App Service, it has access to all App Service features and are billed according to <bpt id="p1">[</bpt><ept id="p1">App Service pricing]</ept>, not Mobile Services pricing.</source>
          <target state="new">When a mobile backend is upgraded to Azure App Service, it has access to all App Service features and are billed according to <bpt id="p1">[</bpt><ept id="p1">App Service pricing]</ept>, not Mobile Services pricing.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Migrate vs. upgrade</source>
          <target state="new">Migrate vs. upgrade</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.TIP]</ph> It is recommended that you <bpt id="p1">[</bpt>perform a migration<ept id="p1">](app-service-mobile-migrating-from-mobile-services.md)</ept> before going through an upgrade.</source>
          <target state="new"><ph id="ph1">[AZURE.TIP]</ph> It is recommended that you <bpt id="p1">[</bpt>perform a migration<ept id="p1">](app-service-mobile-migrating-from-mobile-services.md)</ept> before going through an upgrade.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This way, you can put both versions of your application on the same App Service Plan and incur no additional cost.</source>
          <target state="new">This way, you can put both versions of your application on the same App Service Plan and incur no additional cost.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Improvements in Mobile Apps Node.js server SDK</source>
          <target state="new">Improvements in Mobile Apps Node.js server SDK</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Upgrading to the new <bpt id="p1">[</bpt>Mobile Apps SDK<ept id="p1">](https://www.npmjs.com/package/azure-mobile-apps)</ept> provides a lot of improvements, including:</source>
          <target state="new">Upgrading to the new <bpt id="p1">[</bpt>Mobile Apps SDK<ept id="p1">](https://www.npmjs.com/package/azure-mobile-apps)</ept> provides a lot of improvements, including:</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Based on <bpt id="p1">[</bpt>Express framework<ept id="p1">](http://expressjs.com/en/index.html)</ept>, the new Node SDK is light-weight and designed to keep up with new Node versions as they come out.</source>
          <target state="new">Based on <bpt id="p1">[</bpt>Express framework<ept id="p1">](http://expressjs.com/en/index.html)</ept>, the new Node SDK is light-weight and designed to keep up with new Node versions as they come out.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>You can customize the application behavior with Express middleware.</source>
          <target state="new">You can customize the application behavior with Express middleware.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Significant performance improvements compared to the Mobile Services SDK.</source>
          <target state="new">Significant performance improvements compared to the Mobile Services SDK.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You can now host a website together with your mobile backend; similarly, it's easy to add the Azure Mobile SDK to any existing expressv4 application.</source>
          <target state="new">You can now host a website together with your mobile backend; similarly, it's easy to add the Azure Mobile SDK to any existing expressv4 application.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Built for cross-platform and local development, the Mobile Apps SDK can be developed and run locally on Windows, Linux, and OSX platforms.</source>
          <target state="new">Built for cross-platform and local development, the Mobile Apps SDK can be developed and run locally on Windows, Linux, and OSX platforms.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>It's now easy to use common Node development techniques like running <bpt id="p1">[</bpt>Mocha<ept id="p1">](https://mochajs.org/)</ept> tests prior to deployment.</source>
          <target state="new">It's now easy to use common Node development techniques like running <bpt id="p1">[</bpt>Mocha<ept id="p1">](https://mochajs.org/)</ept> tests prior to deployment.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>You can use Redis with native modules like <bpt id="p1">[</bpt>hiredis<ept id="p1">](https://www.npmjs.com/package/hiredis)</ept>; and because App Service will install your npm packages for you, when you deploy, there's no need to include binaries in your deployment packages.</source>
          <target state="new">You can use Redis with native modules like <bpt id="p1">[</bpt>hiredis<ept id="p1">](https://www.npmjs.com/package/hiredis)</ept>; and because App Service will install your npm packages for you, when you deploy, there's no need to include binaries in your deployment packages.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="overview"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Basic upgrade overview</source>
          <target state="new"><ph id="ph1">&lt;a name="overview"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Basic upgrade overview</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Unlike the .NET Mobile Apps SDK, upgrading a Node backend from Mobile Services to Mobile Apps isn't as simple as swapping out packages.</source>
          <target state="new">Unlike the .NET Mobile Apps SDK, upgrading a Node backend from Mobile Services to Mobile Apps isn't as simple as swapping out packages.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You now own your whole application stack, as opposed to Azure controlling it, and thus you need to create a basic Express app to host your mobile backend.</source>
          <target state="new">You now own your whole application stack, as opposed to Azure controlling it, and thus you need to create a basic Express app to host your mobile backend.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For the table and API controllers, the concepts are similar, but you now must export table objects and the function APIs have changed somewhat.</source>
          <target state="new">For the table and API controllers, the concepts are similar, but you now must export table objects and the function APIs have changed somewhat.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This article will walk through the basic strategies of upgrading, but before you migrate, you'll want to read the <bpt id="p1">[</bpt>Node Backend How-To<ept id="p1">](app-service-mobile-node-backend-how-to-use-server-sdk.md)</ept> prior to getting started.</source>
          <target state="new">This article will walk through the basic strategies of upgrading, but before you migrate, you'll want to read the <bpt id="p1">[</bpt>Node Backend How-To<ept id="p1">](app-service-mobile-node-backend-how-to-use-server-sdk.md)</ept> prior to getting started.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.TIP]</ph> It is advised that you read and understand the rest of this topic completely before starting an upgrade.</source>
          <target state="new"><ph id="ph1">[AZURE.TIP]</ph> It is advised that you read and understand the rest of this topic completely before starting an upgrade.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Make note of any features you use which are called out below.</source>
          <target state="new">Make note of any features you use which are called out below.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The Mobile Services client SDKs are <bpt id="p1">**</bpt>not<ept id="p1">**</ept> compatible with the new Mobile Apps server SDK.</source>
          <target state="new">The Mobile Services client SDKs are <bpt id="p1">**</bpt>not<ept id="p1">**</ept> compatible with the new Mobile Apps server SDK.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>In order to provide continuity of service for your app, you should not publish changes to a site currently serving published clients.</source>
          <target state="new">In order to provide continuity of service for your app, you should not publish changes to a site currently serving published clients.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Instead, you should create a new mobile app that serves as a duplicate.</source>
          <target state="new">Instead, you should create a new mobile app that serves as a duplicate.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>You can put this application on the same App Service plan to avoid incurring additional financial cost.</source>
          <target state="new">You can put this application on the same App Service plan to avoid incurring additional financial cost.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>You will then have two versions of the application: one which stays the same and serves published apps in the wild, and the other which you can then upgrade and target with a new client release.</source>
          <target state="new">You will then have two versions of the application: one which stays the same and serves published apps in the wild, and the other which you can then upgrade and target with a new client release.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>You can move and test your code at your pace, but you should make sure that any bug fixes you make get applied to both.</source>
          <target state="new">You can move and test your code at your pace, but you should make sure that any bug fixes you make get applied to both.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Once you feel that a desired number of client apps in the wild have updated to the latest version, you can delete the original migrated app if you desire.</source>
          <target state="new">Once you feel that a desired number of client apps in the wild have updated to the latest version, you can delete the original migrated app if you desire.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>It doesn't incur any additional monetary costs, if hosted in the same App Service plan as your Mobile App.</source>
          <target state="new">It doesn't incur any additional monetary costs, if hosted in the same App Service plan as your Mobile App.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The full outline for the upgrade process is as follows:</source>
          <target state="new">The full outline for the upgrade process is as follows:</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Create a new Mobile App</source>
          <target state="new">Create a new Mobile App</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Update the project to use the new Server SDKs</source>
          <target state="new">Update the project to use the new Server SDKs</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Release a new version of your client application</source>
          <target state="new">Release a new version of your client application</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>(Optional) Delete your original migrated mobile service app</source>
          <target state="new">(Optional) Delete your original migrated mobile service app</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="mobile-app-version"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph> Starting the Upgrade</source>
          <target state="new"><ph id="ph1">&lt;a name="mobile-app-version"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph> Starting the Upgrade</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The first step in upgrading is to create the Mobile App resource which will host the new version of your application.</source>
          <target state="new">The first step in upgrading is to create the Mobile App resource which will host the new version of your application.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>If you have already migrated an existing mobile service, you will want to create this version on the same hosting plan.</source>
          <target state="new">If you have already migrated an existing mobile service, you will want to create this version on the same hosting plan.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Open the <bpt id="p1">[</bpt><ept id="p1">Azure portal]</ept> and navigate to your migrated application.</source>
          <target state="new">Open the <bpt id="p1">[</bpt><ept id="p1">Azure portal]</ept> and navigate to your migrated application.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Make note of the App Service Plan it is running on.</source>
          <target state="new">Make note of the App Service Plan it is running on.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Creating a second application instance</source>
          <target state="new">Creating a second application instance</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Next, create the second application instance.</source>
          <target state="new">Next, create the second application instance.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>When prompted to select you App Service Plan or "hosting plan" choose the plan of your migrated application.</source>
          <target state="new">When prompted to select you App Service Plan or "hosting plan" choose the plan of your migrated application.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>You will likely want to use the same database and Notification Hub as you did in Mobile Services.</source>
          <target state="new">You will likely want to use the same database and Notification Hub as you did in Mobile Services.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>You can copy these values by opening <bpt id="p1">[</bpt><ept id="p1">Azure portal]</ept> and navigating to the original application, then click <bpt id="p2">**</bpt>Settings<ept id="p2">**</ept> &gt; <bpt id="p3">**</bpt>Application settings<ept id="p3">**</ept>.</source>
          <target state="new">You can copy these values by opening <bpt id="p1">[</bpt><ept id="p1">Azure portal]</ept> and navigating to the original application, then click <bpt id="p2">**</bpt>Settings<ept id="p2">**</ept> &gt; <bpt id="p3">**</bpt>Application settings<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Under <bpt id="p1">**</bpt>Connection Strings<ept id="p1">**</ept>, copy <ph id="ph1">`MS_NotificationHubConnectionString`</ph> and <ph id="ph2">`MS_TableConnectionString`</ph>.</source>
          <target state="new">Under <bpt id="p1">**</bpt>Connection Strings<ept id="p1">**</ept>, copy <ph id="ph1">`MS_NotificationHubConnectionString`</ph> and <ph id="ph2">`MS_TableConnectionString`</ph>.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Navigate to your new upgrade site and paste them in, overwriting any existing values.</source>
          <target state="new">Navigate to your new upgrade site and paste them in, overwriting any existing values.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Repeat this process for any other application settings your app needs.</source>
          <target state="new">Repeat this process for any other application settings your app needs.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>If not using a migrated service, you can read connection strings and app settings from the <bpt id="p1">**</bpt>Configure<ept id="p1">**</ept> tab of the Mobile Services section of the <bpt id="p2">[</bpt><ept id="p2">Azure portal]</ept>.</source>
          <target state="new">If not using a migrated service, you can read connection strings and app settings from the <bpt id="p1">**</bpt>Configure<ept id="p1">**</ept> tab of the Mobile Services section of the <bpt id="p2">[</bpt><ept id="p2">Azure portal]</ept>.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Create a basic Mobile App backend with Node</source>
          <target state="new">Create a basic Mobile App backend with Node</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Every Azure App Service Mobile App Node.js backend starts as an ExpressJS application.</source>
          <target state="new">Every Azure App Service Mobile App Node.js backend starts as an ExpressJS application.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>You can create a basic <bpt id="p1">[</bpt>Express<ept id="p1">](http://expressjs.com/en/index.html)</ept> application as follows:</source>
          <target state="new">You can create a basic <bpt id="p1">[</bpt>Express<ept id="p1">](http://expressjs.com/en/index.html)</ept> application as follows:</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>In a command or PowerShell window, create a new directory for your project.</source>
          <target state="new">In a command or PowerShell window, create a new directory for your project.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Run npm init to initialize the package structure.</source>
          <target state="new">Run npm init to initialize the package structure.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The npm init command will ask a set of questions to initialize the project.</source>
          <target state="new">The npm init command will ask a set of questions to initialize the project.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>See the example output below</source>
          <target state="new">See the example output below</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The npm init output</source>
          <target state="new">The npm init output</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Install the express and azure-mobile-apps libraries from the npm repository.</source>
          <target state="new">Install the express and azure-mobile-apps libraries from the npm repository.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Create an app.js file to implement the basic mobile server.</source>
          <target state="new">Create an app.js file to implement the basic mobile server.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Updating the server project</source>
          <target state="new">Updating the server project</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Mobile Apps provides a new <bpt id="p1">[</bpt><ept id="p1">Mobile App Server SDK]</ept> which provides much of the same functionality as the Mobile Services runtime, but now you own the full runtime; Mobile Apps doesn't force a Node version or any code updates for you.</source>
          <target state="new">Mobile Apps provides a new <bpt id="p1">[</bpt><ept id="p1">Mobile App Server SDK]</ept> which provides much of the same functionality as the Mobile Services runtime, but now you own the full runtime; Mobile Apps doesn't force a Node version or any code updates for you.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>If you've followed the steps above, you have a basic version of the Node mobile runtime available.</source>
          <target state="new">If you've followed the steps above, you have a basic version of the Node mobile runtime available.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>You can now start moving tables and API logic from your Mobile Service to your Mobile App, customizing your server configuration, enabling push, configuring authentication, and more.</source>
          <target state="new">You can now start moving tables and API logic from your Mobile Service to your Mobile App, customizing your server configuration, enabling push, configuring authentication, and more.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Base configuration</source>
          <target state="new">Base configuration</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The server has lots of configuration settings, but has a variety of default values to make it easy to get started.</source>
          <target state="new">The server has lots of configuration settings, but has a variety of default values to make it easy to get started.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Many of the settings will be set up for you, in the <bpt id="p1">[</bpt><ept id="p1">Azure portal]</ept>, via the <bpt id="p2">**</bpt>Data<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Authentication/Authorization<ept id="p3">**</ept>, and <bpt id="p4">**</bpt>Push<ept id="p4">**</ept> settings menus.</source>
          <target state="new">Many of the settings will be set up for you, in the <bpt id="p1">[</bpt><ept id="p1">Azure portal]</ept>, via the <bpt id="p2">**</bpt>Data<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Authentication/Authorization<ept id="p3">**</ept>, and <bpt id="p4">**</bpt>Push<ept id="p4">**</ept> settings menus.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>For local development, if you want use data, authentication, and push, you may need to configure your local development environment.</source>
          <target state="new">For local development, if you want use data, authentication, and push, you may need to configure your local development environment.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>You can configure your server configuration via environment variables which you can set via App Settings in your Mobile App backend.</source>
          <target state="new">You can configure your server configuration via environment variables which you can set via App Settings in your Mobile App backend.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>You can further customize the Mobile Apps SDK by passing a <bpt id="p1">[</bpt>configuration object<ept id="p1">](http://azure.github.io/azure-mobile-apps-node/global.html#configuration)</ept> to the initializer or <bpt id="p2">[</bpt>creating a file named azureMobile.js<ept id="p2">](app-service-mobile-node-backend-how-to-use-server-sdk/#howto-config-localdev)</ept> in the root of the project.</source>
          <target state="new">You can further customize the Mobile Apps SDK by passing a <bpt id="p1">[</bpt>configuration object<ept id="p1">](http://azure.github.io/azure-mobile-apps-node/global.html#configuration)</ept> to the initializer or <bpt id="p2">[</bpt>creating a file named azureMobile.js<ept id="p2">](app-service-mobile-node-backend-how-to-use-server-sdk/#howto-config-localdev)</ept> in the root of the project.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Working with Data &amp; Tables</source>
          <target state="new">Working with Data &amp; Tables</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The SDK comes with an in-memory data provider to allow for quick and easy getting started experiences.</source>
          <target state="new">The SDK comes with an in-memory data provider to allow for quick and easy getting started experiences.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>You should switch to using a SQL DB early on, as the in-memory provider will lose all data on restart and doesn't stay consistent across multiple instances.</source>
          <target state="new">You should switch to using a SQL DB early on, as the in-memory provider will lose all data on restart and doesn't stay consistent across multiple instances.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>To start moving your business logic from your Mobile Service to Mobile Apps, you'll first want to create a file with your table's name (appended with '.js') in the <ph id="ph1">`./tables`</ph> directory.</source>
          <target state="new">To start moving your business logic from your Mobile Service to Mobile Apps, you'll first want to create a file with your table's name (appended with '.js') in the <ph id="ph1">`./tables`</ph> directory.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>You can see a full example of a Mobile App table on <bpt id="p1">[</bpt>GitHub<ept id="p1">](https://github.com/Azure/azure-mobile-apps-node/blob/master/samples/todo/tables/TodoItem.js)</ept>.</source>
          <target state="new">You can see a full example of a Mobile App table on <bpt id="p1">[</bpt>GitHub<ept id="p1">](https://github.com/Azure/azure-mobile-apps-node/blob/master/samples/todo/tables/TodoItem.js)</ept>.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The simplest version is:</source>
          <target state="new">The simplest version is:</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>To start porting some of your logic over, for each of your <ph id="ph1">`&lt;tablename&gt;.&lt;operation&gt;.js`</ph>, you'll need a function for your table.</source>
          <target state="new">To start porting some of your logic over, for each of your <ph id="ph1">`&lt;tablename&gt;.&lt;operation&gt;.js`</ph>, you'll need a function for your table.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Let's add a read function for an example.</source>
          <target state="new">Let's add a read function for an example.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>In a Mobile Service with a TodoItem table and a read operation which filters items based on userid, like this:</source>
          <target state="new">In a Mobile Service with a TodoItem table and a read operation which filters items based on userid, like this:</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>function(query, user, request) {</source>
          <target state="new">function(query, user, request) {</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>query.where({ userId: user.userId});</source>
          <target state="new">query.where({ userId: user.userId});</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>request.execute();</source>
          <target state="new">request.execute();</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>}</source>
          <target state="new">}</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The function we add to the Azure Mobile Apps table code would look like this:</source>
          <target state="new">The function we add to the Azure Mobile Apps table code would look like this:</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Inspecting the code, you can see that most of the function parameters from</source>
          <target state="new">Inspecting the code, you can see that most of the function parameters from</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>CORS</source>
          <target state="new">CORS</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>CORS can be enabled via a <bpt id="p1">[</bpt>CORS configuration setting<ept id="p1">](http://azure.github.io/azure-mobile-apps-node/global.html#corsConfiguration)</ept> in the SDK.</source>
          <target state="new">CORS can be enabled via a <bpt id="p1">[</bpt>CORS configuration setting<ept id="p1">](http://azure.github.io/azure-mobile-apps-node/global.html#corsConfiguration)</ept> in the SDK.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The main areas of concern if using CORS are that the <ph id="ph1">`eTag`</ph> and <ph id="ph2">`Location`</ph> headers must be allowed in order for the client SDKs to work properly.</source>
          <target state="new">The main areas of concern if using CORS are that the <ph id="ph1">`eTag`</ph> and <ph id="ph2">`Location`</ph> headers must be allowed in order for the client SDKs to work properly.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Push Notifications</source>
          <target state="new">Push Notifications</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The Azure Notification Hubs SDK has had some significant updates since Mobile Services, so some Notification Hubs function signatures may be different.</source>
          <target state="new">The Azure Notification Hubs SDK has had some significant updates since Mobile Services, so some Notification Hubs function signatures may be different.</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Otherwise, the functionality is similar to Mobile Services; the Azure Mobile SDK will provision a Notifications Hubs instance if the App Setting for Notifications Hubs exists, and expose it on <ph id="ph1">`context.push`</ph>.</source>
          <target state="new">Otherwise, the functionality is similar to Mobile Services; the Azure Mobile SDK will provision a Notifications Hubs instance if the App Setting for Notifications Hubs exists, and expose it on <ph id="ph1">`context.push`</ph>.</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>A sample can be found on <bpt id="p1">[</bpt>GitHub<ept id="p1">](https://github.com/Azure/azure-mobile-apps-node/blob/master/samples/push-on-insert/tables/TodoItem.js)</ept>, with the relevant section shown below shown below:</source>
          <target state="new">A sample can be found on <bpt id="p1">[</bpt>GitHub<ept id="p1">](https://github.com/Azure/azure-mobile-apps-node/blob/master/samples/push-on-insert/tables/TodoItem.js)</ept>, with the relevant section shown below shown below:</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Scheduled Jobs</source>
          <target state="new">Scheduled Jobs</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Scheduled jobs are not built into Mobile Apps, so any existing jobs that you have in your Mobile Service  backend will need to be upgraded individually.</source>
          <target state="new">Scheduled jobs are not built into Mobile Apps, so any existing jobs that you have in your Mobile Service  backend will need to be upgraded individually.</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>One option is to create a scheduled <bpt id="p1">[</bpt><ept id="p1">Web Job]</ept> on the Mobile App code site.</source>
          <target state="new">One option is to create a scheduled <bpt id="p1">[</bpt><ept id="p1">Web Job]</ept> on the Mobile App code site.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>You could also set up an API that holds your job code and configure the <bpt id="p1">[</bpt><ept id="p1">Azure Scheduler]</ept> to hit that endpoint on the expected schedule.</source>
          <target state="new">You could also set up an API that holds your job code and configure the <bpt id="p1">[</bpt><ept id="p1">Azure Scheduler]</ept> to hit that endpoint on the expected schedule.</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="authentication"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Authentication considerations</source>
          <target state="new"><ph id="ph1">&lt;a name="authentication"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Authentication considerations</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The authentication components of Mobile Services have now been moved into the App Service Authentication/Authorization feature.</source>
          <target state="new">The authentication components of Mobile Services have now been moved into the App Service Authentication/Authorization feature.</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>You can learn about enabling this for your site by reading the <bpt id="p1">[</bpt>Add authentication to your mobile app<ept id="p1">](app-service-mobile-ios-get-started-users.md)</ept> topic.</source>
          <target state="new">You can learn about enabling this for your site by reading the <bpt id="p1">[</bpt>Add authentication to your mobile app<ept id="p1">](app-service-mobile-ios-get-started-users.md)</ept> topic.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>For some providers, such as AAD, Facebook, and Google, you should be able to leverage the existing registration from your copy application.</source>
          <target state="new">For some providers, such as AAD, Facebook, and Google, you should be able to leverage the existing registration from your copy application.</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>You simply need to navigate to the identity provider's portal and add a new redirect URL to the registration.</source>
          <target state="new">You simply need to navigate to the identity provider's portal and add a new redirect URL to the registration.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Then configure App Service Authentication/Authorization with the client ID and secret.</source>
          <target state="new">Then configure App Service Authentication/Authorization with the client ID and secret.</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Controller action authorization and user identity</source>
          <target state="new">Controller action authorization and user identity</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>To limit access to your table, you can set it at the table level with <ph id="ph1">`table.access = 'authenticated';`</ph>.</source>
          <target state="new">To limit access to your table, you can set it at the table level with <ph id="ph1">`table.access = 'authenticated';`</ph>.</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>You can see a full example on <bpt id="p1">[</bpt>GitHub<ept id="p1">](https://github.com/Azure/azure-mobile-apps-node/blob/master/samples/authentication/tables/TodoItem.js)</ept>.</source>
          <target state="new">You can see a full example on <bpt id="p1">[</bpt>GitHub<ept id="p1">](https://github.com/Azure/azure-mobile-apps-node/blob/master/samples/authentication/tables/TodoItem.js)</ept>.</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>You can get access to the user identity information via the <ph id="ph1">`user.getIdentity`</ph> method described <bpt id="p1">[</bpt>here<ept id="p1">](http://azure.github.io/azure-mobile-apps-node/module-azure-mobile-apps_auth_user.html#~getIdentity)</ept>.</source>
          <target state="new">You can get access to the user identity information via the <ph id="ph1">`user.getIdentity`</ph> method described <bpt id="p1">[</bpt>here<ept id="p1">](http://azure.github.io/azure-mobile-apps-node/module-azure-mobile-apps_auth_user.html#~getIdentity)</ept>.</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="updating-clients"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Updating clients</source>
          <target state="new"><ph id="ph1">&lt;a name="updating-clients"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Updating clients</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Once you have an operational Mobile App backend, you can work on a new version of your client application which consumes it.</source>
          <target state="new">Once you have an operational Mobile App backend, you can work on a new version of your client application which consumes it.</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Mobile Apps also includes a new version of the client SDKs, and similar to the server upgrade above, you will need to remove all references to the Mobile Services SDKs before installing the Mobile Apps versions.</source>
          <target state="new">Mobile Apps also includes a new version of the client SDKs, and similar to the server upgrade above, you will need to remove all references to the Mobile Services SDKs before installing the Mobile Apps versions.</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>One of the main changes between the versions is that the constructors no longer require an application key.</source>
          <target state="new">One of the main changes between the versions is that the constructors no longer require an application key.</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>You now simply pass in the URL of your Mobile App.</source>
          <target state="new">You now simply pass in the URL of your Mobile App.</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>For example, on the .NET clients, the <ph id="ph1">`MobileServiceClient`</ph> constructor is now:</source>
          <target state="new">For example, on the .NET clients, the <ph id="ph1">`MobileServiceClient`</ph> constructor is now:</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>You can read about installing the new SDKs and using the new structure via the links below:</source>
          <target state="new">You can read about installing the new SDKs and using the new structure via the links below:</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>iOS version 3.0.0 or later</source>
          <target state="new">iOS version 3.0.0 or later</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>.NET (Windows/Xamarin) version 2.0.0 or later</source>
          <target state="new">.NET (Windows/Xamarin) version 2.0.0 or later</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>If your application makes use of push notifications, make note of the specific registration instructions for each platform, as there have been some changes there as well.</source>
          <target state="new">If your application makes use of push notifications, make note of the specific registration instructions for each platform, as there have been some changes there as well.</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>When you have the new client version ready, try it out against your upgraded server project.</source>
          <target state="new">When you have the new client version ready, try it out against your upgraded server project.</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>After validating that it works, you can release a new version of your application to customers.</source>
          <target state="new">After validating that it works, you can release a new version of your application to customers.</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Eventually, once your customers have had a chance to receive these updates, you can delete the Mobile Services version of your app.</source>
          <target state="new">Eventually, once your customers have had a chance to receive these updates, you can delete the Mobile Services version of your app.</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>At this point, you have completely upgraded to an App Service Mobile App using the latest Mobile Apps server SDK.</source>
          <target state="new">At this point, you have completely upgraded to an App Service Mobile App using the latest Mobile Apps server SDK.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>