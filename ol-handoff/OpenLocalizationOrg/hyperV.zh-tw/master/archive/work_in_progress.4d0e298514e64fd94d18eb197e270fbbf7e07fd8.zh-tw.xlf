<?xml version="1.0" encoding="utf-8"?>
<xliff srcLang="en-us" trgLang="zh-tw" version="2.0" xmlns="urn:oasis:names:tc:xliff:document:2.0" xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">090e2dccc937df4c7a80f63b447cb733af5020a3</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <group id="101">
        <unit id="101">
          <segment state="initial" id="101">
            <source>ms.ContentId: 5bbac9eb-c31e-40db-97b1-f33ea59ac3a3</source>
          </segment>
        </unit>
        <unit id="102">
          <segment state="initial" id="102">
            <source>title: Work in Progress</source>
          </segment>
        </unit>
        <unit id="103">
          <segment state="initial" id="103">
            <source>Work in Progress</source>
          </segment>
        </unit>
        <unit id="104">
          <originalData>
            <data id="id1">&lt;linkText&gt;</data>
            <data id="id2">&lt;/linkText&gt;</data>
            <data id="id3">&lt;title&gt;</data>
            <data id="id4">&lt;/title&gt;</data>
            <data id="id5">&lt;link&gt;</data>
            <data id="id6">&lt;/link&gt;</data>
          </originalData>
          <segment state="initial" id="104">
            <source>If you don't see your problem addressed here or have questions, post them on the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId2">forum</pc><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId3"></pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId1"></pc>.</source>
          </segment>
        </unit>
        <unit id="105">
          <segment state="initial" id="105">
            <source>General functionality</source>
          </segment>
        </unit>
        <unit id="106">
          <segment state="initial" id="106">
            <source>Windows Container Image must exactly match container host</source>
          </segment>
        </unit>
        <unit id="107">
          <segment state="initial" id="107">
            <source>A Windows Server Container requires an operating system image that matches the container host in respect to build and patch level.</source>
          </segment>
        </unit>
        <unit id="108">
          <segment state="initial" id="108">
            <source>A mismatch will lead to instability and or unpredictable behavior for the container and/or the host.</source>
          </segment>
        </unit>
        <unit id="109">
          <segment state="initial" id="109">
            <source>If you install updates against the Windows container host OS you will need to update the container base OS image to have the matching updates.</source>
          </segment>
        </unit>
        <unit id="110">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="110">
            <source>
              <pc dataRefEnd="id2" dataRefStart="id1" id="1">Work Around:</pc>
            </source>
          </segment>
        </unit>
        <unit id="111">
          <segment state="initial" id="111">
            <source>Download and install a container base image matching the OS version and patch level of the container host.</source>
          </segment>
        </unit>
        <unit id="112">
          <segment state="initial" id="112">
            <source>Commands sporadically fail -- try again</source>
          </segment>
        </unit>
        <unit id="113">
          <segment state="initial" id="113">
            <source>In our testing, commands occasionally need to be run multiple times.</source>
          </segment>
        </unit>
        <unit id="114">
          <segment state="initial" id="114">
            <source>The same principle applies to other actions.</source>
          </segment>
        </unit>
        <unit id="115">
          <segment state="initial" id="115">
            <source>For example, if you create a new file and it doesn't appear, try touching the file.</source>
          </segment>
        </unit>
        <unit id="116">
          <originalData>
            <data id="id1">&lt;linkText&gt;</data>
            <data id="id2">&lt;/linkText&gt;</data>
            <data id="id3">&lt;title&gt;</data>
            <data id="id4">&lt;/title&gt;</data>
            <data id="id5">&lt;link&gt;</data>
            <data id="id6">&lt;/link&gt;</data>
          </originalData>
          <segment state="initial" id="116">
            <source>If you have to do this, let us know via <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId2">the forums</pc><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId3"></pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId1"></pc>.</source>
          </segment>
        </unit>
        <unit id="117">
          <originalData>
            <data id="id1">&lt;em&gt;</data>
            <data id="id2">&lt;/em&gt;</data>
          </originalData>
          <segment state="initial" id="117">
            <source>
              <pc dataRefEnd="id2" dataRefStart="id1" id="1">* Work Around:  *</pc>
            </source>
          </segment>
        </unit>
        <unit id="118">
          <segment state="initial" id="118">
            <source>Build scripts such that they try commands multiple times.</source>
          </segment>
        </unit>
        <unit id="119">
          <segment state="initial" id="119">
            <source>If a command fails, try again.</source>
          </segment>
        </unit>
        <unit id="120">
          <segment state="initial" id="120">
            <source>All non-C:/ drives are automatically mapped into new containers</source>
          </segment>
        </unit>
        <unit id="121">
          <segment state="initial" id="121">
            <source>All non-C:/ drives available to the container host are automatically mapped into new running Windows Server Containers.</source>
          </segment>
        </unit>
        <unit id="122">
          <segment state="initial" id="122">
            <source>At this point in time there is no way to selectively map folders into a container, as an interim work around drives are mapped automatically.</source>
          </segment>
        </unit>
        <unit id="123">
          <originalData>
            <data id="id1">&lt;em&gt;</data>
            <data id="id2">&lt;/em&gt;</data>
          </originalData>
          <segment state="initial" id="123">
            <source>
              <pc dataRefEnd="id2" dataRefStart="id1" id="1">*Work Around: *</pc>
            </source>
          </segment>
        </unit>
        <unit id="124">
          <segment state="initial" id="124">
            <source>We're working on it.</source>
          </segment>
        </unit>
        <unit id="125">
          <segment state="initial" id="125">
            <source>In the future there will be folder sharing.</source>
          </segment>
        </unit>
        <unit id="126">
          <segment state="initial" id="126">
            <source>Windows Server Containers are starting very slowly</source>
          </segment>
        </unit>
        <unit id="127">
          <segment state="initial" id="127">
            <source>If your container is taking more than 30 seconds to start, it may be performing many duplicate virus scans.</source>
          </segment>
        </unit>
        <unit id="128">
          <segment state="initial" id="128">
            <source>Many anti-malware solutions, such as Windows Defender, maybe unnecessarily scanning files with-in container images including all of the OS binaries and files in the container OS image.</source>
          </segment>
        </unit>
        <unit id="129">
          <segment state="initial" id="129">
            <source>This occurs when ever a new container is created and from the anti-malware’s perspective all of the “container’s files” look like new files that have not previously been scanned.</source>
          </segment>
        </unit>
        <unit id="130">
          <segment state="initial" id="130">
            <source>So when processes inside the container attempt to read these files the anti-malware components first scan them before allowing access to the files.</source>
          </segment>
        </unit>
        <unit id="131">
          <segment state="initial" id="131">
            <source>In reality these files were already scanned when the container image was imported or pulled to the server.</source>
          </segment>
        </unit>
        <unit id="132">
          <segment state="initial" id="132">
            <source>In future previews new infrastructure will be in place such that anti-malware solutions, including Windows Defender, will be aware of these situations and can act accordingly to avoid multiple scans.</source>
          </segment>
        </unit>
        <unit id="133">
          <segment state="initial" id="133">
            <source>Networking</source>
          </segment>
        </unit>
        <unit id="134">
          <segment state="initial" id="134">
            <source>Number of network compartments per container</source>
          </segment>
        </unit>
        <unit id="135">
          <segment state="initial" id="135">
            <source>In this release we support one network compartment per container.</source>
          </segment>
        </unit>
        <unit id="136">
          <segment state="initial" id="136">
            <source>This means that if you have a container with multiple network adapters, you cannot access the same network port on each adapter (e.g. 192.168.0.1:80 and 192.168.0.2:80 belonging to the same container).</source>
          </segment>
        </unit>
        <unit id="137">
          <originalData>
            <data id="id1">&lt;em&gt;</data>
            <data id="id2">&lt;/em&gt;</data>
          </originalData>
          <segment state="initial" id="137">
            <source>
              <pc dataRefEnd="id2" dataRefStart="id1" id="1">*Work Around: *</pc>
            </source>
          </segment>
        </unit>
        <unit id="138">
          <segment state="initial" id="138">
            <source>If multiple endpoints need to be exposed by a container, use NAT port mapping.</source>
          </segment>
        </unit>
        <unit id="139">
          <segment state="initial" id="139">
            <source>Windows containers are not getting IPs</source>
          </segment>
        </unit>
        <unit id="140">
          <segment state="initial" id="140">
            <source>If you're connecting to the windows server containers with DHCP VM Switches it's possible for the container host to recieve an IP wwhile the containers do not.</source>
          </segment>
        </unit>
        <unit id="141">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="141">
            <source>The containers get a 169.254.<pc dataRefEnd="id2" dataRefStart="id1" id="2">*.*</pc> APIPA IP address.</source>
          </segment>
        </unit>
        <unit id="142">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="142">
            <source>
              <pc dataRefEnd="id2" dataRefStart="id1" id="1">Work around:</pc>
            </source>
          </segment>
        </unit>
        <unit id="143">
          <segment state="initial" id="143">
            <source>This is a side effect of sharing the kernel.</source>
          </segment>
        </unit>
        <unit id="144">
          <segment state="initial" id="144">
            <source>All containers affectively have the same mac address.</source>
          </segment>
        </unit>
        <unit id="145">
          <segment state="initial" id="145">
            <source>Enable MAC address spoofing on the container host.</source>
          </segment>
        </unit>
        <unit id="146">
          <segment state="initial" id="146">
            <source>This can be achieved using PowerShell</source>
          </segment>
        </unit>
        <unit id="147">
          <segment state="initial" id="147">
            <source>Creating file shares does not work in a Container</source>
          </segment>
        </unit>
        <unit id="148">
          <segment state="initial" id="148">
            <source>Currently it is not possible to create a file share within a Container.</source>
          </segment>
        </unit>
        <unit id="149">
          <originalData>
            <data id="id1">&lt;code&gt;</data>
            <data id="id2">&lt;/code&gt;</data>
          </originalData>
          <segment state="initial" id="149">
            <source>If you run <pc dataRefEnd="id2" dataRefStart="id1" id="2">net share</pc> you will see an error like this:</source>
          </segment>
        </unit>
        <unit id="150">
          <originalData>
            <data id="id1">&lt;em&gt;</data>
            <data id="id2">&lt;/em&gt;</data>
          </originalData>
          <segment state="initial" id="150">
            <source>
              <pc dataRefEnd="id2" dataRefStart="id1" id="1">*Work Around: *</pc>
            </source>
          </segment>
        </unit>
        <unit id="151">
          <originalData>
            <data id="id1">&lt;code&gt;</data>
            <data id="id2">&lt;/code&gt;</data>
          </originalData>
          <segment state="initial" id="151">
            <source>If you want to copy files into a Container you can use the other way round by running <pc dataRefEnd="id2" dataRefStart="id1" id="2">net use</pc> within the Container.</source>
          </segment>
        </unit>
        <unit id="152">
          <segment state="initial" id="152">
            <source>For example:</source>
          </segment>
        </unit>
        <unit id="153">
          <segment state="initial" id="153">
            <source>Application compatibility</source>
          </segment>
        </unit>
        <unit id="154">
          <originalData>
            <data id="id1">&lt;linkText&gt;</data>
            <data id="id2">&lt;/linkText&gt;</data>
            <data id="id3">&lt;title&gt;</data>
            <data id="id4">&lt;/title&gt;</data>
            <data id="id5">&lt;link&gt;</data>
            <data id="id6">&lt;/link&gt;</data>
          </originalData>
          <segment state="initial" id="154">
            <source>There are so mnay questions about which applications work and don't work in Windows Server Containers, we decided to break application compatability information into <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId2">its own article</pc><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId3"></pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId1"></pc>.</source>
          </segment>
        </unit>
        <unit id="155">
          <segment state="initial" id="155">
            <source>Some of the most common issues are located here as well.</source>
          </segment>
        </unit>
        <unit id="156">
          <segment state="initial" id="156">
            <source>WinRM won't start in a Windows Server Container</source>
          </segment>
        </unit>
        <unit id="157">
          <segment state="initial" id="157">
            <source>WinRM starts, throws an error, and stops again.</source>
          </segment>
        </unit>
        <unit id="158">
          <segment state="initial" id="158">
            <source>Errors are not logged in the event log.</source>
          </segment>
        </unit>
        <unit id="159">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="159">
            <source>
              <pc dataRefEnd="id2" dataRefStart="id1" id="1">Work Around:</pc>
            </source>
          </segment>
        </unit>
        <unit id="160">
          <originalData>
            <data id="id1">&lt;linkText&gt;</data>
            <data id="id2">&lt;/linkText&gt;</data>
            <data id="id3">&lt;title&gt;</data>
            <data id="id4">&lt;/title&gt;</data>
            <data id="id5">&lt;link&gt;</data>
            <data id="id6">&lt;/link&gt;</data>
          </originalData>
          <segment state="initial" id="160">
            <source>Use WMI, <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId2">RDP</pc><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId3"></pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId1"></pc>, or Enter-PSSession -ContainerID</source>
          </segment>
        </unit>
        <unit id="161">
          <segment state="initial" id="161">
            <source>Can't install ASP.NET 4.5 or ASP.NET 3.5 with IIS in a container using DISM</source>
          </segment>
        </unit>
        <unit id="162">
          <segment state="initial" id="162">
            <source>Installing IIS-ASPNET45 in a container doesn't work inside a Windows Server container.</source>
          </segment>
        </unit>
        <unit id="163">
          <segment state="initial" id="163">
            <source>The installation progress sticks around 95.5%.</source>
          </segment>
        </unit>
        <unit id="164">
          <segment state="initial" id="164">
            <source>This fails because ASP.NET 4.5 doesn't run in a container.</source>
          </segment>
        </unit>
        <unit id="165">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="165">
            <source>
              <pc dataRefEnd="id2" dataRefStart="id1" id="1">Work Around:</pc>
            </source>
          </segment>
        </unit>
        <unit id="166">
          <segment state="initial" id="166">
            <source>Instead, install the Web-Server role to use IIS.</source>
          </segment>
        </unit>
        <unit id="167">
          <segment state="initial" id="167">
            <source>ASP 5.0 does work.</source>
          </segment>
        </unit>
        <unit id="168">
          <originalData>
            <data id="id1">&lt;linkText&gt;</data>
            <data id="id2">&lt;/linkText&gt;</data>
            <data id="id3">&lt;title&gt;</data>
            <data id="id4">&lt;/title&gt;</data>
            <data id="id5">&lt;link&gt;</data>
            <data id="id6">&lt;/link&gt;</data>
          </originalData>
          <segment state="initial" id="168">
            <source>See the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId2">application compatability article</pc><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId3"></pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId1"></pc> for more information about what applications can be containerized.</source>
          </segment>
        </unit>
        <unit id="169">
          <segment state="initial" id="169">
            <source>Docker management</source>
          </segment>
        </unit>
        <unit id="170">
          <segment state="initial" id="170">
            <source>Docker clients unsecured by default</source>
          </segment>
        </unit>
        <unit id="171">
          <segment state="initial" id="171">
            <source>In this pre-release, docker communication is public if you know where to look.</source>
          </segment>
        </unit>
        <unit id="172">
          <segment state="initial" id="172">
            <source>Docker commands that don't work with Windows Server Containers</source>
          </segment>
        </unit>
        <unit id="173">
          <segment state="initial" id="173">
            <source>Commands known to fail:</source>
          </segment>
        </unit>
        <unit id="174">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="174">
            <source>
              <pc dataRefEnd="id2" dataRefStart="id1" id="1">Docker command</pc>
            </source>
          </segment>
        </unit>
        <unit id="175">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="175">
            <source>
              <pc dataRefEnd="id2" dataRefStart="id1" id="1">Where it runs</pc>
            </source>
          </segment>
        </unit>
        <unit id="176">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="176">
            <source>
              <pc dataRefEnd="id2" dataRefStart="id1" id="1">Error</pc>
            </source>
          </segment>
        </unit>
        <unit id="177">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="177">
            <source>
              <pc dataRefEnd="id2" dataRefStart="id1" id="1">Notes</pc>
            </source>
          </segment>
        </unit>
        <unit id="178">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="178">
            <source>
              <pc dataRefEnd="id2" dataRefStart="id1" id="1">docker commit</pc>
            </source>
          </segment>
        </unit>
        <unit id="179">
          <segment state="initial" id="179">
            <source>image</source>
          </segment>
        </unit>
        <unit id="180">
          <segment state="initial" id="180">
            <source>Docker stops running container and doesn’t show correct error message</source>
          </segment>
        </unit>
        <unit id="181">
          <segment state="initial" id="181">
            <source>Committing a stopped container works.</source>
          </segment>
        </unit>
        <unit id="182">
          <segment state="initial" id="182">
            <source>For running containers: We're working on it :)</source>
          </segment>
        </unit>
        <unit id="183">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="183">
            <source>
              <pc dataRefEnd="id2" dataRefStart="id1" id="1">docker diff</pc>
            </source>
          </segment>
        </unit>
        <unit id="184">
          <segment state="initial" id="184">
            <source>daemon</source>
          </segment>
        </unit>
        <unit id="185">
          <segment state="initial" id="185">
            <source>Error: The windows graphdriver does not support Changes()</source>
          </segment>
        </unit>
        <unit id="186">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="186">
            <source>
              <pc dataRefEnd="id2" dataRefStart="id1" id="1">docker kill</pc>
            </source>
          </segment>
        </unit>
        <unit id="187">
          <segment state="initial" id="187">
            <source>container</source>
          </segment>
        </unit>
        <unit id="188">
          <segment state="initial" id="188">
            <source>Error: Invalid signal: KILL  Error: failed to kill containers:[]</source>
          </segment>
        </unit>
        <unit id="189">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="189">
            <source>
              <pc dataRefEnd="id2" dataRefStart="id1" id="1">docker load</pc>
            </source>
          </segment>
        </unit>
        <unit id="190">
          <segment state="initial" id="190">
            <source>image</source>
          </segment>
        </unit>
        <unit id="191">
          <segment state="initial" id="191">
            <source>Fails silently</source>
          </segment>
        </unit>
        <unit id="192">
          <segment state="initial" id="192">
            <source>No error but the image isn't loading either</source>
          </segment>
        </unit>
        <unit id="193">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="193">
            <source>
              <pc dataRefEnd="id2" dataRefStart="id1" id="1">docker pause</pc>
            </source>
          </segment>
        </unit>
        <unit id="194">
          <segment state="initial" id="194">
            <source>container</source>
          </segment>
        </unit>
        <unit id="195">
          <segment state="initial" id="195">
            <source>Error: Windows container cannot be paused.</source>
          </segment>
        </unit>
        <unit id="196">
          <segment state="initial" id="196">
            <source>May be not supported</source>
          </segment>
        </unit>
        <unit id="197">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="197">
            <source>
              <pc dataRefEnd="id2" dataRefStart="id1" id="1">docker port</pc>
            </source>
          </segment>
        </unit>
        <unit id="198">
          <segment state="initial" id="198">
            <source>container</source>
          </segment>
        </unit>
        <unit id="199">
          <segment state="initial" id="199">
            <source>No port is getting listed even we are able to RDP.</source>
          </segment>
        </unit>
        <unit id="200">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="200">
            <source>
              <pc dataRefEnd="id2" dataRefStart="id1" id="1">docker pull</pc>
            </source>
          </segment>
        </unit>
        <unit id="201">
          <segment state="initial" id="201">
            <source>daemon</source>
          </segment>
        </unit>
        <unit id="202">
          <segment state="initial" id="202">
            <source>Error: System cannot find the file path.</source>
          </segment>
        </unit>
        <unit id="203">
          <segment state="initial" id="203">
            <source>We cant run container using this image.</source>
          </segment>
        </unit>
        <unit id="204">
          <segment state="initial" id="204">
            <source>Image is getting added can't be used.</source>
          </segment>
        </unit>
        <unit id="205">
          <segment state="initial" id="205">
            <source>We're working on it :)</source>
          </segment>
        </unit>
        <unit id="206">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="206">
            <source>
              <pc dataRefEnd="id2" dataRefStart="id1" id="1">docker restart</pc>
            </source>
          </segment>
        </unit>
        <unit id="207">
          <segment state="initial" id="207">
            <source>container</source>
          </segment>
        </unit>
        <unit id="208">
          <segment state="initial" id="208">
            <source>Error: A system shutdown is in progress.</source>
          </segment>
        </unit>
        <unit id="209">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="209">
            <source>
              <pc dataRefEnd="id2" dataRefStart="id1" id="1">docker unpause</pc>
            </source>
          </segment>
        </unit>
        <unit id="210">
          <segment state="initial" id="210">
            <source>container</source>
          </segment>
        </unit>
        <unit id="211">
          <segment state="initial" id="211">
            <source>Can't test because pause doesn't work yet.</source>
          </segment>
        </unit>
        <unit id="212">
          <originalData>
            <data id="id1">&lt;linkText&gt;</data>
            <data id="id2">&lt;/linkText&gt;</data>
            <data id="id3">&lt;title&gt;</data>
            <data id="id4">&lt;/title&gt;</data>
            <data id="id5">&lt;link&gt;</data>
            <data id="id6">&lt;/link&gt;</data>
          </originalData>
          <segment state="initial" id="212">
            <source>If anything that isn't on this list fails (or if a command fails differently than expected), let us know via <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId2">the forums</pc><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId3"></pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId1"></pc>.</source>
          </segment>
        </unit>
        <unit id="213">
          <segment state="initial" id="213">
            <source>Docker commands that partially work with Windows Server Containers</source>
          </segment>
        </unit>
        <unit id="214">
          <segment state="initial" id="214">
            <source>Commands with partial functionality:</source>
          </segment>
        </unit>
        <unit id="215">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="215">
            <source>
              <pc dataRefEnd="id2" dataRefStart="id1" id="1">Docker command</pc>
            </source>
          </segment>
        </unit>
        <unit id="216">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="216">
            <source>
              <pc dataRefEnd="id2" dataRefStart="id1" id="1">Runs on...</pc>
            </source>
          </segment>
        </unit>
        <unit id="217">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="217">
            <source>
              <pc dataRefEnd="id2" dataRefStart="id1" id="1">Parameter</pc>
            </source>
          </segment>
        </unit>
        <unit id="218">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="218">
            <source>
              <pc dataRefEnd="id2" dataRefStart="id1" id="1">Notes</pc>
            </source>
          </segment>
        </unit>
        <unit id="219">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="219">
            <source>
              <pc dataRefEnd="id2" dataRefStart="id1" id="1">docker attach</pc>
            </source>
          </segment>
        </unit>
        <unit id="220">
          <segment state="initial" id="220">
            <source>container</source>
          </segment>
        </unit>
        <unit id="221">
          <segment state="initial" id="221">
            <source>--no-stdin=false</source>
          </segment>
        </unit>
        <unit id="222">
          <segment state="initial" id="222">
            <source>The command doesn't exit when Ctrl-P and CTRL-Q is pressed</source>
          </segment>
        </unit>
        <unit id="223">
          <segment state="initial" id="223">
            <source>--sig-proxy=true</source>
          </segment>
        </unit>
        <unit id="224">
          <segment state="initial" id="224">
            <source>works</source>
          </segment>
        </unit>
        <unit id="225">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="225">
            <source>
              <pc dataRefEnd="id2" dataRefStart="id1" id="1">docker build</pc>
            </source>
          </segment>
        </unit>
        <unit id="226">
          <segment state="initial" id="226">
            <source>images</source>
          </segment>
        </unit>
        <unit id="227">
          <segment state="initial" id="227">
            <source>-f, --file</source>
          </segment>
        </unit>
        <unit id="228">
          <segment state="initial" id="228">
            <source>Error: Unable to prepare context: Unable to get synlinks</source>
          </segment>
        </unit>
        <unit id="229">
          <segment state="initial" id="229">
            <source>--force-rm=false</source>
          </segment>
        </unit>
        <unit id="230">
          <segment state="initial" id="230">
            <source>works</source>
          </segment>
        </unit>
        <unit id="231">
          <segment state="initial" id="231">
            <source>--no-cache=false</source>
          </segment>
        </unit>
        <unit id="232">
          <segment state="initial" id="232">
            <source>works</source>
          </segment>
        </unit>
        <unit id="233">
          <segment state="initial" id="233">
            <source>-q, --quiet=false</source>
          </segment>
        </unit>
        <unit id="234">
          <segment state="initial" id="234">
            <source>--rm=true</source>
          </segment>
        </unit>
        <unit id="235">
          <segment state="initial" id="235">
            <source>works</source>
          </segment>
        </unit>
        <unit id="236">
          <segment state="initial" id="236">
            <source>-t, --tag=""</source>
          </segment>
        </unit>
        <unit id="237">
          <segment state="initial" id="237">
            <source>works</source>
          </segment>
        </unit>
        <unit id="238">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="238">
            <source>
              <pc dataRefEnd="id2" dataRefStart="id1" id="1">docker login</pc>
            </source>
          </segment>
        </unit>
        <unit id="239">
          <segment state="initial" id="239">
            <source>daemon</source>
          </segment>
        </unit>
        <unit id="240">
          <segment state="initial" id="240">
            <source>-e, -p, -u</source>
          </segment>
        </unit>
        <unit id="241">
          <segment state="initial" id="241">
            <source>sporratic behavior</source>
          </segment>
        </unit>
        <unit id="242">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="242">
            <source>
              <pc dataRefEnd="id2" dataRefStart="id1" id="1">docker push</pc>
            </source>
          </segment>
        </unit>
        <unit id="243">
          <segment state="initial" id="243">
            <source>daemon</source>
          </segment>
        </unit>
        <unit id="244">
          <segment state="initial" id="244">
            <source>Getting occasional "repository does not exit" errors.</source>
          </segment>
        </unit>
        <unit id="245">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="245">
            <source>
              <pc dataRefEnd="id2" dataRefStart="id1" id="1">docker rm</pc>
            </source>
          </segment>
        </unit>
        <unit id="246">
          <segment state="initial" id="246">
            <source>container</source>
          </segment>
        </unit>
        <unit id="247">
          <segment state="initial" id="247">
            <source>-f</source>
          </segment>
        </unit>
        <unit id="248">
          <segment state="initial" id="248">
            <source>Error: A system shutdown is in progress.</source>
          </segment>
        </unit>
        <unit id="249">
          <originalData>
            <data id="id1">&lt;linkText&gt;</data>
            <data id="id2">&lt;/linkText&gt;</data>
            <data id="id3">&lt;title&gt;</data>
            <data id="id4">&lt;/title&gt;</data>
            <data id="id5">&lt;link&gt;</data>
            <data id="id6">&lt;/link&gt;</data>
          </originalData>
          <segment state="initial" id="249">
            <source>If anything that isn't on this list fails, if a command fails differently than expected, or if you find a work around, let us know via <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId2">the forums</pc><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId3"></pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId1"></pc>.</source>
          </segment>
        </unit>
        <unit id="250">
          <segment state="initial" id="250">
            <source>Pasting commands to interactive Docker session is limited to 50 characters</source>
          </segment>
        </unit>
        <unit id="251">
          <segment state="initial" id="251">
            <source>If you copy a command line into an interactive Docker session, it is currently limited to 50 characters.</source>
          </segment>
        </unit>
        <unit id="252">
          <segment state="initial" id="252">
            <source>The pasted string is simply truncated.</source>
          </segment>
        </unit>
        <unit id="253">
          <segment state="initial" id="253">
            <source>This is not by design, we're working on lifting the restriction.</source>
          </segment>
        </unit>
        <unit id="254">
          <segment state="initial" id="254">
            <source>net use returns System error 1223 instead of prompting for username or password</source>
          </segment>
        </unit>
        <unit id="255">
          <segment state="initial" id="255">
            <source>Workaround: specify both, the username and password, when running net use.</source>
          </segment>
        </unit>
        <unit id="256">
          <segment state="initial" id="256">
            <source>For example:</source>
          </segment>
        </unit>
        <unit id="257">
          <segment state="initial" id="257">
            <source>HCS Shim errors when creating new container images</source>
          </segment>
        </unit>
        <unit id="258">
          <segment state="initial" id="258">
            <source>If you encounter error messages like this:</source>
          </segment>
        </unit>
        <unit id="259">
          <segment state="initial" id="259">
            <source>You're hitting an issue addressed by the Zero Day Patch for Windows Server 2016 TP3.</source>
          </segment>
        </unit>
        <unit id="260">
          <segment state="initial" id="260">
            <source>This error can also occur when running the Python-3.4.3.msi installer or node-v0.12.7.msi in a container.</source>
          </segment>
        </unit>
        <unit id="261">
          <originalData>
            <data id="id1">&lt;linkText&gt;</data>
            <data id="id2">&lt;/linkText&gt;</data>
            <data id="id3">&lt;title&gt;</data>
            <data id="id4">&lt;/title&gt;</data>
            <data id="id5">&lt;link&gt;</data>
            <data id="id6">&lt;/link&gt;</data>
          </originalData>
          <segment state="initial" id="261">
            <source>If you hit other hcsshim errors, let us know via <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId2">the forums</pc><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId3"></pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId1"></pc>.</source>
          </segment>
        </unit>
        <unit id="262">
          <segment state="initial" id="262">
            <source>Accessing windows server container with Remote Desktop</source>
          </segment>
        </unit>
        <unit id="263">
          <segment state="initial" id="263">
            <source>Windows Server Containers can be managed/interacted with through a RDP session.</source>
          </segment>
        </unit>
        <unit id="264">
          <segment state="initial" id="264">
            <source>The following steps are needed to remotely connect to a Windows Server Container using RDP.</source>
          </segment>
        </unit>
        <unit id="265">
          <segment state="initial" id="265">
            <source>It is assumed that the Container is connected to the network via a NAT switch.</source>
          </segment>
        </unit>
        <unit id="266">
          <segment state="initial" id="266">
            <source>This is the default when setting up a Container host through the installation script or creating a new VM in Azure.</source>
          </segment>
        </unit>
        <unit id="267">
          <originalData>
            <data id="id1">&lt;em&gt;</data>
            <data id="id2">&lt;/em&gt;</data>
          </originalData>
          <segment state="initial" id="267">
            <source>
              <pc dataRefEnd="id2" dataRefStart="id1" id="1">* In the Container you want to connect to *</pc>
            </source>
          </segment>
        </unit>
        <unit id="268">
          <originalData>
            <data id="id1">&lt;code&gt;</data>
            <data id="id2">&lt;/code&gt;</data>
          </originalData>
          <segment state="initial" id="268">
            <source>The following steps require either managing the Container using Docker or, when using PowerShell, specifying the <pc dataRefEnd="id2" dataRefStart="id1" id="2">-RunAsAdministrator</pc> switch when connecting to the Container.</source>
          </segment>
        </unit>
        <unit id="269">
          <segment state="initial" id="269">
            <source>Please take the following steps in the Container you want to connect to.</source>
          </segment>
        </unit>
        <unit id="270">
          <segment state="initial" id="270">
            <source>Obtain the Container's IP address</source>
          </segment>
        </unit>
        <unit id="271">
          <segment state="initial" id="271">
            <source>Windows IP Configuration</source>
          </segment>
        </unit>
        <unit id="272">
          <segment state="initial" id="272">
            <source>Ethernet adapter vEthernet (Virtual Switch-f758a5a9519e1956cc3bef06eb03e5728d3fb61cf6d310246185587be490210a-0):</source>
          </segment>
        </unit>
        <unit id="273">
          <segment state="initial" id="273">
            <source>Connection-specific DNS Suffix  .</source>
          </segment>
        </unit>
        <unit id="274">
          <segment state="initial" id="274">
            <source>:</source>
          </segment>
        </unit>
        <unit id="275">
          <segment state="initial" id="275">
            <source>Link-local IPv6 Address .</source>
          </segment>
        </unit>
        <unit id="276">
          <segment state="initial" id="276">
            <source>.</source>
          </segment>
        </unit>
        <unit id="277">
          <segment state="initial" id="277">
            <source>.</source>
          </segment>
        </unit>
        <unit id="278">
          <segment state="initial" id="278">
            <source>.</source>
          </segment>
        </unit>
        <unit id="279">
          <segment state="initial" id="279">
            <source>.</source>
          </segment>
        </unit>
        <unit id="280">
          <segment state="initial" id="280">
            <source>: fe80::91cd:fb4c:4ea5:51df%17</source>
          </segment>
        </unit>
        <unit id="281">
          <segment state="initial" id="281">
            <source>IPv4 Address.</source>
          </segment>
        </unit>
        <unit id="282">
          <segment state="initial" id="282">
            <source>.</source>
          </segment>
        </unit>
        <unit id="283">
          <segment state="initial" id="283">
            <source>.</source>
          </segment>
        </unit>
        <unit id="284">
          <segment state="initial" id="284">
            <source>.</source>
          </segment>
        </unit>
        <unit id="285">
          <segment state="initial" id="285">
            <source>.</source>
          </segment>
        </unit>
        <unit id="286">
          <segment state="initial" id="286">
            <source>.</source>
          </segment>
        </unit>
        <unit id="287">
          <segment state="initial" id="287">
            <source>.</source>
          </segment>
        </unit>
        <unit id="288">
          <segment state="initial" id="288">
            <source>.</source>
          </segment>
        </unit>
        <unit id="289">
          <segment state="initial" id="289">
            <source>.</source>
          </segment>
        </unit>
        <unit id="290">
          <segment state="initial" id="290">
            <source>.</source>
          </segment>
        </unit>
        <unit id="291">
          <segment state="initial" id="291">
            <source>.</source>
          </segment>
        </unit>
        <unit id="292">
          <segment state="initial" id="292">
            <source>: 172.16.0.2</source>
          </segment>
        </unit>
        <unit id="293">
          <segment state="initial" id="293">
            <source>Subnet Mask .</source>
          </segment>
        </unit>
        <unit id="294">
          <segment state="initial" id="294">
            <source>.</source>
          </segment>
        </unit>
        <unit id="295">
          <segment state="initial" id="295">
            <source>.</source>
          </segment>
        </unit>
        <unit id="296">
          <segment state="initial" id="296">
            <source>.</source>
          </segment>
        </unit>
        <unit id="297">
          <segment state="initial" id="297">
            <source>.</source>
          </segment>
        </unit>
        <unit id="298">
          <segment state="initial" id="298">
            <source>.</source>
          </segment>
        </unit>
        <unit id="299">
          <segment state="initial" id="299">
            <source>.</source>
          </segment>
        </unit>
        <unit id="300">
          <segment state="initial" id="300">
            <source>.</source>
          </segment>
        </unit>
        <unit id="301">
          <segment state="initial" id="301">
            <source>.</source>
          </segment>
        </unit>
        <unit id="302">
          <segment state="initial" id="302">
            <source>.</source>
          </segment>
        </unit>
        <unit id="303">
          <segment state="initial" id="303">
            <source>.</source>
          </segment>
        </unit>
        <unit id="304">
          <segment state="initial" id="304">
            <source>: 255.240.0.0</source>
          </segment>
        </unit>
        <unit id="305">
          <segment state="initial" id="305">
            <source>Default Gateway .</source>
          </segment>
        </unit>
        <unit id="306">
          <segment state="initial" id="306">
            <source>.</source>
          </segment>
        </unit>
        <unit id="307">
          <segment state="initial" id="307">
            <source>.</source>
          </segment>
        </unit>
        <unit id="308">
          <segment state="initial" id="308">
            <source>.</source>
          </segment>
        </unit>
        <unit id="309">
          <segment state="initial" id="309">
            <source>.</source>
          </segment>
        </unit>
        <unit id="310">
          <segment state="initial" id="310">
            <source>.</source>
          </segment>
        </unit>
        <unit id="311">
          <segment state="initial" id="311">
            <source>.</source>
          </segment>
        </unit>
        <unit id="312">
          <segment state="initial" id="312">
            <source>.</source>
          </segment>
        </unit>
        <unit id="313">
          <segment state="initial" id="313">
            <source>.</source>
          </segment>
        </unit>
        <unit id="314">
          <segment state="initial" id="314">
            <source>: 172.16.0.1</source>
          </segment>
        </unit>
        <unit id="315">
          <segment state="initial" id="315">
            <source>net user administrator [yourpassword]</source>
          </segment>
        </unit>
        <unit id="316">
          <segment state="initial" id="316">
            <source>net user administrator /active:yes</source>
          </segment>
        </unit>
        <unit id="317">
          <segment state="initial" id="317">
            <source>New-NetFirewallRule -Name "RDP" -DisplayName "Remote Desktop Protocol" -Protocol TCP -LocalPort @(3389) -Action Allow</source>
          </segment>
        </unit>
        <unit id="318">
          <segment state="initial" id="318">
            <source>New-NetFirewallRule -Name "ContainerRDP" -DisplayName "RDP Port for connecting to Container" -Protocol TCP -LocalPort @(3390) -Action Allow</source>
          </segment>
        </unit>
        <unit id="319">
          <segment state="initial" id="319">
            <source>Add-NetNatStaticMapping -NatName ContainerNAT -Protocol TCP -ExternalPort 3390 -ExternalIPAddress 0.0.0.0 -InternalPort 3389 -InternalIPAddress [your container IP]</source>
          </segment>
        </unit>
        <unit id="320">
          <segment state="initial" id="320">
            <source>mstsc /v:[ContainerHostIP]:3390 /prompt</source>
          </segment>
        </unit>
        <unit id="321">
          <segment state="initial" id="321">
            <source>```</source>
          </segment>
        </unit>
        <unit id="322">
          <originalData>
            <data id="id1">&lt;code&gt;</data>
            <data id="id2">&lt;/code&gt;</data>
          </originalData>
          <segment state="initial" id="322">
            <source>Please specify <pc dataRefEnd="id2" dataRefStart="id1" id="2">administrator</pc> as the user name and the password that you chose as the password.</source>
          </segment>
        </unit>
        <unit id="323">
          <segment state="initial" id="323">
            <source>The Remote Desktop Connection will ask you whether you want connect to the system despite certificate errors.</source>
          </segment>
        </unit>
        <unit id="324">
          <segment state="initial" id="324">
            <source>If you select "Yes", the RDP connection will be opened.</source>
          </segment>
        </unit>
        <unit id="325">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="325">
            <source>
              <pc dataRefEnd="id2" dataRefStart="id1" id="1">Note:</pc> Exiting the container RDP session without logoff may prevent the container from shutting down.</source>
          </segment>
        </unit>
        <unit id="326">
          <segment state="initial" id="326">
            <source>Please make sure to exit the RDP session by typing "logoff" (instead of "exit" or just closing the RDP window) before shutting the container down.</source>
          </segment>
        </unit>
        <unit id="327">
          <segment state="initial" id="327">
            <source>PowerShell management</source>
          </segment>
        </unit>
        <unit id="328">
          <segment state="initial" id="328">
            <source>Enter-PSSession has containerid argument, New-PSSession doesn't</source>
          </segment>
        </unit>
        <unit id="329">
          <segment state="initial" id="329">
            <source>This is correct.</source>
          </segment>
        </unit>
        <unit id="330">
          <segment state="initial" id="330">
            <source>We're planning on full cimsession support in the future.</source>
          </segment>
        </unit>
        <unit id="331">
          <originalData>
            <data id="id1">&lt;linkText&gt;</data>
            <data id="id2">&lt;/linkText&gt;</data>
            <data id="id3">&lt;title&gt;</data>
            <data id="id4">&lt;/title&gt;</data>
            <data id="id5">&lt;link&gt;</data>
            <data id="id6">&lt;/link&gt;</data>
          </originalData>
          <segment state="initial" id="331">
            <source>Feel free to voice feature requests in <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId2">the forums</pc><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId3"></pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId1"></pc>.</source>
          </segment>
        </unit>
        <unit id="332">
          <originalData>
            <data id="id1">&lt;linkText&gt;</data>
            <data id="id2">&lt;/linkText&gt;</data>
            <data id="id3">&lt;title&gt;</data>
            <data id="id4">&lt;/title&gt;</data>
            <data id="id5">&lt;link&gt;</data>
            <data id="id6">&lt;/link&gt;</data>
          </originalData>
          <segment state="initial" id="332">
            <source>
              <pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId2">Back to Container Home</pc>
              <pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId3">
              </pc>
              <pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId1">
              </pc>
            </source>
          </segment>
        </unit>
      </group>
    </group>
  </file>
</xliff>