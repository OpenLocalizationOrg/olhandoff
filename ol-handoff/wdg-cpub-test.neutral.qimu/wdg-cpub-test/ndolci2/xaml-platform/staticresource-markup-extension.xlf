<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci2\xaml-platform\staticresource-markup-extension.md</xliffext:olfilepath>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">56faf1e14699730e0ae5ca73e5f17b04c6ff3a1a</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-e58fd48" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a value for any XAML attribute by evaluating a reference to an already defined resource.</source>
          <target state="new">Provides a value for any XAML attribute by evaluating a reference to an already defined resource.</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Resources are defined in a ResourceDictionary, and a StaticResource usage references the key of that resource in the ResourceDictionary.</source>
          <target state="new">Resources are defined in a ResourceDictionary, and a StaticResource usage references the key of that resource in the ResourceDictionary.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>StaticResource markup extension</source>
          <target state="new">StaticResource markup extension</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>{StaticResource} markup extension</source>
          <target state="new">{StaticResource} markup extension</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Updated for UWP apps on Windows 10.</source>
          <target state="new">Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept></source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept></target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Provides a value for any XAML attribute by evaluating a reference to an already defined resource.</source>
          <target state="new">Provides a value for any XAML attribute by evaluating a reference to an already defined resource.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Resources are defined in a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ResourceDictionary<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208794)</ept>, and a <bpt id="p3">**</bpt>StaticResource<ept id="p3">**</ept> usage references the key of that resource in the <bpt id="p4">**</bpt>ResourceDictionary<ept id="p4">**</ept>.</source>
          <target state="new">Resources are defined in a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ResourceDictionary<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208794)</ept>, and a <bpt id="p3">**</bpt>StaticResource<ept id="p3">**</ept> usage references the key of that resource in the <bpt id="p4">**</bpt>ResourceDictionary<ept id="p4">**</ept>.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>XAML attribute usage</source>
          <target state="new">XAML attribute usage</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>XAML values</source>
          <target state="new">XAML values</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Term</source>
          <target state="new">Term</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="new">Description</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>key</source>
          <target state="new">key</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The key for the requested resource.</source>
          <target state="new">The key for the requested resource.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This key is initially assigned by the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ResourceDictionary<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208794)</ept>.</source>
          <target state="new">This key is initially assigned by the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ResourceDictionary<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208794)</ept>.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>A resource key can be any string defined in the XamlName Grammar.</source>
          <target state="new">A resource key can be any string defined in the XamlName Grammar.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Remarks</source>
          <target state="new">Remarks</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>StaticResource<ept id="p1">**</ept> is a technique for obtaining values for a XAML attribute that are defined elsewhere in a XAML resource dictionary.</source>
          <target state="new"><bpt id="p1">**</bpt>StaticResource<ept id="p1">**</ept> is a technique for obtaining values for a XAML attribute that are defined elsewhere in a XAML resource dictionary.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Values might be placed in a resource dictionary because they are intended to be shared by multiple property values, or because a XAML resource dictionary is used as a XAML packaging or factoring technique.</source>
          <target state="new">Values might be placed in a resource dictionary because they are intended to be shared by multiple property values, or because a XAML resource dictionary is used as a XAML packaging or factoring technique.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>An example of a XAML packaging technique is the theme dictionary for a control.</source>
          <target state="new">An example of a XAML packaging technique is the theme dictionary for a control.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Another example is merged resource dictionaries used for resource fallback.</source>
          <target state="new">Another example is merged resource dictionaries used for resource fallback.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>StaticResource<ept id="p1">**</ept> takes one argument, which specifies the key for the requested resource.</source>
          <target state="new"><bpt id="p1">**</bpt>StaticResource<ept id="p1">**</ept> takes one argument, which specifies the key for the requested resource.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>A resource key is always a string in Windows Runtime XAML.</source>
          <target state="new">A resource key is always a string in Windows Runtime XAML.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For more info on how the resource key is initially specified, see <bpt id="p1">[</bpt>x:Key attribute<ept id="p1">](x-key-attribute.md)</ept>.</source>
          <target state="new">For more info on how the resource key is initially specified, see <bpt id="p1">[</bpt>x:Key attribute<ept id="p1">](x-key-attribute.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The rules by which a <bpt id="p1">**</bpt>StaticResource<ept id="p1">**</ept> resolves to an item in a resource dictionary are not described in this topic.</source>
          <target state="new">The rules by which a <bpt id="p1">**</bpt>StaticResource<ept id="p1">**</ept> resolves to an item in a resource dictionary are not described in this topic.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>That depends on whether the reference and the resource both exist in a template, whether merged resource dictionaries are used, and so on.</source>
          <target state="new">That depends on whether the reference and the resource both exist in a template, whether merged resource dictionaries are used, and so on.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For more info on how to define resources and properly use a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ResourceDictionary<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208794)</ept>, including sample code, see <bpt id="p3">[</bpt>ResourceDictionary and XAML resource references<ept id="p3">](https://msdn.microsoft.com/library/windows/apps/mt187273)</ept>.</source>
          <target state="new">For more info on how to define resources and properly use a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ResourceDictionary<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208794)</ept>, including sample code, see <bpt id="p3">[</bpt>ResourceDictionary and XAML resource references<ept id="p3">](https://msdn.microsoft.com/library/windows/apps/mt187273)</ept>.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Important</source>
          <target state="new">Important</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">**</bpt>StaticResource<ept id="p1">**</ept> must not attempt to make a forward reference to a resource that is defined lexically further within the XAML file.</source>
          <target state="new">A <bpt id="p1">**</bpt>StaticResource<ept id="p1">**</ept> must not attempt to make a forward reference to a resource that is defined lexically further within the XAML file.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Attempting to do so is not supported.</source>
          <target state="new">Attempting to do so is not supported.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Even if the forward reference doesn't fail, trying to make one carries a performance penalty.</source>
          <target state="new">Even if the forward reference doesn't fail, trying to make one carries a performance penalty.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>For best results, adjust the composition of your resource dictionaries so that forward references are avoided.</source>
          <target state="new">For best results, adjust the composition of your resource dictionaries so that forward references are avoided.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Attempting to specify a <bpt id="p1">**</bpt>StaticResource<ept id="p1">**</ept> to a key that cannot resolve throws a XAML parse exception at run time.</source>
          <target state="new">Attempting to specify a <bpt id="p1">**</bpt>StaticResource<ept id="p1">**</ept> to a key that cannot resolve throws a XAML parse exception at run time.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Design tools may also offer warnings or errors.</source>
          <target state="new">Design tools may also offer warnings or errors.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>In the Windows Runtime XAML processor implementation, there is no backing class representation for <bpt id="p1">**</bpt>StaticResource<ept id="p1">**</ept> functionality.</source>
          <target state="new">In the Windows Runtime XAML processor implementation, there is no backing class representation for <bpt id="p1">**</bpt>StaticResource<ept id="p1">**</ept> functionality.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>StaticResource<ept id="p1">**</ept> is exclusively for use in XAML.</source>
          <target state="new"><bpt id="p1">**</bpt>StaticResource<ept id="p1">**</ept> is exclusively for use in XAML.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The closest equivalent in code is to use the collection API of a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ResourceDictionary<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208794)</ept>, for example calling <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Contains<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/jj635925)</ept> or <bpt id="p5">[</bpt><bpt id="p6">**</bpt>TryGetValue<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/jj603139)</ept>.</source>
          <target state="new">The closest equivalent in code is to use the collection API of a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ResourceDictionary<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208794)</ept>, for example calling <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Contains<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/jj635925)</ept> or <bpt id="p5">[</bpt><bpt id="p6">**</bpt>TryGetValue<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/jj603139)</ept>.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>{ThemeResource} markup extension<ept id="p1">](themeresource-markup-extension.md)</ept> is a similar markup extension that references named resources in another location.</source>
          <target state="new"><bpt id="p1">[</bpt>{ThemeResource} markup extension<ept id="p1">](themeresource-markup-extension.md)</ept> is a similar markup extension that references named resources in another location.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The difference is that {ThemeResource} markup extension has the ability to return different resources depending on the system theme that's active.</source>
          <target state="new">The difference is that {ThemeResource} markup extension has the ability to return different resources depending on the system theme that's active.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>For more info see <bpt id="p1">[</bpt>{ThemeResource} markup extension<ept id="p1">](themeresource-markup-extension.md)</ept>.</source>
          <target state="new">For more info see <bpt id="p1">[</bpt>{ThemeResource} markup extension<ept id="p1">](themeresource-markup-extension.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>StaticResource<ept id="p1">**</ept> is a markup extension.</source>
          <target state="new"><bpt id="p1">**</bpt>StaticResource<ept id="p1">**</ept> is a markup extension.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Markup extensions are typically implemented when there is a requirement to escape attribute values to be other than literal values or handler names, and the requirement is more global than just putting type converters on certain types or properties.</source>
          <target state="new">Markup extensions are typically implemented when there is a requirement to escape attribute values to be other than literal values or handler names, and the requirement is more global than just putting type converters on certain types or properties.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>All markup extensions in XAML use the "<ph id="ph1">\{</ph>" and "<ph id="ph2">\}</ph>" characters in their attribute syntax, which is the convention by which a XAML processor recognizes that a markup extension must process the attribute.</source>
          <target state="new">All markup extensions in XAML use the "<ph id="ph1">\{</ph>" and "<ph id="ph2">\}</ph>" characters in their attribute syntax, which is the convention by which a XAML processor recognizes that a markup extension must process the attribute.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>An example {StaticResource} usage</source>
          <target state="new">An example {StaticResource} usage</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>This example XAML is taken from the <bpt id="p1">[</bpt>XAML data binding sample<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=226854)</ept>.</source>
          <target state="new">This example XAML is taken from the <bpt id="p1">[</bpt>XAML data binding sample<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=226854)</ept>.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>This particular example creates an object that's backed by a custom class, and creates it as a resource in a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ResourceDictionary<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208794)</ept>.</source>
          <target state="new">This particular example creates an object that's backed by a custom class, and creates it as a resource in a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ResourceDictionary<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208794)</ept>.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>To be a valid resource, this <ph id="ph1">`local:S2Formatter`</ph> element must also have an <bpt id="p1">**</bpt>x:Key<ept id="p1">**</ept> attribute value.</source>
          <target state="new">To be a valid resource, this <ph id="ph1">`local:S2Formatter`</ph> element must also have an <bpt id="p1">**</bpt>x:Key<ept id="p1">**</ept> attribute value.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The value of the attribute is set to "GradeConverter".</source>
          <target state="new">The value of the attribute is set to "GradeConverter".</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The resource is then requested just a bit further into the XAML, where you see <ph id="ph1">`{StaticResource GradeConverter}`</ph>.</source>
          <target state="new">The resource is then requested just a bit further into the XAML, where you see <ph id="ph1">`{StaticResource GradeConverter}`</ph>.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Note how the {StaticResource} markup extension usage is setting a property of another markup extension <bpt id="p1">[</bpt>{Binding} markup extension<ept id="p1">](binding-markup-extension.md)</ept>, so there's two nested markup extension usages here.</source>
          <target state="new">Note how the {StaticResource} markup extension usage is setting a property of another markup extension <bpt id="p1">[</bpt>{Binding} markup extension<ept id="p1">](binding-markup-extension.md)</ept>, so there's two nested markup extension usages here.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The inner one is evaluated first, so that the resource is obtained first and can be used as a value.</source>
          <target state="new">The inner one is evaluated first, so that the resource is obtained first and can be used as a value.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This same example is also shown in {Binding} markup extension.</source>
          <target state="new">This same example is also shown in {Binding} markup extension.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Design-time tools support for the <bpt id="p1">**</bpt>{StaticResource}<ept id="p1">**</ept> markup extension</source>
          <target state="new">Design-time tools support for the <bpt id="p1">**</bpt>{StaticResource}<ept id="p1">**</ept> markup extension</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Microsoft Visual Studio 2013 can include possible key values in the Microsoft IntelliSense dropdowns when you use the <bpt id="p1">**</bpt>{StaticResource}<ept id="p1">**</ept> markup extension in a XAML page.</source>
          <target state="new">Microsoft Visual Studio 2013 can include possible key values in the Microsoft IntelliSense dropdowns when you use the <bpt id="p1">**</bpt>{StaticResource}<ept id="p1">**</ept> markup extension in a XAML page.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>For example, as soon as you type "{StaticResource", any of the resource keys from the current lookup scope are displayed in the IntelliSense dropdowns.</source>
          <target state="new">For example, as soon as you type "{StaticResource", any of the resource keys from the current lookup scope are displayed in the IntelliSense dropdowns.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>In addition to the typical resources you'd have at page level (<bpt id="p1">[</bpt><bpt id="p2">**</bpt>FrameworkElement.Resources<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208740)</ept>) and app level (<bpt id="p3">[</bpt><bpt id="p4">**</bpt>Application.Resources<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br242338)</ept>), you also see <bpt id="p5">[</bpt>XAML theme resources<ept id="p5">](https://msdn.microsoft.com/library/windows/apps/mt187274)</ept>, and resources from any extensions your project is using.</source>
          <target state="new">In addition to the typical resources you'd have at page level (<bpt id="p1">[</bpt><bpt id="p2">**</bpt>FrameworkElement.Resources<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208740)</ept>) and app level (<bpt id="p3">[</bpt><bpt id="p4">**</bpt>Application.Resources<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br242338)</ept>), you also see <bpt id="p5">[</bpt>XAML theme resources<ept id="p5">](https://msdn.microsoft.com/library/windows/apps/mt187274)</ept>, and resources from any extensions your project is using.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Once a resource key exists as part of any <bpt id="p1">**</bpt>{StaticResource}<ept id="p1">**</ept> usage, the <bpt id="p2">**</bpt>Go To Definition<ept id="p2">**</ept> (F12) feature can resolve that resource and show you the dictionary where it's defined.</source>
          <target state="new">Once a resource key exists as part of any <bpt id="p1">**</bpt>{StaticResource}<ept id="p1">**</ept> usage, the <bpt id="p2">**</bpt>Go To Definition<ept id="p2">**</ept> (F12) feature can resolve that resource and show you the dictionary where it's defined.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>For the theme resources, this goes to generic.xaml for design time.</source>
          <target state="new">For the theme resources, this goes to generic.xaml for design time.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Related topics</source>
          <target state="new">Related topics</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>ResourceDictionary and XAML resource references</source>
          <target state="new">ResourceDictionary and XAML resource references</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>ResourceDictionary</source>
          <target state="new">ResourceDictionary</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>x:Key attribute</source>
          <target state="new">x:Key attribute</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>{ThemeResource} markup extension</source>
          <target state="new">{ThemeResource} markup extension</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>