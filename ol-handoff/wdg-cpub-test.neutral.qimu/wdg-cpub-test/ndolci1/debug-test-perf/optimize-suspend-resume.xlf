<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci1\debug-test-perf\optimize-suspend-resume.md</xliffext:olfilepath>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d3728b491d6010ffa642b3fbe9ca9033225ba616</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-e58fd48" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Optimize suspend/resume</source>
          <target state="new">Optimize suspend/resume</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Create Universal Windows Platform (UWP) apps that streamline their use of the process lifetime system to resume efficiently after suspension or termination.</source>
          <target state="new">Create Universal Windows Platform (UWP) apps that streamline their use of the process lifetime system to resume efficiently after suspension or termination.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Optimize suspend/resume</source>
          <target state="new">Optimize suspend/resume</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Updated for UWP apps on Windows 10.</source>
          <target state="new">Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept></source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept></target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Create Universal Windows Platform (UWP) apps that streamline their use of the process lifetime system to resume efficiently after suspension or termination.</source>
          <target state="new">Create Universal Windows Platform (UWP) apps that streamline their use of the process lifetime system to resume efficiently after suspension or termination.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Launch</source>
          <target state="new">Launch</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>When reactivating an app following suspend/terminate, check to see if a long time has elapsed.</source>
          <target state="new">When reactivating an app following suspend/terminate, check to see if a long time has elapsed.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>If so, consider returning to the main landing page of the app instead of showing the user stale data.</source>
          <target state="new">If so, consider returning to the main landing page of the app instead of showing the user stale data.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This will also result in faster startup.</source>
          <target state="new">This will also result in faster startup.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>During activation, always check the PreviousExecutionState of the event args parameter (for example, for launched activations check LaunchActivatedEventArgs.PreviousExecutionState).</source>
          <target state="new">During activation, always check the PreviousExecutionState of the event args parameter (for example, for launched activations check LaunchActivatedEventArgs.PreviousExecutionState).</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If the value is ClosedByUser or NotRunning, don’t waste time restoring previously saved state.</source>
          <target state="new">If the value is ClosedByUser or NotRunning, don’t waste time restoring previously saved state.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>In this case, the right thing is to provide a fresh experience – and it will result in faster startup.</source>
          <target state="new">In this case, the right thing is to provide a fresh experience – and it will result in faster startup.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Instead of eagerly restoring previously saved state, consider keep track of that state, and only restoring it on demand.</source>
          <target state="new">Instead of eagerly restoring previously saved state, consider keep track of that state, and only restoring it on demand.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For example, consider a situation where your app was previously suspended, saved state for 3 pages, and was then terminated.</source>
          <target state="new">For example, consider a situation where your app was previously suspended, saved state for 3 pages, and was then terminated.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Upon relaunch, if you decide to return the user to the 3rd page, do not eagerly restore the state for the first 2 pages.</source>
          <target state="new">Upon relaunch, if you decide to return the user to the 3rd page, do not eagerly restore the state for the first 2 pages.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Instead, hold on to this state and only use it once you know you need it.</source>
          <target state="new">Instead, hold on to this state and only use it once you know you need it.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>While running</source>
          <target state="new">While running</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>As a best practice, don’t wait for the suspend event and then persist a large amount of state.</source>
          <target state="new">As a best practice, don’t wait for the suspend event and then persist a large amount of state.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Instead, your application should incrementally persist smaller amounts of state as it runs.</source>
          <target state="new">Instead, your application should incrementally persist smaller amounts of state as it runs.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This is especially important for large apps that are at risk of running out of time during suspend if they try to save everything at once.</source>
          <target state="new">This is especially important for large apps that are at risk of running out of time during suspend if they try to save everything at once.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>However, you need to find a good balance between incremental saving and performance of your app while running.</source>
          <target state="new">However, you need to find a good balance between incremental saving and performance of your app while running.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>A good tradeoff is to incrementally keep track of the data that has changed (and therefore needs to be saved) – and use the suspend event to actually save that data (which is faster than saving all data or examining the entire state of app to decide what to save).</source>
          <target state="new">A good tradeoff is to incrementally keep track of the data that has changed (and therefore needs to be saved) – and use the suspend event to actually save that data (which is faster than saving all data or examining the entire state of app to decide what to save).</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Don’t use the window Activated or VisibilityChanged events to decide when to save state.</source>
          <target state="new">Don’t use the window Activated or VisibilityChanged events to decide when to save state.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>When the user switches away from your app, the window is deactivated, but the system waits a short amount of time (about 10 seconds) before suspending the app.</source>
          <target state="new">When the user switches away from your app, the window is deactivated, but the system waits a short amount of time (about 10 seconds) before suspending the app.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This is to give a more responsive experience in case the user switches back to your app rapidly.</source>
          <target state="new">This is to give a more responsive experience in case the user switches back to your app rapidly.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Wait for the suspend event before running suspend logic.</source>
          <target state="new">Wait for the suspend event before running suspend logic.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Suspend</source>
          <target state="new">Suspend</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>During suspend, reduce the footprint of your app.</source>
          <target state="new">During suspend, reduce the footprint of your app.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If your app uses less memory while suspended, the overall system will be more responsive and fewer suspended apps (including yours) will be terminated.</source>
          <target state="new">If your app uses less memory while suspended, the overall system will be more responsive and fewer suspended apps (including yours) will be terminated.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>However, balance this with the need for snappy resumes: don’t reduce footprint so much that resume slows down considerably while your app reloads lots of data into memory.</source>
          <target state="new">However, balance this with the need for snappy resumes: don’t reduce footprint so much that resume slows down considerably while your app reloads lots of data into memory.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>For managed apps, the system will run a garbage collection pass after the app’s suspend handlers complete.</source>
          <target state="new">For managed apps, the system will run a garbage collection pass after the app’s suspend handlers complete.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Make sure to take advantage of this by releasing references to objects that will help reduce the app’s footprint while suspended.</source>
          <target state="new">Make sure to take advantage of this by releasing references to objects that will help reduce the app’s footprint while suspended.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Ideally, your app will finish with suspend logic in less than 1 second.</source>
          <target state="new">Ideally, your app will finish with suspend logic in less than 1 second.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The faster you can suspend, the better – that will result in a snappier user experience for other apps and parts of the system.</source>
          <target state="new">The faster you can suspend, the better – that will result in a snappier user experience for other apps and parts of the system.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>If you must, your suspend logic can take up to 5 seconds on desktop devices or 10 seconds on mobile devices.</source>
          <target state="new">If you must, your suspend logic can take up to 5 seconds on desktop devices or 10 seconds on mobile devices.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>If those times are exceeded, your app will be abruptly terminated.</source>
          <target state="new">If those times are exceeded, your app will be abruptly terminated.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>You don’t want this to happen – because if it does, when the user switches back to your app, a new process will be launched and the experience will feel much slower compared to resuming a suspended app.</source>
          <target state="new">You don’t want this to happen – because if it does, when the user switches back to your app, a new process will be launched and the experience will feel much slower compared to resuming a suspended app.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Resume</source>
          <target state="new">Resume</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Most apps don’t need to do anything special when resumed, so typically you won’t handle this event.</source>
          <target state="new">Most apps don’t need to do anything special when resumed, so typically you won’t handle this event.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Some apps use resume to restore connections that were closed during suspend, or to refresh data that may be stale.</source>
          <target state="new">Some apps use resume to restore connections that were closed during suspend, or to refresh data that may be stale.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Instead of doing this kind of work eagerly, design your app to initiate these activities on demand.</source>
          <target state="new">Instead of doing this kind of work eagerly, design your app to initiate these activities on demand.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This will result in a faster experience when the user switches back to a suspended app, and ensures that you’re only doing work the user really needs.</source>
          <target state="new">This will result in a faster experience when the user switches back to a suspended app, and ensures that you’re only doing work the user really needs.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Avoid unnecessary termination</source>
          <target state="new">Avoid unnecessary termination</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The UWP process lifetime system can suspend or terminate an app for a variety of reasons.</source>
          <target state="new">The UWP process lifetime system can suspend or terminate an app for a variety of reasons.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>This process is designed to quickly return an app to the state it was in before it was suspended or terminated.</source>
          <target state="new">This process is designed to quickly return an app to the state it was in before it was suspended or terminated.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>When done well, the user won’t be aware that the app ever stopped running.</source>
          <target state="new">When done well, the user won’t be aware that the app ever stopped running.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Here are a few tricks that your UWP app can use to help the system streamline transitions in an app’s lifetime.</source>
          <target state="new">Here are a few tricks that your UWP app can use to help the system streamline transitions in an app’s lifetime.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>An app can be suspended when the user moves it to the background or when the system enters a low power state.</source>
          <target state="new">An app can be suspended when the user moves it to the background or when the system enters a low power state.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>When the app is being suspended, it raises the suspending event and has up to 5 seconds to save its data.</source>
          <target state="new">When the app is being suspended, it raises the suspending event and has up to 5 seconds to save its data.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>If the app's suspending event handler doesn't complete within 5 seconds, the system assumes the app has stopped responding and terminates it.</source>
          <target state="new">If the app's suspending event handler doesn't complete within 5 seconds, the system assumes the app has stopped responding and terminates it.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>A terminated app has to go through the long startup process again instead of being immediately loaded into memory when a user switches to it.</source>
          <target state="new">A terminated app has to go through the long startup process again instead of being immediately loaded into memory when a user switches to it.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Serialize only when necessary</source>
          <target state="new">Serialize only when necessary</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Many apps serialize all their data on suspension.</source>
          <target state="new">Many apps serialize all their data on suspension.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>If you only need to store a small amount of app settings data, however, you should use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>LocalSettings<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR241622)</ept> store instead of serializing the data.</source>
          <target state="new">If you only need to store a small amount of app settings data, however, you should use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>LocalSettings<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR241622)</ept> store instead of serializing the data.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Use serialization for larger amounts of data and for non-settings data.</source>
          <target state="new">Use serialization for larger amounts of data and for non-settings data.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>When you do serialize your data, you should avoid reserializing if it hasn't changed.</source>
          <target state="new">When you do serialize your data, you should avoid reserializing if it hasn't changed.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>It takes extra time to serialize and save the data, plus extra time to read and deserialize it when the app is activated again.</source>
          <target state="new">It takes extra time to serialize and save the data, plus extra time to read and deserialize it when the app is activated again.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Instead, we recommend that the app determine if its state has actually changed, and if so, serialize and deserialize only the data that changed.</source>
          <target state="new">Instead, we recommend that the app determine if its state has actually changed, and if so, serialize and deserialize only the data that changed.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>A good way to ensure that this happens is to periodically serialize data in the background after it changes.</source>
          <target state="new">A good way to ensure that this happens is to periodically serialize data in the background after it changes.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>When you use this technique, everything that needs to be serialized at suspension has already been saved so there is no work to do and an app suspends quickly.</source>
          <target state="new">When you use this technique, everything that needs to be serialized at suspension has already been saved so there is no work to do and an app suspends quickly.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Serializing data in C# and Visual Basic</source>
          <target state="new">Serializing data in C# and Visual Basic</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The available choices of serialization technology for .NET apps are the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>System.Xml.Serialization.XmlSerializer<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/en-us/library/windows/apps/xaml/system.xml.serialization.xmlserializer.aspx)</ept>, <bpt id="p3">[</bpt><bpt id="p4">**</bpt>System.Runtime.Serialization.DataContractSerializer<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/en-us/library/windows/apps/xaml/system.runtime.serialization.datacontractserializer.aspx)</ept>, and <bpt id="p5">[</bpt><bpt id="p6">**</bpt>System.Runtime.Serialization.Json.DataContractJsonSerializer<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/en-us/library/windows/apps/xaml/system.runtime.serialization.json.datacontractjsonserializer.aspx)</ept> classes.</source>
          <target state="new">The available choices of serialization technology for .NET apps are the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>System.Xml.Serialization.XmlSerializer<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/en-us/library/windows/apps/xaml/system.xml.serialization.xmlserializer.aspx)</ept>, <bpt id="p3">[</bpt><bpt id="p4">**</bpt>System.Runtime.Serialization.DataContractSerializer<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/en-us/library/windows/apps/xaml/system.runtime.serialization.datacontractserializer.aspx)</ept>, and <bpt id="p5">[</bpt><bpt id="p6">**</bpt>System.Runtime.Serialization.Json.DataContractJsonSerializer<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/en-us/library/windows/apps/xaml/system.runtime.serialization.json.datacontractjsonserializer.aspx)</ept> classes.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>From a performance perspective, we recommend using the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>XmlSerializer<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/en-us/library/windows/apps/xaml/system.xml.serialization.xmlserializer.aspx)</ept> class.</source>
          <target state="new">From a performance perspective, we recommend using the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>XmlSerializer<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/en-us/library/windows/apps/xaml/system.xml.serialization.xmlserializer.aspx)</ept> class.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>XmlSerializer<ept id="p1">**</ept> has the lowest serialization and deserialization times, and maintains a low memory footprint.</source>
          <target state="new">The <bpt id="p1">**</bpt>XmlSerializer<ept id="p1">**</ept> has the lowest serialization and deserialization times, and maintains a low memory footprint.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>XmlSerializer<ept id="p1">**</ept> has few dependencies on the .NET framework; this means that compared with the other serialization technologies, fewer modules need to be loaded into your app to use the <bpt id="p2">**</bpt>XmlSerializer<ept id="p2">**</ept>.</source>
          <target state="new">The <bpt id="p1">**</bpt>XmlSerializer<ept id="p1">**</ept> has few dependencies on the .NET framework; this means that compared with the other serialization technologies, fewer modules need to be loaded into your app to use the <bpt id="p2">**</bpt>XmlSerializer<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>DataContractSerializer<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/en-us/library/windows/apps/xaml/system.runtime.serialization.datacontractserializer.aspx)</ept> makes it easier to serialize custom classes, although it has a larger performance impact than <bpt id="p3">**</bpt>XmlSerializer<ept id="p3">**</ept>.</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>DataContractSerializer<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/en-us/library/windows/apps/xaml/system.runtime.serialization.datacontractserializer.aspx)</ept> makes it easier to serialize custom classes, although it has a larger performance impact than <bpt id="p3">**</bpt>XmlSerializer<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>If you need better performance, consider switching.</source>
          <target state="new">If you need better performance, consider switching.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>In general, you should not load more than one serializer, and you should prefer <bpt id="p1">**</bpt>XmlSerializer<ept id="p1">**</ept> unless you need the features of another serializer.</source>
          <target state="new">In general, you should not load more than one serializer, and you should prefer <bpt id="p1">**</bpt>XmlSerializer<ept id="p1">**</ept> unless you need the features of another serializer.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Reduce memory footprint</source>
          <target state="new">Reduce memory footprint</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The system tries to keep as many suspended apps in memory as possible so that users can quickly and reliably switch between them.</source>
          <target state="new">The system tries to keep as many suspended apps in memory as possible so that users can quickly and reliably switch between them.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>When an app is suspended and stays in the system's memory, it can quickly be brought to the foreground for the user to interact with, without having to display a splash screen or perform a lengthy load operation.</source>
          <target state="new">When an app is suspended and stays in the system's memory, it can quickly be brought to the foreground for the user to interact with, without having to display a splash screen or perform a lengthy load operation.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>If there aren't enough resources to keep an app in memory, the app is terminated.</source>
          <target state="new">If there aren't enough resources to keep an app in memory, the app is terminated.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>This makes memory management important for two reasons:</source>
          <target state="new">This makes memory management important for two reasons:</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Freeing as much memory as possible at suspension minimizes the chances that your app is terminated because of lack of resources while it’s suspended.</source>
          <target state="new">Freeing as much memory as possible at suspension minimizes the chances that your app is terminated because of lack of resources while it’s suspended.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Reducing the overall amount of memory your app uses reduces the chances that other apps are terminated while they are suspended.</source>
          <target state="new">Reducing the overall amount of memory your app uses reduces the chances that other apps are terminated while they are suspended.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Release resources</source>
          <target state="new">Release resources</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Certain objects, such as files and devices, occupy a large amount of memory.</source>
          <target state="new">Certain objects, such as files and devices, occupy a large amount of memory.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>We recommend that during suspension, an app release handles to these objects and recreate them when needed.</source>
          <target state="new">We recommend that during suspension, an app release handles to these objects and recreate them when needed.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>This is also a good time to purge any caches that won’t be valid when the app is resumed.</source>
          <target state="new">This is also a good time to purge any caches that won’t be valid when the app is resumed.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>An additional step the XAML framework runs on your behalf for C# and Visual Basic apps is garbage collection if it is necessary.</source>
          <target state="new">An additional step the XAML framework runs on your behalf for C# and Visual Basic apps is garbage collection if it is necessary.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>This ensures any objects no longer referenced in app code are released.</source>
          <target state="new">This ensures any objects no longer referenced in app code are released.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Resume quickly</source>
          <target state="new">Resume quickly</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>A suspended app can be resumed when the user moves it to the foreground or when the system comes out of a low power state.</source>
          <target state="new">A suspended app can be resumed when the user moves it to the foreground or when the system comes out of a low power state.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>When an app is resumed from the suspended state, it continues from where it was when it was suspended.</source>
          <target state="new">When an app is resumed from the suspended state, it continues from where it was when it was suspended.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>No app data is lost because it was stored in memory, even if the app was suspended for a long period of time.</source>
          <target state="new">No app data is lost because it was stored in memory, even if the app was suspended for a long period of time.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Most apps don't need to handle the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Resuming<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR205859)</ept> event.</source>
          <target state="new">Most apps don't need to handle the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Resuming<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR205859)</ept> event.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>When your app is resumed, variables and objects have the exact same state they had when the app was suspended.</source>
          <target state="new">When your app is resumed, variables and objects have the exact same state they had when the app was suspended.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Handle the <bpt id="p1">**</bpt>Resuming<ept id="p1">**</ept> event only if you need to update data or objects that might have changed between the time your app was suspended and when it was resumed such as: content (for example, update feed data), network connections that may have gone stale, or if you need to reacquire access to a device (for example, a webcam).</source>
          <target state="new">Handle the <bpt id="p1">**</bpt>Resuming<ept id="p1">**</ept> event only if you need to update data or objects that might have changed between the time your app was suspended and when it was resumed such as: content (for example, update feed data), network connections that may have gone stale, or if you need to reacquire access to a device (for example, a webcam).</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Related topics</source>
          <target state="new">Related topics</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Guidelines for app suspend and resume</source>
          <target state="new">Guidelines for app suspend and resume</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>