<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci1\usability\globalizing\adjust-layout-and-fonts-and-support-rtl.md</xliffext:olfilepath>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3ee0b0f4215b4ec4973f6e52849ffff56bd49e48</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-e58fd48" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Develop your app to support the layouts and fonts of multiple languages, including RTL (right-to-left) flow direction.</source>
          <target state="new">Develop your app to support the layouts and fonts of multiple languages, including RTL (right-to-left) flow direction.</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Adjust layout and fonts, and support RTL</source>
          <target state="new">Adjust layout and fonts, and support RTL</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Adjust layout and fonts, and support RTL</source>
          <target state="new">Adjust layout and fonts, and support RTL</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Updated for UWP apps on Windows 10.</source>
          <target state="new">Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept></source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept></target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Develop your app to support the layouts and fonts of multiple languages, including RTL (right-to-left) flow direction.</source>
          <target state="new">Develop your app to support the layouts and fonts of multiple languages, including RTL (right-to-left) flow direction.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Layout guidelines</source>
          <target state="new">Layout guidelines</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Some languages, such as German and Finnish, require more space than English for their text.</source>
          <target state="new">Some languages, such as German and Finnish, require more space than English for their text.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The fonts for some languages, such as Japanese, require more height.</source>
          <target state="new">The fonts for some languages, such as Japanese, require more height.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>And some languages, such as Arabic and Hebrew, require that text layout and app layout must be in right-to-left (RTL) reading order.</source>
          <target state="new">And some languages, such as Arabic and Hebrew, require that text layout and app layout must be in right-to-left (RTL) reading order.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Use flexible layout mechanisms instead of absolute positioning, fixed widths, or fixed heights.</source>
          <target state="new">Use flexible layout mechanisms instead of absolute positioning, fixed widths, or fixed heights.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>When necessary, particular UI elements can be adjusted based on language.</source>
          <target state="new">When necessary, particular UI elements can be adjusted based on language.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>XAML</source>
          <target state="new">XAML</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Specify a <bpt id="p1">**</bpt>Uid<ept id="p1">**</ept> for an element:</source>
          <target state="new">Specify a <bpt id="p1">**</bpt>Uid<ept id="p1">**</ept> for an element:</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Ensure that your app's ResW file has a resource for Block1.Width, which you can set for each language that you localize into.</source>
          <target state="new">Ensure that your app's ResW file has a resource for Block1.Width, which you can set for each language that you localize into.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For Windows Store apps using C++, C<ph id="ph1">\#</ph>, or Visual Basic, use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>FlowDirection<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208716)</ept> property, with symmetrical padding and margins, to enable localization for other layout directions.</source>
          <target state="new">For Windows Store apps using C++, C<ph id="ph1">\#</ph>, or Visual Basic, use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>FlowDirection<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208716)</ept> property, with symmetrical padding and margins, to enable localization for other layout directions.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>XAML layout controls such as <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Grid<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242704)</ept> scale and flip automatically with the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>FlowDirection<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br208716)</ept> property.</source>
          <target state="new">XAML layout controls such as <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Grid<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242704)</ept> scale and flip automatically with the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>FlowDirection<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br208716)</ept> property.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Expose your own <bpt id="p1">**</bpt>FlowDirection<ept id="p1">**</ept> property in your app as a resource for localizers.</source>
          <target state="new">Expose your own <bpt id="p1">**</bpt>FlowDirection<ept id="p1">**</ept> property in your app as a resource for localizers.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Specify a <bpt id="p1">**</bpt>Uid<ept id="p1">**</ept> for the main page of your app:</source>
          <target state="new">Specify a <bpt id="p1">**</bpt>Uid<ept id="p1">**</ept> for the main page of your app:</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Ensure that your app's <bpt id="p1">**</bpt>ResW<ept id="p1">**</ept> file has a resource for MainPage.FlowDirection, which you can set for each language that you localize into.</source>
          <target state="new">Ensure that your app's <bpt id="p1">**</bpt>ResW<ept id="p1">**</ept> file has a resource for MainPage.FlowDirection, which you can set for each language that you localize into.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>HTML</source>
          <target state="new">HTML</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For Windows Store apps using JavaScript, use <bpt id="p1">[</bpt>Cascading Style Sheets (CSS)<ept id="p1">](https://msdn.microsoft.com/library/ms531209)</ept> layout mechanisms such as <bpt id="p2">[</bpt>-ms-grid<ept id="p2">](https://msdn.microsoft.com/en-us/library/windows/apps/hh465453.aspx#g_section)</ept> and <bpt id="p3">[</bpt>–ms-box<ept id="p3">](https://msdn.microsoft.com/en-us/library/windows/apps/hh465453.aspx#f_section)</ept>.</source>
          <target state="new">For Windows Store apps using JavaScript, use <bpt id="p1">[</bpt>Cascading Style Sheets (CSS)<ept id="p1">](https://msdn.microsoft.com/library/ms531209)</ept> layout mechanisms such as <bpt id="p2">[</bpt>-ms-grid<ept id="p2">](https://msdn.microsoft.com/en-us/library/windows/apps/hh465453.aspx#g_section)</ept> and <bpt id="p3">[</bpt>–ms-box<ept id="p3">](https://msdn.microsoft.com/en-us/library/windows/apps/hh465453.aspx#f_section)</ept>.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Use symmetrical padding and margins to enable localization for various layout directions.</source>
          <target state="new">Use symmetrical padding and margins to enable localization for various layout directions.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Your app can also use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>:-ms-lang()<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/cc848867)</ept> pseudo-class selector to adjust CSS properties such as width on particular elements based on the language of the app.</source>
          <target state="new">Your app can also use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>:-ms-lang()<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/cc848867)</ept> pseudo-class selector to adjust CSS properties such as width on particular elements based on the language of the app.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>To enable this, the App Host sets the root element's <bpt id="p1">**</bpt>lang<ept id="p1">**</ept> attribute to the app language.</source>
          <target state="new">To enable this, the App Host sets the root element's <bpt id="p1">**</bpt>lang<ept id="p1">**</ept> attribute to the app language.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>CSS</source>
          <target state="new">CSS</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Windows Store apps using JavaScript that use the ui-light.css or ui-dark.css style sheets have their body layout direction set automatically, based on the app language.</source>
          <target state="new">Windows Store apps using JavaScript that use the ui-light.css or ui-dark.css style sheets have their body layout direction set automatically, based on the app language.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The following CSS is in ui-light and ui-dark.css, and you don't need to write it yourself.</source>
          <target state="new">The following CSS is in ui-light and ui-dark.css, and you don't need to write it yourself.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>CSS</source>
          <target state="new">CSS</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This means that most app layouts are set correctly when the system uses a right-to-left language.</source>
          <target state="new">This means that most app layouts are set correctly when the system uses a right-to-left language.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Like <bpt id="p1">[</bpt>WinJS.UI<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br229782)</ept> controls, your app can use the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>:-ms-lang()<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/cc848867)</ept> pseudo-class selector to adjust physical CSS properties, such as <bpt id="p4">**</bpt>margin<ept id="p4">**</ept> and <bpt id="p5">**</bpt>padding<ept id="p5">**</ept>.</source>
          <target state="new">Like <bpt id="p1">[</bpt>WinJS.UI<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br229782)</ept> controls, your app can use the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>:-ms-lang()<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/cc848867)</ept> pseudo-class selector to adjust physical CSS properties, such as <bpt id="p4">**</bpt>margin<ept id="p4">**</ept> and <bpt id="p5">**</bpt>padding<ept id="p5">**</ept>.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>You don't need to adjust logical CSS properties that use keywords such as <bpt id="p1">**</bpt>after<ept id="p1">**</ept> and <bpt id="p2">**</bpt>before<ept id="p2">**</ept>.</source>
          <target state="new">You don't need to adjust logical CSS properties that use keywords such as <bpt id="p1">**</bpt>after<ept id="p1">**</ept> and <bpt id="p2">**</bpt>before<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Don't use the <bpt id="p1">**</bpt>align<ept id="p1">**</ept> property or attribute in HTML.</source>
          <target state="new">Don't use the <bpt id="p1">**</bpt>align<ept id="p1">**</ept> property or attribute in HTML.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Instead, use the <bpt id="p1">**</bpt>direction<ept id="p1">**</ept> property to control alignment of particular components.</source>
          <target state="new">Instead, use the <bpt id="p1">**</bpt>direction<ept id="p1">**</ept> property to control alignment of particular components.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>writing-mode<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/ms531187)</ept> property to support vertical text layouts in CSS.</source>
          <target state="new">Use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>writing-mode<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/ms531187)</ept> property to support vertical text layouts in CSS.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Mirroring images</source>
          <target state="new">Mirroring images</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>XAML</source>
          <target state="new">XAML</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>If your app has images that must be mirrored (that is, the same image can be flipped) for RTL, you can apply the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>FlowDirection<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208716)</ept> property:</source>
          <target state="new">If your app has images that must be mirrored (that is, the same image can be flipped) for RTL, you can apply the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>FlowDirection<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208716)</ept> property:</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>HTML</source>
          <target state="new">HTML</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If your app has images that must be mirrored (that is, the same image can be flipped) for RTL, you can use CSS transforms to mirror your images at rendering time by adding a .mirrorable class to your elements and adding the following CSS class:</source>
          <target state="new">If your app has images that must be mirrored (that is, the same image can be flipped) for RTL, you can use CSS transforms to mirror your images at rendering time by adding a .mirrorable class to your elements and adding the following CSS class:</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>For both XAML and HTML:<ept id="p1">**</ept> If your app requires a different image to flip the image correctly, you can use the resource management system with the <bpt id="p2">[</bpt>layoutdir qualifier<ept id="p2">](https://msdn.microsoft.com/library/windows/apps/xaml/hh965324)</ept>.</source>
          <target state="new"><bpt id="p1">**</bpt>For both XAML and HTML:<ept id="p1">**</ept> If your app requires a different image to flip the image correctly, you can use the resource management system with the <bpt id="p2">[</bpt>layoutdir qualifier<ept id="p2">](https://msdn.microsoft.com/library/windows/apps/xaml/hh965324)</ept>.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The system chooses an image named file.layoutdir-rtl.png when the <bpt id="p1">[</bpt>application language<ept id="p1">](manage-language-and-region.md)</ept> is set to an RTL language.</source>
          <target state="new">The system chooses an image named file.layoutdir-rtl.png when the <bpt id="p1">[</bpt>application language<ept id="p1">](manage-language-and-region.md)</ept> is set to an RTL language.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This approach may be necessary when some part of the image is flipped, but another part isn't.</source>
          <target state="new">This approach may be necessary when some part of the image is flipped, but another part isn't.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Fonts</source>
          <target state="new">Fonts</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>For both XAML and HTML:<ept id="p1">**</ept> Use the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>LanguageFont<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br206864)</ept> font-mapping APIs for programmatic access to the recommended font family, size, weight, and style for a particular language.</source>
          <target state="new"><bpt id="p1">**</bpt>For both XAML and HTML:<ept id="p1">**</ept> Use the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>LanguageFont<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br206864)</ept> font-mapping APIs for programmatic access to the recommended font family, size, weight, and style for a particular language.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>LanguageFont<ept id="p1">**</ept> object provides access to the correct font info for various categories of content including UI headers, notifications, body text, and user-editable document body fonts.</source>
          <target state="new">The <bpt id="p1">**</bpt>LanguageFont<ept id="p1">**</ept> object provides access to the correct font info for various categories of content including UI headers, notifications, body text, and user-editable document body fonts.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>HTML</source>
          <target state="new">HTML</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Windows Store apps using JavaScript that use the ui-light.css or ui-dark.css style sheets have their font set automatically to the most appropriate font, based on the app language.</source>
          <target state="new">Windows Store apps using JavaScript that use the ui-light.css or ui-dark.css style sheets have their font set automatically to the most appropriate font, based on the app language.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The App Host sets the root element's <bpt id="p1">**</bpt>lang<ept id="p1">**</ept> attribute to the app language.</source>
          <target state="new">The App Host sets the root element's <bpt id="p1">**</bpt>lang<ept id="p1">**</ept> attribute to the app language.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Apps that display multiple languages on a single page should set the <bpt id="p1">**</bpt>lang<ept id="p1">**</ept> attribute for the section in each language.</source>
          <target state="new">Apps that display multiple languages on a single page should set the <bpt id="p1">**</bpt>lang<ept id="p1">**</ept> attribute for the section in each language.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>:-ms-lang()<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/cc848867)</ept> pseudo-class selector picks up the correct font for each section of the page.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>:-ms-lang()<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/cc848867)</ept> pseudo-class selector picks up the correct font for each section of the page.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>