<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="de-de" original="foo.file" tool-id="24c5d145-7c6e-4350-80d9-2138b8ebfd2e" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="24c5d145-7c6e-4350-80d9-2138b8ebfd2e" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
      <olfilehash xmlns="">bcf7532d43ea83ecd9e14c33f94b7b22246b6e4d</olfilehash>
    </header>
    <body>
      <group id="b8d9db31-3ff1-4b34-a95e-4ea3106af085">
        <trans-unit id="9bf09333-329c-4b23-90be-2b8171637dad" xml:space="preserve">
          <source>.NET Assembly File Format</source>
          <target state="new">.NET Assembly File Format</target>
        </trans-unit>
        <trans-unit id="20f34bfa-39eb-439a-8d1d-9ebcb698973b" xml:space="preserve">
          <source>The .NET platform defines a binary file format - "assembly" - that is used to fully-describe and contain .NET programs.</source>
          <target state="new">The .NET platform defines a binary file format - "assembly" - that is used to fully-describe and contain .NET programs.</target>
        </trans-unit>
        <trans-unit id="6eece55c-d676-4e28-ac51-8ba49b19434d" xml:space="preserve">
          <source>Assemblies are used for the programs themselves as well as any dependent libraries.</source>
          <target state="new">Assemblies are used for the programs themselves as well as any dependent libraries.</target>
        </trans-unit>
        <trans-unit id="c8ed3e1c-6c2f-4be8-b8a4-47bf47781561" xml:space="preserve">
          <source>A .NET program can be executed as one of more assemblies, with no other required artifacts, beyond the appropriate .NET runtime.</source>
          <target state="new">A .NET program can be executed as one of more assemblies, with no other required artifacts, beyond the appropriate .NET runtime.</target>
        </trans-unit>
        <trans-unit id="1cb14d70-ff02-4b82-beba-b02abaad898b" xml:space="preserve">
          <source>Native dependencies, including operating system APIs, are a separate concern and are not contained within the .NET assembly format, although are sometimes described with this format (e.g. WinRT).</source>
          <target state="new">Native dependencies, including operating system APIs, are a separate concern and are not contained within the .NET assembly format, although are sometimes described with this format (e.g. WinRT).</target>
        </trans-unit>
        <trans-unit id="6aafba9b-bbc7-43e7-a611-2f0e9f71d695" xml:space="preserve">
          <source>Each CLI component carries the metadata for declarations, implementations, and references specific to that component.</source>
          <target state="new">Each CLI component carries the metadata for declarations, implementations, and references specific to that component.</target>
        </trans-unit>
        <trans-unit id="647672b4-68d7-463f-9067-18fd6298fcfb" xml:space="preserve">
          <source>Therefore, the component-specific metadata is referred to as component metadata, and the resulting component is said to be self-describing -- from ECMA 335 I.9.1, Components and assemblies.</source>
          <target state="new">Therefore, the component-specific metadata is referred to as component metadata, and the resulting component is said to be self-describing -- from ECMA 335 I.9.1, Components and assemblies.</target>
        </trans-unit>
        <trans-unit id="1b2b5c37-3c06-40c1-b112-4c8be7e3c3fd" xml:space="preserve">
          <source>The format is fully specified and standardized as <bpt id="9c525c50-d5b8-4050-a861-b46485479ff6CapsExtId1">&lt;linkText&gt;</bpt>ECMA 335<ept id="9c525c50-d5b8-4050-a861-b46485479ff6CapsExtId1">&lt;/linkText&gt;</ept><bpt id="9c525c50-d5b8-4050-a861-b46485479ff6CapsExtId2">&lt;title&gt;</bpt><ept id="9c525c50-d5b8-4050-a861-b46485479ff6CapsExtId2">&lt;/title&gt;</ept>.</source>
          <target state="new">The format is fully specified and standardized as <bpt id="9c525c50-d5b8-4050-a861-b46485479ff6CapsExtId1">&lt;linkText&gt;</bpt>ECMA 335<ept id="9c525c50-d5b8-4050-a861-b46485479ff6CapsExtId1">&lt;/linkText&gt;</ept><bpt id="9c525c50-d5b8-4050-a861-b46485479ff6CapsExtId2">&lt;title&gt;</bpt><ept id="9c525c50-d5b8-4050-a861-b46485479ff6CapsExtId2">&lt;/title&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="e8c212c0-240a-4f25-acf8-9bcfc034ebfd" xml:space="preserve">
          <source>All .NET compilers and runtimes use this format.</source>
          <target state="new">All .NET compilers and runtimes use this format.</target>
        </trans-unit>
        <trans-unit id="d6cab86f-8bc2-42df-8332-7e5df6850326" xml:space="preserve">
          <source>The presense of a documented and infrequently updated binary format has been a major benefit (arguably a requirement) for interoperatibility.</source>
          <target state="new">The presense of a documented and infrequently updated binary format has been a major benefit (arguably a requirement) for interoperatibility.</target>
        </trans-unit>
        <trans-unit id="1a154b74-bd9c-4c5f-8698-25f8546ede28" xml:space="preserve">
          <source>The format was last updated in a substantive way in 2005 (.NET 2.0) to accomodate generics and processor architecture.</source>
          <target state="new">The format was last updated in a substantive way in 2005 (.NET 2.0) to accomodate generics and processor architecture.</target>
        </trans-unit>
        <trans-unit id="0d619dfe-8b4e-4593-9507-1c044afb60a6" xml:space="preserve">
          <source>The format is CPU- and OS-agnostic.</source>
          <target state="new">The format is CPU- and OS-agnostic.</target>
        </trans-unit>
        <trans-unit id="78ba2568-1549-43eb-a97e-f5b82c49c865" xml:space="preserve">
          <source>It has been used as part of .NET runtimes that target many chips and CPUs.</source>
          <target state="new">It has been used as part of .NET runtimes that target many chips and CPUs.</target>
        </trans-unit>
        <trans-unit id="13aa562b-43cc-41c3-8f3a-f39fcdee9209" xml:space="preserve">
          <source>While the format itself has Windows heritage, it is implementable on any operating system.</source>
          <target state="new">While the format itself has Windows heritage, it is implementable on any operating system.</target>
        </trans-unit>
        <trans-unit id="c0e1c305-8afa-47af-88f2-2c303fb3b104" xml:space="preserve">
          <source>It's arguably most significant choice for OS interopertability is that most values are stored in little-endian format.</source>
          <target state="new">It's arguably most significant choice for OS interopertability is that most values are stored in little-endian format.</target>
        </trans-unit>
        <trans-unit id="08fb3b41-eb17-4e5c-b839-ba69b7507482" xml:space="preserve">
          <source>It doesn't have a specific affinity to machine pointer size (e.g. 32-bit, 64-bit).</source>
          <target state="new">It doesn't have a specific affinity to machine pointer size (e.g. 32-bit, 64-bit).</target>
        </trans-unit>
        <trans-unit id="614afea9-8a6d-4427-8b29-98b3551aab02" xml:space="preserve">
          <source>The .NET assembly format is also very descriptive about the structure of a given program or library.</source>
          <target state="new">The .NET assembly format is also very descriptive about the structure of a given program or library.</target>
        </trans-unit>
        <trans-unit id="c5165a7d-a97b-4618-b564-eba7c0c365e1" xml:space="preserve">
          <source>It describes the internal components of an assembly, specifically: assembly references and types defined and their internal structure.</source>
          <target state="new">It describes the internal components of an assembly, specifically: assembly references and types defined and their internal structure.</target>
        </trans-unit>
        <trans-unit id="eee7f734-5d99-4d2b-bea6-7660d3caf118" xml:space="preserve">
          <source>Tools or APIs can read and process this information for display or to make programmatic decisions.</source>
          <target state="new">Tools or APIs can read and process this information for display or to make programmatic decisions.</target>
        </trans-unit>
        <trans-unit id="9ef36e07-b865-4d78-8470-2142f9679914" xml:space="preserve">
          <source>Format</source>
          <target state="new">Format</target>
        </trans-unit>
        <trans-unit id="63a736b0-0e44-4eb5-855b-d225803836e5" xml:space="preserve">
          <source>The .NET binary format is based on the Windows <bpt id="ef0b1a88-b98d-4580-9c80-3ca0a103f8a1CapsExtId1">&lt;linkText&gt;</bpt>PE file<ept id="ef0b1a88-b98d-4580-9c80-3ca0a103f8a1CapsExtId1">&lt;/linkText&gt;</ept><bpt id="ef0b1a88-b98d-4580-9c80-3ca0a103f8a1CapsExtId2">&lt;title&gt;</bpt><ept id="ef0b1a88-b98d-4580-9c80-3ca0a103f8a1CapsExtId2">&lt;/title&gt;</ept> format.</source>
          <target state="new">The .NET binary format is based on the Windows <bpt id="ef0b1a88-b98d-4580-9c80-3ca0a103f8a1CapsExtId1">&lt;linkText&gt;</bpt>PE file<ept id="ef0b1a88-b98d-4580-9c80-3ca0a103f8a1CapsExtId1">&lt;/linkText&gt;</ept><bpt id="ef0b1a88-b98d-4580-9c80-3ca0a103f8a1CapsExtId2">&lt;title&gt;</bpt><ept id="ef0b1a88-b98d-4580-9c80-3ca0a103f8a1CapsExtId2">&lt;/title&gt;</ept> format.</target>
        </trans-unit>
        <trans-unit id="9f05349b-459e-4d97-8b6f-fcc27d75eae2" xml:space="preserve">
          <source>In fact, .NET class libraries are conformant Windows PEs, and appear on first glance to be Windows dynamic link libraries (DLLs) or application executables (EXEs).</source>
          <target state="new">In fact, .NET class libraries are conformant Windows PEs, and appear on first glance to be Windows dynamic link libraries (DLLs) or application executables (EXEs).</target>
        </trans-unit>
        <trans-unit id="e33c82b4-9b72-4f43-aace-f6951c65c84e" xml:space="preserve">
          <source>This is a very useful characteristic on Windows, where they can masquerade as native executable binaries and get some of the same treatment (e.g. OS load, PE tools).</source>
          <target state="new">This is a very useful characteristic on Windows, where they can masquerade as native executable binaries and get some of the same treatment (e.g. OS load, PE tools).</target>
        </trans-unit>
        <trans-unit id="5ed33e39-d1ba-46cb-b76f-85fdd18f100c" xml:space="preserve">
          <source>Assembly Headers Assemblies headers from ECMA 335 II.25.1, Structure of the runtime file format.</source>
          <target state="new">Assembly Headers Assemblies headers from ECMA 335 II.25.1, Structure of the runtime file format.</target>
        </trans-unit>
        <trans-unit id="2b805426-b897-4d1d-8aa3-beed3f9436b1" xml:space="preserve">
          <source>Processing the Assemblies</source>
          <target state="new">Processing the Assemblies</target>
        </trans-unit>
        <trans-unit id="d77a1cb9-de74-40e5-9bc4-025ff036676e" xml:space="preserve">
          <source>It is possible to write tools or APIs to process assemblies.</source>
          <target state="new">It is possible to write tools or APIs to process assemblies.</target>
        </trans-unit>
        <trans-unit id="54da1b3e-5f40-42b9-9640-75b3bd5c0c52" xml:space="preserve">
          <source>Assembly information enables making programmatic decisions at runtime, re-writing assemblies, providing API intellisense in an editor and generating documentation.</source>
          <target state="new">Assembly information enables making programmatic decisions at runtime, re-writing assemblies, providing API intellisense in an editor and generating documentation.</target>
        </trans-unit>
        <trans-unit id="c12353b8-db75-42f1-b4ba-3d4a973c1e17" xml:space="preserve">
          <source><bpt id="555ae637-9e6b-4240-854c-587e602e2b20CapsExtId1">&lt;linkText&gt;</bpt>System.Reflection<ept id="555ae637-9e6b-4240-854c-587e602e2b20CapsExtId1">&lt;/linkText&gt;</ept><bpt id="555ae637-9e6b-4240-854c-587e602e2b20CapsExtId2">&lt;title&gt;</bpt><ept id="555ae637-9e6b-4240-854c-587e602e2b20CapsExtId2">&lt;/title&gt;</ept> and <bpt id="5ebabed7-e223-44b8-b2f8-132e5bc7583bCapsExtId1">&lt;linkText&gt;</bpt>Mono.Cecil<ept id="5ebabed7-e223-44b8-b2f8-132e5bc7583bCapsExtId1">&lt;/linkText&gt;</ept><bpt id="5ebabed7-e223-44b8-b2f8-132e5bc7583bCapsExtId2">&lt;title&gt;</bpt><ept id="5ebabed7-e223-44b8-b2f8-132e5bc7583bCapsExtId2">&lt;/title&gt;</ept> are good examples of tools that are frequently used for this purpose.</source>
          <target state="new"><bpt id="555ae637-9e6b-4240-854c-587e602e2b20CapsExtId1">&lt;linkText&gt;</bpt>System.Reflection<ept id="555ae637-9e6b-4240-854c-587e602e2b20CapsExtId1">&lt;/linkText&gt;</ept><bpt id="555ae637-9e6b-4240-854c-587e602e2b20CapsExtId2">&lt;title&gt;</bpt><ept id="555ae637-9e6b-4240-854c-587e602e2b20CapsExtId2">&lt;/title&gt;</ept> and <bpt id="5ebabed7-e223-44b8-b2f8-132e5bc7583bCapsExtId1">&lt;linkText&gt;</bpt>Mono.Cecil<ept id="5ebabed7-e223-44b8-b2f8-132e5bc7583bCapsExtId1">&lt;/linkText&gt;</ept><bpt id="5ebabed7-e223-44b8-b2f8-132e5bc7583bCapsExtId2">&lt;title&gt;</bpt><ept id="5ebabed7-e223-44b8-b2f8-132e5bc7583bCapsExtId2">&lt;/title&gt;</ept> are good examples of tools that are frequently used for this purpose.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>