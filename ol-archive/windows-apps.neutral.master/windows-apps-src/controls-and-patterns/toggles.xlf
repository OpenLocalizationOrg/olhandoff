<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="zh-cn" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">windows-apps-src\controls-and-patterns\toggles.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">e90760c6894ee5d32ba1063993a703023d23c152</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-781aacf</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>The toggle switch represents a physical switch that allows users to turn things on or off.</source>
          <target>The toggle switch represents a physical switch that allows users to turn things on or off.</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>Guidelines for toggle switch controls</source>
          <target>Guidelines for toggle switch controls</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>Toggle switches</source>
          <target>Toggle switches</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source>The toggle switch represents a physical switch that allows users to turn things on or off.</source>
          <target>The toggle switch represents a physical switch that allows users to turn things on or off.</target>
        </segment>
      </unit>
      <unit id="105">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Use <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ToggleSwitch</pc> controls to present users with exactly two mutually exclusive options (like on/off), where choosing an option results in an immediate action.</source>
          <target>Use <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ToggleSwitch</pc> controls to present users with exactly two mutually exclusive options (like on/off), where choosing an option results in an immediate action.</target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source>Important APIs</source>
          <target>Important APIs</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source>ToggleSwitch class</source>
          <target>ToggleSwitch class</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source>IsOn property</source>
          <target>IsOn property</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source>Toggled event</source>
          <target>Toggled event</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source>Is this the right control?</source>
          <target>Is this the right control?</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source>Use a toggle switch for binary operations that take effect right after the user flips the toggle switch.</source>
          <target>Use a toggle switch for binary operations that take effect right after the user flips the toggle switch.</target>
        </segment>
      </unit>
      <unit id="112">
        <segment state="initial">
          <source>For example, use a toggle switch to turn services or hardware components on or off, such as WiFi:</source>
          <target>For example, use a toggle switch to turn services or hardware components on or off, such as WiFi:</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source>WiFi toggle switch, on and off</source>
          <target>WiFi toggle switch, on and off</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source>If a physical switch would work for the action, a toggle switch is probably the best control to use.</source>
          <target>If a physical switch would work for the action, a toggle switch is probably the best control to use.</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source>After the user toggles the switch on or off, we recommend that the corresponding action is immediately performed.</source>
          <target>After the user toggles the switch on or off, we recommend that the corresponding action is immediately performed.</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source>Choosing between toggle switch and check box</source>
          <target>Choosing between toggle switch and check box</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source>For some actions, either a toggle switch or a check box might work.</source>
          <target>For some actions, either a toggle switch or a check box might work.</target>
        </segment>
      </unit>
      <unit id="118">
        <segment state="initial">
          <source>To decide which control would work better, follow these tips:</source>
          <target>To decide which control would work better, follow these tips:</target>
        </segment>
      </unit>
      <unit id="119">
        <segment state="initial">
          <source>Use a toggle switch for binary settings when changes become effective immediately after the user changes them.</source>
          <target>Use a toggle switch for binary settings when changes become effective immediately after the user changes them.</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source>Toggle switch versus check box</source>
          <target>Toggle switch versus check box</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source>In the above example, it's clear with the toggle switch that the wireless is set to "On."</source>
          <target>In the above example, it's clear with the toggle switch that the wireless is set to "On."</target>
        </segment>
      </unit>
      <unit id="122">
        <segment state="initial">
          <source>But with the checkbox, the user needs to think about whether the wireless is on now or whether they need to check the box to turn wireless on.</source>
          <target>But with the checkbox, the user needs to think about whether the wireless is on now or whether they need to check the box to turn wireless on.</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source>Use a checkbox when the user has to perform extra steps for changes to be effective.</source>
          <target>Use a checkbox when the user has to perform extra steps for changes to be effective.</target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source>For example, if the user must click a "submit" or "next" button to apply changes, use a check box.</source>
          <target>For example, if the user must click a "submit" or "next" button to apply changes, use a check box.</target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source>A checkbox and a Submit button</source>
          <target>A checkbox and a Submit button</target>
        </segment>
      </unit>
      <unit id="126">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](lists.md)</data>
        </originalData>
        <segment state="initial">
          <source>Use check boxes or a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">list box</pc> when the user can select multiple items:</source>
          <target>Use check boxes or a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">list box</pc> when the user can select multiple items:</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source>A checkbox that has multiple items selected</source>
          <target>A checkbox that has multiple items selected</target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source>Examples</source>
          <target>Examples</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source>Toggle switches in the general settings of the News app.</source>
          <target>Toggle switches in the general settings of the News app.</target>
        </segment>
      </unit>
      <unit id="130">
        <segment state="initial">
          <source>Toggle switches in the general settings of the News app</source>
          <target>Toggle switches in the general settings of the News app</target>
        </segment>
      </unit>
      <unit id="131">
        <segment state="initial">
          <source>Toggle switches in the start menu settings in Windows.</source>
          <target>Toggle switches in the start menu settings in Windows.</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source>Toggle switches in the start menu settings in Windows</source>
          <target>Toggle switches in the start menu settings in Windows</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source>Create a toggle switch</source>
          <target>Create a toggle switch</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source>Here's how to create a simple toggle switch.</source>
          <target>Here's how to create a simple toggle switch.</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source>This XAML creates the WiFi toggle switch shown previously.</source>
          <target>This XAML creates the WiFi toggle switch shown previously.</target>
        </segment>
      </unit>
      <unit id="136">
        <segment state="initial">
          <source>Here's how to create the same toggle switch in code.</source>
          <target>Here's how to create the same toggle switch in code.</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source>IsOn</source>
          <target>IsOn</target>
        </segment>
      </unit>
      <unit id="138">
        <segment state="initial">
          <source>The switch can be either on or off.</source>
          <target>The switch can be either on or off.</target>
        </segment>
      </unit>
      <unit id="139">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.toggleswitch.ison.aspx)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IsOn</pc></pc> property to determine the state of the switch.</source>
          <target>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IsOn</pc></pc> property to determine the state of the switch.</target>
        </segment>
      </unit>
      <unit id="140">
        <segment state="initial">
          <source>When the switch is used to control the state of another binary property, you can use a binding as shown here.</source>
          <target>When the switch is used to control the state of another binary property, you can use a binding as shown here.</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source>Toggled</source>
          <target>Toggled</target>
        </segment>
      </unit>
      <unit id="142">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.toggleswitch.toggled.aspx)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>In other cases, you can handle the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Toggled</pc></pc> event to respond to changes in the state.</source>
          <target>In other cases, you can handle the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Toggled</pc></pc> event to respond to changes in the state.</target>
        </segment>
      </unit>
      <unit id="143">
        <segment state="initial">
          <source>This example shows how to add a Toggled event handler in XAML and in code.</source>
          <target>This example shows how to add a Toggled event handler in XAML and in code.</target>
        </segment>
      </unit>
      <unit id="144">
        <segment state="initial">
          <source>The Toggled event is handled to turn a progress ring on or off, and change its visibility.</source>
          <target>The Toggled event is handled to turn a progress ring on or off, and change its visibility.</target>
        </segment>
      </unit>
      <unit id="145">
        <segment state="initial">
          <source>Here's how to create the same toggle switch in code.</source>
          <target>Here's how to create the same toggle switch in code.</target>
        </segment>
      </unit>
      <unit id="146">
        <segment state="initial">
          <source>Here's the handler for the Toggled event.</source>
          <target>Here's the handler for the Toggled event.</target>
        </segment>
      </unit>
      <unit id="147">
        <segment state="initial">
          <source>On/Off labels</source>
          <target>On/Off labels</target>
        </segment>
      </unit>
      <unit id="148">
        <segment state="initial">
          <source>By default, the toggle switch includes literal On and Off labels, which are localized automatically.</source>
          <target>By default, the toggle switch includes literal On and Off labels, which are localized automatically.</target>
        </segment>
      </unit>
      <unit id="149">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.toggleswitch.oncontent.aspx)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.toggleswitch.offcontent.aspx)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source>You can replace these labels by setting the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">OnContent</pc></pc>, and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">OffContent</pc></pc> properties.</source>
          <target>You can replace these labels by setting the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">OnContent</pc></pc>, and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">OffContent</pc></pc> properties.</target>
        </segment>
      </unit>
      <unit id="150">
        <segment state="initial">
          <source>This example replaces the On/Off labels with Show/Hide labels.</source>
          <target>This example replaces the On/Off labels with Show/Hide labels.</target>
        </segment>
      </unit>
      <unit id="151">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.toggleswitch.oncontenttemplate.aspx)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.toggleswitch.offcontenttemplate.aspx)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source>You can also use more complex content by setting the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">OnContentTemplate</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">OffContentTemplate</pc></pc> properties.</source>
          <target>You can also use more complex content by setting the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">OnContentTemplate</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">OffContentTemplate</pc></pc> properties.</target>
        </segment>
      </unit>
      <unit id="152">
        <segment state="initial">
          <source>Recommendations</source>
          <target>Recommendations</target>
        </segment>
      </unit>
      <unit id="153">
        <segment state="initial">
          <source>Replace the On and Off labels when there are more specific labels for the setting.</source>
          <target>Replace the On and Off labels when there are more specific labels for the setting.</target>
        </segment>
      </unit>
      <unit id="154">
        <segment state="initial">
          <source>If there are short (3-4 characters) labels that represent binary opposites that are more appropriate for a particular setting, use those.</source>
          <target>If there are short (3-4 characters) labels that represent binary opposites that are more appropriate for a particular setting, use those.</target>
        </segment>
      </unit>
      <unit id="155">
        <segment state="initial">
          <source>For example, you could use "Show/Hide" if the setting is "Show images."</source>
          <target>For example, you could use "Show/Hide" if the setting is "Show images."</target>
        </segment>
      </unit>
      <unit id="156">
        <segment state="initial">
          <source>Using more specific labels can help when localizing the UI.</source>
          <target>Using more specific labels can help when localizing the UI.</target>
        </segment>
      </unit>
      <unit id="157">
        <segment state="initial">
          <source>Avoid replacing the On and Off labels unless you must; stick with the default labels unless the situation calls for custom ones.</source>
          <target>Avoid replacing the On and Off labels unless you must; stick with the default labels unless the situation calls for custom ones.</target>
        </segment>
      </unit>
      <unit id="158">
        <segment state="initial">
          <source>Labels should be no more than 4 characters long.</source>
          <target>Labels should be no more than 4 characters long.</target>
        </segment>
      </unit>
      <unit id="159">
        <segment state="initial">
          <source>Related articles</source>
          <target>Related articles</target>
        </segment>
      </unit>
      <unit id="160">
        <segment state="initial">
          <source>ToggleSwitch</source>
          <target>ToggleSwitch</target>
        </segment>
      </unit>
      <unit id="161">
        <segment state="initial">
          <source>Radio buttons</source>
          <target>Radio buttons</target>
        </segment>
      </unit>
      <unit id="162">
        <segment state="initial">
          <source>Toggle switches</source>
          <target>Toggle switches</target>
        </segment>
      </unit>
      <unit id="163">
        <segment state="initial">
          <source>Check boxes</source>
          <target>Check boxes</target>
        </segment>
      </unit>
      <unit id="164">
        <segment state="initial">
          <source>For developers (XAML)</source>
          <target>For developers (XAML)</target>
        </segment>
      </unit>
      <unit id="165">
        <segment state="initial">
          <source>ToggleSwitch class</source>
          <target>ToggleSwitch class</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>