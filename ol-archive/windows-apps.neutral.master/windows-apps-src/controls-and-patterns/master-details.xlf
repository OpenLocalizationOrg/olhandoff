<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="zh-cn" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">windows-apps-src\controls-and-patterns\master-details.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">5845aaf69bbcf561164c519f76f93578bf0da6db</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-781aacf</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>The master/detail pattern displays a master list and the details for the currently selected item.</source>
          <target>The master/detail pattern displays a master list and the details for the currently selected item.</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>This pattern is frequently used for email and contact lists/address books.</source>
          <target>This pattern is frequently used for email and contact lists/address books.</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>Master/details</source>
          <target>Master/details</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source>Master/details pattern</source>
          <target>Master/details pattern</target>
        </segment>
      </unit>
      <unit id="105">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](lists.md)</data>
        </originalData>
        <segment state="initial">
          <source>The master/details pattern has a master pane (usually with a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">list view</pc>) and a details pane for content.</source>
          <target>The master/details pattern has a master pane (usually with a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">list view</pc>) and a details pane for content.</target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source>When an item in the master list is selected, the details pane is updated.</source>
          <target>When an item in the master list is selected, the details pane is updated.</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source>This pattern is frequently used for email and address books.</source>
          <target>This pattern is frequently used for email and address books.</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source>Example of master-details pattern</source>
          <target>Example of master-details pattern</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source>Is this the right pattern?</source>
          <target>Is this the right pattern?</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source>The master/details pattern works well if you want to:</source>
          <target>The master/details pattern works well if you want to:</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source>Build an email app, address book, or any app that is based on a list-details layout.</source>
          <target>Build an email app, address book, or any app that is based on a list-details layout.</target>
        </segment>
      </unit>
      <unit id="112">
        <segment state="initial">
          <source>Locate and prioritize a large collection of content.</source>
          <target>Locate and prioritize a large collection of content.</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source>Allow the quick addition and removal of items from a list while working back-and-forth between contexts.</source>
          <target>Allow the quick addition and removal of items from a list while working back-and-forth between contexts.</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source>Choose the right style</source>
          <target>Choose the right style</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source>When implementing the master/details pattern, we recommend that you use either the stacked style or the side-by-side style, based on the amount of available screen space.</source>
          <target>When implementing the master/details pattern, we recommend that you use either the stacked style or the side-by-side style, based on the amount of available screen space.</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source>Available window width</source>
          <target>Available window width</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source>Recommended style</source>
          <target>Recommended style</target>
        </segment>
      </unit>
      <unit id="118">
        <segment state="initial">
          <source>320 epx-719 epx</source>
          <target>320 epx-719 epx</target>
        </segment>
      </unit>
      <unit id="119">
        <segment state="initial">
          <source>Stacked</source>
          <target>Stacked</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source>720 epx or wider</source>
          <target>720 epx or wider</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source>Side-by-side</source>
          <target>Side-by-side</target>
        </segment>
      </unit>
      <unit id="122">
        <segment state="initial">
          <source>Stacked style</source>
          <target>Stacked style</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source>In the stacked style, only one pane is visible at a time: the master or the details.</source>
          <target>In the stacked style, only one pane is visible at a time: the master or the details.</target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source>A master detail in stacked mode</source>
          <target>A master detail in stacked mode</target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source>The user starts at the master pane and "drills down" to the details pane by selecting an item in the master list.</source>
          <target>The user starts at the master pane and "drills down" to the details pane by selecting an item in the master list.</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source>To the user, it appears as though the master and details views exist on two separate pages.</source>
          <target>To the user, it appears as though the master and details views exist on two separate pages.</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source>Create a stacked master/details pattern</source>
          <target>Create a stacked master/details pattern</target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source>One way to create the stacked master/details pattern is to use separate pages for the master pane and the details pane.</source>
          <target>One way to create the stacked master/details pattern is to use separate pages for the master pane and the details pane.</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source>Place the list view that provides the master list on one page, and the content element for the details pane on a separate page.</source>
          <target>Place the list view that provides the master list on one page, and the content element for the details pane on a separate page.</target>
        </segment>
      </unit>
      <unit id="130">
        <segment state="initial">
          <source>Parts for the stacked-style master detail</source>
          <target>Parts for the stacked-style master detail</target>
        </segment>
      </unit>
      <unit id="131">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](lists.md)</data>
        </originalData>
        <segment state="initial">
          <source>For the master pane, a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">list view</pc> control works well for presenting lists that can contain images and text.</source>
          <target>For the master pane, a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">list view</pc> control works well for presenting lists that can contain images and text.</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source>For the details pane, use the content element that makes the most sense.</source>
          <target>For the details pane, use the content element that makes the most sense.</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source>If you have a lot of separate fields, consider using a grid layout to arrange elements into a form.</source>
          <target>If you have a lot of separate fields, consider using a grid layout to arrange elements into a form.</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source>Side-by-side style</source>
          <target>Side-by-side style</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source>In the side-by-side style, the master pane and details pane are visible at the same time.</source>
          <target>In the side-by-side style, the master pane and details pane are visible at the same time.</target>
        </segment>
      </unit>
      <unit id="136">
        <segment state="initial">
          <source>The master/detail pattern</source>
          <target>The master/detail pattern</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source>The list in the master pane has a selection visual to indicate the currently selected item.</source>
          <target>The list in the master pane has a selection visual to indicate the currently selected item.</target>
        </segment>
      </unit>
      <unit id="138">
        <segment state="initial">
          <source>Selecting a new item in the master list updates the details pane.</source>
          <target>Selecting a new item in the master list updates the details pane.</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source>Create a side-by-side master/details pattern</source>
          <target>Create a side-by-side master/details pattern</target>
        </segment>
      </unit>
      <unit id="140">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](lists.md)</data>
        </originalData>
        <segment state="initial">
          <source>For the master pane, a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">list view</pc> control works well for presenting lists that can contain images and text.</source>
          <target>For the master pane, a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">list view</pc> control works well for presenting lists that can contain images and text.</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source>For the details pane, use the content element that makes the most sense.</source>
          <target>For the details pane, use the content element that makes the most sense.</target>
        </segment>
      </unit>
      <unit id="142">
        <segment state="initial">
          <source>If you have a lot of separate fields, consider using a grid layout to arrange elements into a form.</source>
          <target>If you have a lot of separate fields, consider using a grid layout to arrange elements into a form.</target>
        </segment>
      </unit>
      <unit id="143">
        <segment state="initial">
          <source>Examples</source>
          <target>Examples</target>
        </segment>
      </unit>
      <unit id="144">
        <segment state="initial">
          <source>This design of an app that tracks the stock market uses a master/details pattern.</source>
          <target>This design of an app that tracks the stock market uses a master/details pattern.</target>
        </segment>
      </unit>
      <unit id="145">
        <segment state="initial">
          <source>In this example of the app as it would appear on phone, the master pane/list is on the left, with the details pane on the right.</source>
          <target>In this example of the app as it would appear on phone, the master pane/list is on the left, with the details pane on the right.</target>
        </segment>
      </unit>
      <unit id="146">
        <segment state="initial">
          <source>Example of an app using the master-details pattern, on phone</source>
          <target>Example of an app using the master-details pattern, on phone</target>
        </segment>
      </unit>
      <unit id="147">
        <segment state="initial">
          <source>This design of an app that tracks the stock market uses a master/details pattern.</source>
          <target>This design of an app that tracks the stock market uses a master/details pattern.</target>
        </segment>
      </unit>
      <unit id="148">
        <segment state="initial">
          <source>In this example of the app as it would appear on desktop, the master pane/list and details pane are both visible and full-screen.</source>
          <target>In this example of the app as it would appear on desktop, the master pane/list and details pane are both visible and full-screen.</target>
        </segment>
      </unit>
      <unit id="149">
        <segment state="initial">
          <source>The master pane features a search box at the top and a command bar at the bottom.</source>
          <target>The master pane features a search box at the top and a command bar at the bottom.</target>
        </segment>
      </unit>
      <unit id="150">
        <segment state="initial">
          <source>Example of an app using the master-details pattern, on desktop</source>
          <target>Example of an app using the master-details pattern, on desktop</target>
        </segment>
      </unit>
      <unit id="151">
        <segment state="initial">
          <source>Related articles</source>
          <target>Related articles</target>
        </segment>
      </unit>
      <unit id="152">
        <segment state="initial">
          <source>Lists</source>
          <target>Lists</target>
        </segment>
      </unit>
      <unit id="153">
        <segment state="initial">
          <source>Search</source>
          <target>Search</target>
        </segment>
      </unit>
      <unit id="154">
        <segment state="initial">
          <source>App and command bars</source>
          <target>App and command bars</target>
        </segment>
      </unit>
      <unit id="155">
        <segment state="initial">
          <source>ListView class (XAML)</source>
          <target>ListView class (XAML)</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>