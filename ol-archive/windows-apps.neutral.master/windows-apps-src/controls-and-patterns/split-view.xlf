<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="zh-cn" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">windows-apps-src\controls-and-patterns\split-view.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">391bfdbbf09474ad707dbbf306d4997825fa8386</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-781aacf</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>Split view</source>
          <target>Split view</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>A split view control has an expandable/collapsible pane and a content area.</source>
          <target>A split view control has an expandable/collapsible pane and a content area.</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>Guidelines for the SplitView control</source>
          <target>Guidelines for the SplitView control</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source>Important APIs</source>
          <target>Important APIs</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source>SplitView class (XAML)</source>
          <target>SplitView class (XAML)</target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source>SplitView object (HTML)</source>
          <target>SplitView object (HTML)</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source>A split view control has an expandable/collapsible pane and a content area.</source>
          <target>A split view control has an expandable/collapsible pane and a content area.</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source>The content area is always visible.</source>
          <target>The content area is always visible.</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source>The pane can expand and collapse or remain in an open state, and can present itself from either the left side or right side of an app window.</source>
          <target>The pane can expand and collapse or remain in an open state, and can present itself from either the left side or right side of an app window.</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source>The pane has four modes:</source>
          <target>The pane has four modes:</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source>Overlay</source>
          <target>Overlay</target>
        </segment>
      </unit>
      <unit id="112">
        <segment state="initial">
          <source>The pane is hidden until opened.</source>
          <target>The pane is hidden until opened.</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source>When open, the pane overlays the content area.</source>
          <target>When open, the pane overlays the content area.</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source>Inline</source>
          <target>Inline</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source>The pane is always visible and doesn't overlay the content area.</source>
          <target>The pane is always visible and doesn't overlay the content area.</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source>The pane and content areas divide the available screen real estate.</source>
          <target>The pane and content areas divide the available screen real estate.</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source>CompactOverlay</source>
          <target>CompactOverlay</target>
        </segment>
      </unit>
      <unit id="118">
        <segment state="initial">
          <source>A narrow portion of the pane is always visible in this mode, which is just wide enough to show icons.</source>
          <target>A narrow portion of the pane is always visible in this mode, which is just wide enough to show icons.</target>
        </segment>
      </unit>
      <unit id="119">
        <originalData>
          <data id="id1">`CompactPaneLength`</data>
        </originalData>
        <segment state="initial">
          <source>The default closed pane width is 48px, which can be modified with <ph dataRef="id1" id="ph1" />.</source>
          <target>The default closed pane width is 48px, which can be modified with <ph dataRef="id1" id="ph1" />.</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source>If the pane is opened, it will overlay the content area.</source>
          <target>If the pane is opened, it will overlay the content area.</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source>CompactInline</source>
          <target>CompactInline</target>
        </segment>
      </unit>
      <unit id="122">
        <segment state="initial">
          <source>A narrow portion of the pane is always visible in this mode, which is just wide enough to show icons.</source>
          <target>A narrow portion of the pane is always visible in this mode, which is just wide enough to show icons.</target>
        </segment>
      </unit>
      <unit id="123">
        <originalData>
          <data id="id1">`CompactPaneLength`</data>
        </originalData>
        <segment state="initial">
          <source>The default closed pane width is 48px, which can be modified with <ph dataRef="id1" id="ph1" />.</source>
          <target>The default closed pane width is 48px, which can be modified with <ph dataRef="id1" id="ph1" />.</target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source>If the pane is opened, it will reduce the space available for content, pushing the content out of its way.</source>
          <target>If the pane is opened, it will reduce the space available for content, pushing the content out of its way.</target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source>Is this the right control?</source>
          <target>Is this the right control?</target>
        </segment>
      </unit>
      <unit id="126">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](nav-pane.md)</data>
        </originalData>
        <segment state="initial">
          <source>The split view control can be used to make a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">navigation pane</pc>.</source>
          <target>The split view control can be used to make a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">navigation pane</pc>.</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source>To build this pattern, add an expand/collapse button (the "hamburger" button) and a list view representing the nav items.</source>
          <target>To build this pattern, add an expand/collapse button (the "hamburger" button) and a list view representing the nav items.</target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source>The split view control can also be used to create any "drawer" experience where users can open and close the supplemental pane.</source>
          <target>The split view control can also be used to create any "drawer" experience where users can open and close the supplemental pane.</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source>Examples</source>
          <target>Examples</target>
        </segment>
      </unit>
      <unit id="130">
        <segment state="initial">
          <source>The split view control in its default form is a basic container.</source>
          <target>The split view control in its default form is a basic container.</target>
        </segment>
      </unit>
      <unit id="131">
        <segment state="initial">
          <source>Here is an example of the Microsoft Edge app using SplitView to show its Hub.</source>
          <target>Here is an example of the Microsoft Edge app using SplitView to show its Hub.</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source>Microsoft Edge split view example</source>
          <target>Microsoft Edge split view example</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source>Related topics</source>
          <target>Related topics</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source>Nav pane pattern</source>
          <target>Nav pane pattern</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source>List view</source>
          <target>List view</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>