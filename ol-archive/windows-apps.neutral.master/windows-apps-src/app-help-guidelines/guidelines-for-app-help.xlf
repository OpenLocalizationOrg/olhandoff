<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="zh-cn" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">windows-apps-src\app-help-guidelines\guidelines-for-app-help.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">1e1e5e118eb44f6b491669dbd274fae05d92685b</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-781aacf</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>These guidelines describe how to design effective Help content for your app.</source>
          <target>These guidelines describe how to design effective Help content for your app.</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>Guidelines for app help</source>
          <target>Guidelines for app help</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>Guidelines for App Help</source>
          <target>Guidelines for App Help</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source>Applications can be complex, and providing effective help for your users can greatly improve their experience.</source>
          <target>Applications can be complex, and providing effective help for your users can greatly improve their experience.</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source>Not all applications need to provide help for their users, and what sort of help should be provided can vary greatly, depending on the application.</source>
          <target>Not all applications need to provide help for their users, and what sort of help should be provided can vary greatly, depending on the application.</target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source>If you decide to provide help, follow these guidelines when creating it.</source>
          <target>If you decide to provide help, follow these guidelines when creating it.</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source>Help that isn't helpful can be worse than no help at all.</source>
          <target>Help that isn't helpful can be worse than no help at all.</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source>Intuitive Design</source>
          <target>Intuitive Design</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source>As useful as help content can be, your app cannot rely on it to provide a good experience for the user.</source>
          <target>As useful as help content can be, your app cannot rely on it to provide a good experience for the user.</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source>If the user is unable to immediately discover and use the critical functions of your app, the user will not use your app.</source>
          <target>If the user is unable to immediately discover and use the critical functions of your app, the user will not use your app.</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source>No amount or quality help will change that first impression.</source>
          <target>No amount or quality help will change that first impression.</target>
        </segment>
      </unit>
      <unit id="112">
        <segment state="initial">
          <source>An intuitive and user-friendly design is the first step to writing useful help.</source>
          <target>An intuitive and user-friendly design is the first step to writing useful help.</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source>Not only does it keep the user engaged for long enough for them to use more advanced features, but it also provides them with knowledge of an app's core functions, which they can build upon as they continue to use the app and learn.</source>
          <target>Not only does it keep the user engaged for long enough for them to use more advanced features, but it also provides them with knowledge of an app's core functions, which they can build upon as they continue to use the app and learn.</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source>General instructions</source>
          <target>General instructions</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source>A user will not look for help content unless they already have a problem, so help needs to provide a quick and effective answer to that problem.</source>
          <target>A user will not look for help content unless they already have a problem, so help needs to provide a quick and effective answer to that problem.</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source>If help is not immediately useful, or if help is too complicated, then users are more likely to ignore it.</source>
          <target>If help is not immediately useful, or if help is too complicated, then users are more likely to ignore it.</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source>All help, no matter what kind, should follow these principles:</source>
          <target>All help, no matter what kind, should follow these principles:</target>
        </segment>
      </unit>
      <unit id="118">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Easy to understand:</pc> Help that confuses the user is worse than no help at all.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Easy to understand:</pc> Help that confuses the user is worse than no help at all.</target>
        </segment>
      </unit>
      <unit id="119">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Straightforward:</pc> Users looking for help want clear answers presented directly to them.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Straightforward:</pc> Users looking for help want clear answers presented directly to them.</target>
        </segment>
      </unit>
      <unit id="120">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Relevant:</pc> Users do not want to have to search for their specific issue.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Relevant:</pc> Users do not want to have to search for their specific issue.</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source>They want the most relevant help presented straight to them (this is called "Contextual Help"), or they want an easily navigated interface.</source>
          <target>They want the most relevant help presented straight to them (this is called "Contextual Help"), or they want an easily navigated interface.</target>
        </segment>
      </unit>
      <unit id="122">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Direct:</pc> When a user looks for help, they want to see help.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Direct:</pc> When a user looks for help, they want to see help.</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source>If your app includes pages for reporting bugs, giving feedback, viewing term of service, or similar functions, it is fine if your help links to those pages.</source>
          <target>If your app includes pages for reporting bugs, giving feedback, viewing term of service, or similar functions, it is fine if your help links to those pages.</target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source>But they should be included as an afterthought on the main help page, and not as items of equal or greater importance.</source>
          <target>But they should be included as an afterthought on the main help page, and not as items of equal or greater importance.</target>
        </segment>
      </unit>
      <unit id="125">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Consistent:</pc> No matter the type, help is still a part of your app, and should be treated as any other part of the UI.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Consistent:</pc> No matter the type, help is still a part of your app, and should be treated as any other part of the UI.</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source>The same design principles of usability, accessibility, and style which are used throughout the rest of your app should also be present in the help you offer.</source>
          <target>The same design principles of usability, accessibility, and style which are used throughout the rest of your app should also be present in the help you offer.</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source>Types of help</source>
          <target>Types of help</target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source>There are three primary categories of help content, each with varying strengths and suitable for different purposes.</source>
          <target>There are three primary categories of help content, each with varying strengths and suitable for different purposes.</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source>Use any combination of them in your app, depending on your needs.</source>
          <target>Use any combination of them in your app, depending on your needs.</target>
        </segment>
      </unit>
      <unit id="130">
        <segment state="initial">
          <source>Instructional UI</source>
          <target>Instructional UI</target>
        </segment>
      </unit>
      <unit id="131">
        <segment state="initial">
          <source>Normally, users should be able to use all the core functions of your app without instruction.</source>
          <target>Normally, users should be able to use all the core functions of your app without instruction.</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source>But sometimes, your app will depend on use of a specific gesture, or there may be secondary features of your app which are not immediately obvious.</source>
          <target>But sometimes, your app will depend on use of a specific gesture, or there may be secondary features of your app which are not immediately obvious.</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source>In this case, instructional UI should be used to educate users with instructions on how to perform specific tasks.</source>
          <target>In this case, instructional UI should be used to educate users with instructions on how to perform specific tasks.</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source>See guidelines for instructional UI</source>
          <target>See guidelines for instructional UI</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source>In-app help</source>
          <target>In-app help</target>
        </segment>
      </unit>
      <unit id="136">
        <segment state="initial">
          <source>The standard method of presenting help is to display it within the application at the user's request.</source>
          <target>The standard method of presenting help is to display it within the application at the user's request.</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source>There are several ways in which this can be implemented, such as in help pages or informative descriptions.</source>
          <target>There are several ways in which this can be implemented, such as in help pages or informative descriptions.</target>
        </segment>
      </unit>
      <unit id="138">
        <segment state="initial">
          <source>This method is ideal for general-purpose help, that directly answers a user's questions without complexity.</source>
          <target>This method is ideal for general-purpose help, that directly answers a user's questions without complexity.</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source>See guidelines for in-app help</source>
          <target>See guidelines for in-app help</target>
        </segment>
      </unit>
      <unit id="140">
        <segment state="initial">
          <source>External help</source>
          <target>External help</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source>For detailed tutorials, advanced functions, or libraries of help topics too large to fit within your application, links to external web pages are ideal.</source>
          <target>For detailed tutorials, advanced functions, or libraries of help topics too large to fit within your application, links to external web pages are ideal.</target>
        </segment>
      </unit>
      <unit id="142">
        <segment state="initial">
          <source>These links should be used sparingly if possible, as they remove the user from the application experience.</source>
          <target>These links should be used sparingly if possible, as they remove the user from the application experience.</target>
        </segment>
      </unit>
      <unit id="143">
        <segment state="initial">
          <source>See guidelines for external help</source>
          <target>See guidelines for external help</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>