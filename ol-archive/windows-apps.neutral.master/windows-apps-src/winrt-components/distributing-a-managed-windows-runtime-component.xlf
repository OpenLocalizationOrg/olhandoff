<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="zh-cn" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">windows-apps-src\winrt-components\distributing-a-managed-windows-runtime-component.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">3d7a51ed13f63ca9d6070fbbe860c653c4deaf07</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-781aacf</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>Distributing a managed Windows Runtime Component</source>
          <target>Distributing a managed Windows Runtime Component</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>You can distribute your Windows Runtime Component by file copy.</source>
          <target>You can distribute your Windows Runtime Component by file copy.</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>Distributing a managed Windows Runtime Component</source>
          <target>Distributing a managed Windows Runtime Component</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source>Updated for UWP apps on Windows 10.</source>
          <target>Updated for UWP apps on Windows 10.</target>
        </segment>
      </unit>
      <unit id="105">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
        </originalData>
        <segment state="initial">
          <source>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc></source>
          <target>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc></target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source>You can distribute your Windows Runtime Component by file copy.</source>
          <target>You can distribute your Windows Runtime Component by file copy.</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source>However, if your component consists of many files, installation can be tedious for your users.</source>
          <target>However, if your component consists of many files, installation can be tedious for your users.</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source>Also, errors in placing files or failure to set references might cause problems for them.</source>
          <target>Also, errors in placing files or failure to set references might cause problems for them.</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source>You can package a complex component as a Visual Studio extension SDK, to make it easy to install and use.</source>
          <target>You can package a complex component as a Visual Studio extension SDK, to make it easy to install and use.</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source>Users only need to set one reference for the entire package.</source>
          <target>Users only need to set one reference for the entire package.</target>
        </segment>
      </unit>
      <unit id="111">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/vstudio/dd293638.aspx)</data>
        </originalData>
        <segment state="initial">
          <source>They can easily locate and install your component by using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Extensions and Updates</pc> dialog box, as described in <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Finding and Using Visual Studio Extensions</pc>, in the MSDN Library.</source>
          <target>They can easily locate and install your component by using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Extensions and Updates</pc> dialog box, as described in <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Finding and Using Visual Studio Extensions</pc>, in the MSDN Library.</target>
        </segment>
      </unit>
      <unit id="112">
        <segment state="initial">
          <source>Planning a distributable Windows Runtime Component</source>
          <target>Planning a distributable Windows Runtime Component</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source>Choose unique names for binary files, such as your .winmd files.</source>
          <target>Choose unique names for binary files, such as your .winmd files.</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source>We recommend the following format to ensure uniqueness:</source>
          <target>We recommend the following format to ensure uniqueness:</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source>Your binary files will be installed in app packages, possibly with binary files from other developers.</source>
          <target>Your binary files will be installed in app packages, possibly with binary files from other developers.</target>
        </segment>
      </unit>
      <unit id="116">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/hh768146.aspx)</data>
        </originalData>
        <segment state="initial">
          <source>See "Extension SDKs" in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">How to: Create a Software Development Kit</pc>, in the MSDN Library.</source>
          <target>See "Extension SDKs" in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">How to: Create a Software Development Kit</pc>, in the MSDN Library.</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source>To decide how to distribute your component, consider how complex it is.</source>
          <target>To decide how to distribute your component, consider how complex it is.</target>
        </segment>
      </unit>
      <unit id="118">
        <segment state="initial">
          <source>An extension SDK or similar package manager is recommended when:</source>
          <target>An extension SDK or similar package manager is recommended when:</target>
        </segment>
      </unit>
      <unit id="119">
        <segment state="initial">
          <source>Your component consists of multiple files.</source>
          <target>Your component consists of multiple files.</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source>You provide versions of your component for multiple platforms (x86 and ARM, for example).</source>
          <target>You provide versions of your component for multiple platforms (x86 and ARM, for example).</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source>You provide both debug and release versions of your component.</source>
          <target>You provide both debug and release versions of your component.</target>
        </segment>
      </unit>
      <unit id="122">
        <segment state="initial">
          <source>Your component has files and assemblies that are used only at design time.</source>
          <target>Your component has files and assemblies that are used only at design time.</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source>An extension SDK is particularly useful if more than one of the above are true.</source>
          <target>An extension SDK is particularly useful if more than one of the above are true.</target>
        </segment>
      </unit>
      <unit id="124">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  For complex components, the NuGet package management system offers an open source alternative to extension SDKs.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  For complex components, the NuGet package management system offers an open source alternative to extension SDKs.</target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source>Like extension SDKs, NuGet enables you to create packages that simplify the installation of complex components.</source>
          <target>Like extension SDKs, NuGet enables you to create packages that simplify the installation of complex components.</target>
        </segment>
      </unit>
      <unit id="126">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/jj161096.aspx)</data>
        </originalData>
        <segment state="initial">
          <source>For a comparison of NuGet packages and Visual Studio extension SDKs, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Adding References Using NuGet Versus an Extension SDK</pc> in the MSDN Library.</source>
          <target>For a comparison of NuGet packages and Visual Studio extension SDKs, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Adding References Using NuGet Versus an Extension SDK</pc> in the MSDN Library.</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source>Distribution by file copy</source>
          <target>Distribution by file copy</target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source>If your component consists of a single .winmd file, or a .winmd file and a resource index (.pri) file, you can simply make the .winmd file available for users to copy.</source>
          <target>If your component consists of a single .winmd file, or a .winmd file and a resource index (.pri) file, you can simply make the .winmd file available for users to copy.</target>
        </segment>
      </unit>
      <unit id="129">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Users can put the file wherever they want to in a project, use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Add Existing Item</pc> dialog box to add the .winmd file to the project, and then use the Reference Manager dialog box to create a reference.</source>
          <target>Users can put the file wherever they want to in a project, use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Add Existing Item</pc> dialog box to add the .winmd file to the project, and then use the Reference Manager dialog box to create a reference.</target>
        </segment>
      </unit>
      <unit id="130">
        <segment state="initial">
          <source>If you include a .pri file or an .xml file, instruct users to place those files with the .winmd file.</source>
          <target>If you include a .pri file or an .xml file, instruct users to place those files with the .winmd file.</target>
        </segment>
      </unit>
      <unit id="131">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  Visual Studio always produces a .pri file when you build your Windows Runtime Component, even if your project doesn't include any resources.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  Visual Studio always produces a .pri file when you build your Windows Runtime Component, even if your project doesn't include any resources.</target>
        </segment>
      </unit>
      <unit id="132">
        <originalData>
          <data id="id1">\\</data>
          <data id="id2">\\</data>
        </originalData>
        <segment state="initial">
          <source>If you have a test app for your component, you can determine whether the .pri file is used by examining the contents of the app package in the bin<ph dataRef="id1" id="ph1" />debug<ph dataRef="id2" id="ph2" />AppX folder.</source>
          <target>If you have a test app for your component, you can determine whether the .pri file is used by examining the contents of the app package in the bin<ph dataRef="id1" id="ph1" />debug<ph dataRef="id2" id="ph2" />AppX folder.</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source>If the .pri file from your component doesn't appear there, you don't need to distribute it.</source>
          <target>If the .pri file from your component doesn't appear there, you don't need to distribute it.</target>
        </segment>
      </unit>
      <unit id="134">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/jj552945.aspx)</data>
        </originalData>
        <segment state="initial">
          <source>Alternatively, you can use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MakePRI.exe</pc> tool to dump the resource file from your Windows Runtime Component project.</source>
          <target>Alternatively, you can use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MakePRI.exe</pc> tool to dump the resource file from your Windows Runtime Component project.</target>
        </segment>
      </unit>
      <unit id="135">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/jj552947.aspx)</data>
        </originalData>
        <segment state="initial">
          <source>For example, in the Visual Studio Command Prompt window, type: makepri dump /if MyComponent.pri /of MyComponent.pri.xml You can read more about .pri files in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Resource Management System (Windows)</pc>.</source>
          <target>For example, in the Visual Studio Command Prompt window, type: makepri dump /if MyComponent.pri /of MyComponent.pri.xml You can read more about .pri files in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Resource Management System (Windows)</pc>.</target>
        </segment>
      </unit>
      <unit id="136">
        <segment state="initial">
          <source>Distribution by extension SDK</source>
          <target>Distribution by extension SDK</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source>A complex component usually includes Windows resources, but see the note about detecting empty .pri files in the previous section.</source>
          <target>A complex component usually includes Windows resources, but see the note about detecting empty .pri files in the previous section.</target>
        </segment>
      </unit>
      <unit id="138">
        <segment state="initial">
          <source>To create an extension SDK</source>
          <target>To create an extension SDK</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source>Make sure you have the Visual Studio SDK installed.</source>
          <target>Make sure you have the Visual Studio SDK installed.</target>
        </segment>
      </unit>
      <unit id="140">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://www.visualstudio.com/downloads/download-visual-studio-vs)</data>
        </originalData>
        <segment state="initial">
          <source>You can download the Visual Studio SDK from the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Visual Studio Downloads</pc> page.</source>
          <target>You can download the Visual Studio SDK from the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Visual Studio Downloads</pc> page.</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source>Create a new project using the VSIX Project template.</source>
          <target>Create a new project using the VSIX Project template.</target>
        </segment>
      </unit>
      <unit id="142">
        <segment state="initial">
          <source>You can find the template under Visual C# or Visual Basic, in the Extensibility category.</source>
          <target>You can find the template under Visual C# or Visual Basic, in the Extensibility category.</target>
        </segment>
      </unit>
      <unit id="143">
        <segment state="initial">
          <source>This template is installed as part of the Visual Studio SDK.</source>
          <target>This template is installed as part of the Visual Studio SDK.</target>
        </segment>
      </unit>
      <unit id="144">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/jj127119.aspx)</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/jj127117.aspx)</data>
        </originalData>
        <segment state="initial">
          <source>(<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Walkthrough: Creating an SDK using C# or Visual Basic</pc> or <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Walkthrough: Creating an SDK using C++</pc>, demonstrates the use of this template in a very simple scenario.</source>
          <target>(<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Walkthrough: Creating an SDK using C# or Visual Basic</pc> or <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Walkthrough: Creating an SDK using C++</pc>, demonstrates the use of this template in a very simple scenario.</target>
        </segment>
      </unit>
      <unit id="145">
        <segment state="initial">
          <source>)</source>
          <target>)</target>
        </segment>
      </unit>
      <unit id="146">
        <segment state="initial">
          <source>Determine the folder structure for your SDK.</source>
          <target>Determine the folder structure for your SDK.</target>
        </segment>
      </unit>
      <unit id="147">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>The folder structure begins at the root level of your VSIX project, with the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">References</pc>, <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Redist</pc>, and <pc dataRefEnd="id6" dataRefStart="id5" id="p3">DesignTime</pc> folders.</source>
          <target>The folder structure begins at the root level of your VSIX project, with the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">References</pc>, <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Redist</pc>, and <pc dataRefEnd="id6" dataRefStart="id5" id="p3">DesignTime</pc> folders.</target>
        </segment>
      </unit>
      <unit id="148">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">References</pc> is the location for binary files that your users can program against.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">References</pc> is the location for binary files that your users can program against.</target>
        </segment>
      </unit>
      <unit id="149">
        <segment state="initial">
          <source>The extension SDK creates references to these files in your users' Visual Studio projects.</source>
          <target>The extension SDK creates references to these files in your users' Visual Studio projects.</target>
        </segment>
      </unit>
      <unit id="150">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Redist</pc> is the location for other files that must be distributed with your binary files, in apps that are created by using your component.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Redist</pc> is the location for other files that must be distributed with your binary files, in apps that are created by using your component.</target>
        </segment>
      </unit>
      <unit id="151">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">DesignTime</pc> is the location for files that are used only when developers are creating apps that use your component.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">DesignTime</pc> is the location for files that are used only when developers are creating apps that use your component.</target>
        </segment>
      </unit>
      <unit id="152">
        <segment state="initial">
          <source>In each of these folders, you can create configuration folders.</source>
          <target>In each of these folders, you can create configuration folders.</target>
        </segment>
      </unit>
      <unit id="153">
        <segment state="initial">
          <source>The permitted names are debug, retail, and CommonConfiguration.</source>
          <target>The permitted names are debug, retail, and CommonConfiguration.</target>
        </segment>
      </unit>
      <unit id="154">
        <segment state="initial">
          <source>The CommonConfiguration folder is for files that are the same whether they're used by retail or debug builds.</source>
          <target>The CommonConfiguration folder is for files that are the same whether they're used by retail or debug builds.</target>
        </segment>
      </unit>
      <unit id="155">
        <segment state="initial">
          <source>If you're only distributing retail builds of your component, you can put everything in CommonConfiguration and omit the other two folders.</source>
          <target>If you're only distributing retail builds of your component, you can put everything in CommonConfiguration and omit the other two folders.</target>
        </segment>
      </unit>
      <unit id="156">
        <segment state="initial">
          <source>In each configuration folder, you can provide architecture folders for platform-specific files.</source>
          <target>In each configuration folder, you can provide architecture folders for platform-specific files.</target>
        </segment>
      </unit>
      <unit id="157">
        <segment state="initial">
          <source>If you use the same files for all platforms, you can supply a single folder named neutral.</source>
          <target>If you use the same files for all platforms, you can supply a single folder named neutral.</target>
        </segment>
      </unit>
      <unit id="158">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/hh768146.aspx)</data>
        </originalData>
        <segment state="initial">
          <source>You can find details of the folder structure, including other architecture folder names, in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">How to: Create a Software Development Kit</pc>, in the MSDN Library.</source>
          <target>You can find details of the folder structure, including other architecture folder names, in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">How to: Create a Software Development Kit</pc>, in the MSDN Library.</target>
        </segment>
      </unit>
      <unit id="159">
        <segment state="initial">
          <source>(That article discusses both platform SDKs and extension SDKs.</source>
          <target>(That article discusses both platform SDKs and extension SDKs.</target>
        </segment>
      </unit>
      <unit id="160">
        <segment state="initial">
          <source>You may find it useful to collapse the section about platform SDKs, to avoid confusion.</source>
          <target>You may find it useful to collapse the section about platform SDKs, to avoid confusion.</target>
        </segment>
      </unit>
      <unit id="161">
        <segment state="initial">
          <source>)</source>
          <target>)</target>
        </segment>
      </unit>
      <unit id="162">
        <segment state="initial">
          <source>Create an SDK manifest file.</source>
          <target>Create an SDK manifest file.</target>
        </segment>
      </unit>
      <unit id="163">
        <segment state="initial">
          <source>The manifest specifies name and version information, the architectures your SDK supports, .NET Framework versions, and other information about the way Visual Studio uses your SDK.</source>
          <target>The manifest specifies name and version information, the architectures your SDK supports, .NET Framework versions, and other information about the way Visual Studio uses your SDK.</target>
        </segment>
      </unit>
      <unit id="164">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/hh768146.aspx)</data>
        </originalData>
        <segment state="initial">
          <source>You can find details and an example in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">How to: Create a Software Development Kit</pc>.</source>
          <target>You can find details and an example in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">How to: Create a Software Development Kit</pc>.</target>
        </segment>
      </unit>
      <unit id="165">
        <segment state="initial">
          <source>Build and distribute the extension SDK.</source>
          <target>Build and distribute the extension SDK.</target>
        </segment>
      </unit>
      <unit id="166">
        <segment state="initial">
          <source>For in-depth information, including localizing and signing the VSIX package, see VSIX Deployment in the MSDN Library.</source>
          <target>For in-depth information, including localizing and signing the VSIX package, see VSIX Deployment in the MSDN Library.</target>
        </segment>
      </unit>
      <unit id="167">
        <segment state="initial">
          <source>Related topics</source>
          <target>Related topics</target>
        </segment>
      </unit>
      <unit id="168">
        <segment state="initial">
          <source>Creating a Software Development Kit</source>
          <target>Creating a Software Development Kit</target>
        </segment>
      </unit>
      <unit id="169">
        <segment state="initial">
          <source>NuGet package management system</source>
          <target>NuGet package management system</target>
        </segment>
      </unit>
      <unit id="170">
        <segment state="initial">
          <source>Resource Management System (Windows)</source>
          <target>Resource Management System (Windows)</target>
        </segment>
      </unit>
      <unit id="171">
        <segment state="initial">
          <source>Finding and Using Visual Studio Extensions</source>
          <target>Finding and Using Visual Studio Extensions</target>
        </segment>
      </unit>
      <unit id="172">
        <segment state="initial">
          <source>MakePRI.exe command options</source>
          <target>MakePRI.exe command options</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>