<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="zh-cn" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">windows-apps-src\app-settings\store-and-retrieve-app-data.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">433cda6432d1e695bacb338e68012bcc9c837eb6</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-781aacf</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>Learn how to store and retrieve local, roaming, and temporary app data.</source>
          <target>Learn how to store and retrieve local, roaming, and temporary app data.</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>Store and retrieve settings and other app data</source>
          <target>Store and retrieve settings and other app data</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>Store and retrieve settings and other app data</source>
          <target>Store and retrieve settings and other app data</target>
        </segment>
      </unit>
      <unit id="104">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">App data</pc> is mutable data that is specific to a particular app.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">App data</pc> is mutable data that is specific to a particular app.</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source>It includes runtime state, user preferences, and other settings.</source>
          <target>It includes runtime state, user preferences, and other settings.</target>
        </segment>
      </unit>
      <unit id="106">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
        </originalData>
        <segment state="initial">
          <source>App data is different from <pc dataRefEnd="id2" dataRefStart="id1" id="p1">user data</pc>, data that the user creates and manages when using an app.</source>
          <target>App data is different from <pc dataRefEnd="id2" dataRefStart="id1" id="p1">user data</pc>, data that the user creates and manages when using an app.</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source>User data includes document or media files, email or communication transcripts, or database records holding content created by the user.</source>
          <target>User data includes document or media files, email or communication transcripts, or database records holding content created by the user.</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source>User data may be useful or meaningful to more than one app.</source>
          <target>User data may be useful or meaningful to more than one app.</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source>Often, this is data that the user wants to manipulate or transmit as an entity independent of the app itself, such as a document.</source>
          <target>Often, this is data that the user wants to manipulate or transmit as an entity independent of the app itself, such as a document.</target>
        </segment>
      </unit>
      <unit id="110">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Important note about app data:  </pc>The lifetime of the app data is tied to the lifetime of the app.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Important note about app data:  </pc>The lifetime of the app data is tied to the lifetime of the app.</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source>If the app is removed, all of the app data will be lost as a consequence.</source>
          <target>If the app is removed, all of the app data will be lost as a consequence.</target>
        </segment>
      </unit>
      <unit id="112">
        <segment state="initial">
          <source>Don't use app data to store user data or anything that users might perceive as valuable and irreplaceable.</source>
          <target>Don't use app data to store user data or anything that users might perceive as valuable and irreplaceable.</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source>We recommend that the user's libraries and Microsoft OneDrive be used to store this sort of information.</source>
          <target>We recommend that the user's libraries and Microsoft OneDrive be used to store this sort of information.</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source>App data is ideal for storing app-specific user preferences, settings, and favorites.</source>
          <target>App data is ideal for storing app-specific user preferences, settings, and favorites.</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source>Types of app data</source>
          <target>Types of app data</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source>There are two types of app data: settings and files.</source>
          <target>There are two types of app data: settings and files.</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source>Settings</source>
          <target>Settings</target>
        </segment>
      </unit>
      <unit id="118">
        <segment state="initial">
          <source>Use settings to store user preferences and application state info.</source>
          <target>Use settings to store user preferences and application state info.</target>
        </segment>
      </unit>
      <unit id="119">
        <segment state="initial">
          <source>The app data API enables you to easily create and retrieve settings (we'll show you some examples later in this article).</source>
          <target>The app data API enables you to easily create and retrieve settings (we'll show you some examples later in this article).</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source>Here are data types you can use for app settings:</source>
          <target>Here are data types you can use for app settings:</target>
        </segment>
      </unit>
      <unit id="121">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
          <data id="id9">**</data>
          <data id="id10">**</data>
          <data id="id11">**</data>
          <data id="id12">**</data>
          <data id="id13">**</data>
          <data id="id14">**</data>
          <data id="id15">**</data>
          <data id="id16">**</data>
          <data id="id17">**</data>
          <data id="id18">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">UInt8</pc>, <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Int16</pc>, <pc dataRefEnd="id6" dataRefStart="id5" id="p3">UInt16</pc>, <pc dataRefEnd="id8" dataRefStart="id7" id="p4">Int32</pc>, <pc dataRefEnd="id10" dataRefStart="id9" id="p5">UInt32</pc>, <pc dataRefEnd="id12" dataRefStart="id11" id="p6">Int64</pc>, <pc dataRefEnd="id14" dataRefStart="id13" id="p7">UInt64</pc>, <pc dataRefEnd="id16" dataRefStart="id15" id="p8">Single</pc>, <pc dataRefEnd="id18" dataRefStart="id17" id="p9">Double</pc></source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">UInt8</pc>, <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Int16</pc>, <pc dataRefEnd="id6" dataRefStart="id5" id="p3">UInt16</pc>, <pc dataRefEnd="id8" dataRefStart="id7" id="p4">Int32</pc>, <pc dataRefEnd="id10" dataRefStart="id9" id="p5">UInt32</pc>, <pc dataRefEnd="id12" dataRefStart="id11" id="p6">Int64</pc>, <pc dataRefEnd="id14" dataRefStart="id13" id="p7">UInt64</pc>, <pc dataRefEnd="id16" dataRefStart="id15" id="p8">Single</pc>, <pc dataRefEnd="id18" dataRefStart="id17" id="p9">Double</pc></target>
        </segment>
      </unit>
      <unit id="122">
        <segment state="initial">
          <source>Boolean</source>
          <target>Boolean</target>
        </segment>
      </unit>
      <unit id="123">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Char16</pc>, <pc dataRefEnd="id4" dataRefStart="id3" id="p2">String</pc></source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Char16</pc>, <pc dataRefEnd="id4" dataRefStart="id3" id="p2">String</pc></target>
        </segment>
      </unit>
      <unit id="124">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br206576)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/br225996)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">
              <pc dataRefEnd="id4" dataRefStart="id3" id="p2">DateTime</pc>
            </pc>, <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">TimeSpan</pc></pc></source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">
              <pc dataRefEnd="id4" dataRefStart="id3" id="p2">DateTime</pc>
            </pc>, <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">TimeSpan</pc></pc></target>
        </segment>
      </unit>
      <unit id="125">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/br225870)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">[</data>
          <data id="id8">](https://msdn.microsoft.com/library/windows/apps/br225995)</data>
          <data id="id9">**</data>
          <data id="id10">**</data>
          <data id="id11">[</data>
          <data id="id12">](https://msdn.microsoft.com/library/windows/apps/br225994)</data>
          <data id="id13">**</data>
          <data id="id14">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">GUID</pc>, <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">Point</pc></pc>, <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">Size</pc></pc>, <pc dataRefEnd="id12" dataRefStart="id11" id="p6"><pc dataRefEnd="id14" dataRefStart="id13" id="p7">Rect</pc></pc></source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">GUID</pc>, <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">Point</pc></pc>, <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">Size</pc></pc>, <pc dataRefEnd="id12" dataRefStart="id11" id="p6"><pc dataRefEnd="id14" dataRefStart="id13" id="p7">Rect</pc></pc></target>
        </segment>
      </unit>
      <unit id="126">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br241588)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">
              <pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationDataCompositeValue</pc>
            </pc>: A set of related app settings that must be serialized and deserialized atomically.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">
              <pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationDataCompositeValue</pc>
            </pc>: A set of related app settings that must be serialized and deserialized atomically.</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source>Use composite settings to easily handle atomic updates of interdependent settings.</source>
          <target>Use composite settings to easily handle atomic updates of interdependent settings.</target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source>The system ensures the integrity of composite settings during concurrent access and roaming.</source>
          <target>The system ensures the integrity of composite settings during concurrent access and roaming.</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source>Composite settings are optimized for small amounts of data, and performance can be poor if you use them for large data sets.</source>
          <target>Composite settings are optimized for small amounts of data, and performance can be poor if you use them for large data sets.</target>
        </segment>
      </unit>
      <unit id="130">
        <segment state="initial">
          <source>Files</source>
          <target>Files</target>
        </segment>
      </unit>
      <unit id="131">
        <segment state="initial">
          <source>Use files to store binary data or to enable your own, customized serialized types.</source>
          <target>Use files to store binary data or to enable your own, customized serialized types.</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source>Storing app data in the app data stores</source>
          <target>Storing app data in the app data stores</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source>When an app is installed, the system gives it its own per-user data stores for settings and files.</source>
          <target>When an app is installed, the system gives it its own per-user data stores for settings and files.</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source>You don't need to know where or how this data exists, because the system is responsible for managing the physical storage, ensuring that the data is kept isolated from other apps and other users.</source>
          <target>You don't need to know where or how this data exists, because the system is responsible for managing the physical storage, ensuring that the data is kept isolated from other apps and other users.</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source>The system also preserves the contents of these data stores when the user installs an update to your app and removes the contents of these data stores completely and cleanly when your app is uninstalled.</source>
          <target>The system also preserves the contents of these data stores when the user installs an update to your app and removes the contents of these data stores completely and cleanly when your app is uninstalled.</target>
        </segment>
      </unit>
      <unit id="136">
        <segment state="initial">
          <source>Within its app data store, each app has system-defined root directories: one for local files, one for roaming files, and one for temporary files.</source>
          <target>Within its app data store, each app has system-defined root directories: one for local files, one for roaming files, and one for temporary files.</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source>Your app can add new files and new containers to each of these root directories.</source>
          <target>Your app can add new files and new containers to each of these root directories.</target>
        </segment>
      </unit>
      <unit id="138">
        <segment state="initial">
          <source>Local app data</source>
          <target>Local app data</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source>Local app data should be used for any information that needs to be preserved between app sessions and is not suitable for roaming app data.</source>
          <target>Local app data should be used for any information that needs to be preserved between app sessions and is not suitable for roaming app data.</target>
        </segment>
      </unit>
      <unit id="140">
        <segment state="initial">
          <source>Data that is not applicable on other devices should be stored here as well.</source>
          <target>Data that is not applicable on other devices should be stored here as well.</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source>There is no general size restriction on local data stored.</source>
          <target>There is no general size restriction on local data stored.</target>
        </segment>
      </unit>
      <unit id="142">
        <segment state="initial">
          <source>Use the local app data store for data that it does not make sense to roam and for large data sets.</source>
          <target>Use the local app data store for data that it does not make sense to roam and for large data sets.</target>
        </segment>
      </unit>
      <unit id="143">
        <segment state="initial">
          <source>Retrieve the local app data store</source>
          <target>Retrieve the local app data store</target>
        </segment>
      </unit>
      <unit id="144">
        <segment state="initial">
          <source>Before you can read or write local app data, you must retrieve the local app data store.</source>
          <target>Before you can read or write local app data, you must retrieve the local app data store.</target>
        </segment>
      </unit>
      <unit id="145">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br241622)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/br241599)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source>To retrieve the local app data store, use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationData.LocalSettings</pc></pc> property to get the app's local settings as an <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">ApplicationDataContainer</pc></pc> object.</source>
          <target>To retrieve the local app data store, use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationData.LocalSettings</pc></pc> property to get the app's local settings as an <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">ApplicationDataContainer</pc></pc> object.</target>
        </segment>
      </unit>
      <unit id="146">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br241621)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/br227230)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationData.LocalFolder</pc></pc> property to get the files in a <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">StorageFolder</pc></pc> object.</source>
          <target>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationData.LocalFolder</pc></pc> property to get the files in a <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">StorageFolder</pc></pc> object.</target>
        </segment>
      </unit>
      <unit id="147">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn633825)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationData.LocalCacheFolder</pc></pc> property to get the folder in the local app data store where you can save files that are not included in backup and restore.</source>
          <target>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationData.LocalCacheFolder</pc></pc> property to get the folder in the local app data store where you can save files that are not included in backup and restore.</target>
        </segment>
      </unit>
      <unit id="148">
        <segment state="initial">
          <source>Create and retrieve a simple local setting</source>
          <target>Create and retrieve a simple local setting</target>
        </segment>
      </unit>
      <unit id="149">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br241615)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">`localSettings`</data>
        </originalData>
        <segment state="initial">
          <source>To create or write a setting, use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationDataContainer.Values</pc></pc> property to access the settings in the <ph dataRef="id5" id="ph1" /> container we got in the previous step.</source>
          <target>To create or write a setting, use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationDataContainer.Values</pc></pc> property to access the settings in the <ph dataRef="id5" id="ph1" /> container we got in the previous step.</target>
        </segment>
      </unit>
      <unit id="150">
        <originalData>
          <data id="id1">`exampleSetting`</data>
        </originalData>
        <segment state="initial">
          <source>This example creates a setting named <ph dataRef="id1" id="ph1" />.</source>
          <target>This example creates a setting named <ph dataRef="id1" id="ph1" />.</target>
        </segment>
      </unit>
      <unit id="151">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br241615)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>To retrieve the setting, you use the same <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationDataContainer.Values</pc></pc> property that you used to create the setting.</source>
          <target>To retrieve the setting, you use the same <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationDataContainer.Values</pc></pc> property that you used to create the setting.</target>
        </segment>
      </unit>
      <unit id="152">
        <segment state="initial">
          <source>This example shows how to retrieve the setting we just created.</source>
          <target>This example shows how to retrieve the setting we just created.</target>
        </segment>
      </unit>
      <unit id="153">
        <segment state="initial">
          <source>Create and retrieve a local composite value</source>
          <target>Create and retrieve a local composite value</target>
        </segment>
      </unit>
      <unit id="154">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br241588)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>To create or write a composite value, create an <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationDataCompositeValue</pc></pc> object.</source>
          <target>To create or write a composite value, create an <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationDataCompositeValue</pc></pc> object.</target>
        </segment>
      </unit>
      <unit id="155">
        <originalData>
          <data id="id1">`exampleCompositeSetting`</data>
          <data id="id2">`localSettings`</data>
        </originalData>
        <segment state="initial">
          <source>This example creates a composite setting named <ph dataRef="id1" id="ph1" /> and adds it to the <ph dataRef="id2" id="ph2" /> container.</source>
          <target>This example creates a composite setting named <ph dataRef="id1" id="ph1" /> and adds it to the <ph dataRef="id2" id="ph2" /> container.</target>
        </segment>
      </unit>
      <unit id="156">
        <segment state="initial">
          <source>This example shows how to retrieve the composite value we just created.</source>
          <target>This example shows how to retrieve the composite value we just created.</target>
        </segment>
      </unit>
      <unit id="157">
        <segment state="initial">
          <source>Create and read a local file</source>
          <target>Create and read a local file</target>
        </segment>
      </unit>
      <unit id="158">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227249)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/hh701505)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source>To create and update a file in the local app data store, use the file APIs, such as <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Storage.StorageFolder.CreateFileAsync</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Windows.Storage.FileIO.WriteTextAsync</pc></pc>.</source>
          <target>To create and update a file in the local app data store, use the file APIs, such as <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Storage.StorageFolder.CreateFileAsync</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Windows.Storage.FileIO.WriteTextAsync</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="159">
        <originalData>
          <data id="id1">`dataFile.txt`</data>
          <data id="id2">`localFolder`</data>
        </originalData>
        <segment state="initial">
          <source>This example creates a file named <ph dataRef="id1" id="ph1" /> in the <ph dataRef="id2" id="ph2" /> container and writes the current date and time to the file.</source>
          <target>This example creates a file named <ph dataRef="id1" id="ph1" /> in the <ph dataRef="id2" id="ph2" /> container and writes the current date and time to the file.</target>
        </segment>
      </unit>
      <unit id="160">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/br241631)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ReplaceExisting</pc> value from the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">CreationCollisionOption</pc></pc> enumeration indicates to replace the file if it already exists.</source>
          <target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ReplaceExisting</pc> value from the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">CreationCollisionOption</pc></pc> enumeration indicates to replace the file if it already exists.</target>
        </segment>
      </unit>
      <unit id="161">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227272)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/hh701741)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
          <data id="id9">[</data>
          <data id="id10">](https://msdn.microsoft.com/library/windows/apps/hh701482)</data>
          <data id="id11">**</data>
          <data id="id12">**</data>
        </originalData>
        <segment state="initial">
          <source>To open and read a file in the local app data store, use the file APIs, such as <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Storage.StorageFolder.GetFileAsync</pc></pc>, <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Windows.Storage.StorageFile.GetFileFromApplicationUriAsync</pc></pc>, and <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">Windows.Storage.FileIO.ReadTextAsync</pc></pc>.</source>
          <target>To open and read a file in the local app data store, use the file APIs, such as <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Storage.StorageFolder.GetFileAsync</pc></pc>, <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Windows.Storage.StorageFile.GetFileFromApplicationUriAsync</pc></pc>, and <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">Windows.Storage.FileIO.ReadTextAsync</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="162">
        <originalData>
          <data id="id1">`dataFile.txt`</data>
        </originalData>
        <segment state="initial">
          <source>This example opens the <ph dataRef="id1" id="ph1" /> file created in the previous step and reads the date from the file.</source>
          <target>This example opens the <ph dataRef="id1" id="ph1" /> file created in the previous step and reads the date from the file.</target>
        </segment>
      </unit>
      <unit id="163">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/xaml/hh965322)</data>
        </originalData>
        <segment state="initial">
          <source>For details on loading file resources from various locations, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">How to load file resources</pc>.</source>
          <target>For details on loading file resources from various locations, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">How to load file resources</pc>.</target>
        </segment>
      </unit>
      <unit id="164">
        <segment state="initial">
          <source>Roaming data</source>
          <target>Roaming data</target>
        </segment>
      </unit>
      <unit id="165">
        <segment state="initial">
          <source>If you use roaming data in your app, your users can easily keep your app's app data in sync across multiple devices.</source>
          <target>If you use roaming data in your app, your users can easily keep your app's app data in sync across multiple devices.</target>
        </segment>
      </unit>
      <unit id="166">
        <segment state="initial">
          <source>If a user installs your app on multiple devices, the OS keeps the app data in sync, reducing the amount of setup work that the user needs to do for your app on their second device.</source>
          <target>If a user installs your app on multiple devices, the OS keeps the app data in sync, reducing the amount of setup work that the user needs to do for your app on their second device.</target>
        </segment>
      </unit>
      <unit id="167">
        <segment state="initial">
          <source>Roaming also enables your users to continue a task, such as composing a list, right where they left off even on a different device.</source>
          <target>Roaming also enables your users to continue a task, such as composing a list, right where they left off even on a different device.</target>
        </segment>
      </unit>
      <unit id="168">
        <segment state="initial">
          <source>The OS replicates roaming data to the cloud when it is updated, and synchronizes the data to the other devices on which the app is installed.</source>
          <target>The OS replicates roaming data to the cloud when it is updated, and synchronizes the data to the other devices on which the app is installed.</target>
        </segment>
      </unit>
      <unit id="169">
        <segment state="initial">
          <source>The OS limits the size of the app data that each app may roam.</source>
          <target>The OS limits the size of the app data that each app may roam.</target>
        </segment>
      </unit>
      <unit id="170">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br241625)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>See <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationData.RoamingStorageQuota</pc></pc>.</source>
          <target>See <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationData.RoamingStorageQuota</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="171">
        <segment state="initial">
          <source>If the app hits this limit, none of the app's app data will be replicated to the cloud until the app's total roamed app data is less than the limit again.</source>
          <target>If the app hits this limit, none of the app's app data will be replicated to the cloud until the app's total roamed app data is less than the limit again.</target>
        </segment>
      </unit>
      <unit id="172">
        <segment state="initial">
          <source>For this reason, it is a best practice to use roaming data only for user preferences, links, and small data files.</source>
          <target>For this reason, it is a best practice to use roaming data only for user preferences, links, and small data files.</target>
        </segment>
      </unit>
      <unit id="173">
        <segment state="initial">
          <source>Roaming data for an app is available in the cloud as long as it is accessed by the user from some device within the required time interval.</source>
          <target>Roaming data for an app is available in the cloud as long as it is accessed by the user from some device within the required time interval.</target>
        </segment>
      </unit>
      <unit id="174">
        <segment state="initial">
          <source>If the user does not run an app for longer than this time interval, its roaming data is removed from the cloud.</source>
          <target>If the user does not run an app for longer than this time interval, its roaming data is removed from the cloud.</target>
        </segment>
      </unit>
      <unit id="175">
        <segment state="initial">
          <source>If a user uninstalls an app, its roaming data isn't automatically removed from the cloud, it's preserved.</source>
          <target>If a user uninstalls an app, its roaming data isn't automatically removed from the cloud, it's preserved.</target>
        </segment>
      </unit>
      <unit id="176">
        <segment state="initial">
          <source>If the user reinstalls the app within the time interval, the roaming data is synchronized from the cloud.</source>
          <target>If the user reinstalls the app within the time interval, the roaming data is synchronized from the cloud.</target>
        </segment>
      </unit>
      <unit id="177">
        <segment state="initial">
          <source>Roaming data do's and don'ts</source>
          <target>Roaming data do's and don'ts</target>
        </segment>
      </unit>
      <unit id="178">
        <segment state="initial">
          <source>Use roaming for user preferences and customizations, links, and small data files.</source>
          <target>Use roaming for user preferences and customizations, links, and small data files.</target>
        </segment>
      </unit>
      <unit id="179">
        <segment state="initial">
          <source>For example, use roaming to preserve a user's background color preference across all devices.</source>
          <target>For example, use roaming to preserve a user's background color preference across all devices.</target>
        </segment>
      </unit>
      <unit id="180">
        <segment state="initial">
          <source>Use roaming to let users continue a task across devices.</source>
          <target>Use roaming to let users continue a task across devices.</target>
        </segment>
      </unit>
      <unit id="181">
        <segment state="initial">
          <source>For example, roam app data like the contents of an drafted email or the most recently viewed page in a reader app.</source>
          <target>For example, roam app data like the contents of an drafted email or the most recently viewed page in a reader app.</target>
        </segment>
      </unit>
      <unit id="182">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br241620)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>Handle the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DataChanged</pc></pc> event by updating app data.</source>
          <target>Handle the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DataChanged</pc></pc> event by updating app data.</target>
        </segment>
      </unit>
      <unit id="183">
        <segment state="initial">
          <source>This event occurs when app data has just finished syncing from the cloud.</source>
          <target>This event occurs when app data has just finished syncing from the cloud.</target>
        </segment>
      </unit>
      <unit id="184">
        <segment state="initial">
          <source>Roam references to content rather than raw data.</source>
          <target>Roam references to content rather than raw data.</target>
        </segment>
      </unit>
      <unit id="185">
        <segment state="initial">
          <source>For example, roam a URL rather than the content of an online article.</source>
          <target>For example, roam a URL rather than the content of an online article.</target>
        </segment>
      </unit>
      <unit id="186">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/br241624)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>For important, time critical settings, use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">HighPriority</pc> setting associated with <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">RoamingSettings</pc></pc>.</source>
          <target>For important, time critical settings, use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">HighPriority</pc> setting associated with <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">RoamingSettings</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="187">
        <segment state="initial">
          <source>Don't roam app data that is specific to a device.</source>
          <target>Don't roam app data that is specific to a device.</target>
        </segment>
      </unit>
      <unit id="188">
        <segment state="initial">
          <source>Some info is only pertinent locally, such as a path name to a local file resource.</source>
          <target>Some info is only pertinent locally, such as a path name to a local file resource.</target>
        </segment>
      </unit>
      <unit id="189">
        <segment state="initial">
          <source>If you do decide to roam local information, make sure that the app can recover if the info isn't valid on the secondary device.</source>
          <target>If you do decide to roam local information, make sure that the app can recover if the info isn't valid on the secondary device.</target>
        </segment>
      </unit>
      <unit id="190">
        <segment state="initial">
          <source>Don't roam large sets of app data.</source>
          <target>Don't roam large sets of app data.</target>
        </segment>
      </unit>
      <unit id="191">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br241625)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>There's a limit to the amount of app data an app may roam; use <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">RoamingStorageQuota</pc></pc> property to get this maximum.</source>
          <target>There's a limit to the amount of app data an app may roam; use <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">RoamingStorageQuota</pc></pc> property to get this maximum.</target>
        </segment>
      </unit>
      <unit id="192">
        <segment state="initial">
          <source>If an app hits this limit, no data can roam until the size of the app data store no longer exceeds the limit.</source>
          <target>If an app hits this limit, no data can roam until the size of the app data store no longer exceeds the limit.</target>
        </segment>
      </unit>
      <unit id="193">
        <segment state="initial">
          <source>When you design your app, consider how to put a bound on larger data so as to not exceed the limit.</source>
          <target>When you design your app, consider how to put a bound on larger data so as to not exceed the limit.</target>
        </segment>
      </unit>
      <unit id="194">
        <segment state="initial">
          <source>For example, if saving a game state requires 10KB each, the app might only allow the user store up to 10 games.</source>
          <target>For example, if saving a game state requires 10KB each, the app might only allow the user store up to 10 games.</target>
        </segment>
      </unit>
      <unit id="195">
        <segment state="initial">
          <source>Don't use roaming for data that relies on instant syncing.</source>
          <target>Don't use roaming for data that relies on instant syncing.</target>
        </segment>
      </unit>
      <unit id="196">
        <segment state="initial">
          <source>Windows doesn't guarantee an instant sync; roaming could be significantly delayed if a user is offline or on a high latency network.</source>
          <target>Windows doesn't guarantee an instant sync; roaming could be significantly delayed if a user is offline or on a high latency network.</target>
        </segment>
      </unit>
      <unit id="197">
        <segment state="initial">
          <source>Ensure that your UI doesn't depend on instant syncing.</source>
          <target>Ensure that your UI doesn't depend on instant syncing.</target>
        </segment>
      </unit>
      <unit id="198">
        <segment state="initial">
          <source>Don't use roam frequently changing data.</source>
          <target>Don't use roam frequently changing data.</target>
        </segment>
      </unit>
      <unit id="199">
        <segment state="initial">
          <source>For example, if your app tracks frequently changing info, such as the position in a song by second, don't store this as roaming app data.</source>
          <target>For example, if your app tracks frequently changing info, such as the position in a song by second, don't store this as roaming app data.</target>
        </segment>
      </unit>
      <unit id="200">
        <segment state="initial">
          <source>Instead, pick a less frequent representation that still provides a good user experience, like the currently playing song.</source>
          <target>Instead, pick a less frequent representation that still provides a good user experience, like the currently playing song.</target>
        </segment>
      </unit>
      <unit id="201">
        <segment state="initial">
          <source>Roaming pre-requisites</source>
          <target>Roaming pre-requisites</target>
        </segment>
      </unit>
      <unit id="202">
        <segment state="initial">
          <source>Any user can benefit from roaming app data if they use a Microsoft account to log on to their device.</source>
          <target>Any user can benefit from roaming app data if they use a Microsoft account to log on to their device.</target>
        </segment>
      </unit>
      <unit id="203">
        <segment state="initial">
          <source>However, users and group policy administrators can switch off roaming app data on a device at any time.</source>
          <target>However, users and group policy administrators can switch off roaming app data on a device at any time.</target>
        </segment>
      </unit>
      <unit id="204">
        <segment state="initial">
          <source>If a user chooses not to use a Microsoft account or disables roaming data capabilities, she will still be able to use your app, but app data be local to each device.</source>
          <target>If a user chooses not to use a Microsoft account or disables roaming data capabilities, she will still be able to use your app, but app data be local to each device.</target>
        </segment>
      </unit>
      <unit id="205">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227081)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>Data stored in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PasswordVault</pc></pc> will only transition if a user has made a device “trusted”.</source>
          <target>Data stored in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PasswordVault</pc></pc> will only transition if a user has made a device “trusted”.</target>
        </segment>
      </unit>
      <unit id="206">
        <segment state="initial">
          <source>If a device isn't trusted, data secured in this vault will not roam.</source>
          <target>If a device isn't trusted, data secured in this vault will not roam.</target>
        </segment>
      </unit>
      <unit id="207">
        <segment state="initial">
          <source>Conflict resolution</source>
          <target>Conflict resolution</target>
        </segment>
      </unit>
      <unit id="208">
        <segment state="initial">
          <source>Roaming app data is not intended for simultaneous use on more than one device at a time.</source>
          <target>Roaming app data is not intended for simultaneous use on more than one device at a time.</target>
        </segment>
      </unit>
      <unit id="209">
        <segment state="initial">
          <source>If a conflict arises during synchronization because a particular data unit was changed on two devices, the system will always favor the value that was written last.</source>
          <target>If a conflict arises during synchronization because a particular data unit was changed on two devices, the system will always favor the value that was written last.</target>
        </segment>
      </unit>
      <unit id="210">
        <segment state="initial">
          <source>This ensures that the app utilizes the most up-to-date information.</source>
          <target>This ensures that the app utilizes the most up-to-date information.</target>
        </segment>
      </unit>
      <unit id="211">
        <segment state="initial">
          <source>If the data unit is a setting composite, conflict resolution will still occur on the level of the setting unit, which means that the composite with the latest change will be synchronized.</source>
          <target>If the data unit is a setting composite, conflict resolution will still occur on the level of the setting unit, which means that the composite with the latest change will be synchronized.</target>
        </segment>
      </unit>
      <unit id="212">
        <segment state="initial">
          <source>When to write data</source>
          <target>When to write data</target>
        </segment>
      </unit>
      <unit id="213">
        <segment state="initial">
          <source>Depending on the expected lifetime of the setting, data should be written at different times.</source>
          <target>Depending on the expected lifetime of the setting, data should be written at different times.</target>
        </segment>
      </unit>
      <unit id="214">
        <segment state="initial">
          <source>Infrequently or slowly changing app data should be written immediately.</source>
          <target>Infrequently or slowly changing app data should be written immediately.</target>
        </segment>
      </unit>
      <unit id="215">
        <segment state="initial">
          <source>However, app data that changes frequently should only be written periodically at regular intervals (such as once every 5 minutes), as well as when the app is suspended.</source>
          <target>However, app data that changes frequently should only be written periodically at regular intervals (such as once every 5 minutes), as well as when the app is suspended.</target>
        </segment>
      </unit>
      <unit id="216">
        <segment state="initial">
          <source>For example, a music app might write the “current song” settings whenever a new song starts to play, however, the actual position in the song should only be written on suspend.</source>
          <target>For example, a music app might write the “current song” settings whenever a new song starts to play, however, the actual position in the song should only be written on suspend.</target>
        </segment>
      </unit>
      <unit id="217">
        <segment state="initial">
          <source>Excessive usage protection</source>
          <target>Excessive usage protection</target>
        </segment>
      </unit>
      <unit id="218">
        <segment state="initial">
          <source>The system has various protection mechanisms in place to avoid inappropriate use of resources.</source>
          <target>The system has various protection mechanisms in place to avoid inappropriate use of resources.</target>
        </segment>
      </unit>
      <unit id="219">
        <segment state="initial">
          <source>If app data does not transition as expected, it is likely that the device has been temporarily restricted.</source>
          <target>If app data does not transition as expected, it is likely that the device has been temporarily restricted.</target>
        </segment>
      </unit>
      <unit id="220">
        <segment state="initial">
          <source>Waiting for some time will usually resolve this situation automatically and no action is required.</source>
          <target>Waiting for some time will usually resolve this situation automatically and no action is required.</target>
        </segment>
      </unit>
      <unit id="221">
        <segment state="initial">
          <source>Versioning</source>
          <target>Versioning</target>
        </segment>
      </unit>
      <unit id="222">
        <segment state="initial">
          <source>App data can utilize versioning to upgrade from one data structure to another.</source>
          <target>App data can utilize versioning to upgrade from one data structure to another.</target>
        </segment>
      </unit>
      <unit id="223">
        <segment state="initial">
          <source>The version number is different from the app version and can be set at will.</source>
          <target>The version number is different from the app version and can be set at will.</target>
        </segment>
      </unit>
      <unit id="224">
        <segment state="initial">
          <source>Although not enforced, it is highly recommended that you use increasing version numbers, since undesirable complications (including data loss)could occur if you try to transition to a lower data version number that represents newer data.</source>
          <target>Although not enforced, it is highly recommended that you use increasing version numbers, since undesirable complications (including data loss)could occur if you try to transition to a lower data version number that represents newer data.</target>
        </segment>
      </unit>
      <unit id="225">
        <segment state="initial">
          <source>App data only roams between installed apps with the same version number.</source>
          <target>App data only roams between installed apps with the same version number.</target>
        </segment>
      </unit>
      <unit id="226">
        <segment state="initial">
          <source>For example, devices on version 2 will transition data between each other and devices on version 3 will do the same, but no roaming will occur between a device running version 2 and a device running version 3.</source>
          <target>For example, devices on version 2 will transition data between each other and devices on version 3 will do the same, but no roaming will occur between a device running version 2 and a device running version 3.</target>
        </segment>
      </unit>
      <unit id="227">
        <segment state="initial">
          <source>If you install a new app that utilized various version numbers on other devices, the newly installed app will sync the app data associated with the highest version number.</source>
          <target>If you install a new app that utilized various version numbers on other devices, the newly installed app will sync the app data associated with the highest version number.</target>
        </segment>
      </unit>
      <unit id="228">
        <segment state="initial">
          <source>Testing and tools</source>
          <target>Testing and tools</target>
        </segment>
      </unit>
      <unit id="229">
        <segment state="initial">
          <source>Developers can lock their device in order to trigger a synchronization of roaming app data.</source>
          <target>Developers can lock their device in order to trigger a synchronization of roaming app data.</target>
        </segment>
      </unit>
      <unit id="230">
        <segment state="initial">
          <source>If it seems that the app data does not transition within a certain time frame, please check the following items and make sure that:</source>
          <target>If it seems that the app data does not transition within a certain time frame, please check the following items and make sure that:</target>
        </segment>
      </unit>
      <unit id="231">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br241625)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>Your roaming data does not exceed the maximum size (see <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">RoamingStorageQuota</pc></pc> for details).</source>
          <target>Your roaming data does not exceed the maximum size (see <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">RoamingStorageQuota</pc></pc> for details).</target>
        </segment>
      </unit>
      <unit id="232">
        <segment state="initial">
          <source>Your files are closed and released properly.</source>
          <target>Your files are closed and released properly.</target>
        </segment>
      </unit>
      <unit id="233">
        <segment state="initial">
          <source>There are at least two devices running the same version of the app.</source>
          <target>There are at least two devices running the same version of the app.</target>
        </segment>
      </unit>
      <unit id="234">
        <segment state="initial">
          <source>Register to receive notification when roaming data changes</source>
          <target>Register to receive notification when roaming data changes</target>
        </segment>
      </unit>
      <unit id="235">
        <segment state="initial">
          <source>To use roaming app data, you need to register for roaming data changes and retrieve the roaming data containers so you can read and write settings.</source>
          <target>To use roaming app data, you need to register for roaming data changes and retrieve the roaming data containers so you can read and write settings.</target>
        </segment>
      </unit>
      <unit id="236">
        <segment state="initial">
          <source>Register to receive notification when roaming data changes.</source>
          <target>Register to receive notification when roaming data changes.</target>
        </segment>
      </unit>
      <unit id="237">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br241620)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DataChanged</pc></pc> event notifies you when roaming data changes.</source>
          <target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DataChanged</pc></pc> event notifies you when roaming data changes.</target>
        </segment>
      </unit>
      <unit id="238">
        <originalData>
          <data id="id1">`DataChangeHandler`</data>
        </originalData>
        <segment state="initial">
          <source>This example sets <ph dataRef="id1" id="ph1" /> as the handler for roaming data changes.</source>
          <target>This example sets <ph dataRef="id1" id="ph1" /> as the handler for roaming data changes.</target>
        </segment>
      </unit>
      <unit id="239">
        <segment state="initial">
          <source>Get the containers for the app's settings and files.</source>
          <target>Get the containers for the app's settings and files.</target>
        </segment>
      </unit>
      <unit id="240">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br241624)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/br241623)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationData.RoamingSettings</pc></pc> property to get the settings and the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">ApplicationData.RoamingFolder</pc></pc> property to get the files.</source>
          <target>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationData.RoamingSettings</pc></pc> property to get the settings and the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">ApplicationData.RoamingFolder</pc></pc> property to get the files.</target>
        </segment>
      </unit>
      <unit id="241">
        <segment state="initial">
          <source>Create and retrieve roaming settings</source>
          <target>Create and retrieve roaming settings</target>
        </segment>
      </unit>
      <unit id="242">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br241615)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">`roamingSettings`</data>
        </originalData>
        <segment state="initial">
          <source>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationDataContainer.Values</pc></pc> property to access the settings in the <ph dataRef="id5" id="ph1" /> container we got in the previous section.</source>
          <target>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationDataContainer.Values</pc></pc> property to access the settings in the <ph dataRef="id5" id="ph1" /> container we got in the previous section.</target>
        </segment>
      </unit>
      <unit id="243">
        <originalData>
          <data id="id1">`exampleSetting`</data>
          <data id="id2">`composite`</data>
        </originalData>
        <segment state="initial">
          <source>This example creates a simple setting named <ph dataRef="id1" id="ph1" /> and a composite value named <ph dataRef="id2" id="ph2" />.</source>
          <target>This example creates a simple setting named <ph dataRef="id1" id="ph1" /> and a composite value named <ph dataRef="id2" id="ph2" />.</target>
        </segment>
      </unit>
      <unit id="244">
        <segment state="initial">
          <source>This example retrieves the settings we just created.</source>
          <target>This example retrieves the settings we just created.</target>
        </segment>
      </unit>
      <unit id="245">
        <segment state="initial">
          <source>Create and retrieve roaming files</source>
          <target>Create and retrieve roaming files</target>
        </segment>
      </unit>
      <unit id="246">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227249)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/hh701505)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source>To create and update a file in the roaming app data store, use the file APIs, such as <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Storage.StorageFolder.CreateFileAsync</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Windows.Storage.FileIO.WriteTextAsync</pc></pc>.</source>
          <target>To create and update a file in the roaming app data store, use the file APIs, such as <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Storage.StorageFolder.CreateFileAsync</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Windows.Storage.FileIO.WriteTextAsync</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="247">
        <originalData>
          <data id="id1">`dataFile.txt`</data>
          <data id="id2">`roamingFolder`</data>
        </originalData>
        <segment state="initial">
          <source>This example creates a file named <ph dataRef="id1" id="ph1" /> in the <ph dataRef="id2" id="ph2" /> container and writes the current date and time to the file.</source>
          <target>This example creates a file named <ph dataRef="id1" id="ph1" /> in the <ph dataRef="id2" id="ph2" /> container and writes the current date and time to the file.</target>
        </segment>
      </unit>
      <unit id="248">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/br241631)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ReplaceExisting</pc> value from the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">CreationCollisionOption</pc></pc> enumeration indicates to replace the file if it already exists.</source>
          <target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ReplaceExisting</pc> value from the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">CreationCollisionOption</pc></pc> enumeration indicates to replace the file if it already exists.</target>
        </segment>
      </unit>
      <unit id="249">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227272)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/hh701741)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
          <data id="id9">[</data>
          <data id="id10">](https://msdn.microsoft.com/library/windows/apps/hh701482)</data>
          <data id="id11">**</data>
          <data id="id12">**</data>
        </originalData>
        <segment state="initial">
          <source>To open and read a file in the roaming app data store, use the file APIs, such as <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Storage.StorageFolder.GetFileAsync</pc></pc>, <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Windows.Storage.StorageFile.GetFileFromApplicationUriAsync</pc></pc>, and <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">Windows.Storage.FileIO.ReadTextAsync</pc></pc>.</source>
          <target>To open and read a file in the roaming app data store, use the file APIs, such as <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Storage.StorageFolder.GetFileAsync</pc></pc>, <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Windows.Storage.StorageFile.GetFileFromApplicationUriAsync</pc></pc>, and <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">Windows.Storage.FileIO.ReadTextAsync</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="250">
        <originalData>
          <data id="id1">`dataFile.txt`</data>
        </originalData>
        <segment state="initial">
          <source>This example opens the <ph dataRef="id1" id="ph1" /> file created in the previous section and reads the date from the file.</source>
          <target>This example opens the <ph dataRef="id1" id="ph1" /> file created in the previous section and reads the date from the file.</target>
        </segment>
      </unit>
      <unit id="251">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/xaml/hh965322)</data>
        </originalData>
        <segment state="initial">
          <source>For details on loading file resources from various locations, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">How to load file resources</pc>.</source>
          <target>For details on loading file resources from various locations, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">How to load file resources</pc>.</target>
        </segment>
      </unit>
      <unit id="252">
        <segment state="initial">
          <source>Temporary app data</source>
          <target>Temporary app data</target>
        </segment>
      </unit>
      <unit id="253">
        <segment state="initial">
          <source>The temporary app data store works like a cache.</source>
          <target>The temporary app data store works like a cache.</target>
        </segment>
      </unit>
      <unit id="254">
        <segment state="initial">
          <source>Its files do not roam and could be removed at any time.</source>
          <target>Its files do not roam and could be removed at any time.</target>
        </segment>
      </unit>
      <unit id="255">
        <segment state="initial">
          <source>The System Maintenance task can automatically delete data stored at this location at any time.</source>
          <target>The System Maintenance task can automatically delete data stored at this location at any time.</target>
        </segment>
      </unit>
      <unit id="256">
        <segment state="initial">
          <source>The user can also clear files from the temporary data store using Disk Cleanup.</source>
          <target>The user can also clear files from the temporary data store using Disk Cleanup.</target>
        </segment>
      </unit>
      <unit id="257">
        <segment state="initial">
          <source>Temporary app data can be used for storing temporary information during an app session.</source>
          <target>Temporary app data can be used for storing temporary information during an app session.</target>
        </segment>
      </unit>
      <unit id="258">
        <segment state="initial">
          <source>There is no guarantee that this data will persist beyond the end of the app session as the system might reclaim the used space if needed.</source>
          <target>There is no guarantee that this data will persist beyond the end of the app session as the system might reclaim the used space if needed.</target>
        </segment>
      </unit>
      <unit id="259">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br241629)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>The location is available via the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">temporaryFolder</pc></pc> property.</source>
          <target>The location is available via the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">temporaryFolder</pc></pc> property.</target>
        </segment>
      </unit>
      <unit id="260">
        <segment state="initial">
          <source>Retrieve the temporary data container</source>
          <target>Retrieve the temporary data container</target>
        </segment>
      </unit>
      <unit id="261">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br241629)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationData.TemporaryFolder</pc></pc> property to get the files.</source>
          <target>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationData.TemporaryFolder</pc></pc> property to get the files.</target>
        </segment>
      </unit>
      <unit id="262">
        <originalData>
          <data id="id1">`temporaryFolder`</data>
        </originalData>
        <segment state="initial">
          <source>The next steps use the <ph dataRef="id1" id="ph1" /> variable from this step.</source>
          <target>The next steps use the <ph dataRef="id1" id="ph1" /> variable from this step.</target>
        </segment>
      </unit>
      <unit id="263">
        <segment state="initial">
          <source>Create and read temporary files</source>
          <target>Create and read temporary files</target>
        </segment>
      </unit>
      <unit id="264">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227249)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/hh701505)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source>To create and update a file in the temporary app data store, use the file APIs, such as <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Storage.StorageFolder.CreateFileAsync</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Windows.Storage.FileIO.WriteTextAsync</pc></pc>.</source>
          <target>To create and update a file in the temporary app data store, use the file APIs, such as <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Storage.StorageFolder.CreateFileAsync</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Windows.Storage.FileIO.WriteTextAsync</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="265">
        <originalData>
          <data id="id1">`dataFile.txt`</data>
          <data id="id2">`temporaryFolder`</data>
        </originalData>
        <segment state="initial">
          <source>This example creates a file named <ph dataRef="id1" id="ph1" /> in the <ph dataRef="id2" id="ph2" /> container and writes the current date and time to the file.</source>
          <target>This example creates a file named <ph dataRef="id1" id="ph1" /> in the <ph dataRef="id2" id="ph2" /> container and writes the current date and time to the file.</target>
        </segment>
      </unit>
      <unit id="266">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/br241631)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ReplaceExisting</pc> value from the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">CreationCollisionOption</pc></pc> enumeration indicates to replace the file if it already exists.</source>
          <target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ReplaceExisting</pc> value from the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">CreationCollisionOption</pc></pc> enumeration indicates to replace the file if it already exists.</target>
        </segment>
      </unit>
      <unit id="267">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227272)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/hh701741)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
          <data id="id9">[</data>
          <data id="id10">](https://msdn.microsoft.com/library/windows/apps/hh701482)</data>
          <data id="id11">**</data>
          <data id="id12">**</data>
        </originalData>
        <segment state="initial">
          <source>To open and read a file in the temporary app data store, use the file APIs, such as <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Storage.StorageFolder.GetFileAsync</pc></pc>, <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Windows.Storage.StorageFile.GetFileFromApplicationUriAsync</pc></pc>, and <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">Windows.Storage.FileIO.ReadTextAsync</pc></pc>.</source>
          <target>To open and read a file in the temporary app data store, use the file APIs, such as <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Storage.StorageFolder.GetFileAsync</pc></pc>, <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Windows.Storage.StorageFile.GetFileFromApplicationUriAsync</pc></pc>, and <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">Windows.Storage.FileIO.ReadTextAsync</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="268">
        <originalData>
          <data id="id1">`dataFile.txt`</data>
        </originalData>
        <segment state="initial">
          <source>This example opens the <ph dataRef="id1" id="ph1" /> file created in the previous step and reads the date from the file.</source>
          <target>This example opens the <ph dataRef="id1" id="ph1" /> file created in the previous step and reads the date from the file.</target>
        </segment>
      </unit>
      <unit id="269">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/xaml/hh965322)</data>
        </originalData>
        <segment state="initial">
          <source>For details on loading file resources from various locations, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">How to load file resources</pc>.</source>
          <target>For details on loading file resources from various locations, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">How to load file resources</pc>.</target>
        </segment>
      </unit>
      <unit id="270">
        <segment state="initial">
          <source>Organize app data with containers</source>
          <target>Organize app data with containers</target>
        </segment>
      </unit>
      <unit id="271">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br241599)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>To help you organize your app data settings and files, you create containers (represented by <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationDataContainer</pc></pc> objects) instead of working directly with directories.</source>
          <target>To help you organize your app data settings and files, you create containers (represented by <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationDataContainer</pc></pc> objects) instead of working directly with directories.</target>
        </segment>
      </unit>
      <unit id="272">
        <segment state="initial">
          <source>You can add containers to the local, roaming, and temporary app data stores.</source>
          <target>You can add containers to the local, roaming, and temporary app data stores.</target>
        </segment>
      </unit>
      <unit id="273">
        <segment state="initial">
          <source>Containers can be nested up to 32 levels deep.</source>
          <target>Containers can be nested up to 32 levels deep.</target>
        </segment>
      </unit>
      <unit id="274">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br241611)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>To create a settings container, call the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationDataContainer.CreateContainer</pc></pc> method.</source>
          <target>To create a settings container, call the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationDataContainer.CreateContainer</pc></pc> method.</target>
        </segment>
      </unit>
      <unit id="275">
        <originalData>
          <data id="id1">`exampleContainer`</data>
          <data id="id2">`exampleSetting`</data>
        </originalData>
        <segment state="initial">
          <source>This example creates a local settings container named <ph dataRef="id1" id="ph1" /> and adds a setting named <ph dataRef="id2" id="ph2" />.</source>
          <target>This example creates a local settings container named <ph dataRef="id1" id="ph1" /> and adds a setting named <ph dataRef="id2" id="ph2" />.</target>
        </segment>
      </unit>
      <unit id="276">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/br241616)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Always</pc> value from the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">ApplicationDataCreateDisposition</pc></pc> enumeration indicates that the container is created if it doesn't already exist.</source>
          <target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Always</pc> value from the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">ApplicationDataCreateDisposition</pc></pc> enumeration indicates that the container is created if it doesn't already exist.</target>
        </segment>
      </unit>
      <unit id="277">
        <segment state="initial">
          <source>Delete app settings and containers</source>
          <target>Delete app settings and containers</target>
        </segment>
      </unit>
      <unit id="278">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br241608)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>To delete a simple setting that your app no longer needs, use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationDataContainerSettings.Remove</pc></pc> method.</source>
          <target>To delete a simple setting that your app no longer needs, use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationDataContainerSettings.Remove</pc></pc> method.</target>
        </segment>
      </unit>
      <unit id="279">
        <originalData>
          <data id="id1">`exampleSetting`</data>
        </originalData>
        <segment state="initial">
          <source>This example deletesthe <ph dataRef="id1" id="ph1" /> local setting that we created earlier.</source>
          <target>This example deletesthe <ph dataRef="id1" id="ph1" /> local setting that we created earlier.</target>
        </segment>
      </unit>
      <unit id="280">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br241597)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>To delete a composite setting, use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationDataCompositeValue.Remove</pc></pc> method.</source>
          <target>To delete a composite setting, use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationDataCompositeValue.Remove</pc></pc> method.</target>
        </segment>
      </unit>
      <unit id="281">
        <originalData>
          <data id="id1">`exampleCompositeSetting`</data>
        </originalData>
        <segment state="initial">
          <source>This example deletes the local <ph dataRef="id1" id="ph1" /> composite setting we created in an earlier example.</source>
          <target>This example deletes the local <ph dataRef="id1" id="ph1" /> composite setting we created in an earlier example.</target>
        </segment>
      </unit>
      <unit id="282">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br241612)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>To delete a container, call the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationDataContainer.DeleteContainer</pc></pc> method.</source>
          <target>To delete a container, call the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationDataContainer.DeleteContainer</pc></pc> method.</target>
        </segment>
      </unit>
      <unit id="283">
        <originalData>
          <data id="id1">`exampleContainer`</data>
        </originalData>
        <segment state="initial">
          <source>This example deletes the local <ph dataRef="id1" id="ph1" /> settings container we created earlier.</source>
          <target>This example deletes the local <ph dataRef="id1" id="ph1" /> settings container we created earlier.</target>
        </segment>
      </unit>
      <unit id="284">
        <segment state="initial">
          <source>Versioning your app data</source>
          <target>Versioning your app data</target>
        </segment>
      </unit>
      <unit id="285">
        <segment state="initial">
          <source>You can optionally version the app data for your app.</source>
          <target>You can optionally version the app data for your app.</target>
        </segment>
      </unit>
      <unit id="286">
        <segment state="initial">
          <source>This would enable you to create a future version of your app that changes the format of its app data without causing compatibility problems with the previous version of your app.</source>
          <target>This would enable you to create a future version of your app that changes the format of its app data without causing compatibility problems with the previous version of your app.</target>
        </segment>
      </unit>
      <unit id="287">
        <segment state="initial">
          <source>The app checks the version of the app data in the data store, and if the version is less than the version the app expects, the app should update the app data to the new format and update the version.</source>
          <target>The app checks the version of the app data in the data store, and if the version is less than the version the app expects, the app should update the app data to the new format and update the version.</target>
        </segment>
      </unit>
      <unit id="288">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br241630)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/hh701429)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source>For more info, see the<pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Application.Version</pc></pc> property and the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">ApplicationData.SetVersionAsync</pc></pc> method.</source>
          <target>For more info, see the<pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Application.Version</pc></pc> property and the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">ApplicationData.SetVersionAsync</pc></pc> method.</target>
        </segment>
      </unit>
      <unit id="289">
        <segment state="initial">
          <source>Related articles</source>
          <target>Related articles</target>
        </segment>
      </unit>
      <unit id="290">
        <segment state="initial">
          <source>Windows.Storage.ApplicationData</source>
          <target>Windows.Storage.ApplicationData</target>
        </segment>
      </unit>
      <unit id="291">
        <segment state="initial">
          <source>Windows.Storage.ApplicationData.RoamingSettings</source>
          <target>Windows.Storage.ApplicationData.RoamingSettings</target>
        </segment>
      </unit>
      <unit id="292">
        <segment state="initial">
          <source>Windows.Storage.ApplicationData.RoamingFolder</source>
          <target>Windows.Storage.ApplicationData.RoamingFolder</target>
        </segment>
      </unit>
      <unit id="293">
        <segment state="initial">
          <source>Windows.Storage.ApplicationData.RoamingStorageQuota</source>
          <target>Windows.Storage.ApplicationData.RoamingStorageQuota</target>
        </segment>
      </unit>
      <unit id="294">
        <segment state="initial">
          <source>Windows.Storage.ApplicationDataCompositeValue</source>
          <target>Windows.Storage.ApplicationDataCompositeValue</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>