<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="zh-cn" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">windows-apps-src\gaming\multisampling--scaling--and-overlay-swap-chains.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">3380c5156072a9853261ec6b706a612b42e7ba10</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-781aacf</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>Swap chain scaling and overlays</source>
          <target>Swap chain scaling and overlays</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>Learn how to create scaled swap chains for faster rendering on mobile devices, and use overlay swap chains (when available) to increase the visual quality.</source>
          <target>Learn how to create scaled swap chains for faster rendering on mobile devices, and use overlay swap chains (when available) to increase the visual quality.</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>Swap chain scaling and overlays</source>
          <target>Swap chain scaling and overlays</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source>Updated for UWP apps on Windows 10.</source>
          <target>Updated for UWP apps on Windows 10.</target>
        </segment>
      </unit>
      <unit id="105">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
        </originalData>
        <segment state="initial">
          <source>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc></source>
          <target>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc></target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source>Learn how to create scaled swap chains for faster rendering on mobile devices, and use overlay swap chains (when available) to increase the visual quality.</source>
          <target>Learn how to create scaled swap chains for faster rendering on mobile devices, and use overlay swap chains (when available) to increase the visual quality.</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source>Swap chains in DirectX 11.2</source>
          <target>Swap chains in DirectX 11.2</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source>Direct3D 11.2 allows you to create Universal Windows Platform (UWP) apps with swap chains that are scaled up from non-native (reduced) resolutions, enabling faster fill rates.</source>
          <target>Direct3D 11.2 allows you to create Universal Windows Platform (UWP) apps with swap chains that are scaled up from non-native (reduced) resolutions, enabling faster fill rates.</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source>Direct3D 11.2 also includes APIs for rendering with hardware overlays so that you can present a UI in another swap chain at native resolution.</source>
          <target>Direct3D 11.2 also includes APIs for rendering with hardware overlays so that you can present a UI in another swap chain at native resolution.</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source>This allows your game to draw UI at full native resolution while maintaining a high framerate, thereby making the best use of mobile devices and high DPI displays (such as 3840 by 2160).</source>
          <target>This allows your game to draw UI at full native resolution while maintaining a high framerate, thereby making the best use of mobile devices and high DPI displays (such as 3840 by 2160).</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source>This article explains how to use overlapping swap chains.</source>
          <target>This article explains how to use overlapping swap chains.</target>
        </segment>
      </unit>
      <unit id="112">
        <segment state="initial">
          <source>Direct3D 11.2 also introduces a new feature for reduced latency with flip model swap chains.</source>
          <target>Direct3D 11.2 also introduces a new feature for reduced latency with flip model swap chains.</target>
        </segment>
      </unit>
      <unit id="113">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](reduce-latency-with-dxgi-1-3-swap-chains.md)</data>
        </originalData>
        <segment state="initial">
          <source>See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Reduce latency with DXGI 1.3 swap chains</pc>.</source>
          <target>See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Reduce latency with DXGI 1.3 swap chains</pc>.</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source>Use swap chain scaling</source>
          <target>Use swap chain scaling</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source>When your game is running on downlevel hardware - or hardware optimized for power savings - it can be beneficial to render real-time game content at a lower resolution than the display is natively capable of.</source>
          <target>When your game is running on downlevel hardware - or hardware optimized for power savings - it can be beneficial to render real-time game content at a lower resolution than the display is natively capable of.</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source>To do this, the swap chain that is used for rendering game content must be smaller than the native resolution, or a subregion of the swapchain must be used.</source>
          <target>To do this, the swap chain that is used for rendering game content must be smaller than the native resolution, or a subregion of the swapchain must be used.</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source>First, create a swap chain at full native resolution.</source>
          <target>First, create a swap chain at full native resolution.</target>
        </segment>
      </unit>
      <unit id="118">
        <segment state="initial">
          <source>Then, choose a subregion of the swap chain to scale up by setting the source size to a reduced resolution.</source>
          <target>Then, choose a subregion of the swap chain to scale up by setting the source size to a reduced resolution.</target>
        </segment>
      </unit>
      <unit id="119">
        <segment state="initial">
          <source>The DX Foreground Swap Chains sample calculates a reduced size based on a percentage:</source>
          <target>The DX Foreground Swap Chains sample calculates a reduced size based on a percentage:</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source>Create a viewport to match the subregion of the swap chain.</source>
          <target>Create a viewport to match the subregion of the swap chain.</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source>If Direct2D is being used, the rotation transform needs to be adjusted to compensate for the source region.</source>
          <target>If Direct2D is being used, the rotation transform needs to be adjusted to compensate for the source region.</target>
        </segment>
      </unit>
      <unit id="122">
        <segment state="initial">
          <source>Create a hardware overlay swap chain for UI elements</source>
          <target>Create a hardware overlay swap chain for UI elements</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source>When using swap chain scaling, there is an inherent disadvantage in that the UI is also scaled down, potentially making it blurry and harder to use.</source>
          <target>When using swap chain scaling, there is an inherent disadvantage in that the UI is also scaled down, potentially making it blurry and harder to use.</target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source>On devices with hardware support for overlay swap chains, this problem is alleviated entirely by rendering the UI at native resolution in a swap chain that's separate from the real-time game content.</source>
          <target>On devices with hardware support for overlay swap chains, this problem is alleviated entirely by rendering the UI at native resolution in a swap chain that's separate from the real-time game content.</target>
        </segment>
      </unit>
      <unit id="125">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br208225)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>Note that this technique applies only to <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CoreWindow</pc></pc> swap chains - it cannot be used with XAML interop.</source>
          <target>Note that this technique applies only to <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CoreWindow</pc></pc> swap chains - it cannot be used with XAML interop.</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source>Use the following steps to create a foreground swap chain that uses hardware overlay capability.</source>
          <target>Use the following steps to create a foreground swap chain that uses hardware overlay capability.</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source>These steps are performed after first creating a swap chain for real-time game content as described above.</source>
          <target>These steps are performed after first creating a swap chain for real-time game content as described above.</target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source>First, determine whether the DXGI adapter supports overlays.</source>
          <target>First, determine whether the DXGI adapter supports overlays.</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source>Get the DXGI output adapter from the swap chain:</source>
          <target>Get the DXGI output adapter from the swap chain:</target>
        </segment>
      </unit>
      <unit id="130">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/desktop/dn280411)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>The DXGI adapter supports overlays if the output adapter returns True for <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SupportsOverlays</pc></pc>.</source>
          <target>The DXGI adapter supports overlays if the output adapter returns True for <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SupportsOverlays</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="131">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>   If the DXGI adapter supports overlays, continue to the next step.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>   If the DXGI adapter supports overlays, continue to the next step.</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source>If the device does not support overlays, rendering with multiple swap chains will not be efficient.</source>
          <target>If the device does not support overlays, rendering with multiple swap chains will not be efficient.</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source>Instead, render the UI at reduced resolution in the same swap chain as real-time game content.</source>
          <target>Instead, render the UI at reduced resolution in the same swap chain as real-time game content.</target>
        </segment>
      </unit>
      <unit id="134">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/desktop/hh404559)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>Create the foreground swap chain with <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IDXGIFactory2::CreateSwapChainForCoreWindow</pc></pc>.</source>
          <target>Create the foreground swap chain with <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IDXGIFactory2::CreateSwapChainForCoreWindow</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="135">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/desktop/hh404528)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">\_</data>
          <data id="id6">\_</data>
          <data id="id7">\_</data>
          <data id="id8">*</data>
          <data id="id9">*</data>
        </originalData>
        <segment state="initial">
          <source>The following options must be set in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DXGI<ph dataRef="id5" id="ph1" />SWAP<ph dataRef="id6" id="ph2" />CHAIN<ph dataRef="id7" id="ph3" />DESC1</pc></pc> supplied to the <pc dataRefEnd="id9" dataRefStart="id8" id="p3">pDesc</pc> parameter:</source>
          <target>The following options must be set in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DXGI<ph dataRef="id5" id="ph1" />SWAP<ph dataRef="id6" id="ph2" />CHAIN<ph dataRef="id7" id="ph3" />DESC1</pc></pc> supplied to the <pc dataRefEnd="id9" dataRefStart="id8" id="p3">pDesc</pc> parameter:</target>
        </segment>
      </unit>
      <unit id="136">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/desktop/bb173076)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">\_</data>
          <data id="id6">\_</data>
          <data id="id7">\_</data>
          <data id="id8">\_</data>
          <data id="id9">\_</data>
        </originalData>
        <segment state="initial">
          <source>Specify the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DXGI<ph dataRef="id5" id="ph1" />SWAP<ph dataRef="id6" id="ph2" />CHAIN<ph dataRef="id7" id="ph3" />FLAG<ph dataRef="id8" id="ph4" />FOREGROUND<ph dataRef="id9" id="ph5" />LAYER</pc></pc> swap chain flag to indicate a foreground swap chain.</source>
          <target>Specify the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DXGI<ph dataRef="id5" id="ph1" />SWAP<ph dataRef="id6" id="ph2" />CHAIN<ph dataRef="id7" id="ph3" />FLAG<ph dataRef="id8" id="ph4" />FOREGROUND<ph dataRef="id9" id="ph5" />LAYER</pc></pc> swap chain flag to indicate a foreground swap chain.</target>
        </segment>
      </unit>
      <unit id="137">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/desktop/hh404496)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">\_</data>
          <data id="id6">\_</data>
          <data id="id7">\_</data>
        </originalData>
        <segment state="initial">
          <source>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DXGI<ph dataRef="id5" id="ph1" />ALPHA<ph dataRef="id6" id="ph2" />MODE<ph dataRef="id7" id="ph3" />PREMULTIPLIED</pc></pc> alpha mode flag.</source>
          <target>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DXGI<ph dataRef="id5" id="ph1" />ALPHA<ph dataRef="id6" id="ph2" />MODE<ph dataRef="id7" id="ph3" />PREMULTIPLIED</pc></pc> alpha mode flag.</target>
        </segment>
      </unit>
      <unit id="138">
        <segment state="initial">
          <source>Foreground swap chains are always premultiplied.</source>
          <target>Foreground swap chains are always premultiplied.</target>
        </segment>
      </unit>
      <unit id="139">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/desktop/hh404526)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">\_</data>
          <data id="id6">\_</data>
        </originalData>
        <segment state="initial">
          <source>Set the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DXGI<ph dataRef="id5" id="ph1" />SCALING<ph dataRef="id6" id="ph2" />NONE</pc></pc> flag.</source>
          <target>Set the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DXGI<ph dataRef="id5" id="ph1" />SCALING<ph dataRef="id6" id="ph2" />NONE</pc></pc> flag.</target>
        </segment>
      </unit>
      <unit id="140">
        <segment state="initial">
          <source>Foreground swap chains always run at native resolution.</source>
          <target>Foreground swap chains always run at native resolution.</target>
        </segment>
      </unit>
      <unit id="141">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/desktop/bb173076)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">\_</data>
          <data id="id8">\_</data>
          <data id="id9">\_</data>
          <data id="id10">\_</data>
          <data id="id11">\_</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>   Set the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">DXGI<ph dataRef="id7" id="ph1" />SWAP<ph dataRef="id8" id="ph2" />CHAIN<ph dataRef="id9" id="ph3" />FLAG<ph dataRef="id10" id="ph4" />FOREGROUND<ph dataRef="id11" id="ph5" />LAYER</pc></pc> again every time the swap chain is resized.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>   Set the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">DXGI<ph dataRef="id7" id="ph1" />SWAP<ph dataRef="id8" id="ph2" />CHAIN<ph dataRef="id9" id="ph3" />FLAG<ph dataRef="id10" id="ph4" />FOREGROUND<ph dataRef="id11" id="ph5" />LAYER</pc></pc> again every time the swap chain is resized.</target>
        </segment>
      </unit>
      <unit id="142">
        <segment state="initial">
          <source>When two swap chains are being used, increase the maximum frame latency to 2 so that the DXGI adapter has time to present both swap chains simultaneously (within the same VSync interval).</source>
          <target>When two swap chains are being used, increase the maximum frame latency to 2 so that the DXGI adapter has time to present both swap chains simultaneously (within the same VSync interval).</target>
        </segment>
      </unit>
      <unit id="143">
        <segment state="initial">
          <source>Foreground swap chains always use premultiplied alpha.</source>
          <target>Foreground swap chains always use premultiplied alpha.</target>
        </segment>
      </unit>
      <unit id="144">
        <segment state="initial">
          <source>Each pixel's color values are expected to be already multiplied by the alpha value before the frame is presented.</source>
          <target>Each pixel's color values are expected to be already multiplied by the alpha value before the frame is presented.</target>
        </segment>
      </unit>
      <unit id="145">
        <segment state="initial">
          <source>For example, a 100% white BGRA pixel at 50% alpha is set to (0.5, 0.5, 0.5, 0.5).</source>
          <target>For example, a 100% white BGRA pixel at 50% alpha is set to (0.5, 0.5, 0.5, 0.5).</target>
        </segment>
      </unit>
      <unit id="146">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/desktop/ff476349)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/desktop/ff476200)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
          <data id="id9">\_</data>
          <data id="id10">\_</data>
          <data id="id11">\_</data>
          <data id="id12">\_</data>
          <data id="id13">**</data>
          <data id="id14">**</data>
          <data id="id15">**</data>
          <data id="id16">**</data>
          <data id="id17">\_</data>
          <data id="id18">\_</data>
        </originalData>
        <segment state="initial">
          <source>The alpha premultiplication step can be done in the output-merger stage by applying an app blend state (see <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ID3D11BlendState</pc></pc>) with the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">D3D11<ph dataRef="id9" id="ph1" />RENDER<ph dataRef="id10" id="ph2" />TARGET<ph dataRef="id11" id="ph3" />BLEND<ph dataRef="id12" id="ph4" />DESC</pc></pc> structure's <pc dataRefEnd="id14" dataRefStart="id13" id="p5">SrcBlend</pc> field set to <pc dataRefEnd="id16" dataRefStart="id15" id="p6">D3D11<ph dataRef="id17" id="ph5" />SRC<ph dataRef="id18" id="ph6" />ALPHA</pc>.</source>
          <target>The alpha premultiplication step can be done in the output-merger stage by applying an app blend state (see <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ID3D11BlendState</pc></pc>) with the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">D3D11<ph dataRef="id9" id="ph1" />RENDER<ph dataRef="id10" id="ph2" />TARGET<ph dataRef="id11" id="ph3" />BLEND<ph dataRef="id12" id="ph4" />DESC</pc></pc> structure's <pc dataRefEnd="id14" dataRefStart="id13" id="p5">SrcBlend</pc> field set to <pc dataRefEnd="id16" dataRefStart="id15" id="p6">D3D11<ph dataRef="id17" id="ph5" />SRC<ph dataRef="id18" id="ph6" />ALPHA</pc>.</target>
        </segment>
      </unit>
      <unit id="147">
        <segment state="initial">
          <source>Assets with pre-multiplied alpha values can also be used.</source>
          <target>Assets with pre-multiplied alpha values can also be used.</target>
        </segment>
      </unit>
      <unit id="148">
        <segment state="initial">
          <source>If the alpha premultiplication step is not done, colors on the foreground swap chain will be brighter than expected.</source>
          <target>If the alpha premultiplication step is not done, colors on the foreground swap chain will be brighter than expected.</target>
        </segment>
      </unit>
      <unit id="149">
        <segment state="initial">
          <source>Depending on whether the foreground swap chain was created, the Direct2D drawing surface for UI elements might need be associated with the foreground swap chain.</source>
          <target>Depending on whether the foreground swap chain was created, the Direct2D drawing surface for UI elements might need be associated with the foreground swap chain.</target>
        </segment>
      </unit>
      <unit id="150">
        <segment state="initial">
          <source>Creating render target views:</source>
          <target>Creating render target views:</target>
        </segment>
      </unit>
      <unit id="151">
        <segment state="initial">
          <source>Creating the Direct2D drawing surface:</source>
          <target>Creating the Direct2D drawing surface:</target>
        </segment>
      </unit>
      <unit id="152">
        <segment state="initial">
          <source>Present the foreground swap chain together with the scaled swap chain used for real-time game content.</source>
          <target>Present the foreground swap chain together with the scaled swap chain used for real-time game content.</target>
        </segment>
      </unit>
      <unit id="153">
        <segment state="initial">
          <source>Since frame latency was set to 2 for both swap chains, DXGI can present them both within the same VSync interval.</source>
          <target>Since frame latency was set to 2 for both swap chains, DXGI can present them both within the same VSync interval.</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>