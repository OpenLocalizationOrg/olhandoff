<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="zh-cn" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">windows-apps-src\monetize\code-your-experiment-in-your-app.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">4e6706624e71c6d448a3d457c27d11c9f6ecc156</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-781aacf</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>After you define your experiment in the Dev Center dashboard, you are ready to code the experiment in your app.</source>
          <target>After you define your experiment in the Dev Center dashboard, you are ready to code the experiment in your app.</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>Code your app for experimentation</source>
          <target>Code your app for experimentation</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>Code your app for experimentation</source>
          <target>Code your app for experimentation</target>
        </segment>
      </unit>
      <unit id="104">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](define-your-experiment-in-the-dev-center-dashboard.md)</data>
        </originalData>
        <segment state="initial">
          <source>After you <pc dataRefEnd="id2" dataRefStart="id1" id="p1">define your experiment in the Dev Center dashboard</pc>, you are ready to update the code in your Universal Windows Platform (UWP) app to get variation data for the experiment, use this data to modify the behavior of the feature you are testing, and log view event and conversion events to Dev Center.</source>
          <target>After you <pc dataRefEnd="id2" dataRefStart="id1" id="p1">define your experiment in the Dev Center dashboard</pc>, you are ready to update the code in your Universal Windows Platform (UWP) app to get variation data for the experiment, use this data to modify the behavior of the feature you are testing, and log view event and conversion events to Dev Center.</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source>The following sections describe the general process of getting variations for your experiment and logging events to Dev Center.</source>
          <target>The following sections describe the general process of getting variations for your experiment and logging events to Dev Center.</target>
        </segment>
      </unit>
      <unit id="106">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](create-and-run-your-first-experiment-with-a-b-testing.md)</data>
        </originalData>
        <segment state="initial">
          <source>For a walkthrough that demonstrates the end-to-end process of creating and running an experiment, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Create and run your first experiment with A/B testing</pc>.</source>
          <target>For a walkthrough that demonstrates the end-to-end process of creating and running an experiment, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Create and run your first experiment with A/B testing</pc>.</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source>Configure your project</source>
          <target>Configure your project</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source>To get started, install the Microsoft Store Engagement and Monetization SDK on your development computer and add the necessary references to your project.</source>
          <target>To get started, install the Microsoft Store Engagement and Monetization SDK on your development computer and add the necessary references to your project.</target>
        </segment>
      </unit>
      <unit id="109">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://aka.ms/store-em-sdk)</data>
        </originalData>
        <segment state="initial">
          <source>Install the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Microsoft Store Engagement and Monetization SDK</pc>.</source>
          <target>Install the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Microsoft Store Engagement and Monetization SDK</pc>.</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source>Open your project in Visual Studio.</source>
          <target>Open your project in Visual Studio.</target>
        </segment>
      </unit>
      <unit id="111">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>In Solution Explorer, expand your project node, right-click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">References</pc>, and click <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Add Reference</pc>.</source>
          <target>In Solution Explorer, expand your project node, right-click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">References</pc>, and click <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Add Reference</pc>.</target>
        </segment>
      </unit>
      <unit id="112">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>In <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Reference Manager</pc>, expand <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Universal Windows</pc> and click <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Extensions</pc>.</source>
          <target>In <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Reference Manager</pc>, expand <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Universal Windows</pc> and click <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Extensions</pc>.</target>
        </segment>
      </unit>
      <unit id="113">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>In the list of SDKs, select the check box next to <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Microsoft Store Engagement SDK</pc> and click <pc dataRefEnd="id4" dataRefStart="id3" id="p2">OK</pc>.</source>
          <target>In the list of SDKs, select the check box next to <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Microsoft Store Engagement SDK</pc> and click <pc dataRefEnd="id4" dataRefStart="id3" id="p2">OK</pc>.</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source>Add code to get variation settings</source>
          <target>Add code to get variation settings</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source>In your project, locate the code for the feature that you want to modify in your experiment.</source>
          <target>In your project, locate the code for the feature that you want to modify in your experiment.</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source>Add code that retrieves settings for a variation, and use this data to modify the behavior of the feature you are testing.</source>
          <target>Add code that retrieves settings for a variation, and use this data to modify the behavior of the feature you are testing.</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source>The specific code you need will depend on your app, but here are the general steps.</source>
          <target>The specific code you need will depend on your app, but here are the general steps.</target>
        </segment>
      </unit>
      <unit id="118">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](create-and-run-your-first-experiment-with-a-b-testing.md)</data>
        </originalData>
        <segment state="initial">
          <source>For complete code example, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Create and run your first experiment with A/B testing</pc>.</source>
          <target>For complete code example, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Create and run your first experiment with A/B testing</pc>.</target>
        </segment>
      </unit>
      <unit id="119">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/microsoft.services.store.engagement.experimentclient.aspx)</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/microsoft.services.store.engagement.experimentvariation.aspx)</data>
        </originalData>
        <segment state="initial">
          <source>Declare an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ExperimentClient</pc> object that you will use to retrieve variations for your experiment and an <pc dataRefEnd="id4" dataRefStart="id3" id="p2">ExperimentVariation</pc> object that represents the current variation assignment.</source>
          <target>Declare an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ExperimentClient</pc> object that you will use to retrieve variations for your experiment and an <pc dataRefEnd="id4" dataRefStart="id3" id="p2">ExperimentVariation</pc> object that represents the current variation assignment.</target>
        </segment>
      </unit>
      <unit id="120">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/microsoft.services.store.engagement.experimentclient.aspx)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>Initialize the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ExperimentClient</pc> object, and pass the API key that you retrieved from the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Experiments</pc> page of the dashboard to the constructor.</source>
          <target>Initialize the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ExperimentClient</pc> object, and pass the API key that you retrieved from the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Experiments</pc> page of the dashboard to the constructor.</target>
        </segment>
      </unit>
      <unit id="121">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](define-your-experiment-in-the-dev-center-dashboard.md#generate-an-api-key)</data>
        </originalData>
        <segment state="initial">
          <source>For more information about the API key, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Define your experiment in the Dev Center dashboard</pc>.</source>
          <target>For more information about the API key, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Define your experiment in the Dev Center dashboard</pc>.</target>
        </segment>
      </unit>
      <unit id="122">
        <segment state="initial">
          <source>The API key shown below is for example purposes only.</source>
          <target>The API key shown below is for example purposes only.</target>
        </segment>
      </unit>
      <unit id="123">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/microsoft.services.store.engagement.experimentclient.getvariationasync.aspx)</data>
        </originalData>
        <segment state="initial">
          <source>Get the current cached variation assignment for your experiment by calling the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">GetVariationAsync</pc> method.</source>
          <target>Get the current cached variation assignment for your experiment by calling the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">GetVariationAsync</pc> method.</target>
        </segment>
      </unit>
      <unit id="124">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/microsoft.services.store.engagement.experimentvariationresult.aspx)</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/microsoft.services.store.engagement.experimentvariationresult.variation.aspx)</data>
        </originalData>
        <segment state="initial">
          <source>This method returns an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ExperimentVariationResult</pc> object that provides access to the variation assignment via the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Variation</pc> property.</source>
          <target>This method returns an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ExperimentVariationResult</pc> object that provides access to the variation assignment via the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Variation</pc> property.</target>
        </segment>
      </unit>
      <unit id="125">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/microsoft.services.store.engagement.experimentvariation.needsrefresh.aspx)</data>
        </originalData>
        <segment state="initial">
          <source>Check the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">NeedsRefresh</pc> property to determine whether the cached variation assignment needs to be refreshed.</source>
          <target>Check the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">NeedsRefresh</pc> property to determine whether the cached variation assignment needs to be refreshed.</target>
        </segment>
      </unit>
      <unit id="126">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/microsoft.services.store.engagement.experimentclient.refreshvariationasync.aspx)</data>
        </originalData>
        <segment state="initial">
          <source>If it does need to be refreshed, call the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">RefreshVariationAsync</pc> method to check for an updated variation assignment from the server and refresh the local cached variation.</source>
          <target>If it does need to be refreshed, call the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">RefreshVariationAsync</pc> method to check for an updated variation assignment from the server and refresh the local cached variation.</target>
        </segment>
      </unit>
      <unit id="127">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/microsoft.services.store.engagement.experimentvariation.getboolean.aspx)</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/microsoft.services.store.engagement.experimentvariation.getdouble.aspx)</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/microsoft.services.store.engagement.experimentvariation.getinteger.aspx)</data>
          <data id="id7">[</data>
          <data id="id8">](https://msdn.microsoft.com/library/windows/apps/microsoft.services.store.engagement.experimentvariation.getstring.aspx)</data>
          <data id="id9">[</data>
          <data id="id10">](https://msdn.microsoft.com/library/windows/apps/microsoft.services.store.engagement.experimentvariation.aspx)</data>
        </originalData>
        <segment state="initial">
          <source>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">GetBoolean</pc>, <pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetDouble</pc>, <pc dataRefEnd="id6" dataRefStart="id5" id="p3">GetInteger</pc>, or <pc dataRefEnd="id8" dataRefStart="id7" id="p4">GetString</pc> methods of the <pc dataRefEnd="id10" dataRefStart="id9" id="p5">ExperimentVariation</pc> object to get the settings for the variation assignment.</source>
          <target>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">GetBoolean</pc>, <pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetDouble</pc>, <pc dataRefEnd="id6" dataRefStart="id5" id="p3">GetInteger</pc>, or <pc dataRefEnd="id8" dataRefStart="id7" id="p4">GetString</pc> methods of the <pc dataRefEnd="id10" dataRefStart="id9" id="p5">ExperimentVariation</pc> object to get the settings for the variation assignment.</target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source>In each method, the first parameter is the name of the setting that you want to retrieve (as you entered it in your Dev Center dashboard).</source>
          <target>In each method, the first parameter is the name of the setting that you want to retrieve (as you entered it in your Dev Center dashboard).</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source>The second parameter is the default value that the method should return if it is not able to retrieve the specified value from Dev Center (for example, if there is no network connectivity), and a cached version of the variation is not available.</source>
          <target>The second parameter is the default value that the method should return if it is not able to retrieve the specified value from Dev Center (for example, if there is no network connectivity), and a cached version of the variation is not available.</target>
        </segment>
      </unit>
      <unit id="130">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/microsoft.services.store.engagement.experimentvariation.getstring.aspx)</data>
          <data id="id3">*</data>
          <data id="id4">*</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>The following example uses <pc dataRefEnd="id2" dataRefStart="id1" id="p1">GetString</pc> to get a setting named <pc dataRefEnd="id4" dataRefStart="id3" id="p2">buttonText</pc> and specifies a default setting value of <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Grey Button</pc>.</source>
          <target>The following example uses <pc dataRefEnd="id2" dataRefStart="id1" id="p1">GetString</pc> to get a setting named <pc dataRefEnd="id4" dataRefStart="id3" id="p2">buttonText</pc> and specifies a default setting value of <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Grey Button</pc>.</target>
        </segment>
      </unit>
      <unit id="131">
        <segment state="initial">
          <source>In your code, use the setting values to modify the behavior of the feature you are testing.</source>
          <target>In your code, use the setting values to modify the behavior of the feature you are testing.</target>
        </segment>
      </unit>
      <unit id="132">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
        </originalData>
        <segment state="initial">
          <source>For example, the following code assigns the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">buttonText</pc> value to the content of a button.</source>
          <target>For example, the following code assigns the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">buttonText</pc> value to the content of a button.</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source>Add code to log view and conversion events to Dev Center</source>
          <target>Add code to log view and conversion events to Dev Center</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source>Next, add code that logs view and conversion events to the A/B testing service in Dev Center.</source>
          <target>Next, add code that logs view and conversion events to the A/B testing service in Dev Center.</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source>Your code should log the view event when the user starts viewing a variation that is part of your experiment, and it should log the conversion event when the user reaches an objective for your experiment.</source>
          <target>Your code should log the view event when the user starts viewing a variation that is part of your experiment, and it should log the conversion event when the user reaches an objective for your experiment.</target>
        </segment>
      </unit>
      <unit id="136">
        <segment state="initial">
          <source>The specific code you need will depend on your app, but here are the general steps.</source>
          <target>The specific code you need will depend on your app, but here are the general steps.</target>
        </segment>
      </unit>
      <unit id="137">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](create-and-run-your-first-experiment-with-a-b-testing.md)</data>
        </originalData>
        <segment state="initial">
          <source>For complete code example, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Create and run your first experiment with A/B testing</pc>.</source>
          <target>For complete code example, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Create and run your first experiment with A/B testing</pc>.</target>
        </segment>
      </unit>
      <unit id="138">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/microsoft.services.store.engagement.storeservicescustomevents.log.aspx)</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/microsoft.services.store.engagement.storeservicescustomevents.aspx)</data>
        </originalData>
        <segment state="initial">
          <source>In code that runs when the user starts viewing a variation, call the static <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Log</pc> method of the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">StoreServicesCustomEvents</pc> object.</source>
          <target>In code that runs when the user starts viewing a variation, call the static <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Log</pc> method of the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">StoreServicesCustomEvents</pc> object.</target>
        </segment>
      </unit>
      <unit id="139">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/microsoft.services.store.engagement.experimentvariation.aspx)</data>
        </originalData>
        <segment state="initial">
          <source>Pass the name of the view event that you defined in your experiment on your Dev Center dashboard and the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ExperimentVariation</pc> object that represents the current variation assignment (this object provides context about the event to Dev Center).</source>
          <target>Pass the name of the view event that you defined in your experiment on your Dev Center dashboard and the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ExperimentVariation</pc> object that represents the current variation assignment (this object provides context about the event to Dev Center).</target>
        </segment>
      </unit>
      <unit id="140">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>The following example logs a view event named <pc dataRefEnd="id2" dataRefStart="id1" id="p1">userViewedButton</pc>.</source>
          <target>The following example logs a view event named <pc dataRefEnd="id2" dataRefStart="id1" id="p1">userViewedButton</pc>.</target>
        </segment>
      </unit>
      <unit id="141">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/microsoft.services.store.engagement.storeservicescustomevents.log.aspx)</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/microsoft.services.store.engagement.experimentvariation.aspx)</data>
        </originalData>
        <segment state="initial">
          <source>In code that runs when the user reaches an objective for one of the goals of the experiment, call the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Log</pc> method again and pass the name of a conversion event that you defined in your experiment and the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">ExperimentVariation</pc> object.</source>
          <target>In code that runs when the user reaches an objective for one of the goals of the experiment, call the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Log</pc> method again and pass the name of a conversion event that you defined in your experiment and the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">ExperimentVariation</pc> object.</target>
        </segment>
      </unit>
      <unit id="142">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>The following example logs a conversion event named <pc dataRefEnd="id2" dataRefStart="id1" id="p1">userClickedButton</pc>.</source>
          <target>The following example logs a conversion event named <pc dataRefEnd="id2" dataRefStart="id1" id="p1">userClickedButton</pc>.</target>
        </segment>
      </unit>
      <unit id="143">
        <segment state="initial">
          <source>Next steps</source>
          <target>Next steps</target>
        </segment>
      </unit>
      <unit id="144">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](manage-your-experiment.md)</data>
        </originalData>
        <segment state="initial">
          <source>After you define your experiment in the Dev Center dashboard and code the experiment in your app, you are ready to <pc dataRefEnd="id2" dataRefStart="id1" id="p1">run and manage your experiment in the Dev Center dashboard</pc>.</source>
          <target>After you define your experiment in the Dev Center dashboard and code the experiment in your app, you are ready to <pc dataRefEnd="id2" dataRefStart="id1" id="p1">run and manage your experiment in the Dev Center dashboard</pc>.</target>
        </segment>
      </unit>
      <unit id="145">
        <segment state="initial">
          <source>Related topics</source>
          <target>Related topics</target>
        </segment>
      </unit>
      <unit id="146">
        <segment state="initial">
          <source>Define your experiment in the Dev Center dashboard</source>
          <target>Define your experiment in the Dev Center dashboard</target>
        </segment>
      </unit>
      <unit id="147">
        <segment state="initial">
          <source>Manage your experiment in the Dev Center dashboard</source>
          <target>Manage your experiment in the Dev Center dashboard</target>
        </segment>
      </unit>
      <unit id="148">
        <segment state="initial">
          <source>Create and run your first experiment with A/B testing</source>
          <target>Create and run your first experiment with A/B testing</target>
        </segment>
      </unit>
      <unit id="149">
        <segment state="initial">
          <source>Run app experiments with A/B testing</source>
          <target>Run app experiments with A/B testing</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>