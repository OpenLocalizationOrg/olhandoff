<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci2\gaming\render-the-scene-with-depth-testing.md</xliffext:olfilepath>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">64d2d05a70e21a27cdb76d60290994f152e8908c</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-e58fd48" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Render the scene with depth testing</source>
          <target state="new">Render the scene with depth testing</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Create a shadow effect by adding depth testing to your vertex (or geometry) shader and your pixel shader.</source>
          <target state="new">Create a shadow effect by adding depth testing to your vertex (or geometry) shader and your pixel shader.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Render the scene with depth testing</source>
          <target state="new">Render the scene with depth testing</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Updated for UWP apps on Windows 10.</source>
          <target state="new">Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept></source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept></target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Create a shadow effect by adding depth testing to your vertex (or geometry) shader and your pixel shader.</source>
          <target state="new">Create a shadow effect by adding depth testing to your vertex (or geometry) shader and your pixel shader.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Part 3 of <bpt id="p1">[</bpt>Walkthrough: Implement shadow volumes using depth buffers in Direct3D 11<ept id="p1">](implementing-depth-buffers-for-shadow-mapping.md)</ept>.</source>
          <target state="new">Part 3 of <bpt id="p1">[</bpt>Walkthrough: Implement shadow volumes using depth buffers in Direct3D 11<ept id="p1">](implementing-depth-buffers-for-shadow-mapping.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Include transformation for light frustum</source>
          <target state="new">Include transformation for light frustum</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Your vertex shader needs to compute the transformed light space position for each vertex.</source>
          <target state="new">Your vertex shader needs to compute the transformed light space position for each vertex.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Provide the light space model, view, and projection matrices using a constant buffer.</source>
          <target state="new">Provide the light space model, view, and projection matrices using a constant buffer.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You can also use this constant buffer to provide the light position and normal for lighting calculations.</source>
          <target state="new">You can also use this constant buffer to provide the light position and normal for lighting calculations.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The transformed position in light space will be used during the depth test.</source>
          <target state="new">The transformed position in light space will be used during the depth test.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Next, the pixel shader will use the interpolated light space position provided by the vertex shader to test whether the pixel is in shadow.</source>
          <target state="new">Next, the pixel shader will use the interpolated light space position provided by the vertex shader to test whether the pixel is in shadow.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Test whether the position is in the light frustum</source>
          <target state="new">Test whether the position is in the light frustum</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>First, check that the pixel is in the view frustum of the light by normalizing the X and Y coordinates.</source>
          <target state="new">First, check that the pixel is in the view frustum of the light by normalizing the X and Y coordinates.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If they are both within the range <ph id="ph1">\[</ph>0, 1<ph id="ph2">\]</ph> then it's possible for the pixel to be in shadow.</source>
          <target state="new">If they are both within the range <ph id="ph1">\[</ph>0, 1<ph id="ph2">\]</ph> then it's possible for the pixel to be in shadow.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Otherwise you can skip the depth test.</source>
          <target state="new">Otherwise you can skip the depth test.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A shader can test for this quickly by calling <bpt id="p1">[</bpt>Saturate<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/hh447231)</ept> and comparing the result against the original value.</source>
          <target state="new">A shader can test for this quickly by calling <bpt id="p1">[</bpt>Saturate<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/hh447231)</ept> and comparing the result against the original value.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Depth test against the shadow map</source>
          <target state="new">Depth test against the shadow map</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Use a sample comparison function (either <bpt id="p1">[</bpt>SampleCmp<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/bb509696)</ept> or <bpt id="p2">[</bpt>SampleCmpLevelZero<ept id="p2">](https://msdn.microsoft.com/library/windows/desktop/bb509697)</ept>) to test the pixel's depth in light space against the depth map.</source>
          <target state="new">Use a sample comparison function (either <bpt id="p1">[</bpt>SampleCmp<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/bb509696)</ept> or <bpt id="p2">[</bpt>SampleCmpLevelZero<ept id="p2">](https://msdn.microsoft.com/library/windows/desktop/bb509697)</ept>) to test the pixel's depth in light space against the depth map.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Compute the normalized light space depth value, which is <ph id="ph1">`z / w`</ph>, and pass the value to the comparison function.</source>
          <target state="new">Compute the normalized light space depth value, which is <ph id="ph1">`z / w`</ph>, and pass the value to the comparison function.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Since we use a LessOrEqual comparison test for the sampler, the intrinsic function returns zero when the comparison test passes; this indicates that the pixel is in shadow.</source>
          <target state="new">Since we use a LessOrEqual comparison test for the sampler, the intrinsic function returns zero when the comparison test passes; this indicates that the pixel is in shadow.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Compute lighting in or out of shadow</source>
          <target state="new">Compute lighting in or out of shadow</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>If the pixel is not in shadow, the pixel shader should compute direct lighting and add it to the pixel value.</source>
          <target state="new">If the pixel is not in shadow, the pixel shader should compute direct lighting and add it to the pixel value.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Otherwise, the pixel shader should compute the pixel value using ambient lighting.</source>
          <target state="new">Otherwise, the pixel shader should compute the pixel value using ambient lighting.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>In the next part of this walkthrough, learn how to <bpt id="p1">[</bpt>Support shadow maps on a range of hardware<ept id="p1">](target-a-range-of-hardware.md)</ept>.</source>
          <target state="new">In the next part of this walkthrough, learn how to <bpt id="p1">[</bpt>Support shadow maps on a range of hardware<ept id="p1">](target-a-range-of-hardware.md)</ept>.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>