<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci2\gaming\plan-your-directx-port.md</xliffext:olfilepath>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eee564739a4c0fddf5ddbd1ef13cf76853415821</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-e58fd48" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Plan your DirectX port</source>
          <target state="new">Plan your DirectX port</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Plan your game porting project from DirectX 9 to DirectX 11 and Universal Windows Platform (UWP)-- upgrade your graphics code, and put your game in the Windows Runtime environment.</source>
          <target state="new">Plan your game porting project from DirectX 9 to DirectX 11 and Universal Windows Platform (UWP)-- upgrade your graphics code, and put your game in the Windows Runtime environment.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Plan your DirectX port</source>
          <target state="new">Plan your DirectX port</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Updated for UWP apps on Windows 10.</source>
          <target state="new">Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept></source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept></target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Summary</source>
          <target state="new">Summary</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Plan your DirectX port</source>
          <target state="new">Plan your DirectX port</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Important changes from Direct3D 9 to Direct3D 11</source>
          <target state="new">Important changes from Direct3D 9 to Direct3D 11</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Feature mapping</source>
          <target state="new">Feature mapping</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Plan your game porting project from DirectX 9 to DirectX 11 and Universal Windows Platform (UWP): upgrade your graphics code, and put your game in the Windows Runtime environment.</source>
          <target state="new">Plan your game porting project from DirectX 9 to DirectX 11 and Universal Windows Platform (UWP): upgrade your graphics code, and put your game in the Windows Runtime environment.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Plan to port graphics code</source>
          <target state="new">Plan to port graphics code</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Before you begin porting your game to UWP, it's important to ensure that your game does not have any holdovers from Direct3D 8.</source>
          <target state="new">Before you begin porting your game to UWP, it's important to ensure that your game does not have any holdovers from Direct3D 8.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Ensure that your game doesn't have any remnants of the fixed function pipeline.</source>
          <target state="new">Ensure that your game doesn't have any remnants of the fixed function pipeline.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For a complete list of deprecated features, including fixed pipeline functionality, see <bpt id="p1">[</bpt>Deprecated Features<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/cc308047)</ept>.</source>
          <target state="new">For a complete list of deprecated features, including fixed pipeline functionality, see <bpt id="p1">[</bpt>Deprecated Features<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/cc308047)</ept>.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Upgrading from Direct3D 9 to Direct3D 11 is more than a search-and-replace change.</source>
          <target state="new">Upgrading from Direct3D 9 to Direct3D 11 is more than a search-and-replace change.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You need to know the difference between the Direct3D device, device context, and graphics infrastructure, and learn about other important changes since Direct3D 9.</source>
          <target state="new">You need to know the difference between the Direct3D device, device context, and graphics infrastructure, and learn about other important changes since Direct3D 9.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You can start this process by reading the other topics in this section.</source>
          <target state="new">You can start this process by reading the other topics in this section.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You must replace the D3DX and DXUT helper libraries with your own helper libraries, or with community tools.</source>
          <target state="new">You must replace the D3DX and DXUT helper libraries with your own helper libraries, or with community tools.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>See the <bpt id="p1">[</bpt>Feature mapping<ept id="p1">](feature-mapping.md)</ept> section for more info.</source>
          <target state="new">See the <bpt id="p1">[</bpt>Feature mapping<ept id="p1">](feature-mapping.md)</ept> section for more info.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>   You can use the <bpt id="p2">[</bpt>DirectX Tool Kit<ept id="p2">](http://go.microsoft.com/fwlink/p/?LinkID=248929)</ept> or <bpt id="p3">[</bpt>DirectXTex<ept id="p3">](http://go.microsoft.com/fwlink/p/?LinkID=248926)</ept> to replace some functionality that was formerly provided by D3DX and DXUT.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>   You can use the <bpt id="p2">[</bpt>DirectX Tool Kit<ept id="p2">](http://go.microsoft.com/fwlink/p/?LinkID=248929)</ept> or <bpt id="p3">[</bpt>DirectXTex<ept id="p3">](http://go.microsoft.com/fwlink/p/?LinkID=248926)</ept> to replace some functionality that was formerly provided by D3DX and DXUT.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Shaders written in assembly language should be upgraded to HLSL using shader model 4 level 9<ph id="ph1">\_</ph>1 or 9<ph id="ph2">\_</ph>3 functionality, and shaders written for the Effects library will need to be updated to a more recent version of HLSL syntax.</source>
          <target state="new">Shaders written in assembly language should be upgraded to HLSL using shader model 4 level 9<ph id="ph1">\_</ph>1 or 9<ph id="ph2">\_</ph>3 functionality, and shaders written for the Effects library will need to be updated to a more recent version of HLSL syntax.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>See the <bpt id="p1">[</bpt>Feature mapping<ept id="p1">](feature-mapping.md)</ept> section for more info.</source>
          <target state="new">See the <bpt id="p1">[</bpt>Feature mapping<ept id="p1">](feature-mapping.md)</ept> section for more info.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Get familiar with the different <bpt id="p1">[</bpt>Direct3D feature levels<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ff476876)</ept>.</source>
          <target state="new">Get familiar with the different <bpt id="p1">[</bpt>Direct3D feature levels<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ff476876)</ept>.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Feature levels classify a wide range of video hardware by defining sets of known functionality.</source>
          <target state="new">Feature levels classify a wide range of video hardware by defining sets of known functionality.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Each set roughly corresponds to versions of Direct3D, from 9.1 through 11.2.</source>
          <target state="new">Each set roughly corresponds to versions of Direct3D, from 9.1 through 11.2.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>All feature levels use the DirectX 11 API.</source>
          <target state="new">All feature levels use the DirectX 11 API.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Plan to port Win32 UI code to CoreWindow</source>
          <target state="new">Plan to port Win32 UI code to CoreWindow</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>UWP apps run in a window created for an app container, called a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CoreWindow<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208225)</ept>.</source>
          <target state="new">UWP apps run in a window created for an app container, called a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CoreWindow<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208225)</ept>.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Your game controls the window by inheriting from <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IFrameworkView<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh700478)</ept>, which requires less implementation details than a desktop window.</source>
          <target state="new">Your game controls the window by inheriting from <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IFrameworkView<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh700478)</ept>, which requires less implementation details than a desktop window.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Your game's main loop will be in the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IFrameworkView::Run<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh700505)</ept> method.</source>
          <target state="new">Your game's main loop will be in the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IFrameworkView::Run<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh700505)</ept> method.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The lifecycle of a UWP app is very different from a desktop app.</source>
          <target state="new">The lifecycle of a UWP app is very different from a desktop app.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>You'll need to save the game often, because when a suspend event happens your app only has a limited amount of time to stop running code, and you want to make sure the player can get back to where they were right away when your app resumes.</source>
          <target state="new">You'll need to save the game often, because when a suspend event happens your app only has a limited amount of time to stop running code, and you want to make sure the player can get back to where they were right away when your app resumes.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Games should save just often enough to maintain a continuous gameplay experience from resume, but not so often that the game saves impact framerate or cause the game to stutter.</source>
          <target state="new">Games should save just often enough to maintain a continuous gameplay experience from resume, but not so often that the game saves impact framerate or cause the game to stutter.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Your game will potentially need to load game state when the game resumes from a terminated state.</source>
          <target state="new">Your game will potentially need to load game state when the game resumes from a terminated state.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>DirectXMath<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ee415571)</ept> can be used as a replacement for D3DXMath and XNAMath, and it can come in handy if you need a math library.</source>
          <target state="new"><bpt id="p1">[</bpt>DirectXMath<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ee415571)</ept> can be used as a replacement for D3DXMath and XNAMath, and it can come in handy if you need a math library.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>DirectXMath has fast, portable data types, and types that are aligned and packed for use with shaders.</source>
          <target state="new">DirectXMath has fast, portable data types, and types that are aligned and packed for use with shaders.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Native libraries such as the <bpt id="p1">[</bpt>Interlocked API<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/dd405529)</ept> have been expanded to support ARM intrinsics.</source>
          <target state="new">Native libraries such as the <bpt id="p1">[</bpt>Interlocked API<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/dd405529)</ept> have been expanded to support ARM intrinsics.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>If your game uses interlocked APIs, you can keep using them in DirectX 11 and UWP.</source>
          <target state="new">If your game uses interlocked APIs, you can keep using them in DirectX 11 and UWP.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Our templates and code samples use new C++ features that you might not be familiar with yet.</source>
          <target state="new">Our templates and code samples use new C++ features that you might not be familiar with yet.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>For example, asynchronous methods are used with <bpt id="p1">[</bpt><bpt id="p2">**</bpt>lambda expressions<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dd293608.aspx)</ept> to load Direct3D resources without blocking the UI thread.</source>
          <target state="new">For example, asynchronous methods are used with <bpt id="p1">[</bpt><bpt id="p2">**</bpt>lambda expressions<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dd293608.aspx)</ept> to load Direct3D resources without blocking the UI thread.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>There are two concepts you'll use often:</source>
          <target state="new">There are two concepts you'll use often:</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Managed references ([<bpt id="p1">**</bpt><ph id="ph1">^</ph><ept id="p1">**</ept>]https://msdn.microsoft.com/library/windows/apps/yk97tc08.aspx) and <bpt id="p2">[</bpt><bpt id="p3">**</bpt>managed classes<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/6w96b5h7.aspx)</ept> (ref classes) are a fundamental part of the Windows Runtime.</source>
          <target state="new">Managed references ([<bpt id="p1">**</bpt><ph id="ph1">^</ph><ept id="p1">**</ept>]https://msdn.microsoft.com/library/windows/apps/yk97tc08.aspx) and <bpt id="p2">[</bpt><bpt id="p3">**</bpt>managed classes<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/6w96b5h7.aspx)</ept> (ref classes) are a fundamental part of the Windows Runtime.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>You will need to use managed ref classes to interface with Windows Runtime components, for example <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IFrameworkView<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh700478)</ept> (more on that in the walkthrough).</source>
          <target state="new">You will need to use managed ref classes to interface with Windows Runtime components, for example <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IFrameworkView<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh700478)</ept> (more on that in the walkthrough).</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>When working with Direct3D 11 COM interfaces, use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Microsoft::WRL::ComPtr<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br244983.aspx)</ept> template type to make COM pointers easier to use.</source>
          <target state="new">When working with Direct3D 11 COM interfaces, use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Microsoft::WRL::ComPtr<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br244983.aspx)</ept> template type to make COM pointers easier to use.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>