<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci2\controls-and-patterns\tiles-and-notifications-windows-push-notification-services--wns--overview.md</xliffext:olfilepath>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3d6345c93373a5081c509596f6a6a4325f65256c</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-e58fd48" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>The Windows Push Notification Services (WNS) enables third-party developers to send toast, tile, badge, and raw updates from their own cloud service.</source>
          <target state="new">The Windows Push Notification Services (WNS) enables third-party developers to send toast, tile, badge, and raw updates from their own cloud service.</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This provides a mechanism to deliver new updates to your users in a power-efficient and dependable way.</source>
          <target state="new">This provides a mechanism to deliver new updates to your users in a power-efficient and dependable way.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Windows Push Notification Services (WNS) overview</source>
          <target state="new">Windows Push Notification Services (WNS) overview</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Windows Push Notification Services (WNS) overview</source>
          <target state="new">Windows Push Notification Services (WNS) overview</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Updated for UWP apps on Windows 10.</source>
          <target state="new">Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept></source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept></target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The Windows Push Notification Services (WNS) enables third-party developers to send toast, tile, badge, and raw updates from their own cloud service.</source>
          <target state="new">The Windows Push Notification Services (WNS) enables third-party developers to send toast, tile, badge, and raw updates from their own cloud service.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This provides a mechanism to deliver new updates to your users in a power-efficient and dependable way.</source>
          <target state="new">This provides a mechanism to deliver new updates to your users in a power-efficient and dependable way.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>How it works</source>
          <target state="new">How it works</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The following diagram shows the complete data flow for sending a push notification.</source>
          <target state="new">The following diagram shows the complete data flow for sending a push notification.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>It involves these steps:</source>
          <target state="new">It involves these steps:</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Your app requests a push notification channel from the Universal Windows Platform.</source>
          <target state="new">Your app requests a push notification channel from the Universal Windows Platform.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Windows asks WNS to create a notification channel.</source>
          <target state="new">Windows asks WNS to create a notification channel.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This channel is returned to the calling device in the form of a Uniform Resource Identifier (URI).</source>
          <target state="new">This channel is returned to the calling device in the form of a Uniform Resource Identifier (URI).</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The notification channel URI is returned by Windows to your app.</source>
          <target state="new">The notification channel URI is returned by Windows to your app.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Your app sends the URI to your own cloud service.</source>
          <target state="new">Your app sends the URI to your own cloud service.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You then store the URI on your own cloud service so that you can access the URI when you send notifications.</source>
          <target state="new">You then store the URI on your own cloud service so that you can access the URI when you send notifications.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The URI is an interface between your own app and your own service; it's your responsibility to implement this interface with safe and secure web standards.</source>
          <target state="new">The URI is an interface between your own app and your own service; it's your responsibility to implement this interface with safe and secure web standards.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>When your cloud service has an update to send, it notifies WNS using the channel URI.</source>
          <target state="new">When your cloud service has an update to send, it notifies WNS using the channel URI.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This is done by issuing an HTTP POST request, including the notification payload, over Secure Sockets Layer (SSL).</source>
          <target state="new">This is done by issuing an HTTP POST request, including the notification payload, over Secure Sockets Layer (SSL).</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This step requires authentication.</source>
          <target state="new">This step requires authentication.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>WNS receives the request and routes the notification to the appropriate device.</source>
          <target state="new">WNS receives the request and routes the notification to the appropriate device.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>wns data flow diagram for push notification</source>
          <target state="new">wns data flow diagram for push notification</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Registering your app and receiving the credentials for your cloud service</source>
          <target state="new">Registering your app and receiving the credentials for your cloud service</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Before you can send notifications using WNS, your app must be registered with the Store Dashboard.</source>
          <target state="new">Before you can send notifications using WNS, your app must be registered with the Store Dashboard.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This will provide you with credentials for your app that your cloud service will use in authenticating with WNS.</source>
          <target state="new">This will provide you with credentials for your app that your cloud service will use in authenticating with WNS.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>These credentials consist of a Package Security Identifier (SID) and a secret key.</source>
          <target state="new">These credentials consist of a Package Security Identifier (SID) and a secret key.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>To perform this registration, go to the <bpt id="p1">[</bpt>Windows Dev Center<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=511146)</ept> and select <bpt id="p2">**</bpt>Dashboard<ept id="p2">**</ept>.</source>
          <target state="new">To perform this registration, go to the <bpt id="p1">[</bpt>Windows Dev Center<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=511146)</ept> and select <bpt id="p2">**</bpt>Dashboard<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Each app has its own set of credentials for its cloud service.</source>
          <target state="new">Each app has its own set of credentials for its cloud service.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>These credentials cannot be used to send notifications to any other app.</source>
          <target state="new">These credentials cannot be used to send notifications to any other app.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For more details on how to register your app, please see <bpt id="p1">[</bpt>How to authenticate with the Windows Notification Service (WNS)<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh465407)</ept>.</source>
          <target state="new">For more details on how to register your app, please see <bpt id="p1">[</bpt>How to authenticate with the Windows Notification Service (WNS)<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh465407)</ept>.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Requesting a notification channel</source>
          <target state="new">Requesting a notification channel</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>When an app that is capable of receiving push notifications runs, it must first request a notification channel through the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CreatePushNotificationChannelForApplicationAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br241285)</ept>.</source>
          <target state="new">When an app that is capable of receiving push notifications runs, it must first request a notification channel through the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CreatePushNotificationChannelForApplicationAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br241285)</ept>.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>For a full discussion and example code, see <bpt id="p1">[</bpt>How to request, create, and save a notification channel<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh465412)</ept>.</source>
          <target state="new">For a full discussion and example code, see <bpt id="p1">[</bpt>How to request, create, and save a notification channel<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh465412)</ept>.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This API returns a channel URI that is uniquely linked to the calling application and its tile, and through which all notification types can be sent.</source>
          <target state="new">This API returns a channel URI that is uniquely linked to the calling application and its tile, and through which all notification types can be sent.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>After the app has successfully created a channel URI, it sends it to its cloud service, together with any app-specific metadata that should be associated with this URI.</source>
          <target state="new">After the app has successfully created a channel URI, it sends it to its cloud service, together with any app-specific metadata that should be associated with this URI.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Important notes</source>
          <target state="new">Important notes</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>We do not guarantee that the notification channel URI for an app will always remain the same.</source>
          <target state="new">We do not guarantee that the notification channel URI for an app will always remain the same.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>We advise that the app requests a new channel every time it runs and updates its service when the URI changes.</source>
          <target state="new">We advise that the app requests a new channel every time it runs and updates its service when the URI changes.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The developer should never modify the channel URI and should consider it as a black-box string.</source>
          <target state="new">The developer should never modify the channel URI and should consider it as a black-box string.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>At this time, channel URIs expire after 30 days.</source>
          <target state="new">At this time, channel URIs expire after 30 days.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>If your Windows 10 app will periodically renew its channel in the background then you can download the <bpt id="p1">[</bpt>Push and periodic notifications sample<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=231476)</ept> for Windows 8.1 and re-use its source code and/or the pattern it demonstrates.</source>
          <target state="new">If your Windows 10 app will periodically renew its channel in the background then you can download the <bpt id="p1">[</bpt>Push and periodic notifications sample<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=231476)</ept> for Windows 8.1 and re-use its source code and/or the pattern it demonstrates.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The interface between the cloud service and the client app is implemented by you, the developer.</source>
          <target state="new">The interface between the cloud service and the client app is implemented by you, the developer.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>We recommend that the app go through an authentication process with its own service and transmit data over a secure protocol such as HTTPS.</source>
          <target state="new">We recommend that the app go through an authentication process with its own service and transmit data over a secure protocol such as HTTPS.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>It is important that the cloud service always ensures that the channel URI uses the domain "notify.windows.com".</source>
          <target state="new">It is important that the cloud service always ensures that the channel URI uses the domain "notify.windows.com".</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The service should never push notifications to a channel on any other domain.</source>
          <target state="new">The service should never push notifications to a channel on any other domain.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>If the callback for your app is ever compromised, a malicious attacker could submit a channel URI to spoof WNS.</source>
          <target state="new">If the callback for your app is ever compromised, a malicious attacker could submit a channel URI to spoof WNS.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Without inspecting the domain, your cloud service could be potentially disclose information to this attacker unknowingly.</source>
          <target state="new">Without inspecting the domain, your cloud service could be potentially disclose information to this attacker unknowingly.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>If your cloud service attempts to deliver a notification to an expired channel, WNS will return <bpt id="p1">[</bpt>response code 410<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh465435.aspx#WNSResponseCodes)</ept>.</source>
          <target state="new">If your cloud service attempts to deliver a notification to an expired channel, WNS will return <bpt id="p1">[</bpt>response code 410<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh465435.aspx#WNSResponseCodes)</ept>.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>In response to that code, your service should no longer attempt to send notifications to that URI.</source>
          <target state="new">In response to that code, your service should no longer attempt to send notifications to that URI.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Authenticating your cloud service</source>
          <target state="new">Authenticating your cloud service</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>To send a notification, the cloud service must be authenticated through WNS.</source>
          <target state="new">To send a notification, the cloud service must be authenticated through WNS.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The first step in this process occurs when you register your app with the Windows Store Dashboard.</source>
          <target state="new">The first step in this process occurs when you register your app with the Windows Store Dashboard.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>During the registration process, your app is given a Package security identifier (SID) and a secret key.</source>
          <target state="new">During the registration process, your app is given a Package security identifier (SID) and a secret key.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>This information is used by your cloud service to authenticate with WNS.</source>
          <target state="new">This information is used by your cloud service to authenticate with WNS.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The WNS authentication scheme is implemented using the client credentials profile from the <bpt id="p1">[</bpt>OAuth 2.0<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=226787)</ept> protocol.</source>
          <target state="new">The WNS authentication scheme is implemented using the client credentials profile from the <bpt id="p1">[</bpt>OAuth 2.0<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=226787)</ept> protocol.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The cloud service authenticates with WNS by providing its credentials (Package SID and secret key).</source>
          <target state="new">The cloud service authenticates with WNS by providing its credentials (Package SID and secret key).</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>In return, it receives an access token.</source>
          <target state="new">In return, it receives an access token.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>This access token allows a cloud service to send a notification.</source>
          <target state="new">This access token allows a cloud service to send a notification.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The token is required with every notification request sent to the WNS.</source>
          <target state="new">The token is required with every notification request sent to the WNS.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>At a high level, the information chain is as follows:</source>
          <target state="new">At a high level, the information chain is as follows:</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The cloud service sends its credentials to WNS over HTTPS following the OAuth 2.0 protocol.</source>
          <target state="new">The cloud service sends its credentials to WNS over HTTPS following the OAuth 2.0 protocol.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>This authenticates the service with WNS.</source>
          <target state="new">This authenticates the service with WNS.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>WNS returns an access token if the authentication was successful.</source>
          <target state="new">WNS returns an access token if the authentication was successful.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>This access token is used in all subsequent notification requests until it expires.</source>
          <target state="new">This access token is used in all subsequent notification requests until it expires.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>wns diagram for cloud service authentication</source>
          <target state="new">wns diagram for cloud service authentication</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>In the authentication with WNS, the cloud service submits an HTTP request over Secure Sockets Layer (SSL).</source>
          <target state="new">In the authentication with WNS, the cloud service submits an HTTP request over Secure Sockets Layer (SSL).</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The parameters are supplied in the "application/x-www-for-urlencoded" format.</source>
          <target state="new">The parameters are supplied in the "application/x-www-for-urlencoded" format.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Supply your Package SID in the "client<ph id="ph1">\_</ph>id" field and your secret key in the "client<ph id="ph2">\_</ph>secret" field.</source>
          <target state="new">Supply your Package SID in the "client<ph id="ph1">\_</ph>id" field and your secret key in the "client<ph id="ph2">\_</ph>secret" field.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>For syntax details, see the <bpt id="p1">[</bpt>access token request<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh465435.aspx#access_token_request)</ept> reference.</source>
          <target state="new">For syntax details, see the <bpt id="p1">[</bpt>access token request<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh465435.aspx#access_token_request)</ept> reference.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  This is just an example, not cut-and-paste code that you can successfully use in your own code.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  This is just an example, not cut-and-paste code that you can successfully use in your own code.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The WNS authenticates the cloud service and, if successful, sends a response of "200 OK".</source>
          <target state="new">The WNS authenticates the cloud service and, if successful, sends a response of "200 OK".</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The access token is returned in the parameters included in the body of the HTTP response, using the "application/json" media type.</source>
          <target state="new">The access token is returned in the parameters included in the body of the HTTP response, using the "application/json" media type.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>After your service has received the access token, you are ready to send notifications.</source>
          <target state="new">After your service has received the access token, you are ready to send notifications.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The following example shows a successful authentication response, including the access token.</source>
          <target state="new">The following example shows a successful authentication response, including the access token.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>For syntax details, see <bpt id="p1">[</bpt>Push notification service request and response headers<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh465435)</ept>.</source>
          <target state="new">For syntax details, see <bpt id="p1">[</bpt>Push notification service request and response headers<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh465435)</ept>.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Important notes</source>
          <target state="new">Important notes</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The OAuth 2.0 protocol supported in this procedure follows draft version V16.</source>
          <target state="new">The OAuth 2.0 protocol supported in this procedure follows draft version V16.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The OAuth Request for Comments (RFC) uses the term "client" to refer to the cloud service.</source>
          <target state="new">The OAuth Request for Comments (RFC) uses the term "client" to refer to the cloud service.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>There might be changes to this procedure when the OAuth draft is finalized.</source>
          <target state="new">There might be changes to this procedure when the OAuth draft is finalized.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The access token can be reused for multiple notification requests.</source>
          <target state="new">The access token can be reused for multiple notification requests.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>This allows the cloud service to authenticate just once to send many notifications.</source>
          <target state="new">This allows the cloud service to authenticate just once to send many notifications.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>However, when the access token expires, the cloud service must authenticate again to receive a new access token.</source>
          <target state="new">However, when the access token expires, the cloud service must authenticate again to receive a new access token.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Sending a notification</source>
          <target state="new">Sending a notification</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Using the channel URI, the cloud service can send a notification whenever it has an update for the user.</source>
          <target state="new">Using the channel URI, the cloud service can send a notification whenever it has an update for the user.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The access token described above can be reused for multiple notification requests; the cloud server is not required to request a new access token for every notification.</source>
          <target state="new">The access token described above can be reused for multiple notification requests; the cloud server is not required to request a new access token for every notification.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>If the access token has expired, the notification request will return an error.</source>
          <target state="new">If the access token has expired, the notification request will return an error.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>We recommended that you do not try to re-send your notification more than once if the access token is rejected.</source>
          <target state="new">We recommended that you do not try to re-send your notification more than once if the access token is rejected.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>If you encounter this error, you will need to request a new access token and resend the notification.</source>
          <target state="new">If you encounter this error, you will need to request a new access token and resend the notification.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>For the exact error code, see <bpt id="p1">[</bpt>Push notification response codes<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh465435)</ept>.</source>
          <target state="new">For the exact error code, see <bpt id="p1">[</bpt>Push notification response codes<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh465435)</ept>.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The cloud service makes an HTTP POST to the channel URI.</source>
          <target state="new">The cloud service makes an HTTP POST to the channel URI.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>This request must be made over SSL and contains the necessary headers and the notification payload.</source>
          <target state="new">This request must be made over SSL and contains the necessary headers and the notification payload.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The authorization header must include the acquired access token for authorization.</source>
          <target state="new">The authorization header must include the acquired access token for authorization.</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>An example request is shown here.</source>
          <target state="new">An example request is shown here.</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>For syntax details, see <bpt id="p1">[</bpt>Push notification response codes<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh465435)</ept>.</source>
          <target state="new">For syntax details, see <bpt id="p1">[</bpt>Push notification response codes<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh465435)</ept>.</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>For details on composing the notification payload, see <bpt id="p1">[</bpt>Quickstart: Sending a push notification<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/hh868252)</ept>.</source>
          <target state="new">For details on composing the notification payload, see <bpt id="p1">[</bpt>Quickstart: Sending a push notification<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/hh868252)</ept>.</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The payload of a tile, toast, or badge push notification is supplied as XML content that adheres to their respective defined <bpt id="p1">[</bpt>Adaptive tiles schema<ept id="p1">](tiles-and-notifications-adaptive-tiles-schema.md)</ept> or <bpt id="p2">[</bpt>Legacy tiles schema<ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br212853)</ept>.</source>
          <target state="new">The payload of a tile, toast, or badge push notification is supplied as XML content that adheres to their respective defined <bpt id="p1">[</bpt>Adaptive tiles schema<ept id="p1">](tiles-and-notifications-adaptive-tiles-schema.md)</ept> or <bpt id="p2">[</bpt>Legacy tiles schema<ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br212853)</ept>.</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The payload of a raw notification does not have a specified structure.</source>
          <target state="new">The payload of a raw notification does not have a specified structure.</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>It is strictly app-defined.</source>
          <target state="new">It is strictly app-defined.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>WNS responds to indicate that the notification has been received and will be delivered at the next available opportunity.</source>
          <target state="new">WNS responds to indicate that the notification has been received and will be delivered at the next available opportunity.</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>However, WNS does not provide end-to-end confirmation that your notification has been received by the device or application.</source>
          <target state="new">However, WNS does not provide end-to-end confirmation that your notification has been received by the device or application.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>This diagram illustrates the data flow:</source>
          <target state="new">This diagram illustrates the data flow:</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>wns diagram for sending a notification</source>
          <target state="new">wns diagram for sending a notification</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Important notes</source>
          <target state="new">Important notes</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>WNS does not guarantee the reliability or latency of a notification.</source>
          <target state="new">WNS does not guarantee the reliability or latency of a notification.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Notifications should never include confidential or sensitive data.</source>
          <target state="new">Notifications should never include confidential or sensitive data.</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>To send a notification, the cloud service must first authenticate with WNS and receive an access token.</source>
          <target state="new">To send a notification, the cloud service must first authenticate with WNS and receive an access token.</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>An access token only allows a cloud service to send notifications to the single app for which the token was created.</source>
          <target state="new">An access token only allows a cloud service to send notifications to the single app for which the token was created.</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>One access token cannot be used to send notifications across multiple apps.</source>
          <target state="new">One access token cannot be used to send notifications across multiple apps.</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Therefore, if your cloud service supports multiple apps, it must provide the correct access token for the app when pushing a notification to each channel URI.</source>
          <target state="new">Therefore, if your cloud service supports multiple apps, it must provide the correct access token for the app when pushing a notification to each channel URI.</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>When the device is offline, by default WNS will store up to five tile notifications (if queuing is enabled; otherwise, one tile notification) and one badge notification for each channel URI, and no raw notifications.</source>
          <target state="new">When the device is offline, by default WNS will store up to five tile notifications (if queuing is enabled; otherwise, one tile notification) and one badge notification for each channel URI, and no raw notifications.</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>This default caching behavior can be changed through the <bpt id="p1">[</bpt>X-WNS-Cache-Policy header<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh465435.aspx#pncodes_x_wns_cache)</ept>.</source>
          <target state="new">This default caching behavior can be changed through the <bpt id="p1">[</bpt>X-WNS-Cache-Policy header<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh465435.aspx#pncodes_x_wns_cache)</ept>.</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Note that toast notifications are never stored when the device is offline.</source>
          <target state="new">Note that toast notifications are never stored when the device is offline.</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>In scenarios where the notification content is personalized to the user, WNS recommends that the cloud service immediately send those updates when those are received.</source>
          <target state="new">In scenarios where the notification content is personalized to the user, WNS recommends that the cloud service immediately send those updates when those are received.</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Examples of this scenario include social media feed updates, instant communication invitations, new message notifications, or alerts.</source>
          <target state="new">Examples of this scenario include social media feed updates, instant communication invitations, new message notifications, or alerts.</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>As an alternative, you can have scenarios in which the same generic update is frequently delivered to a large subset of your users; for example, weather, stock, and news updates.</source>
          <target state="new">As an alternative, you can have scenarios in which the same generic update is frequently delivered to a large subset of your users; for example, weather, stock, and news updates.</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>WNS guidelines specify that the frequency of these updates should be at most one every 30 minutes.</source>
          <target state="new">WNS guidelines specify that the frequency of these updates should be at most one every 30 minutes.</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The end user or WNS may determine more frequent routine updates to be abusive.</source>
          <target state="new">The end user or WNS may determine more frequent routine updates to be abusive.</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Expiration of tile and badge notifications</source>
          <target state="new">Expiration of tile and badge notifications</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>By default, tile and badge notifications expire three days after being downloaded.</source>
          <target state="new">By default, tile and badge notifications expire three days after being downloaded.</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>When a notification expires, the content is removed from the tile or queue and is no longer shown to the user.</source>
          <target state="new">When a notification expires, the content is removed from the tile or queue and is no longer shown to the user.</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>It's a best practice to set an expiration (using a time that makes sense for your app) on all tile and badge notifications so that your tile's content doesn't persist longer than it is relevant.</source>
          <target state="new">It's a best practice to set an expiration (using a time that makes sense for your app) on all tile and badge notifications so that your tile's content doesn't persist longer than it is relevant.</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>An explicit expiration time is essential for content with a defined lifespan.</source>
          <target state="new">An explicit expiration time is essential for content with a defined lifespan.</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>This also assures the removal of stale content if your cloud service stops sending notifications, or if the user disconnects from the network for an extended period.</source>
          <target state="new">This also assures the removal of stale content if your cloud service stops sending notifications, or if the user disconnects from the network for an extended period.</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Your cloud service can set an expiration for each notification by setting the X-WNS-Expires HTTP header to specify the time (in seconds) that your notification will remain valid after it is sent.</source>
          <target state="new">Your cloud service can set an expiration for each notification by setting the X-WNS-Expires HTTP header to specify the time (in seconds) that your notification will remain valid after it is sent.</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Push notification service request and response headers<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh465435.aspx#pncodes_x_wns_ttl)</ept>.</source>
          <target state="new">For more information, see <bpt id="p1">[</bpt>Push notification service request and response headers<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh465435.aspx#pncodes_x_wns_ttl)</ept>.</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>For example, during a stock market's active trading day, you can set the expiration for a stock price update to twice that of your sending interval (such as one hour after receipt if you are sending notifications every half-hour).</source>
          <target state="new">For example, during a stock market's active trading day, you can set the expiration for a stock price update to twice that of your sending interval (such as one hour after receipt if you are sending notifications every half-hour).</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>As another example, a news app might determine that one day is an appropriate expiration time for a daily news tile update.</source>
          <target state="new">As another example, a news app might determine that one day is an appropriate expiration time for a daily news tile update.</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Push notifications and battery saver</source>
          <target state="new">Push notifications and battery saver</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Battery saver extends battery life by limiting background activity on the device.</source>
          <target state="new">Battery saver extends battery life by limiting background activity on the device.</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Windows 10 lets the user set battery saver to turn on automatically when the battery drops below a specified threshold.</source>
          <target state="new">Windows 10 lets the user set battery saver to turn on automatically when the battery drops below a specified threshold.</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>When battery saver is on, the receipt of push notifications is disabled to save energy.</source>
          <target state="new">When battery saver is on, the receipt of push notifications is disabled to save energy.</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>But there are a couple exceptions to this.</source>
          <target state="new">But there are a couple exceptions to this.</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The following Windows 10 battery saver settings (found in the <bpt id="p1">**</bpt>Settings<ept id="p1">**</ept> app) allow your app to receive push notifications even when battery saver is on.</source>
          <target state="new">The following Windows 10 battery saver settings (found in the <bpt id="p1">**</bpt>Settings<ept id="p1">**</ept> app) allow your app to receive push notifications even when battery saver is on.</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Allow push notifications from any app while in battery saver<ept id="p1">**</ept>: This setting lets all apps receive push notifications while battery saver is on.</source>
          <target state="new"><bpt id="p1">**</bpt>Allow push notifications from any app while in battery saver<ept id="p1">**</ept>: This setting lets all apps receive push notifications while battery saver is on.</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Note that this setting applies only to Windows 10 for desktop editions (Home, Pro, Enterprise, and Education).</source>
          <target state="new">Note that this setting applies only to Windows 10 for desktop editions (Home, Pro, Enterprise, and Education).</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Always allowed<ept id="p1">**</ept>: This setting lets specific apps run in the background while battery saver is on - including receiving push notifications.</source>
          <target state="new"><bpt id="p1">**</bpt>Always allowed<ept id="p1">**</ept>: This setting lets specific apps run in the background while battery saver is on - including receiving push notifications.</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>This list is maintained manually by the user.</source>
          <target state="new">This list is maintained manually by the user.</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>There is no way to check the state of these two settings, but you can check the state of battery saver.</source>
          <target state="new">There is no way to check the state of these two settings, but you can check the state of battery saver.</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>In Windows 10, use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>EnergySaverStatus<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn966190)</ept> property to check battery saver state.</source>
          <target state="new">In Windows 10, use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>EnergySaverStatus<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn966190)</ept> property to check battery saver state.</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Your app can also use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>EnergySaverStatusChanged<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn966191)</ept> event to listen for changes to battery saver.</source>
          <target state="new">Your app can also use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>EnergySaverStatusChanged<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn966191)</ept> event to listen for changes to battery saver.</target>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>If your app depends heavily on push notifications, we recommend notifying users that they may not receive notifications while battery saver is on and to make it easy for them to adjust <bpt id="p1">**</bpt>battery saver settings<ept id="p1">**</ept>.</source>
          <target state="new">If your app depends heavily on push notifications, we recommend notifying users that they may not receive notifications while battery saver is on and to make it easy for them to adjust <bpt id="p1">**</bpt>battery saver settings<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Using the battery saver settings URI scheme in Windows 10, <ph id="ph1">`ms-settings:batterysaver-settings`</ph>, you can provide a convenient link to the Settings app.</source>
          <target state="new">Using the battery saver settings URI scheme in Windows 10, <ph id="ph1">`ms-settings:batterysaver-settings`</ph>, you can provide a convenient link to the Settings app.</target>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Tip<ept id="p1">**</ept>   When notifying the user about battery saver settings, we recommend providing a way to suppress the message in the future.</source>
          <target state="new"><bpt id="p1">**</bpt>Tip<ept id="p1">**</ept>   When notifying the user about battery saver settings, we recommend providing a way to suppress the message in the future.</target>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>For example, the <ph id="ph1">`dontAskMeAgainBox`</ph> checkbox in the following example persists the user's preference in <bpt id="p1">[</bpt><bpt id="p2">**</bpt>LocalSettings<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br241622)</ept>.</source>
          <target state="new">For example, the <ph id="ph1">`dontAskMeAgainBox`</ph> checkbox in the following example persists the user's preference in <bpt id="p1">[</bpt><bpt id="p2">**</bpt>LocalSettings<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br241622)</ept>.</target>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Here's an example of how to check if battery saver is turned on in Windows 10.</source>
          <target state="new">Here's an example of how to check if battery saver is turned on in Windows 10.</target>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>This example notifies the user and launches the Settings app to <bpt id="p1">**</bpt>battery saver settings<ept id="p1">**</ept>.</source>
          <target state="new">This example notifies the user and launches the Settings app to <bpt id="p1">**</bpt>battery saver settings<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`dontAskAgainSetting`</ph> lets the user suppress the message if they don't want to be notified again.</source>
          <target state="new">The <ph id="ph1">`dontAskAgainSetting`</ph> lets the user suppress the message if they don't want to be notified again.</target>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>This is the XAML for the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ContentDialog<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn633972)</ept> featured in this example.</source>
          <target state="new">This is the XAML for the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ContentDialog<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn633972)</ept> featured in this example.</target>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Note</source>
          <target state="new">Note</target>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>This article is for Windows 10 developers writing Universal Windows Platform (UWP) apps.</source>
          <target state="new">This article is for Windows 10 developers writing Universal Windows Platform (UWP) apps.</target>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>If you’re developing for Windows 8.x or Windows Phone 8.x, see the <bpt id="p1">[</bpt>archived documentation<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept>.</source>
          <target state="new">If you’re developing for Windows 8.x or Windows Phone 8.x, see the <bpt id="p1">[</bpt>archived documentation<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept>.</target>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Related topics</source>
          <target state="new">Related topics</target>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Send a local tile notification</source>
          <target state="new">Send a local tile notification</target>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Quickstart: Sending a push notification</source>
          <target state="new">Quickstart: Sending a push notification</target>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>How to update a badge through push notifications</source>
          <target state="new">How to update a badge through push notifications</target>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>How to request, create, and save a notification channel</source>
          <target state="new">How to request, create, and save a notification channel</target>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>How to intercept notifications for running applications</source>
          <target state="new">How to intercept notifications for running applications</target>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>How to authenticate with the Windows Push Notification Service (WNS)</source>
          <target state="new">How to authenticate with the Windows Push Notification Service (WNS)</target>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Push notification service request and response headers</source>
          <target state="new">Push notification service request and response headers</target>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Guidelines and checklist for push notifications</source>
          <target state="new">Guidelines and checklist for push notifications</target>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Raw notifications</source>
          <target state="new">Raw notifications</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>