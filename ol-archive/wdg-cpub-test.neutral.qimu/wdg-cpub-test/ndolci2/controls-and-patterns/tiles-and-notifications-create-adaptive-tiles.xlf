<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci2\controls-and-patterns\tiles-and-notifications-create-adaptive-tiles.md</xliffext:olfilepath>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ee409b257cd95f225b89ac2cafac48c2910d8cbe</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-e58fd48" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Adaptive tile templates are a new feature in Windows 10, allowing you to design your own tile notification content using a simple and flexible markup language that adapts to different screen densities.</source>
          <target state="new">Adaptive tile templates are a new feature in Windows 10, allowing you to design your own tile notification content using a simple and flexible markup language that adapts to different screen densities.</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Create adaptive tiles</source>
          <target state="new">Create adaptive tiles</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Create adaptive tiles</source>
          <target state="new">Create adaptive tiles</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Updated for UWP apps on Windows 10.</source>
          <target state="new">Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept></source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept></target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Adaptive tile templates are a new feature in Windows 10, allowing you to design your own tile notification content using a simple and flexible markup language that adapts to different screen densities.</source>
          <target state="new">Adaptive tile templates are a new feature in Windows 10, allowing you to design your own tile notification content using a simple and flexible markup language that adapts to different screen densities.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This article tells you how to create adaptive live tiles for your Universal Windows Platform (UWP) app.</source>
          <target state="new">This article tells you how to create adaptive live tiles for your Universal Windows Platform (UWP) app.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For the complete list of adaptive elements and attributes, see the <bpt id="p1">[</bpt>Adaptive tiles schema<ept id="p1">](tiles-and-notifications-adaptive-tiles-schema.md)</ept>.</source>
          <target state="new">For the complete list of adaptive elements and attributes, see the <bpt id="p1">[</bpt>Adaptive tiles schema<ept id="p1">](tiles-and-notifications-adaptive-tiles-schema.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>(If you'd like, you can still use the preset templates from the <bpt id="p1">[</bpt>Windows 8 tile template catalog<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh761491)</ept> when designing notifications for Windows 10.)</source>
          <target state="new">(If you'd like, you can still use the preset templates from the <bpt id="p1">[</bpt>Windows 8 tile template catalog<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh761491)</ept> when designing notifications for Windows 10.)</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Getting started</source>
          <target state="new">Getting started</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Install NotificationsExtensions.</source>
          <target state="new">Install NotificationsExtensions.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If you'd like to use C# instead of XML to generate notifications, install the NuGet package named <bpt id="p1">[</bpt>NotificationsExtensions<ept id="p1">](https://github.com/WindowsNotifications/NotificationsExtensions/wiki)</ept>.</source>
          <target state="new">If you'd like to use C# instead of XML to generate notifications, install the NuGet package named <bpt id="p1">[</bpt>NotificationsExtensions<ept id="p1">](https://github.com/WindowsNotifications/NotificationsExtensions/wiki)</ept>.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The C# samples provided in this article use NotificationsExtensions.</source>
          <target state="new">The C# samples provided in this article use NotificationsExtensions.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Install Notifications Visualizer.</source>
          <target state="new">Install Notifications Visualizer.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This free UWP app helps you design adaptive live tiles by providing an instant visual preview of your tile as you edit it, similar to Visual Studio's XAML editor/design view.</source>
          <target state="new">This free UWP app helps you design adaptive live tiles by providing an instant visual preview of your tile as you edit it, similar to Visual Studio's XAML editor/design view.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You can read <bpt id="p1">[</bpt>this blog post<ept id="p1">](http://blogs.msdn.com/b/tiles_and_toasts/archive/2015/09/22/introducing-notifications-visualizer-for-windows-10.aspx)</ept> for more information, and you can download Notifications Visualizer <bpt id="p2">[</bpt>here<ept id="p2">](https://www.microsoft.com/store/apps/notifications-visualizer/9nblggh5xsl1)</ept>.</source>
          <target state="new">You can read <bpt id="p1">[</bpt>this blog post<ept id="p1">](http://blogs.msdn.com/b/tiles_and_toasts/archive/2015/09/22/introducing-notifications-visualizer-for-windows-10.aspx)</ept> for more information, and you can download Notifications Visualizer <bpt id="p2">[</bpt>here<ept id="p2">](https://www.microsoft.com/store/apps/notifications-visualizer/9nblggh5xsl1)</ept>.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Usage guidance</source>
          <target state="new">Usage guidance</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Adaptive templates are designed to work across different form factors and notification types.</source>
          <target state="new">Adaptive templates are designed to work across different form factors and notification types.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Elements such as group and subgroup link together content and don't imply a particular visual behavior on their own.</source>
          <target state="new">Elements such as group and subgroup link together content and don't imply a particular visual behavior on their own.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The final appearance of a notification should be based on the specific device on which it will appear, whether it's phone, tablet, or desktop, or another device.</source>
          <target state="new">The final appearance of a notification should be based on the specific device on which it will appear, whether it's phone, tablet, or desktop, or another device.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Hints are optional attributes that can be added to elements in order to achieve a specific visual behavior.</source>
          <target state="new">Hints are optional attributes that can be added to elements in order to achieve a specific visual behavior.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Hints can be device-specific or notification-specific.</source>
          <target state="new">Hints can be device-specific or notification-specific.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>A basic example</source>
          <target state="new">A basic example</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This example demonstrates what the adaptive tile templates can produce.</source>
          <target state="new">This example demonstrates what the adaptive tile templates can produce.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Result:</source>
          <target state="new">Result:</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>quick sample tile</source>
          <target state="new">quick sample tile</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Tile sizes</source>
          <target state="new">Tile sizes</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Content for each tile size is individually specified in separate <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>binding<ph id="ph2">&amp;gt;</ph><ept id="p1">](tiles-and-notifications-adaptive-tiles-schema.md)</ept> elements within the XML payload.</source>
          <target state="new">Content for each tile size is individually specified in separate <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>binding<ph id="ph2">&amp;gt;</ph><ept id="p1">](tiles-and-notifications-adaptive-tiles-schema.md)</ept> elements within the XML payload.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Choose the target size by setting the template attribute to one of the following values:</source>
          <target state="new">Choose the target size by setting the template attribute to one of the following values:</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>TileSmall</source>
          <target state="new">TileSmall</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>TileMedium</source>
          <target state="new">TileMedium</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>TileWide</source>
          <target state="new">TileWide</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>TileLarge (only for desktop)</source>
          <target state="new">TileLarge (only for desktop)</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>For a single tile notification XML payload, provide <ph id="ph1">&amp;lt;</ph>binding<ph id="ph2">&amp;gt;</ph> elements for each tile size that you'd like to support, as shown in this example:</source>
          <target state="new">For a single tile notification XML payload, provide <ph id="ph1">&amp;lt;</ph>binding<ph id="ph2">&amp;gt;</ph> elements for each tile size that you'd like to support, as shown in this example:</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Result:</source>
          <target state="new">Result:</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>adaptive tile sizes: small, medium, wide, and large</source>
          <target state="new">adaptive tile sizes: small, medium, wide, and large</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Branding</source>
          <target state="new">Branding</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>You can control the branding on the bottom of a live tile (the display name and corner logo) by using the branding attribute on the notification payload.</source>
          <target state="new">You can control the branding on the bottom of a live tile (the display name and corner logo) by using the branding attribute on the notification payload.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>You can choose to display "none," only the "name," only the "logo," or both with "nameAndLogo."</source>
          <target state="new">You can choose to display "none," only the "name," only the "logo," or both with "nameAndLogo."</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  Windows Phone doesn't support the corner logo, so "logo" and "nameAndLogo" default to "name" on phone.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  Windows Phone doesn't support the corner logo, so "logo" and "nameAndLogo" default to "name" on phone.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Result:</source>
          <target state="new">Result:</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>adaptive tiles, name and logo</source>
          <target state="new">adaptive tiles, name and logo</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Branding can be applied for specific tile sizes one of two ways:</source>
          <target state="new">Branding can be applied for specific tile sizes one of two ways:</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>By applying the attribute on the <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>binding<ph id="ph2">&amp;gt;</ph><ept id="p1">](tiles-and-notifications-adaptive-tiles-schema.md)</ept> element</source>
          <target state="new">By applying the attribute on the <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>binding<ph id="ph2">&amp;gt;</ph><ept id="p1">](tiles-and-notifications-adaptive-tiles-schema.md)</ept> element</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>By applying the attribute on the <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>visual<ph id="ph2">&amp;gt;</ph><ept id="p1">](tiles-and-notifications-adaptive-tiles-schema.md)</ept> element, which affects the entire notification payload If you don't specify branding for a binding, it will use the branding that's provided on the visual element.</source>
          <target state="new">By applying the attribute on the <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>visual<ph id="ph2">&amp;gt;</ph><ept id="p1">](tiles-and-notifications-adaptive-tiles-schema.md)</ept> element, which affects the entire notification payload If you don't specify branding for a binding, it will use the branding that's provided on the visual element.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Default branding result:</source>
          <target state="new">Default branding result:</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>default branding on tiles</source>
          <target state="new">default branding on tiles</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>If you don't specify the branding in your notification payload, the base tile's properties will determine the branding.</source>
          <target state="new">If you don't specify the branding in your notification payload, the base tile's properties will determine the branding.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>If the base tile shows the display name, then the branding will default to "name."</source>
          <target state="new">If the base tile shows the display name, then the branding will default to "name."</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Otherwise, the branding will default to "none" if the display name isn't shown.</source>
          <target state="new">Otherwise, the branding will default to "none" if the display name isn't shown.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>   This is a change from Windows 8.x, in which the default branding was "logo."</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>   This is a change from Windows 8.x, in which the default branding was "logo."</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Display name</source>
          <target state="new">Display name</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>You can override the display name of a notification by entering the text string of your choice with the <bpt id="p1">**</bpt>displayName<ept id="p1">**</ept> attribute.</source>
          <target state="new">You can override the display name of a notification by entering the text string of your choice with the <bpt id="p1">**</bpt>displayName<ept id="p1">**</ept> attribute.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>As with branding, you can specify this on the <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>visual<ph id="ph2">&amp;gt;</ph><ept id="p1">](tiles-and-notifications-adaptive-tiles-schema.md)</ept> element, which affects the entire notification payload, or on the <bpt id="p2">[</bpt><ph id="ph3">&amp;lt;</ph>binding<ph id="ph4">&amp;gt;</ph><ept id="p2">](tiles-and-notifications-adaptive-tiles-schema.md)</ept> element, which only affects individual tiles.</source>
          <target state="new">As with branding, you can specify this on the <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>visual<ph id="ph2">&amp;gt;</ph><ept id="p1">](tiles-and-notifications-adaptive-tiles-schema.md)</ept> element, which affects the entire notification payload, or on the <bpt id="p2">[</bpt><ph id="ph3">&amp;lt;</ph>binding<ph id="ph4">&amp;gt;</ph><ept id="p2">](tiles-and-notifications-adaptive-tiles-schema.md)</ept> element, which only affects individual tiles.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Result:</source>
          <target state="new">Result:</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>adaptive tiles display name</source>
          <target state="new">adaptive tiles display name</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Text</source>
          <target state="new">Text</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>text<ph id="ph2">&amp;gt;</ph><ept id="p1">](tiles-and-notifications-adaptive-tiles-schema.md)</ept> element is used to display text.</source>
          <target state="new">The <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>text<ph id="ph2">&amp;gt;</ph><ept id="p1">](tiles-and-notifications-adaptive-tiles-schema.md)</ept> element is used to display text.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>You can use hints to modify how text appears.</source>
          <target state="new">You can use hints to modify how text appears.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Result:</source>
          <target state="new">Result:</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>adaptive tile text</source>
          <target state="new">adaptive tile text</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Text wrapping</source>
          <target state="new">Text wrapping</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>By default, text doesn't wrap and will continue off the edge of the tile.</source>
          <target state="new">By default, text doesn't wrap and will continue off the edge of the tile.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">**</bpt>hint-wrap<ept id="p1">**</ept> attribute to set text wrapping on a text element.</source>
          <target state="new">Use the <bpt id="p1">**</bpt>hint-wrap<ept id="p1">**</ept> attribute to set text wrapping on a text element.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>You can also control the minimum and maximum number of lines by using <bpt id="p1">**</bpt>hint-minLines<ept id="p1">**</ept> and <bpt id="p2">**</bpt>hint-maxLines<ept id="p2">**</ept>, both of which accept positive integers.</source>
          <target state="new">You can also control the minimum and maximum number of lines by using <bpt id="p1">**</bpt>hint-minLines<ept id="p1">**</ept> and <bpt id="p2">**</bpt>hint-maxLines<ept id="p2">**</ept>, both of which accept positive integers.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Result:</source>
          <target state="new">Result:</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>adaptive tile with text wrapping</source>
          <target state="new">adaptive tile with text wrapping</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Text styles</source>
          <target state="new">Text styles</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Styles control the font size, color, and weight of text elements.</source>
          <target state="new">Styles control the font size, color, and weight of text elements.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>There are a number of available styles, including a "subtle" variation of each style that sets the opacity to 60%, which usually makes the text color a shade of light gray.</source>
          <target state="new">There are a number of available styles, including a "subtle" variation of each style that sets the opacity to 60%, which usually makes the text color a shade of light gray.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Result:</source>
          <target state="new">Result:</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>adaptive tiles text styles</source>
          <target state="new">adaptive tiles text styles</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  The style defaults to caption if hint-style isn't specified.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  The style defaults to caption if hint-style isn't specified.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Basic text styles</source>
          <target state="new">Basic text styles</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>text hint-style="<ph id="ph1">\*</ph>" /</source>
          <target state="new">text hint-style="<ph id="ph1">\*</ph>" /</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Font height</source>
          <target state="new">Font height</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Font weight</source>
          <target state="new">Font weight</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>caption</source>
          <target state="new">caption</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>12 effective pixels (epx)</source>
          <target state="new">12 effective pixels (epx)</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Regular</source>
          <target state="new">Regular</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>body</source>
          <target state="new">body</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>15 epx</source>
          <target state="new">15 epx</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Regular</source>
          <target state="new">Regular</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>base</source>
          <target state="new">base</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>15 epx</source>
          <target state="new">15 epx</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Semibold</source>
          <target state="new">Semibold</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>subtitle</source>
          <target state="new">subtitle</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>20 epx</source>
          <target state="new">20 epx</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Regular</source>
          <target state="new">Regular</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>title</source>
          <target state="new">title</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>24 epx</source>
          <target state="new">24 epx</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Semilight</source>
          <target state="new">Semilight</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>subheader</source>
          <target state="new">subheader</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>34 epx</source>
          <target state="new">34 epx</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Light</source>
          <target state="new">Light</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>header</source>
          <target state="new">header</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>46 epx</source>
          <target state="new">46 epx</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Light</source>
          <target state="new">Light</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Numeral text style variations</source>
          <target state="new">Numeral text style variations</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>These variations reduce the line height so that content above and below come much closer to the text.</source>
          <target state="new">These variations reduce the line height so that content above and below come much closer to the text.</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>titleNumeral</source>
          <target state="new">titleNumeral</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>subheaderNumeral</source>
          <target state="new">subheaderNumeral</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>headerNumeral</source>
          <target state="new">headerNumeral</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Subtle text style variations</source>
          <target state="new">Subtle text style variations</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Each style has a subtle variation that gives the text a 60% opacity, which usually makes the text color a shade of light gray.</source>
          <target state="new">Each style has a subtle variation that gives the text a 60% opacity, which usually makes the text color a shade of light gray.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>captionSubtle</source>
          <target state="new">captionSubtle</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>bodySubtle</source>
          <target state="new">bodySubtle</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>baseSubtle</source>
          <target state="new">baseSubtle</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>subtitleSubtle</source>
          <target state="new">subtitleSubtle</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>titleSubtle</source>
          <target state="new">titleSubtle</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>titleNumeralSubtle</source>
          <target state="new">titleNumeralSubtle</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>subheaderSubtle</source>
          <target state="new">subheaderSubtle</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>subheaderNumeralSubtle</source>
          <target state="new">subheaderNumeralSubtle</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>headerSubtle</source>
          <target state="new">headerSubtle</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>headerNumeralSubtle</source>
          <target state="new">headerNumeralSubtle</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Text alignment</source>
          <target state="new">Text alignment</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Text can be horizontally aligned left, center, or right.</source>
          <target state="new">Text can be horizontally aligned left, center, or right.</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>In left-to-right languages like English, text defaults to left-aligned.</source>
          <target state="new">In left-to-right languages like English, text defaults to left-aligned.</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>In right-to-left languages like Arabic, text defaults to right-aligned.</source>
          <target state="new">In right-to-left languages like Arabic, text defaults to right-aligned.</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>You can manually set alignment with the <bpt id="p1">**</bpt>hint-align<ept id="p1">**</ept> attribute on elements.</source>
          <target state="new">You can manually set alignment with the <bpt id="p1">**</bpt>hint-align<ept id="p1">**</ept> attribute on elements.</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Result:</source>
          <target state="new">Result:</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>adaptive tiles text alignment</source>
          <target state="new">adaptive tiles text alignment</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Groups and subgroups</source>
          <target state="new">Groups and subgroups</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Groups allow you to semantically declare that the content inside the group is related and must be displayed in its entirety for the content to make sense.</source>
          <target state="new">Groups allow you to semantically declare that the content inside the group is related and must be displayed in its entirety for the content to make sense.</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>For example, you might have two text elements, a header, and a subheader, and it would not make sense for only the header to be shown.</source>
          <target state="new">For example, you might have two text elements, a header, and a subheader, and it would not make sense for only the header to be shown.</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>By grouping those elements inside a subgroup, the elements will either all be displayed (if they can fit) or not be displayed at all (because they can't fit).</source>
          <target state="new">By grouping those elements inside a subgroup, the elements will either all be displayed (if they can fit) or not be displayed at all (because they can't fit).</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>To provide the best experience across devices and screens, provide multiple groups.</source>
          <target state="new">To provide the best experience across devices and screens, provide multiple groups.</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Having multiple groups allows your tile to adapt to larger screens.</source>
          <target state="new">Having multiple groups allows your tile to adapt to larger screens.</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  The only valid child of a group is a subgroup.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  The only valid child of a group is a subgroup.</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Result:</source>
          <target state="new">Result:</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>adaptive tiles groups and subgroups</source>
          <target state="new">adaptive tiles groups and subgroups</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Subgroups (columns)</source>
          <target state="new">Subgroups (columns)</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Subgroups also allow you to divide data into semantic sections within a group.</source>
          <target state="new">Subgroups also allow you to divide data into semantic sections within a group.</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>For live tiles, this visually translates to columns.</source>
          <target state="new">For live tiles, this visually translates to columns.</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>hint-weight<ept id="p1">**</ept> attribute lets you to control the widths of columns.</source>
          <target state="new">The <bpt id="p1">**</bpt>hint-weight<ept id="p1">**</ept> attribute lets you to control the widths of columns.</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The value of <bpt id="p1">**</bpt>hint-weight<ept id="p1">**</ept> is expressed as a weighted proportion of available space, which is identical to <bpt id="p2">**</bpt>GridUnitType.Star<ept id="p2">**</ept> behavior.</source>
          <target state="new">The value of <bpt id="p1">**</bpt>hint-weight<ept id="p1">**</ept> is expressed as a weighted proportion of available space, which is identical to <bpt id="p2">**</bpt>GridUnitType.Star<ept id="p2">**</ept> behavior.</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>For equal-width columns, assign each weight to 1.</source>
          <target state="new">For equal-width columns, assign each weight to 1.</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>hint-weight</source>
          <target state="new">hint-weight</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Percentage of width</source>
          <target state="new">Percentage of width</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>1</source>
          <target state="new">1</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>25%</source>
          <target state="new">25%</target>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>1</source>
          <target state="new">1</target>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>25%</source>
          <target state="new">25%</target>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>1</source>
          <target state="new">1</target>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>25%</source>
          <target state="new">25%</target>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>1</source>
          <target state="new">1</target>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>25%</source>
          <target state="new">25%</target>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Total weight: 4</source>
          <target state="new">Total weight: 4</target>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>subgroups, even columns</source>
          <target state="new">subgroups, even columns</target>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>To make one column twice as large as another column, assign the smaller column a weight of 1 and the larger column a weight of 2.</source>
          <target state="new">To make one column twice as large as another column, assign the smaller column a weight of 1 and the larger column a weight of 2.</target>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>hint-weight</source>
          <target state="new">hint-weight</target>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Percentage of width</source>
          <target state="new">Percentage of width</target>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>1</source>
          <target state="new">1</target>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>33.3%</source>
          <target state="new">33.3%</target>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>2</source>
          <target state="new">2</target>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>66.7%</source>
          <target state="new">66.7%</target>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Total weight: 3</source>
          <target state="new">Total weight: 3</target>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>subgroups, one column twice the size of the other</source>
          <target state="new">subgroups, one column twice the size of the other</target>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>If you want your first column to take up 20% of the total width and your second column to take up 80% of the total width, assign the first weight to 20 and the second weight to 80.</source>
          <target state="new">If you want your first column to take up 20% of the total width and your second column to take up 80% of the total width, assign the first weight to 20 and the second weight to 80.</target>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>If your total weights equal 100, they'll act as percentages.</source>
          <target state="new">If your total weights equal 100, they'll act as percentages.</target>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>hint-weight</source>
          <target state="new">hint-weight</target>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Percentage of width</source>
          <target state="new">Percentage of width</target>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>20</source>
          <target state="new">20</target>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>20%</source>
          <target state="new">20%</target>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>80</source>
          <target state="new">80</target>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>80%</source>
          <target state="new">80%</target>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Total weight: 100</source>
          <target state="new">Total weight: 100</target>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>subgroups, with weights totalling 100</source>
          <target state="new">subgroups, with weights totalling 100</target>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  An 8-pixel margin is automatically added between the columns.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  An 8-pixel margin is automatically added between the columns.</target>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>When you have more than two subgroups, you should specify the <bpt id="p1">**</bpt>hint-weight<ept id="p1">**</ept>, which only accepts positive integers.</source>
          <target state="new">When you have more than two subgroups, you should specify the <bpt id="p1">**</bpt>hint-weight<ept id="p1">**</ept>, which only accepts positive integers.</target>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>If you don't specify hint-weight for the first subgroup, it will be assigned a weight of 50.</source>
          <target state="new">If you don't specify hint-weight for the first subgroup, it will be assigned a weight of 50.</target>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The next subgroup that doesn't have a specified hint-weight will be assigned a weight equal to 100 minus the sum of the preceding weights, or to 1 if the result is zero.</source>
          <target state="new">The next subgroup that doesn't have a specified hint-weight will be assigned a weight equal to 100 minus the sum of the preceding weights, or to 1 if the result is zero.</target>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>The remaining subgroups that don't have specified hint-weights will be assigned a weight of 1.</source>
          <target state="new">The remaining subgroups that don't have specified hint-weights will be assigned a weight of 1.</target>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Here's sample code for a weather tile that shows how you can achieve a tile with five columns of equal width:</source>
          <target state="new">Here's sample code for a weather tile that shows how you can achieve a tile with five columns of equal width:</target>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Result:</source>
          <target state="new">Result:</target>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>example of a weather tile</source>
          <target state="new">example of a weather tile</target>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Images</source>
          <target state="new">Images</target>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&amp;lt;</ph>image<ph id="ph2">&amp;gt;</ph> element is used to display images on the tile notification.</source>
          <target state="new">The <ph id="ph1">&amp;lt;</ph>image<ph id="ph2">&amp;gt;</ph> element is used to display images on the tile notification.</target>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Images can be placed inline within the tile content (default), as a background image behind your content, or as a peek image that animates in from the top of the notification.</source>
          <target state="new">Images can be placed inline within the tile content (default), as a background image behind your content, or as a peek image that animates in from the top of the notification.</target>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>   There are <bpt id="p2">[</bpt>restrictions on the file size and dimensions of images<ept id="p2">](https://msdn.microsoft.com/library/windows/apps/hh781198)</ept>.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>   There are <bpt id="p2">[</bpt>restrictions on the file size and dimensions of images<ept id="p2">](https://msdn.microsoft.com/library/windows/apps/hh781198)</ept>.</target>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>With no extra behaviors specified, images will uniformly shrink or expand to fill the available width.</source>
          <target state="new">With no extra behaviors specified, images will uniformly shrink or expand to fill the available width.</target>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>The sample below shows a tile using two columns and inline images.</source>
          <target state="new">The sample below shows a tile using two columns and inline images.</target>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>The inline images stretch to fill the width of the column.</source>
          <target state="new">The inline images stretch to fill the width of the column.</target>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Result:</source>
          <target state="new">Result:</target>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>image example</source>
          <target state="new">image example</target>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Images placed in the <ph id="ph1">&amp;lt;</ph>binding<ph id="ph2">&amp;gt;</ph> root, or in the first group, will also stretch to fit the available height.</source>
          <target state="new">Images placed in the <ph id="ph1">&amp;lt;</ph>binding<ph id="ph2">&amp;gt;</ph> root, or in the first group, will also stretch to fit the available height.</target>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Image alignment</source>
          <target state="new">Image alignment</target>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Images can be set to align left, center, or right using the <bpt id="p1">**</bpt>hint-align<ept id="p1">**</ept> attribute.</source>
          <target state="new">Images can be set to align left, center, or right using the <bpt id="p1">**</bpt>hint-align<ept id="p1">**</ept> attribute.</target>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>This will also cause images to display at their native resolution instead of stretching to fill width.</source>
          <target state="new">This will also cause images to display at their native resolution instead of stretching to fill width.</target>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Result:</source>
          <target state="new">Result:</target>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>image alignment example (left, center, right)</source>
          <target state="new">image alignment example (left, center, right)</target>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Image margins</source>
          <target state="new">Image margins</target>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>By default, inline images have an 8-pixel margin between any content above or below the image.</source>
          <target state="new">By default, inline images have an 8-pixel margin between any content above or below the image.</target>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>This margin can be removed by using the <bpt id="p1">**</bpt>hint-removeMargin<ept id="p1">**</ept> attribute on the image.</source>
          <target state="new">This margin can be removed by using the <bpt id="p1">**</bpt>hint-removeMargin<ept id="p1">**</ept> attribute on the image.</target>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>However, images always retain the 8-pixel margin from the edge of the tile, and subgroups (columns) always retain the 8-pixel padding between columns.</source>
          <target state="new">However, images always retain the 8-pixel margin from the edge of the tile, and subgroups (columns) always retain the 8-pixel padding between columns.</target>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>hint remove margin example</source>
          <target state="new">hint remove margin example</target>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Image cropping</source>
          <target state="new">Image cropping</target>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Images can be cropped into a circle using the <bpt id="p1">**</bpt>hint-crop<ept id="p1">**</ept> attribute, which currently only supports the values "none" (default) or "circle."</source>
          <target state="new">Images can be cropped into a circle using the <bpt id="p1">**</bpt>hint-crop<ept id="p1">**</ept> attribute, which currently only supports the values "none" (default) or "circle."</target>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Result:</source>
          <target state="new">Result:</target>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>image cropping example</source>
          <target state="new">image cropping example</target>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>Background image</source>
          <target state="new">Background image</target>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>To set a background image, place an image element in the root of the <ph id="ph1">&amp;lt;</ph>binding<ph id="ph2">&amp;gt;</ph> and set the placement attribute to "background."</source>
          <target state="new">To set a background image, place an image element in the root of the <ph id="ph1">&amp;lt;</ph>binding<ph id="ph2">&amp;gt;</ph> and set the placement attribute to "background."</target>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>Result:</source>
          <target state="new">Result:</target>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>background image example</source>
          <target state="new">background image example</target>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Additionally, you can set a black overlay on your background image using <bpt id="p1">**</bpt>hint-overlay<ept id="p1">**</ept>, which accepts integers from 0-100, with 0 being no overlay and 100 being full black overlay.</source>
          <target state="new">Additionally, you can set a black overlay on your background image using <bpt id="p1">**</bpt>hint-overlay<ept id="p1">**</ept>, which accepts integers from 0-100, with 0 being no overlay and 100 being full black overlay.</target>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>The default value is 20.</source>
          <target state="new">The default value is 20.</target>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>hint-overlay Result:</source>
          <target state="new">hint-overlay Result:</target>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>example of an image hint overlay</source>
          <target state="new">example of an image hint overlay</target>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Peek image</source>
          <target state="new">Peek image</target>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>You can specify an image that "peeks" in from the top of the tile.</source>
          <target state="new">You can specify an image that "peeks" in from the top of the tile.</target>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>The peek image uses an animation to slide down/up from the top of the tile, peeking into view, and then later sliding back out to reveal the main content on the tile.</source>
          <target state="new">The peek image uses an animation to slide down/up from the top of the tile, peeking into view, and then later sliding back out to reveal the main content on the tile.</target>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>To set a peek image, place an image element in the root of the <ph id="ph1">&amp;lt;</ph>binding<ph id="ph2">&amp;gt;</ph>, and set the placement attribute to "peek."</source>
          <target state="new">To set a peek image, place an image element in the root of the <ph id="ph1">&amp;lt;</ph>binding<ph id="ph2">&amp;gt;</ph>, and set the placement attribute to "peek."</target>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>examples of peeking images</source>
          <target state="new">examples of peeking images</target>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Circle crop for peek and background images</source>
          <target state="new">Circle crop for peek and background images</target>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>Use the following attribute on peek and background images to do a circle crop:</source>
          <target state="new">Use the following attribute on peek and background images to do a circle crop:</target>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>hint-crop="circle"</source>
          <target state="new">hint-crop="circle"</target>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>The result will look like this:</source>
          <target state="new">The result will look like this:</target>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>circle crop for peek and background image</source>
          <target state="new">circle crop for peek and background image</target>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Use both peek and background image</source>
          <target state="new">Use both peek and background image</target>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>To use both a peek and a background image on a tile notification, specify both a peek image and a background image in your notification payload.</source>
          <target state="new">To use both a peek and a background image on a tile notification, specify both a peek image and a background image in your notification payload.</target>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>The result will look like this:</source>
          <target state="new">The result will look like this:</target>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>peek and background image used together</source>
          <target state="new">peek and background image used together</target>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>Use hint-overlay on a peek image</source>
          <target state="new">Use hint-overlay on a peek image</target>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>You can use <bpt id="p1">**</bpt>hint-overlay<ept id="p1">**</ept> on a peek image to add opacity and make the tile's display name more legible.</source>
          <target state="new">You can use <bpt id="p1">**</bpt>hint-overlay<ept id="p1">**</ept> on a peek image to add opacity and make the tile's display name more legible.</target>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>If you specify <bpt id="p1">**</bpt>hint-overlay<ept id="p1">**</ept> on the <ph id="ph1">&amp;lt;</ph>binding<ph id="ph2">&amp;gt;</ph> element, the overlay will be applied to both the background and the peek image.</source>
          <target state="new">If you specify <bpt id="p1">**</bpt>hint-overlay<ept id="p1">**</ept> on the <ph id="ph1">&amp;lt;</ph>binding<ph id="ph2">&amp;gt;</ph> element, the overlay will be applied to both the background and the peek image.</target>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>You can also apply <bpt id="p1">**</bpt>hint-overlay<ept id="p1">**</ept> to an <ph id="ph1">&amp;lt;</ph>image<ph id="ph2">&amp;gt;</ph> element that has placement="peek" or placement="background" to have discrete opacity levels for each of those images.</source>
          <target state="new">You can also apply <bpt id="p1">**</bpt>hint-overlay<ept id="p1">**</ept> to an <ph id="ph1">&amp;lt;</ph>image<ph id="ph2">&amp;gt;</ph> element that has placement="peek" or placement="background" to have discrete opacity levels for each of those images.</target>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>If you don't specify an overlay, the background image opacity defaults to 20% and the peek image opacity defaults to 0%.</source>
          <target state="new">If you don't specify an overlay, the background image opacity defaults to 20% and the peek image opacity defaults to 0%.</target>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>This example shows a background image at 20% opacity (left) and at 0% opacity (right):</source>
          <target state="new">This example shows a background image at 20% opacity (left) and at 0% opacity (right):</target>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>hint-overlay on a peek image</source>
          <target state="new">hint-overlay on a peek image</target>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>Vertical alignment (text stacking)</source>
          <target state="new">Vertical alignment (text stacking)</target>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>You can control the vertical alignment of content on your tile by using the <bpt id="p1">**</bpt>hint-textStacking<ept id="p1">**</ept> attribute on both the <bpt id="p2">[</bpt><ph id="ph1">&amp;lt;</ph>binding<ph id="ph2">&amp;gt;</ph><ept id="p2">](tiles-and-notifications-adaptive-tiles-schema.md)</ept> element and <bpt id="p3">[</bpt><ph id="ph3">&amp;lt;</ph>subgroup<ph id="ph4">&amp;gt;</ph><ept id="p3">](tiles-and-notifications-adaptive-tiles-schema.md)</ept> element.</source>
          <target state="new">You can control the vertical alignment of content on your tile by using the <bpt id="p1">**</bpt>hint-textStacking<ept id="p1">**</ept> attribute on both the <bpt id="p2">[</bpt><ph id="ph1">&amp;lt;</ph>binding<ph id="ph2">&amp;gt;</ph><ept id="p2">](tiles-and-notifications-adaptive-tiles-schema.md)</ept> element and <bpt id="p3">[</bpt><ph id="ph3">&amp;lt;</ph>subgroup<ph id="ph4">&amp;gt;</ph><ept id="p3">](tiles-and-notifications-adaptive-tiles-schema.md)</ept> element.</target>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>By default, everything is vertically aligned to the top, but you can also align content to the bottom or center.</source>
          <target state="new">By default, everything is vertically aligned to the top, but you can also align content to the bottom or center.</target>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>Text stacking on binding element</source>
          <target state="new">Text stacking on binding element</target>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>When applied at the <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>binding<ph id="ph2">&amp;gt;</ph><ept id="p1">](tiles-and-notifications-adaptive-tiles-schema.md)</ept> level, text stacking sets the vertical alignment of the notification content as a whole, aligning in the available vertical space above the branding/badge area.</source>
          <target state="new">When applied at the <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>binding<ph id="ph2">&amp;gt;</ph><ept id="p1">](tiles-and-notifications-adaptive-tiles-schema.md)</ept> level, text stacking sets the vertical alignment of the notification content as a whole, aligning in the available vertical space above the branding/badge area.</target>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>text stacking on binding element</source>
          <target state="new">text stacking on binding element</target>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>Text stacking on subgroup element</source>
          <target state="new">Text stacking on subgroup element</target>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>When applied at the <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>subgroup<ph id="ph2">&amp;gt;</ph><ept id="p1">](tiles-and-notifications-adaptive-tiles-schema.md)</ept> level, text stacking sets the vertical alignment of the subgroup (column) content, aligning in the available vertical space within the entire group.</source>
          <target state="new">When applied at the <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>subgroup<ph id="ph2">&amp;gt;</ph><ept id="p1">](tiles-and-notifications-adaptive-tiles-schema.md)</ept> level, text stacking sets the vertical alignment of the subgroup (column) content, aligning in the available vertical space within the entire group.</target>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>Related topics</source>
          <target state="new">Related topics</target>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>Adaptive tiles schema</source>
          <target state="new">Adaptive tiles schema</target>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>NotificationsExtensions on GitHub</source>
          <target state="new">NotificationsExtensions on GitHub</target>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>Special tile templates catalog</source>
          <target state="new">Special tile templates catalog</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>