<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci2\controls-and-patterns\custom-transport-controls.md</xliffext:olfilepath>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a0a86971d0c663daa7d2374ddebbb95b5ca56c3c</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-e58fd48" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>The media player has customizable XAML transport controls to manage control of audio and video content.</source>
          <target state="new">The media player has customizable XAML transport controls to manage control of audio and video content.</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Create custom media transport controls</source>
          <target state="new">Create custom media transport controls</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Create custom transport controls</source>
          <target state="new">Create custom transport controls</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>MediaElement has customizable XAML transport controls to manage control of audio and video content within a Universal Windows Platform (UWP) app.</source>
          <target state="new">MediaElement has customizable XAML transport controls to manage control of audio and video content within a Universal Windows Platform (UWP) app.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Here, we demonstrate how to customize the MediaTransportControls template.</source>
          <target state="new">Here, we demonstrate how to customize the MediaTransportControls template.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>We’ll show you how to work with the overflow menu, add a custom button, modify the slider, and change colors.</source>
          <target state="new">We’ll show you how to work with the overflow menu, add a custom button, modify the slider, and change colors.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Before starting, you should be familiar with the MediaElement and the MediaTransportControls classes.</source>
          <target state="new">Before starting, you should be familiar with the MediaElement and the MediaTransportControls classes.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For more info, see the MediaElement control guide.</source>
          <target state="new">For more info, see the MediaElement control guide.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Tip<ept id="p1">**</ept><ph id="ph1">&amp;nbsp;&amp;nbsp;</ph>The examples in this topic are based on the <bpt id="p2">[</bpt>Media Transport Controls sample<ept id="p2">](http://go.microsoft.com/fwlink/p/?LinkId=620023)</ept>.</source>
          <target state="new"><bpt id="p1">**</bpt>Tip<ept id="p1">**</ept><ph id="ph1">&amp;nbsp;&amp;nbsp;</ph>The examples in this topic are based on the <bpt id="p2">[</bpt>Media Transport Controls sample<ept id="p2">](http://go.microsoft.com/fwlink/p/?LinkId=620023)</ept>.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You can download the sample to view and run the completed code.</source>
          <target state="new">You can download the sample to view and run the completed code.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Important APIs</source>
          <target state="new">Important APIs</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>MediaElement</source>
          <target state="new">MediaElement</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>MediaElement.AreTransportControlsEnabled</source>
          <target state="new">MediaElement.AreTransportControlsEnabled</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>MediaTransportControls</source>
          <target state="new">MediaTransportControls</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>When should you customize the template?</source>
          <target state="new">When should you customize the template?</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>MediaElement<ept id="p1">**</ept> has built-in transport controls that are designed to work well without modification in most video and audio playback apps.</source>
          <target state="new"><bpt id="p1">**</bpt>MediaElement<ept id="p1">**</ept> has built-in transport controls that are designed to work well without modification in most video and audio playback apps.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>They’re provided by the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MediaTransportControls<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.mediatransportcontrols.aspx)</ept> class and include buttons to play, stop, and navigate media, adjust volume, toggle full screen, cast to a second device, enable captions, switch audio tracks, and adjust the playback rate.</source>
          <target state="new">They’re provided by the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MediaTransportControls<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.mediatransportcontrols.aspx)</ept> class and include buttons to play, stop, and navigate media, adjust volume, toggle full screen, cast to a second device, enable captions, switch audio tracks, and adjust the playback rate.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>MediaTransportControls has properties that let you control whether each button is shown and enabled.</source>
          <target state="new">MediaTransportControls has properties that let you control whether each button is shown and enabled.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You can also set the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IsCompact<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.mediatransportcontrols.iscompact.aspx)</ept> property to specify whether the controls are shown in one row or two.</source>
          <target state="new">You can also set the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IsCompact<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.mediatransportcontrols.iscompact.aspx)</ept> property to specify whether the controls are shown in one row or two.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>However, there may be scenarios where you need to further customize the look of the control or change its behavior.</source>
          <target state="new">However, there may be scenarios where you need to further customize the look of the control or change its behavior.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Here are some examples:</source>
          <target state="new">Here are some examples:</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Change the icons, slider behavior, and colors.</source>
          <target state="new">Change the icons, slider behavior, and colors.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Move less commonly used command buttons into an overflow menu.</source>
          <target state="new">Move less commonly used command buttons into an overflow menu.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Change the order in which commands drop out when the control is resized.</source>
          <target state="new">Change the order in which commands drop out when the control is resized.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Provide a command button that’s not in the default set.</source>
          <target state="new">Provide a command button that’s not in the default set.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>You can customize the appearance of the control by modifying the default template.</source>
          <target state="new">You can customize the appearance of the control by modifying the default template.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>To modify the control's behavior or add new commands, you can create a custom control that's derived from MediaTransportControls.</source>
          <target state="new">To modify the control's behavior or add new commands, you can create a custom control that's derived from MediaTransportControls.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Tip<ept id="p1">**</ept><ph id="ph1">&amp;nbsp;&amp;nbsp;</ph>Customizable control templates are a powerful feature of the XAML platform, but there are also consequences that you should take into consideration.</source>
          <target state="new"><bpt id="p1">**</bpt>Tip<ept id="p1">**</ept><ph id="ph1">&amp;nbsp;&amp;nbsp;</ph>Customizable control templates are a powerful feature of the XAML platform, but there are also consequences that you should take into consideration.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>When you customize a template, it becomes a static part of your app and therefore will not receive any platform updates that are made to the template by Microsoft.</source>
          <target state="new">When you customize a template, it becomes a static part of your app and therefore will not receive any platform updates that are made to the template by Microsoft.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If template updates are made by Microsoft, you should take the new template and re-modify it in order to get the benefits of the updated template.</source>
          <target state="new">If template updates are made by Microsoft, you should take the new template and re-modify it in order to get the benefits of the updated template.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Template structure</source>
          <target state="new">Template structure</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ControlTemplate<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.controltemplate.aspx)</ept> is part of the default style.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ControlTemplate<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.controltemplate.aspx)</ept> is part of the default style.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The transport control's default style is shown in the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MediaTransportControls<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.mediatransportcontrols.aspx)</ept> class reference page.</source>
          <target state="new">The transport control's default style is shown in the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MediaTransportControls<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.mediatransportcontrols.aspx)</ept> class reference page.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>You can copy this default style into your project to modify it.</source>
          <target state="new">You can copy this default style into your project to modify it.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The ControlTemplate is divided into sections similar to other XAML control templates.</source>
          <target state="new">The ControlTemplate is divided into sections similar to other XAML control templates.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The first section of the template contains the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Style<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.style.aspx)</ept> definitions for the various components of the MediaTransportControls.</source>
          <target state="new">The first section of the template contains the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Style<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.style.aspx)</ept> definitions for the various components of the MediaTransportControls.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The second section defines the various visual states that are used by the MediaTransportControls.</source>
          <target state="new">The second section defines the various visual states that are used by the MediaTransportControls.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The third section contains the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Grid<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.grid.aspx)</ept> that holds that various MediaTransportControls elements together and defines how the components are laid out.</source>
          <target state="new">The third section contains the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Grid<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.grid.aspx)</ept> that holds that various MediaTransportControls elements together and defines how the components are laid out.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept><ph id="ph1">&amp;nbsp;&amp;nbsp;</ph>For more info about modifying templates, see <bpt id="p2">[</bpt>Control templates<ept id="p2">]()</ept>.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept><ph id="ph1">&amp;nbsp;&amp;nbsp;</ph>For more info about modifying templates, see <bpt id="p2">[</bpt>Control templates<ept id="p2">]()</ept>.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>You can use a text editor or similar editors in your IDE to open the XAML files in <ph id="ph1">\(</ph><bpt id="p1">*</bpt>Program Files<ept id="p1">*</ept>)\Windows Kits\10\DesignTime\CommonConfiguration\Neutral\UAP<ph id="ph2">\\</ph>(<bpt id="p2">*</bpt>SDK version<ept id="p2">*</ept>)\Generic.</source>
          <target state="new">You can use a text editor or similar editors in your IDE to open the XAML files in <ph id="ph1">\(</ph><bpt id="p1">*</bpt>Program Files<ept id="p1">*</ept>)\Windows Kits\10\DesignTime\CommonConfiguration\Neutral\UAP<ph id="ph2">\\</ph>(<bpt id="p2">*</bpt>SDK version<ept id="p2">*</ept>)\Generic.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The default style and template for each control is defined in the <bpt id="p1">**</bpt>generic.xaml<ept id="p1">**</ept> file.</source>
          <target state="new">The default style and template for each control is defined in the <bpt id="p1">**</bpt>generic.xaml<ept id="p1">**</ept> file.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>You can find the MediaTransportControls template in generic.xaml by searching for "MediaTransportControls".</source>
          <target state="new">You can find the MediaTransportControls template in generic.xaml by searching for "MediaTransportControls".</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>In the following sections, you learn how to customize several of the main elements of the transport controls:</source>
          <target state="new">In the following sections, you learn how to customize several of the main elements of the transport controls:</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>Slider<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.slider.aspx)</ept>: allows a user to scrub through their media and also displays progress</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>Slider<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.slider.aspx)</ept>: allows a user to scrub through their media and also displays progress</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>CommandBar<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.commandbar.aspx)</ept>: contains all of the buttons.</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>CommandBar<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.commandbar.aspx)</ept>: contains all of the buttons.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>For more info, see the Anatomy section of the MediaTransportControls reference topic.</source>
          <target state="new">For more info, see the Anatomy section of the MediaTransportControls reference topic.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Customize the transport controls</source>
          <target state="new">Customize the transport controls</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>If you want to modify only the appearance of the MediaTransportControls, you can create a copy of the default control style and template, and modify that.</source>
          <target state="new">If you want to modify only the appearance of the MediaTransportControls, you can create a copy of the default control style and template, and modify that.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>However, if you also want to add to or modify the functionality of the control, you need to create a new class that derives from MediaTransportControls.</source>
          <target state="new">However, if you also want to add to or modify the functionality of the control, you need to create a new class that derives from MediaTransportControls.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Re-template the control</source>
          <target state="new">Re-template the control</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>To customize the MediaTransportControls default style and template</source>
          <target state="new">To customize the MediaTransportControls default style and template</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Copy the default style from MediaTransportControls styles and templates into a ResourceDictionary in your project.</source>
          <target state="new">Copy the default style from MediaTransportControls styles and templates into a ResourceDictionary in your project.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Give the Style an x:Key value to identify it, like this.</source>
          <target state="new">Give the Style an x:Key value to identify it, like this.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Add a MediaElement with MediaTransportControls to your UI.</source>
          <target state="new">Add a MediaElement with MediaTransportControls to your UI.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Set the Style property of the MediaTransportControls element to your custom Style resource, as shown here.</source>
          <target state="new">Set the Style property of the MediaTransportControls element to your custom Style resource, as shown here.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>For more info about modifying styles and templates, see <bpt id="p1">[</bpt>Styling controls<ept id="p1">]()</ept> and <bpt id="p2">[</bpt>Control templates<ept id="p2">]()</ept>.</source>
          <target state="new">For more info about modifying styles and templates, see <bpt id="p1">[</bpt>Styling controls<ept id="p1">]()</ept> and <bpt id="p2">[</bpt>Control templates<ept id="p2">]()</ept>.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Create a derived control</source>
          <target state="new">Create a derived control</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>To add to or modify the functionality of the transport controls, you must create a new class that's derived from MediaTransportControls.</source>
          <target state="new">To add to or modify the functionality of the transport controls, you must create a new class that's derived from MediaTransportControls.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>A derived class called <ph id="ph1">`CustomMediaTransportControls`</ph> is shown in the <bpt id="p1">[</bpt>Media Transport Controls sample<ept id="p1">](http://go.microsoft.com/fwlink/p/?LinkId=620023)</ept> and the remaining examples on this page.</source>
          <target state="new">A derived class called <ph id="ph1">`CustomMediaTransportControls`</ph> is shown in the <bpt id="p1">[</bpt>Media Transport Controls sample<ept id="p1">](http://go.microsoft.com/fwlink/p/?LinkId=620023)</ept> and the remaining examples on this page.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>To create a new class derived from MediaTransportControls</source>
          <target state="new">To create a new class derived from MediaTransportControls</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Add a new class file to your project.</source>
          <target state="new">Add a new class file to your project.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>In Visual Studio, select Project &gt; Add Class.</source>
          <target state="new">In Visual Studio, select Project &gt; Add Class.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The Add New Item dialog opens.</source>
          <target state="new">The Add New Item dialog opens.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>In the Add New Item dialog, enter a name for the class file, then click Add.</source>
          <target state="new">In the Add New Item dialog, enter a name for the class file, then click Add.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>(In the Media Transport Controls sample, the class is named <ph id="ph1">`CustomMediaTransportControls`</ph>.)</source>
          <target state="new">(In the Media Transport Controls sample, the class is named <ph id="ph1">`CustomMediaTransportControls`</ph>.)</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Modify the class code to derive from the MediaTransportControls class.</source>
          <target state="new">Modify the class code to derive from the MediaTransportControls class.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Copy the default style for <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MediaTransportControls<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.mediatransportcontrols.aspx)</ept> into a <bpt id="p3">[</bpt>ResourceDictionary<ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.resourcedictionary.aspx)</ept> in your project.</source>
          <target state="new">Copy the default style for <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MediaTransportControls<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.mediatransportcontrols.aspx)</ept> into a <bpt id="p3">[</bpt>ResourceDictionary<ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.resourcedictionary.aspx)</ept> in your project.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>This is the style and template you modify.</source>
          <target state="new">This is the style and template you modify.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>(In the Media Transport Controls sample, a new folder called "Themes" is created, and a ResourceDictionary file called generic.xaml is added to it.)</source>
          <target state="new">(In the Media Transport Controls sample, a new folder called "Themes" is created, and a ResourceDictionary file called generic.xaml is added to it.)</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Change the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TargetType<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.style.targettype.aspx)</ept> of the style to the new custom control type.</source>
          <target state="new">Change the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TargetType<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.style.targettype.aspx)</ept> of the style to the new custom control type.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>(In the sample, the TargetType is changed to <ph id="ph1">`local:CustomMediaTransportControls`</ph>.)</source>
          <target state="new">(In the sample, the TargetType is changed to <ph id="ph1">`local:CustomMediaTransportControls`</ph>.)</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Set the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DefaultStyleKey<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.control.defaultstylekey.aspx)</ept> of your custom class.</source>
          <target state="new">Set the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DefaultStyleKey<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.control.defaultstylekey.aspx)</ept> of your custom class.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>This tells your custom class to use a Style with a TargetType of <ph id="ph1">`local:CustomMediaTransportControls`</ph>.</source>
          <target state="new">This tells your custom class to use a Style with a TargetType of <ph id="ph1">`local:CustomMediaTransportControls`</ph>.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Add a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MediaElement<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.mediaelement.aspx)</ept> to your XAML markup and add the custom transport controls to it.</source>
          <target state="new">Add a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MediaElement<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.mediaelement.aspx)</ept> to your XAML markup and add the custom transport controls to it.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>One thing to note is that the APIs to hide, show, disable, and enable the default buttons still work with a customized template.</source>
          <target state="new">One thing to note is that the APIs to hide, show, disable, and enable the default buttons still work with a customized template.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>You can now modify the control style and template to update the look of your custom control, and the control code to update its behavior.</source>
          <target state="new">You can now modify the control style and template to update the look of your custom control, and the control code to update its behavior.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Working with the overflow menu</source>
          <target state="new">Working with the overflow menu</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>You can move MediaTransportControls command buttons into an overflow menu, so that less commonly used commands are hidden until the user needs them.</source>
          <target state="new">You can move MediaTransportControls command buttons into an overflow menu, so that less commonly used commands are hidden until the user needs them.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>In the MediaTransportControls template, the command buttons are contained in a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CommandBar<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.commandbar.aspx)</ept> element.</source>
          <target state="new">In the MediaTransportControls template, the command buttons are contained in a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CommandBar<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.commandbar.aspx)</ept> element.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The command bar has the concept of primary and secondary commands.</source>
          <target state="new">The command bar has the concept of primary and secondary commands.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The primary commands are the buttons that appear in the control by default and are always visible (unless you disable or hide the button).</source>
          <target state="new">The primary commands are the buttons that appear in the control by default and are always visible (unless you disable or hide the button).</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The secondary commands are shown in an overflow menu that appears when a user clicks the ellipsis (…) button.</source>
          <target state="new">The secondary commands are shown in an overflow menu that appears when a user clicks the ellipsis (…) button.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>For more info, see the <bpt id="p1">[</bpt>App bars and command bars<ept id="p1">](app-bars.md)</ept> article.</source>
          <target state="new">For more info, see the <bpt id="p1">[</bpt>App bars and command bars<ept id="p1">](app-bars.md)</ept> article.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>To move an element from the command bar primary commands to the overflow menu, you need to edit the XAML control template.</source>
          <target state="new">To move an element from the command bar primary commands to the overflow menu, you need to edit the XAML control template.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>To move a command to the overflow menu:</source>
          <target state="new">To move a command to the overflow menu:</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>In the control template, find the CommandBar element named <ph id="ph1">`MediaControlsCommandBar`</ph>.</source>
          <target state="new">In the control template, find the CommandBar element named <ph id="ph1">`MediaControlsCommandBar`</ph>.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Add a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SecondaryCommands<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.commandbar.secondarycommands.aspx)</ept> section to the XAML for the CommandBar.</source>
          <target state="new">Add a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SecondaryCommands<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.commandbar.secondarycommands.aspx)</ept> section to the XAML for the CommandBar.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Put it after the closing tag for the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PrimaryCommands<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.commandbar.primarycommands.aspx)</ept>.</source>
          <target state="new">Put it after the closing tag for the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PrimaryCommands<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.commandbar.primarycommands.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>To populate the menu with commands, cut and paste the XAML for the desired <bpt id="p1">[</bpt><bpt id="p2">**</bpt>AppBarButton<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.appbarbutton.aspx)</ept> objects from the PrimaryCommands to the SecondaryCommands.</source>
          <target state="new">To populate the menu with commands, cut and paste the XAML for the desired <bpt id="p1">[</bpt><bpt id="p2">**</bpt>AppBarButton<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.appbarbutton.aspx)</ept> objects from the PrimaryCommands to the SecondaryCommands.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>In this example, we move the <ph id="ph1">`PlaybackRateButton`</ph> to the overflow menu.</source>
          <target state="new">In this example, we move the <ph id="ph1">`PlaybackRateButton`</ph> to the overflow menu.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Add a label to the button and remove the styling information, as shown here.</source>
          <target state="new">Add a label to the button and remove the styling information, as shown here.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Because the overflow menu is comprised of text buttons, you must add a text label to the button and also remove the style that sets the height and width of the button.</source>
          <target state="new">Because the overflow menu is comprised of text buttons, you must add a text label to the button and also remove the style that sets the height and width of the button.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Otherwise, it won't appear correctly in the overflow menu.</source>
          <target state="new">Otherwise, it won't appear correctly in the overflow menu.</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Important<ept id="p1">**</ept><ph id="ph1">&amp;nbsp;&amp;nbsp;</ph>You must still make the button visible and enable it in order to use it in the overflow menu.</source>
          <target state="new"><bpt id="p1">**</bpt>Important<ept id="p1">**</ept><ph id="ph1">&amp;nbsp;&amp;nbsp;</ph>You must still make the button visible and enable it in order to use it in the overflow menu.</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>In this example, the PlaybackRateButton element isn't visible in the overflow menu unless the IsPlaybackRateButtonVisible property is true.</source>
          <target state="new">In this example, the PlaybackRateButton element isn't visible in the overflow menu unless the IsPlaybackRateButtonVisible property is true.</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>It's not enabled unless the IsPlaybackRateEnabled property is true.</source>
          <target state="new">It's not enabled unless the IsPlaybackRateEnabled property is true.</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Setting these properties is shown in the previous section.</source>
          <target state="new">Setting these properties is shown in the previous section.</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Adding a custom button</source>
          <target state="new">Adding a custom button</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>One reason you might want to customize MediaTransportControls is to add a custom command to the control.</source>
          <target state="new">One reason you might want to customize MediaTransportControls is to add a custom command to the control.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Whether you add it as a primary command or a secondary command, the procedure for creating the command button and modifying its behavior is the same.</source>
          <target state="new">Whether you add it as a primary command or a secondary command, the procedure for creating the command button and modifying its behavior is the same.</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">[</bpt>Media Transport Controls sample<ept id="p1">](http://go.microsoft.com/fwlink/p/?LinkId=620023)</ept>, a "rating" button is added to the primary commands.</source>
          <target state="new">In the <bpt id="p1">[</bpt>Media Transport Controls sample<ept id="p1">](http://go.microsoft.com/fwlink/p/?LinkId=620023)</ept>, a "rating" button is added to the primary commands.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>To add a custom command button</source>
          <target state="new">To add a custom command button</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Create an AppBarButton object and add it to the CommandBar in the control template.</source>
          <target state="new">Create an AppBarButton object and add it to the CommandBar in the control template.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>OnApplyTemplate<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.frameworkelement.onapplytemplate.aspx)</ept> override, get the button from the template and register a handler for its <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Click<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.primitives.buttonbase.click.aspx)</ept> event.</source>
          <target state="new">In the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>OnApplyTemplate<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.frameworkelement.onapplytemplate.aspx)</ept> override, get the button from the template and register a handler for its <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Click<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.primitives.buttonbase.click.aspx)</ept> event.</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>This code goes in the <ph id="ph1">`CustomMediaTransportControls`</ph> class.</source>
          <target state="new">This code goes in the <ph id="ph1">`CustomMediaTransportControls`</ph> class.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Add code to the Click event handler to perform the action that occurs when the button is clicked.</source>
          <target state="new">Add code to the Click event handler to perform the action that occurs when the button is clicked.</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Here's the complete code for the class.</source>
          <target state="new">Here's the complete code for the class.</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Modifying the slider</source>
          <target state="new">Modifying the slider</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The "seek" control of the MediaTransportControls is provided by a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Slider<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.slider.aspx)</ept> element.</source>
          <target state="new">The "seek" control of the MediaTransportControls is provided by a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Slider<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.slider.aspx)</ept> element.</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>One way you can customize it is to change the granularity of the seek behavior.</source>
          <target state="new">One way you can customize it is to change the granularity of the seek behavior.</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The default seek slider is divided into 100 parts, so the seek behavior is limited to that many sections.</source>
          <target state="new">The default seek slider is divided into 100 parts, so the seek behavior is limited to that many sections.</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>You can change the granularity of the seek slider by getting the Slider from the XAML visual tree in your <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MediaOpened<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.mediaelement.mediaopened.aspx)</ept> event handler.</source>
          <target state="new">You can change the granularity of the seek slider by getting the Slider from the XAML visual tree in your <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MediaOpened<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.mediaelement.mediaopened.aspx)</ept> event handler.</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>This example shows how to use <bpt id="p1">[</bpt><bpt id="p2">**</bpt>VisualTreeHelper<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.media.visualtreehelper.aspx)</ept> to get a reference to the Slider, then change the default step frequency of the slider from 1% to 0.1% (1000 steps) if the media is longer than 120 minutes.</source>
          <target state="new">This example shows how to use <bpt id="p1">[</bpt><bpt id="p2">**</bpt>VisualTreeHelper<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.media.visualtreehelper.aspx)</ept> to get a reference to the Slider, then change the default step frequency of the slider from 1% to 0.1% (1000 steps) if the media is longer than 120 minutes.</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The MediaElement is named <ph id="ph1">`MediaElement1`</ph>.</source>
          <target state="new">The MediaElement is named <ph id="ph1">`MediaElement1`</ph>.</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>This article contains information that is specific to Universal Windows Platform (UWP) apps and Windows 10.</source>
          <target state="new">This article contains information that is specific to Universal Windows Platform (UWP) apps and Windows 10.</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>For Windows 8.1 guidance, please download the <bpt id="p1">[</bpt>Windows 8.1 guidelines PDF<ept id="p1">](https://go.microsoft.com/fwlink/p/?linkid=258743)</ept>.</source>
          <target state="new">For Windows 8.1 guidance, please download the <bpt id="p1">[</bpt>Windows 8.1 guidelines PDF<ept id="p1">](https://go.microsoft.com/fwlink/p/?linkid=258743)</ept>.</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Related articles</source>
          <target state="new">Related articles</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Media playback</source>
          <target state="new">Media playback</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>