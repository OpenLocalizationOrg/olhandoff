<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci2\controls-and-patterns\text-block.md</xliffext:olfilepath>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ac3c677f48c71239a48312c2fb5aafc1f55ec149</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-e58fd48" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Text block</source>
          <target state="new">Text block</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Text block is the primary control for displaying read-only text in apps.</source>
          <target state="new">Text block is the primary control for displaying read-only text in apps.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>You can use it to display single-line or multi-line text, inline hyperlinks, and text with formatting like bold, italic, or underlined.</source>
          <target state="new">You can use it to display single-line or multi-line text, inline hyperlinks, and text with formatting like bold, italic, or underlined.</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Important APIs</source>
          <target state="new">Important APIs</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>TextBlock class</source>
          <target state="new">TextBlock class</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Text property</source>
          <target state="new">Text property</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Inlines property</source>
          <target state="new">Inlines property</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Is this the right control?</source>
          <target state="new">Is this the right control?</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A text block is typically easier to use and provides better text rendering performance than a rich text block, so it's preferred for most app UI text.</source>
          <target state="new">A text block is typically easier to use and provides better text rendering performance than a rich text block, so it's preferred for most app UI text.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You can easily access and use text from a text block in your app by getting the value of the <bpt id="p1">[</bpt>Text<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textblock.text.aspx)</ept> property.</source>
          <target state="new">You can easily access and use text from a text block in your app by getting the value of the <bpt id="p1">[</bpt>Text<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textblock.text.aspx)</ept> property.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>It also provides many of the same formatting options for customizing how your text is rendered.</source>
          <target state="new">It also provides many of the same formatting options for customizing how your text is rendered.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Although you can put line breaks in the text, text block is designed to display a single paragraph and doesn’t support text indentation.</source>
          <target state="new">Although you can put line breaks in the text, text block is designed to display a single paragraph and doesn’t support text indentation.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Use a <bpt id="p1">**</bpt>RichTextBlock<ept id="p1">**</ept> when you need support for multiple paragraphs, multi-column text or other complex text layouts, or inline UI elements like images.</source>
          <target state="new">Use a <bpt id="p1">**</bpt>RichTextBlock<ept id="p1">**</ept> when you need support for multiple paragraphs, multi-column text or other complex text layouts, or inline UI elements like images.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For more info about choosing the right text control, see the <bpt id="p1">[</bpt>Text controls<ept id="p1">](text-controls.md)</ept> article.</source>
          <target state="new">For more info about choosing the right text control, see the <bpt id="p1">[</bpt>Text controls<ept id="p1">](text-controls.md)</ept> article.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="new">Examples</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Create a text block</source>
          <target state="new">Create a text block</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Here's how to define a simple TextBlock control and set its Text property to a string.</source>
          <target state="new">Here's how to define a simple TextBlock control and set its Text property to a string.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Content model</source>
          <target state="new">Content model</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>There are two properties you can use to add content to a TextBlock: <bpt id="p1">[</bpt>Text<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textblock.text.aspx)</ept> and <bpt id="p2">[</bpt>Inlines<ept id="p2">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textblock.inlines.aspx)</ept>.</source>
          <target state="new">There are two properties you can use to add content to a TextBlock: <bpt id="p1">[</bpt>Text<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textblock.text.aspx)</ept> and <bpt id="p2">[</bpt>Inlines<ept id="p2">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textblock.inlines.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The most common way to display text is to set the Text property to a string value, as shown in the previous example.</source>
          <target state="new">The most common way to display text is to set the Text property to a string value, as shown in the previous example.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You can also add content by placing inline flow content elements in the TextBox.Inlines property, like this.</source>
          <target state="new">You can also add content by placing inline flow content elements in the TextBox.Inlines property, like this.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Elements derived from the Inline class, such as Bold, Italic, Run, Span, and LineBreak, enable different formatting for different parts of the text.</source>
          <target state="new">Elements derived from the Inline class, such as Bold, Italic, Run, Span, and LineBreak, enable different formatting for different parts of the text.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For more info, see the <bpt id="p1">[</bpt>Formatting text<ept id="p1">]()</ept> section.</source>
          <target state="new">For more info, see the <bpt id="p1">[</bpt>Formatting text<ept id="p1">]()</ept> section.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The inline Hyperlink element lets you add a hyperlink to your text.</source>
          <target state="new">The inline Hyperlink element lets you add a hyperlink to your text.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>However, using Inlines also disables fast path text rendering, which is discussed in the next section.</source>
          <target state="new">However, using Inlines also disables fast path text rendering, which is discussed in the next section.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Performance considerations</source>
          <target state="new">Performance considerations</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Whenever possible, XAML uses a more efficient code path to layout text.</source>
          <target state="new">Whenever possible, XAML uses a more efficient code path to layout text.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This fast path both decreases overall memory use and greatly reduces the CPU time to do text measuring and arranging.</source>
          <target state="new">This fast path both decreases overall memory use and greatly reduces the CPU time to do text measuring and arranging.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This fast path applies only to TextBlock, so it should be preferred when possible over RichTextBlock.</source>
          <target state="new">This fast path applies only to TextBlock, so it should be preferred when possible over RichTextBlock.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Certain conditions require TextBlock to fall back to a more feature-rich and CPU intensive code path for text rendering.</source>
          <target state="new">Certain conditions require TextBlock to fall back to a more feature-rich and CPU intensive code path for text rendering.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>To keep text rendering on the fast path, be sure to follow these guidelines when setting the properties listed here.</source>
          <target state="new">To keep text rendering on the fast path, be sure to follow these guidelines when setting the properties listed here.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>Text<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textblock.text.aspx)</ept>: The most important condition is that the fast path is used only when you set text by explicitly setting the Text property, either in XAML or in code (as shown in the previous examples).</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>Text<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textblock.text.aspx)</ept>: The most important condition is that the fast path is used only when you set text by explicitly setting the Text property, either in XAML or in code (as shown in the previous examples).</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Setting the text via TextBlock’s Inlines collection (such as <ph id="ph1">`&lt;TextBlock&gt;Inline text&lt;/TextBlock&gt;`</ph>) will disable the fast path, due to the potential complexity of multiple formats.</source>
          <target state="new">Setting the text via TextBlock’s Inlines collection (such as <ph id="ph1">`&lt;TextBlock&gt;Inline text&lt;/TextBlock&gt;`</ph>) will disable the fast path, due to the potential complexity of multiple formats.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>CharacterSpacing<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textblock.characterspacing.aspx)</ept>: Only the default value of 0 is fast path.</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>CharacterSpacing<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textblock.characterspacing.aspx)</ept>: Only the default value of 0 is fast path.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>Typography<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.documents.typography.aspx)</ept>: Only the default values for the various Typography properties are fast path.</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>Typography<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.documents.typography.aspx)</ept>: Only the default values for the various Typography properties are fast path.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>TextTrimming<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textblock.texttrimming.aspx)</ept>: Only the <bpt id="p3">**</bpt>None<ept id="p3">**</ept>, <bpt id="p4">**</bpt>CharacterEllipsis<ept id="p4">**</ept>, and <bpt id="p5">**</bpt>WordEllipsis<ept id="p5">**</ept> values are fast path.</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>TextTrimming<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textblock.texttrimming.aspx)</ept>: Only the <bpt id="p3">**</bpt>None<ept id="p3">**</ept>, <bpt id="p4">**</bpt>CharacterEllipsis<ept id="p4">**</ept>, and <bpt id="p5">**</bpt>WordEllipsis<ept id="p5">**</ept> values are fast path.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Clip<ept id="p1">**</ept> value disables the fast path.</source>
          <target state="new">The <bpt id="p1">**</bpt>Clip<ept id="p1">**</ept> value disables the fast path.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>LineStackingStrategy<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textblock.linestackingstrategy.aspx)</ept>: If <bpt id="p3">[</bpt>LineHeight<ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textblock.lineheight.aspx)</ept> is not 0, the <bpt id="p4">**</bpt>BaselineToBaseline<ept id="p4">**</ept> and <bpt id="p5">**</bpt>MaxHeight<ept id="p5">**</ept> values disable the fast path.</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>LineStackingStrategy<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textblock.linestackingstrategy.aspx)</ept>: If <bpt id="p3">[</bpt>LineHeight<ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textblock.lineheight.aspx)</ept> is not 0, the <bpt id="p4">**</bpt>BaselineToBaseline<ept id="p4">**</ept> and <bpt id="p5">**</bpt>MaxHeight<ept id="p5">**</ept> values disable the fast path.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>IsTextSelectionEnabled<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textblock.istextselectionenabled.aspx)</ept>: Only <bpt id="p3">**</bpt>false<ept id="p3">**</ept> is fast path.</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>IsTextSelectionEnabled<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textblock.istextselectionenabled.aspx)</ept>: Only <bpt id="p3">**</bpt>false<ept id="p3">**</ept> is fast path.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Setting this property to <bpt id="p1">**</bpt>true<ept id="p1">**</ept> disables the fast path.</source>
          <target state="new">Setting this property to <bpt id="p1">**</bpt>true<ept id="p1">**</ept> disables the fast path.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>You can set the <bpt id="p1">[</bpt>DebugSettings.IsTextPerformanceVisualizationEnabled<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.debugsettings.istextperformancevisualizationenabled.aspx)</ept> property to <bpt id="p2">**</bpt>true<ept id="p2">**</ept> during debugging to determine whether text is using fast path rendering.</source>
          <target state="new">You can set the <bpt id="p1">[</bpt>DebugSettings.IsTextPerformanceVisualizationEnabled<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.debugsettings.istextperformancevisualizationenabled.aspx)</ept> property to <bpt id="p2">**</bpt>true<ept id="p2">**</ept> during debugging to determine whether text is using fast path rendering.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>When this property is set to true, the text that is on the fast path displays in a bright green color.</source>
          <target state="new">When this property is set to true, the text that is on the fast path displays in a bright green color.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Tip<ept id="p1">**</ept><ph id="ph1">&amp;nbsp;&amp;nbsp;</ph>This feature is explained in depth in this session from Build 2015- <bpt id="p2">[</bpt>XAML Performance: Techniques for Maximizing Universal Windows App Experiences Built with XAML<ept id="p2">](https://channel9.msdn.com/Events/Build/2015/3-698)</ept>.</source>
          <target state="new"><bpt id="p1">**</bpt>Tip<ept id="p1">**</ept><ph id="ph1">&amp;nbsp;&amp;nbsp;</ph>This feature is explained in depth in this session from Build 2015- <bpt id="p2">[</bpt>XAML Performance: Techniques for Maximizing Universal Windows App Experiences Built with XAML<ept id="p2">](https://channel9.msdn.com/Events/Build/2015/3-698)</ept>.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>You typically set debug settings in the <bpt id="p1">[</bpt>OnLaunched<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.application.onlaunched.aspx)</ept> method override in the code-behind page for App.xaml, like this.</source>
          <target state="new">You typically set debug settings in the <bpt id="p1">[</bpt>OnLaunched<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.application.onlaunched.aspx)</ept> method override in the code-behind page for App.xaml, like this.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>In this example, the first TextBlock is rendered using the fast path, while the second is not.</source>
          <target state="new">In this example, the first TextBlock is rendered using the fast path, while the second is not.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>When you run this XAML in debug mode with IsTextPerformanceVisualizationEnabled set to true, the result looks like this.</source>
          <target state="new">When you run this XAML in debug mode with IsTextPerformanceVisualizationEnabled set to true, the result looks like this.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Text rendered in debug mode</source>
          <target state="new">Text rendered in debug mode</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Caution<ept id="p1">**</ept><ph id="ph1">&amp;nbsp;&amp;nbsp;</ph>The color of text that is not on the fast path is not changed.</source>
          <target state="new"><bpt id="p1">**</bpt>Caution<ept id="p1">**</ept><ph id="ph1">&amp;nbsp;&amp;nbsp;</ph>The color of text that is not on the fast path is not changed.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>If you have text in your app with its color specified as bright green, it is still displayed in bright green when it's on the slower rendering path.</source>
          <target state="new">If you have text in your app with its color specified as bright green, it is still displayed in bright green when it's on the slower rendering path.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Be careful to not confuse text that is set to green in the app with text that is on the fast path and green because of the debug settings.</source>
          <target state="new">Be careful to not confuse text that is set to green in the app with text that is on the fast path and green because of the debug settings.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Formatting text</source>
          <target state="new">Formatting text</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Although the Text property stores plain text, you can apply various formatting options to the TextBlock control to customize how the text is rendered in your app.</source>
          <target state="new">Although the Text property stores plain text, you can apply various formatting options to the TextBlock control to customize how the text is rendered in your app.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>You can set standard control properties like FontFamily, FontSize, FontStyle, Foreground, and CharacterSpacing to change the look of the text.</source>
          <target state="new">You can set standard control properties like FontFamily, FontSize, FontStyle, Foreground, and CharacterSpacing to change the look of the text.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>You can also use inline text elements and Typography attached properties to format your text.</source>
          <target state="new">You can also use inline text elements and Typography attached properties to format your text.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>These options affect only how the TextBlock displays the text locally, so if you copy and paste the text into a rich text control, for example, no formatting is applied.</source>
          <target state="new">These options affect only how the TextBlock displays the text locally, so if you copy and paste the text into a rich text control, for example, no formatting is applied.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept><ph id="ph1">&amp;nbsp;&amp;nbsp;</ph>Remember, as noted in the previous section, inline text elements and non-default typography values are not rendered on the fast path.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept><ph id="ph1">&amp;nbsp;&amp;nbsp;</ph>Remember, as noted in the previous section, inline text elements and non-default typography values are not rendered on the fast path.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Inline elements</source>
          <target state="new">Inline elements</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>Windows.UI.Xaml.Documents<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.documents.aspx)</ept> namespace provides a variety of inline text elements that you can use to format your text, such as Bold, Italic, Run, Span, and LineBreak.</source>
          <target state="new">The <bpt id="p1">[</bpt>Windows.UI.Xaml.Documents<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.documents.aspx)</ept> namespace provides a variety of inline text elements that you can use to format your text, such as Bold, Italic, Run, Span, and LineBreak.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>You can display a series of strings in a TextBlock, where each string has different formatting.</source>
          <target state="new">You can display a series of strings in a TextBlock, where each string has different formatting.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>You can do this by using a Run element to display each string with its formatting and by separating each Run element with a LineBreak element.</source>
          <target state="new">You can do this by using a Run element to display each string with its formatting and by separating each Run element with a LineBreak element.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Here's how to define several differently formatted text strings in a TextBlock by using Run objects separated with a LineBreak.</source>
          <target state="new">Here's how to define several differently formatted text strings in a TextBlock by using Run objects separated with a LineBreak.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Here's the result.</source>
          <target state="new">Here's the result.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Text formatted with run elements</source>
          <target state="new">Text formatted with run elements</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Typography</source>
          <target state="new">Typography</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The attached properties of the <bpt id="p1">[</bpt>Typography<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.documents.typography.aspx)</ept> class provide access to a set of Microsoft OpenType typography properties.</source>
          <target state="new">The attached properties of the <bpt id="p1">[</bpt>Typography<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.documents.typography.aspx)</ept> class provide access to a set of Microsoft OpenType typography properties.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>You can set these attached properties either on the TextBlock, or on individual inline text elements.</source>
          <target state="new">You can set these attached properties either on the TextBlock, or on individual inline text elements.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>These examples show both.</source>
          <target state="new">These examples show both.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Recommendations</source>
          <target state="new">Recommendations</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>This article contains information that is specific to Universal Windows Platform (UWP) apps and Windows 10.</source>
          <target state="new">This article contains information that is specific to Universal Windows Platform (UWP) apps and Windows 10.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>For Windows 8.1 guidance, please download the <bpt id="p1">[</bpt>Windows 8.1 guidelines PDF<ept id="p1">](https://go.microsoft.com/fwlink/p/?linkid=258743)</ept>.</source>
          <target state="new">For Windows 8.1 guidance, please download the <bpt id="p1">[</bpt>Windows 8.1 guidelines PDF<ept id="p1">](https://go.microsoft.com/fwlink/p/?linkid=258743)</ept>.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Related articles</source>
          <target state="new">Related articles</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Text controls</source>
          <target state="new">Text controls</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>For designers</source>
          <target state="new">For designers</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Guidelines for spell checking</source>
          <target state="new">Guidelines for spell checking</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Adding search</source>
          <target state="new">Adding search</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Guidelines for text input</source>
          <target state="new">Guidelines for text input</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>For developers (XAML)</source>
          <target state="new">For developers (XAML)</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>TextBox class</source>
          <target state="new">TextBox class</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Windows.UI.Xaml.Controls PasswordBox class</source>
          <target state="new">Windows.UI.Xaml.Controls PasswordBox class</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>For developers (other)</source>
          <target state="new">For developers (other)</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>String.Length property</source>
          <target state="new">String.Length property</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>