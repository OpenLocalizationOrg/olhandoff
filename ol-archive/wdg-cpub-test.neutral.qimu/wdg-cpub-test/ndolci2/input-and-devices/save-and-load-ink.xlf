<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci2\input-and-devices\save-and-load-ink.md</xliffext:olfilepath>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2d2fae5a2bce7c3d078a1c3b95743444f8687e0b</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-e58fd48" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Store ink stroke data in a Graphics Interchange Format (GIF) file using embedded Ink Serialized Format (ISF) metadata.</source>
          <target state="new">Store ink stroke data in a Graphics Interchange Format (GIF) file using embedded Ink Serialized Format (ISF) metadata.</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Store and retrieve ink strokes</source>
          <target state="new">Store and retrieve ink strokes</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Store and retrieve ink strokes</source>
          <target state="new">Store and retrieve ink strokes</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Updated for UWP apps on Windows 10.</source>
          <target state="new">Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept></source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept></target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Apps that support ink input can serialize and deserialize the ink metadata with full fidelity, maintaining all properties and behaviors.</source>
          <target state="new">Apps that support ink input can serialize and deserialize the ink metadata with full fidelity, maintaining all properties and behaviors.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Apps that are not ink-enabled, can view the static GIF image, including alpha-channel background transparency.</source>
          <target state="new">Apps that are not ink-enabled, can view the static GIF image, including alpha-channel background transparency.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Important APIs</source>
          <target state="new">Important APIs</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>InkCanvas</source>
          <target state="new">InkCanvas</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Windows.UI.Input.Inking</source>
          <target state="new">Windows.UI.Input.Inking</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Note</source>
          <target state="new">Note</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>ISF is the most compact persistent representation of ink.</source>
          <target state="new">ISF is the most compact persistent representation of ink.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>It can be embedded within a binary document format, such as a GIF file, or placed directly on the Clipboard.</source>
          <target state="new">It can be embedded within a binary document format, such as a GIF file, or placed directly on the Clipboard.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Save ink strokes to a file</source>
          <target state="new">Save ink strokes to a file</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Here, we demonstrate how to save ink strokes drawn on an <bpt id="p1">[</bpt><bpt id="p2">**</bpt>InkCanvas<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn858535)</ept> control.</source>
          <target state="new">Here, we demonstrate how to save ink strokes drawn on an <bpt id="p1">[</bpt><bpt id="p2">**</bpt>InkCanvas<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn858535)</ept> control.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>First, we set up the UI.</source>
          <target state="new">First, we set up the UI.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The UI includes "Save", "Load", and "Clear" buttons, and the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>InkCanvas<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn858535)</ept>.</source>
          <target state="new">The UI includes "Save", "Load", and "Clear" buttons, and the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>InkCanvas<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn858535)</ept>.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>We then set some basic ink input behaviors.</source>
          <target state="new">We then set some basic ink input behaviors.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>InkPresenter<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn899081)</ept> is configured to interpret input data from both pen and mouse as ink strokes (<bpt id="p3">[</bpt><bpt id="p4">**</bpt>InputDeviceTypes<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn922019)</ept>), and listeners for the click events on the buttons are declared.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>InkPresenter<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn899081)</ept> is configured to interpret input data from both pen and mouse as ink strokes (<bpt id="p3">[</bpt><bpt id="p4">**</bpt>InputDeviceTypes<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn922019)</ept>), and listeners for the click events on the buttons are declared.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Finally, we save the ink in the click event handler of the <bpt id="p1">**</bpt>Save<ept id="p1">**</ept> button.</source>
          <target state="new">Finally, we save the ink in the click event handler of the <bpt id="p1">**</bpt>Save<ept id="p1">**</ept> button.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">[</bpt><bpt id="p2">**</bpt>FileSavePicker<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br207871)</ept> lets the user select both the file and the location where the ink data is saved.</source>
          <target state="new">A <bpt id="p1">[</bpt><bpt id="p2">**</bpt>FileSavePicker<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br207871)</ept> lets the user select both the file and the location where the ink data is saved.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Once a file is selected, we open an <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IRandomAccessStream<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br241731)</ept> stream set to <bpt id="p3">[</bpt><bpt id="p4">**</bpt>ReadWrite<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br241635)</ept>.</source>
          <target state="new">Once a file is selected, we open an <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IRandomAccessStream<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br241731)</ept> stream set to <bpt id="p3">[</bpt><bpt id="p4">**</bpt>ReadWrite<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br241635)</ept>.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>We then call <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SaveAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242114)</ept> to serialize the ink strokes managed by the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>InkStrokeContainer<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br208492)</ept> to the stream.</source>
          <target state="new">We then call <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SaveAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242114)</ept> to serialize the ink strokes managed by the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>InkStrokeContainer<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br208492)</ept> to the stream.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Note</source>
          <target state="new">Note</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>GIF is the only supported format for saving ink data.</source>
          <target state="new">GIF is the only supported format for saving ink data.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>However, the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>LoadAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh701607)</ept> method (demonstrated in the next section) does support additional formats for backward compatibility.</source>
          <target state="new">However, the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>LoadAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh701607)</ept> method (demonstrated in the next section) does support additional formats for backward compatibility.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Load ink strokes from a file</source>
          <target state="new">Load ink strokes from a file</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Here, we demonstrate how to load ink strokes from a file and render them on an <bpt id="p1">[</bpt><bpt id="p2">**</bpt>InkCanvas<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn858535)</ept> control.</source>
          <target state="new">Here, we demonstrate how to load ink strokes from a file and render them on an <bpt id="p1">[</bpt><bpt id="p2">**</bpt>InkCanvas<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn858535)</ept> control.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>First, we set up the UI.</source>
          <target state="new">First, we set up the UI.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The UI includes "Save", "Load", and "Clear" buttons, and the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>InkCanvas<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn858535)</ept>.</source>
          <target state="new">The UI includes "Save", "Load", and "Clear" buttons, and the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>InkCanvas<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn858535)</ept>.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>We then set some basic ink input behaviors.</source>
          <target state="new">We then set some basic ink input behaviors.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>InkPresenter<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn899081)</ept> is configured to interpret input data from both pen and mouse as ink strokes (<bpt id="p3">[</bpt><bpt id="p4">**</bpt>InputDeviceTypes<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn922019)</ept>), and listeners for the click events on the buttons are declared.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>InkPresenter<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn899081)</ept> is configured to interpret input data from both pen and mouse as ink strokes (<bpt id="p3">[</bpt><bpt id="p4">**</bpt>InputDeviceTypes<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn922019)</ept>), and listeners for the click events on the buttons are declared.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Finally, we load the ink in the click event handler of the <bpt id="p1">**</bpt>Load<ept id="p1">**</ept> button.</source>
          <target state="new">Finally, we load the ink in the click event handler of the <bpt id="p1">**</bpt>Load<ept id="p1">**</ept> button.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">[</bpt><bpt id="p2">**</bpt>FileOpenPicker<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br207847)</ept> lets the user select both the file and the location from where to retrieve the saved ink data.</source>
          <target state="new">A <bpt id="p1">[</bpt><bpt id="p2">**</bpt>FileOpenPicker<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br207847)</ept> lets the user select both the file and the location from where to retrieve the saved ink data.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Once a file is selected, we open an <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IRandomAccessStream<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br241731)</ept> stream set to <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Read<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br241635)</ept>.</source>
          <target state="new">Once a file is selected, we open an <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IRandomAccessStream<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br241731)</ept> stream set to <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Read<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br241635)</ept>.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>We then call <bpt id="p1">[</bpt><bpt id="p2">**</bpt>LoadAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh701607)</ept> to read, de-serialize, and load the saved ink strokes into the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>InkStrokeContainer<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br208492)</ept>.</source>
          <target state="new">We then call <bpt id="p1">[</bpt><bpt id="p2">**</bpt>LoadAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh701607)</ept> to read, de-serialize, and load the saved ink strokes into the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>InkStrokeContainer<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br208492)</ept>.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Loading the strokes into the <bpt id="p1">**</bpt>InkStrokeContainer<ept id="p1">**</ept> causes the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>InkPresenter<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/dn899081)</ept> to immediately render them to the <bpt id="p4">[</bpt><bpt id="p5">**</bpt>InkCanvas<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/dn858535)</ept>.</source>
          <target state="new">Loading the strokes into the <bpt id="p1">**</bpt>InkStrokeContainer<ept id="p1">**</ept> causes the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>InkPresenter<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/dn899081)</ept> to immediately render them to the <bpt id="p4">[</bpt><bpt id="p5">**</bpt>InkCanvas<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/dn858535)</ept>.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Note</source>
          <target state="new">Note</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>GIF is the only supported format for saving ink data.</source>
          <target state="new">GIF is the only supported format for saving ink data.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>However, the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>LoadAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh701607)</ept> method does support the following formats for backward compatibility.</source>
          <target state="new">However, the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>LoadAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh701607)</ept> method does support the following formats for backward compatibility.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Format</source>
          <target state="new">Format</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="new">Description</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>InkSerializedFormat</source>
          <target state="new">InkSerializedFormat</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Specifies ink that is persisted using ISF.</source>
          <target state="new">Specifies ink that is persisted using ISF.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>This is the most compact persistent representation of ink.</source>
          <target state="new">This is the most compact persistent representation of ink.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>It can be embedded within a binary document format or placed directly on the Clipboard.</source>
          <target state="new">It can be embedded within a binary document format or placed directly on the Clipboard.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Base64InkSerializedFormat</source>
          <target state="new">Base64InkSerializedFormat</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Specifies ink that is persisted by encoding the ISF as a base64 stream.</source>
          <target state="new">Specifies ink that is persisted by encoding the ISF as a base64 stream.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>This format is provided so ink can be encoded directly in an XML or HTML file.</source>
          <target state="new">This format is provided so ink can be encoded directly in an XML or HTML file.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Gif</source>
          <target state="new">Gif</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Specifies ink that is persisted by using a GIF file that contains ISF as metadata embedded within the file.</source>
          <target state="new">Specifies ink that is persisted by using a GIF file that contains ISF as metadata embedded within the file.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This enables ink to be viewed in applications that are not ink-enabled and maintain its full ink fidelity when it returns to an ink-enabled application.</source>
          <target state="new">This enables ink to be viewed in applications that are not ink-enabled and maintain its full ink fidelity when it returns to an ink-enabled application.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>This format is ideal when transporting ink content within an HTML file and for making it usable by ink and non-ink applications.</source>
          <target state="new">This format is ideal when transporting ink content within an HTML file and for making it usable by ink and non-ink applications.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Base64Gif</source>
          <target state="new">Base64Gif</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Specifies ink that is persisted by using a base64-encoded fortified GIF.</source>
          <target state="new">Specifies ink that is persisted by using a base64-encoded fortified GIF.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>This format is provided when ink is to be encoded directly in an XML or HTML file for later conversion into an image.</source>
          <target state="new">This format is provided when ink is to be encoded directly in an XML or HTML file for later conversion into an image.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>A possible use of this is in an XML format generated to contain all ink information and used to generate HTML through Extensible Stylesheet Language Transformations (XSLT).</source>
          <target state="new">A possible use of this is in an XML format generated to contain all ink information and used to generate HTML through Extensible Stylesheet Language Transformations (XSLT).</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Copy and paste ink strokes with the clipboard</source>
          <target state="new">Copy and paste ink strokes with the clipboard</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Here, we demonstrate how to use the clipboard to transfer ink strokes between apps.</source>
          <target state="new">Here, we demonstrate how to use the clipboard to transfer ink strokes between apps.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>To support clipboard functionality, the built-in <bpt id="p1">[</bpt><bpt id="p2">**</bpt>InkStrokeContainer<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208492)</ept> cut and copy commands require one or more ink strokes be selected.</source>
          <target state="new">To support clipboard functionality, the built-in <bpt id="p1">[</bpt><bpt id="p2">**</bpt>InkStrokeContainer<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208492)</ept> cut and copy commands require one or more ink strokes be selected.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>For this example, we enable stroke selection when input is modified with a pen barrel button (or right mouse button).</source>
          <target state="new">For this example, we enable stroke selection when input is modified with a pen barrel button (or right mouse button).</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>For a complete example of how to implement stroke selection, see <bpt id="p1">[</bpt>Pass-through input for advanced processing<ept id="p1">](pen-and-stylus-interactions.md#passthrough)</ept> in <bpt id="p2">[</bpt>Pen and stylus interactions<ept id="p2">](pen-and-stylus-interactions.md)</ept>.</source>
          <target state="new">For a complete example of how to implement stroke selection, see <bpt id="p1">[</bpt>Pass-through input for advanced processing<ept id="p1">](pen-and-stylus-interactions.md#passthrough)</ept> in <bpt id="p2">[</bpt>Pen and stylus interactions<ept id="p2">](pen-and-stylus-interactions.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>First, we set up the UI.</source>
          <target state="new">First, we set up the UI.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The UI includes "Cut", "Copy", "Paste", and "Clear" buttons, along with the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>InkCanvas<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn858535)</ept> and a selection canvas.</source>
          <target state="new">The UI includes "Cut", "Copy", "Paste", and "Clear" buttons, along with the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>InkCanvas<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn858535)</ept> and a selection canvas.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>We then set some basic ink input behaviors.</source>
          <target state="new">We then set some basic ink input behaviors.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>InkPresenter<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn899081)</ept> is configured to interpret input data from both pen and mouse as ink strokes (<bpt id="p3">[</bpt><bpt id="p4">**</bpt>InputDeviceTypes<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn922019)</ept>).</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>InkPresenter<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn899081)</ept> is configured to interpret input data from both pen and mouse as ink strokes (<bpt id="p3">[</bpt><bpt id="p4">**</bpt>InputDeviceTypes<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn922019)</ept>).</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Listeners for the click events on the buttons as well as pointer and stroke events for selection functionality are also declared here.</source>
          <target state="new">Listeners for the click events on the buttons as well as pointer and stroke events for selection functionality are also declared here.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>For a complete example of how to implement stroke selection, see <bpt id="p1">[</bpt>Pass-through input for advanced processing<ept id="p1">](pen-and-stylus-interactions.md#passthrough)</ept> in <bpt id="p2">[</bpt>Pen and stylus interactions<ept id="p2">](pen-and-stylus-interactions.md)</ept> .</source>
          <target state="new">For a complete example of how to implement stroke selection, see <bpt id="p1">[</bpt>Pass-through input for advanced processing<ept id="p1">](pen-and-stylus-interactions.md#passthrough)</ept> in <bpt id="p2">[</bpt>Pen and stylus interactions<ept id="p2">](pen-and-stylus-interactions.md)</ept> .</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Finally, after adding stroke selection support, we implement clipboard functionality in the click event handlers of the <bpt id="p1">**</bpt>Cut<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Copy<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>Paste<ept id="p3">**</ept> buttons.</source>
          <target state="new">Finally, after adding stroke selection support, we implement clipboard functionality in the click event handlers of the <bpt id="p1">**</bpt>Cut<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Copy<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>Paste<ept id="p3">**</ept> buttons.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>For cut, we first call <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CopySelectedToClipboard<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br244232)</ept> on the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>InkStrokeContainer<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br208492)</ept> of the <bpt id="p5">[</bpt><bpt id="p6">**</bpt>InkPresenter<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/dn922011)</ept>.</source>
          <target state="new">For cut, we first call <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CopySelectedToClipboard<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br244232)</ept> on the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>InkStrokeContainer<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br208492)</ept> of the <bpt id="p5">[</bpt><bpt id="p6">**</bpt>InkPresenter<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/dn922011)</ept>.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>We then call <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DeleteSelected<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br244233)</ept> to remove the strokes from the ink canvas.</source>
          <target state="new">We then call <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DeleteSelected<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br244233)</ept> to remove the strokes from the ink canvas.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Finally, we delete all selection strokes from the selection canvas.</source>
          <target state="new">Finally, we delete all selection strokes from the selection canvas.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Related articles</source>
          <target state="new">Related articles</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Pen and stylus interactions<ept id="p1">](pen-and-stylus-interactions.md)</ept><ph id="ph1">
</ph><bpt id="p2">**</bpt>Samples<ept id="p2">**</ept></source>
          <target state="new"><bpt id="p1">[</bpt>Pen and stylus interactions<ept id="p1">](pen-and-stylus-interactions.md)</ept><ph id="ph1">
</ph><bpt id="p2">**</bpt>Samples<ept id="p2">**</ept></target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Ink sample</source>
          <target state="new">Ink sample</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Simple ink sample</source>
          <target state="new">Simple ink sample</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Complex ink sample</source>
          <target state="new">Complex ink sample</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>