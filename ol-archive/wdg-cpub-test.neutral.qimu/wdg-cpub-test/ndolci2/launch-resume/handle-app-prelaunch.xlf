<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci2\launch-resume\handle-app-prelaunch.md</xliffext:olfilepath>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0464a6230368dd19b9f88b603511416820d2e842</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-e58fd48" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Handle app prelaunch</source>
          <target state="new">Handle app prelaunch</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to handle app prelaunch by overriding the OnLaunched method.</source>
          <target state="new">Learn how to handle app prelaunch by overriding the OnLaunched method.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Handle app prelaunch</source>
          <target state="new">Handle app prelaunch</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Updated for UWP apps on Windows 10.</source>
          <target state="new">Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept></source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept></target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Important APIs</source>
          <target state="new">Important APIs</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>OnLaunched</source>
          <target state="new">OnLaunched</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Learn how to handle app prelaunch by overriding the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>OnLaunched<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242335)</ept> method.</source>
          <target state="new">Learn how to handle app prelaunch by overriding the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>OnLaunched<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242335)</ept> method.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="new">Introduction</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>When available system resources allow, the startup performance of Windows Store apps is improved by proactively launching the user’s most frequently used apps in the background.</source>
          <target state="new">When available system resources allow, the startup performance of Windows Store apps is improved by proactively launching the user’s most frequently used apps in the background.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A prelaunched app is put into the suspended state shortly after it is launched.</source>
          <target state="new">A prelaunched app is put into the suspended state shortly after it is launched.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>When the user invokes the app, the app is resumed by bringing it from the suspended state to the running state--which is faster than launching the app cold.</source>
          <target state="new">When the user invokes the app, the app is resumed by bringing it from the suspended state to the running state--which is faster than launching the app cold.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Prior to Windows 10, apps did not automatically take advantage of prelaunch.</source>
          <target state="new">Prior to Windows 10, apps did not automatically take advantage of prelaunch.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Starting in Windows 10, all Universal Windows Platform (UWP) apps automatically take advantage of prelaunch.</source>
          <target state="new">Starting in Windows 10, all Universal Windows Platform (UWP) apps automatically take advantage of prelaunch.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Most apps should work with prelaunch without any change.</source>
          <target state="new">Most apps should work with prelaunch without any change.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>However, some types of apps may need to change their startup behavior to work well with prelaunch.</source>
          <target state="new">However, some types of apps may need to change their startup behavior to work well with prelaunch.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For example, a messaging app that changes the users's online visibility during startup, or a game which assumes the user is present and displays elaborate visuals when the app starts up.</source>
          <target state="new">For example, a messaging app that changes the users's online visibility during startup, or a game which assumes the user is present and displays elaborate visuals when the app starts up.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Prelaunch and app lifecycle</source>
          <target state="new">Prelaunch and app lifecycle</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Once an app is prelaunched, it soon enters the suspended state.</source>
          <target state="new">Once an app is prelaunched, it soon enters the suspended state.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>(see <bpt id="p1">[</bpt>Handle app suspend<ept id="p1">](suspend-an-app.md)</ept>).</source>
          <target state="new">(see <bpt id="p1">[</bpt>Handle app suspend<ept id="p1">](suspend-an-app.md)</ept>).</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Detect and handle prelaunch</source>
          <target state="new">Detect and handle prelaunch</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Apps receive the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>LaunchActivatedEventArgs.PrelaunchActivated<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn263740)</ept> flag during activation.</source>
          <target state="new">Apps receive the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>LaunchActivatedEventArgs.PrelaunchActivated<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn263740)</ept> flag during activation.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Use this flag to determine whether to perform operations that should only be performed when the user explicitly launches the app as shown in the following excerpt from<bpt id="p1">[</bpt><bpt id="p2">**</bpt>Application.OnLaunched<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242335)</ept>.</source>
          <target state="new">Use this flag to determine whether to perform operations that should only be performed when the user explicitly launches the app as shown in the following excerpt from<bpt id="p1">[</bpt><bpt id="p2">**</bpt>Application.OnLaunched<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242335)</ept>.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Tip<ept id="p1">**</ept>  If you wish to opt-out of prelaunch, check the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>LaunchActivatedEventArgs.PrelaunchActivated<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/dn263740)</ept> flag.</source>
          <target state="new"><bpt id="p1">**</bpt>Tip<ept id="p1">**</ept>  If you wish to opt-out of prelaunch, check the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>LaunchActivatedEventArgs.PrelaunchActivated<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/dn263740)</ept> flag.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>If it is set, return from OnLaunched() before doing any work to create a frame or activate the window.</source>
          <target state="new">If it is set, return from OnLaunched() before doing any work to create a frame or activate the window.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Use the VisibilityChanged event</source>
          <target state="new">Use the VisibilityChanged event</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Apps activated by prelaunch are not visible to the user.</source>
          <target state="new">Apps activated by prelaunch are not visible to the user.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>They become visible when the user switches to them.</source>
          <target state="new">They become visible when the user switches to them.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>You may want to delay certain operations until your app's main window becomes visible.</source>
          <target state="new">You may want to delay certain operations until your app's main window becomes visible.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>For example, if your app displays a list of what's new items from a feed, you could update the list during the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>VisibilityChanged<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh702458)</ept> event rather than rely on a list that was built when the app was prelaunched that may be stale by the time the user activates the app.</source>
          <target state="new">For example, if your app displays a list of what's new items from a feed, you could update the list during the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>VisibilityChanged<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh702458)</ept> event rather than rely on a list that was built when the app was prelaunched that may be stale by the time the user activates the app.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The following code handles the <bpt id="p1">**</bpt>VisibilityChanged<ept id="p1">**</ept> event for <bpt id="p2">**</bpt>MainPage<ept id="p2">**</ept>:</source>
          <target state="new">The following code handles the <bpt id="p1">**</bpt>VisibilityChanged<ept id="p1">**</ept> event for <bpt id="p2">**</bpt>MainPage<ept id="p2">**</ept>:</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Guidance</source>
          <target state="new">Guidance</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Apps should not perform long running operations during prelaunch because the app will terminate if it can't be suspended quickly.</source>
          <target state="new">Apps should not perform long running operations during prelaunch because the app will terminate if it can't be suspended quickly.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Apps should not initiate audio playback from <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Application.OnLaunched<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242335)</ept> when the app is prelaunched because the app won't be visible and it won't be apparent why there is audio playing.</source>
          <target state="new">Apps should not initiate audio playback from <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Application.OnLaunched<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242335)</ept> when the app is prelaunched because the app won't be visible and it won't be apparent why there is audio playing.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Apps should not perform any operations during launch which assume that the app is visible to the user, or assume that the app was explicitly launched by the user.</source>
          <target state="new">Apps should not perform any operations during launch which assume that the app is visible to the user, or assume that the app was explicitly launched by the user.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Because an app can now be launched in the background without explicit user action, developers should consider the privacy, user experience and performance implications.</source>
          <target state="new">Because an app can now be launched in the background without explicit user action, developers should consider the privacy, user experience and performance implications.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>An example privacy consideration is when a social app should change the user state to online.</source>
          <target state="new">An example privacy consideration is when a social app should change the user state to online.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>It should wait until the user switches to the app instead of changing the status when the app is prelaunched.</source>
          <target state="new">It should wait until the user switches to the app instead of changing the status when the app is prelaunched.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>An example user experience consideration is that if you have an app, such as a game, that displays an introductory sequence when it is launched, you might delay the introductory sequence until the user switches to the app.</source>
          <target state="new">An example user experience consideration is that if you have an app, such as a game, that displays an introductory sequence when it is launched, you might delay the introductory sequence until the user switches to the app.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>An example performance implication is that you might wait until the user switches to the app to retrieve the current weather information instead of loading it when the app is prelaunched and then need to load it again when the app becomes visible to ensure that the information is current.</source>
          <target state="new">An example performance implication is that you might wait until the user switches to the app to retrieve the current weather information instead of loading it when the app is prelaunched and then need to load it again when the app becomes visible to ensure that the information is current.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>If your app clears its Live Tile when launched, defer this until the visibility changed event.</source>
          <target state="new">If your app clears its Live Tile when launched, defer this until the visibility changed event.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Telemetry for your app should distinguish between normal tile activations and prelaunch activations so that you can identify the scenario where problems occur.</source>
          <target state="new">Telemetry for your app should distinguish between normal tile activations and prelaunch activations so that you can identify the scenario where problems occur.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>If you have Microsoft Visual Studio 2015 Update 1 and Windows 10, Version 1511, you can simulate prelaunch for App your app in Visual Studio 2015 by choosing <bpt id="p1">**</bpt>Debug<ept id="p1">**</ept> <ph id="ph1">&amp;gt;</ph> <bpt id="p2">**</bpt>Other Debug Targets<ept id="p2">**</ept> <ph id="ph2">&amp;gt;</ph> <bpt id="p3">**</bpt>Debug Windows Universal App PreLaunch<ept id="p3">**</ept>.</source>
          <target state="new">If you have Microsoft Visual Studio 2015 Update 1 and Windows 10, Version 1511, you can simulate prelaunch for App your app in Visual Studio 2015 by choosing <bpt id="p1">**</bpt>Debug<ept id="p1">**</ept> <ph id="ph1">&amp;gt;</ph> <bpt id="p2">**</bpt>Other Debug Targets<ept id="p2">**</ept> <ph id="ph2">&amp;gt;</ph> <bpt id="p3">**</bpt>Debug Windows Universal App PreLaunch<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Related topics</source>
          <target state="new">Related topics</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>App lifecycle</source>
          <target state="new">App lifecycle</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>