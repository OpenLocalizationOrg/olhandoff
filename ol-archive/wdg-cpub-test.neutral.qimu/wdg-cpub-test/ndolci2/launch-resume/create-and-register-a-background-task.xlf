<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci2\launch-resume\create-and-register-a-background-task.md</xliffext:olfilepath>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5865fa4b645858c14437f1a31848274e6d995e02</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-e58fd48" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Create and register a background task</source>
          <target state="new">Create and register a background task</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Create a background task class and register it to run when your app is not in the foreground.</source>
          <target state="new">Create a background task class and register it to run when your app is not in the foreground.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Create and register a background task</source>
          <target state="new">Create and register a background task</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Updated for UWP apps on Windows 10.</source>
          <target state="new">Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept></source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept></target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Important APIs</source>
          <target state="new">Important APIs</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>IBackgroundTask</source>
          <target state="new">IBackgroundTask</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>BackgroundTaskBuilder</source>
          <target state="new">BackgroundTaskBuilder</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>BackgroundTaskCompletedEventHandler</source>
          <target state="new">BackgroundTaskCompletedEventHandler</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Create a background task class and register it to run when your app is not in the foreground.</source>
          <target state="new">Create a background task class and register it to run when your app is not in the foreground.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Create the Background Task class</source>
          <target state="new">Create the Background Task class</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You can run code in the background by writing classes that implement the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IBackgroundTask<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br224794)</ept> interface.</source>
          <target state="new">You can run code in the background by writing classes that implement the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IBackgroundTask<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br224794)</ept> interface.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This code will run when a specific event is triggered by using, for example, <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SystemTrigger<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br224839)</ept> or <bpt id="p3">[</bpt><bpt id="p4">**</bpt>MaintenanceTrigger<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/hh700517)</ept>.</source>
          <target state="new">This code will run when a specific event is triggered by using, for example, <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SystemTrigger<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br224839)</ept> or <bpt id="p3">[</bpt><bpt id="p4">**</bpt>MaintenanceTrigger<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/hh700517)</ept>.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The following steps show you how to write a new class that implements the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IBackgroundTask<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br224794)</ept> interface.</source>
          <target state="new">The following steps show you how to write a new class that implements the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IBackgroundTask<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br224794)</ept> interface.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Before getting started, create a new project in your solution for background tasks.</source>
          <target state="new">Before getting started, create a new project in your solution for background tasks.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Add a new empty class for your background task and import the <bpt id="p1">[</bpt>Windows.ApplicationModel.Background<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br224847)</ept> namespace.</source>
          <target state="new">Add a new empty class for your background task and import the <bpt id="p1">[</bpt>Windows.ApplicationModel.Background<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br224847)</ept> namespace.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Create a new project for background tasks and add it to your solution.</source>
          <target state="new">Create a new project for background tasks and add it to your solution.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To do this, right-click on your solution node in the <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept> and select Add-<ph id="ph1">&amp;gt;</ph>New Project.</source>
          <target state="new">To do this, right-click on your solution node in the <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept> and select Add-<ph id="ph1">&amp;gt;</ph>New Project.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Then select the <bpt id="p1">**</bpt>Windows Runtime Component (Universal Windows)<ept id="p1">**</ept> project type, name the project, and click OK.</source>
          <target state="new">Then select the <bpt id="p1">**</bpt>Windows Runtime Component (Universal Windows)<ept id="p1">**</ept> project type, name the project, and click OK.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Reference the background tasks project from your Universal Windows Platform (UWP) app project.</source>
          <target state="new">Reference the background tasks project from your Universal Windows Platform (UWP) app project.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For a C++ app, right-click on your app project and select <bpt id="p1">**</bpt>Properties<ept id="p1">**</ept>.</source>
          <target state="new">For a C++ app, right-click on your app project and select <bpt id="p1">**</bpt>Properties<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Then go to <bpt id="p1">**</bpt>Common Properties<ept id="p1">**</ept> and click <bpt id="p2">**</bpt>Add New Reference<ept id="p2">**</ept>, check the box next to your background tasks project, and click <bpt id="p3">**</bpt>OK<ept id="p3">**</ept> on both dialogs.</source>
          <target state="new">Then go to <bpt id="p1">**</bpt>Common Properties<ept id="p1">**</ept> and click <bpt id="p2">**</bpt>Add New Reference<ept id="p2">**</ept>, check the box next to your background tasks project, and click <bpt id="p3">**</bpt>OK<ept id="p3">**</ept> on both dialogs.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For a C# app, in your app project, right click on <bpt id="p1">**</bpt>References<ept id="p1">**</ept> and select <bpt id="p2">**</bpt>Add New Reference<ept id="p2">**</ept>.</source>
          <target state="new">For a C# app, in your app project, right click on <bpt id="p1">**</bpt>References<ept id="p1">**</ept> and select <bpt id="p2">**</bpt>Add New Reference<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Under <bpt id="p1">**</bpt>Solution<ept id="p1">**</ept>, select <bpt id="p2">**</bpt>Projects<ept id="p2">**</ept> and then select the name of your background task project and click <bpt id="p3">**</bpt>Ok<ept id="p3">**</ept>.</source>
          <target state="new">Under <bpt id="p1">**</bpt>Solution<ept id="p1">**</ept>, select <bpt id="p2">**</bpt>Projects<ept id="p2">**</ept> and then select the name of your background task project and click <bpt id="p3">**</bpt>Ok<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Create a new class that implements the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IBackgroundTask<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br224794)</ept> interface.</source>
          <target state="new">Create a new class that implements the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IBackgroundTask<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br224794)</ept> interface.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Run<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br224811)</ept> method is a required entry point that will be called when the specified event is triggered; this method is required in every background task.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Run<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br224811)</ept> method is a required entry point that will be called when the specified event is triggered; this method is required in every background task.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  The background task class itself - and all other classes in the background task project - need to be <bpt id="p2">**</bpt>public<ept id="p2">**</ept> classes that are <bpt id="p3">**</bpt>sealed<ept id="p3">**</ept>.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  The background task class itself - and all other classes in the background task project - need to be <bpt id="p2">**</bpt>public<ept id="p2">**</ept> classes that are <bpt id="p3">**</bpt>sealed<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The following sample code shows a very basic starting point for a background task class:</source>
          <target state="new">The following sample code shows a very basic starting point for a background task class:</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>[!div class="tabbedCodeSnippets"]</source>
          <target state="new">[!div class="tabbedCodeSnippets"]</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If you run any asynchronous code in your background task, then your background task needs to use a deferral.</source>
          <target state="new">If you run any asynchronous code in your background task, then your background task needs to use a deferral.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>If you don't use a deferral, then the background task process can terminate unexpectedly if the Run method completes before your asynchronous method call has completed.</source>
          <target state="new">If you don't use a deferral, then the background task process can terminate unexpectedly if the Run method completes before your asynchronous method call has completed.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Request the deferral in the Run method before calling the asynchronous method.</source>
          <target state="new">Request the deferral in the Run method before calling the asynchronous method.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Save the deferral to a global variable so it can be accessed from the asynchronous method.</source>
          <target state="new">Save the deferral to a global variable so it can be accessed from the asynchronous method.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Declare the deferral complete after the asynchronous code completes.</source>
          <target state="new">Declare the deferral complete after the asynchronous code completes.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The following sample code gets the deferral, saves it, and releases it when the asynchronous code is complete:</source>
          <target state="new">The following sample code gets the deferral, saves it, and releases it when the asynchronous code is complete:</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>[!div class="tabbedCodeSnippets"]</source>
          <target state="new">[!div class="tabbedCodeSnippets"]</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The following steps are completed in one of your app classes (for example, MainPage.xaml.cs).</source>
          <target state="new">The following steps are completed in one of your app classes (for example, MainPage.xaml.cs).</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  You can also create a function dedicated to registering background tasks - see <bpt id="p2">[</bpt>Register a background task<ept id="p2">](register-a-background-task.md)</ept>.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  You can also create a function dedicated to registering background tasks - see <bpt id="p2">[</bpt>Register a background task<ept id="p2">](register-a-background-task.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>In that case, instead of using the next 3 steps, you can simply construct the trigger and provide it to the registration function along with the task name, task entry point, and (optionally) a condition.</source>
          <target state="new">In that case, instead of using the next 3 steps, you can simply construct the trigger and provide it to the registration function along with the task name, task entry point, and (optionally) a condition.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Register the background task to run</source>
          <target state="new">Register the background task to run</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Find out if the background task is already registered by iterating through the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>BackgroundTaskRegistration.AllTasks<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br224787)</ept> property.</source>
          <target state="new">Find out if the background task is already registered by iterating through the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>BackgroundTaskRegistration.AllTasks<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br224787)</ept> property.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>This step is important; if your app doesn't check for existing background task registrations, it could easily register the task multiple times, causing issues with performance and maxing out the task's available CPU time before work can complete.</source>
          <target state="new">This step is important; if your app doesn't check for existing background task registrations, it could easily register the task multiple times, causing issues with performance and maxing out the task's available CPU time before work can complete.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The following example iterates on the AllTasks property and sets a flag variable to true if the task is already registered:</source>
          <target state="new">The following example iterates on the AllTasks property and sets a flag variable to true if the task is already registered:</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>[!div class="tabbedCodeSnippets"]</source>
          <target state="new">[!div class="tabbedCodeSnippets"]</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>If the background task is not already registered, use <bpt id="p1">[</bpt><bpt id="p2">**</bpt>BackgroundTaskBuilder<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br224768)</ept> to create an instance of your background task.</source>
          <target state="new">If the background task is not already registered, use <bpt id="p1">[</bpt><bpt id="p2">**</bpt>BackgroundTaskBuilder<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br224768)</ept> to create an instance of your background task.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The task entry point should be the name of your background task class prefixed by the namespace.</source>
          <target state="new">The task entry point should be the name of your background task class prefixed by the namespace.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The background task trigger controls when the background task will run.</source>
          <target state="new">The background task trigger controls when the background task will run.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>For a list of possible triggers, see <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SystemTrigger<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br224839)</ept>.</source>
          <target state="new">For a list of possible triggers, see <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SystemTrigger<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br224839)</ept>.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>For example, this code creates a new background task and sets it to run when the <bpt id="p1">**</bpt>TimeZoneChanged<ept id="p1">**</ept> trigger is fired:</source>
          <target state="new">For example, this code creates a new background task and sets it to run when the <bpt id="p1">**</bpt>TimeZoneChanged<ept id="p1">**</ept> trigger is fired:</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>[!div class="tabbedCodeSnippets"]</source>
          <target state="new">[!div class="tabbedCodeSnippets"]</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>You can add a condition to control when your task will run after the trigger event occurs (optional).</source>
          <target state="new">You can add a condition to control when your task will run after the trigger event occurs (optional).</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>For example, if you don't want the task to run until the user is present, use the condition <bpt id="p1">**</bpt>UserPresent<ept id="p1">**</ept>.</source>
          <target state="new">For example, if you don't want the task to run until the user is present, use the condition <bpt id="p1">**</bpt>UserPresent<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>For a list of possible conditions, see <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SystemConditionType<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br224835)</ept>.</source>
          <target state="new">For a list of possible conditions, see <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SystemConditionType<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br224835)</ept>.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The following sample code assigns a condition requiring the user to be present:</source>
          <target state="new">The following sample code assigns a condition requiring the user to be present:</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>[!div class="tabbedCodeSnippets"]</source>
          <target state="new">[!div class="tabbedCodeSnippets"]</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Register the background task by calling the Register method on the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>BackgroundTaskBuilder<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br224768)</ept> object.</source>
          <target state="new">Register the background task by calling the Register method on the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>BackgroundTaskBuilder<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br224768)</ept> object.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Store the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>BackgroundTaskRegistration<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br224786)</ept> result so it can be used in the next step.</source>
          <target state="new">Store the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>BackgroundTaskRegistration<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br224786)</ept> result so it can be used in the next step.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The following code registers the background task and stores the result:</source>
          <target state="new">The following code registers the background task and stores the result:</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>[!div class="tabbedCodeSnippets"] <ph id="ph1">    ```cs
    BackgroundTaskRegistration task = builder.Register();
    ```
    ```cpp
    BackgroundTaskRegistration^ task = builder-&gt;Register();
    ```</ph></source>
          <target state="new">[!div class="tabbedCodeSnippets"] <ph id="ph1">    ```cs
    BackgroundTaskRegistration task = builder.Register();
    ```
    ```cpp
    BackgroundTaskRegistration^ task = builder-&gt;Register();
    ```</ph></target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Handle background task completion using event handlers</source>
          <target state="new">Handle background task completion using event handlers</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>You should register a method with the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>BackgroundTaskCompletedEventHandler<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br224781)</ept>, so that your app can get results from the background task.</source>
          <target state="new">You should register a method with the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>BackgroundTaskCompletedEventHandler<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br224781)</ept>, so that your app can get results from the background task.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>When the app is launched or resumed, the mark method will be called if the background task has completed since the last time the app was in the foreground.</source>
          <target state="new">When the app is launched or resumed, the mark method will be called if the background task has completed since the last time the app was in the foreground.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>(The OnCompleted method will be called immediately if the background task completes while your app is currently in the foreground.)</source>
          <target state="new">(The OnCompleted method will be called immediately if the background task completes while your app is currently in the foreground.)</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Write an OnCompleted method to handle the completion of background tasks.</source>
          <target state="new">Write an OnCompleted method to handle the completion of background tasks.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>For example, the background task result might cause a UI update.</source>
          <target state="new">For example, the background task result might cause a UI update.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The method footprint shown here is required for the OnCompleted event handler method, even though this example does not use the <bpt id="p1">*</bpt>args<ept id="p1">*</ept> parameter.</source>
          <target state="new">The method footprint shown here is required for the OnCompleted event handler method, even though this example does not use the <bpt id="p1">*</bpt>args<ept id="p1">*</ept> parameter.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The following sample code recognizes background task completion and calls an example UI update method that takes a message string.</source>
          <target state="new">The following sample code recognizes background task completion and calls an example UI update method that takes a message string.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>[!div class="tabbedCodeSnippets"] <ph id="ph1">    ```cs
    private void OnCompleted(IBackgroundTaskRegistration task, BackgroundTaskCompletedEventArgs args)
    {
        var settings = Windows.Storage.ApplicationData.Current.LocalSettings;
        var key = task.TaskId.ToString();
        var message = settings.Values[key].ToString();
        UpdateUI(message);
    }
    ```
    ```cpp
    void ExampleBackgroundTask::OnCompleted(BackgroundTaskRegistration^ task, BackgroundTaskCompletedEventArgs^ args)
    {
        auto settings = ApplicationData::Current-&gt;LocalSettings-&gt;Values;
        auto key = task-&gt;TaskId.ToString();
        auto message = dynamic_cast&lt;String^&gt;(settings-&gt;Lookup(key));
        UpdateUI(message);
    }
    ```</ph></source>
          <target state="new">[!div class="tabbedCodeSnippets"] <ph id="ph1">    ```cs
    private void OnCompleted(IBackgroundTaskRegistration task, BackgroundTaskCompletedEventArgs args)
    {
        var settings = Windows.Storage.ApplicationData.Current.LocalSettings;
        var key = task.TaskId.ToString();
        var message = settings.Values[key].ToString();
        UpdateUI(message);
    }
    ```
    ```cpp
    void ExampleBackgroundTask::OnCompleted(BackgroundTaskRegistration^ task, BackgroundTaskCompletedEventArgs^ args)
    {
        auto settings = ApplicationData::Current-&gt;LocalSettings-&gt;Values;
        auto key = task-&gt;TaskId.ToString();
        auto message = dynamic_cast&lt;String^&gt;(settings-&gt;Lookup(key));
        UpdateUI(message);
    }
    ```</ph></target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Go back to where you registered the background task.</source>
          <target state="new">Go back to where you registered the background task.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>After that line of code, add a new <bpt id="p1">[</bpt><bpt id="p2">**</bpt>BackgroundTaskCompletedEventHandler<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br224781)</ept> object.</source>
          <target state="new">After that line of code, add a new <bpt id="p1">[</bpt><bpt id="p2">**</bpt>BackgroundTaskCompletedEventHandler<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br224781)</ept> object.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Provide your OnCompleted method as the parameter for the <bpt id="p1">**</bpt>BackgroundTaskCompletedEventHandler<ept id="p1">**</ept> constructor.</source>
          <target state="new">Provide your OnCompleted method as the parameter for the <bpt id="p1">**</bpt>BackgroundTaskCompletedEventHandler<ept id="p1">**</ept> constructor.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The following sample code adds a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>BackgroundTaskCompletedEventHandler<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br224781)</ept> to the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>BackgroundTaskRegistration<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br224786)</ept>:</source>
          <target state="new">The following sample code adds a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>BackgroundTaskCompletedEventHandler<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br224781)</ept> to the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>BackgroundTaskRegistration<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br224786)</ept>:</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>[!div class="tabbedCodeSnippets"] <ph id="ph1">    ```cs
    task.Completed += new BackgroundTaskCompletedEventHandler(OnCompleted);
    ```
    ```cpp
    task-&gt;Completed += ref new BackgroundTaskCompletedEventHandler(this, &amp;amp;ExampleBackgroundTask::OnCompleted);
    ```</ph></source>
          <target state="new">[!div class="tabbedCodeSnippets"] <ph id="ph1">    ```cs
    task.Completed += new BackgroundTaskCompletedEventHandler(OnCompleted);
    ```
    ```cpp
    task-&gt;Completed += ref new BackgroundTaskCompletedEventHandler(this, &amp;amp;ExampleBackgroundTask::OnCompleted);
    ```</ph></target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Declare that your app uses background tasks in the app manifest</source>
          <target state="new">Declare that your app uses background tasks in the app manifest</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Before your app can run background tasks, you must declare each background task in the app manifest.</source>
          <target state="new">Before your app can run background tasks, you must declare each background task in the app manifest.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>If your app attempts to register a background task with a trigger that isn't listed in the manifest, the registration will fail.</source>
          <target state="new">If your app attempts to register a background task with a trigger that isn't listed in the manifest, the registration will fail.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Open the package manifest designer by opening the file named Package.appxmanifest.</source>
          <target state="new">Open the package manifest designer by opening the file named Package.appxmanifest.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Open the <bpt id="p1">**</bpt>Declarations<ept id="p1">**</ept> tab.</source>
          <target state="new">Open the <bpt id="p1">**</bpt>Declarations<ept id="p1">**</ept> tab.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>From the <bpt id="p1">**</bpt>Available Declarations<ept id="p1">**</ept> drop-down, select <bpt id="p2">**</bpt>Background Tasks<ept id="p2">**</ept> and click <bpt id="p3">**</bpt>Add<ept id="p3">**</ept>.</source>
          <target state="new">From the <bpt id="p1">**</bpt>Available Declarations<ept id="p1">**</ept> drop-down, select <bpt id="p2">**</bpt>Background Tasks<ept id="p2">**</ept> and click <bpt id="p3">**</bpt>Add<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Select the <bpt id="p1">**</bpt>System event<ept id="p1">**</ept> checkbox.</source>
          <target state="new">Select the <bpt id="p1">**</bpt>System event<ept id="p1">**</ept> checkbox.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Entry point:<ept id="p1">**</ept> textbox, enter the namespace and name of your background class which is for this example is RuntimeComponent1.ExampleBackgroundTask.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Entry point:<ept id="p1">**</ept> textbox, enter the namespace and name of your background class which is for this example is RuntimeComponent1.ExampleBackgroundTask.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Close the manfiest designer.</source>
          <target state="new">Close the manfiest designer.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The following Extensions element is added to your Package.appxmanifest file to register the background task:</source>
          <target state="new">The following Extensions element is added to your Package.appxmanifest file to register the background task:</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Summary and next steps</source>
          <target state="new">Summary and next steps</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>You should now understand the basics of how to write a background task class, how to register the background task from within your app, and how to make your app recognize when the background task is complete.</source>
          <target state="new">You should now understand the basics of how to write a background task class, how to register the background task from within your app, and how to make your app recognize when the background task is complete.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>You should also understand how to update the application manifest so that your app can successfully register the background task.</source>
          <target state="new">You should also understand how to update the application manifest so that your app can successfully register the background task.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  Download the <bpt id="p2">[</bpt>background task sample<ept id="p2">](http://go.microsoft.com/fwlink/p/?LinkId=618666)</ept> to see similar code examples in the context of a complete and robust UWP app that uses background tasks.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  Download the <bpt id="p2">[</bpt>background task sample<ept id="p2">](http://go.microsoft.com/fwlink/p/?LinkId=618666)</ept> to see similar code examples in the context of a complete and robust UWP app that uses background tasks.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>See the following related topics for API reference, background task conceptual guidance, and more detailed instructions for writing apps that use background tasks.</source>
          <target state="new">See the following related topics for API reference, background task conceptual guidance, and more detailed instructions for writing apps that use background tasks.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  This article is for Windows 10 developers writing Universal Windows Platform (UWP) apps.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  This article is for Windows 10 developers writing Universal Windows Platform (UWP) apps.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>If you’re developing for Windows 8.x or Windows Phone 8.x, see the <bpt id="p1">[</bpt>archived documentation<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept>.</source>
          <target state="new">If you’re developing for Windows 8.x or Windows Phone 8.x, see the <bpt id="p1">[</bpt>archived documentation<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept>.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Related topics</source>
          <target state="new">Related topics</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Detailed background task instructional topics</source>
          <target state="new">Detailed background task instructional topics</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Respond to system events with background tasks</source>
          <target state="new">Respond to system events with background tasks</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Register a background task</source>
          <target state="new">Register a background task</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Set conditions for running a background task</source>
          <target state="new">Set conditions for running a background task</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Use a maintenance trigger</source>
          <target state="new">Use a maintenance trigger</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Handle a cancelled background task</source>
          <target state="new">Handle a cancelled background task</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Monitor background task progress and completion</source>
          <target state="new">Monitor background task progress and completion</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Run a background task on a timer</source>
          <target state="new">Run a background task on a timer</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Background task guidance</source>
          <target state="new">Background task guidance</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Guidelines for background tasks</source>
          <target state="new">Guidelines for background tasks</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Debug a background task</source>
          <target state="new">Debug a background task</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>How to trigger suspend, resume, and background events in Windows Store apps (when debugging)</source>
          <target state="new">How to trigger suspend, resume, and background events in Windows Store apps (when debugging)</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Background Task API Reference</source>
          <target state="new">Background Task API Reference</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Windows.ApplicationModel.Background</source>
          <target state="new">Windows.ApplicationModel.Background</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>