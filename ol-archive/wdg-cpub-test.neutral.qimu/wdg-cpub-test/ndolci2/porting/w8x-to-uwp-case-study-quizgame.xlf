<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci2\porting\w8x-to-uwp-case-study-quizgame.md</xliffext:olfilepath>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a121898d939fec1b031af9d669a82c77d63f9ce9</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-e58fd48" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>This topic presents a case study of porting a functioning peer-to-peer quiz game WinRT 8.1 sample app to a Windows 10 Universal Windows Platform (UWP) app.</source>
          <target state="new">This topic presents a case study of porting a functioning peer-to-peer quiz game WinRT 8.1 sample app to a Windows 10 Universal Windows Platform (UWP) app.</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Windows Runtime 8.x to UWP case study, QuizGame peer-to-peer sample app</source>
          <target state="new">Windows Runtime 8.x to UWP case study, QuizGame peer-to-peer sample app</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Windows Runtime 8.x to UWP case study: QuizGame peer-to-peer sample app</source>
          <target state="new">Windows Runtime 8.x to UWP case study: QuizGame peer-to-peer sample app</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Updated for UWP apps on Windows 10.</source>
          <target state="new">Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept></source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept></target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This topic presents a case study of porting a functioning peer-to-peer quiz game WinRT 8.1 sample app to a Windows 10 Universal Windows Platform (UWP) app.</source>
          <target state="new">This topic presents a case study of porting a functioning peer-to-peer quiz game WinRT 8.1 sample app to a Windows 10 Universal Windows Platform (UWP) app.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>A Universal 8.1 app is one that builds two versions of the same app: one app package for Windows 8.1, and a different app package for Windows Phone 8.1.</source>
          <target state="new">A Universal 8.1 app is one that builds two versions of the same app: one app package for Windows 8.1, and a different app package for Windows Phone 8.1.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The WinRT 8.1 version of QuizGame uses a Universal Windows app project arrangement, but it takes a different approach and it builds a functionally distinct app for the two platforms.</source>
          <target state="new">The WinRT 8.1 version of QuizGame uses a Universal Windows app project arrangement, but it takes a different approach and it builds a functionally distinct app for the two platforms.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The Windows 8.1 app package serves as the host for a quiz game session, while the Windows Phone 8.1 app package plays the role of the client to the host.</source>
          <target state="new">The Windows 8.1 app package serves as the host for a quiz game session, while the Windows Phone 8.1 app package plays the role of the client to the host.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The two halves of the quiz game session communicate via peer-to-peer networking.</source>
          <target state="new">The two halves of the quiz game session communicate via peer-to-peer networking.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Tailoring the two halves to PC, and phone, respectively makes good sense.</source>
          <target state="new">Tailoring the two halves to PC, and phone, respectively makes good sense.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>But, wouldn't it be even better if you could run both the host and the client on just about any device of your choosing?</source>
          <target state="new">But, wouldn't it be even better if you could run both the host and the client on just about any device of your choosing?</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>In this case study, we'll port both apps to Windows 10 where they will each build into a single app package that users can install onto a wide range of devices.</source>
          <target state="new">In this case study, we'll port both apps to Windows 10 where they will each build into a single app package that users can install onto a wide range of devices.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The app uses patterns that make use of views and view models.</source>
          <target state="new">The app uses patterns that make use of views and view models.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>As a result of this clean separation, the porting process for this app is very straightforward, as you'll see.</source>
          <target state="new">As a result of this clean separation, the porting process for this app is very straightforward, as you'll see.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  This sample assumes your network is configured to send and receive custom UDP group multicast packets (most home networks are, although your work network may not be).</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  This sample assumes your network is configured to send and receive custom UDP group multicast packets (most home networks are, although your work network may not be).</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The sample also sends and receives TCP packets.</source>
          <target state="new">The sample also sends and receives TCP packets.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>   When opening QuizGame10 in Visual Studio, if you see the message "Visual Studio update required", then follow the steps in <bpt id="p2">[</bpt>TargetPlatformVersion<ept id="p2">](w8x-to-uwp-troubleshooting.md#targetplatformversion)</ept>.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>   When opening QuizGame10 in Visual Studio, if you see the message "Visual Studio update required", then follow the steps in <bpt id="p2">[</bpt>TargetPlatformVersion<ept id="p2">](w8x-to-uwp-troubleshooting.md#targetplatformversion)</ept>.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Downloads</source>
          <target state="new">Downloads</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Download the QuizGame Universal 8.1 app<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=532953)</ept>.</source>
          <target state="new"><bpt id="p1">[</bpt>Download the QuizGame Universal 8.1 app<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=532953)</ept>.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Download the QuizGame10 Windows 10 app<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=532954)</ept>.</source>
          <target state="new"><bpt id="p1">[</bpt>Download the QuizGame10 Windows 10 app<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=532954)</ept>.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The WinRT 8.1 solution</source>
          <target state="new">The WinRT 8.1 solution</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Here’s what QuizGame—the app that we're going to port—looks like.</source>
          <target state="new">Here’s what QuizGame—the app that we're going to port—looks like.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>the quizgame host app running on windows</source>
          <target state="new">the quizgame host app running on windows</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The QuizGame host app running on Windows</source>
          <target state="new">The QuizGame host app running on Windows</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>the quizgame client app running on windows phone</source>
          <target state="new">the quizgame client app running on windows phone</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The QuizGame client app running on Windows Phone</source>
          <target state="new">The QuizGame client app running on Windows Phone</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A walkthrough of QuizGame in use</source>
          <target state="new">A walkthrough of QuizGame in use</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This is a short hypothetical account of the app in use, but it provides useful info should you want to try out the app for yourself over your wireless network.</source>
          <target state="new">This is a short hypothetical account of the app in use, but it provides useful info should you want to try out the app for yourself over your wireless network.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>A fun quiz game is taking place in a bar.</source>
          <target state="new">A fun quiz game is taking place in a bar.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>There's a big TV in the bar that everyone can see.</source>
          <target state="new">There's a big TV in the bar that everyone can see.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The quizmaster has a PC whose output is being shown on the TV.</source>
          <target state="new">The quizmaster has a PC whose output is being shown on the TV.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>That PC has "the host app" running on it.</source>
          <target state="new">That PC has "the host app" running on it.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Anyone who wants to take part in the quiz just needs to install "the client app" on their phone or Surface.</source>
          <target state="new">Anyone who wants to take part in the quiz just needs to install "the client app" on their phone or Surface.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The host app is in lobby mode, and on the big TV, it's advertising that it's ready for client apps to connect.</source>
          <target state="new">The host app is in lobby mode, and on the big TV, it's advertising that it's ready for client apps to connect.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Joan launches the client app on her mobile device.</source>
          <target state="new">Joan launches the client app on her mobile device.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>She types her name into the <bpt id="p1">**</bpt>Player name<ept id="p1">**</ept> text box and taps <bpt id="p2">**</bpt>Join game<ept id="p2">**</ept>.</source>
          <target state="new">She types her name into the <bpt id="p1">**</bpt>Player name<ept id="p1">**</ept> text box and taps <bpt id="p2">**</bpt>Join game<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The host app acknowledges that Joan has joined by displaying her name, and Joan’s client app indicates that it's waiting for the game to begin.</source>
          <target state="new">The host app acknowledges that Joan has joined by displaying her name, and Joan’s client app indicates that it's waiting for the game to begin.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Next, Maxwell goes through those same steps on his mobile device.</source>
          <target state="new">Next, Maxwell goes through those same steps on his mobile device.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The quizmaster clicks <bpt id="p1">**</bpt>Start game<ept id="p1">**</ept> and the host app shows a question and the possible answers (it also shows a list of the joined players in normal fontweight, colored gray).</source>
          <target state="new">The quizmaster clicks <bpt id="p1">**</bpt>Start game<ept id="p1">**</ept> and the host app shows a question and the possible answers (it also shows a list of the joined players in normal fontweight, colored gray).</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Simultaneously, the answers appear displayed on buttons on joined client devices.</source>
          <target state="new">Simultaneously, the answers appear displayed on buttons on joined client devices.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Joan taps the button with the answer "1975" on it whereupon all her buttons become disabled.</source>
          <target state="new">Joan taps the button with the answer "1975" on it whereupon all her buttons become disabled.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>On the host app, Joan’s name is painted green (and becomes bold) in acknowledgment of the receipt of her answer.</source>
          <target state="new">On the host app, Joan’s name is painted green (and becomes bold) in acknowledgment of the receipt of her answer.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Maxwell answers, also.</source>
          <target state="new">Maxwell answers, also.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The quizmaster, noting that all players' names are green, clicks <bpt id="p1">**</bpt>Next question<ept id="p1">**</ept>.</source>
          <target state="new">The quizmaster, noting that all players' names are green, clicks <bpt id="p1">**</bpt>Next question<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Questions continue to be asked and answered in this same cycle.</source>
          <target state="new">Questions continue to be asked and answered in this same cycle.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>When the last question is being shown on the host app, <bpt id="p1">**</bpt>Show results<ept id="p1">**</ept> is the content of the button, and not <bpt id="p2">**</bpt>Next question<ept id="p2">**</ept>.</source>
          <target state="new">When the last question is being shown on the host app, <bpt id="p1">**</bpt>Show results<ept id="p1">**</ept> is the content of the button, and not <bpt id="p2">**</bpt>Next question<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>When <bpt id="p1">**</bpt>Show results<ept id="p1">**</ept> is clicked, the results are shown.</source>
          <target state="new">When <bpt id="p1">**</bpt>Show results<ept id="p1">**</ept> is clicked, the results are shown.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Clicking <bpt id="p1">**</bpt>Return to lobby<ept id="p1">**</ept> returns to the beginning of the game lifecycle with the exception that joined players remain joined.</source>
          <target state="new">Clicking <bpt id="p1">**</bpt>Return to lobby<ept id="p1">**</ept> returns to the beginning of the game lifecycle with the exception that joined players remain joined.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>But, going back to the lobby gives new players a chance to join, and even a convenient time for joined players to leave (although a joined player can leave at any time by tapping <bpt id="p1">**</bpt>Leave game<ept id="p1">**</ept>).</source>
          <target state="new">But, going back to the lobby gives new players a chance to join, and even a convenient time for joined players to leave (although a joined player can leave at any time by tapping <bpt id="p1">**</bpt>Leave game<ept id="p1">**</ept>).</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Local test mode</source>
          <target state="new">Local test mode</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>To try out the app and its interactions on a single PC instead of distributed across devices, you can build the host app in local test mode.</source>
          <target state="new">To try out the app and its interactions on a single PC instead of distributed across devices, you can build the host app in local test mode.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>This mode completely bypasses use of the network.</source>
          <target state="new">This mode completely bypasses use of the network.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Instead, the UI of the host app displays the host portion to the left of the window and, to the right, two copies of the client app UI stacked vertically (note that, in this version, the local test mode UI is fixed for a PC display; it does not adapt to small devices).</source>
          <target state="new">Instead, the UI of the host app displays the host portion to the left of the window and, to the right, two copies of the client app UI stacked vertically (note that, in this version, the local test mode UI is fixed for a PC display; it does not adapt to small devices).</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>These segments of UI, all in the same app, communicate with one another via a mock client communicator, which simulates the interactions that would otherwise take place over the network.</source>
          <target state="new">These segments of UI, all in the same app, communicate with one another via a mock client communicator, which simulates the interactions that would otherwise take place over the network.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>To activate local test mode, define <bpt id="p1">**</bpt>LOCALTESTMODEON<ept id="p1">**</ept> (in project properties) as a conditional compilation symbol, and rebuild.</source>
          <target state="new">To activate local test mode, define <bpt id="p1">**</bpt>LOCALTESTMODEON<ept id="p1">**</ept> (in project properties) as a conditional compilation symbol, and rebuild.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Porting to a Windows 10 project</source>
          <target state="new">Porting to a Windows 10 project</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>QuizGame has the following pieces.</source>
          <target state="new">QuizGame has the following pieces.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>P2PHelper.</source>
          <target state="new">P2PHelper.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>This is a portable class library that contains the peer-to-peer networking logic.</source>
          <target state="new">This is a portable class library that contains the peer-to-peer networking logic.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>QuizGame.Windows.</source>
          <target state="new">QuizGame.Windows.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>This is the project that builds the app package for the host app, which targets Windows 8.1.</source>
          <target state="new">This is the project that builds the app package for the host app, which targets Windows 8.1.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>QuizGame.WindowsPhone.</source>
          <target state="new">QuizGame.WindowsPhone.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>This is the project that builds the app package for the client app, which targets Windows Phone 8.1.</source>
          <target state="new">This is the project that builds the app package for the client app, which targets Windows Phone 8.1.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>QuizGame.Shared.</source>
          <target state="new">QuizGame.Shared.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>This is the project that contains source code, markup files, and other assets and resources, that are used by both of the other two projects.</source>
          <target state="new">This is the project that contains source code, markup files, and other assets and resources, that are used by both of the other two projects.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>For this case study, we have the usual options described in <bpt id="p1">[</bpt>If you have a Universal 8.1 app<ept id="p1">](w8x-to-uwp-root.md#if-you-have-an-81-universal-windows-app)</ept> with respect to what devices to support.</source>
          <target state="new">For this case study, we have the usual options described in <bpt id="p1">[</bpt>If you have a Universal 8.1 app<ept id="p1">](w8x-to-uwp-root.md#if-you-have-an-81-universal-windows-app)</ept> with respect to what devices to support.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Based on those options, we'll port QuizGame.Windows to a new Windows 10 project called QuizGameHost.</source>
          <target state="new">Based on those options, we'll port QuizGame.Windows to a new Windows 10 project called QuizGameHost.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>And, we'll port QuizGame.WindowsPhone to a new Windows 10 project called QuizGameClient.</source>
          <target state="new">And, we'll port QuizGame.WindowsPhone to a new Windows 10 project called QuizGameClient.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>These projects will target the universal device family, so they will run on any device.</source>
          <target state="new">These projects will target the universal device family, so they will run on any device.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>And, we'll keep the QuizGame.Shared source files, etc, in their own folder, and we'll link those shared files into the two new projects.</source>
          <target state="new">And, we'll keep the QuizGame.Shared source files, etc, in their own folder, and we'll link those shared files into the two new projects.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Just like before, we'll keep everything in one solution and we'll name it QuizGame10.</source>
          <target state="new">Just like before, we'll keep everything in one solution and we'll name it QuizGame10.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The QuizGame10 solution</source>
          <target state="new">The QuizGame10 solution</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Create a new solution (<bpt id="p1">**</bpt>New Project<ept id="p1">**</ept> <ph id="ph1">&amp;gt;</ph> <bpt id="p2">**</bpt>Other Project Types<ept id="p2">**</ept> <ph id="ph2">&amp;gt;</ph> <bpt id="p3">**</bpt>Visual Studio Solutions<ept id="p3">**</ept>) and name it QuizGame10.</source>
          <target state="new">Create a new solution (<bpt id="p1">**</bpt>New Project<ept id="p1">**</ept> <ph id="ph1">&amp;gt;</ph> <bpt id="p2">**</bpt>Other Project Types<ept id="p2">**</ept> <ph id="ph2">&amp;gt;</ph> <bpt id="p3">**</bpt>Visual Studio Solutions<ept id="p3">**</ept>) and name it QuizGame10.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>P2PHelper</source>
          <target state="new">P2PHelper</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>In the solution, create a new Windows 10 class library project (<bpt id="p1">**</bpt>New Project<ept id="p1">**</ept> <ph id="ph1">&amp;gt;</ph> <bpt id="p2">**</bpt>Windows Universal<ept id="p2">**</ept> <ph id="ph2">&amp;gt;</ph> <bpt id="p3">**</bpt>Class Library (Windows Universal)<ept id="p3">**</ept>) and name it P2PHelper.</source>
          <target state="new">In the solution, create a new Windows 10 class library project (<bpt id="p1">**</bpt>New Project<ept id="p1">**</ept> <ph id="ph1">&amp;gt;</ph> <bpt id="p2">**</bpt>Windows Universal<ept id="p2">**</ept> <ph id="ph2">&amp;gt;</ph> <bpt id="p3">**</bpt>Class Library (Windows Universal)<ept id="p3">**</ept>) and name it P2PHelper.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Delete Class1.cs from the new project.</source>
          <target state="new">Delete Class1.cs from the new project.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Copy P2PSession.cs, P2PSessionClient.cs, and P2PSessionHost.cs into the new project's folder and include the copied files in the new project.</source>
          <target state="new">Copy P2PSession.cs, P2PSessionClient.cs, and P2PSessionHost.cs into the new project's folder and include the copied files in the new project.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The project will build without needing further changes.</source>
          <target state="new">The project will build without needing further changes.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Shared files</source>
          <target state="new">Shared files</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Copy the folders Common, Model, View, and ViewModel from <ph id="ph1">\\</ph>QuizGame.Shared<ph id="ph2">\\</ph> to <ph id="ph3">\\</ph>QuizGame10<ph id="ph4">\\</ph>.</source>
          <target state="new">Copy the folders Common, Model, View, and ViewModel from <ph id="ph1">\\</ph>QuizGame.Shared<ph id="ph2">\\</ph> to <ph id="ph3">\\</ph>QuizGame10<ph id="ph4">\\</ph>.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Common, Model, View, and ViewModel are what we'll mean when we refer to the shared folders on disk.</source>
          <target state="new">Common, Model, View, and ViewModel are what we'll mean when we refer to the shared folders on disk.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>QuizGameHost</source>
          <target state="new">QuizGameHost</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Create a new Windows 10 app project (<bpt id="p1">**</bpt>Add<ept id="p1">**</ept> <ph id="ph1">&amp;gt;</ph> <bpt id="p2">**</bpt>New Project<ept id="p2">**</ept> <ph id="ph2">&amp;gt;</ph> <bpt id="p3">**</bpt>Windows Universal<ept id="p3">**</ept> <ph id="ph3">&amp;gt;</ph> <bpt id="p4">**</bpt>Blank Application (Windows Universal)<ept id="p4">**</ept>) and name it QuizGameHost.</source>
          <target state="new">Create a new Windows 10 app project (<bpt id="p1">**</bpt>Add<ept id="p1">**</ept> <ph id="ph1">&amp;gt;</ph> <bpt id="p2">**</bpt>New Project<ept id="p2">**</ept> <ph id="ph2">&amp;gt;</ph> <bpt id="p3">**</bpt>Windows Universal<ept id="p3">**</ept> <ph id="ph3">&amp;gt;</ph> <bpt id="p4">**</bpt>Blank Application (Windows Universal)<ept id="p4">**</ept>) and name it QuizGameHost.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Add a reference to P2PHelper (<bpt id="p1">**</bpt>Add Reference<ept id="p1">**</ept> <ph id="ph1">&amp;gt;</ph> <bpt id="p2">**</bpt>Projects<ept id="p2">**</ept> <ph id="ph2">&amp;gt;</ph> <bpt id="p3">**</bpt>Solution<ept id="p3">**</ept> <ph id="ph3">&amp;gt;</ph> <bpt id="p4">**</bpt>P2PHelper<ept id="p4">**</ept>).</source>
          <target state="new">Add a reference to P2PHelper (<bpt id="p1">**</bpt>Add Reference<ept id="p1">**</ept> <ph id="ph1">&amp;gt;</ph> <bpt id="p2">**</bpt>Projects<ept id="p2">**</ept> <ph id="ph2">&amp;gt;</ph> <bpt id="p3">**</bpt>Solution<ept id="p3">**</ept> <ph id="ph3">&amp;gt;</ph> <bpt id="p4">**</bpt>P2PHelper<ept id="p4">**</ept>).</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, create a new folder for each of the shared folders on disk.</source>
          <target state="new">In <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, create a new folder for each of the shared folders on disk.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>In turn, right-click each folder you just created and click <bpt id="p1">**</bpt>Add<ept id="p1">**</ept> <ph id="ph1">&amp;gt;</ph> <bpt id="p2">**</bpt>Existing Item<ept id="p2">**</ept> and navigate up a folder.</source>
          <target state="new">In turn, right-click each folder you just created and click <bpt id="p1">**</bpt>Add<ept id="p1">**</ept> <ph id="ph1">&amp;gt;</ph> <bpt id="p2">**</bpt>Existing Item<ept id="p2">**</ept> and navigate up a folder.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Open the appropriate shared folder, select all files, and then click <bpt id="p1">**</bpt>Add As Link<ept id="p1">**</ept>.</source>
          <target state="new">Open the appropriate shared folder, select all files, and then click <bpt id="p1">**</bpt>Add As Link<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Copy MainPage.xaml from <ph id="ph1">\\</ph>QuizGame.Windows<ph id="ph2">\\</ph> to <ph id="ph3">\\</ph>QuizGameHost<ph id="ph4">\\</ph> and change the namespace to QuizGameHost.</source>
          <target state="new">Copy MainPage.xaml from <ph id="ph1">\\</ph>QuizGame.Windows<ph id="ph2">\\</ph> to <ph id="ph3">\\</ph>QuizGameHost<ph id="ph4">\\</ph> and change the namespace to QuizGameHost.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Copy App.xaml from <ph id="ph1">\\</ph>QuizGame.Shared<ph id="ph2">\\</ph> to <ph id="ph3">\\</ph>QuizGameHost<ph id="ph4">\\</ph> and change the namespace to QuizGameHost.</source>
          <target state="new">Copy App.xaml from <ph id="ph1">\\</ph>QuizGame.Shared<ph id="ph2">\\</ph> to <ph id="ph3">\\</ph>QuizGameHost<ph id="ph4">\\</ph> and change the namespace to QuizGameHost.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Instead of overwriting app.xaml.cs, we'll keep the version in the new project and just make one targeted change to it to support local test mode.</source>
          <target state="new">Instead of overwriting app.xaml.cs, we'll keep the version in the new project and just make one targeted change to it to support local test mode.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>In app.xaml.cs, replace this line of code:</source>
          <target state="new">In app.xaml.cs, replace this line of code:</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>with this:</source>
          <target state="new">with this:</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>Properties<ept id="p1">**</ept> <ph id="ph1">&amp;gt;</ph> <bpt id="p2">**</bpt>Build<ept id="p2">**</ept> <ph id="ph2">&amp;gt;</ph> <bpt id="p3">**</bpt>conditional compilation symbols<ept id="p3">**</ept>, add LOCALTESTMODEON.</source>
          <target state="new">In <bpt id="p1">**</bpt>Properties<ept id="p1">**</ept> <ph id="ph1">&amp;gt;</ph> <bpt id="p2">**</bpt>Build<ept id="p2">**</ept> <ph id="ph2">&amp;gt;</ph> <bpt id="p3">**</bpt>conditional compilation symbols<ept id="p3">**</ept>, add LOCALTESTMODEON.</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>You'll now be able to go back to the code you added to app.xaml.cs and resolve the TestView type.</source>
          <target state="new">You'll now be able to go back to the code you added to app.xaml.cs and resolve the TestView type.</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>In package.appxmanifest, change the capability name from internetClient to internetClientServer.</source>
          <target state="new">In package.appxmanifest, change the capability name from internetClient to internetClientServer.</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>QuizGameClient</source>
          <target state="new">QuizGameClient</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Create a new Windows 10 app project (<bpt id="p1">**</bpt>Add<ept id="p1">**</ept> <ph id="ph1">&amp;gt;</ph> <bpt id="p2">**</bpt>New Project<ept id="p2">**</ept> <ph id="ph2">&amp;gt;</ph> <bpt id="p3">**</bpt>Windows Universal<ept id="p3">**</ept> <ph id="ph3">&amp;gt;</ph> <bpt id="p4">**</bpt>Blank Application (Windows Universal)<ept id="p4">**</ept>) and name it QuizGameClient.</source>
          <target state="new">Create a new Windows 10 app project (<bpt id="p1">**</bpt>Add<ept id="p1">**</ept> <ph id="ph1">&amp;gt;</ph> <bpt id="p2">**</bpt>New Project<ept id="p2">**</ept> <ph id="ph2">&amp;gt;</ph> <bpt id="p3">**</bpt>Windows Universal<ept id="p3">**</ept> <ph id="ph3">&amp;gt;</ph> <bpt id="p4">**</bpt>Blank Application (Windows Universal)<ept id="p4">**</ept>) and name it QuizGameClient.</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Add a reference to P2PHelper (<bpt id="p1">**</bpt>Add Reference<ept id="p1">**</ept> <ph id="ph1">&amp;gt;</ph> <bpt id="p2">**</bpt>Projects<ept id="p2">**</ept> <ph id="ph2">&amp;gt;</ph> <bpt id="p3">**</bpt>Solution<ept id="p3">**</ept> <ph id="ph3">&amp;gt;</ph> <bpt id="p4">**</bpt>P2PHelper<ept id="p4">**</ept>).</source>
          <target state="new">Add a reference to P2PHelper (<bpt id="p1">**</bpt>Add Reference<ept id="p1">**</ept> <ph id="ph1">&amp;gt;</ph> <bpt id="p2">**</bpt>Projects<ept id="p2">**</ept> <ph id="ph2">&amp;gt;</ph> <bpt id="p3">**</bpt>Solution<ept id="p3">**</ept> <ph id="ph3">&amp;gt;</ph> <bpt id="p4">**</bpt>P2PHelper<ept id="p4">**</ept>).</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, create a new folder for each of the shared folders on disk.</source>
          <target state="new">In <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, create a new folder for each of the shared folders on disk.</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>In turn, right-click each folder you just created and click <bpt id="p1">**</bpt>Add<ept id="p1">**</ept> <ph id="ph1">&amp;gt;</ph> <bpt id="p2">**</bpt>Existing Item<ept id="p2">**</ept> and navigate up a folder.</source>
          <target state="new">In turn, right-click each folder you just created and click <bpt id="p1">**</bpt>Add<ept id="p1">**</ept> <ph id="ph1">&amp;gt;</ph> <bpt id="p2">**</bpt>Existing Item<ept id="p2">**</ept> and navigate up a folder.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Open the appropriate shared folder, select all files, and then click <bpt id="p1">**</bpt>Add As Link<ept id="p1">**</ept>.</source>
          <target state="new">Open the appropriate shared folder, select all files, and then click <bpt id="p1">**</bpt>Add As Link<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Copy MainPage.xaml from <ph id="ph1">\\</ph>QuizGame.WindowsPhone<ph id="ph2">\\</ph> to <ph id="ph3">\\</ph>QuizGameClient<ph id="ph4">\\</ph> and change the namespace to QuizGameClient.</source>
          <target state="new">Copy MainPage.xaml from <ph id="ph1">\\</ph>QuizGame.WindowsPhone<ph id="ph2">\\</ph> to <ph id="ph3">\\</ph>QuizGameClient<ph id="ph4">\\</ph> and change the namespace to QuizGameClient.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Copy App.xaml from <ph id="ph1">\\</ph>QuizGame.Shared<ph id="ph2">\\</ph> to <ph id="ph3">\\</ph>QuizGameClient<ph id="ph4">\\</ph> and change the namespace to QuizGameClient.</source>
          <target state="new">Copy App.xaml from <ph id="ph1">\\</ph>QuizGame.Shared<ph id="ph2">\\</ph> to <ph id="ph3">\\</ph>QuizGameClient<ph id="ph4">\\</ph> and change the namespace to QuizGameClient.</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>In package.appxmanifest, change the capability name from internetClient to internetClientServer.</source>
          <target state="new">In package.appxmanifest, change the capability name from internetClient to internetClientServer.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>You'll now be able to build and run.</source>
          <target state="new">You'll now be able to build and run.</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Adaptive UI</source>
          <target state="new">Adaptive UI</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The QuizGameHost Windows 10 app looks fine when the app is running in a wide window (which is only possible on a device with a large screen).</source>
          <target state="new">The QuizGameHost Windows 10 app looks fine when the app is running in a wide window (which is only possible on a device with a large screen).</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>When the app's window is narrow, though (which happens on a small device, and can also happen on a large device), the UI is squashed so much that it's unreadable.</source>
          <target state="new">When the app's window is narrow, though (which happens on a small device, and can also happen on a large device), the UI is squashed so much that it's unreadable.</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>We can use the adaptive Visual State Manager feature to remedy this, as we explained in <bpt id="p1">[</bpt>Case study: Bookstore2<ept id="p1">](w8x-to-uwp-case-study-bookstore2.md)</ept>.</source>
          <target state="new">We can use the adaptive Visual State Manager feature to remedy this, as we explained in <bpt id="p1">[</bpt>Case study: Bookstore2<ept id="p1">](w8x-to-uwp-case-study-bookstore2.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>First, set properties on visual elements so that, by default, the UI is laid out in the narrow state.</source>
          <target state="new">First, set properties on visual elements so that, by default, the UI is laid out in the narrow state.</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>All of these changes take place in <ph id="ph1">\\</ph>View<ph id="ph2">\\</ph>HostView.xaml.</source>
          <target state="new">All of these changes take place in <ph id="ph1">\\</ph>View<ph id="ph2">\\</ph>HostView.xaml.</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>In the main <bpt id="p1">**</bpt>Grid<ept id="p1">**</ept>, change the <bpt id="p2">**</bpt>Height<ept id="p2">**</ept> of the first <bpt id="p3">**</bpt>RowDefinition<ept id="p3">**</ept> from "140" to "Auto".</source>
          <target state="new">In the main <bpt id="p1">**</bpt>Grid<ept id="p1">**</ept>, change the <bpt id="p2">**</bpt>Height<ept id="p2">**</ept> of the first <bpt id="p3">**</bpt>RowDefinition<ept id="p3">**</ept> from "140" to "Auto".</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p1">**</bpt>Grid<ept id="p1">**</ept> that contains the <bpt id="p2">**</bpt>TextBlock<ept id="p2">**</ept> named <ph id="ph1">`pageTitle`</ph>, set <ph id="ph2">`x:Name="pageTitleGrid"`</ph> and <ph id="ph3">`Height="60"`</ph>.</source>
          <target state="new">On the <bpt id="p1">**</bpt>Grid<ept id="p1">**</ept> that contains the <bpt id="p2">**</bpt>TextBlock<ept id="p2">**</ept> named <ph id="ph1">`pageTitle`</ph>, set <ph id="ph2">`x:Name="pageTitleGrid"`</ph> and <ph id="ph3">`Height="60"`</ph>.</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>These first two steps are so that we can effectively control the height of that <bpt id="p1">**</bpt>RowDefinition<ept id="p1">**</ept> via a setter in a visual state.</source>
          <target state="new">These first two steps are so that we can effectively control the height of that <bpt id="p1">**</bpt>RowDefinition<ept id="p1">**</ept> via a setter in a visual state.</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>On <ph id="ph1">`pageTitle`</ph>, set <ph id="ph2">`Margin="-30,0,0,0"`</ph>.</source>
          <target state="new">On <ph id="ph1">`pageTitle`</ph>, set <ph id="ph2">`Margin="-30,0,0,0"`</ph>.</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p1">**</bpt>Grid<ept id="p1">**</ept> indicated by the comment <ph id="ph1">`&lt;!-- Content --&gt;`</ph>, set <ph id="ph2">`x:Name="contentGrid"`</ph> and <ph id="ph3">`Margin="-18,12,0,0"`</ph>.</source>
          <target state="new">On the <bpt id="p1">**</bpt>Grid<ept id="p1">**</ept> indicated by the comment <ph id="ph1">`&lt;!-- Content --&gt;`</ph>, set <ph id="ph2">`x:Name="contentGrid"`</ph> and <ph id="ph3">`Margin="-18,12,0,0"`</ph>.</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p1">**</bpt>TextBlock<ept id="p1">**</ept> immediately above the comment <ph id="ph1">`&lt;!-- Options --&gt;`</ph>, set <ph id="ph2">`Margin="0,0,0,24"`</ph>.</source>
          <target state="new">On the <bpt id="p1">**</bpt>TextBlock<ept id="p1">**</ept> immediately above the comment <ph id="ph1">`&lt;!-- Options --&gt;`</ph>, set <ph id="ph2">`Margin="0,0,0,24"`</ph>.</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>In the default <bpt id="p1">**</bpt>TextBlock<ept id="p1">**</ept> style (the first resource in the file), change the <bpt id="p2">**</bpt>FontSize<ept id="p2">**</ept> setter's value to "15".</source>
          <target state="new">In the default <bpt id="p1">**</bpt>TextBlock<ept id="p1">**</ept> style (the first resource in the file), change the <bpt id="p2">**</bpt>FontSize<ept id="p2">**</ept> setter's value to "15".</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">`OptionContentControlStyle`</ph>, change the <bpt id="p1">**</bpt>FontSize<ept id="p1">**</ept> setter's value to "20".</source>
          <target state="new">In <ph id="ph1">`OptionContentControlStyle`</ph>, change the <bpt id="p1">**</bpt>FontSize<ept id="p1">**</ept> setter's value to "20".</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>This step and the previous one will give us a good type ramp that will work well on all devices.</source>
          <target state="new">This step and the previous one will give us a good type ramp that will work well on all devices.</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>These are much more flexible sizes than the "30" we were using for the Windows 8.1 app.</source>
          <target state="new">These are much more flexible sizes than the "30" we were using for the Windows 8.1 app.</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Finally, add the appropriate Visual State Manager markup to the root <bpt id="p1">**</bpt>Grid<ept id="p1">**</ept>.</source>
          <target state="new">Finally, add the appropriate Visual State Manager markup to the root <bpt id="p1">**</bpt>Grid<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Universal styling</source>
          <target state="new">Universal styling</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>You'll notice that in Windows 10, the buttons don't have the same touch-target padding in their template.</source>
          <target state="new">You'll notice that in Windows 10, the buttons don't have the same touch-target padding in their template.</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Two small changes will remedy that.</source>
          <target state="new">Two small changes will remedy that.</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>First, add this markup to app.xaml in both QuizGameHost and QuizGameClient.</source>
          <target state="new">First, add this markup to app.xaml in both QuizGameHost and QuizGameClient.</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>And second, add this setter to <ph id="ph1">`OptionButtonStyle`</ph> in <ph id="ph2">\\</ph>View<ph id="ph3">\\</ph>ClientView.xaml.</source>
          <target state="new">And second, add this setter to <ph id="ph1">`OptionButtonStyle`</ph> in <ph id="ph2">\\</ph>View<ph id="ph3">\\</ph>ClientView.xaml.</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>With that last tweak, the app will behave and look just the same as it did before the port, with the additional value that it will now run everywhere.</source>
          <target state="new">With that last tweak, the app will behave and look just the same as it did before the port, with the additional value that it will now run everywhere.</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Conclusion</source>
          <target state="new">Conclusion</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The app that we ported in this case study was a relatively complex one involving several projects, a class library, and quite a large amount of code and user interface.</source>
          <target state="new">The app that we ported in this case study was a relatively complex one involving several projects, a class library, and quite a large amount of code and user interface.</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Even so, the port was straightforward.</source>
          <target state="new">Even so, the port was straightforward.</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Some of the ease of porting is directly attributable to the similarity between the Windows 10 developer platform and the Windows 8.1 and Windows Phone 8.1 platforms.</source>
          <target state="new">Some of the ease of porting is directly attributable to the similarity between the Windows 10 developer platform and the Windows 8.1 and Windows Phone 8.1 platforms.</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Some is due to the way the original app was designed to keep the models, the view models, and the views separate.</source>
          <target state="new">Some is due to the way the original app was designed to keep the models, the view models, and the views separate.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>