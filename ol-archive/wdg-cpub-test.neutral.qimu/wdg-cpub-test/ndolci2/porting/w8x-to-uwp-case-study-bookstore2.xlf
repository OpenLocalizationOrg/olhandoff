<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci2\porting\w8x-to-uwp-case-study-bookstore2.md</xliffext:olfilepath>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">81f592e2673e32bfc601e39f742e1e02fde20361</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-e58fd48" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>This case study builds on the info given in Bookstore1 that begins with a Universal 8.1 app that displays grouped data in a SemanticZoom control.</source>
          <target state="new">This case study builds on the info given in Bookstore1 that begins with a Universal 8.1 app that displays grouped data in a SemanticZoom control.</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Windows Runtime 8.x to UWP case study Bookstore2</source>
          <target state="new">Windows Runtime 8.x to UWP case study Bookstore2</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Windows Runtime 8.x to UWP case study: Bookstore2</source>
          <target state="new">Windows Runtime 8.x to UWP case study: Bookstore2</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Updated for UWP apps on Windows 10.</source>
          <target state="new">Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept></source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept></target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This case study—which builds on the info given in <bpt id="p1">[</bpt>Bookstore1<ept id="p1">](w8x-to-uwp-case-study-bookstore1.md)</ept>—begins with a Universal 8.1 app that displays grouped data in a <bpt id="p2">[</bpt><bpt id="p3">**</bpt>SemanticZoom<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/hh702601)</ept> control.</source>
          <target state="new">This case study—which builds on the info given in <bpt id="p1">[</bpt>Bookstore1<ept id="p1">](w8x-to-uwp-case-study-bookstore1.md)</ept>—begins with a Universal 8.1 app that displays grouped data in a <bpt id="p2">[</bpt><bpt id="p3">**</bpt>SemanticZoom<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/hh702601)</ept> control.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>In the view model, each instance of the class <bpt id="p1">**</bpt>Author<ept id="p1">**</ept> represents the group of the books written by that author, and in the <bpt id="p2">**</bpt>SemanticZoom<ept id="p2">**</ept>, we can either view the list of books grouped by author or we can zoom out to see a jump list of authors.</source>
          <target state="new">In the view model, each instance of the class <bpt id="p1">**</bpt>Author<ept id="p1">**</ept> represents the group of the books written by that author, and in the <bpt id="p2">**</bpt>SemanticZoom<ept id="p2">**</ept>, we can either view the list of books grouped by author or we can zoom out to see a jump list of authors.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The jump list affords much quicker navigation than scrolling through the list of books.</source>
          <target state="new">The jump list affords much quicker navigation than scrolling through the list of books.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>We walk through the steps of porting the app to a Windows 10 Universal Windows Platform (UWP) app.</source>
          <target state="new">We walk through the steps of porting the app to a Windows 10 Universal Windows Platform (UWP) app.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>   When opening Bookstore2Universal<ph id="ph1">\_</ph>10 in Visual Studio, if you see the message "Visual Studio update required", then follow the steps in <bpt id="p2">[</bpt>TargetPlatformVersion<ept id="p2">](w8x-to-uwp-troubleshooting.md#targetplatformversion)</ept>.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>   When opening Bookstore2Universal<ph id="ph1">\_</ph>10 in Visual Studio, if you see the message "Visual Studio update required", then follow the steps in <bpt id="p2">[</bpt>TargetPlatformVersion<ept id="p2">](w8x-to-uwp-troubleshooting.md#targetplatformversion)</ept>.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Downloads</source>
          <target state="new">Downloads</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Download the Bookstore2<ph id="ph1">\_</ph>81 Universal 8.1 app<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=532951)</ept>.</source>
          <target state="new"><bpt id="p1">[</bpt>Download the Bookstore2<ph id="ph1">\_</ph>81 Universal 8.1 app<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=532951)</ept>.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Download the Bookstore2Universal<ph id="ph1">\_</ph>10 Windows 10 app<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=532952)</ept>.</source>
          <target state="new"><bpt id="p1">[</bpt>Download the Bookstore2Universal<ph id="ph1">\_</ph>10 Windows 10 app<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=532952)</ept>.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The Universal 8.1 app</source>
          <target state="new">The Universal 8.1 app</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Here’s what Bookstore2<ph id="ph1">\_</ph>81—the app that we're going to port—looks like.</source>
          <target state="new">Here’s what Bookstore2<ph id="ph1">\_</ph>81—the app that we're going to port—looks like.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>It's a horizontally-scrolling (vertically-scrolling on Windows Phone) <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SemanticZoom<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh702601)</ept> showing books grouped by author.</source>
          <target state="new">It's a horizontally-scrolling (vertically-scrolling on Windows Phone) <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SemanticZoom<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh702601)</ept> showing books grouped by author.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You can zoom out to the jump list and from there you can navigate back into any group.</source>
          <target state="new">You can zoom out to the jump list and from there you can navigate back into any group.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>There are two main pieces to this app: the view model that provides the grouped data source, and the user interface that binds to that view model.</source>
          <target state="new">There are two main pieces to this app: the view model that provides the grouped data source, and the user interface that binds to that view model.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>As we'll see, both of these pieces port easily from WinRT 8.1 technology to Windows 10.</source>
          <target state="new">As we'll see, both of these pieces port easily from WinRT 8.1 technology to Windows 10.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>bookstore2<ph id="ph1">\-</ph>81 on windows, zoomed-in view</source>
          <target state="new">bookstore2<ph id="ph1">\-</ph>81 on windows, zoomed-in view</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Bookstore2<ph id="ph1">\_</ph>81 on Windows, zoomed-in view</source>
          <target state="new">Bookstore2<ph id="ph1">\_</ph>81 on Windows, zoomed-in view</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>bookstore2<ph id="ph1">\-</ph>81 on windows, zoomed-out view</source>
          <target state="new">bookstore2<ph id="ph1">\-</ph>81 on windows, zoomed-out view</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Bookstore2<ph id="ph1">\_</ph>81 on Windows, zoomed-out view</source>
          <target state="new">Bookstore2<ph id="ph1">\_</ph>81 on Windows, zoomed-out view</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>bookstore2<ph id="ph1">\-</ph>81 on windows phone, zoomed-in view</source>
          <target state="new">bookstore2<ph id="ph1">\-</ph>81 on windows phone, zoomed-in view</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Bookstore2<ph id="ph1">\_</ph>81 on Windows Phone, zoomed-in view</source>
          <target state="new">Bookstore2<ph id="ph1">\_</ph>81 on Windows Phone, zoomed-in view</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>bookstore2<ph id="ph1">\-</ph>81 on windows phone, zoomed-out view</source>
          <target state="new">bookstore2<ph id="ph1">\-</ph>81 on windows phone, zoomed-out view</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Bookstore2<ph id="ph1">\_</ph>81 on Windows Phone, zoomed-out view</source>
          <target state="new">Bookstore2<ph id="ph1">\_</ph>81 on Windows Phone, zoomed-out view</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Porting to a Windows 10 project</source>
          <target state="new">Porting to a Windows 10 project</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The Bookstore2<ph id="ph1">\_</ph>81 solution is an 8.1 Universal App project.</source>
          <target state="new">The Bookstore2<ph id="ph1">\_</ph>81 solution is an 8.1 Universal App project.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The Bookstore2<ph id="ph1">\_</ph>81.Windows project builds the app package for Windows 8.1, and the Bookstore2<ph id="ph2">\_</ph>81.WindowsPhone project builds the app package for Windows Phone 8.1.</source>
          <target state="new">The Bookstore2<ph id="ph1">\_</ph>81.Windows project builds the app package for Windows 8.1, and the Bookstore2<ph id="ph2">\_</ph>81.WindowsPhone project builds the app package for Windows Phone 8.1.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Bookstore2<ph id="ph1">\_</ph>81.Shared is the project that contains source code, markup files, and other assets and resources, that are used by both of the other two projects.</source>
          <target state="new">Bookstore2<ph id="ph1">\_</ph>81.Shared is the project that contains source code, markup files, and other assets and resources, that are used by both of the other two projects.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Just like with the previous case study, the option we'll take (of the ones described in <bpt id="p1">[</bpt>If you have a Universal 8.1 app<ept id="p1">](w8x-to-uwp-root.md#if-you-have-a-universal-81-app)</ept>) is to port the contents of the Shared project to a Windows 10 that targets the Universal device family.</source>
          <target state="new">Just like with the previous case study, the option we'll take (of the ones described in <bpt id="p1">[</bpt>If you have a Universal 8.1 app<ept id="p1">](w8x-to-uwp-root.md#if-you-have-a-universal-81-app)</ept>) is to port the contents of the Shared project to a Windows 10 that targets the Universal device family.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Begin by creating a new Blank Application (Windows Universal) project.</source>
          <target state="new">Begin by creating a new Blank Application (Windows Universal) project.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Name it Bookstore2Universal<ph id="ph1">\_</ph>10.</source>
          <target state="new">Name it Bookstore2Universal<ph id="ph1">\_</ph>10.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>These are the files to copy over from Bookstore2<ph id="ph1">\_</ph>81 to Bookstore2Universal<ph id="ph2">\_</ph>10.</source>
          <target state="new">These are the files to copy over from Bookstore2<ph id="ph1">\_</ph>81 to Bookstore2Universal<ph id="ph2">\_</ph>10.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>From the Shared project</source>
          <target state="new">From the Shared project</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Copy the folder containing the book cover image PNG files (the folder is <ph id="ph1">\\</ph>Assets<ph id="ph2">\\</ph>CoverImages).</source>
          <target state="new">Copy the folder containing the book cover image PNG files (the folder is <ph id="ph1">\\</ph>Assets<ph id="ph2">\\</ph>CoverImages).</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>After copying the folder, in <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, make sure <bpt id="p2">**</bpt>Show All Files<ept id="p2">**</ept> is toggled on.</source>
          <target state="new">After copying the folder, in <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, make sure <bpt id="p2">**</bpt>Show All Files<ept id="p2">**</ept> is toggled on.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Right-click the folder that you copied and click <bpt id="p1">**</bpt>Include In Project<ept id="p1">**</ept>.</source>
          <target state="new">Right-click the folder that you copied and click <bpt id="p1">**</bpt>Include In Project<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>That command is what we mean by "including" files or folders in a project.</source>
          <target state="new">That command is what we mean by "including" files or folders in a project.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Each time you copy a file or folder, each copy, click <bpt id="p1">**</bpt>Refresh<ept id="p1">**</ept> in <bpt id="p2">**</bpt>Solution Explorer<ept id="p2">**</ept> and then include the file or folder in the project.</source>
          <target state="new">Each time you copy a file or folder, each copy, click <bpt id="p1">**</bpt>Refresh<ept id="p1">**</ept> in <bpt id="p2">**</bpt>Solution Explorer<ept id="p2">**</ept> and then include the file or folder in the project.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>There's no need to do this for files that you're replacing in the destination.</source>
          <target state="new">There's no need to do this for files that you're replacing in the destination.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Copy the folder containing the view model source file (the folder is <ph id="ph1">\\</ph>ViewModel).</source>
          <target state="new">Copy the folder containing the view model source file (the folder is <ph id="ph1">\\</ph>ViewModel).</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Copy MainPage.xaml and replace the file in the destination.</source>
          <target state="new">Copy MainPage.xaml and replace the file in the destination.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>From the Windows project</source>
          <target state="new">From the Windows project</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Copy BookstoreStyles.xaml.</source>
          <target state="new">Copy BookstoreStyles.xaml.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>We'll use this one as a good starting-point because all the resource keys in this file will resolve in a Windows 10 app; some of those in the equivalent WindowsPhone file will not.</source>
          <target state="new">We'll use this one as a good starting-point because all the resource keys in this file will resolve in a Windows 10 app; some of those in the equivalent WindowsPhone file will not.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Copy SeZoUC.xaml and SeZoUC.xaml.cs.</source>
          <target state="new">Copy SeZoUC.xaml and SeZoUC.xaml.cs.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>We'll start with the Windows version of this view, which is appropriate for wide windows, and then later we'll make it adapt to smaller windows and, consequently, smaller devices.</source>
          <target state="new">We'll start with the Windows version of this view, which is appropriate for wide windows, and then later we'll make it adapt to smaller windows and, consequently, smaller devices.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Edit the source code and markup files that you just copied and change any references to the Bookstore2<ph id="ph1">\_</ph>81 namespace to Bookstore2Universal<ph id="ph2">\_</ph>10.</source>
          <target state="new">Edit the source code and markup files that you just copied and change any references to the Bookstore2<ph id="ph1">\_</ph>81 namespace to Bookstore2Universal<ph id="ph2">\_</ph>10.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>A quick way to do that is to use the <bpt id="p1">**</bpt>Replace In Files<ept id="p1">**</ept> feature.</source>
          <target state="new">A quick way to do that is to use the <bpt id="p1">**</bpt>Replace In Files<ept id="p1">**</ept> feature.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>No code changes are needed in the view model, nor in any other imperative code.</source>
          <target state="new">No code changes are needed in the view model, nor in any other imperative code.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>But, just to make it easier to see which version of the app is running, change the value returned by the <bpt id="p1">**</bpt>Bookstore2Universal<ph id="ph1">\_</ph>10.BookstoreViewModel.AppName<ept id="p1">**</ept> property from "Bookstore2<ph id="ph2">\_</ph>81" to "BOOKSTORE2UNIVERSAL<ph id="ph3">\_</ph>10".</source>
          <target state="new">But, just to make it easier to see which version of the app is running, change the value returned by the <bpt id="p1">**</bpt>Bookstore2Universal<ph id="ph1">\_</ph>10.BookstoreViewModel.AppName<ept id="p1">**</ept> property from "Bookstore2<ph id="ph2">\_</ph>81" to "BOOKSTORE2UNIVERSAL<ph id="ph3">\_</ph>10".</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Right now, you can build and run.</source>
          <target state="new">Right now, you can build and run.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Here's how our new UWP app looks after having done no work yet to port it to Windows 10.</source>
          <target state="new">Here's how our new UWP app looks after having done no work yet to port it to Windows 10.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>the windows 10 app with initial source code changes running on a desktop device, zoomed-in view</source>
          <target state="new">the windows 10 app with initial source code changes running on a desktop device, zoomed-in view</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The Windows 10 app with initial source code changes running on a Desktop device, zoomed-in view</source>
          <target state="new">The Windows 10 app with initial source code changes running on a Desktop device, zoomed-in view</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>the windows 10 app with initial source code changes running on a desktop device, zoomed-out view</source>
          <target state="new">the windows 10 app with initial source code changes running on a desktop device, zoomed-out view</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The Windows 10 app with initial source code changes running on a Desktop device, zoomed-out view</source>
          <target state="new">The Windows 10 app with initial source code changes running on a Desktop device, zoomed-out view</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The view model and the zoomed-in and zoomed-out views are working together correctly, although there are issues that make that a little hard to see.</source>
          <target state="new">The view model and the zoomed-in and zoomed-out views are working together correctly, although there are issues that make that a little hard to see.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>One issue is that the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SemanticZoom<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh702601)</ept> doesn't scroll.</source>
          <target state="new">One issue is that the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SemanticZoom<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh702601)</ept> doesn't scroll.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>This is because, in Windows 10, the default style of a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>GridView<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242705)</ept> causes it to be laid out vertically (and the Windows 10 design guidelines recommend that we use it that way in new and in ported apps).</source>
          <target state="new">This is because, in Windows 10, the default style of a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>GridView<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242705)</ept> causes it to be laid out vertically (and the Windows 10 design guidelines recommend that we use it that way in new and in ported apps).</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>But, horizontal scrolling settings in the custom items panel template that we copied from the Bookstore2<ph id="ph1">\_</ph>81 project (which was designed for the 8.1 app) are in conflict with vertical scrolling settings in the Windows 10 default style that is being applied as a result of us having ported to a Windows 10 app.</source>
          <target state="new">But, horizontal scrolling settings in the custom items panel template that we copied from the Bookstore2<ph id="ph1">\_</ph>81 project (which was designed for the 8.1 app) are in conflict with vertical scrolling settings in the Windows 10 default style that is being applied as a result of us having ported to a Windows 10 app.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>A second thing is that the app doesn't yet adapt its user-interface to give the best experience in different-sized windows and on small devices.</source>
          <target state="new">A second thing is that the app doesn't yet adapt its user-interface to give the best experience in different-sized windows and on small devices.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>And, thirdly, the correct styles and brushes are not yet being used, resulting in much of the text being invisible (including the group headers that you can click to zoom out).</source>
          <target state="new">And, thirdly, the correct styles and brushes are not yet being used, resulting in much of the text being invisible (including the group headers that you can click to zoom out).</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>So, in the next three sections (<bpt id="p1">[</bpt>SemanticZoom and GridView design changes<ept id="p1">](#semanticzoom-and-gridview-design-changes)</ept>, <bpt id="p2">[</bpt>Adaptive UI<ept id="p2">](#adaptive-ui)</ept>, and <bpt id="p3">[</bpt>Universal styling<ept id="p3">](#universal-styling)</ept>) we'll remedy those three issues.</source>
          <target state="new">So, in the next three sections (<bpt id="p1">[</bpt>SemanticZoom and GridView design changes<ept id="p1">](#semanticzoom-and-gridview-design-changes)</ept>, <bpt id="p2">[</bpt>Adaptive UI<ept id="p2">](#adaptive-ui)</ept>, and <bpt id="p3">[</bpt>Universal styling<ept id="p3">](#universal-styling)</ept>) we'll remedy those three issues.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>SemanticZoom and GridView design changes</source>
          <target state="new">SemanticZoom and GridView design changes</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The design changes in Windows 10 to the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SemanticZoom<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh702601)</ept> control are described in the section <bpt id="p3">[</bpt>SemanticZoom changes<ept id="p3">](w8x-to-uwp-porting-xaml-and-ui.md#semantic-zoom)</ept>.</source>
          <target state="new">The design changes in Windows 10 to the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SemanticZoom<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh702601)</ept> control are described in the section <bpt id="p3">[</bpt>SemanticZoom changes<ept id="p3">](w8x-to-uwp-porting-xaml-and-ui.md#semantic-zoom)</ept>.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>We have no work to do in this section in response to those changes.</source>
          <target state="new">We have no work to do in this section in response to those changes.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The changes to <bpt id="p1">[</bpt><bpt id="p2">**</bpt>GridView<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242705)</ept> are described in the section <bpt id="p3">[</bpt>GridView/ListView changes<ept id="p3">](w8x-to-uwp-porting-xaml-and-ui.md#gridview-listview-changes)</ept>.</source>
          <target state="new">The changes to <bpt id="p1">[</bpt><bpt id="p2">**</bpt>GridView<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242705)</ept> are described in the section <bpt id="p3">[</bpt>GridView/ListView changes<ept id="p3">](w8x-to-uwp-porting-xaml-and-ui.md#gridview-listview-changes)</ept>.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>We have some very minor adjustments to make to adapt to those changes, as described below.</source>
          <target state="new">We have some very minor adjustments to make to adapt to those changes, as described below.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>In SeZoUC.xaml, in <ph id="ph1">`ZoomedInItemsPanelTemplate`</ph>, set <ph id="ph2">`Orientation="Horizontal"`</ph> and <ph id="ph3">`GroupPadding="0,0,0,20"`</ph>.</source>
          <target state="new">In SeZoUC.xaml, in <ph id="ph1">`ZoomedInItemsPanelTemplate`</ph>, set <ph id="ph2">`Orientation="Horizontal"`</ph> and <ph id="ph3">`GroupPadding="0,0,0,20"`</ph>.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>In SeZoUC.xaml, delete <ph id="ph1">`ZoomedOutItemsPanelTemplate`</ph> and remove the <ph id="ph2">`ItemsPanel`</ph> attribute from the zoomed-out view.</source>
          <target state="new">In SeZoUC.xaml, delete <ph id="ph1">`ZoomedOutItemsPanelTemplate`</ph> and remove the <ph id="ph2">`ItemsPanel`</ph> attribute from the zoomed-out view.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>And that's it!</source>
          <target state="new">And that's it!</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Adaptive UI</source>
          <target state="new">Adaptive UI</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>After that change, the UI layout that SeZoUC.xaml gives us is great for when the app is running in a wide window (which is only possible on a device with a large screen).</source>
          <target state="new">After that change, the UI layout that SeZoUC.xaml gives us is great for when the app is running in a wide window (which is only possible on a device with a large screen).</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>When the app's window is narrow, though (which happens on a small device, and can also happen on a large device), the UI that we had in the Windows Phone Store app is arguably most appropriate.</source>
          <target state="new">When the app's window is narrow, though (which happens on a small device, and can also happen on a large device), the UI that we had in the Windows Phone Store app is arguably most appropriate.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>We can use the adaptive Visual State Manager feature to achieve this.</source>
          <target state="new">We can use the adaptive Visual State Manager feature to achieve this.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>We'll set properties on visual elements so that, by default, the UI is laid out in the narrow state using the smaller templates that we were using in the Windows Phone Store app.</source>
          <target state="new">We'll set properties on visual elements so that, by default, the UI is laid out in the narrow state using the smaller templates that we were using in the Windows Phone Store app.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Then, we'll detect when the app's window is wider-than-or-equal-to a specific size (measured in units of <bpt id="p1">[</bpt>effective pixels<ept id="p1">](w8x-to-uwp-porting-xaml-and-ui.md#effective-pixels-viewing-distance-and-scale-factors)</ept>), and in response, we'll change the properties of visual elements so that we get a larger, and wider, layout.</source>
          <target state="new">Then, we'll detect when the app's window is wider-than-or-equal-to a specific size (measured in units of <bpt id="p1">[</bpt>effective pixels<ept id="p1">](w8x-to-uwp-porting-xaml-and-ui.md#effective-pixels-viewing-distance-and-scale-factors)</ept>), and in response, we'll change the properties of visual elements so that we get a larger, and wider, layout.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>We'll put those property changes in a visual state, and we'll use an adaptive trigger to continuously monitor and determine whether to apply that visual state, or not, depending on the width of the window in effective pixels.</source>
          <target state="new">We'll put those property changes in a visual state, and we'll use an adaptive trigger to continuously monitor and determine whether to apply that visual state, or not, depending on the width of the window in effective pixels.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>We're triggering on window width in this case, but it's possible to trigger on window height, too.</source>
          <target state="new">We're triggering on window width in this case, but it's possible to trigger on window height, too.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>A minimum window width of 548 epx is appropriate for this use case because that's the size of the smallest device we would want to show the wide layout on.</source>
          <target state="new">A minimum window width of 548 epx is appropriate for this use case because that's the size of the smallest device we would want to show the wide layout on.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Phones are typically smaller than 548 epx so on a small device like that we'd remain in the default narrow layout.</source>
          <target state="new">Phones are typically smaller than 548 epx so on a small device like that we'd remain in the default narrow layout.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>On a PC, the window will launch by default wide enough to trigger the switch to the wide state.</source>
          <target state="new">On a PC, the window will launch by default wide enough to trigger the switch to the wide state.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>From there, you'll be able to drag the window narrow enough to display two columns of the 250x250-sized items.</source>
          <target state="new">From there, you'll be able to drag the window narrow enough to display two columns of the 250x250-sized items.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>A little narrower than that and the trigger will deactivate, the wide visual state will be removed, and the default narrow layout will be in effect.</source>
          <target state="new">A little narrower than that and the trigger will deactivate, the wide visual state will be removed, and the default narrow layout will be in effect.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>So, what properties do we need to set—and change—to achieve these two different layouts?</source>
          <target state="new">So, what properties do we need to set—and change—to achieve these two different layouts?</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>There are two alternatives and each entails a different approach.</source>
          <target state="new">There are two alternatives and each entails a different approach.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>We can put two <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SemanticZoom<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh702601)</ept> controls in our markup.</source>
          <target state="new">We can put two <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SemanticZoom<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh702601)</ept> controls in our markup.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>One would be a copy of the markup that we were using in the Windows Store app (using <bpt id="p1">[</bpt><bpt id="p2">**</bpt>GridView<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242705)</ept> controls inside it), and collapsed by default.</source>
          <target state="new">One would be a copy of the markup that we were using in the Windows Store app (using <bpt id="p1">[</bpt><bpt id="p2">**</bpt>GridView<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242705)</ept> controls inside it), and collapsed by default.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The other would be a copy of the markup that we were using in the Windows Phone Store app (using <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ListView<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242878)</ept> controls inside it), and visible by default.</source>
          <target state="new">The other would be a copy of the markup that we were using in the Windows Phone Store app (using <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ListView<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242878)</ept> controls inside it), and visible by default.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The visual state would switch the visibility properties of the two <bpt id="p1">**</bpt>SemanticZoom<ept id="p1">**</ept> controls.</source>
          <target state="new">The visual state would switch the visibility properties of the two <bpt id="p1">**</bpt>SemanticZoom<ept id="p1">**</ept> controls.</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>This would require very little effort to achieve but this not, in general, a high-performance technique.</source>
          <target state="new">This would require very little effort to achieve but this not, in general, a high-performance technique.</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>So, if you use it, you should profile your app and make sure it is still meeting your performance goals.</source>
          <target state="new">So, if you use it, you should profile your app and make sure it is still meeting your performance goals.</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>We can use a single <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SemanticZoom<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh702601)</ept> containing <bpt id="p3">[</bpt><bpt id="p4">**</bpt>ListView<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br242878)</ept> controls.</source>
          <target state="new">We can use a single <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SemanticZoom<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh702601)</ept> containing <bpt id="p3">[</bpt><bpt id="p4">**</bpt>ListView<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br242878)</ept> controls.</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>To achieve our two layouts, in the wide visual state, we would change the properties of the <bpt id="p1">**</bpt>ListView<ept id="p1">**</ept> controls, including the templates that are applied to them, to cause them to lay out in the same way as a <bpt id="p2">[</bpt><bpt id="p3">**</bpt>GridView<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br242705)</ept> does.</source>
          <target state="new">To achieve our two layouts, in the wide visual state, we would change the properties of the <bpt id="p1">**</bpt>ListView<ept id="p1">**</ept> controls, including the templates that are applied to them, to cause them to lay out in the same way as a <bpt id="p2">[</bpt><bpt id="p3">**</bpt>GridView<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br242705)</ept> does.</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>This might perform better, but there are so many small differences between the various styles and templates of <bpt id="p1">**</bpt>GridView<ept id="p1">**</ept> and <bpt id="p2">**</bpt>ListView<ept id="p2">**</ept> and between their various item types that this is the more difficult solution to achieve.</source>
          <target state="new">This might perform better, but there are so many small differences between the various styles and templates of <bpt id="p1">**</bpt>GridView<ept id="p1">**</ept> and <bpt id="p2">**</bpt>ListView<ept id="p2">**</ept> and between their various item types that this is the more difficult solution to achieve.</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>This solution is also tightly coupled to the way the default styles and templates are designed at this moment in time, giving us a solution that's fragile and sensitive to any future changes to the defaults.</source>
          <target state="new">This solution is also tightly coupled to the way the default styles and templates are designed at this moment in time, giving us a solution that's fragile and sensitive to any future changes to the defaults.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>In this case study, we're going to go with the first alternative.</source>
          <target state="new">In this case study, we're going to go with the first alternative.</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>But, if you like, you can try the second one and see if that works better for you.</source>
          <target state="new">But, if you like, you can try the second one and see if that works better for you.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Here are the steps to take to implement that first alternative.</source>
          <target state="new">Here are the steps to take to implement that first alternative.</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SemanticZoom<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh702601)</ept> in the markup in your new project, set <ph id="ph1">`x:Name="wideSeZo"`</ph> and <ph id="ph2">`Visibility="Collapsed"`</ph>.</source>
          <target state="new">On the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SemanticZoom<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh702601)</ept> in the markup in your new project, set <ph id="ph1">`x:Name="wideSeZo"`</ph> and <ph id="ph2">`Visibility="Collapsed"`</ph>.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Go back to the Bookstore2<ph id="ph1">\_</ph>81.WindowsPhone project and open SeZoUC.xaml.</source>
          <target state="new">Go back to the Bookstore2<ph id="ph1">\_</ph>81.WindowsPhone project and open SeZoUC.xaml.</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Copy the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SemanticZoom<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh702601)</ept> element markup out of that file and paste it immediately after <ph id="ph1">`wideSeZo`</ph> in your new project.</source>
          <target state="new">Copy the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SemanticZoom<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh702601)</ept> element markup out of that file and paste it immediately after <ph id="ph1">`wideSeZo`</ph> in your new project.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Set <ph id="ph1">`x:Name="narrowSeZo"`</ph> on element that you just pasted.</source>
          <target state="new">Set <ph id="ph1">`x:Name="narrowSeZo"`</ph> on element that you just pasted.</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>But <ph id="ph1">`narrowSeZo`</ph> needs a couple of styles that we haven't copied yet.</source>
          <target state="new">But <ph id="ph1">`narrowSeZo`</ph> needs a couple of styles that we haven't copied yet.</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Again in Bookstore2<ph id="ph1">\_</ph>81.WindowsPhone, copy the two styles (<ph id="ph2">`AuthorGroupHeaderContainerStyle`</ph> and <ph id="ph3">`ZoomedOutAuthorItemContainerStyle`</ph>) out of SeZoUC.xaml and paste them into BookstoreStyles.xaml in your new project.</source>
          <target state="new">Again in Bookstore2<ph id="ph1">\_</ph>81.WindowsPhone, copy the two styles (<ph id="ph2">`AuthorGroupHeaderContainerStyle`</ph> and <ph id="ph3">`ZoomedOutAuthorItemContainerStyle`</ph>) out of SeZoUC.xaml and paste them into BookstoreStyles.xaml in your new project.</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>You now have two <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SemanticZoom<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh702601)</ept> elements in your new SeZoUC.xaml.</source>
          <target state="new">You now have two <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SemanticZoom<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh702601)</ept> elements in your new SeZoUC.xaml.</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Wrap those two elements in a <bpt id="p1">**</bpt>Grid<ept id="p1">**</ept>.</source>
          <target state="new">Wrap those two elements in a <bpt id="p1">**</bpt>Grid<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>In BookstoreStyles.xaml in your new project, append the word <ph id="ph1">`Wide`</ph> to these three resource keys (and to their references in SeZoUC.xaml, but only to the references inside <ph id="ph2">`wideSeZo`</ph>): <ph id="ph3">`AuthorGroupHeaderTemplate`</ph>, <ph id="ph4">`ZoomedOutAuthorTemplate`</ph>, and <ph id="ph5">`BookTemplate`</ph>.</source>
          <target state="new">In BookstoreStyles.xaml in your new project, append the word <ph id="ph1">`Wide`</ph> to these three resource keys (and to their references in SeZoUC.xaml, but only to the references inside <ph id="ph2">`wideSeZo`</ph>): <ph id="ph3">`AuthorGroupHeaderTemplate`</ph>, <ph id="ph4">`ZoomedOutAuthorTemplate`</ph>, and <ph id="ph5">`BookTemplate`</ph>.</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>In the Bookstore2<ph id="ph1">\_</ph>81.WindowsPhone project, open BookstoreStyles.xaml.</source>
          <target state="new">In the Bookstore2<ph id="ph1">\_</ph>81.WindowsPhone project, open BookstoreStyles.xaml.</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>From this file, copy those same three resources (mentioned above), and the two jump list item converters, and the namespace prefix declaration Windows<ph id="ph1">\_</ph>UI<ph id="ph2">\_</ph>Xaml<ph id="ph3">\_</ph>Controls<ph id="ph4">\_</ph>Primitives, and paste them all into BookstoreStyles.xaml in your new project.</source>
          <target state="new">From this file, copy those same three resources (mentioned above), and the two jump list item converters, and the namespace prefix declaration Windows<ph id="ph1">\_</ph>UI<ph id="ph2">\_</ph>Xaml<ph id="ph3">\_</ph>Controls<ph id="ph4">\_</ph>Primitives, and paste them all into BookstoreStyles.xaml in your new project.</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Finally, in SeZoUC.xaml in your new project, add the appropriate Visual State Manager markup to the <bpt id="p1">**</bpt>Grid<ept id="p1">**</ept> that you added above.</source>
          <target state="new">Finally, in SeZoUC.xaml in your new project, add the appropriate Visual State Manager markup to the <bpt id="p1">**</bpt>Grid<ept id="p1">**</ept> that you added above.</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Universal styling</source>
          <target state="new">Universal styling</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Now, let's fix up some styling issues, including one that we introduced above while copying from the old project.</source>
          <target state="new">Now, let's fix up some styling issues, including one that we introduced above while copying from the old project.</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>In MainPage.xaml, change <ph id="ph1">`LayoutRoot`</ph>'s Background to <ph id="ph2">`"{ThemeResource ApplicationPageBackgroundThemeBrush}"`</ph>.</source>
          <target state="new">In MainPage.xaml, change <ph id="ph1">`LayoutRoot`</ph>'s Background to <ph id="ph2">`"{ThemeResource ApplicationPageBackgroundThemeBrush}"`</ph>.</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>In BookstoreStyles.xaml, set the value of the resource <ph id="ph1">`TitlePanelMargin`</ph> to <ph id="ph2">`0`</ph> (or whatever value looks good to you).</source>
          <target state="new">In BookstoreStyles.xaml, set the value of the resource <ph id="ph1">`TitlePanelMargin`</ph> to <ph id="ph2">`0`</ph> (or whatever value looks good to you).</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>In SeZoUC.xaml, set the Margin of <ph id="ph1">`wideSeZo`</ph> to <ph id="ph2">`0`</ph> (or whatever value looks good to you).</source>
          <target state="new">In SeZoUC.xaml, set the Margin of <ph id="ph1">`wideSeZo`</ph> to <ph id="ph2">`0`</ph> (or whatever value looks good to you).</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>In BookstoreStyles.xaml, remove the Margin attribute from <ph id="ph1">`AuthorGroupHeaderTemplateWide`</ph>.</source>
          <target state="new">In BookstoreStyles.xaml, remove the Margin attribute from <ph id="ph1">`AuthorGroupHeaderTemplateWide`</ph>.</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Remove the FontFamily attribute from <ph id="ph1">`AuthorGroupHeaderTemplate`</ph> and from <ph id="ph2">`ZoomedOutAuthorTemplate`</ph>.</source>
          <target state="new">Remove the FontFamily attribute from <ph id="ph1">`AuthorGroupHeaderTemplate`</ph> and from <ph id="ph2">`ZoomedOutAuthorTemplate`</ph>.</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Bookstore2<ph id="ph1">\_</ph>81 used the <ph id="ph2">`BookTemplateTitleTextBlockStyle`</ph>, <ph id="ph3">`BookTemplateAuthorTextBlockStyle`</ph>, and <ph id="ph4">`PageTitleTextBlockStyle`</ph> resource keys as an indirection so that a single key had different implementations in the two apps.</source>
          <target state="new">Bookstore2<ph id="ph1">\_</ph>81 used the <ph id="ph2">`BookTemplateTitleTextBlockStyle`</ph>, <ph id="ph3">`BookTemplateAuthorTextBlockStyle`</ph>, and <ph id="ph4">`PageTitleTextBlockStyle`</ph> resource keys as an indirection so that a single key had different implementations in the two apps.</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>We don't need that indirection any more; we can just reference system styles directly.</source>
          <target state="new">We don't need that indirection any more; we can just reference system styles directly.</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>So, replace those references throughout the app with <ph id="ph1">`TitleTextBlockStyle`</ph>, <ph id="ph2">`CaptionTextBlockStyle`</ph>, and <ph id="ph3">`HeaderTextBlockStyle`</ph> respectively.</source>
          <target state="new">So, replace those references throughout the app with <ph id="ph1">`TitleTextBlockStyle`</ph>, <ph id="ph2">`CaptionTextBlockStyle`</ph>, and <ph id="ph3">`HeaderTextBlockStyle`</ph> respectively.</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>You can use the Visual Studio <bpt id="p1">**</bpt>Replace In Files<ept id="p1">**</ept> feature to do this quickly and accurately.</source>
          <target state="new">You can use the Visual Studio <bpt id="p1">**</bpt>Replace In Files<ept id="p1">**</ept> feature to do this quickly and accurately.</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>You can then delete those three unused resources.</source>
          <target state="new">You can then delete those three unused resources.</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">`AuthorGroupHeaderTemplate`</ph>, replace <ph id="ph2">`PhoneAccentBrush`</ph> with <ph id="ph3">`SystemControlBackgroundAccentBrush`</ph>, and set <ph id="ph4">`Foreground="White"`</ph> on the <bpt id="p1">**</bpt>TextBlock<ept id="p1">**</ept> so that it looks correct when running on the mobile device family.</source>
          <target state="new">In <ph id="ph1">`AuthorGroupHeaderTemplate`</ph>, replace <ph id="ph2">`PhoneAccentBrush`</ph> with <ph id="ph3">`SystemControlBackgroundAccentBrush`</ph>, and set <ph id="ph4">`Foreground="White"`</ph> on the <bpt id="p1">**</bpt>TextBlock<ept id="p1">**</ept> so that it looks correct when running on the mobile device family.</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">`BookTemplateWide`</ph>, copy the Foreground attribute from the second <bpt id="p1">**</bpt>TextBlock<ept id="p1">**</ept> to the first.</source>
          <target state="new">In <ph id="ph1">`BookTemplateWide`</ph>, copy the Foreground attribute from the second <bpt id="p1">**</bpt>TextBlock<ept id="p1">**</ept> to the first.</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">`ZoomedOutAuthorTemplateWide`</ph>, change the reference to <ph id="ph2">`SubheaderTextBlockStyle`</ph> (which is now a little too big) to a reference to <ph id="ph3">`SubtitleTextBlockStyle`</ph>.</source>
          <target state="new">In <ph id="ph1">`ZoomedOutAuthorTemplateWide`</ph>, change the reference to <ph id="ph2">`SubheaderTextBlockStyle`</ph> (which is now a little too big) to a reference to <ph id="ph3">`SubtitleTextBlockStyle`</ph>.</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The zoomed-out view (the jump list) no longer overlays the zoomed-in view in the new platform, so we can remove the <ph id="ph1">`Background`</ph> attribute from the zoomed-out view of <ph id="ph2">`narrowSeZo`</ph>.</source>
          <target state="new">The zoomed-out view (the jump list) no longer overlays the zoomed-in view in the new platform, so we can remove the <ph id="ph1">`Background`</ph> attribute from the zoomed-out view of <ph id="ph2">`narrowSeZo`</ph>.</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>So that all the styles and templates are in one file, move <ph id="ph1">`ZoomedInItemsPanelTemplate`</ph> out of SeZoUC.xaml and into BookstoreStyles.xaml.</source>
          <target state="new">So that all the styles and templates are in one file, move <ph id="ph1">`ZoomedInItemsPanelTemplate`</ph> out of SeZoUC.xaml and into BookstoreStyles.xaml.</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>That last sequence of styling operations leaves the app looking like this.</source>
          <target state="new">That last sequence of styling operations leaves the app looking like this.</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>the ported windows 10 app running on a desktop device, zoomed-in view, two sizes of window</source>
          <target state="new">the ported windows 10 app running on a desktop device, zoomed-in view, two sizes of window</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The ported Windows 10 app running on a Desktop device, zoomed-in view, two sizes of window</source>
          <target state="new">The ported Windows 10 app running on a Desktop device, zoomed-in view, two sizes of window</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>the ported windows 10 app running on a desktop device, zoomed-out view, two sizes of window</source>
          <target state="new">the ported windows 10 app running on a desktop device, zoomed-out view, two sizes of window</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The ported Windows 10 app running on a Desktop device, zoomed-out view, two sizes of window</source>
          <target state="new">The ported Windows 10 app running on a Desktop device, zoomed-out view, two sizes of window</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>the ported windows 10 app running on a mobile device, zoomed-in view</source>
          <target state="new">the ported windows 10 app running on a mobile device, zoomed-in view</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The ported Windows 10 app running on a Mobile device, zoomed-in view</source>
          <target state="new">The ported Windows 10 app running on a Mobile device, zoomed-in view</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>the ported windows 10 app running on a mobile device, zoomed-out view</source>
          <target state="new">the ported windows 10 app running on a mobile device, zoomed-out view</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The ported Windows 10 app running on a Mobile device, zoomed-out view</source>
          <target state="new">The ported Windows 10 app running on a Mobile device, zoomed-out view</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Conclusion</source>
          <target state="new">Conclusion</target>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>This case study involved a more ambitious user interface than the previous one.</source>
          <target state="new">This case study involved a more ambitious user interface than the previous one.</target>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>As with the previous case study, this particular view model required no work at all, and our efforts went primarily into refactoring the user interface.</source>
          <target state="new">As with the previous case study, this particular view model required no work at all, and our efforts went primarily into refactoring the user interface.</target>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Some of the changes were a necessary result of combining two projects into one while still supporting many form factors (in fact, many more than we could before).</source>
          <target state="new">Some of the changes were a necessary result of combining two projects into one while still supporting many form factors (in fact, many more than we could before).</target>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>A few of the changes were to do with changes that have been made to the platform.</source>
          <target state="new">A few of the changes were to do with changes that have been made to the platform.</target>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The next case study is <bpt id="p1">[</bpt>QuizGame<ept id="p1">](w8x-to-uwp-case-study-quizgame.md)</ept>, in which we look at accessing and displaying grouped data.</source>
          <target state="new">The next case study is <bpt id="p1">[</bpt>QuizGame<ept id="p1">](w8x-to-uwp-case-study-quizgame.md)</ept>, in which we look at accessing and displaying grouped data.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>