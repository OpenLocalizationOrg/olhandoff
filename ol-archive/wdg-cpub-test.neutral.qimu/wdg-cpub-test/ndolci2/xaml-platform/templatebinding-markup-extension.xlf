<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci2\xaml-platform\templatebinding-markup-extension.md</xliffext:olfilepath>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">89492fb1fb74e7edc43b50a23cf316956a70c5b3</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-e58fd48" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Links the value of a property in a control template to the value of some other exposed property on the templated control.</source>
          <target state="new">Links the value of a property in a control template to the value of some other exposed property on the templated control.</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>TemplateBinding can only be used within a ControlTemplate definition in XAML.</source>
          <target state="new">TemplateBinding can only be used within a ControlTemplate definition in XAML.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>TemplateBinding markup extension</source>
          <target state="new">TemplateBinding markup extension</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>{TemplateBinding} markup extension</source>
          <target state="new">{TemplateBinding} markup extension</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Updated for UWP apps on Windows 10.</source>
          <target state="new">Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept></source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept></target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Links the value of a property in a control template to the value of some other exposed property on the templated control.</source>
          <target state="new">Links the value of a property in a control template to the value of some other exposed property on the templated control.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>TemplateBinding<ept id="p1">**</ept> can only be used within a <bpt id="p2">[</bpt><bpt id="p3">**</bpt>ControlTemplate<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br209391)</ept> definition in XAML.</source>
          <target state="new"><bpt id="p1">**</bpt>TemplateBinding<ept id="p1">**</ept> can only be used within a <bpt id="p2">[</bpt><bpt id="p3">**</bpt>ControlTemplate<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br209391)</ept> definition in XAML.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>XAML attribute usage</source>
          <target state="new">XAML attribute usage</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>XAML attribute usage (for Setter property in template or style)</source>
          <target state="new">XAML attribute usage (for Setter property in template or style)</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>XAML values</source>
          <target state="new">XAML values</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Term</source>
          <target state="new">Term</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="new">Description</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>propertyName</source>
          <target state="new">propertyName</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The name of the property being set in the setter syntax.</source>
          <target state="new">The name of the property being set in the setter syntax.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This must be a dependency property.</source>
          <target state="new">This must be a dependency property.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>sourceProperty</source>
          <target state="new">sourceProperty</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The name of another dependency property that exists on the type being templated.</source>
          <target state="new">The name of another dependency property that exists on the type being templated.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Remarks</source>
          <target state="new">Remarks</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Using <bpt id="p1">**</bpt>TemplateBinding<ept id="p1">**</ept> is a fundamental part of how you define a control template, either if you are a custom control author or if you are replacing a control template for existing controls.</source>
          <target state="new">Using <bpt id="p1">**</bpt>TemplateBinding<ept id="p1">**</ept> is a fundamental part of how you define a control template, either if you are a custom control author or if you are replacing a control template for existing controls.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For more info, see <bpt id="p1">[</bpt>Quickstart: Control templates<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/hh465374)</ept>.</source>
          <target state="new">For more info, see <bpt id="p1">[</bpt>Quickstart: Control templates<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/hh465374)</ept>.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>It's fairly common for <bpt id="p1">*</bpt>propertyName<ept id="p1">*</ept> and <bpt id="p2">*</bpt>targetProperty<ept id="p2">*</ept> to use the same property name.</source>
          <target state="new">It's fairly common for <bpt id="p1">*</bpt>propertyName<ept id="p1">*</ept> and <bpt id="p2">*</bpt>targetProperty<ept id="p2">*</ept> to use the same property name.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>In this case, a control might define a property on itself and forward the property to an existing and intuitively named property of one of its component parts.</source>
          <target state="new">In this case, a control might define a property on itself and forward the property to an existing and intuitively named property of one of its component parts.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For example, a control that incorporates a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TextBlock<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br209652)</ept> in its compositing, which is used to display the control's own <bpt id="p3">**</bpt>Text<ept id="p3">**</ept> property, might include this XAML as a part in the control template:</source>
          <target state="new">For example, a control that incorporates a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TextBlock<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br209652)</ept> in its compositing, which is used to display the control's own <bpt id="p3">**</bpt>Text<ept id="p3">**</ept> property, might include this XAML as a part in the control template:</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The types used as the value for the source property and the target property must match.</source>
          <target state="new">The types used as the value for the source property and the target property must match.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>There's no opportunity to introduce a converter when you're using <bpt id="p1">**</bpt>TemplateBinding<ept id="p1">**</ept>.</source>
          <target state="new">There's no opportunity to introduce a converter when you're using <bpt id="p1">**</bpt>TemplateBinding<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Failing to match values results in an error when parsing the XAML.</source>
          <target state="new">Failing to match values results in an error when parsing the XAML.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If you need a converter you can use the verbose syntax for a template binding such as:</source>
          <target state="new">If you need a converter you can use the verbose syntax for a template binding such as:</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Attempting to use a <bpt id="p1">**</bpt>TemplateBinding<ept id="p1">**</ept> outside of a <bpt id="p2">[</bpt><bpt id="p3">**</bpt>ControlTemplate<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br209391)</ept> definition in XAML will result in a parser error.</source>
          <target state="new">Attempting to use a <bpt id="p1">**</bpt>TemplateBinding<ept id="p1">**</ept> outside of a <bpt id="p2">[</bpt><bpt id="p3">**</bpt>ControlTemplate<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br209391)</ept> definition in XAML will result in a parser error.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>You can use <bpt id="p1">**</bpt>TemplateBinding<ept id="p1">**</ept> for cases where the templated parent value is also deferred as another binding.</source>
          <target state="new">You can use <bpt id="p1">**</bpt>TemplateBinding<ept id="p1">**</ept> for cases where the templated parent value is also deferred as another binding.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The evaluation for <bpt id="p1">**</bpt>TemplateBinding<ept id="p1">**</ept> can wait until any required runtime bindings have values.</source>
          <target state="new">The evaluation for <bpt id="p1">**</bpt>TemplateBinding<ept id="p1">**</ept> can wait until any required runtime bindings have values.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">**</bpt>TemplateBinding<ept id="p1">**</ept> is always a one-way binding.</source>
          <target state="new">A <bpt id="p1">**</bpt>TemplateBinding<ept id="p1">**</ept> is always a one-way binding.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Both properties involved must be dependency properties.</source>
          <target state="new">Both properties involved must be dependency properties.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>TemplateBinding<ept id="p1">**</ept> is a markup extension.</source>
          <target state="new"><bpt id="p1">**</bpt>TemplateBinding<ept id="p1">**</ept> is a markup extension.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Markup extensions are typically implemented when there is a requirement to escape attribute values to be other than literal values or handler names, and the requirement is more global than just putting type converters on certain types or properties.</source>
          <target state="new">Markup extensions are typically implemented when there is a requirement to escape attribute values to be other than literal values or handler names, and the requirement is more global than just putting type converters on certain types or properties.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>All markup extensions in XAML use the "{" and "}" characters in their attribute syntax, which is the convention by which a XAML processor recognizes that a markup extension must process the attribute.</source>
          <target state="new">All markup extensions in XAML use the "{" and "}" characters in their attribute syntax, which is the convention by which a XAML processor recognizes that a markup extension must process the attribute.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  In the Windows Runtime XAML processor implementation, there is no backing class representation for <bpt id="p2">**</bpt>TemplateBinding<ept id="p2">**</ept>.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  In the Windows Runtime XAML processor implementation, there is no backing class representation for <bpt id="p2">**</bpt>TemplateBinding<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>TemplateBinding<ept id="p1">**</ept> is exclusively for use in XAML markup.</source>
          <target state="new"><bpt id="p1">**</bpt>TemplateBinding<ept id="p1">**</ept> is exclusively for use in XAML markup.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>There isn't a straightforward way to reproduce the behavior in code.</source>
          <target state="new">There isn't a straightforward way to reproduce the behavior in code.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Related topics</source>
          <target state="new">Related topics</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Quickstart: Control templates</source>
          <target state="new">Quickstart: Control templates</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Data binding in depth</source>
          <target state="new">Data binding in depth</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>ControlTemplate</source>
          <target state="new">ControlTemplate</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>XAML overview</source>
          <target state="new">XAML overview</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Dependency properties overview</source>
          <target state="new">Dependency properties overview</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>