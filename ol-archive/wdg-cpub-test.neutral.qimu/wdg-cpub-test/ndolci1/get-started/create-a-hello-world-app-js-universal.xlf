<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci1\get-started\create-a-hello-world-app-js-universal.md</xliffext:olfilepath>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2f9b56da71d2b73859043cc145bf84f1972e92d7</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-e58fd48" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Create a "Hello, world" app (JS)</source>
          <target state="new">Create a "Hello, world" app (JS)</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This tutorial teaches you how to use JavaScript and HTML to create a simple &amp;<ph id="ph1">\#</ph>0034;Hello, world&amp;<ph id="ph2">\#</ph>0034; app that targets the Universal Windows Platform (UWP) on Windows 10.</source>
          <target state="new">This tutorial teaches you how to use JavaScript and HTML to create a simple &amp;<ph id="ph1">\#</ph>0034;Hello, world&amp;<ph id="ph2">\#</ph>0034; app that targets the Universal Windows Platform (UWP) on Windows 10.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Create a "Hello, world" app (JS)</source>
          <target state="new">Create a "Hello, world" app (JS)</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This tutorial teaches you how to use JavaScript and HTML to create a simple "Hello, world" app that targets the Universal Windows Platform (UWP) on Windows 10.</source>
          <target state="new">This tutorial teaches you how to use JavaScript and HTML to create a simple "Hello, world" app that targets the Universal Windows Platform (UWP) on Windows 10.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>With a single project in Microsoft Visual Studio, you can build an app that runs on any Windows 10 device.</source>
          <target state="new">With a single project in Microsoft Visual Studio, you can build an app that runs on any Windows 10 device.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Here we focus on creating an app that runs equally well on desktop and mobile devices.</source>
          <target state="new">Here we focus on creating an app that runs equally well on desktop and mobile devices.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Important<ept id="p1">**</ept>   This tutorial is for use with Microsoft Visual Studio 2015 and Windows 10.</source>
          <target state="new"><bpt id="p1">**</bpt>Important<ept id="p1">**</ept>   This tutorial is for use with Microsoft Visual Studio 2015 and Windows 10.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>It won't work correctly with earlier versions.</source>
          <target state="new">It won't work correctly with earlier versions.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Here you'll learn how to:</source>
          <target state="new">Here you'll learn how to:</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Create a new project</source>
          <target state="new">Create a new project</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Add HTML content to your start page</source>
          <target state="new">Add HTML content to your start page</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Handle touch, pen, and mouse input</source>
          <target state="new">Handle touch, pen, and mouse input</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Run the project on the local desktop and on the phone emulator in Visual Studio.</source>
          <target state="new">Run the project on the local desktop and on the phone emulator in Visual Studio.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Create your own custom styles</source>
          <target state="new">Create your own custom styles</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Use a Windows Library for JavaScript control</source>
          <target state="new">Use a Windows Library for JavaScript control</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Before you start...</source>
          <target state="new">Before you start...</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>We're going to jump right into the steps you use to create a simple universal app.</source>
          <target state="new">We're going to jump right into the steps you use to create a simple universal app.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>So we strongly recommend that you read and understand the overview information in <bpt id="p1">[</bpt>What's new in Windows 10<ept id="p1">](https://dev.windows.com/whats-new-windows-10-dev-preview)</ept> and <bpt id="p2">[</bpt>What's a Universal Windows app<ept id="p2">](whats-a-uwp.md)</ept> before you start this tutorial.</source>
          <target state="new">So we strongly recommend that you read and understand the overview information in <bpt id="p1">[</bpt>What's new in Windows 10<ept id="p1">](https://dev.windows.com/whats-new-windows-10-dev-preview)</ept> and <bpt id="p2">[</bpt>What's a Universal Windows app<ept id="p2">](whats-a-uwp.md)</ept> before you start this tutorial.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>To complete this tutorial, you need Windows 10 and Visual Studio 2015.</source>
          <target state="new">To complete this tutorial, you need Windows 10 and Visual Studio 2015.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Get set up<ept id="p1">](get-set-up.md)</ept> for more info.</source>
          <target state="new">See <bpt id="p1">[</bpt>Get set up<ept id="p1">](get-set-up.md)</ept> for more info.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>We also assume you're using the default window layout in Visual Studio.</source>
          <target state="new">We also assume you're using the default window layout in Visual Studio.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If you change the default layout, you can reset it in the <bpt id="p1">**</bpt>Window<ept id="p1">**</ept> menu by using the <bpt id="p2">**</bpt>Reset Window Layout<ept id="p2">**</ept> command.</source>
          <target state="new">If you change the default layout, you can reset it in the <bpt id="p1">**</bpt>Window<ept id="p1">**</ept> menu by using the <bpt id="p2">**</bpt>Reset Window Layout<ept id="p2">**</ept> command.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Step 1: Create a new project in Visual Studio</source>
          <target state="new">Step 1: Create a new project in Visual Studio</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Let's create a new app named <ph id="ph1">`HelloWorld`</ph>.</source>
          <target state="new">Let's create a new app named <ph id="ph1">`HelloWorld`</ph>.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Here's how:</source>
          <target state="new">Here's how:</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Launch Visual Studio 2015.</source>
          <target state="new">Launch Visual Studio 2015.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The Visual Studio 2015 start screen appears.</source>
          <target state="new">The Visual Studio 2015 start screen appears.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>(From now on, we'll refer to Visual Studio 2015 simply as Visual Studio .)</source>
          <target state="new">(From now on, we'll refer to Visual Studio 2015 simply as Visual Studio .)</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p1">**</bpt>File<ept id="p1">**</ept> menu, select <bpt id="p2">**</bpt>New<ept id="p2">**</ept><ph id="ph1"> &gt; </ph><bpt id="p3">**</bpt>Project<ept id="p3">**</ept>.</source>
          <target state="new">On the <bpt id="p1">**</bpt>File<ept id="p1">**</ept> menu, select <bpt id="p2">**</bpt>New<ept id="p2">**</ept><ph id="ph1"> &gt; </ph><bpt id="p3">**</bpt>Project<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>New Project<ept id="p1">**</ept> dialog appears.</source>
          <target state="new">The <bpt id="p1">**</bpt>New Project<ept id="p1">**</ept> dialog appears.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The left pane of the dialog lets you pick the type of templates to display.</source>
          <target state="new">The left pane of the dialog lets you pick the type of templates to display.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>In the left pane, expand <bpt id="p1">**</bpt>Installed &gt; Templates &gt; JavaScript &gt; Windows<ept id="p1">**</ept>, then pick the <bpt id="p2">**</bpt>Universal<ept id="p2">**</ept> template group.</source>
          <target state="new">In the left pane, expand <bpt id="p1">**</bpt>Installed &gt; Templates &gt; JavaScript &gt; Windows<ept id="p1">**</ept>, then pick the <bpt id="p2">**</bpt>Universal<ept id="p2">**</ept> template group.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The dialog's center pane displays a list of project templates for Universal Windows Platform (UWP) apps.</source>
          <target state="new">The dialog's center pane displays a list of project templates for Universal Windows Platform (UWP) apps.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The New Project window</source>
          <target state="new">The New Project window</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>For this tutorial, we use the <bpt id="p1">**</bpt>Blank App<ept id="p1">**</ept> template.</source>
          <target state="new">For this tutorial, we use the <bpt id="p1">**</bpt>Blank App<ept id="p1">**</ept> template.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>This template creates a minimal UWP app that compiles and runs, but contains no user interface controls or data.</source>
          <target state="new">This template creates a minimal UWP app that compiles and runs, but contains no user interface controls or data.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>You add controls and data to the app over the course of this tutorials.</source>
          <target state="new">You add controls and data to the app over the course of this tutorials.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>In the center pane, select the <bpt id="p1">**</bpt>Blank App (Universal Windows)<ept id="p1">**</ept> template.</source>
          <target state="new">In the center pane, select the <bpt id="p1">**</bpt>Blank App (Universal Windows)<ept id="p1">**</ept> template.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Blank App<ept id="p1">**</ept> template creates a minimal UWP app that compiles and runs, but contains no user-interface controls or data.</source>
          <target state="new">The <bpt id="p1">**</bpt>Blank App<ept id="p1">**</ept> template creates a minimal UWP app that compiles and runs, but contains no user-interface controls or data.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>You add controls to the app over the course of this tutorial.</source>
          <target state="new">You add controls to the app over the course of this tutorial.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Name<ept id="p1">**</ept> text box, type "HelloWorld".</source>
          <target state="new">In the <bpt id="p1">**</bpt>Name<ept id="p1">**</ept> text box, type "HelloWorld".</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>OK<ept id="p1">**</ept> to create the project.</source>
          <target state="new">Click <bpt id="p1">**</bpt>OK<ept id="p1">**</ept> to create the project.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Visual Studio creates your project and displays it in the <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>.</source>
          <target state="new">Visual Studio creates your project and displays it in the <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Visual Studio Solution Explorer for the HelloWorld project</source>
          <target state="new">Visual Studio Solution Explorer for the HelloWorld project</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Although the <bpt id="p1">**</bpt>Blank App<ept id="p1">**</ept> is a minimal template, it still contains a handful of files:</source>
          <target state="new">Although the <bpt id="p1">**</bpt>Blank App<ept id="p1">**</ept> is a minimal template, it still contains a handful of files:</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>A manifest file (package.appxmanifest) that describes your app (its name, description, tile, start page, splash screen, and so on) and lists the files that your app contains.</source>
          <target state="new">A manifest file (package.appxmanifest) that describes your app (its name, description, tile, start page, splash screen, and so on) and lists the files that your app contains.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>A set of logo images (images/Square150x150Logo.scale-200.png, images/Square44x44Logo.scale-200.png, and images/Wide310x150Logo.scale-200.png)to display in the start menu.</source>
          <target state="new">A set of logo images (images/Square150x150Logo.scale-200.png, images/Square44x44Logo.scale-200.png, and images/Wide310x150Logo.scale-200.png)to display in the start menu.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>An image (images/StoreLogo.png) to represent your app in the Windows Store.</source>
          <target state="new">An image (images/StoreLogo.png) to represent your app in the Windows Store.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>A splash screen (images/SplashScreen.scale-200.png) to show when your app starts.</source>
          <target state="new">A splash screen (images/SplashScreen.scale-200.png) to show when your app starts.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>A start page (default.html) and an accompanying JavaScript file (default.js) that run when your app starts.</source>
          <target state="new">A start page (default.html) and an accompanying JavaScript file (default.js) that run when your app starts.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>To view and edit the files, double-click the file in the <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>.</source>
          <target state="new">To view and edit the files, double-click the file in the <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>These files are essential to all UWP apps using JavaScript.</source>
          <target state="new">These files are essential to all UWP apps using JavaScript.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Any project that you create in Visual Studio contains them.</source>
          <target state="new">Any project that you create in Visual Studio contains them.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Step 2: Launch the app</source>
          <target state="new">Step 2: Launch the app</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>At this point, you've created a very simple app.</source>
          <target state="new">At this point, you've created a very simple app.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>This is a good time to build, deploy, and launch your app and see what it looks like.</source>
          <target state="new">This is a good time to build, deploy, and launch your app and see what it looks like.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>You can debug your app on the local machine, in a simulator or emulator, or on a remote device.</source>
          <target state="new">You can debug your app on the local machine, in a simulator or emulator, or on a remote device.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Here's the target device menu in Visual Studio.</source>
          <target state="new">Here's the target device menu in Visual Studio.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Drop-down list of device targets for debugging your app</source>
          <target state="new">Drop-down list of device targets for debugging your app</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Start the app on a Desktop device</source>
          <target state="new">Start the app on a Desktop device</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>By default, the app runs on the local machine.</source>
          <target state="new">By default, the app runs on the local machine.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The target device menu provides several options for debugging your app on devices from the desktop device family.</source>
          <target state="new">The target device menu provides several options for debugging your app on devices from the desktop device family.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Simulator</source>
          <target state="new">Simulator</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Local Machine</source>
          <target state="new">Local Machine</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Remote Machine</source>
          <target state="new">Remote Machine</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>To start debugging on the local machine</source>
          <target state="new">To start debugging on the local machine</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>In the target device menu (<ph id="ph1">![</ph>Start debugging menu<ph id="ph2">](images/startdebug-full.png)</ph>) on the <bpt id="p1">**</bpt>Standard<ept id="p1">**</ept> toolbar, make sure that <bpt id="p2">**</bpt>Local Machine<ept id="p2">**</ept> is selected.</source>
          <target state="new">In the target device menu (<ph id="ph1">![</ph>Start debugging menu<ph id="ph2">](images/startdebug-full.png)</ph>) on the <bpt id="p1">**</bpt>Standard<ept id="p1">**</ept> toolbar, make sure that <bpt id="p2">**</bpt>Local Machine<ept id="p2">**</ept> is selected.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>(It's the default selection.)</source>
          <target state="new">(It's the default selection.)</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>Start Debugging<ept id="p1">**</ept> button (<ph id="ph1">![</ph>Start debugging button<ph id="ph2">](images/startdebug-sm.png)</ph>) on the toolbar.</source>
          <target state="new">Click the <bpt id="p1">**</bpt>Start Debugging<ept id="p1">**</ept> button (<ph id="ph1">![</ph>Start debugging button<ph id="ph2">](images/startdebug-sm.png)</ph>) on the toolbar.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>–or–</source>
          <target state="new">–or–</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>From the <bpt id="p1">**</bpt>Debug<ept id="p1">**</ept> menu, click <bpt id="p2">**</bpt>Start Debugging<ept id="p2">**</ept>.</source>
          <target state="new">From the <bpt id="p1">**</bpt>Debug<ept id="p1">**</ept> menu, click <bpt id="p2">**</bpt>Start Debugging<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>–or–</source>
          <target state="new">–or–</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Press F5.</source>
          <target state="new">Press F5.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The app opens in a window, and a default splash screen appears first.</source>
          <target state="new">The app opens in a window, and a default splash screen appears first.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The splash screen is defined by an image (SplashScreen.png) and a background color (specified in your app's manifest file).</source>
          <target state="new">The splash screen is defined by an image (SplashScreen.png) and a background color (specified in your app's manifest file).</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The splash screen disappears, and then your app appears.</source>
          <target state="new">The splash screen disappears, and then your app appears.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>It contains a black screen with the text "Content goes here".</source>
          <target state="new">It contains a black screen with the text "Content goes here".</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The HelloWorld app on a PC</source>
          <target state="new">The HelloWorld app on a PC</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Press the Windows key to open the <bpt id="p1">**</bpt>Start<ept id="p1">**</ept> menu, then show all apps.</source>
          <target state="new">Press the Windows key to open the <bpt id="p1">**</bpt>Start<ept id="p1">**</ept> menu, then show all apps.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Notice that deploying the app locally adds its tile to the <bpt id="p1">**</bpt>Start<ept id="p1">**</ept> menu.</source>
          <target state="new">Notice that deploying the app locally adds its tile to the <bpt id="p1">**</bpt>Start<ept id="p1">**</ept> menu.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>To run the app again (not in debugging mode), tap or click its tile in the <bpt id="p1">**</bpt>Start<ept id="p1">**</ept> menu.</source>
          <target state="new">To run the app again (not in debugging mode), tap or click its tile in the <bpt id="p1">**</bpt>Start<ept id="p1">**</ept> menu.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>It doesn't do much—yet—but congratulations, you've built your first UWP app!</source>
          <target state="new">It doesn't do much—yet—but congratulations, you've built your first UWP app!</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>To stop debugging</source>
          <target state="new">To stop debugging</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>Stop Debugging<ept id="p1">**</ept> button (<ph id="ph1">![</ph>Stop debugging button<ph id="ph2">](images/stopdebug.png)</ph>) in the toolbar.</source>
          <target state="new">Click the <bpt id="p1">**</bpt>Stop Debugging<ept id="p1">**</ept> button (<ph id="ph1">![</ph>Stop debugging button<ph id="ph2">](images/stopdebug.png)</ph>) in the toolbar.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>–or–</source>
          <target state="new">–or–</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>From the <bpt id="p1">**</bpt>Debug<ept id="p1">**</ept> menu, click <bpt id="p2">**</bpt>Stop debugging<ept id="p2">**</ept>.</source>
          <target state="new">From the <bpt id="p1">**</bpt>Debug<ept id="p1">**</ept> menu, click <bpt id="p2">**</bpt>Stop debugging<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>–or–</source>
          <target state="new">–or–</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Close the app window.</source>
          <target state="new">Close the app window.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Start the app on a mobile device emulator</source>
          <target state="new">Start the app on a mobile device emulator</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Your app runs on any Windows 10 device, so let’s see how it looks on a Windows Phone.</source>
          <target state="new">Your app runs on any Windows 10 device, so let’s see how it looks on a Windows Phone.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>In addition to the options to debug on a desktop device, Visual Studio provides options for deploying and debugging your app on a physical mobile device connected to the computer, or on a mobile device emulator.</source>
          <target state="new">In addition to the options to debug on a desktop device, Visual Studio provides options for deploying and debugging your app on a physical mobile device connected to the computer, or on a mobile device emulator.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>You can choose among emulators for devices with different memory and display configurations.</source>
          <target state="new">You can choose among emulators for devices with different memory and display configurations.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Device</source>
          <target state="new">Device</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Emulator <ph id="ph1">&lt;SDK version&gt;</ph> WVGA 4 inch 512MB</source>
          <target state="new">Emulator <ph id="ph1">&lt;SDK version&gt;</ph> WVGA 4 inch 512MB</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Emulator <ph id="ph1">&lt;SDK version&gt;</ph> WVGA 4 inch 1GB</source>
          <target state="new">Emulator <ph id="ph1">&lt;SDK version&gt;</ph> WVGA 4 inch 1GB</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>etc... (Various emulators in other configurations)</source>
          <target state="new">etc... (Various emulators in other configurations)</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>It's a good idea to test your app on a device with a small screen and limited memory, so use the <bpt id="p1">**</bpt>Emulator 10.0.10240.0 WVGA 4 inch 512MB<ept id="p1">**</ept> option.</source>
          <target state="new">It's a good idea to test your app on a device with a small screen and limited memory, so use the <bpt id="p1">**</bpt>Emulator 10.0.10240.0 WVGA 4 inch 512MB<ept id="p1">**</ept> option.</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>To start debugging on a mobile device emulator</source>
          <target state="new">To start debugging on a mobile device emulator</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>In the target device menu (<ph id="ph1">![</ph>Start debugging menu<ph id="ph2">](images/startdebug-full.png)</ph>) on the <bpt id="p1">**</bpt>Standard<ept id="p1">**</ept> toolbar, pick <bpt id="p2">**</bpt>Emulator 10.0.10240.0 WVGA 4 inch 512MB<ept id="p2">**</ept>.</source>
          <target state="new">In the target device menu (<ph id="ph1">![</ph>Start debugging menu<ph id="ph2">](images/startdebug-full.png)</ph>) on the <bpt id="p1">**</bpt>Standard<ept id="p1">**</ept> toolbar, pick <bpt id="p2">**</bpt>Emulator 10.0.10240.0 WVGA 4 inch 512MB<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>Start Debugging<ept id="p1">**</ept> button (<ph id="ph1">![</ph>Start debugging button<ph id="ph2">](images/startdebug-sm.png)</ph>) in the toolbar.</source>
          <target state="new">Click the <bpt id="p1">**</bpt>Start Debugging<ept id="p1">**</ept> button (<ph id="ph1">![</ph>Start debugging button<ph id="ph2">](images/startdebug-sm.png)</ph>) in the toolbar.</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>–or–</source>
          <target state="new">–or–</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>From the <bpt id="p1">**</bpt>Debug<ept id="p1">**</ept> menu, click <bpt id="p2">**</bpt>Start Debugging<ept id="p2">**</ept>.</source>
          <target state="new">From the <bpt id="p1">**</bpt>Debug<ept id="p1">**</ept> menu, click <bpt id="p2">**</bpt>Start Debugging<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Visual Studio starts the selected emulator and then deploys and starts your app.</source>
          <target state="new">Visual Studio starts the selected emulator and then deploys and starts your app.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>On the mobile device emulator, the app looks like this.</source>
          <target state="new">On the mobile device emulator, the app looks like this.</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Initial app screen on mobile device</source>
          <target state="new">Initial app screen on mobile device</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Step 3: Modify your start page</source>
          <target state="new">Step 3: Modify your start page</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>One of the files that Visual Studio created for you is default.html, your app's start page.</source>
          <target state="new">One of the files that Visual Studio created for you is default.html, your app's start page.</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>When the app runs, it displays the content of its start page.</source>
          <target state="new">When the app runs, it displays the content of its start page.</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The start page also contains references to the app's code files and style sheets.</source>
          <target state="new">The start page also contains references to the app's code files and style sheets.</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Here's the start page that Visual Studio created for you:</source>
          <target state="new">Here's the start page that Visual Studio created for you:</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Let's add some new content to your default.html file.</source>
          <target state="new">Let's add some new content to your default.html file.</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Just as you would add content to any other HTML file, you add your content inside the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>body<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Hh453011)</ept> element.</source>
          <target state="new">Just as you would add content to any other HTML file, you add your content inside the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>body<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Hh453011)</ept> element.</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>You can use HTML5 elements to create your app (with a <bpt id="p1">[</bpt>few exceptions<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Hh465380)</ept>).</source>
          <target state="new">You can use HTML5 elements to create your app (with a <bpt id="p1">[</bpt>few exceptions<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Hh465380)</ept>).</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>That means you can use HTML5 elements like <bpt id="p1">[</bpt><bpt id="p2">**</bpt>h1<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Hh441078)</ept>, <bpt id="p3">[</bpt><bpt id="p4">**</bpt>p<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/Hh453431)</ept>, <bpt id="p5">[</bpt><bpt id="p6">**</bpt>button<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/Hh453017)</ept>, <bpt id="p7">[</bpt><bpt id="p8">**</bpt>div<ept id="p8">**</ept><ept id="p7">](https://msdn.microsoft.com/library/windows/apps/Hh453133)</ept>, and <bpt id="p9">[</bpt><bpt id="p10">**</bpt>img<ept id="p10">**</ept><ept id="p9">](https://msdn.microsoft.com/library/windows/apps/Hh466114)</ept>.</source>
          <target state="new">That means you can use HTML5 elements like <bpt id="p1">[</bpt><bpt id="p2">**</bpt>h1<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Hh441078)</ept>, <bpt id="p3">[</bpt><bpt id="p4">**</bpt>p<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/Hh453431)</ept>, <bpt id="p5">[</bpt><bpt id="p6">**</bpt>button<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/Hh453017)</ept>, <bpt id="p7">[</bpt><bpt id="p8">**</bpt>div<ept id="p8">**</ept><ept id="p7">](https://msdn.microsoft.com/library/windows/apps/Hh453133)</ept>, and <bpt id="p9">[</bpt><bpt id="p10">**</bpt>img<ept id="p10">**</ept><ept id="p9">](https://msdn.microsoft.com/library/windows/apps/Hh466114)</ept>.</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>To modify your start page</source>
          <target state="new">To modify your start page</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Replace the existing content in the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>body<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Hh453011)</ept> element with a first-level heading that says "Hello, world!", some text that asks the user's name, an <bpt id="p3">[</bpt><bpt id="p4">**</bpt>input<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/Hh453271)</ept> element to accept the user's name, a <bpt id="p5">[</bpt><bpt id="p6">**</bpt>button<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/Hh453017)</ept>, and a <bpt id="p7">[</bpt><bpt id="p8">**</bpt>div<ept id="p8">**</ept><ept id="p7">](https://msdn.microsoft.com/library/windows/apps/Hh453133)</ept> element.</source>
          <target state="new">Replace the existing content in the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>body<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Hh453011)</ept> element with a first-level heading that says "Hello, world!", some text that asks the user's name, an <bpt id="p3">[</bpt><bpt id="p4">**</bpt>input<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/Hh453271)</ept> element to accept the user's name, a <bpt id="p5">[</bpt><bpt id="p6">**</bpt>button<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/Hh453017)</ept>, and a <bpt id="p7">[</bpt><bpt id="p8">**</bpt>div<ept id="p8">**</ept><ept id="p7">](https://msdn.microsoft.com/library/windows/apps/Hh453133)</ept> element.</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Assign IDs to the <bpt id="p1">**</bpt>input<ept id="p1">**</ept>, the <bpt id="p2">**</bpt>button<ept id="p2">**</ept>, and the <bpt id="p3">**</bpt>div<ept id="p3">**</ept>.</source>
          <target state="new">Assign IDs to the <bpt id="p1">**</bpt>input<ept id="p1">**</ept>, the <bpt id="p2">**</bpt>button<ept id="p2">**</ept>, and the <bpt id="p3">**</bpt>div<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Run the app on the local machine.</source>
          <target state="new">Run the app on the local machine.</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>It look like this.</source>
          <target state="new">It look like this.</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The HelloWorld app with new content</source>
          <target state="new">The HelloWorld app with new content</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>You can type in the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>input<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Hh453271)</ept> element, but right now, clicking the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>button<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/Hh453017)</ept> doesn't do anything.</source>
          <target state="new">You can type in the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>input<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Hh453271)</ept> element, but right now, clicking the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>button<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/Hh453017)</ept> doesn't do anything.</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Some objects, such as <bpt id="p1">**</bpt>button<ept id="p1">**</ept>, can send messages when certain events occur.</source>
          <target state="new">Some objects, such as <bpt id="p1">**</bpt>button<ept id="p1">**</ept>, can send messages when certain events occur.</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>These event messages give you the opportunity to take some action in response to the event.</source>
          <target state="new">These event messages give you the opportunity to take some action in response to the event.</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>You put code to respond to the event in an event handler method.</source>
          <target state="new">You put code to respond to the event in an event handler method.</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>In the next steps, we create an event handler for the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>button<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Hh453017)</ept> that displays a personalized greeting.</source>
          <target state="new">In the next steps, we create an event handler for the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>button<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Hh453017)</ept> that displays a personalized greeting.</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>We add our event handler code to our default.js file.</source>
          <target state="new">We add our event handler code to our default.js file.</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Step 4: Create an event handler</source>
          <target state="new">Step 4: Create an event handler</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>When we created our new project, Visual Studio created a /js/default.js file for us.</source>
          <target state="new">When we created our new project, Visual Studio created a /js/default.js file for us.</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>This file contains code for handling your app's life cycle.</source>
          <target state="new">This file contains code for handling your app's life cycle.</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>It's also where you write additional code that provides interactivity for your default.html file.</source>
          <target state="new">It's also where you write additional code that provides interactivity for your default.html file.</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Open the default.js file.</source>
          <target state="new">Open the default.js file.</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Before we start adding our own code, let's take a look at the first and the last few lines of code in the file:</source>
          <target state="new">Before we start adding our own code, let's take a look at the first and the last few lines of code in the file:</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>You might be wondering what's going on here.</source>
          <target state="new">You might be wondering what's going on here.</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>These lines of code wrap the rest of the default.js code in a self-executing anonymous function.</source>
          <target state="new">These lines of code wrap the rest of the default.js code in a self-executing anonymous function.</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>A self-executing anonymous function makes it easier to avoid naming conflicts or situations where you accidently modify a value that you didn't intend to modify.</source>
          <target state="new">A self-executing anonymous function makes it easier to avoid naming conflicts or situations where you accidently modify a value that you didn't intend to modify.</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>It also keeps unnecessary identifiers out of the global namespace, which helps performance.</source>
          <target state="new">It also keeps unnecessary identifiers out of the global namespace, which helps performance.</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>It looks a little strange, but it's a good programming practice.</source>
          <target state="new">It looks a little strange, but it's a good programming practice.</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The next line of code turns on <bpt id="p1">[</bpt>strict mode<ept id="p1">](https://msdn.microsoft.com/en-us/library/windows/apps/br230269.aspx)</ept> for your JavaScript code.</source>
          <target state="new">The next line of code turns on <bpt id="p1">[</bpt>strict mode<ept id="p1">](https://msdn.microsoft.com/en-us/library/windows/apps/br230269.aspx)</ept> for your JavaScript code.</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Strict mode provides additional error checking for your code.</source>
          <target state="new">Strict mode provides additional error checking for your code.</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>For example, it prevents you from using implicitly declared variables or assigning a value to a read-only property.</source>
          <target state="new">For example, it prevents you from using implicitly declared variables or assigning a value to a read-only property.</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Take a look at the rest of the code in default.js.</source>
          <target state="new">Take a look at the rest of the code in default.js.</target>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>It handles your app's <bpt id="p1">[</bpt><bpt id="p2">**</bpt>activated<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR212679)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>checkpoint<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR229839)</ept> events.</source>
          <target state="new">It handles your app's <bpt id="p1">[</bpt><bpt id="p2">**</bpt>activated<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR212679)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>checkpoint<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR229839)</ept> events.</target>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>We go into more detail about these events later.</source>
          <target state="new">We go into more detail about these events later.</target>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>For now, just know that the <bpt id="p1">**</bpt>activated<ept id="p1">**</ept> event fires when your app starts.</source>
          <target state="new">For now, just know that the <bpt id="p1">**</bpt>activated<ept id="p1">**</ept> event fires when your app starts.</target>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Let's define an event handler for your <bpt id="p1">[</bpt><bpt id="p2">**</bpt>button<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Hh453017)</ept>.</source>
          <target state="new">Let's define an event handler for your <bpt id="p1">[</bpt><bpt id="p2">**</bpt>button<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Hh453017)</ept>.</target>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Our new event handler gets the user's name from the <ph id="ph1">`nameInput`</ph> <bpt id="p1">[</bpt><bpt id="p2">**</bpt>input<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Hh453271)</ept> control and uses it to output a greeting to the <ph id="ph2">`greetingOutput`</ph> <bpt id="p3">[</bpt><bpt id="p4">**</bpt>div<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/Hh453133)</ept> element that you created in the last section.</source>
          <target state="new">Our new event handler gets the user's name from the <ph id="ph1">`nameInput`</ph> <bpt id="p1">[</bpt><bpt id="p2">**</bpt>input<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Hh453271)</ept> control and uses it to output a greeting to the <ph id="ph2">`greetingOutput`</ph> <bpt id="p3">[</bpt><bpt id="p4">**</bpt>div<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/Hh453133)</ept> element that you created in the last section.</target>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Using events that work for touch, mouse, and pen input</source>
          <target state="new">Using events that work for touch, mouse, and pen input</target>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>In a UWP app, you don’t need to worry about the differences between touch, mouse, and other forms of pointer input.</source>
          <target state="new">In a UWP app, you don’t need to worry about the differences between touch, mouse, and other forms of pointer input.</target>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>You can just use events that you know, like <bpt id="p1">[</bpt><bpt id="p2">**</bpt>click<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Hh441312)</ept>, and they work for all forms of input.</source>
          <target state="new">You can just use events that you know, like <bpt id="p1">[</bpt><bpt id="p2">**</bpt>click<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Hh441312)</ept>, and they work for all forms of input.</target>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Tip<ept id="p1">**</ept>   Your app can also use the new <bpt id="p2">*</bpt>MSPointer<ph id="ph1">\*</ph><ept id="p2">*</ept> and <bpt id="p3">*</bpt>MSGesture<ph id="ph2">\*</ph><ept id="p3">*</ept> events, which work for touch, mouse, and pen input and can provide additional info about the device that triggered the event.</source>
          <target state="new"><bpt id="p1">**</bpt>Tip<ept id="p1">**</ept>   Your app can also use the new <bpt id="p2">*</bpt>MSPointer<ph id="ph1">\*</ph><ept id="p2">*</ept> and <bpt id="p3">*</bpt>MSGesture<ph id="ph2">\*</ph><ept id="p3">*</ept> events, which work for touch, mouse, and pen input and can provide additional info about the device that triggered the event.</target>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>For more info, see <bpt id="p1">[</bpt>Responding to user interaction<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Hh700412)</ept> and <bpt id="p2">[</bpt>Gestures, manipulations, and interactions<ept id="p2">](https://msdn.microsoft.com/library/windows/apps/Hh761498)</ept>.</source>
          <target state="new">For more info, see <bpt id="p1">[</bpt>Responding to user interaction<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Hh700412)</ept> and <bpt id="p2">[</bpt>Gestures, manipulations, and interactions<ept id="p2">](https://msdn.microsoft.com/library/windows/apps/Hh761498)</ept>.</target>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Let's go ahead and create the event handler.</source>
          <target state="new">Let's go ahead and create the event handler.</target>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>To create the event handler</source>
          <target state="new">To create the event handler</target>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>In default.js, after the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>app.oncheckpoint<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR229839)</ept> event handler and before the call to <bpt id="p3">[</bpt><bpt id="p4">**</bpt>app.start<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR229705)</ept>, create a <bpt id="p5">[</bpt><bpt id="p6">**</bpt>click<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/Hh441312)</ept> event handler function named <ph id="ph1">`buttonClickHandler`</ph> that takes a single parameter named <ph id="ph2">`eventInfo`</ph>.</source>
          <target state="new">In default.js, after the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>app.oncheckpoint<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR229839)</ept> event handler and before the call to <bpt id="p3">[</bpt><bpt id="p4">**</bpt>app.start<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR229705)</ept>, create a <bpt id="p5">[</bpt><bpt id="p6">**</bpt>click<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/Hh441312)</ept> event handler function named <ph id="ph1">`buttonClickHandler`</ph> that takes a single parameter named <ph id="ph2">`eventInfo`</ph>.</target>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>You added your event handler to default.js.</source>
          <target state="new">You added your event handler to default.js.</target>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Now you need to register it.</source>
          <target state="new">Now you need to register it.</target>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Step 5: Register the event handler when your app launches</source>
          <target state="new">Step 5: Register the event handler when your app launches</target>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>The only thing we need to do now is register the event handler with the button.</source>
          <target state="new">The only thing we need to do now is register the event handler with the button.</target>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>The recommended way to register an event handler is to call <bpt id="p1">[</bpt><bpt id="p2">**</bpt>addEventListener<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Hh441145)</ept> from our code.</source>
          <target state="new">The recommended way to register an event handler is to call <bpt id="p1">[</bpt><bpt id="p2">**</bpt>addEventListener<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Hh441145)</ept> from our code.</target>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>A good place to register the event handler is when our app is activated.</source>
          <target state="new">A good place to register the event handler is when our app is activated.</target>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Fortunately, Visual Studio generated some code for us in our default.js file that handles our app's activation: the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>app.onactivated<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR212679)</ept> event handler.</source>
          <target state="new">Fortunately, Visual Studio generated some code for us in our default.js file that handles our app's activation: the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>app.onactivated<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR212679)</ept> event handler.</target>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Let's take a look at this code.</source>
          <target state="new">Let's take a look at this code.</target>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Inside the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>onactivated<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR212679)</ept> handler, the code checks to see what type of activation occurred.</source>
          <target state="new">Inside the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>onactivated<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR212679)</ept> handler, the code checks to see what type of activation occurred.</target>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>There are many different types of activations.</source>
          <target state="new">There are many different types of activations.</target>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>For example, your app is activated when the user launches your app and when the user wants to open a file that is associated with your app.</source>
          <target state="new">For example, your app is activated when the user launches your app and when the user wants to open a file that is associated with your app.</target>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>(For more info, see <bpt id="p1">[</bpt>App lifecycle<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Mt243287)</ept>.)</source>
          <target state="new">(For more info, see <bpt id="p1">[</bpt>App lifecycle<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Mt243287)</ept>.)</target>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>We're interested in the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>launch<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR224693)</ept> activation.</source>
          <target state="new">We're interested in the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>launch<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR224693)</ept> activation.</target>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>An app is <bpt id="p1">*</bpt>launched<ept id="p1">*</ept> whenever it is not running and then a user activates it.</source>
          <target state="new">An app is <bpt id="p1">*</bpt>launched<ept id="p1">*</ept> whenever it is not running and then a user activates it.</target>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>If the activation is a launch activation, the code checks to see how the app was shut down the last time it ran.</source>
          <target state="new">If the activation is a launch activation, the code checks to see how the app was shut down the last time it ran.</target>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Then it calls <bpt id="p1">[</bpt><bpt id="p2">**</bpt>WinJS.UI.processAll<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Hh440975)</ept>.</source>
          <target state="new">Then it calls <bpt id="p1">[</bpt><bpt id="p2">**</bpt>WinJS.UI.processAll<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Hh440975)</ept>.</target>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>It calls <bpt id="p1">[</bpt><bpt id="p2">**</bpt>WinJS.UI.processAll<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Hh440975)</ept> regardless of whether the app had been shut down in the past or whether this is the very first time it's being launched.</source>
          <target state="new">It calls <bpt id="p1">[</bpt><bpt id="p2">**</bpt>WinJS.UI.processAll<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Hh440975)</ept> regardless of whether the app had been shut down in the past or whether this is the very first time it's being launched.</target>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>WinJS.UI.processAll<ept id="p1">**</ept> is enclosed in a call to the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>setPromise<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/JJ215609)</ept> method, which makes sure the splash screen isn't taken down until the app's page is ready.</source>
          <target state="new">The <bpt id="p1">**</bpt>WinJS.UI.processAll<ept id="p1">**</ept> is enclosed in a call to the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>setPromise<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/JJ215609)</ept> method, which makes sure the splash screen isn't taken down until the app's page is ready.</target>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Tip<ept id="p1">**</ept>   The <bpt id="p2">[</bpt><bpt id="p3">**</bpt>WinJS.UI.processAll<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/Hh440975)</ept> function scans your default.html file for WinJS controls and initializes them.</source>
          <target state="new"><bpt id="p1">**</bpt>Tip<ept id="p1">**</ept>   The <bpt id="p2">[</bpt><bpt id="p3">**</bpt>WinJS.UI.processAll<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/Hh440975)</ept> function scans your default.html file for WinJS controls and initializes them.</target>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>So far, we haven't added any of these controls, but it's a good idea to leave this code in case you want to add them later.</source>
          <target state="new">So far, we haven't added any of these controls, but it's a good idea to leave this code in case you want to add them later.</target>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>A good place to register event handlers for non-WinJS controls is just after the call to <bpt id="p1">[</bpt><bpt id="p2">**</bpt>WinJS.UI.processAll<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Hh440975)</ept>.</source>
          <target state="new">A good place to register event handlers for non-WinJS controls is just after the call to <bpt id="p1">[</bpt><bpt id="p2">**</bpt>WinJS.UI.processAll<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Hh440975)</ept>.</target>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>To register your event handler</source>
          <target state="new">To register your event handler</target>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>onactivated<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR212679)</ept> event handler in default.js, retrieve <ph id="ph1">`helloButton`</ph> and use <bpt id="p3">[</bpt><bpt id="p4">**</bpt>addEventListener<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/Hh441145)</ept> to register our event handler for the <bpt id="p5">[</bpt><bpt id="p6">**</bpt>click<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/Hh441312)</ept> event.</source>
          <target state="new">In the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>onactivated<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR212679)</ept> event handler in default.js, retrieve <ph id="ph1">`helloButton`</ph> and use <bpt id="p3">[</bpt><bpt id="p4">**</bpt>addEventListener<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/Hh441145)</ept> to register our event handler for the <bpt id="p5">[</bpt><bpt id="p6">**</bpt>click<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/Hh441312)</ept> event.</target>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Add this code after the call to <bpt id="p1">[</bpt><bpt id="p2">**</bpt>WinJS.UI.processAll<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Hh440975)</ept>.</source>
          <target state="new">Add this code after the call to <bpt id="p1">[</bpt><bpt id="p2">**</bpt>WinJS.UI.processAll<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Hh440975)</ept>.</target>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Here's the complete code for our updated default.js file:</source>
          <target state="new">Here's the complete code for our updated default.js file:</target>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Run the app.</source>
          <target state="new">Run the app.</target>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>When you enter your name in the text box and click the button, the app displays a personalized greeting.</source>
          <target state="new">When you enter your name in the text box and click the button, the app displays a personalized greeting.</target>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Here's how it looks on the local machine and in the emulator.</source>
          <target state="new">Here's how it looks on the local machine and in the emulator.</target>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>A personalized greeting from the HelloWorld app</source>
          <target state="new">A personalized greeting from the HelloWorld app</target>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>A personalized greeting from the HelloWorld app</source>
          <target state="new">A personalized greeting from the HelloWorld app</target>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>   If you're curious as to why we use <bpt id="p2">[</bpt><bpt id="p3">**</bpt>addEventListener<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/Hh441145)</ept> to register our event in code rather than setting the <bpt id="p4">[</bpt><bpt id="p5">**</bpt>onclick<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/Hh441312)</ept> event in our HTML, see <bpt id="p6">[</bpt>Coding basic apps<ept id="p6">](https://msdn.microsoft.com/library/windows/apps/Hh780660)</ept> for a detailed explanation.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>   If you're curious as to why we use <bpt id="p2">[</bpt><bpt id="p3">**</bpt>addEventListener<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/Hh441145)</ept> to register our event in code rather than setting the <bpt id="p4">[</bpt><bpt id="p5">**</bpt>onclick<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/Hh441312)</ept> event in our HTML, see <bpt id="p6">[</bpt>Coding basic apps<ept id="p6">](https://msdn.microsoft.com/library/windows/apps/Hh780660)</ept> for a detailed explanation.</target>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Step 6: Add a Windows Library for JavaScript control</source>
          <target state="new">Step 6: Add a Windows Library for JavaScript control</target>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>In addition to standard HTML controls, your app can use any of the controls in the Windows Library for JavaScript, such as the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>WinJS.UI.DatePicker<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR211681)</ept>, <bpt id="p3">[</bpt><bpt id="p4">**</bpt>WinJS.UI.FlipView<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR211711)</ept>, <bpt id="p5">[</bpt><bpt id="p6">**</bpt>WinjS.UI.ListView<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/BR211837)</ept>, and <bpt id="p7">[</bpt><bpt id="p8">**</bpt>WinJS.UI.Rating<ept id="p8">**</ept><ept id="p7">](https://msdn.microsoft.com/library/windows/apps/BR211895)</ept> controls.</source>
          <target state="new">In addition to standard HTML controls, your app can use any of the controls in the Windows Library for JavaScript, such as the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>WinJS.UI.DatePicker<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR211681)</ept>, <bpt id="p3">[</bpt><bpt id="p4">**</bpt>WinJS.UI.FlipView<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR211711)</ept>, <bpt id="p5">[</bpt><bpt id="p6">**</bpt>WinjS.UI.ListView<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/BR211837)</ept>, and <bpt id="p7">[</bpt><bpt id="p8">**</bpt>WinJS.UI.Rating<ept id="p8">**</ept><ept id="p7">](https://msdn.microsoft.com/library/windows/apps/BR211895)</ept> controls.</target>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Unlike HTML controls, WinJS controls don't have dedicated markup elements: you can't create a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Rating<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR211895)</ept> control by adding a <ph id="ph1">`&lt;rating /&gt;`</ph> element, for example.</source>
          <target state="new">Unlike HTML controls, WinJS controls don't have dedicated markup elements: you can't create a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Rating<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR211895)</ept> control by adding a <ph id="ph1">`&lt;rating /&gt;`</ph> element, for example.</target>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>To add a WinJS control, you create a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>div<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Hh453133)</ept> element and use the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>data-win-control<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/Hh440969)</ept> attribute to specify the type of control you want.</source>
          <target state="new">To add a WinJS control, you create a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>div<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Hh453133)</ept> element and use the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>data-win-control<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/Hh440969)</ept> attribute to specify the type of control you want.</target>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>To add a <bpt id="p1">**</bpt>Rating<ept id="p1">**</ept> control, you set the attribute to "WinJS.UI.Rating".</source>
          <target state="new">To add a <bpt id="p1">**</bpt>Rating<ept id="p1">**</ept> control, you set the attribute to "WinJS.UI.Rating".</target>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Let's add a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Rating<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR211895)</ept> control to your app.</source>
          <target state="new">Let's add a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Rating<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR211895)</ept> control to your app.</target>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>In your default.html file, add a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>label<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Hh453321)</ept> and a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Rating<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR211895)</ept> control after the <ph id="ph1">`greetingOutput`</ph> <bpt id="p5">[</bpt><bpt id="p6">**</bpt>div<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/Hh453133)</ept>.</source>
          <target state="new">In your default.html file, add a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>label<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Hh453321)</ept> and a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Rating<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR211895)</ept> control after the <ph id="ph1">`greetingOutput`</ph> <bpt id="p5">[</bpt><bpt id="p6">**</bpt>div<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/Hh453133)</ept>.</target>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Run the app on the local machine.</source>
          <target state="new">Run the app on the local machine.</target>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Notice the new <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Rating<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR211895)</ept> control.</source>
          <target state="new">Notice the new <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Rating<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR211895)</ept> control.</target>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>The Hello, world app, with a Windows Library for JavaScript control</source>
          <target state="new">The Hello, world app, with a Windows Library for JavaScript control</target>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Right now, clicking the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Rating<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR211895)</ept> control changes the rating, but it doesn't do anything else.</source>
          <target state="new">Right now, clicking the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Rating<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR211895)</ept> control changes the rating, but it doesn't do anything else.</target>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Let's use an event handler to do something when the user changes the rating.</source>
          <target state="new">Let's use an event handler to do something when the user changes the rating.</target>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Step 7: Register an event handler for a Windows Library for JavaScript control</source>
          <target state="new">Step 7: Register an event handler for a Windows Library for JavaScript control</target>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Registering an event handler for a WinJS control is a little different than registering an event handler for a standard HTML control.</source>
          <target state="new">Registering an event handler for a WinJS control is a little different than registering an event handler for a standard HTML control.</target>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Earlier, we mentioned that the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>onactivated<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR212679)</ept> event handler calls <bpt id="p3">[</bpt><bpt id="p4">**</bpt>WinJS.UI.processAll<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/Hh440975)</ept> method to initialize WinJS in your markup.</source>
          <target state="new">Earlier, we mentioned that the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>onactivated<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR212679)</ept> event handler calls <bpt id="p3">[</bpt><bpt id="p4">**</bpt>WinJS.UI.processAll<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/Hh440975)</ept> method to initialize WinJS in your markup.</target>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>WinJS.UI.processAll<ept id="p1">**</ept> is enclosed in a call to the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>setPromise<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/JJ215609)</ept> method.</source>
          <target state="new">The <bpt id="p1">**</bpt>WinJS.UI.processAll<ept id="p1">**</ept> is enclosed in a call to the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>setPromise<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/JJ215609)</ept> method.</target>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Rating<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR211895)</ept> were a standard HTML control, you could add your event handler after this call to <bpt id="p3">[</bpt><bpt id="p4">**</bpt>WinJS.UI.processAll<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/Hh440975)</ept>.</source>
          <target state="new">If <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Rating<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR211895)</ept> were a standard HTML control, you could add your event handler after this call to <bpt id="p3">[</bpt><bpt id="p4">**</bpt>WinJS.UI.processAll<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/Hh440975)</ept>.</target>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>But it's a little more complicated for a WinJS control like our <bpt id="p1">**</bpt>Rating<ept id="p1">**</ept>.</source>
          <target state="new">But it's a little more complicated for a WinJS control like our <bpt id="p1">**</bpt>Rating<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Because <bpt id="p1">**</bpt>WinJS.UI.processAll<ept id="p1">**</ept> creates the <bpt id="p2">**</bpt>Rating<ept id="p2">**</ept> control for us, we can't add the event handler to <bpt id="p3">**</bpt>Rating<ept id="p3">**</ept> until after <bpt id="p4">**</bpt>WinJS.UI.processAll<ept id="p4">**</ept> has finished its processing.</source>
          <target state="new">Because <bpt id="p1">**</bpt>WinJS.UI.processAll<ept id="p1">**</ept> creates the <bpt id="p2">**</bpt>Rating<ept id="p2">**</ept> control for us, we can't add the event handler to <bpt id="p3">**</bpt>Rating<ept id="p3">**</ept> until after <bpt id="p4">**</bpt>WinJS.UI.processAll<ept id="p4">**</ept> has finished its processing.</target>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">[</bpt><bpt id="p2">**</bpt>WinJS.UI.processAll<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Hh440975)</ept> were a typical method, we could register the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Rating<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR211895)</ept> event handler right after we call it.</source>
          <target state="new">If <bpt id="p1">[</bpt><bpt id="p2">**</bpt>WinJS.UI.processAll<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Hh440975)</ept> were a typical method, we could register the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Rating<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR211895)</ept> event handler right after we call it.</target>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>But the <bpt id="p1">**</bpt>WinJS.UI.processAll<ept id="p1">**</ept> method is asynchronous, so any code that follows it might run before <bpt id="p2">**</bpt>WinJS.UI.processAll<ept id="p2">**</ept> completes.</source>
          <target state="new">But the <bpt id="p1">**</bpt>WinJS.UI.processAll<ept id="p1">**</ept> method is asynchronous, so any code that follows it might run before <bpt id="p2">**</bpt>WinJS.UI.processAll<ept id="p2">**</ept> completes.</target>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>So, what do we do?</source>
          <target state="new">So, what do we do?</target>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>We use a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Promise<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR211867)</ept> object to receive notification when <bpt id="p3">**</bpt>WinJS.UI.processAll<ept id="p3">**</ept> completes.</source>
          <target state="new">We use a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Promise<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR211867)</ept> object to receive notification when <bpt id="p3">**</bpt>WinJS.UI.processAll<ept id="p3">**</ept> completes.</target>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Like all asynchronous WinJS methods, <bpt id="p1">[</bpt><bpt id="p2">**</bpt>WinJS.UI.processAll<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Hh440975)</ept> returns a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Promise<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR211867)</ept> object.</source>
          <target state="new">Like all asynchronous WinJS methods, <bpt id="p1">[</bpt><bpt id="p2">**</bpt>WinJS.UI.processAll<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Hh440975)</ept> returns a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Promise<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR211867)</ept> object.</target>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">**</bpt>Promise<ept id="p1">**</ept> is a "promise" that something will happen in the future; when that thing happens, the <bpt id="p2">**</bpt>Promise<ept id="p2">**</ept> is said to have completed.</source>
          <target state="new">A <bpt id="p1">**</bpt>Promise<ept id="p1">**</ept> is a "promise" that something will happen in the future; when that thing happens, the <bpt id="p2">**</bpt>Promise<ept id="p2">**</ept> is said to have completed.</target>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>Promise<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR211867)</ept> objects have a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>then<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR229728)</ept> method that takes a "completed" function as a parameter.</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>Promise<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR211867)</ept> objects have a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>then<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR229728)</ept> method that takes a "completed" function as a parameter.</target>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Promise<ept id="p1">**</ept> calls this function when it completes.</source>
          <target state="new">The <bpt id="p1">**</bpt>Promise<ept id="p1">**</ept> calls this function when it completes.</target>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>By adding your code to a "completed" function and passing it to the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Promise<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR211867)</ept> object's <bpt id="p3">[</bpt><bpt id="p4">**</bpt>then<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR229728)</ept> method, you can be sure your code executes after <bpt id="p5">[</bpt><bpt id="p6">**</bpt>WinJS.UI.processAll<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/Hh440975)</ept> is complete.</source>
          <target state="new">By adding your code to a "completed" function and passing it to the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Promise<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR211867)</ept> object's <bpt id="p3">[</bpt><bpt id="p4">**</bpt>then<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR229728)</ept> method, you can be sure your code executes after <bpt id="p5">[</bpt><bpt id="p6">**</bpt>WinJS.UI.processAll<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/Hh440975)</ept> is complete.</target>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Let's output the rating value when the user selects a rating.</source>
          <target state="new">Let's output the rating value when the user selects a rating.</target>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>In your default.html file, create a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>div<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Hh453133)</ept> element to display the rating value and give it the <bpt id="p3">**</bpt>id<ept id="p3">**</ept> "ratingOutput".</source>
          <target state="new">In your default.html file, create a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>div<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Hh453133)</ept> element to display the rating value and give it the <bpt id="p3">**</bpt>id<ept id="p3">**</ept> "ratingOutput".</target>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>In our default.js file, create an event handler for the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Rating<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR211895)</ept> control's <bpt id="p3">[</bpt><bpt id="p4">**</bpt>change<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR211891)</ept> event named <ph id="ph1">`ratingChanged`</ph>.</source>
          <target state="new">In our default.js file, create an event handler for the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Rating<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR211895)</ept> control's <bpt id="p3">[</bpt><bpt id="p4">**</bpt>change<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR211891)</ept> event named <ph id="ph1">`ratingChanged`</ph>.</target>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>eventInfo<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Hh465776)</ept> parameter contains a <bpt id="p3">**</bpt>detail.tentativeRating<ept id="p3">**</ept> property that provides the new user rating.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>eventInfo<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Hh465776)</ept> parameter contains a <bpt id="p3">**</bpt>detail.tentativeRating<ept id="p3">**</ept> property that provides the new user rating.</target>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Retrieve this value and display it in the output <bpt id="p1">[</bpt><bpt id="p2">**</bpt>div<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Hh453133)</ept>.</source>
          <target state="new">Retrieve this value and display it in the output <bpt id="p1">[</bpt><bpt id="p2">**</bpt>div<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Hh453133)</ept>.</target>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Run the app.</source>
          <target state="new">Run the app.</target>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>When you select a rating value, it outputs the numeric value below the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Rating<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR211895)</ept> control.</source>
          <target state="new">When you select a rating value, it outputs the numeric value below the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Rating<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR211895)</ept> control.</target>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>The completed Hello world app on a PC</source>
          <target state="new">The completed Hello world app on a PC</target>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>The completed Hello world app on a phone</source>
          <target state="new">The completed Hello world app on a phone</target>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>Summary</source>
          <target state="new">Summary</target>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>Congratulations, you've created your first app for Windows 10 and the UWP using JavaScript and HTML!</source>
          <target state="new">Congratulations, you've created your first app for Windows 10 and the UWP using JavaScript and HTML!</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>