<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci1\get-started\create-a-basic-windows-10-app-in-cpp.md</xliffext:olfilepath>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1dcd35b41e215558005b1056c0384986ab86753b</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-e58fd48" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Create a Hello World app in C++ (Windows 10)</source>
          <target state="new">Create a Hello World app in C++ (Windows 10)</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>With Microsoft Visual Studio 2015, you can use C++ to develop an app that runs on Windows 10, including on phones running Windows 10.</source>
          <target state="new">With Microsoft Visual Studio 2015, you can use C++ to develop an app that runs on Windows 10, including on phones running Windows 10.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>These apps have a UI that's defined in Extensible Application Markup Language (XAML).</source>
          <target state="new">These apps have a UI that's defined in Extensible Application Markup Language (XAML).</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Create a "hello world" app in C++ (Windows 10)</source>
          <target state="new">Create a "hello world" app in C++ (Windows 10)</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>With Microsoft Visual Studio 2015, you can use C++ to develop an app that runs on Windows 10, including on phones running Windows 10.</source>
          <target state="new">With Microsoft Visual Studio 2015, you can use C++ to develop an app that runs on Windows 10, including on phones running Windows 10.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>These apps have a UI that's defined in Extensible Application Markup Language (XAML).</source>
          <target state="new">These apps have a UI that's defined in Extensible Application Markup Language (XAML).</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>To develop an app that runs on Windows 8.1 and Windows Phone 8.1, use Microsoft Visual Studio 2013 Update 3 or later and follow the steps <bpt id="p1">[</bpt>here<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Dn263168)</ept>.</source>
          <target state="new">To develop an app that runs on Windows 8.1 and Windows Phone 8.1, use Microsoft Visual Studio 2013 Update 3 or later and follow the steps <bpt id="p1">[</bpt>here<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Dn263168)</ept>.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The most significant difference is that for Windows 8.1 and Windows Phone 8.1, you use a solution with three projects, one for the desktop (or tablet device), one for the phone, and one for shared code.</source>
          <target state="new">The most significant difference is that for Windows 8.1 and Windows Phone 8.1, you use a solution with three projects, one for the desktop (or tablet device), one for the phone, and one for shared code.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For Windows 10 development, all code shares the same project.</source>
          <target state="new">For Windows 10 development, all code shares the same project.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For tutorials in other programming languages, see:</source>
          <target state="new">For tutorials in other programming languages, see:</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Create your first Windows Store app using JavaScript</source>
          <target state="new">Create your first Windows Store app using JavaScript</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Create your first Windows Store app using C# or Visual Basic</source>
          <target state="new">Create your first Windows Store app using C# or Visual Basic</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Before you start...</source>
          <target state="new">Before you start...</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>To complete this tutorial, you must use Visual Studio 2015 Community or later, or one of the non-Community versions of Visual Studio 2015, on a computer that's running Windows 10 or Windows 8.1.</source>
          <target state="new">To complete this tutorial, you must use Visual Studio 2015 Community or later, or one of the non-Community versions of Visual Studio 2015, on a computer that's running Windows 10 or Windows 8.1.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>To download, see <bpt id="p1">[</bpt>Get the tools<ept id="p1">](http://go.microsoft.com/fwlink/p/?LinkId=532666)</ept>.</source>
          <target state="new">To download, see <bpt id="p1">[</bpt>Get the tools<ept id="p1">](http://go.microsoft.com/fwlink/p/?LinkId=532666)</ept>.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Install the appropriate <bpt id="p1">[</bpt>SDK<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=533049)</ept> for Windows Universal Platform development.</source>
          <target state="new">Install the appropriate <bpt id="p1">[</bpt>SDK<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=533049)</ept> for Windows Universal Platform development.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You also must have a developer license.</source>
          <target state="new">You also must have a developer license.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For instructions, see <bpt id="p1">[</bpt>Get a developer license<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Hh974578)</ept>.</source>
          <target state="new">For instructions, see <bpt id="p1">[</bpt>Get a developer license<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Hh974578)</ept>.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>We assume you have a basic understanding of standard C++, XAML, and the concepts in the <bpt id="p1">[</bpt>XAML overview<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Mt185595)</ept>.</source>
          <target state="new">We assume you have a basic understanding of standard C++, XAML, and the concepts in the <bpt id="p1">[</bpt>XAML overview<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Mt185595)</ept>.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>We assume you're using the default window layout in Visual Studio.</source>
          <target state="new">We assume you're using the default window layout in Visual Studio.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>To reset to the default layout, on the menu bar, choose <bpt id="p1">**</bpt>Window<ept id="p1">**</ept><ph id="ph1"> &gt; </ph><bpt id="p2">**</bpt>Reset Window Layout<ept id="p2">**</ept>.</source>
          <target state="new">To reset to the default layout, on the menu bar, choose <bpt id="p1">**</bpt>Window<ept id="p1">**</ept><ph id="ph1"> &gt; </ph><bpt id="p2">**</bpt>Reset Window Layout<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Note that there is a known issue with Visual Studio 2015 that can result in a NullReferenceException when loading the XAML designer.</source>
          <target state="new">Note that there is a known issue with Visual Studio 2015 that can result in a NullReferenceException when loading the XAML designer.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This issue blocks some of the steps of this tutorial, unless you apply the workaround.</source>
          <target state="new">This issue blocks some of the steps of this tutorial, unless you apply the workaround.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For details about this issue and the workaround, see <bpt id="p1">[</bpt>this MSDN forum post<ept id="p1">](http://go.microsoft.com/fwlink/p/?LinkId=624036)</ept> .</source>
          <target state="new">For details about this issue and the workaround, see <bpt id="p1">[</bpt>this MSDN forum post<ept id="p1">](http://go.microsoft.com/fwlink/p/?LinkId=624036)</ept> .</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Comparing C++ desktop apps to Windows apps</source>
          <target state="new">Comparing C++ desktop apps to Windows apps</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>If you're coming from a background in Windows desktop programming in C++, you'll probably find that some aspects of Windows Store app and Windows Phone app programming are familiar, but other aspects require some learning.</source>
          <target state="new">If you're coming from a background in Windows desktop programming in C++, you'll probably find that some aspects of Windows Store app and Windows Phone app programming are familiar, but other aspects require some learning.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>What's the same?</source>
          <target state="new">What's the same?</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>You can use the STL, the CRT (with some exceptions), and any other C++ library as long as the code does not attempt to call Windows functions that are not accessible from the Windows Runtime environment.</source>
          <target state="new">You can use the STL, the CRT (with some exceptions), and any other C++ library as long as the code does not attempt to call Windows functions that are not accessible from the Windows Runtime environment.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>If you're accustomed to visual designers, you can still use the designer built into Microsoft Visual Studio, or you can use the more full-featured Blend for Visual Studio.</source>
          <target state="new">If you're accustomed to visual designers, you can still use the designer built into Microsoft Visual Studio, or you can use the more full-featured Blend for Visual Studio.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If you're accustomed to coding UI by hand, you can hand-code your XAML.</source>
          <target state="new">If you're accustomed to coding UI by hand, you can hand-code your XAML.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>You're still creating apps that use Windows operating system types and your own custom types.</source>
          <target state="new">You're still creating apps that use Windows operating system types and your own custom types.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>You're still using the Visual Studio debugger, profiler, and other development tools.</source>
          <target state="new">You're still using the Visual Studio debugger, profiler, and other development tools.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>You're still creating apps that are compiled to native machine code by the Visual C++ compiler.</source>
          <target state="new">You're still creating apps that are compiled to native machine code by the Visual C++ compiler.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Windows Store apps in C++ don't execute in a managed runtime environment.</source>
          <target state="new">Windows Store apps in C++ don't execute in a managed runtime environment.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>What's new?</source>
          <target state="new">What's new?</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The design principles for Windows Store apps and Universal Windows apps are very different from those for desktop apps.</source>
          <target state="new">The design principles for Windows Store apps and Universal Windows apps are very different from those for desktop apps.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Window borders, labels, dialog boxes, and so on, are de-emphasized.</source>
          <target state="new">Window borders, labels, dialog boxes, and so on, are de-emphasized.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Content is foremost.</source>
          <target state="new">Content is foremost.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Great Universal Windows apps incorporate these principles from the very beginning of the planning stage.</source>
          <target state="new">Great Universal Windows apps incorporate these principles from the very beginning of the planning stage.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>You're using XAML to define the entire UI.</source>
          <target state="new">You're using XAML to define the entire UI.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The separation between UI and core program logic is much clearer in a Windows Universal app than in an MFC or Win32 app.</source>
          <target state="new">The separation between UI and core program logic is much clearer in a Windows Universal app than in an MFC or Win32 app.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Other people can work on the appearance of the UI in the XAML file while you're working on the behavior in the code file.</source>
          <target state="new">Other people can work on the appearance of the UI in the XAML file while you're working on the behavior in the code file.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>You're primarily programming against a new, easy-to-navigate, object-oriented API, the Windows Runtime, although on Windows devices Win32 is still available for some functionality.</source>
          <target state="new">You're primarily programming against a new, easy-to-navigate, object-oriented API, the Windows Runtime, although on Windows devices Win32 is still available for some functionality.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>You use C++/CX to consume and create Windows Runtime objects.</source>
          <target state="new">You use C++/CX to consume and create Windows Runtime objects.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>C++/CX enables C++ exception handling, delegates, events, and automatic reference counting of dynamically created objects.</source>
          <target state="new">C++/CX enables C++ exception handling, delegates, events, and automatic reference counting of dynamically created objects.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>When you use C++/CX, the details of the underlying COM and Windows architecture are hidden from your app code.</source>
          <target state="new">When you use C++/CX, the details of the underlying COM and Windows architecture are hidden from your app code.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>C++/CX Language Reference<ept id="p1">](https://msdn.microsoft.com/en-us/library/windows/apps/hh699871.aspx)</ept>.</source>
          <target state="new">For more information, see <bpt id="p1">[</bpt>C++/CX Language Reference<ept id="p1">](https://msdn.microsoft.com/en-us/library/windows/apps/hh699871.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Your app is compiled into a package that also contains metadata about the types that your app contains, the resources that it uses, and the capabilities that it requires (file access, internet access, camera access, and so forth).</source>
          <target state="new">Your app is compiled into a package that also contains metadata about the types that your app contains, the resources that it uses, and the capabilities that it requires (file access, internet access, camera access, and so forth).</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>In the Windows Store and Windows Phone Store your app is verified as safe by a certification process and made discoverable to millions of potential customers.</source>
          <target state="new">In the Windows Store and Windows Phone Store your app is verified as safe by a certification process and made discoverable to millions of potential customers.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Hello World Store app in C++</source>
          <target state="new">Hello World Store app in C++</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Our first app is a "Hello World" that demonstrates some basic features of interactivity, layout, and styles.</source>
          <target state="new">Our first app is a "Hello World" that demonstrates some basic features of interactivity, layout, and styles.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>We'll create an app from the Windows Universal app project template.</source>
          <target state="new">We'll create an app from the Windows Universal app project template.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>If you've developed apps for Windows 8.1 and Windows Phone 8.1 before, you might remember that you had to have three projects in Visual Studio, one for the Windows app, one for the phone app, and another with shared code.</source>
          <target state="new">If you've developed apps for Windows 8.1 and Windows Phone 8.1 before, you might remember that you had to have three projects in Visual Studio, one for the Windows app, one for the phone app, and another with shared code.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The Windows 10 Universal Windows Platform (UWP) makes it possible to have just one project, which runs on all devices, including desktop and laptop computers running Windows 10, devices such as tablets, mobile phones, and so on.</source>
          <target state="new">The Windows 10 Universal Windows Platform (UWP) makes it possible to have just one project, which runs on all devices, including desktop and laptop computers running Windows 10, devices such as tablets, mobile phones, and so on.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>We'll start with the basics:</source>
          <target state="new">We'll start with the basics:</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>How to create a Universal Windows project in Visual Studio 2015 or later.</source>
          <target state="new">How to create a Universal Windows project in Visual Studio 2015 or later.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>How to understand the projects and files that are created.</source>
          <target state="new">How to understand the projects and files that are created.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>How to understand the extensions in Visual C++ component extensions (C++/CX), and when to use them.</source>
          <target state="new">How to understand the extensions in Visual C++ component extensions (C++/CX), and when to use them.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>First, create a solution in Visual Studio</source>
          <target state="new">First, create a solution in Visual Studio</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>In Visual Studio, on the menu bar, choose <bpt id="p1">**</bpt>File<ept id="p1">**</ept><ph id="ph1"> &gt; </ph><bpt id="p2">**</bpt>New<ept id="p2">**</ept><ph id="ph2"> &gt; </ph><bpt id="p3">**</bpt>Project<ept id="p3">**</ept>.</source>
          <target state="new">In Visual Studio, on the menu bar, choose <bpt id="p1">**</bpt>File<ept id="p1">**</ept><ph id="ph1"> &gt; </ph><bpt id="p2">**</bpt>New<ept id="p2">**</ept><ph id="ph2"> &gt; </ph><bpt id="p3">**</bpt>Project<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>New Project<ept id="p1">**</ept> dialog box, in the left pane, expand <bpt id="p2">**</bpt>Installed<ept id="p2">**</ept><ph id="ph1"> &gt; </ph><bpt id="p3">**</bpt>Visual C++<ept id="p3">**</ept><ph id="ph2"> &gt; </ph><bpt id="p4">**</bpt>Windows<ept id="p4">**</ept><ph id="ph3"> &gt; </ph><bpt id="p5">**</bpt>Universal<ept id="p5">**</ept>.</source>
          <target state="new">In the <bpt id="p1">**</bpt>New Project<ept id="p1">**</ept> dialog box, in the left pane, expand <bpt id="p2">**</bpt>Installed<ept id="p2">**</ept><ph id="ph1"> &gt; </ph><bpt id="p3">**</bpt>Visual C++<ept id="p3">**</ept><ph id="ph2"> &gt; </ph><bpt id="p4">**</bpt>Windows<ept id="p4">**</ept><ph id="ph3"> &gt; </ph><bpt id="p5">**</bpt>Universal<ept id="p5">**</ept>.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>In the center pane, select <bpt id="p1">**</bpt>Blank App (Universal Windows)<ept id="p1">**</ept>.</source>
          <target state="new">In the center pane, select <bpt id="p1">**</bpt>Blank App (Universal Windows)<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Enter a name for the project.</source>
          <target state="new">Enter a name for the project.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>We'll name it HelloWorld.</source>
          <target state="new">We'll name it HelloWorld.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>C++ project templates in the New Project dialog box</source>
          <target state="new">C++ project templates in the New Project dialog box</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Choose the <bpt id="p1">**</bpt>OK<ept id="p1">**</ept> button.</source>
          <target state="new">Choose the <bpt id="p1">**</bpt>OK<ept id="p1">**</ept> button.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>If this is the first UWP project you've created, and you haven't enabled Developer Mode on your computer, the Enable Developer mode dialog box appears.</source>
          <target state="new">If this is the first UWP project you've created, and you haven't enabled Developer Mode on your computer, the Enable Developer mode dialog box appears.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Click on the link to bring up the Settings page that lets you set Developer Mode.</source>
          <target state="new">Click on the link to bring up the Settings page that lets you set Developer Mode.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Developer Mode allows your apps to be deployed and run locally.</source>
          <target state="new">Developer Mode allows your apps to be deployed and run locally.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Your project files are created.</source>
          <target state="new">Your project files are created.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Before we go on, let’s look at what's in the solution.</source>
          <target state="new">Before we go on, let’s look at what's in the solution.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Univeral app solution with nodes collapsed</source>
          <target state="new">Univeral app solution with nodes collapsed</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>About the project files</source>
          <target state="new">About the project files</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Every .xaml file in a project folder has a corresponding .xaml.h file and .xaml.cpp file in the same folder and a .g file and a .g.hpp file in the Generated Files folder, which is on disk but not part of the project.</source>
          <target state="new">Every .xaml file in a project folder has a corresponding .xaml.h file and .xaml.cpp file in the same folder and a .g file and a .g.hpp file in the Generated Files folder, which is on disk but not part of the project.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>You modify the XAML files to create UI elements and connect them to data sources (DataBinding).</source>
          <target state="new">You modify the XAML files to create UI elements and connect them to data sources (DataBinding).</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>You modify the .h and .cpp files to add custom logic for event handlers.</source>
          <target state="new">You modify the .h and .cpp files to add custom logic for event handlers.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The auto-generated files represent the transformation of the XAML markup into C++.</source>
          <target state="new">The auto-generated files represent the transformation of the XAML markup into C++.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Don't modify these files, but you can study them to better understand how the code-behind works.</source>
          <target state="new">Don't modify these files, but you can study them to better understand how the code-behind works.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Basically, the generated file contains a partial class definition for a XAML root element; this class is the same class that you modify in the <ph id="ph1">\*</ph>.xaml.h and .cpp files.</source>
          <target state="new">Basically, the generated file contains a partial class definition for a XAML root element; this class is the same class that you modify in the <ph id="ph1">\*</ph>.xaml.h and .cpp files.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The generated files declare the XAML UI child elements as class members so that you can reference them in the code you write.</source>
          <target state="new">The generated files declare the XAML UI child elements as class members so that you can reference them in the code you write.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>At build time, the generated code and your code are merged into a complete class definition and then compiled.</source>
          <target state="new">At build time, the generated code and your code are merged into a complete class definition and then compiled.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Let's look first at the project files.</source>
          <target state="new">Let's look first at the project files.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>App.xaml, App.xaml.h, App.xaml.cpp:<ept id="p1">**</ept> Represent the Application object, which is an app's entry point.</source>
          <target state="new"><bpt id="p1">**</bpt>App.xaml, App.xaml.h, App.xaml.cpp:<ept id="p1">**</ept> Represent the Application object, which is an app's entry point.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>App.xaml contains no page-specific UI markup, but you can add UI styles and other elements that you want to be accessible from any page.</source>
          <target state="new">App.xaml contains no page-specific UI markup, but you can add UI styles and other elements that you want to be accessible from any page.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The code-behind files contain handlers for the <bpt id="p1">**</bpt>OnLaunched<ept id="p1">**</ept> and <bpt id="p2">**</bpt>OnSuspending<ept id="p2">**</ept> events.</source>
          <target state="new">The code-behind files contain handlers for the <bpt id="p1">**</bpt>OnLaunched<ept id="p1">**</ept> and <bpt id="p2">**</bpt>OnSuspending<ept id="p2">**</ept> events.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Typically, you add custom code here to initialize your app when it starts and perform cleanup when it's suspended or terminated.</source>
          <target state="new">Typically, you add custom code here to initialize your app when it starts and perform cleanup when it's suspended or terminated.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>MainPage.xaml, MainPage.xaml.h, MainPage.xaml.cpp:<ept id="p1">**</ept>Contain the XAML markup and code-behind for the default "start" page in an app.</source>
          <target state="new"><bpt id="p1">**</bpt>MainPage.xaml, MainPage.xaml.h, MainPage.xaml.cpp:<ept id="p1">**</ept>Contain the XAML markup and code-behind for the default "start" page in an app.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>It has no navigation support or built-in controls.</source>
          <target state="new">It has no navigation support or built-in controls.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>pch.h, pch.cpp:<ept id="p1">**</ept> A precompiled header file and the file that includes it in your project.</source>
          <target state="new"><bpt id="p1">**</bpt>pch.h, pch.cpp:<ept id="p1">**</ept> A precompiled header file and the file that includes it in your project.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>In pch.h, you can include any headers that do not change often and are included in other files in the solution.</source>
          <target state="new">In pch.h, you can include any headers that do not change often and are included in other files in the solution.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Package.appxmanifest:<ept id="p1">**</ept> An XML file that describes the device capabilities that your app requires, and the app version info and other metadata.</source>
          <target state="new"><bpt id="p1">**</bpt>Package.appxmanifest:<ept id="p1">**</ept> An XML file that describes the device capabilities that your app requires, and the app version info and other metadata.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>To open this file in the <bpt id="p1">**</bpt>Manifest Designer<ept id="p1">**</ept>, just double-click it.</source>
          <target state="new">To open this file in the <bpt id="p1">**</bpt>Manifest Designer<ept id="p1">**</ept>, just double-click it.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>HelloWorld<ph id="ph1">\_</ph>TemporaryKey.pfx:<ept id="p1">**</ept>A key that enables deployment of the app on this machine, from Visual Studio.</source>
          <target state="new"><bpt id="p1">**</bpt>HelloWorld<ph id="ph1">\_</ph>TemporaryKey.pfx:<ept id="p1">**</ept>A key that enables deployment of the app on this machine, from Visual Studio.</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>A first look at the code</source>
          <target state="new">A first look at the code</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>If you examine the code in App.xaml.h, App.xaml.cpp in the shared project, you'll notice that it's mostly C++ code that looks familiar.</source>
          <target state="new">If you examine the code in App.xaml.h, App.xaml.cpp in the shared project, you'll notice that it's mostly C++ code that looks familiar.</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>However, some syntax elements might not be as familiar if you are new to Windows Runtime apps, or you've worked with C++/CLI.</source>
          <target state="new">However, some syntax elements might not be as familiar if you are new to Windows Runtime apps, or you've worked with C++/CLI.</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Here are the most common non-standard syntax elements you'll see in C++/CX:</source>
          <target state="new">Here are the most common non-standard syntax elements you'll see in C++/CX:</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Ref classes</source>
          <target state="new">Ref classes</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Almost all Windows Runtime classes, which includes all the types in the Windows API--XAML controls, the pages in your app, the App class itself, all device and network objects, all container types--are declared as a <bpt id="p1">**</bpt>ref class<ept id="p1">**</ept>.</source>
          <target state="new">Almost all Windows Runtime classes, which includes all the types in the Windows API--XAML controls, the pages in your app, the App class itself, all device and network objects, all container types--are declared as a <bpt id="p1">**</bpt>ref class<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>(A few Windows types are <bpt id="p1">**</bpt>value class<ept id="p1">**</ept> or <bpt id="p2">**</bpt>value struct<ept id="p2">**</ept>).</source>
          <target state="new">(A few Windows types are <bpt id="p1">**</bpt>value class<ept id="p1">**</ept> or <bpt id="p2">**</bpt>value struct<ept id="p2">**</ept>).</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>A ref class is consumable from any language.</source>
          <target state="new">A ref class is consumable from any language.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>In C++, the lifetime of these types is governed by automatic reference counting (not garbage collection) so that you never explicitly delete these objects.</source>
          <target state="new">In C++, the lifetime of these types is governed by automatic reference counting (not garbage collection) so that you never explicitly delete these objects.</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>You can create your own ref classes as well.</source>
          <target state="new">You can create your own ref classes as well.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>All Windows Runtime types must be declared within a namespace and unlike in ISO C++ the types themselves have an accessibility modifier.</source>
          <target state="new">All Windows Runtime types must be declared within a namespace and unlike in ISO C++ the types themselves have an accessibility modifier.</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>public<ept id="p1">**</ept> modifier makes the class visible to Windows Runtime components outside the namespace.</source>
          <target state="new">The <bpt id="p1">**</bpt>public<ept id="p1">**</ept> modifier makes the class visible to Windows Runtime components outside the namespace.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>sealed<ept id="p1">**</ept> keyword means the class cannot serve as a base class.</source>
          <target state="new">The <bpt id="p1">**</bpt>sealed<ept id="p1">**</ept> keyword means the class cannot serve as a base class.</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Almost all ref classes are sealed; class inheritance is not broadly used because Javascript does not understand it.</source>
          <target state="new">Almost all ref classes are sealed; class inheritance is not broadly used because Javascript does not understand it.</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>ref new<ept id="p1">**</ept> and <bpt id="p2">**</bpt>^ (hats)<ept id="p2">**</ept></source>
          <target state="new"><bpt id="p1">**</bpt>ref new<ept id="p1">**</ept> and <bpt id="p2">**</bpt>^ (hats)<ept id="p2">**</ept></target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>You declare a variable of a ref class by using the ^ (hat) operator, and you instantiate the object with the ref new keyword.</source>
          <target state="new">You declare a variable of a ref class by using the ^ (hat) operator, and you instantiate the object with the ref new keyword.</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Thereafter you access the object's instance methods with the -&gt; operator just like a C++ pointer.</source>
          <target state="new">Thereafter you access the object's instance methods with the -&gt; operator just like a C++ pointer.</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Static methods are accessed with the :: operator just as in ISO C++.</source>
          <target state="new">Static methods are accessed with the :: operator just as in ISO C++.</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>In the following code, we use the fully qualified name to instantiate an object, and use the -&gt; operator to call an instance method.</source>
          <target state="new">In the following code, we use the fully qualified name to instantiate an object, and use the -&gt; operator to call an instance method.</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Typically, in a .cpp file we would add a <ph id="ph1">`using namespace  Windows::UI::Xaml::Media::Imaging`</ph> directive and the auto keyword, so that the same code would look like this:</source>
          <target state="new">Typically, in a .cpp file we would add a <ph id="ph1">`using namespace  Windows::UI::Xaml::Media::Imaging`</ph> directive and the auto keyword, so that the same code would look like this:</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Properties</source>
          <target state="new">Properties</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>A ref class can have properties, which, just as in managed languages, are special member functions that appear as fields to consuming code.</source>
          <target state="new">A ref class can have properties, which, just as in managed languages, are special member functions that appear as fields to consuming code.</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Delegates</source>
          <target state="new">Delegates</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Just as in managed languages, a delegate is a reference type that encapsulates a function with a specific signature.</source>
          <target state="new">Just as in managed languages, a delegate is a reference type that encapsulates a function with a specific signature.</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>They are most often used with events and event handlers</source>
          <target state="new">They are most often used with events and event handlers</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Adding content to the app</source>
          <target state="new">Adding content to the app</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Let's add some content to the app.</source>
          <target state="new">Let's add some content to the app.</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Step 1: Modify your start page</source>
          <target state="new">Step 1: Modify your start page</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, open MainPage.xaml.</source>
          <target state="new">In <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, open MainPage.xaml.</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Create controls for the UI by adding the following XAML to the root <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Grid<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR242704)</ept>, immediately before its closing tag.</source>
          <target state="new">Create controls for the UI by adding the following XAML to the root <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Grid<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR242704)</ept>, immediately before its closing tag.</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>It contains a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StackPanel<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209635)</ept> that has a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>TextBlock<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR209652)</ept> that asks the user's name, a <bpt id="p5">[</bpt><bpt id="p6">**</bpt>TextBox<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/BR209683)</ept> element that accepts the user's name, a <bpt id="p7">[</bpt><bpt id="p8">**</bpt>Button<ept id="p8">**</ept><ept id="p7">](https://msdn.microsoft.com/library/windows/apps/BR209265)</ept>, and another <bpt id="p9">**</bpt>TextBlock<ept id="p9">**</ept> element.</source>
          <target state="new">It contains a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StackPanel<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209635)</ept> that has a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>TextBlock<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR209652)</ept> that asks the user's name, a <bpt id="p5">[</bpt><bpt id="p6">**</bpt>TextBox<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/BR209683)</ept> element that accepts the user's name, a <bpt id="p7">[</bpt><bpt id="p8">**</bpt>Button<ept id="p8">**</ept><ept id="p7">](https://msdn.microsoft.com/library/windows/apps/BR209265)</ept>, and another <bpt id="p9">**</bpt>TextBlock<ept id="p9">**</ept> element.</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>We talk more about XAML layout in the <bpt id="p1">[</bpt>Navigation, layout, and views<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Dn263172)</ept> article.</source>
          <target state="new">We talk more about XAML layout in the <bpt id="p1">[</bpt>Navigation, layout, and views<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Dn263172)</ept> article.</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>At this point, you have created a very basic Universal Windows app.</source>
          <target state="new">At this point, you have created a very basic Universal Windows app.</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>To see what the UWP app looks like, press F5 to build, deploy, and run the app in debugging mode.</source>
          <target state="new">To see what the UWP app looks like, press F5 to build, deploy, and run the app in debugging mode.</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The default splash screen appears first.</source>
          <target state="new">The default splash screen appears first.</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>It has an image—Assets<ph id="ph1">\\</ph>SplashScreen.scale-100.png—and a background color that are specified in the app's manifest file.</source>
          <target state="new">It has an image—Assets<ph id="ph1">\\</ph>SplashScreen.scale-100.png—and a background color that are specified in the app's manifest file.</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>To learn how to customize the splash screen, see <bpt id="p1">[</bpt>Adding a splash screen<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Hh465332)</ept>.</source>
          <target state="new">To learn how to customize the splash screen, see <bpt id="p1">[</bpt>Adding a splash screen<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Hh465332)</ept>.</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>When the splash screen disappears, your app appears.</source>
          <target state="new">When the splash screen disappears, your app appears.</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>It displays the main page of the App.</source>
          <target state="new">It displays the main page of the App.</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Press the Windows key or click the Start button to go to the Start menu, and notice that deploying the app adds it to the Start menu's list of installed apps.</source>
          <target state="new">Press the Windows key or click the Start button to go to the Start menu, and notice that deploying the app adds it to the Start menu's list of installed apps.</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>It also appears when you click on the the New link next to the All Apps button.</source>
          <target state="new">It also appears when you click on the the New link next to the All Apps button.</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>To run the app again, just tap or click its tile, press F5 or Ctrl+F5 in Visual Studio as usual.</source>
          <target state="new">To run the app again, just tap or click its tile, press F5 or Ctrl+F5 in Visual Studio as usual.</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Windows Store app screen, with controls</source>
          <target state="new">Windows Store app screen, with controls</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>It doesn't do much—yet—but congratulations, you've built your first Universal Windows Platform app!</source>
          <target state="new">It doesn't do much—yet—but congratulations, you've built your first Universal Windows Platform app!</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>To stop debugging and close the app, return to Visual Studio and press Shift+F5.</source>
          <target state="new">To stop debugging and close the app, return to Visual Studio and press Shift+F5.</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Run a Store app from Visual Studio<ept id="p1">](http://go.microsoft.com/fwlink/p/?LinkId=619619)</ept>.</source>
          <target state="new">For more information, see <bpt id="p1">[</bpt>Run a Store app from Visual Studio<ept id="p1">](http://go.microsoft.com/fwlink/p/?LinkId=619619)</ept>.</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>In the app, you can type in the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TextBox<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209683)</ept>, but clicking the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Button<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR209265)</ept> doesn't do anything.</source>
          <target state="new">In the app, you can type in the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TextBox<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209683)</ept>, but clicking the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Button<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR209265)</ept> doesn't do anything.</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>In later steps, you create an event handler for the button's <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Click<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR227737)</ept> event, which displays a personalized greeting.</source>
          <target state="new">In later steps, you create an event handler for the button's <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Click<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR227737)</ept> event, which displays a personalized greeting.</target>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Start the app on a mobile device emulator</source>
          <target state="new">Start the app on a mobile device emulator</target>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Your app runs on any Windows 10 device, so let’s see how it looks on a Windows Phone.</source>
          <target state="new">Your app runs on any Windows 10 device, so let’s see how it looks on a Windows Phone.</target>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>This section requires a Windows Phone running Windows 10, or access to a Windows Phone emulator and it requires that Visual Studio be running on a physical computer (not a virtual machine) with HyperV supported and enabled.</source>
          <target state="new">This section requires a Windows Phone running Windows 10, or access to a Windows Phone emulator and it requires that Visual Studio be running on a physical computer (not a virtual machine) with HyperV supported and enabled.</target>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>In addition to the options to debug on a desktop device, Visual Studio provides options for deploying and debugging your app on a physical mobile device connected to the computer, or on a mobile device emulator.</source>
          <target state="new">In addition to the options to debug on a desktop device, Visual Studio provides options for deploying and debugging your app on a physical mobile device connected to the computer, or on a mobile device emulator.</target>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>You can choose among emulators for devices with different memory and display configurations.</source>
          <target state="new">You can choose among emulators for devices with different memory and display configurations.</target>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Device</source>
          <target state="new">Device</target>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Emulator 10.0.0.0 WVGA 4 inch 512MB</source>
          <target state="new">Emulator 10.0.0.0 WVGA 4 inch 512MB</target>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Various emulators in other configurations</source>
          <target state="new">Various emulators in other configurations</target>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>It's a good idea to test your app on a device with a small screen and limited memory, so use the <bpt id="p1">**</bpt>Emulator 10.0.0.0 WVGA 4 inch 512MB<ept id="p1">**</ept> option.</source>
          <target state="new">It's a good idea to test your app on a device with a small screen and limited memory, so use the <bpt id="p1">**</bpt>Emulator 10.0.0.0 WVGA 4 inch 512MB<ept id="p1">**</ept> option.</target>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Tip<ept id="p1">**</ept>  For more info about using the phone emulator, see <bpt id="p2">[</bpt>Run Windows Phone apps in the emulator<ept id="p2">](http://go.microsoft.com/fwlink/p/?LinkId=394233)</ept>.</source>
          <target state="new"><bpt id="p1">**</bpt>Tip<ept id="p1">**</ept>  For more info about using the phone emulator, see <bpt id="p2">[</bpt>Run Windows Phone apps in the emulator<ept id="p2">](http://go.microsoft.com/fwlink/p/?LinkId=394233)</ept>.</target>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>To debug your app on a physical device, you must have a device that’s registered for development.</source>
          <target state="new">To debug your app on a physical device, you must have a device that’s registered for development.</target>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>For more info, see <bpt id="p1">[</bpt>Register your Windows Phone<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Dn614128)</ept>.</source>
          <target state="new">For more info, see <bpt id="p1">[</bpt>Register your Windows Phone<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Dn614128)</ept>.</target>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>To start debugging on a mobile device emulator</source>
          <target state="new">To start debugging on a mobile device emulator</target>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>In the target device menu (<ph id="ph1">![</ph>Start debugging menu<ph id="ph2">](images/startdebug-full.png)</ph>) on the <bpt id="p1">**</bpt>Standard<ept id="p1">**</ept> toolbar, pick <bpt id="p2">**</bpt>Emulator 10.0.0.0 WVGA 4 inch 512MB<ept id="p2">**</ept>.</source>
          <target state="new">In the target device menu (<ph id="ph1">![</ph>Start debugging menu<ph id="ph2">](images/startdebug-full.png)</ph>) on the <bpt id="p1">**</bpt>Standard<ept id="p1">**</ept> toolbar, pick <bpt id="p2">**</bpt>Emulator 10.0.0.0 WVGA 4 inch 512MB<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>Start Debugging<ept id="p1">**</ept> button (<ph id="ph1">![</ph>Start debugging button<ph id="ph2">](images/startdebug-sm.png)</ph>) in the toolbar.</source>
          <target state="new">Click the <bpt id="p1">**</bpt>Start Debugging<ept id="p1">**</ept> button (<ph id="ph1">![</ph>Start debugging button<ph id="ph2">](images/startdebug-sm.png)</ph>) in the toolbar.</target>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>–or–</source>
          <target state="new">–or–</target>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>From the <bpt id="p1">**</bpt>Debug<ept id="p1">**</ept> menu, click <bpt id="p2">**</bpt>Start Debugging<ept id="p2">**</ept>.</source>
          <target state="new">From the <bpt id="p1">**</bpt>Debug<ept id="p1">**</ept> menu, click <bpt id="p2">**</bpt>Start Debugging<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>–or–</source>
          <target state="new">–or–</target>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Press F5.</source>
          <target state="new">Press F5.</target>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>On the mobile device emulator, the app looks like this.</source>
          <target state="new">On the mobile device emulator, the app looks like this.</target>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Initial app screen on mobile device</source>
          <target state="new">Initial app screen on mobile device</target>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Visual Studio starts the selected emulator and then deploys and starts your app.</source>
          <target state="new">Visual Studio starts the selected emulator and then deploys and starts your app.</target>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>The first thing you'll notice is that the 120-pixel left margin that looks good on the local machine pushes your content off the smaller screen of a mobile device.</source>
          <target state="new">The first thing you'll notice is that the 120-pixel left margin that looks good on the local machine pushes your content off the smaller screen of a mobile device.</target>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Later in this tutorial, you'll learn how to adapt the UI to different screen sizes so your app always looks good.</source>
          <target state="new">Later in this tutorial, you'll learn how to adapt the UI to different screen sizes so your app always looks good.</target>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Step 2: Create an event handler</source>
          <target state="new">Step 2: Create an event handler</target>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>In MainPage.xaml, in either XAML or design view, select the "Say Hello" <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Button<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209265)</ept> in the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>StackPanel<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR209635)</ept> you added earlier.</source>
          <target state="new">In MainPage.xaml, in either XAML or design view, select the "Say Hello" <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Button<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209265)</ept> in the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>StackPanel<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR209635)</ept> you added earlier.</target>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Open the <bpt id="p1">**</bpt>Properties Window<ept id="p1">**</ept> by pressing Alt+Enter, and then choose the Events button (<ph id="ph1">![</ph>Events button<ph id="ph2">](IMAGES/EVENTSBUTTON.png)</ph>).</source>
          <target state="new">Open the <bpt id="p1">**</bpt>Properties Window<ept id="p1">**</ept> by pressing Alt+Enter, and then choose the Events button (<ph id="ph1">![</ph>Events button<ph id="ph2">](IMAGES/EVENTSBUTTON.png)</ph>).</target>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Find the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Click<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR227737)</ept> event.</source>
          <target state="new">Find the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Click<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR227737)</ept> event.</target>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>In its text box, type the name of the function that handles the <bpt id="p1">**</bpt>Click<ept id="p1">**</ept> event.</source>
          <target state="new">In its text box, type the name of the function that handles the <bpt id="p1">**</bpt>Click<ept id="p1">**</ept> event.</target>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>For this example, type "Button<ph id="ph1">\_</ph>Click".</source>
          <target state="new">For this example, type "Button<ph id="ph1">\_</ph>Click".</target>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Properties window, Events view</source>
          <target state="new">Properties window, Events view</target>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Press Enter.</source>
          <target state="new">Press Enter.</target>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>The event handler method is created in MainPage.xaml.cpp and opened so that you can add the code that's executed when the event occurs.</source>
          <target state="new">The event handler method is created in MainPage.xaml.cpp and opened so that you can add the code that's executed when the event occurs.</target>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>At the same time, in MainPage.xaml, the XAML for the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Button<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209265)</ept> is updated to declare the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Click<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR227737)</ept> event handler, like this:</source>
          <target state="new">At the same time, in MainPage.xaml, the XAML for the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Button<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209265)</ept> is updated to declare the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Click<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR227737)</ept> event handler, like this:</target>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>You could also have simply added this to the xaml code manually, which can be helpful if the designer doesn't load.</source>
          <target state="new">You could also have simply added this to the xaml code manually, which can be helpful if the designer doesn't load.</target>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>If you enter this manually, type "Click" and then let IntelliSense pop up the option to add a new event handler.</source>
          <target state="new">If you enter this manually, type "Click" and then let IntelliSense pop up the option to add a new event handler.</target>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>That way, Visual Studio creates the necessary method declaration and stub.</source>
          <target state="new">That way, Visual Studio creates the necessary method declaration and stub.</target>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>The designer fails to load if an unhandled exception occurs during rendering.</source>
          <target state="new">The designer fails to load if an unhandled exception occurs during rendering.</target>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Rendering in the designer involves running a design-time version of the page.</source>
          <target state="new">Rendering in the designer involves running a design-time version of the page.</target>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>It can be helpful to disable running user code.</source>
          <target state="new">It can be helpful to disable running user code.</target>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>You can do this by changing the setting in the <bpt id="p1">**</bpt>Tools, Options<ept id="p1">**</ept> dialog box.</source>
          <target state="new">You can do this by changing the setting in the <bpt id="p1">**</bpt>Tools, Options<ept id="p1">**</ept> dialog box.</target>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Under <bpt id="p1">**</bpt>XAML Designer<ept id="p1">**</ept>, uncheck <bpt id="p2">**</bpt>Run project code in XAML designer (if supported)<ept id="p2">**</ept>.</source>
          <target state="new">Under <bpt id="p1">**</bpt>XAML Designer<ept id="p1">**</ept>, uncheck <bpt id="p2">**</bpt>Run project code in XAML designer (if supported)<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>In MainPage.xaml.cpp, add the following code to the <bpt id="p1">**</bpt>Button<ph id="ph1">\_</ph>Click<ept id="p1">**</ept> event handler that you just created.</source>
          <target state="new">In MainPage.xaml.cpp, add the following code to the <bpt id="p1">**</bpt>Button<ph id="ph1">\_</ph>Click<ept id="p1">**</ept> event handler that you just created.</target>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>This code retrieves the user's name from the <ph id="ph1">`nameInput`</ph> <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TextBox<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209683)</ept> control and uses it to create a greeting.</source>
          <target state="new">This code retrieves the user's name from the <ph id="ph1">`nameInput`</ph> <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TextBox<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209683)</ept> control and uses it to create a greeting.</target>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`greetingOutput`</ph> <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TextBlock<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209652)</ept> displays the result.</source>
          <target state="new">The <ph id="ph1">`greetingOutput`</ph> <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TextBlock<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209652)</ept> displays the result.</target>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Set the project as the startup, and then press F5 to build and run the app.</source>
          <target state="new">Set the project as the startup, and then press F5 to build and run the app.</target>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>When you type a name in the text box and click the button, the app displays a personalized greeting.</source>
          <target state="new">When you type a name in the text box and click the button, the app displays a personalized greeting.</target>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>App screen with message display</source>
          <target state="new">App screen with message display</target>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Step 3: Style the start page</source>
          <target state="new">Step 3: Style the start page</target>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Choosing a theme</source>
          <target state="new">Choosing a theme</target>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>It's easy to customize the look and feel of your app.</source>
          <target state="new">It's easy to customize the look and feel of your app.</target>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>By default, your app uses resources that have a light style.</source>
          <target state="new">By default, your app uses resources that have a light style.</target>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>The system resources also include a light theme.</source>
          <target state="new">The system resources also include a light theme.</target>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Let's try it out and see what it looks like.</source>
          <target state="new">Let's try it out and see what it looks like.</target>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>To switch to the dark theme</source>
          <target state="new">To switch to the dark theme</target>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Open App.xaml.</source>
          <target state="new">Open App.xaml.</target>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>In the opening <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Application<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR242324)</ept> tag, edit the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>RequestedTheme<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.application.requestedtheme)</ept> property and set its value to <bpt id="p5">**</bpt>Dark<ept id="p5">**</ept>:</source>
          <target state="new">In the opening <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Application<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR242324)</ept> tag, edit the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>RequestedTheme<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.application.requestedtheme)</ept> property and set its value to <bpt id="p5">**</bpt>Dark<ept id="p5">**</ept>:</target>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Here's the full <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Application<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR242324)</ept> tag with the dark theme :</source>
          <target state="new">Here's the full <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Application<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR242324)</ept> tag with the dark theme :</target>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Press F5 to build and run it.</source>
          <target state="new">Press F5 to build and run it.</target>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>Notice that it uses the dark theme.</source>
          <target state="new">Notice that it uses the dark theme.</target>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>App screen with dark theme</source>
          <target state="new">App screen with dark theme</target>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>Which theme should you use?</source>
          <target state="new">Which theme should you use?</target>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Whichever one you want.</source>
          <target state="new">Whichever one you want.</target>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Here's our take: for apps that mostly display images or video, we recommend the dark theme; for apps that contain a lot of text, we recommend the light theme.</source>
          <target state="new">Here's our take: for apps that mostly display images or video, we recommend the dark theme; for apps that contain a lot of text, we recommend the light theme.</target>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>If you're using a custom color scheme, use the theme that goes best with your app's look and feel.</source>
          <target state="new">If you're using a custom color scheme, use the theme that goes best with your app's look and feel.</target>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>In the rest of this tutorial, we use the Light theme in screenshots.</source>
          <target state="new">In the rest of this tutorial, we use the Light theme in screenshots.</target>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  The theme is applied when the app is started and can't be changed while the app is running.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  The theme is applied when the app is started and can't be changed while the app is running.</target>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Using system styles</source>
          <target state="new">Using system styles</target>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>Right now, in the Windows app the text is very small and difficult to read.</source>
          <target state="new">Right now, in the Windows app the text is very small and difficult to read.</target>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Let's fix that by applying a system style.</source>
          <target state="new">Let's fix that by applying a system style.</target>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>To change the style of an element</source>
          <target state="new">To change the style of an element</target>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>In the Windows project, open MainPage.xaml.</source>
          <target state="new">In the Windows project, open MainPage.xaml.</target>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>In either XAML or design view, select the "What's your name?"<bpt id="p1">[</bpt><bpt id="p2">**</bpt>TextBlock<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209652)</ept> that you added earlier.</source>
          <target state="new">In either XAML or design view, select the "What's your name?"<bpt id="p1">[</bpt><bpt id="p2">**</bpt>TextBlock<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209652)</ept> that you added earlier.</target>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Properties<ept id="p1">**</ept> window (<bpt id="p2">**</bpt>F4<ept id="p2">**</ept>), choose the Properties button (<ph id="ph1">![</ph>Properties button<ph id="ph2">](IMAGES/PROPERTIESBUTTON.png)</ph>) in the upper right.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Properties<ept id="p1">**</ept> window (<bpt id="p2">**</bpt>F4<ept id="p2">**</ept>), choose the Properties button (<ph id="ph1">![</ph>Properties button<ph id="ph2">](IMAGES/PROPERTIESBUTTON.png)</ph>) in the upper right.</target>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>Expand the <bpt id="p1">**</bpt>Text<ept id="p1">**</ept> group and set the font size to 18 px.</source>
          <target state="new">Expand the <bpt id="p1">**</bpt>Text<ept id="p1">**</ept> group and set the font size to 18 px.</target>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Expand the <bpt id="p1">**</bpt>Miscellaneous<ept id="p1">**</ept> group and find the <bpt id="p2">**</bpt>Style<ept id="p2">**</ept> property.</source>
          <target state="new">Expand the <bpt id="p1">**</bpt>Miscellaneous<ept id="p1">**</ept> group and find the <bpt id="p2">**</bpt>Style<ept id="p2">**</ept> property.</target>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Click the property marker (the green box to the right of the <bpt id="p1">**</bpt>Style<ept id="p1">**</ept> property), and then, on the menu, choose <bpt id="p2">**</bpt>System Resource<ept id="p2">**</ept><ph id="ph1"> &gt; </ph><bpt id="p3">**</bpt>BaseTextBlockStyle<ept id="p3">**</ept>.</source>
          <target state="new">Click the property marker (the green box to the right of the <bpt id="p1">**</bpt>Style<ept id="p1">**</ept> property), and then, on the menu, choose <bpt id="p2">**</bpt>System Resource<ept id="p2">**</ept><ph id="ph1"> &gt; </ph><bpt id="p3">**</bpt>BaseTextBlockStyle<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>BaseTextBlockStyle<ept id="p1">**</ept> is a resource that's defined in the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>ResourceDictionary<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/BR208794)</ept> in <ph id="ph1">&lt;root&gt;\\</ph>Program Files<ph id="ph2">\\</ph>Windows Kits<ph id="ph3">\\</ph>10<ph id="ph4">\\</ph>Include<ph id="ph5">\\</ph>winrt<ph id="ph6">\\</ph>xaml<ph id="ph7">\\</ph>design<ph id="ph8">\\</ph>generic.xaml.</source>
          <target state="new"><bpt id="p1">**</bpt>BaseTextBlockStyle<ept id="p1">**</ept> is a resource that's defined in the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>ResourceDictionary<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/BR208794)</ept> in <ph id="ph1">&lt;root&gt;\\</ph>Program Files<ph id="ph2">\\</ph>Windows Kits<ph id="ph3">\\</ph>10<ph id="ph4">\\</ph>Include<ph id="ph5">\\</ph>winrt<ph id="ph6">\\</ph>xaml<ph id="ph7">\\</ph>design<ph id="ph8">\\</ph>generic.xaml.</target>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>Properties window, Properties view</source>
          <target state="new">Properties window, Properties view</target>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>On the XAML design surface, the appearance of the text changes.</source>
          <target state="new">On the XAML design surface, the appearance of the text changes.</target>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>In the XAML editor, the XAML for the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TextBlock<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209652)</ept> is updated:</source>
          <target state="new">In the XAML editor, the XAML for the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TextBlock<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209652)</ept> is updated:</target>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>Repeat the process to set the font size and assign the <bpt id="p1">**</bpt>BaseTextBlockStyle<ept id="p1">**</ept> to the <ph id="ph1">`greetingOutput`</ph><bpt id="p2">[</bpt><bpt id="p3">**</bpt>TextBlock<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/BR209652)</ept> element.</source>
          <target state="new">Repeat the process to set the font size and assign the <bpt id="p1">**</bpt>BaseTextBlockStyle<ept id="p1">**</ept> to the <ph id="ph1">`greetingOutput`</ph><bpt id="p2">[</bpt><bpt id="p3">**</bpt>TextBlock<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/BR209652)</ept> element.</target>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Tip<ept id="p1">**</ept>  Although there's no text in this <bpt id="p2">[</bpt><bpt id="p3">**</bpt>TextBlock<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/BR209652)</ept>, when you move the pointer over the XAML design surface, a blue outline shows where it is so that you can select it.</source>
          <target state="new"><bpt id="p1">**</bpt>Tip<ept id="p1">**</ept>  Although there's no text in this <bpt id="p2">[</bpt><bpt id="p3">**</bpt>TextBlock<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/BR209652)</ept>, when you move the pointer over the XAML design surface, a blue outline shows where it is so that you can select it.</target>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Your XAML now looks like this:</source>
          <target state="new">Your XAML now looks like this:</target>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>Press F5 to build and run the app.</source>
          <target state="new">Press F5 to build and run the app.</target>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>It now looks like this:</source>
          <target state="new">It now looks like this:</target>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>App screen with larger text</source>
          <target state="new">App screen with larger text</target>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>Step 4: Adapt the UI to different window sizes</source>
          <target state="new">Step 4: Adapt the UI to different window sizes</target>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>Now we'll make the UI adapt to different screen sizes so it looks good on mobile devices.</source>
          <target state="new">Now we'll make the UI adapt to different screen sizes so it looks good on mobile devices.</target>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>To do this, you add a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>VisualStateManager<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209021)</ept> and set properties that are applied for different visual states.</source>
          <target state="new">To do this, you add a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>VisualStateManager<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209021)</ept> and set properties that are applied for different visual states.</target>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>To adjust the UI layout</source>
          <target state="new">To adjust the UI layout</target>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>In the XAML editor, add this block of XAML after the opening tag of the root <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Grid<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR242704)</ept> element.</source>
          <target state="new">In the XAML editor, add this block of XAML after the opening tag of the root <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Grid<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR242704)</ept> element.</target>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>Debug the app on the local machine.</source>
          <target state="new">Debug the app on the local machine.</target>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Notice that the UI looks the same as before unless the window gets narrower than 641 device-independent pixels (DIPs).</source>
          <target state="new">Notice that the UI looks the same as before unless the window gets narrower than 641 device-independent pixels (DIPs).</target>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>Debug the app on the mobile device emulator.</source>
          <target state="new">Debug the app on the mobile device emulator.</target>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>Notice that the UI uses the properties you defined in the <ph id="ph1">`narrowState`</ph> and appears correctly on the small screen.</source>
          <target state="new">Notice that the UI uses the properties you defined in the <ph id="ph1">`narrowState`</ph> and appears correctly on the small screen.</target>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>Mobile app screen with styled text</source>
          <target state="new">Mobile app screen with styled text</target>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>If you've used a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>VisualStateManager<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209021)</ept> in previous versions of XAML, you might notice that the XAML here uses a simplified syntax.</source>
          <target state="new">If you've used a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>VisualStateManager<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209021)</ept> in previous versions of XAML, you might notice that the XAML here uses a simplified syntax.</target>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>VisualState<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209007)</ept> named <ph id="ph1">`wideState`</ph> has an <bpt id="p3">[</bpt><bpt id="p4">**</bpt>AdaptiveTrigger<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/Dn890382)</ept> with its <bpt id="p5">[</bpt><bpt id="p6">**</bpt>MinWindowWidth<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.adaptivetrigger.minwindowwidth)</ept> property set to 641.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>VisualState<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209007)</ept> named <ph id="ph1">`wideState`</ph> has an <bpt id="p3">[</bpt><bpt id="p4">**</bpt>AdaptiveTrigger<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/Dn890382)</ept> with its <bpt id="p5">[</bpt><bpt id="p6">**</bpt>MinWindowWidth<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.adaptivetrigger.minwindowwidth)</ept> property set to 641.</target>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>This means that the state is to be applied only when the window width is not less than the minimum of 641 DIPs.</source>
          <target state="new">This means that the state is to be applied only when the window width is not less than the minimum of 641 DIPs.</target>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>You don't define any <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Setter<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR208817)</ept> objects for this state, so it uses the layout properties you defined in the XAML for the page content.</source>
          <target state="new">You don't define any <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Setter<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR208817)</ept> objects for this state, so it uses the layout properties you defined in the XAML for the page content.</target>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>The second <bpt id="p1">[</bpt><bpt id="p2">**</bpt>VisualState<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209007)</ept>, <ph id="ph1">`narrowState`</ph>, has an <bpt id="p3">[</bpt><bpt id="p4">**</bpt>AdaptiveTrigger<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/Dn890382)</ept> with its <bpt id="p5">[</bpt><bpt id="p6">**</bpt>MinWindowWidth<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.adaptivetrigger.minwindowwidth)</ept> property set to 0.</source>
          <target state="new">The second <bpt id="p1">[</bpt><bpt id="p2">**</bpt>VisualState<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209007)</ept>, <ph id="ph1">`narrowState`</ph>, has an <bpt id="p3">[</bpt><bpt id="p4">**</bpt>AdaptiveTrigger<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/Dn890382)</ept> with its <bpt id="p5">[</bpt><bpt id="p6">**</bpt>MinWindowWidth<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.adaptivetrigger.minwindowwidth)</ept> property set to 0.</target>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>This state is applied when the window width is greater than 0, but less than 641 DIPs.</source>
          <target state="new">This state is applied when the window width is greater than 0, but less than 641 DIPs.</target>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>(At 641 DIPs, the <ph id="ph1">`wideState`</ph> is applied.) In this state, you do define some <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Setter<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR208817)</ept> objects to change the layout properties of controls in the UI:</source>
          <target state="new">(At 641 DIPs, the <ph id="ph1">`wideState`</ph> is applied.) In this state, you do define some <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Setter<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR208817)</ept> objects to change the layout properties of controls in the UI:</target>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>You reduce the left margin of the <ph id="ph1">`contentPanel`</ph> element from 120 to 20.</source>
          <target state="new">You reduce the left margin of the <ph id="ph1">`contentPanel`</ph> element from 120 to 20.</target>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>You change the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Orientation<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.stackpanel.orientation)</ept> of the <ph id="ph1">`inputPanel`</ph> element from <bpt id="p3">**</bpt>Horizontal<ept id="p3">**</ept> to <bpt id="p4">**</bpt>Vertical<ept id="p4">**</ept>.</source>
          <target state="new">You change the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Orientation<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.stackpanel.orientation)</ept> of the <ph id="ph1">`inputPanel`</ph> element from <bpt id="p3">**</bpt>Horizontal<ept id="p3">**</ept> to <bpt id="p4">**</bpt>Vertical<ept id="p4">**</ept>.</target>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>You add a top margin of 4 DIPs to the <ph id="ph1">`inputButton`</ph> element.</source>
          <target state="new">You add a top margin of 4 DIPs to the <ph id="ph1">`inputButton`</ph> element.</target>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>Summary</source>
          <target state="new">Summary</target>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>Congratulations, you've completed the first tutorial!</source>
          <target state="new">Congratulations, you've completed the first tutorial!</target>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>It taught how to add content to Windows Universal apps, how to add interactivity to them, and how to change their appearance.</source>
          <target state="new">It taught how to add content to Windows Universal apps, how to add interactivity to them, and how to change their appearance.</target>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>Next steps</source>
          <target state="new">Next steps</target>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>If you have a Windows Universal app project that targets Windows 8.1 and/or Windows Phone 8.1, you can port it to Windows 10.</source>
          <target state="new">If you have a Windows Universal app project that targets Windows 8.1 and/or Windows Phone 8.1, you can port it to Windows 10.</target>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>There is no automatic process for this, but you can do it manually with a little effort.</source>
          <target state="new">There is no automatic process for this, but you can do it manually with a little effort.</target>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>Start with a new Windows Universal project to get the latest project system structure and manifest files, copy your code files into the project's directory structure, add the items to your project, and rewrite your XAML using the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>VisualStateManager<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209021)</ept> according to the guidance in this topic.</source>
          <target state="new">Start with a new Windows Universal project to get the latest project system structure and manifest files, copy your code files into the project's directory structure, add the items to your project, and rewrite your XAML using the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>VisualStateManager<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209021)</ept> according to the guidance in this topic.</target>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Porting a Windows Runtime 8 project to a Universal Windows Platform (UWP) project<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Mt188203)</ept> and <bpt id="p2">[</bpt>Porting to the Universal Windows Platform (C++)<ept id="p2">](http://go.microsoft.com/fwlink/p/?LinkId=619525)</ept>.</source>
          <target state="new">For more information, see <bpt id="p1">[</bpt>Porting a Windows Runtime 8 project to a Universal Windows Platform (UWP) project<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Mt188203)</ept> and <bpt id="p2">[</bpt>Porting to the Universal Windows Platform (C++)<ept id="p2">](http://go.microsoft.com/fwlink/p/?LinkId=619525)</ept>.</target>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>If you have existing C++ code that you want to integrate with a UWP app, such as to create a new UWP UI for an existing application, see <bpt id="p1">[</bpt>How to: Use existing C++ code in a Universal Windows project<ept id="p1">](http://go.microsoft.com/fwlink/p/?LinkId=619623)</ept>.</source>
          <target state="new">If you have existing C++ code that you want to integrate with a UWP app, such as to create a new UWP UI for an existing application, see <bpt id="p1">[</bpt>How to: Use existing C++ code in a Universal Windows project<ept id="p1">](http://go.microsoft.com/fwlink/p/?LinkId=619623)</ept>.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>