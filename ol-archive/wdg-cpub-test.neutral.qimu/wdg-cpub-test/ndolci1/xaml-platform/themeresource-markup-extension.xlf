<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci1\xaml-platform\themeresource-markup-extension.md</xliffext:olfilepath>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d872648c0412de391a43d88c1425a9ddea44e6ed</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-e58fd48" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>description: Provides a value for any XAML attribute by evaluating a reference to a resource, with additional system logic that retrieves different resources depending on the currently active theme.</source>
          <target state="new">description: Provides a value for any XAML attribute by evaluating a reference to a resource, with additional system logic that retrieves different resources depending on the currently active theme.</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>title: {ThemeResource} markup extension' ms.assetid: 8A1C79D2-9566-44AA-B8E1-CC7ADAD1BCC5</source>
          <target state="new">title: {ThemeResource} markup extension' ms.assetid: 8A1C79D2-9566-44AA-B8E1-CC7ADAD1BCC5</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>{ThemeResource} markup extension</source>
          <target state="new">{ThemeResource} markup extension</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Updated for UWP apps on Windows 10.</source>
          <target state="new">Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept></source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept></target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Provides a value for any XAML attribute by evaluating a reference to a resource, with additional system logic that retrieves different resources depending on the currently active theme.</source>
          <target state="new">Provides a value for any XAML attribute by evaluating a reference to a resource, with additional system logic that retrieves different resources depending on the currently active theme.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Similar to <bpt id="p1">[</bpt>{StaticResource} markup extension<ept id="p1">](staticresource-markup-extension.md)</ept>, resources are defined in a <bpt id="p2">[</bpt><bpt id="p3">**</bpt>ResourceDictionary<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br208794)</ept>, and a <bpt id="p4">**</bpt>ThemeResource<ept id="p4">**</ept> usage references the key of that resource in the <bpt id="p5">**</bpt>ResourceDictionary<ept id="p5">**</ept>.</source>
          <target state="new">Similar to <bpt id="p1">[</bpt>{StaticResource} markup extension<ept id="p1">](staticresource-markup-extension.md)</ept>, resources are defined in a <bpt id="p2">[</bpt><bpt id="p3">**</bpt>ResourceDictionary<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br208794)</ept>, and a <bpt id="p4">**</bpt>ThemeResource<ept id="p4">**</ept> usage references the key of that resource in the <bpt id="p5">**</bpt>ResourceDictionary<ept id="p5">**</ept>.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>XAML attribute usage</source>
          <target state="new">XAML attribute usage</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>XAML values</source>
          <target state="new">XAML values</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Term</source>
          <target state="new">Term</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="new">Description</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>key</source>
          <target state="new">key</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The key for the requested resource.</source>
          <target state="new">The key for the requested resource.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This key is initially assigned by the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ResourceDictionary<ept id="p2">**</ept><ph id="ph1">&gt;</ph><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208794)</ept>.</source>
          <target state="new">This key is initially assigned by the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ResourceDictionary<ept id="p2">**</ept><ph id="ph1">&gt;</ph><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208794)</ept>.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A resource key can be any string defined in the XamlName Grammar.</source>
          <target state="new">A resource key can be any string defined in the XamlName Grammar.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Remarks</source>
          <target state="new">Remarks</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">**</bpt>ThemeResource<ept id="p1">**</ept> is a technique for obtaining values for a XAML attribute that are defined elsewhere in a XAML resource dictionary.</source>
          <target state="new">A <bpt id="p1">**</bpt>ThemeResource<ept id="p1">**</ept> is a technique for obtaining values for a XAML attribute that are defined elsewhere in a XAML resource dictionary.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The markup extension serves the same basic purpose as the <bpt id="p1">[</bpt>{StaticResource} markup extension<ept id="p1">](staticresource-markup-extension.md)</ept>.</source>
          <target state="new">The markup extension serves the same basic purpose as the <bpt id="p1">[</bpt>{StaticResource} markup extension<ept id="p1">](staticresource-markup-extension.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The difference in behavior versus {StaticResource} markup extension is that a <bpt id="p1">**</bpt>ThemeResource<ept id="p1">**</ept> reference can dynamically use different dictionaries as the primary lookup location, depending on which theme is currently being used by the system.</source>
          <target state="new">The difference in behavior versus {StaticResource} markup extension is that a <bpt id="p1">**</bpt>ThemeResource<ept id="p1">**</ept> reference can dynamically use different dictionaries as the primary lookup location, depending on which theme is currently being used by the system.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>When the app first starts, any resource reference made by a <bpt id="p1">**</bpt>ThemeResource<ept id="p1">**</ept> reference is evaluated based on the theme in use at startup.</source>
          <target state="new">When the app first starts, any resource reference made by a <bpt id="p1">**</bpt>ThemeResource<ept id="p1">**</ept> reference is evaluated based on the theme in use at startup.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>But if the user subsequently changes the active theme at run-time, the system will re-evaluate every <bpt id="p1">**</bpt>ThemeResource<ept id="p1">**</ept> reference, retrieve a theme-specific resource that may be different, and redisplay the app with new resource values in all appropriate places in the visual tree.</source>
          <target state="new">But if the user subsequently changes the active theme at run-time, the system will re-evaluate every <bpt id="p1">**</bpt>ThemeResource<ept id="p1">**</ept> reference, retrieve a theme-specific resource that may be different, and redisplay the app with new resource values in all appropriate places in the visual tree.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">**</bpt>StaticResource<ept id="p1">**</ept> is determined at XAML load time / app startup and won't be re-evaluated at run-time.</source>
          <target state="new">A <bpt id="p1">**</bpt>StaticResource<ept id="p1">**</ept> is determined at XAML load time / app startup and won't be re-evaluated at run-time.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>(There are other techniques such as visual states that reload XAML dynamically, but those techniques operate at a higher level that the basic resource evaluation enabled by <bpt id="p1">[</bpt>{StaticResource} markup extension<ept id="p1">](staticresource-markup-extension.md)</ept>).</source>
          <target state="new">(There are other techniques such as visual states that reload XAML dynamically, but those techniques operate at a higher level that the basic resource evaluation enabled by <bpt id="p1">[</bpt>{StaticResource} markup extension<ept id="p1">](staticresource-markup-extension.md)</ept>).</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>ThemeResource<ept id="p1">**</ept> takes one argument, which specifies the key for the requested resource.</source>
          <target state="new"><bpt id="p1">**</bpt>ThemeResource<ept id="p1">**</ept> takes one argument, which specifies the key for the requested resource.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>A resource key is always a string in Windows Runtime XAML.</source>
          <target state="new">A resource key is always a string in Windows Runtime XAML.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For more info on how the resource key is initially specified, see <bpt id="p1">[</bpt>x:Key attribute<ept id="p1">](x-key-attribute.md)</ept>.</source>
          <target state="new">For more info on how the resource key is initially specified, see <bpt id="p1">[</bpt>x:Key attribute<ept id="p1">](x-key-attribute.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For more info on how to define resources and properly use a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ResourceDictionary<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208794)</ept>, including sample code, see <bpt id="p3">[</bpt>ResourceDictionary and XAML resource references<ept id="p3">](https://msdn.microsoft.com/library/windows/apps/mt187273)</ept>.</source>
          <target state="new">For more info on how to define resources and properly use a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ResourceDictionary<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208794)</ept>, including sample code, see <bpt id="p3">[</bpt>ResourceDictionary and XAML resource references<ept id="p3">](https://msdn.microsoft.com/library/windows/apps/mt187273)</ept>.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Important</source>
          <target state="new">Important</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>As with <bpt id="p1">**</bpt>StaticResource<ept id="p1">**</ept>, a <bpt id="p2">**</bpt>ThemeResource<ept id="p2">**</ept> must not attempt to make a forward reference to a resource that is defined lexically further within the XAML file.</source>
          <target state="new">As with <bpt id="p1">**</bpt>StaticResource<ept id="p1">**</ept>, a <bpt id="p2">**</bpt>ThemeResource<ept id="p2">**</ept> must not attempt to make a forward reference to a resource that is defined lexically further within the XAML file.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Attempting to do so is not supported.</source>
          <target state="new">Attempting to do so is not supported.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Even if the forward reference doesn't fail, trying to make one carries a performance penalty.</source>
          <target state="new">Even if the forward reference doesn't fail, trying to make one carries a performance penalty.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>For best results, adjust the composition of your resource dictionaries so that forward references are avoided.</source>
          <target state="new">For best results, adjust the composition of your resource dictionaries so that forward references are avoided.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Attempting to specify a <bpt id="p1">**</bpt>ThemeResource<ept id="p1">**</ept> to a key that cannot resolve throws a XAML parse exception at run time.</source>
          <target state="new">Attempting to specify a <bpt id="p1">**</bpt>ThemeResource<ept id="p1">**</ept> to a key that cannot resolve throws a XAML parse exception at run time.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Design tools may also offer warnings or errors.</source>
          <target state="new">Design tools may also offer warnings or errors.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>In the Windows Runtime XAML processor implementation, there is no backing class representation for <bpt id="p1">**</bpt>ThemeResource<ept id="p1">**</ept>.</source>
          <target state="new">In the Windows Runtime XAML processor implementation, there is no backing class representation for <bpt id="p1">**</bpt>ThemeResource<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The closest equivalent in code is to use the collection API of a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ResourceDictionary<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208794)</ept>, for example calling <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Contains<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/jj635925)</ept> or <bpt id="p5">[</bpt><bpt id="p6">**</bpt>TryGetValue<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/jj603139)</ept>.</source>
          <target state="new">The closest equivalent in code is to use the collection API of a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ResourceDictionary<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208794)</ept>, for example calling <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Contains<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/jj635925)</ept> or <bpt id="p5">[</bpt><bpt id="p6">**</bpt>TryGetValue<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/jj603139)</ept>.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>ThemeResource<ept id="p1">**</ept> is a markup extension.</source>
          <target state="new"><bpt id="p1">**</bpt>ThemeResource<ept id="p1">**</ept> is a markup extension.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Markup extensions are typically implemented when there is a requirement to escape attribute values to be other than literal values or handler names, and the requirement is more global than just putting type converters on certain types or properties.</source>
          <target state="new">Markup extensions are typically implemented when there is a requirement to escape attribute values to be other than literal values or handler names, and the requirement is more global than just putting type converters on certain types or properties.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>All markup extensions in XAML use the "{" and "}" characters in their attribute syntax, which is the convention by which a XAML processor recognizes that a markup extension must process the attribute.</source>
          <target state="new">All markup extensions in XAML use the "{" and "}" characters in their attribute syntax, which is the convention by which a XAML processor recognizes that a markup extension must process the attribute.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>When and how to use {ThemeResource} rather than {StaticResource}</source>
          <target state="new">When and how to use {ThemeResource} rather than {StaticResource}</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The rules by which a <bpt id="p1">**</bpt>ThemeResource<ept id="p1">**</ept> resolves to an item in a resource dictionary are generally the same as <bpt id="p2">**</bpt>StaticResource<ept id="p2">**</ept>.</source>
          <target state="new">The rules by which a <bpt id="p1">**</bpt>ThemeResource<ept id="p1">**</ept> resolves to an item in a resource dictionary are generally the same as <bpt id="p2">**</bpt>StaticResource<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">**</bpt>ThemeResource<ept id="p1">**</ept> lookup can extend into the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>ResourceDictionary<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br208794)</ept> files that are referenced in a <bpt id="p4">[</bpt><bpt id="p5">**</bpt>ThemeDictionaries<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/br208807)</ept> collection, but a <bpt id="p6">**</bpt>StaticResource<ept id="p6">**</ept> can do that also.</source>
          <target state="new">A <bpt id="p1">**</bpt>ThemeResource<ept id="p1">**</ept> lookup can extend into the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>ResourceDictionary<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br208794)</ept> files that are referenced in a <bpt id="p4">[</bpt><bpt id="p5">**</bpt>ThemeDictionaries<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/br208807)</ept> collection, but a <bpt id="p6">**</bpt>StaticResource<ept id="p6">**</ept> can do that also.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The difference is that a <bpt id="p1">**</bpt>ThemeResource<ept id="p1">**</ept> can re-evaluate at run-time and a <bpt id="p2">**</bpt>StaticResource<ept id="p2">**</ept> can't.</source>
          <target state="new">The difference is that a <bpt id="p1">**</bpt>ThemeResource<ept id="p1">**</ept> can re-evaluate at run-time and a <bpt id="p2">**</bpt>StaticResource<ept id="p2">**</ept> can't.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The set of keys in each theme dictionary should provide the same set of keyed resources no matter which theme is active.</source>
          <target state="new">The set of keys in each theme dictionary should provide the same set of keyed resources no matter which theme is active.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>If a given keyed resource exists in the <bpt id="p1">**</bpt>HighContrast<ept id="p1">**</ept> theme dictionary, then another resource with that name should also exist in <bpt id="p2">**</bpt>Light<ept id="p2">**</ept> and <bpt id="p3">**</bpt>Default<ept id="p3">**</ept>.</source>
          <target state="new">If a given keyed resource exists in the <bpt id="p1">**</bpt>HighContrast<ept id="p1">**</ept> theme dictionary, then another resource with that name should also exist in <bpt id="p2">**</bpt>Light<ept id="p2">**</ept> and <bpt id="p3">**</bpt>Default<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>If that isn't true, resource lookup might fail when the user switches themes and your app won't look right.</source>
          <target state="new">If that isn't true, resource lookup might fail when the user switches themes and your app won't look right.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>It is possible though that a theme dictionary can contain keyed resources that are only referenced from within the same scope to provide sub-values; these don't need to be equivalent in all themes.</source>
          <target state="new">It is possible though that a theme dictionary can contain keyed resources that are only referenced from within the same scope to provide sub-values; these don't need to be equivalent in all themes.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>In general you should place resources in theme dictionaries and make references to those resources using <bpt id="p1">**</bpt>ThemeResource<ept id="p1">**</ept> only when those values can change between themes or are supported by values that change.</source>
          <target state="new">In general you should place resources in theme dictionaries and make references to those resources using <bpt id="p1">**</bpt>ThemeResource<ept id="p1">**</ept> only when those values can change between themes or are supported by values that change.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>This is appropriate for these kinds of resources:</source>
          <target state="new">This is appropriate for these kinds of resources:</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Brushes, in particular colors for <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SolidColorBrush<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242962)</ept>.</source>
          <target state="new">Brushes, in particular colors for <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SolidColorBrush<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242962)</ept>.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>These make up about 80% of the <bpt id="p1">**</bpt>ThemeResource<ept id="p1">**</ept> usages in the default XAML control templates (generic.xaml).</source>
          <target state="new">These make up about 80% of the <bpt id="p1">**</bpt>ThemeResource<ept id="p1">**</ept> usages in the default XAML control templates (generic.xaml).</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Pixel values for borders, offsets, margin and padding and so on.</source>
          <target state="new">Pixel values for borders, offsets, margin and padding and so on.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Font properties such as <bpt id="p1">**</bpt>FontFamily<ept id="p1">**</ept> or <bpt id="p2">**</bpt>FontSize<ept id="p2">**</ept>.</source>
          <target state="new">Font properties such as <bpt id="p1">**</bpt>FontFamily<ept id="p1">**</ept> or <bpt id="p2">**</bpt>FontSize<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Complete templates for a limited number of controls that are usually system-styled and used for dynamic presentation, like <bpt id="p1">[</bpt><bpt id="p2">**</bpt>GridViewItem<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh738501)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>ListViewItem<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br242919)</ept>.</source>
          <target state="new">Complete templates for a limited number of controls that are usually system-styled and used for dynamic presentation, like <bpt id="p1">[</bpt><bpt id="p2">**</bpt>GridViewItem<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh738501)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>ListViewItem<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br242919)</ept>.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Text display styles (usually to change font color, background, and possibly size).</source>
          <target state="new">Text display styles (usually to change font color, background, and possibly size).</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The Windows Runtime provides a set of resources that are specifically intended to be referenced by <bpt id="p1">**</bpt>ThemeResource<ept id="p1">**</ept>.</source>
          <target state="new">The Windows Runtime provides a set of resources that are specifically intended to be referenced by <bpt id="p1">**</bpt>ThemeResource<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>These are all listed as part of the XAML file themeresources.xaml, which is available in the include/winrt/xaml/design folder as part of the Windows Software Development Kit (SDK).</source>
          <target state="new">These are all listed as part of the XAML file themeresources.xaml, which is available in the include/winrt/xaml/design folder as part of the Windows Software Development Kit (SDK).</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>For documentation on the theme brushes and additional styles that are defined in themeresources.xaml, see <bpt id="p1">[</bpt>XAML theme resources<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/mt187274)</ept>.</source>
          <target state="new">For documentation on the theme brushes and additional styles that are defined in themeresources.xaml, see <bpt id="p1">[</bpt>XAML theme resources<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/mt187274)</ept>.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The brushes are documented in a table that tells you what color value each brush has for each of the three possible active themes.</source>
          <target state="new">The brushes are documented in a table that tells you what color value each brush has for each of the three possible active themes.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The XAML definitions of visual states in a control template should use <bpt id="p1">**</bpt>ThemeResource<ept id="p1">**</ept> references whenever there's an underlying resource that might change because of a theme change.</source>
          <target state="new">The XAML definitions of visual states in a control template should use <bpt id="p1">**</bpt>ThemeResource<ept id="p1">**</ept> references whenever there's an underlying resource that might change because of a theme change.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>A system theme change won't typically also cause a visual state change.</source>
          <target state="new">A system theme change won't typically also cause a visual state change.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The resources need to use <bpt id="p1">**</bpt>ThemeResource<ept id="p1">**</ept> references in this case so that values can be re-evaluated for the still-active visual state.</source>
          <target state="new">The resources need to use <bpt id="p1">**</bpt>ThemeResource<ept id="p1">**</ept> references in this case so that values can be re-evaluated for the still-active visual state.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>For example, if you have a visual state that changes a brush color of a particular UI part and one of its properties, and that brush color is different per-theme, you should use a <bpt id="p1">**</bpt>ThemeResource<ept id="p1">**</ept> reference for providing that property's value in the default template and also any visual state modification to that default template.</source>
          <target state="new">For example, if you have a visual state that changes a brush color of a particular UI part and one of its properties, and that brush color is different per-theme, you should use a <bpt id="p1">**</bpt>ThemeResource<ept id="p1">**</ept> reference for providing that property's value in the default template and also any visual state modification to that default template.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>ThemeResource<ept id="p1">**</ept> usages might be seen in a series of dependent values.</source>
          <target state="new"><bpt id="p1">**</bpt>ThemeResource<ept id="p1">**</ept> usages might be seen in a series of dependent values.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>For example, a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Color<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh673723)</ept> value used by a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>SolidColorBrush<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br242962)</ept> that is also a keyed resource might use a <bpt id="p5">**</bpt>ThemeResource<ept id="p5">**</ept> reference.</source>
          <target state="new">For example, a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Color<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh673723)</ept> value used by a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>SolidColorBrush<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br242962)</ept> that is also a keyed resource might use a <bpt id="p5">**</bpt>ThemeResource<ept id="p5">**</ept> reference.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>But any UI properties that use the keyed <bpt id="p1">**</bpt>SolidColorBrush<ept id="p1">**</ept> resource would also use a <bpt id="p2">**</bpt>ThemeResource<ept id="p2">**</ept> reference, so that it's specifically each <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Brush<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br228076)</ept>-type property that's enabling a dynamic value change when the theme changes.</source>
          <target state="new">But any UI properties that use the keyed <bpt id="p1">**</bpt>SolidColorBrush<ept id="p1">**</ept> resource would also use a <bpt id="p2">**</bpt>ThemeResource<ept id="p2">**</ept> reference, so that it's specifically each <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Brush<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br228076)</ept>-type property that's enabling a dynamic value change when the theme changes.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  <ph id="ph1">`{ThemeResource}`</ph> and run-time resource evaluation on theme switching is supported in Windows 8.1 XAML but not supported in XAML for apps targeting Windows 8.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  <ph id="ph1">`{ThemeResource}`</ph> and run-time resource evaluation on theme switching is supported in Windows 8.1 XAML but not supported in XAML for apps targeting Windows 8.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>System resources</source>
          <target state="new">System resources</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Some theme resources reference system resource values as an underlying sub-value.</source>
          <target state="new">Some theme resources reference system resource values as an underlying sub-value.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>A system resource is a special resource value that isn't found in any XAML resource dictionary.</source>
          <target state="new">A system resource is a special resource value that isn't found in any XAML resource dictionary.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>These values rely on behavior in Windows Runtime XAML support to forward values from the system itself, and represent them in a form that a XAML resource can reference.</source>
          <target state="new">These values rely on behavior in Windows Runtime XAML support to forward values from the system itself, and represent them in a form that a XAML resource can reference.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>For example, there is a system resource named "SystemColorButtonFaceColor" that represents an RGB color.</source>
          <target state="new">For example, there is a system resource named "SystemColorButtonFaceColor" that represents an RGB color.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>This color comes from the aspects of system colors and themes that aren't just specific to Windows Runtime and Windows Runtime apps.</source>
          <target state="new">This color comes from the aspects of system colors and themes that aren't just specific to Windows Runtime and Windows Runtime apps.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>System resources are often the underlying values for a high-contrast theme.</source>
          <target state="new">System resources are often the underlying values for a high-contrast theme.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The user is in control of the color choices for their high-contrast theme, and the user makes these choices using system features that also aren't specific to Windows Runtime apps.</source>
          <target state="new">The user is in control of the color choices for their high-contrast theme, and the user makes these choices using system features that also aren't specific to Windows Runtime apps.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>By referencing the system resources as <bpt id="p1">**</bpt>ThemeResource<ept id="p1">**</ept> references, the default behavior of the high-contrast themes for Windows Runtime apps can use these theme-specific values that are controlled by the user and exposed by the system.</source>
          <target state="new">By referencing the system resources as <bpt id="p1">**</bpt>ThemeResource<ept id="p1">**</ept> references, the default behavior of the high-contrast themes for Windows Runtime apps can use these theme-specific values that are controlled by the user and exposed by the system.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Also, the references are now marked for re-evaluation if the system detects a run-time theme change.</source>
          <target state="new">Also, the references are now marked for re-evaluation if the system detects a run-time theme change.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>An example {ThemeResource} usage</source>
          <target state="new">An example {ThemeResource} usage</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Here's some example XAML taken from the default generic.xaml and themeresources.xaml files to illustrate how to use <bpt id="p1">**</bpt>ThemeResource<ept id="p1">**</ept>.</source>
          <target state="new">Here's some example XAML taken from the default generic.xaml and themeresources.xaml files to illustrate how to use <bpt id="p1">**</bpt>ThemeResource<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>We'll look at just one template (the default <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Button<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br209265)</ept>) and how two properties are declared (<bpt id="p3">[</bpt><bpt id="p4">**</bpt>Background<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br209395)</ept> and <bpt id="p5">[</bpt><bpt id="p6">**</bpt>Foreground<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/br209414)</ept>) to be responsive to theme changes.</source>
          <target state="new">We'll look at just one template (the default <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Button<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br209265)</ept>) and how two properties are declared (<bpt id="p3">[</bpt><bpt id="p4">**</bpt>Background<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br209395)</ept> and <bpt id="p5">[</bpt><bpt id="p6">**</bpt>Foreground<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/br209414)</ept>) to be responsive to theme changes.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Here, the properties take a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Brush<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br228076)</ept> value, and the reference to <bpt id="p3">[</bpt><bpt id="p4">**</bpt>SolidColorBrush<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br242962)</ept> resources named <ph id="ph1">`ButtonBackgroundThemeBrush`</ph> and <ph id="ph2">`ButtonForegroundThemeBrush`</ph> are made using <bpt id="p5">**</bpt>ThemeResource<ept id="p5">**</ept>.</source>
          <target state="new">Here, the properties take a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Brush<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br228076)</ept> value, and the reference to <bpt id="p3">[</bpt><bpt id="p4">**</bpt>SolidColorBrush<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br242962)</ept> resources named <ph id="ph1">`ButtonBackgroundThemeBrush`</ph> and <ph id="ph2">`ButtonForegroundThemeBrush`</ph> are made using <bpt id="p5">**</bpt>ThemeResource<ept id="p5">**</ept>.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>These same properties are also adjusted by some of the visual states for a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Button<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br209265)</ept>.</source>
          <target state="new">These same properties are also adjusted by some of the visual states for a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Button<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br209265)</ept>.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Notably, the background color changes when a button is clicked.</source>
          <target state="new">Notably, the background color changes when a button is clicked.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Here too, the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Background<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br209395)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Foreground<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br209414)</ept> animations in the visual state storyboard use <bpt id="p5">[</bpt><bpt id="p6">**</bpt>DiscreteObjectKeyFrame<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/br243132)</ept> objects and references to brushes with <bpt id="p7">**</bpt>ThemeResource<ept id="p7">**</ept> as the key frame value.</source>
          <target state="new">Here too, the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Background<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br209395)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Foreground<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br209414)</ept> animations in the visual state storyboard use <bpt id="p5">[</bpt><bpt id="p6">**</bpt>DiscreteObjectKeyFrame<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/br243132)</ept> objects and references to brushes with <bpt id="p7">**</bpt>ThemeResource<ept id="p7">**</ept> as the key frame value.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Each of these brushes is defined earlier in generic.xaml: they had to be defined prior to any templates using them to avoid XAML forward references.</source>
          <target state="new">Each of these brushes is defined earlier in generic.xaml: they had to be defined prior to any templates using them to avoid XAML forward references.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Here's those definitions, for the "Default" theme dictionary.</source>
          <target state="new">Here's those definitions, for the "Default" theme dictionary.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Then each of the other theme dictionaries also has these brushes defined, for example:</source>
          <target state="new">Then each of the other theme dictionaries also has these brushes defined, for example:</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Here the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Color<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242963)</ept> value is another <bpt id="p3">**</bpt>ThemeResource<ept id="p3">**</ept> reference to a system resource.</source>
          <target state="new">Here the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Color<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242963)</ept> value is another <bpt id="p3">**</bpt>ThemeResource<ept id="p3">**</ept> reference to a system resource.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>If you reference a system resource, and you want it to change in response to a theme change, you should use <bpt id="p1">**</bpt>ThemeResource<ept id="p1">**</ept> to make the reference.</source>
          <target state="new">If you reference a system resource, and you want it to change in response to a theme change, you should use <bpt id="p1">**</bpt>ThemeResource<ept id="p1">**</ept> to make the reference.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Windows 8 behavior</source>
          <target state="new">Windows 8 behavior</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Windows 8 did not support the <bpt id="p1">**</bpt>ThemeResource<ept id="p1">**</ept> markup extension, it is available starting with Windows 8.1.</source>
          <target state="new">Windows 8 did not support the <bpt id="p1">**</bpt>ThemeResource<ept id="p1">**</ept> markup extension, it is available starting with Windows 8.1.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Also, Windows 8 did not support dynamically switching the theme-related resources for a Windows Runtime app.</source>
          <target state="new">Also, Windows 8 did not support dynamically switching the theme-related resources for a Windows Runtime app.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The app had to be restarted in order to pick up the theme change for the XAML templates and styles.</source>
          <target state="new">The app had to be restarted in order to pick up the theme change for the XAML templates and styles.</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>This isn't a good user experience, so apps are strongly encouraged to recompile and target Windows 8.1 so that they can use styles with <bpt id="p1">**</bpt>ThemeResource<ept id="p1">**</ept> usages and can dynamically switch themes when the user does.</source>
          <target state="new">This isn't a good user experience, so apps are strongly encouraged to recompile and target Windows 8.1 so that they can use styles with <bpt id="p1">**</bpt>ThemeResource<ept id="p1">**</ept> usages and can dynamically switch themes when the user does.</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Apps that were compiled for Windows 8 but running on Windows 8.1 continue to use the Windows 8 behavior.</source>
          <target state="new">Apps that were compiled for Windows 8 but running on Windows 8.1 continue to use the Windows 8 behavior.</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Design-time tools support for the <bpt id="p1">**</bpt>{ThemeResource}<ept id="p1">**</ept> markup extension</source>
          <target state="new">Design-time tools support for the <bpt id="p1">**</bpt>{ThemeResource}<ept id="p1">**</ept> markup extension</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Microsoft Visual Studio 2013 can include possible key values in the Microsoft IntelliSense dropdowns when you use the <bpt id="p1">**</bpt>{ThemeResource}<ept id="p1">**</ept> markup extension in a XAML page.</source>
          <target state="new">Microsoft Visual Studio 2013 can include possible key values in the Microsoft IntelliSense dropdowns when you use the <bpt id="p1">**</bpt>{ThemeResource}<ept id="p1">**</ept> markup extension in a XAML page.</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>For example, as soon as you type "{ThemeResource", any of the resource keys from the <bpt id="p1">[</bpt>XAML theme resources<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/mt187274)</ept> are displayed.</source>
          <target state="new">For example, as soon as you type "{ThemeResource", any of the resource keys from the <bpt id="p1">[</bpt>XAML theme resources<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/mt187274)</ept> are displayed.</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Once a resource key exists as part of any <bpt id="p1">**</bpt>{ThemeResource}<ept id="p1">**</ept> usage, the <bpt id="p2">**</bpt>Go To Definition<ept id="p2">**</ept> (F12) feature can resolve that resource and show you the generic.xaml for design time, where the theme resource is defined.</source>
          <target state="new">Once a resource key exists as part of any <bpt id="p1">**</bpt>{ThemeResource}<ept id="p1">**</ept> usage, the <bpt id="p2">**</bpt>Go To Definition<ept id="p2">**</ept> (F12) feature can resolve that resource and show you the generic.xaml for design time, where the theme resource is defined.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Because theme resources are defined more than once (per-theme) <bpt id="p1">**</bpt>Go To Definition<ept id="p1">**</ept> takes you to the first definition found in the file, which is the definition for <bpt id="p2">**</bpt>Default<ept id="p2">**</ept>.</source>
          <target state="new">Because theme resources are defined more than once (per-theme) <bpt id="p1">**</bpt>Go To Definition<ept id="p1">**</ept> takes you to the first definition found in the file, which is the definition for <bpt id="p2">**</bpt>Default<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>If you want the other definitions you can search for the key name within the file and find the other themes' definitions.</source>
          <target state="new">If you want the other definitions you can search for the key name within the file and find the other themes' definitions.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Related topics</source>
          <target state="new">Related topics</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>ResourceDictionary and XAML resource references</source>
          <target state="new">ResourceDictionary and XAML resource references</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>XAML theme resources</source>
          <target state="new">XAML theme resources</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>ResourceDictionary</source>
          <target state="new">ResourceDictionary</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>x:Key attribute</source>
          <target state="new">x:Key attribute</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>