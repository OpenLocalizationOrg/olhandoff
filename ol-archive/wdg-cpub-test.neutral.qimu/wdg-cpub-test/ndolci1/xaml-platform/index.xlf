<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci1\xaml-platform\index.md</xliffext:olfilepath>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">80ee3b2cfdb64b23169a9c70e89cde5098016334</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-e58fd48" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>This section includes topics that explain programming concepts that are generally applicable to any app that you write.</source>
          <target state="new">This section includes topics that explain programming concepts that are generally applicable to any app that you write.</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>XAML platform</source>
          <target state="new">XAML platform</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>XAML platform</source>
          <target state="new">XAML platform</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Updated for UWP apps on Windows 10.</source>
          <target state="new">Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept></source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept></target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This section includes topics that explain programming concepts that are generally applicable to any app that you write, if you are using C#, Microsoft Visual Basic, or Visual C++ component extensions (C++/CX) as your programming language and XAML for your UI definition.</source>
          <target state="new">This section includes topics that explain programming concepts that are generally applicable to any app that you write, if you are using C#, Microsoft Visual Basic, or Visual C++ component extensions (C++/CX) as your programming language and XAML for your UI definition.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This includes basic programming concepts such as using properties and events, and how these apply to Universal Windows Platform (UWP) app programming.</source>
          <target state="new">This includes basic programming concepts such as using properties and events, and how these apply to Universal Windows Platform (UWP) app programming.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The Universal Windows Platform (UWP) extends C#, Visual Basic, or C++/CX concepts of properties and their values by adding the dependency property system.</source>
          <target state="new">The Universal Windows Platform (UWP) extends C#, Visual Basic, or C++/CX concepts of properties and their values by adding the dependency property system.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Topics in this section also document the XAML language as it is used by the UWP, and cover basic scenarios and advanced topics explaining how to use XAML to define the UI for your UWP app.</source>
          <target state="new">Topics in this section also document the XAML language as it is used by the UWP, and cover basic scenarios and advanced topics explaining how to use XAML to define the UI for your UWP app.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Topic</source>
          <target state="new">Topic</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="new">Description</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>XAML overview</source>
          <target state="new">XAML overview</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>We introduce the XAML language and XAML concepts to the Windows Runtime app developer audience, and describe the different ways to declare objects and set attributes in XAML as it is used for creating a Windows Runtime app.</source>
          <target state="new">We introduce the XAML language and XAML concepts to the Windows Runtime app developer audience, and describe the different ways to declare objects and set attributes in XAML as it is used for creating a Windows Runtime app.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Dependency properties overview</source>
          <target state="new">Dependency properties overview</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This topic explains the dependency property system that is available when you write a Windows Runtime app using C++, C#, or Visual Basic along with XAML definitions for UI.</source>
          <target state="new">This topic explains the dependency property system that is available when you write a Windows Runtime app using C++, C#, or Visual Basic along with XAML definitions for UI.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Custom dependency properties</source>
          <target state="new">Custom dependency properties</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Explains how to define and implement custom dependency properties for a Windows Runtime app using C++, C#, or Visual Basic.</source>
          <target state="new">Explains how to define and implement custom dependency properties for a Windows Runtime app using C++, C#, or Visual Basic.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Attached properties overview</source>
          <target state="new">Attached properties overview</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Explains the concept of an attached property in XAML, and provides some examples.</source>
          <target state="new">Explains the concept of an attached property in XAML, and provides some examples.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Custom attached properties</source>
          <target state="new">Custom attached properties</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Explains how to implement a XAML attached property as a dependency property and how to define the accessor convention that is necessary for your attached property to be usable in XAML.</source>
          <target state="new">Explains how to implement a XAML attached property as a dependency property and how to define the accessor convention that is necessary for your attached property to be usable in XAML.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Events and routed events overview</source>
          <target state="new">Events and routed events overview</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>We describe the programming concept of events in a Windows Runtime app, when using C#, Visual Basic or C++/CX as your programming language, and XAML for your UI definition.</source>
          <target state="new">We describe the programming concept of events in a Windows Runtime app, when using C#, Visual Basic or C++/CX as your programming language, and XAML for your UI definition.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>You can assign handlers for events as part of the declarations for UI elements in XAML, or you can add the handlers in code.</source>
          <target state="new">You can assign handlers for events as part of the declarations for UI elements in XAML, or you can add the handlers in code.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Windows Runtime supports <bpt id="p1">**</bpt>routed events<ept id="p1">**</ept>: certain input events and data events can be handled by objects beyond the object that fired the event.</source>
          <target state="new">Windows Runtime supports <bpt id="p1">**</bpt>routed events<ept id="p1">**</ept>: certain input events and data events can be handled by objects beyond the object that fired the event.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Routed events are useful when you define control templates, or use pages or layout containers.</source>
          <target state="new">Routed events are useful when you define control templates, or use pages or layout containers.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>