<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci1\xaml-platform\x-name-attribute.md</xliffext:olfilepath>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">167ae7ee519736967c5163e2c37e3ca1fd507a7d</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-e58fd48" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Uniquely identifies object elements for access to the instantiated object from code-behind or general code.</source>
          <target state="new">Uniquely identifies object elements for access to the instantiated object from code-behind or general code.</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>x:Name attribute'</source>
          <target state="new">x:Name attribute'</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>x:Name attribute</source>
          <target state="new">x:Name attribute</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Updated for UWP apps on Windows 10.</source>
          <target state="new">Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept></source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept></target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Uniquely identifies object elements for access to the instantiated object from code-behind or general code.</source>
          <target state="new">Uniquely identifies object elements for access to the instantiated object from code-behind or general code.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Once applied to a backing programming model, <bpt id="p1">**</bpt>x:Name<ept id="p1">**</ept> can be considered equivalent to the variable holding an object reference, as returned by a constructor.</source>
          <target state="new">Once applied to a backing programming model, <bpt id="p1">**</bpt>x:Name<ept id="p1">**</ept> can be considered equivalent to the variable holding an object reference, as returned by a constructor.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>XAML attribute usage</source>
          <target state="new">XAML attribute usage</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>XAML values</source>
          <target state="new">XAML values</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Term</source>
          <target state="new">Term</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="new">Description</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>XAMLNameValue</source>
          <target state="new">XAMLNameValue</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A string that conforms to the restrictions of the XamlName grammar.</source>
          <target state="new">A string that conforms to the restrictions of the XamlName grammar.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>XamlName grammar</source>
          <target state="new">XamlName grammar</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The following is the normative grammar for a string that is used as a key in this XAML implementation:</source>
          <target state="new">The following is the normative grammar for a string that is used as a key in this XAML implementation:</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Characters are restricted to the lower ASCII range, and more specifically to Roman alphabet uppercase and lowercase letters, digits, and the underscore (<ph id="ph1">\_</ph>) character.</source>
          <target state="new">Characters are restricted to the lower ASCII range, and more specifically to Roman alphabet uppercase and lowercase letters, digits, and the underscore (<ph id="ph1">\_</ph>) character.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The Unicode character range is not supported.</source>
          <target state="new">The Unicode character range is not supported.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A name cannot begin with a digit.</source>
          <target state="new">A name cannot begin with a digit.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Some tool implementations prepend an underscore (<ph id="ph1">\_</ph>) to a string if the user supplies a digit as the initial character, or the tool autogenerates <bpt id="p1">**</bpt>x:Name<ept id="p1">**</ept> values based on other values that contain digits.</source>
          <target state="new">Some tool implementations prepend an underscore (<ph id="ph1">\_</ph>) to a string if the user supplies a digit as the initial character, or the tool autogenerates <bpt id="p1">**</bpt>x:Name<ept id="p1">**</ept> values based on other values that contain digits.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Remarks</source>
          <target state="new">Remarks</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The specified <bpt id="p1">**</bpt>x:Name<ept id="p1">**</ept> becomes the name of a field that is created in the underlying code when XAML is processed, and that field holds a reference to the object.</source>
          <target state="new">The specified <bpt id="p1">**</bpt>x:Name<ept id="p1">**</ept> becomes the name of a field that is created in the underlying code when XAML is processed, and that field holds a reference to the object.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The process of creating this field is performed by the MSBuild target steps, which also are responsible for joining the partial classes for a XAML file and its code-behind.</source>
          <target state="new">The process of creating this field is performed by the MSBuild target steps, which also are responsible for joining the partial classes for a XAML file and its code-behind.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This behavior is not necessarily XAML-language specified; it is the particular implementation that Universal Windows Platform (UWP) programming for XAML applies to use <bpt id="p1">**</bpt>x:Name<ept id="p1">**</ept> in its programming and application models.</source>
          <target state="new">This behavior is not necessarily XAML-language specified; it is the particular implementation that Universal Windows Platform (UWP) programming for XAML applies to use <bpt id="p1">**</bpt>x:Name<ept id="p1">**</ept> in its programming and application models.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Each defined <bpt id="p1">**</bpt>x:Name<ept id="p1">**</ept> must be unique within a XAML namescope.</source>
          <target state="new">Each defined <bpt id="p1">**</bpt>x:Name<ept id="p1">**</ept> must be unique within a XAML namescope.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Generally, a XAML namescope is defined at the root element level of a loaded page and contains all elements under that element in a single XAML page.</source>
          <target state="new">Generally, a XAML namescope is defined at the root element level of a loaded page and contains all elements under that element in a single XAML page.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Additional XAML namescopes are defined by any control template or data template that is defined on that page.</source>
          <target state="new">Additional XAML namescopes are defined by any control template or data template that is defined on that page.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>At run time, another XAML namescope is created for the root of the object tree that is created from an applied control template, and also by object trees created from a call to <bpt id="p1">[</bpt><bpt id="p2">**</bpt>XamlReader.Load<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br228048)</ept>.</source>
          <target state="new">At run time, another XAML namescope is created for the root of the object tree that is created from an applied control template, and also by object trees created from a call to <bpt id="p1">[</bpt><bpt id="p2">**</bpt>XamlReader.Load<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br228048)</ept>.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For more info, see <bpt id="p1">[</bpt>XAML namescopes<ept id="p1">](xaml-namescopes.md)</ept>.</source>
          <target state="new">For more info, see <bpt id="p1">[</bpt>XAML namescopes<ept id="p1">](xaml-namescopes.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Design tools often autogenerate <bpt id="p1">**</bpt>x:Name<ept id="p1">**</ept> values for elements when they are introduced to the design surface.</source>
          <target state="new">Design tools often autogenerate <bpt id="p1">**</bpt>x:Name<ept id="p1">**</ept> values for elements when they are introduced to the design surface.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The autogeneration scheme varies depending on which designer you are using, but a typical scheme is to generate a string that starts with the class name that backs the element, followed by an advancing integer.</source>
          <target state="new">The autogeneration scheme varies depending on which designer you are using, but a typical scheme is to generate a string that starts with the class name that backs the element, followed by an advancing integer.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For example, if you introduce the first <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Button<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br209265)</ept> element to the designer, you might see that in the XAML this element has the <bpt id="p3">**</bpt>x:Name<ept id="p3">**</ept> attribute value of "Button1".</source>
          <target state="new">For example, if you introduce the first <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Button<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br209265)</ept> element to the designer, you might see that in the XAML this element has the <bpt id="p3">**</bpt>x:Name<ept id="p3">**</ept> attribute value of "Button1".</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>x:Name<ept id="p1">**</ept> cannot be set in XAML property element syntax, or in code using <bpt id="p2">[</bpt><bpt id="p3">**</bpt>SetValue<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br242361)</ept>.</source>
          <target state="new"><bpt id="p1">**</bpt>x:Name<ept id="p1">**</ept> cannot be set in XAML property element syntax, or in code using <bpt id="p2">[</bpt><bpt id="p3">**</bpt>SetValue<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br242361)</ept>.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>x:Name<ept id="p1">**</ept> can only be set using XAML attribute syntax on elements.</source>
          <target state="new"><bpt id="p1">**</bpt>x:Name<ept id="p1">**</ept> can only be set using XAML attribute syntax on elements.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  Specifically for C++/CX apps, a backing field for an <bpt id="p2">**</bpt>x:Name<ept id="p2">**</ept> reference is not created for the root element of a XAML file or page.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  Specifically for C++/CX apps, a backing field for an <bpt id="p2">**</bpt>x:Name<ept id="p2">**</ept> reference is not created for the root element of a XAML file or page.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>If you need to reference the root object from C++ code-behind, use other APIs or tree traversal.</source>
          <target state="new">If you need to reference the root object from C++ code-behind, use other APIs or tree traversal.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>For example you can call <bpt id="p1">[</bpt><bpt id="p2">**</bpt>FindName<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208715)</ept> for a known named child element and then call <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Parent<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br208739)</ept>.</source>
          <target state="new">For example you can call <bpt id="p1">[</bpt><bpt id="p2">**</bpt>FindName<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208715)</ept> for a known named child element and then call <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Parent<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br208739)</ept>.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>x:Name and other Name properties</source>
          <target state="new">x:Name and other Name properties</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Some types used in UWP XAML also have a property named <bpt id="p1">**</bpt>Name<ept id="p1">**</ept>.</source>
          <target state="new">Some types used in UWP XAML also have a property named <bpt id="p1">**</bpt>Name<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>For example, <bpt id="p1">[</bpt><bpt id="p2">**</bpt>FrameworkElement.Name<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208735)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>TextElement.Name<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/hh702125)</ept>.</source>
          <target state="new">For example, <bpt id="p1">[</bpt><bpt id="p2">**</bpt>FrameworkElement.Name<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208735)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>TextElement.Name<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/hh702125)</ept>.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">**</bpt>Name<ept id="p1">**</ept> is available as a settable property on an element, <bpt id="p2">**</bpt>Name<ept id="p2">**</ept> and <bpt id="p3">**</bpt>x:Name<ept id="p3">**</ept> can be used interchangeably in XAML, but an error results if both attributes are specified on the same element.</source>
          <target state="new">If <bpt id="p1">**</bpt>Name<ept id="p1">**</ept> is available as a settable property on an element, <bpt id="p2">**</bpt>Name<ept id="p2">**</ept> and <bpt id="p3">**</bpt>x:Name<ept id="p3">**</ept> can be used interchangeably in XAML, but an error results if both attributes are specified on the same element.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>There are also cases where there's a <bpt id="p1">**</bpt>Name<ept id="p1">**</ept> property but it's read-only (like <bpt id="p2">[</bpt><bpt id="p3">**</bpt>VisualState.Name<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br209031)</ept>).</source>
          <target state="new">There are also cases where there's a <bpt id="p1">**</bpt>Name<ept id="p1">**</ept> property but it's read-only (like <bpt id="p2">[</bpt><bpt id="p3">**</bpt>VisualState.Name<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br209031)</ept>).</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>If that's the case you always use <bpt id="p1">**</bpt>x:Name<ept id="p1">**</ept> to name that element in the XAML and the read-only <bpt id="p2">**</bpt>Name<ept id="p2">**</ept> exists for some less-common code scenario.</source>
          <target state="new">If that's the case you always use <bpt id="p1">**</bpt>x:Name<ept id="p1">**</ept> to name that element in the XAML and the read-only <bpt id="p2">**</bpt>Name<ept id="p2">**</ept> exists for some less-common code scenario.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  <bpt id="p2">[</bpt><bpt id="p3">**</bpt>FrameworkElement.Name<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br208735)</ept> generally should not be used as a way to change values originally set by <bpt id="p4">**</bpt>x:Name<ept id="p4">**</ept>, although there are some scenarios that are exceptions to that general rule.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  <bpt id="p2">[</bpt><bpt id="p3">**</bpt>FrameworkElement.Name<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br208735)</ept> generally should not be used as a way to change values originally set by <bpt id="p4">**</bpt>x:Name<ept id="p4">**</ept>, although there are some scenarios that are exceptions to that general rule.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>In typical scenarios, the creation and definition of XAML namescopes is a XAML processor operation.</source>
          <target state="new">In typical scenarios, the creation and definition of XAML namescopes is a XAML processor operation.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Modifying <bpt id="p1">**</bpt>FrameworkElement.Name<ept id="p1">**</ept> at run time can result in an inconsistent XAML namescope / private field naming alignment, which is hard to keep track of in your code-behind.</source>
          <target state="new">Modifying <bpt id="p1">**</bpt>FrameworkElement.Name<ept id="p1">**</ept> at run time can result in an inconsistent XAML namescope / private field naming alignment, which is hard to keep track of in your code-behind.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>x:Name and x:Key</source>
          <target state="new">x:Name and x:Key</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>x:Name<ept id="p1">**</ept> can be applied as an attribute to elements within a <bpt id="p2">[</bpt><bpt id="p3">**</bpt>ResourceDictionary<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br208794)</ept> to act as a substitute for the <bpt id="p4">[</bpt>x:Key attribute<ept id="p4">](x-key-attribute.md)</ept>.</source>
          <target state="new"><bpt id="p1">**</bpt>x:Name<ept id="p1">**</ept> can be applied as an attribute to elements within a <bpt id="p2">[</bpt><bpt id="p3">**</bpt>ResourceDictionary<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br208794)</ept> to act as a substitute for the <bpt id="p4">[</bpt>x:Key attribute<ept id="p4">](x-key-attribute.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>(Normally it's a rule that all elements in a <bpt id="p1">**</bpt>ResourceDictionary<ept id="p1">**</ept> must have an x:Key attribute.) This is common for <bpt id="p2">[</bpt>Storyboarded animations<ept id="p2">](https://msdn.microsoft.com/library/windows/apps/mt187354)</ept>.</source>
          <target state="new">(Normally it's a rule that all elements in a <bpt id="p1">**</bpt>ResourceDictionary<ept id="p1">**</ept> must have an x:Key attribute.) This is common for <bpt id="p2">[</bpt>Storyboarded animations<ept id="p2">](https://msdn.microsoft.com/library/windows/apps/mt187354)</ept>.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>For more info, see section of <bpt id="p1">[</bpt>ResourceDictionary and XAML resource references<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/mt187273)</ept>.</source>
          <target state="new">For more info, see section of <bpt id="p1">[</bpt>ResourceDictionary and XAML resource references<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/mt187273)</ept>.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>