<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci1\audio-video-camera\media-casting.md</xliffext:olfilepath>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">50bf5c1bb012ba7e81d44cbc93d78e2ea2e45520</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-e58fd48" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>This article shows you how to cast media to remote devices from a Universal Windows app.</source>
          <target state="new">This article shows you how to cast media to remote devices from a Universal Windows app.</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Media casting</source>
          <target state="new">Media casting</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Media casting</source>
          <target state="new">Media casting</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Updated for UWP apps on Windows 10.</source>
          <target state="new">Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept></source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept></target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This article shows you how to cast media to remote devices from a Universal Windows app.</source>
          <target state="new">This article shows you how to cast media to remote devices from a Universal Windows app.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Built-in media casting with MediaElement</source>
          <target state="new">Built-in media casting with MediaElement</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The simplest way to cast media from a Universal Windows app is to use the built-in casting capability of the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MediaElement<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242926)</ept> control.</source>
          <target state="new">The simplest way to cast media from a Universal Windows app is to use the built-in casting capability of the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MediaElement<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242926)</ept> control.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>To allow the user to open a video file to be played in the <bpt id="p1">**</bpt>MediaElement<ept id="p1">**</ept> control, add the following namespaces to your project.</source>
          <target state="new">To allow the user to open a video file to be played in the <bpt id="p1">**</bpt>MediaElement<ept id="p1">**</ept> control, add the following namespaces to your project.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>BuiltInCastingUsing</source>
          <target state="new">BuiltInCastingUsing</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In your app's XAML file, add a <bpt id="p1">**</bpt>MediaElement<ept id="p1">**</ept> and set <bpt id="p2">[</bpt><bpt id="p3">**</bpt>AreTransportControlsEnabled<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/dn298977)</ept> to true.</source>
          <target state="new">In your app's XAML file, add a <bpt id="p1">**</bpt>MediaElement<ept id="p1">**</ept> and set <bpt id="p2">[</bpt><bpt id="p3">**</bpt>AreTransportControlsEnabled<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/dn298977)</ept> to true.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>MediaElement</source>
          <target state="new">MediaElement</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Add a button to let the user initiate picking a file.</source>
          <target state="new">Add a button to let the user initiate picking a file.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>OpenButton</source>
          <target state="new">OpenButton</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Click<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br227737)</ept> event handler for the button, create a new instance of the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>FileOpenPicker<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br207847)</ept>, add video file types to the <bpt id="p5">[</bpt><bpt id="p6">**</bpt>FileTypeFilter<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/br207850)</ept> collection, and set the starting location to the user's videos library.</source>
          <target state="new">In the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Click<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br227737)</ept> event handler for the button, create a new instance of the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>FileOpenPicker<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br207847)</ept>, add video file types to the <bpt id="p5">[</bpt><bpt id="p6">**</bpt>FileTypeFilter<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/br207850)</ept> collection, and set the starting location to the user's videos library.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Call <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PickSingleFileAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/jj635275)</ept> to launch the file picker dialog.</source>
          <target state="new">Call <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PickSingleFileAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/jj635275)</ept> to launch the file picker dialog.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>When this method returns, the result is a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StorageFile<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br227171)</ept> object representing the video file.</source>
          <target state="new">When this method returns, the result is a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StorageFile<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br227171)</ept> object representing the video file.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Check to make sure the file isn't null, which it will be if the user cancels the picking operation.</source>
          <target state="new">Check to make sure the file isn't null, which it will be if the user cancels the picking operation.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Call the file's <bpt id="p1">[</bpt><bpt id="p2">**</bpt>OpenAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br227221.aspx)</ept> method to get an <bpt id="p3">[</bpt><bpt id="p4">**</bpt>IRandomAccessStream<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br241731)</ept> for the file.</source>
          <target state="new">Call the file's <bpt id="p1">[</bpt><bpt id="p2">**</bpt>OpenAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br227221.aspx)</ept> method to get an <bpt id="p3">[</bpt><bpt id="p4">**</bpt>IRandomAccessStream<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br241731)</ept> for the file.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Finally, call the <bpt id="p1">**</bpt>MediaElement<ept id="p1">**</ept> object's <bpt id="p2">[</bpt><bpt id="p3">**</bpt>SetSource<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br244338)</ept> method to make the video file the video source for the control.</source>
          <target state="new">Finally, call the <bpt id="p1">**</bpt>MediaElement<ept id="p1">**</ept> object's <bpt id="p2">[</bpt><bpt id="p3">**</bpt>SetSource<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br244338)</ept> method to make the video file the video source for the control.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>OpenButtonClick</source>
          <target state="new">OpenButtonClick</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Once the video is loaded in the <bpt id="p1">**</bpt>MediaElement<ept id="p1">**</ept>, the user can simply press the casting button on the transport controls to launch a built-in dialog that allows them to choose a device to which the loaded media will be cast.</source>
          <target state="new">Once the video is loaded in the <bpt id="p1">**</bpt>MediaElement<ept id="p1">**</ept>, the user can simply press the casting button on the transport controls to launch a built-in dialog that allows them to choose a device to which the loaded media will be cast.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>mediaelement casting button</source>
          <target state="new">mediaelement casting button</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Media casting with the CastingDevicePicker</source>
          <target state="new">Media casting with the CastingDevicePicker</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>A second way to cast media to a device is to use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CastingDevicePicker<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn972525)</ept>.</source>
          <target state="new">A second way to cast media to a device is to use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CastingDevicePicker<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn972525)</ept>.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>To use this class, include the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows.Media.Casting<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn972568)</ept> namespace in your project.</source>
          <target state="new">To use this class, include the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows.Media.Casting<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn972568)</ept> namespace in your project.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>CastingNamespace</source>
          <target state="new">CastingNamespace</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Declare a member variable for the <bpt id="p1">**</bpt>CastingDevicePicker<ept id="p1">**</ept> object.</source>
          <target state="new">Declare a member variable for the <bpt id="p1">**</bpt>CastingDevicePicker<ept id="p1">**</ept> object.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>DeclareCastingPicker</source>
          <target state="new">DeclareCastingPicker</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>When you page is initialized, create a new instance of the casting picker and set the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Filter<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn972540)</ept> to <bpt id="p3">[</bpt><bpt id="p4">**</bpt>SupportsVideo<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn972526)</ept> property to indicate that the casting devices listed by the picker should support video.</source>
          <target state="new">When you page is initialized, create a new instance of the casting picker and set the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Filter<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn972540)</ept> to <bpt id="p3">[</bpt><bpt id="p4">**</bpt>SupportsVideo<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn972526)</ept> property to indicate that the casting devices listed by the picker should support video.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Register a handler for the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CastingDeviceSelected<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn972539)</ept> event, which is raised when the user picks a device for casting.</source>
          <target state="new">Register a handler for the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CastingDeviceSelected<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn972539)</ept> event, which is raised when the user picks a device for casting.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>InitCastingPicker</source>
          <target state="new">InitCastingPicker</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>In your XAML file, add a button to allow the user to launch the picker.</source>
          <target state="new">In your XAML file, add a button to allow the user to launch the picker.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>CastPickerButton</source>
          <target state="new">CastPickerButton</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Click<ept id="p1">**</ept> event handler for the button, call <bpt id="p2">[</bpt><bpt id="p3">**</bpt>TransformToVisual<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br208986)</ept> to get the transform of a UI element relative to another element.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Click<ept id="p1">**</ept> event handler for the button, call <bpt id="p2">[</bpt><bpt id="p3">**</bpt>TransformToVisual<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br208986)</ept> to get the transform of a UI element relative to another element.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>In this example, the transform is the position of the cast picker button relative to the visual root of the application window.</source>
          <target state="new">In this example, the transform is the position of the cast picker button relative to the visual root of the application window.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Call the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Show<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn972542)</ept> method of the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>CastingDevicePicker<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn972525)</ept> object to launch the casting picker dialog.</source>
          <target state="new">Call the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Show<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn972542)</ept> method of the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>CastingDevicePicker<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn972525)</ept> object to launch the casting picker dialog.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Specify the location and dimensions of the cast picker button so that the system can make the dialog fly out from the button that the user pressed.</source>
          <target state="new">Specify the location and dimensions of the cast picker button so that the system can make the dialog fly out from the button that the user pressed.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>CastPickerButtonClick</source>
          <target state="new">CastPickerButtonClick</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>CastingDeviceSelected<ept id="p1">**</ept> event handler, call the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>CreateCastingConnection<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/dn972547)</ept> method of the <bpt id="p4">[</bpt><bpt id="p5">**</bpt>SelectedCastingDevice<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/dn972546)</ept> property of the event args, which represents the casting device selected by the user.</source>
          <target state="new">In the <bpt id="p1">**</bpt>CastingDeviceSelected<ept id="p1">**</ept> event handler, call the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>CreateCastingConnection<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/dn972547)</ept> method of the <bpt id="p4">[</bpt><bpt id="p5">**</bpt>SelectedCastingDevice<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/dn972546)</ept> property of the event args, which represents the casting device selected by the user.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Register handlers for the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ErrorOccurred<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn972519)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>StateChanged<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn972523)</ept> events.</source>
          <target state="new">Register handlers for the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ErrorOccurred<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn972519)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>StateChanged<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn972523)</ept> events.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Finally, call <bpt id="p1">[</bpt><bpt id="p2">**</bpt>RequestStartCastingAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn972520)</ept> to begin casting, passing in the result of the <bpt id="p3">**</bpt>MediaElement<ept id="p3">**</ept> object's <bpt id="p4">[</bpt><bpt id="p5">**</bpt>GetAsCastingSource<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/dn920012)</ept> method to specify that the media to be cast is the content of the <bpt id="p6">**</bpt>MediaElement<ept id="p6">**</ept>.</source>
          <target state="new">Finally, call <bpt id="p1">[</bpt><bpt id="p2">**</bpt>RequestStartCastingAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn972520)</ept> to begin casting, passing in the result of the <bpt id="p3">**</bpt>MediaElement<ept id="p3">**</ept> object's <bpt id="p4">[</bpt><bpt id="p5">**</bpt>GetAsCastingSource<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/dn920012)</ept> method to specify that the media to be cast is the content of the <bpt id="p6">**</bpt>MediaElement<ept id="p6">**</ept>.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  The casting connection must be initiated on the UI thread.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  The casting connection must be initiated on the UI thread.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Since the <bpt id="p1">**</bpt>CastingDeviceSelected<ept id="p1">**</ept> is not called on the UI thread, you must place these calls inside a call to <bpt id="p2">[</bpt><bpt id="p3">**</bpt>CoreDispatcher.RunAsync<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/hh750317)</ept> which causes them to be called on the UI thread.</source>
          <target state="new">Since the <bpt id="p1">**</bpt>CastingDeviceSelected<ept id="p1">**</ept> is not called on the UI thread, you must place these calls inside a call to <bpt id="p2">[</bpt><bpt id="p3">**</bpt>CoreDispatcher.RunAsync<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/hh750317)</ept> which causes them to be called on the UI thread.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>CastingDeviceSelected</source>
          <target state="new">CastingDeviceSelected</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>ErrorOccurred<ept id="p1">**</ept> and <bpt id="p2">**</bpt>StateChanged<ept id="p2">**</ept> event handlers, you should update your UI to inform the user of the current casting status.</source>
          <target state="new">In the <bpt id="p1">**</bpt>ErrorOccurred<ept id="p1">**</ept> and <bpt id="p2">**</bpt>StateChanged<ept id="p2">**</ept> event handlers, you should update your UI to inform the user of the current casting status.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>These events are discussed in detail in the following section on creating a custom casting device picker.</source>
          <target state="new">These events are discussed in detail in the following section on creating a custom casting device picker.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>EmptyStateHandlers</source>
          <target state="new">EmptyStateHandlers</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Media casting with a custom device picker</source>
          <target state="new">Media casting with a custom device picker</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The following section describes how to create your own casting device picker UI by enumerating the casting devices and initiating the connection from your code.</source>
          <target state="new">The following section describes how to create your own casting device picker UI by enumerating the casting devices and initiating the connection from your code.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>To enumerate the available casting devices, include the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows.Devices.Enumeration<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br225459)</ept> namespace in your project.</source>
          <target state="new">To enumerate the available casting devices, include the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows.Devices.Enumeration<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br225459)</ept> namespace in your project.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>EnumerationNamespace</source>
          <target state="new">EnumerationNamespace</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Add the following controls to your XAML page to implement the rudimentary UI for this example:</source>
          <target state="new">Add the following controls to your XAML page to implement the rudimentary UI for this example:</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>A button to start the device watcher that looks for available casting devices.</source>
          <target state="new">A button to start the device watcher that looks for available casting devices.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ProgressRing<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br227538)</ept> control to provide feedback to the user that casting enumeration is ongoing.</source>
          <target state="new">A <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ProgressRing<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br227538)</ept> control to provide feedback to the user that casting enumeration is ongoing.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ListBox<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242868)</ept> to list the discovered casting devices.</source>
          <target state="new">A <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ListBox<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242868)</ept> to list the discovered casting devices.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Define an <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ItemTemplate<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242830)</ept> for the control so that we can assign the casting device objects directly to the control and still display the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>FriendlyName<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn972549)</ept> property.</source>
          <target state="new">Define an <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ItemTemplate<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242830)</ept> for the control so that we can assign the casting device objects directly to the control and still display the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>FriendlyName<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn972549)</ept> property.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>A button to allow the user to disconnect the casting device.</source>
          <target state="new">A button to allow the user to disconnect the casting device.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>CustomPickerXAML</source>
          <target state="new">CustomPickerXAML</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>In your code behind, declare member variables for the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DeviceWatcher<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br225446)</ept> and the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>CastingConnection<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn972510)</ept>.</source>
          <target state="new">In your code behind, declare member variables for the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DeviceWatcher<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br225446)</ept> and the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>CastingConnection<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn972510)</ept>.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>DeclareDeviceWatcher</source>
          <target state="new">DeclareDeviceWatcher</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Click<ept id="p1">**</ept> handler for the <bpt id="p2">*</bpt>startWatcherButton<ept id="p2">*</ept>, first update the UI by disabling the button and making the progress ring active while device enumeration is ongoing.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Click<ept id="p1">**</ept> handler for the <bpt id="p2">*</bpt>startWatcherButton<ept id="p2">*</ept>, first update the UI by disabling the button and making the progress ring active while device enumeration is ongoing.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Clear the list box of casting devices.</source>
          <target state="new">Clear the list box of casting devices.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Next, create a device watcher by calling <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DeviceInformation.CreateWatcher<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br225427)</ept>.</source>
          <target state="new">Next, create a device watcher by calling <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DeviceInformation.CreateWatcher<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br225427)</ept>.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>This method can be used to watch for many different types of devices.</source>
          <target state="new">This method can be used to watch for many different types of devices.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Specify that you want to watch for devices that support video casting by using the device selector string returned by <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CastingDevice.GetDeviceSelector<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn972551)</ept>.</source>
          <target state="new">Specify that you want to watch for devices that support video casting by using the device selector string returned by <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CastingDevice.GetDeviceSelector<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn972551)</ept>.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Finally, register event handlers for the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Added<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br225450)</ept>, <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Removed<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br225453)</ept>, <bpt id="p5">[</bpt><bpt id="p6">**</bpt>EnumerationCompleted<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/br225451)</ept>, and <bpt id="p7">[</bpt><bpt id="p8">**</bpt>Stopped<ept id="p8">**</ept><ept id="p7">](https://msdn.microsoft.com/library/windows/apps/br225457)</ept> events.</source>
          <target state="new">Finally, register event handlers for the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Added<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br225450)</ept>, <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Removed<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br225453)</ept>, <bpt id="p5">[</bpt><bpt id="p6">**</bpt>EnumerationCompleted<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/br225451)</ept>, and <bpt id="p7">[</bpt><bpt id="p8">**</bpt>Stopped<ept id="p8">**</ept><ept id="p7">](https://msdn.microsoft.com/library/windows/apps/br225457)</ept> events.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>StartWatcherButtonClick</source>
          <target state="new">StartWatcherButtonClick</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Added<ept id="p1">**</ept> event is raised when a new device is discovered by the watcher.</source>
          <target state="new">The <bpt id="p1">**</bpt>Added<ept id="p1">**</ept> event is raised when a new device is discovered by the watcher.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>In the handler for this event, create a new <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CastingDevice<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn972524)</ept> object by calling <bpt id="p3">[</bpt><bpt id="p4">**</bpt>CastingDevice.FromIdAsync<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn972550)</ept> and passing in the ID of the discovered casting device, which is contained in the <bpt id="p5">**</bpt>DeviceInformation<ept id="p5">**</ept> object passed into the handler.</source>
          <target state="new">In the handler for this event, create a new <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CastingDevice<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn972524)</ept> object by calling <bpt id="p3">[</bpt><bpt id="p4">**</bpt>CastingDevice.FromIdAsync<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn972550)</ept> and passing in the ID of the discovered casting device, which is contained in the <bpt id="p5">**</bpt>DeviceInformation<ept id="p5">**</ept> object passed into the handler.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Add the <bpt id="p1">**</bpt>CastingDevice<ept id="p1">**</ept> to the casting device <bpt id="p2">**</bpt>ListBox<ept id="p2">**</ept> so that the user can select it.</source>
          <target state="new">Add the <bpt id="p1">**</bpt>CastingDevice<ept id="p1">**</ept> to the casting device <bpt id="p2">**</bpt>ListBox<ept id="p2">**</ept> so that the user can select it.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Because of the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ItemTemplate<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242830)</ept> defined in the XAML, the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>FriendlyName<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn972549)</ept> property will be used as the item text for in the list box.</source>
          <target state="new">Because of the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ItemTemplate<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242830)</ept> defined in the XAML, the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>FriendlyName<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn972549)</ept> property will be used as the item text for in the list box.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Because this event handler is not called on the UI thread, you must update the UI from within a call to <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CoreDispatcher.RunAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh750317)</ept>.</source>
          <target state="new">Because this event handler is not called on the UI thread, you must update the UI from within a call to <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CoreDispatcher.RunAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh750317)</ept>.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>WatcherAdded</source>
          <target state="new">WatcherAdded</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Removed<ept id="p1">**</ept> event is raised when the watcher detects that a casting device is no longer present.</source>
          <target state="new">The <bpt id="p1">**</bpt>Removed<ept id="p1">**</ept> event is raised when the watcher detects that a casting device is no longer present.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Compare the ID property of the <bpt id="p1">**</bpt>Added<ept id="p1">**</ept> object passed into the handler to the ID of each <bpt id="p2">**</bpt>Added<ept id="p2">**</ept> in the list box's <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Items<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br242823)</ept> collection.</source>
          <target state="new">Compare the ID property of the <bpt id="p1">**</bpt>Added<ept id="p1">**</ept> object passed into the handler to the ID of each <bpt id="p2">**</bpt>Added<ept id="p2">**</ept> in the list box's <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Items<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br242823)</ept> collection.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>If the ID matches, remove that object from the collection.</source>
          <target state="new">If the ID matches, remove that object from the collection.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Again, because the UI is being updated, this call must be made from within a <bpt id="p1">**</bpt>RunAsync<ept id="p1">**</ept> call.</source>
          <target state="new">Again, because the UI is being updated, this call must be made from within a <bpt id="p1">**</bpt>RunAsync<ept id="p1">**</ept> call.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>WatcherRemoved</source>
          <target state="new">WatcherRemoved</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>EnumerationCompleted<ept id="p1">**</ept> event is raised when the watcher has finished detecting devices.</source>
          <target state="new">The <bpt id="p1">**</bpt>EnumerationCompleted<ept id="p1">**</ept> event is raised when the watcher has finished detecting devices.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>In the handler for this event, update the UI to let the user know that device enumeration has completed and stop the device watcher by calling <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Stop<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br225456)</ept>.</source>
          <target state="new">In the handler for this event, update the UI to let the user know that device enumeration has completed and stop the device watcher by calling <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Stop<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br225456)</ept>.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>WatcherEnumerationCompleted</source>
          <target state="new">WatcherEnumerationCompleted</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The Stopped event is raised when the device watcher has finished stopping.</source>
          <target state="new">The Stopped event is raised when the device watcher has finished stopping.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>In the handler for this event, stop the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ProgressRing<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br227538)</ept> control and reenable the <bpt id="p3">*</bpt>startWatcherButton<ept id="p3">*</ept> so that the user can restart the device enumeration process.</source>
          <target state="new">In the handler for this event, stop the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ProgressRing<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br227538)</ept> control and reenable the <bpt id="p3">*</bpt>startWatcherButton<ept id="p3">*</ept> so that the user can restart the device enumeration process.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>WatcherStopped</source>
          <target state="new">WatcherStopped</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>When the user selects one of the casting devices from the list box, the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SelectionChanged<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br209776)</ept> event is raised.</source>
          <target state="new">When the user selects one of the casting devices from the list box, the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SelectionChanged<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br209776)</ept> event is raised.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>It is within this handler that the casting connection will be created and casting will be started.</source>
          <target state="new">It is within this handler that the casting connection will be created and casting will be started.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>First, make sure the device watcher is stopped so that device enumeration doesn't interfere with media casting.</source>
          <target state="new">First, make sure the device watcher is stopped so that device enumeration doesn't interfere with media casting.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Create a casting connection by calling <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CreateCastingConnection<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn972547)</ept> on the <bpt id="p3">**</bpt>CastingDevice<ept id="p3">**</ept> object selected by the user.</source>
          <target state="new">Create a casting connection by calling <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CreateCastingConnection<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn972547)</ept> on the <bpt id="p3">**</bpt>CastingDevice<ept id="p3">**</ept> object selected by the user.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Add event handlers for the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StateChanged<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn972523)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>ErrorOccurred<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn972519)</ept> events.</source>
          <target state="new">Add event handlers for the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StateChanged<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn972523)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>ErrorOccurred<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn972519)</ept> events.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Start media casting by calling <bpt id="p1">[</bpt><bpt id="p2">**</bpt>RequestStartCastingAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn972520)</ept>, passing in the casting source returned by calling the <bpt id="p3">**</bpt>MediaElement<ept id="p3">**</ept> method <bpt id="p4">[</bpt><bpt id="p5">**</bpt>GetAsCastingSource<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/dn920012)</ept>.</source>
          <target state="new">Start media casting by calling <bpt id="p1">[</bpt><bpt id="p2">**</bpt>RequestStartCastingAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn972520)</ept>, passing in the casting source returned by calling the <bpt id="p3">**</bpt>MediaElement<ept id="p3">**</ept> method <bpt id="p4">[</bpt><bpt id="p5">**</bpt>GetAsCastingSource<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/dn920012)</ept>.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Finally, make the disconnect button visible to allow the user to stop media casting.</source>
          <target state="new">Finally, make the disconnect button visible to allow the user to stop media casting.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>SelectionChanged</source>
          <target state="new">SelectionChanged</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>In the state changed handler, the action you take depends on the new state of the casting connection:</source>
          <target state="new">In the state changed handler, the action you take depends on the new state of the casting connection:</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>If the state is <bpt id="p1">**</bpt>Connected<ept id="p1">**</ept> or <bpt id="p2">**</bpt>Rendering<ept id="p2">**</ept>, make sure the <bpt id="p3">**</bpt>ProgressRing<ept id="p3">**</ept> control is inactive and the disconnect button is visible.</source>
          <target state="new">If the state is <bpt id="p1">**</bpt>Connected<ept id="p1">**</ept> or <bpt id="p2">**</bpt>Rendering<ept id="p2">**</ept>, make sure the <bpt id="p3">**</bpt>ProgressRing<ept id="p3">**</ept> control is inactive and the disconnect button is visible.</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>If the state is <bpt id="p1">**</bpt>Disconnected<ept id="p1">**</ept>, unselect the current casting device in the list box, make the <bpt id="p2">**</bpt>ProgressRing<ept id="p2">**</ept> control inactive, and hide the disconnect button.</source>
          <target state="new">If the state is <bpt id="p1">**</bpt>Disconnected<ept id="p1">**</ept>, unselect the current casting device in the list box, make the <bpt id="p2">**</bpt>ProgressRing<ept id="p2">**</ept> control inactive, and hide the disconnect button.</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>If the state is <bpt id="p1">**</bpt>Connecting<ept id="p1">**</ept>, make the <bpt id="p2">**</bpt>ProgressRing<ept id="p2">**</ept> control active and hide the disconnect button.</source>
          <target state="new">If the state is <bpt id="p1">**</bpt>Connecting<ept id="p1">**</ept>, make the <bpt id="p2">**</bpt>ProgressRing<ept id="p2">**</ept> control active and hide the disconnect button.</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>If the state is <bpt id="p1">**</bpt>Disconnecting<ept id="p1">**</ept>, make the <bpt id="p2">**</bpt>ProgressRing<ept id="p2">**</ept> control active and hide the disconnect button.</source>
          <target state="new">If the state is <bpt id="p1">**</bpt>Disconnecting<ept id="p1">**</ept>, make the <bpt id="p2">**</bpt>ProgressRing<ept id="p2">**</ept> control active and hide the disconnect button.</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>StateChanged</source>
          <target state="new">StateChanged</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>In the handler for the <bpt id="p1">**</bpt>ErrorOccurred<ept id="p1">**</ept> event, update your UI to let the user know that a casting error occurred and unselect the current <bpt id="p2">**</bpt>CastingDevice<ept id="p2">**</ept> object in the list box.</source>
          <target state="new">In the handler for the <bpt id="p1">**</bpt>ErrorOccurred<ept id="p1">**</ept> event, update your UI to let the user know that a casting error occurred and unselect the current <bpt id="p2">**</bpt>CastingDevice<ept id="p2">**</ept> object in the list box.</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>ErrorOccurred</source>
          <target state="new">ErrorOccurred</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Finally, implement the handler for the disconnect button.</source>
          <target state="new">Finally, implement the handler for the disconnect button.</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Stop media casting and disconnect from the casting device by calling the <bpt id="p1">**</bpt>CastingConnection<ept id="p1">**</ept> object's <bpt id="p2">[</bpt><bpt id="p3">**</bpt>DisconnectAsync<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/dn972518)</ept> method.</source>
          <target state="new">Stop media casting and disconnect from the casting device by calling the <bpt id="p1">**</bpt>CastingConnection<ept id="p1">**</ept> object's <bpt id="p2">[</bpt><bpt id="p3">**</bpt>DisconnectAsync<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/dn972518)</ept> method.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>This call must be dispatched to the UI thread by calling <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CoreDispatcher.RunAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh750317)</ept>.</source>
          <target state="new">This call must be dispatched to the UI thread by calling <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CoreDispatcher.RunAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh750317)</ept>.</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>DisconnectButton</source>
          <target state="new">DisconnectButton</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>