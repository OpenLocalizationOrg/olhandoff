<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci1\audio-video-camera\midi.md</xliffext:olfilepath>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fba2fba93aee7dba649dcc95de8ee3f73f9e3350</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-e58fd48" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>This article shows you how to enumerate MIDI (Musical Instrument Digital Interface) devices and send and receive MIDI messages from a Universal Windows app.</source>
          <target state="new">This article shows you how to enumerate MIDI (Musical Instrument Digital Interface) devices and send and receive MIDI messages from a Universal Windows app.</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>MIDI</source>
          <target state="new">MIDI</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>MIDI</source>
          <target state="new">MIDI</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Updated for UWP apps on Windows 10.</source>
          <target state="new">Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept></source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept></target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This article shows you how to enumerate MIDI (Musical Instrument Digital Interface) devices and send and receive MIDI messages from a Universal Windows app.</source>
          <target state="new">This article shows you how to enumerate MIDI (Musical Instrument Digital Interface) devices and send and receive MIDI messages from a Universal Windows app.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Enumerate MIDI devices</source>
          <target state="new">Enumerate MIDI devices</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Before enumerating and using MIDI devices, add the following namespaces to your project.</source>
          <target state="new">Before enumerating and using MIDI devices, add the following namespaces to your project.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Using</source>
          <target state="new">Using</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Add a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ListBox<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242868)</ept> control to your XAML page that will allow the user to select one of the MIDI input devices attached to the system.</source>
          <target state="new">Add a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ListBox<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242868)</ept> control to your XAML page that will allow the user to select one of the MIDI input devices attached to the system.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Add another one to list the MIDI output devices.</source>
          <target state="new">Add another one to list the MIDI output devices.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>MidiListBoxes</source>
          <target state="new">MidiListBoxes</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>FindAllAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br225432)</ept> method <bpt id="p3">[</bpt><bpt id="p4">**</bpt>DeviceInformation<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br225393)</ept> class is used to enumerate many different types of devices that are recognized by Windows.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>FindAllAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br225432)</ept> method <bpt id="p3">[</bpt><bpt id="p4">**</bpt>DeviceInformation<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br225393)</ept> class is used to enumerate many different types of devices that are recognized by Windows.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>To specify that you only want the method to find MIDI input devices, use the selector string returned by <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MidiInPort.GetDeviceSelector<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn894779)</ept>.</source>
          <target state="new">To specify that you only want the method to find MIDI input devices, use the selector string returned by <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MidiInPort.GetDeviceSelector<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn894779)</ept>.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>FindAllAsync<ept id="p1">**</ept> returns a <bpt id="p2">[</bpt><bpt id="p3">**</bpt>DeviceInformationCollection<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br225395)</ept> that contains a <bpt id="p4">**</bpt>DeviceInformation<ept id="p4">**</ept> for each MIDI input device registered with the system.</source>
          <target state="new"><bpt id="p1">**</bpt>FindAllAsync<ept id="p1">**</ept> returns a <bpt id="p2">[</bpt><bpt id="p3">**</bpt>DeviceInformationCollection<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br225395)</ept> that contains a <bpt id="p4">**</bpt>DeviceInformation<ept id="p4">**</ept> for each MIDI input device registered with the system.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If the returned collection contains no items, then there are no available MIDI input devices.</source>
          <target state="new">If the returned collection contains no items, then there are no available MIDI input devices.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If there are items in the collection, loop through the <bpt id="p1">**</bpt>DeviceInformation<ept id="p1">**</ept> objects and add the name of each device to the MIDI input device <bpt id="p2">**</bpt>ListBox<ept id="p2">**</ept>.</source>
          <target state="new">If there are items in the collection, loop through the <bpt id="p1">**</bpt>DeviceInformation<ept id="p1">**</ept> objects and add the name of each device to the MIDI input device <bpt id="p2">**</bpt>ListBox<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>EnumerateMidiInputDevices</source>
          <target state="new">EnumerateMidiInputDevices</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Enumerating MIDI output devices works the exact same way as enumerating input devices, except that you should specify the selector string returned by <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MidiOutPort.GetDeviceSelector<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn894845)</ept> when calling <bpt id="p3">**</bpt>FindAllAsync<ept id="p3">**</ept>.</source>
          <target state="new">Enumerating MIDI output devices works the exact same way as enumerating input devices, except that you should specify the selector string returned by <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MidiOutPort.GetDeviceSelector<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn894845)</ept> when calling <bpt id="p3">**</bpt>FindAllAsync<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>EnumerateMidiOutputDevices</source>
          <target state="new">EnumerateMidiOutputDevices</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Create a device watcher helper class</source>
          <target state="new">Create a device watcher helper class</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows.Devices.Enumeration<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br225459)</ept> namespace provides the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>DeviceWatcher<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br225446)</ept> which can notify your app if devices are added or removed from the system, or if the information for a device is updated.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows.Devices.Enumeration<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br225459)</ept> namespace provides the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>DeviceWatcher<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br225446)</ept> which can notify your app if devices are added or removed from the system, or if the information for a device is updated.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Since MIDI-enabled apps typically are interested in both input and output devices, this example creates a helper class that implements the <bpt id="p1">**</bpt>DeviceWatcher<ept id="p1">**</ept> pattern, so that the same code can be used for both MIDI input and MIDI output devices, without the need for duplication.</source>
          <target state="new">Since MIDI-enabled apps typically are interested in both input and output devices, this example creates a helper class that implements the <bpt id="p1">**</bpt>DeviceWatcher<ept id="p1">**</ept> pattern, so that the same code can be used for both MIDI input and MIDI output devices, without the need for duplication.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Add a new class to your project to serve as your device watcher.</source>
          <target state="new">Add a new class to your project to serve as your device watcher.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>In this example the class is named <bpt id="p1">**</bpt>MyMidiDeviceWatcher<ept id="p1">**</ept>.</source>
          <target state="new">In this example the class is named <bpt id="p1">**</bpt>MyMidiDeviceWatcher<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The rest of the code in this section is used to implement the helper class.</source>
          <target state="new">The rest of the code in this section is used to implement the helper class.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Add some member variables to the class:</source>
          <target state="new">Add some member variables to the class:</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DeviceWatcher<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br225446)</ept> object that will monitor for device changes.</source>
          <target state="new">A <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DeviceWatcher<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br225446)</ept> object that will monitor for device changes.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>A device selector string that will contain the MIDI in port selector string for one instance and the MIDI out port selector string for another instance.</source>
          <target state="new">A device selector string that will contain the MIDI in port selector string for one instance and the MIDI out port selector string for another instance.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ListBox<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242868)</ept> control that will be populated with the names of the available devices.</source>
          <target state="new">A <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ListBox<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242868)</ept> control that will be populated with the names of the available devices.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CoreDispatcher<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208211)</ept> that is required to update the UI from a thread other than the UI thread.</source>
          <target state="new">A <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CoreDispatcher<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208211)</ept> that is required to update the UI from a thread other than the UI thread.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>WatcherVariables</source>
          <target state="new">WatcherVariables</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Add a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DeviceInformationCollection<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br225395)</ept> property that is used to access the current list of devices from outside the helper class.</source>
          <target state="new">Add a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DeviceInformationCollection<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br225395)</ept> property that is used to access the current list of devices from outside the helper class.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>DeclareDeviceInformationCollection</source>
          <target state="new">DeclareDeviceInformationCollection</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>In class constructor, the caller passes in the MIDI device selector string, the <bpt id="p1">**</bpt>ListBox<ept id="p1">**</ept> for listing the devices, and the <bpt id="p2">**</bpt>Dispatcher<ept id="p2">**</ept> needed to update the UI.</source>
          <target state="new">In class constructor, the caller passes in the MIDI device selector string, the <bpt id="p1">**</bpt>ListBox<ept id="p1">**</ept> for listing the devices, and the <bpt id="p2">**</bpt>Dispatcher<ept id="p2">**</ept> needed to update the UI.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Call <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DeviceInformation.CreateWatcher<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br225427)</ept> to create a new instance of the <bpt id="p3">**</bpt>DeviceWatcher<ept id="p3">**</ept> class, passing in the MIDI device selector string.</source>
          <target state="new">Call <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DeviceInformation.CreateWatcher<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br225427)</ept> to create a new instance of the <bpt id="p3">**</bpt>DeviceWatcher<ept id="p3">**</ept> class, passing in the MIDI device selector string.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Register handlers for the watcher's event handlers.</source>
          <target state="new">Register handlers for the watcher's event handlers.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>WatcherConstructor</source>
          <target state="new">WatcherConstructor</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>DeviceWatcher<ept id="p1">**</ept> has the following events:</source>
          <target state="new">The <bpt id="p1">**</bpt>DeviceWatcher<ept id="p1">**</ept> has the following events:</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>Added<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br225450)</ept> - Raised when a new device is added to the system.</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>Added<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br225450)</ept> - Raised when a new device is added to the system.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>Removed<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br225453)</ept> - Raised when a device is removed from the system.</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>Removed<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br225453)</ept> - Raised when a device is removed from the system.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>Updated<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br225458)</ept> - Raised when the information associated with an existing device is updated.</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>Updated<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br225458)</ept> - Raised when the information associated with an existing device is updated.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>EnumerationCompleted<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br225451)</ept> - Raised when the watcher has completed its enumeration of the requested device type.</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>EnumerationCompleted<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br225451)</ept> - Raised when the watcher has completed its enumeration of the requested device type.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>In the event handler for each of these events, a helper method, <bpt id="p1">**</bpt>UpdateDevices<ept id="p1">**</ept>, is called to update the <bpt id="p2">**</bpt>ListBox<ept id="p2">**</ept> with the current list of devices.</source>
          <target state="new">In the event handler for each of these events, a helper method, <bpt id="p1">**</bpt>UpdateDevices<ept id="p1">**</ept>, is called to update the <bpt id="p2">**</bpt>ListBox<ept id="p2">**</ept> with the current list of devices.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Because <bpt id="p1">**</bpt>UpdateDevices<ept id="p1">**</ept> updates UI elements and these event handlers are not called on the UI thread, each call must be wrapped in a call to <bpt id="p2">[</bpt><bpt id="p3">**</bpt>RunAsync<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/hh750317)</ept>, which causes the specified code to be run on the UI thread.</source>
          <target state="new">Because <bpt id="p1">**</bpt>UpdateDevices<ept id="p1">**</ept> updates UI elements and these event handlers are not called on the UI thread, each call must be wrapped in a call to <bpt id="p2">[</bpt><bpt id="p3">**</bpt>RunAsync<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/hh750317)</ept>, which causes the specified code to be run on the UI thread.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>WatcherEventHandlers</source>
          <target state="new">WatcherEventHandlers</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>UpdateDevices<ept id="p1">**</ept> helper method calls <bpt id="p2">[</bpt><bpt id="p3">**</bpt>DeviceInformation.FindAllAsync<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br225432)</ept> and updates the <bpt id="p4">**</bpt>ListBox<ept id="p4">**</ept> with the names of the returned devices as described previously in this article.</source>
          <target state="new">The <bpt id="p1">**</bpt>UpdateDevices<ept id="p1">**</ept> helper method calls <bpt id="p2">[</bpt><bpt id="p3">**</bpt>DeviceInformation.FindAllAsync<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br225432)</ept> and updates the <bpt id="p4">**</bpt>ListBox<ept id="p4">**</ept> with the names of the returned devices as described previously in this article.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>WatcherUpdateDevices</source>
          <target state="new">WatcherUpdateDevices</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Add methods to start the watcher, using the <bpt id="p1">**</bpt>DeviceWatcher<ept id="p1">**</ept> object's <bpt id="p2">[</bpt><bpt id="p3">**</bpt>Start<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br225454)</ept> method, and to stop the watcher, using the <bpt id="p4">[</bpt><bpt id="p5">**</bpt>Stop<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/br225456)</ept> method.</source>
          <target state="new">Add methods to start the watcher, using the <bpt id="p1">**</bpt>DeviceWatcher<ept id="p1">**</ept> object's <bpt id="p2">[</bpt><bpt id="p3">**</bpt>Start<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br225454)</ept> method, and to stop the watcher, using the <bpt id="p4">[</bpt><bpt id="p5">**</bpt>Stop<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/br225456)</ept> method.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>WatcherStopStart</source>
          <target state="new">WatcherStopStart</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Provide a destructor to unregister the watcher event handlers and set the device watcher to null.</source>
          <target state="new">Provide a destructor to unregister the watcher event handlers and set the device watcher to null.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>WatcherDestructor</source>
          <target state="new">WatcherDestructor</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Create MIDI ports to send and receive messages</source>
          <target state="new">Create MIDI ports to send and receive messages</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>In the code behind for your page, declare member variables to hold two instances of the <bpt id="p1">**</bpt>MyMidiDeviceWatcher<ept id="p1">**</ept> helper class, one for input devices and one for output devices.</source>
          <target state="new">In the code behind for your page, declare member variables to hold two instances of the <bpt id="p1">**</bpt>MyMidiDeviceWatcher<ept id="p1">**</ept> helper class, one for input devices and one for output devices.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>DeclareDeviceWatchers</source>
          <target state="new">DeclareDeviceWatchers</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Create a new instance of the watcher helper classes, passing in the device selector string, the <bpt id="p1">**</bpt>ListBox<ept id="p1">**</ept> to be populated, and the <bpt id="p2">**</bpt>CoreDispatcher<ept id="p2">**</ept> object that can be accessed through the page's <bpt id="p3">**</bpt>Dispatcher<ept id="p3">**</ept> property.</source>
          <target state="new">Create a new instance of the watcher helper classes, passing in the device selector string, the <bpt id="p1">**</bpt>ListBox<ept id="p1">**</ept> to be populated, and the <bpt id="p2">**</bpt>CoreDispatcher<ept id="p2">**</ept> object that can be accessed through the page's <bpt id="p3">**</bpt>Dispatcher<ept id="p3">**</ept> property.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Then, call the method to start each object's <bpt id="p1">**</bpt>DeviceWatcher<ept id="p1">**</ept>.</source>
          <target state="new">Then, call the method to start each object's <bpt id="p1">**</bpt>DeviceWatcher<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Shortly after each <bpt id="p1">**</bpt>DeviceWatcher<ept id="p1">**</ept> is started, it will finish enumerating the current devices connected to the system and raise its <bpt id="p2">[</bpt><bpt id="p3">**</bpt>EnumerationCompleted<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br225451)</ept> event, which will cause each <bpt id="p4">**</bpt>ListBox<ept id="p4">**</ept> to be updated with the current MIDI devices.</source>
          <target state="new">Shortly after each <bpt id="p1">**</bpt>DeviceWatcher<ept id="p1">**</ept> is started, it will finish enumerating the current devices connected to the system and raise its <bpt id="p2">[</bpt><bpt id="p3">**</bpt>EnumerationCompleted<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br225451)</ept> event, which will cause each <bpt id="p4">**</bpt>ListBox<ept id="p4">**</ept> to be updated with the current MIDI devices.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>StartWatchers</source>
          <target state="new">StartWatchers</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Shortly after each <bpt id="p1">**</bpt>DeviceWatcher<ept id="p1">**</ept> is started, it will finish enumerating the current devices connected to the system and raise its <bpt id="p2">[</bpt><bpt id="p3">**</bpt>EnumerationCompleted<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br225451)</ept> event, which will cause each <bpt id="p4">**</bpt>ListBox<ept id="p4">**</ept> to be updated with the current MIDI devices.</source>
          <target state="new">Shortly after each <bpt id="p1">**</bpt>DeviceWatcher<ept id="p1">**</ept> is started, it will finish enumerating the current devices connected to the system and raise its <bpt id="p2">[</bpt><bpt id="p3">**</bpt>EnumerationCompleted<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br225451)</ept> event, which will cause each <bpt id="p4">**</bpt>ListBox<ept id="p4">**</ept> to be updated with the current MIDI devices.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>When the user selects an item in the MIDI input <bpt id="p1">**</bpt>ListBox<ept id="p1">**</ept>, the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>SelectionChanged<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br209776)</ept> event is raised.</source>
          <target state="new">When the user selects an item in the MIDI input <bpt id="p1">**</bpt>ListBox<ept id="p1">**</ept>, the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>SelectionChanged<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br209776)</ept> event is raised.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>In the handler for this event, access the <bpt id="p1">**</bpt>DeviceInformationCollection<ept id="p1">**</ept> property of the helper class to get the current list of devices.</source>
          <target state="new">In the handler for this event, access the <bpt id="p1">**</bpt>DeviceInformationCollection<ept id="p1">**</ept> property of the helper class to get the current list of devices.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>If there are entries in the list, select the <bpt id="p1">**</bpt>DeviceInformation<ept id="p1">**</ept> object with the index corresponding to the <bpt id="p2">**</bpt>ListBox<ept id="p2">**</ept> control's <bpt id="p3">[</bpt><bpt id="p4">**</bpt>SelectedIndex<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br209768)</ept>.</source>
          <target state="new">If there are entries in the list, select the <bpt id="p1">**</bpt>DeviceInformation<ept id="p1">**</ept> object with the index corresponding to the <bpt id="p2">**</bpt>ListBox<ept id="p2">**</ept> control's <bpt id="p3">[</bpt><bpt id="p4">**</bpt>SelectedIndex<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br209768)</ept>.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Create the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MidiInPort<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn894770)</ept> object representing the selected input device by calling <bpt id="p3">[</bpt><bpt id="p4">**</bpt>MidiInPort.FromIdAsync<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn894776)</ept>, passing in the <bpt id="p5">[</bpt><bpt id="p6">**</bpt>Id<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/br225437)</ept> property of the selected device.</source>
          <target state="new">Create the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MidiInPort<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn894770)</ept> object representing the selected input device by calling <bpt id="p3">[</bpt><bpt id="p4">**</bpt>MidiInPort.FromIdAsync<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn894776)</ept>, passing in the <bpt id="p5">[</bpt><bpt id="p6">**</bpt>Id<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/br225437)</ept> property of the selected device.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Register a handler for the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MessageReceived<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn894781)</ept> event, which is raised whenever a MIDI message is received through the specified device.</source>
          <target state="new">Register a handler for the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MessageReceived<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn894781)</ept> event, which is raised whenever a MIDI message is received through the specified device.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>InPortSelectionChanged</source>
          <target state="new">InPortSelectionChanged</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>When the <bpt id="p1">**</bpt>MessageReceived<ept id="p1">**</ept> handler is called, the message is contained in the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>Message<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/dn894783)</ept> property of the <bpt id="p4">**</bpt>MidiMessageReceivedEventArgs<ept id="p4">**</ept>.</source>
          <target state="new">When the <bpt id="p1">**</bpt>MessageReceived<ept id="p1">**</ept> handler is called, the message is contained in the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>Message<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/dn894783)</ept> property of the <bpt id="p4">**</bpt>MidiMessageReceivedEventArgs<ept id="p4">**</ept>.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Type<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn894726)</ept> of the message object is a value from the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>MidiMessageType<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn894786)</ept> enumeration indicating the type of message that was received.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Type<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn894726)</ept> of the message object is a value from the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>MidiMessageType<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn894786)</ept> enumeration indicating the type of message that was received.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The data of the message depends on the type of the message.</source>
          <target state="new">The data of the message depends on the type of the message.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>This example checks to see if the message is a note on message and, if so, outputs the midi channel, note, and velocity of the message.</source>
          <target state="new">This example checks to see if the message is a note on message and, if so, outputs the midi channel, note, and velocity of the message.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>MessageReceived</source>
          <target state="new">MessageReceived</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SelectionChanged<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br209776)</ept> handler for the output device <bpt id="p3">**</bpt>ListBox<ept id="p3">**</ept> works the same as the handler for input devices, except no event handler is registered.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SelectionChanged<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br209776)</ept> handler for the output device <bpt id="p3">**</bpt>ListBox<ept id="p3">**</ept> works the same as the handler for input devices, except no event handler is registered.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>OutPortSelectionChanged</source>
          <target state="new">OutPortSelectionChanged</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Once the output device is created, you can send a message by creating a new <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IMidiMessage<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn911508)</ept> for the type of message you want to send.</source>
          <target state="new">Once the output device is created, you can send a message by creating a new <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IMidiMessage<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn911508)</ept> for the type of message you want to send.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>In this example, the message is a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>NoteOnMessage<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn894817)</ept>.</source>
          <target state="new">In this example, the message is a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>NoteOnMessage<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn894817)</ept>.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SendMessage<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn894730)</ept> method of the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>IMidiOutPort<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn894727)</ept> object is called to send the message.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SendMessage<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn894730)</ept> method of the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>IMidiOutPort<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn894727)</ept> object is called to send the message.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>SendMessage</source>
          <target state="new">SendMessage</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>When your app is deactivated, be sure to clean up your apps resources.</source>
          <target state="new">When your app is deactivated, be sure to clean up your apps resources.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Unregister your event handlers and set the MIDI in port and out port objects to null.</source>
          <target state="new">Unregister your event handlers and set the MIDI in port and out port objects to null.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Stop the device watchers and set them to null.</source>
          <target state="new">Stop the device watchers and set them to null.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>CleanUp</source>
          <target state="new">CleanUp</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Using the built-in Windows General MIDI synth</source>
          <target state="new">Using the built-in Windows General MIDI synth</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>When you enumerate output MIDI devices using the technique described above, your app will discover a MIDI device called "Microsoft GS Wavetable Synth".</source>
          <target state="new">When you enumerate output MIDI devices using the technique described above, your app will discover a MIDI device called "Microsoft GS Wavetable Synth".</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>This is a built-in General MIDI synthesizer that you can play from your app.</source>
          <target state="new">This is a built-in General MIDI synthesizer that you can play from your app.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>However, attempting to create a MIDI outport to this device will fail unless you have included the SDK extension for the built-in synth in your project.</source>
          <target state="new">However, attempting to create a MIDI outport to this device will fail unless you have included the SDK extension for the built-in synth in your project.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>To include the General MIDI Synth SDK extension in your app project</source>
          <target state="new">To include the General MIDI Synth SDK extension in your app project</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, under your project, right-click <bpt id="p2">**</bpt>References<ept id="p2">**</ept> and select <bpt id="p3">**</bpt>Add reference...<ept id="p3">**</ept></source>
          <target state="new">In <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, under your project, right-click <bpt id="p2">**</bpt>References<ept id="p2">**</ept> and select <bpt id="p3">**</bpt>Add reference...<ept id="p3">**</ept></target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Expand the <bpt id="p1">**</bpt>Universal Windows<ept id="p1">**</ept> node.</source>
          <target state="new">Expand the <bpt id="p1">**</bpt>Universal Windows<ept id="p1">**</ept> node.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>Extensions<ept id="p1">**</ept>.</source>
          <target state="new">Select <bpt id="p1">**</bpt>Extensions<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>From the list of extensions, select <bpt id="p1">**</bpt>Microsoft General MIDI DLS for Universal Windows Apps<ept id="p1">**</ept>.</source>
          <target state="new">From the list of extensions, select <bpt id="p1">**</bpt>Microsoft General MIDI DLS for Universal Windows Apps<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  If there are multiple versions of the extension, be sure to select the version that matches the target for your app.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  If there are multiple versions of the extension, be sure to select the version that matches the target for your app.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>You can see which SDK version your app is targeting on the <bpt id="p1">**</bpt>Application<ept id="p1">**</ept> tab of the project Properties.</source>
          <target state="new">You can see which SDK version your app is targeting on the <bpt id="p1">**</bpt>Application<ept id="p1">**</ept> tab of the project Properties.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>