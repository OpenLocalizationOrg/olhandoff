<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci1\graphics\storyboarded-animations.md</xliffext:olfilepath>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5b8d2d39befdcbe5845e6fe9327614e6a66632cc</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-e58fd48" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Storyboarded animations</source>
          <target state="new">Storyboarded animations</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Storyboarded animations are not just animations in the visual sense.</source>
          <target state="new">Storyboarded animations are not just animations in the visual sense.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Storyboarded animations</source>
          <target state="new">Storyboarded animations</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Updated for UWP apps on Windows 10.</source>
          <target state="new">Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept></source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept></target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Storyboarded animations are not just animations in the visual sense.</source>
          <target state="new">Storyboarded animations are not just animations in the visual sense.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>A storyboarded animation is a way to change the value of a dependency property as a function of time.</source>
          <target state="new">A storyboarded animation is a way to change the value of a dependency property as a function of time.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>One of the main reasons you might need a storyboarded animation that's not from the animation library is to define the visual state for a control, as part of a control template or page definition.</source>
          <target state="new">One of the main reasons you might need a storyboarded animation that's not from the animation library is to define the visual state for a control, as part of a control template or page definition.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Differences with Silverlight and WPF</source>
          <target state="new">Differences with Silverlight and WPF</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>If you are familiar with Microsoft Silverlight or Windows Presentation Foundation (WPF), read this section; otherwise, you can skip it.</source>
          <target state="new">If you are familiar with Microsoft Silverlight or Windows Presentation Foundation (WPF), read this section; otherwise, you can skip it.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In general, creating storyboarded animations in a Windows Runtime app is like Silverlight or WPF.</source>
          <target state="new">In general, creating storyboarded animations in a Windows Runtime app is like Silverlight or WPF.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>But there are a number of important differences:</source>
          <target state="new">But there are a number of important differences:</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Storyboarded animations are not the only way to visually animate a UI, nor are they necessarily the easiest way for app developers to do so.</source>
          <target state="new">Storyboarded animations are not the only way to visually animate a UI, nor are they necessarily the easiest way for app developers to do so.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Rather than using storyboarded animations it's often a better design practice to use theme animations and transition animations.</source>
          <target state="new">Rather than using storyboarded animations it's often a better design practice to use theme animations and transition animations.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>These can quickly create recommended UI animations without getting into the intricacies of animation property targeting.</source>
          <target state="new">These can quickly create recommended UI animations without getting into the intricacies of animation property targeting.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For more info see <bpt id="p1">[</bpt>Animations overview<ept id="p1">](animations-overview.md)</ept>.</source>
          <target state="new">For more info see <bpt id="p1">[</bpt>Animations overview<ept id="p1">](animations-overview.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>In the Windows Runtime, many XAML controls include theme animations and transition animations as part of their built-in behavior.</source>
          <target state="new">In the Windows Runtime, many XAML controls include theme animations and transition animations as part of their built-in behavior.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For the most part, WPF and Silverlight controls didn't have a default animation behavior.</source>
          <target state="new">For the most part, WPF and Silverlight controls didn't have a default animation behavior.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Not all custom animations you create can run by default in a Windows Runtime app, if the animation system determines that the animation might cause bad performance in your UI.</source>
          <target state="new">Not all custom animations you create can run by default in a Windows Runtime app, if the animation system determines that the animation might cause bad performance in your UI.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Animations where the system determines there could be a performance impact are called <bpt id="p1">*</bpt>dependent animations<ept id="p1">*</ept>.</source>
          <target state="new">Animations where the system determines there could be a performance impact are called <bpt id="p1">*</bpt>dependent animations<ept id="p1">*</ept>.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>It's dependent because the clocking of your animation is directly working against the UI thread, which is also where active user input and other updates are trying to apply the runtime changes to UI.</source>
          <target state="new">It's dependent because the clocking of your animation is directly working against the UI thread, which is also where active user input and other updates are trying to apply the runtime changes to UI.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>A dependent animation that's consuming extensive system resources on the UI thread can make the app appear unresponsive in certain situations.</source>
          <target state="new">A dependent animation that's consuming extensive system resources on the UI thread can make the app appear unresponsive in certain situations.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If your animation causes a layout change or otherwise has the potential to impact performance on the UI thread, you often need to explicitly enable the animation to see it run.</source>
          <target state="new">If your animation causes a layout change or otherwise has the potential to impact performance on the UI thread, you often need to explicitly enable the animation to see it run.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>That's what the <bpt id="p1">**</bpt>EnableDependentAnimation<ept id="p1">**</ept> property on specific animation classes is for.</source>
          <target state="new">That's what the <bpt id="p1">**</bpt>EnableDependentAnimation<ept id="p1">**</ept> property on specific animation classes is for.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Dependent and independent animations<ept id="p1">](./storyboarded-animations.md#dependent-and-independent-animations)</ept> for more info.</source>
          <target state="new">See <bpt id="p1">[</bpt>Dependent and independent animations<ept id="p1">](./storyboarded-animations.md#dependent-and-independent-animations)</ept> for more info.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Custom easing functions are not currently supported in the Windows Runtime.</source>
          <target state="new">Custom easing functions are not currently supported in the Windows Runtime.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Defining storyboarded animations</source>
          <target state="new">Defining storyboarded animations</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A storyboarded animation is a way to change the value of a dependency property as a function of time.</source>
          <target state="new">A storyboarded animation is a way to change the value of a dependency property as a function of time.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The property you are animating is not always a property that directly affects the UI of your app.</source>
          <target state="new">The property you are animating is not always a property that directly affects the UI of your app.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>But since XAML is about defining UI for an app, usually it is a UI-related property you are animating.</source>
          <target state="new">But since XAML is about defining UI for an app, usually it is a UI-related property you are animating.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For example, you can animate the angle of a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>RotateTransform<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR242932)</ept>, or the color value of a button's background.</source>
          <target state="new">For example, you can animate the angle of a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>RotateTransform<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR242932)</ept>, or the color value of a button's background.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>One of the main reasons you might be defining a storyboarded animation is if you are a control author or are re-templating a control, and you are defining visual states.</source>
          <target state="new">One of the main reasons you might be defining a storyboarded animation is if you are a control author or are re-templating a control, and you are defining visual states.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>For more info, see <bpt id="p1">[</bpt>Storyboarded animations for visual states<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/JJ819808)</ept>.</source>
          <target state="new">For more info, see <bpt id="p1">[</bpt>Storyboarded animations for visual states<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/JJ819808)</ept>.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Whether you are defining visual states or a custom animation for an app, the concepts and APIs for storyboarded animations that are described in this topic mostly apply to either.</source>
          <target state="new">Whether you are defining visual states or a custom animation for an app, the concepts and APIs for storyboarded animations that are described in this topic mostly apply to either.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>In order to be animated, the property you are targeting with a storyboarded animation must be a <bpt id="p1">*</bpt>dependency property<ept id="p1">*</ept>.</source>
          <target state="new">In order to be animated, the property you are targeting with a storyboarded animation must be a <bpt id="p1">*</bpt>dependency property<ept id="p1">*</ept>.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>A dependency property is a key feature of the Windows Runtime XAML implementation.</source>
          <target state="new">A dependency property is a key feature of the Windows Runtime XAML implementation.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The writeable properties of most common UI elements are typically implemented as dependency properties, so that you can animate them, apply data-bound values, or apply a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Style<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR208849)</ept> and target the property with a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Setter<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR208817)</ept>.</source>
          <target state="new">The writeable properties of most common UI elements are typically implemented as dependency properties, so that you can animate them, apply data-bound values, or apply a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Style<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR208849)</ept> and target the property with a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Setter<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR208817)</ept>.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>For more info about how dependency properties work, see <bpt id="p1">[</bpt>Dependency properties overview<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Mt185583)</ept>.</source>
          <target state="new">For more info about how dependency properties work, see <bpt id="p1">[</bpt>Dependency properties overview<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Mt185583)</ept>.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Most of the time, you define a storyboarded animation by writing XAML.</source>
          <target state="new">Most of the time, you define a storyboarded animation by writing XAML.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If you use a tool such as Microsoft Visual Studio, it will produce the XAML for you.</source>
          <target state="new">If you use a tool such as Microsoft Visual Studio, it will produce the XAML for you.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>It's possible to define a storyboarded animation using code too, but that's less common.</source>
          <target state="new">It's possible to define a storyboarded animation using code too, but that's less common.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Let's look at a simple example.</source>
          <target state="new">Let's look at a simple example.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>In this XAML example, the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Opacity<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR208962)</ept> property is animated on a particular <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Rectangle<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR243371)</ept> object.</source>
          <target state="new">In this XAML example, the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Opacity<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR208962)</ept> property is animated on a particular <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Rectangle<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR243371)</ept> object.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Identifying the object to animate</source>
          <target state="new">Identifying the object to animate</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>In the previous example, the storyboard was animating the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Opacity<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR208962)</ept> property of a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Rectangle<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR243371)</ept>.</source>
          <target state="new">In the previous example, the storyboard was animating the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Opacity<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR208962)</ept> property of a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Rectangle<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR243371)</ept>.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>You don't declare the animations on the object itself.</source>
          <target state="new">You don't declare the animations on the object itself.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Instead you do this within the animation definition of a storyboard.</source>
          <target state="new">Instead you do this within the animation definition of a storyboard.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Storyboards are usually defined in XAML that's not in the immediately vicinity of the XAML UI definition of the object to animate.</source>
          <target state="new">Storyboards are usually defined in XAML that's not in the immediately vicinity of the XAML UI definition of the object to animate.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Instead, they're usually set up as a XAML resource.</source>
          <target state="new">Instead, they're usually set up as a XAML resource.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>To connect an animation to a target, you reference the target by its identifying programming name.</source>
          <target state="new">To connect an animation to a target, you reference the target by its identifying programming name.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>You should always apply the <bpt id="p1">[</bpt>x:Name attribute<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Mt204788)</ept> in the XAML UI definition to name the object that you want to animate.</source>
          <target state="new">You should always apply the <bpt id="p1">[</bpt>x:Name attribute<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Mt204788)</ept> in the XAML UI definition to name the object that you want to animate.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>You then target the object to animate by setting <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Storyboard.TargetName<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Hh759823)</ept> within the animation definition.</source>
          <target state="new">You then target the object to animate by setting <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Storyboard.TargetName<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Hh759823)</ept> within the animation definition.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>For the value of <bpt id="p1">**</bpt>Storyboard.TargetName<ept id="p1">**</ept>, you use the name string of the target object, which is what you set earlier and elsewhere with x:Name attribute.</source>
          <target state="new">For the value of <bpt id="p1">**</bpt>Storyboard.TargetName<ept id="p1">**</ept>, you use the name string of the target object, which is what you set earlier and elsewhere with x:Name attribute.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Targeting the dependency property to animate</source>
          <target state="new">Targeting the dependency property to animate</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>You set a value for <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Storyboard.TargetProperty<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Hh759824)</ept> in the animation.</source>
          <target state="new">You set a value for <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Storyboard.TargetProperty<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Hh759824)</ept> in the animation.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>This determines which specific property of the targeted object is animated.</source>
          <target state="new">This determines which specific property of the targeted object is animated.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Sometimes you need to target a property that's not an immediate property of the target object, but that is nested more deeply in an object-property relationship.</source>
          <target state="new">Sometimes you need to target a property that's not an immediate property of the target object, but that is nested more deeply in an object-property relationship.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>You often need to do this in order to drill down into a set of contributing object and property values until you can reference a property type that can be animated (<bpt id="p1">[</bpt><bpt id="p2">**</bpt>Double<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/system.double.aspx)</ept>, <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Point<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR225870)</ept>, <bpt id="p5">[</bpt><bpt id="p6">**</bpt>Color<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/Hh673723)</ept>).</source>
          <target state="new">You often need to do this in order to drill down into a set of contributing object and property values until you can reference a property type that can be animated (<bpt id="p1">[</bpt><bpt id="p2">**</bpt>Double<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/system.double.aspx)</ept>, <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Point<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR225870)</ept>, <bpt id="p5">[</bpt><bpt id="p6">**</bpt>Color<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/Hh673723)</ept>).</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>This concept is called <bpt id="p1">*</bpt>indirect targeting<ept id="p1">*</ept>, and the syntax for targeting a property in this way is known as a <bpt id="p2">*</bpt>property path<ept id="p2">*</ept>.</source>
          <target state="new">This concept is called <bpt id="p1">*</bpt>indirect targeting<ept id="p1">*</ept>, and the syntax for targeting a property in this way is known as a <bpt id="p2">*</bpt>property path<ept id="p2">*</ept>.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Here's an example.</source>
          <target state="new">Here's an example.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>One common scenario for a storyboarded animation is to change the color of a part of an app UI or control in order to represent that the control is in a particular state.</source>
          <target state="new">One common scenario for a storyboarded animation is to change the color of a part of an app UI or control in order to represent that the control is in a particular state.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Say you want to animate the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Foreground<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209665)</ept> of a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>TextBlock<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR209652)</ept>, so that it turns from red to green.</source>
          <target state="new">Say you want to animate the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Foreground<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209665)</ept> of a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>TextBlock<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR209652)</ept>, so that it turns from red to green.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>You'd expect that a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ColorAnimation<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243066)</ept> is involved, and that's correct.</source>
          <target state="new">You'd expect that a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ColorAnimation<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243066)</ept> is involved, and that's correct.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>However, none of the properties on UI elements that affect the object's color are actually of type <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Color<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Hh673723)</ept>.</source>
          <target state="new">However, none of the properties on UI elements that affect the object's color are actually of type <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Color<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Hh673723)</ept>.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Instead, they're of type <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Brush<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR228076)</ept>.</source>
          <target state="new">Instead, they're of type <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Brush<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR228076)</ept>.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>So what you actually need to target for animation is the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Color<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR242963)</ept> property of the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>SolidColorBrush<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR242962)</ept> class, which is a <bpt id="p5">**</bpt>Brush<ept id="p5">**</ept>-derived type that's typically used for these color-related UI properties.</source>
          <target state="new">So what you actually need to target for animation is the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Color<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR242963)</ept> property of the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>SolidColorBrush<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR242962)</ept> class, which is a <bpt id="p5">**</bpt>Brush<ept id="p5">**</ept>-derived type that's typically used for these color-related UI properties.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>And here's what that looks like in terms of forming a property path for your animation's property targeting:</source>
          <target state="new">And here's what that looks like in terms of forming a property path for your animation's property targeting:</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Here's how to think of this syntax in terms of its parts:</source>
          <target state="new">Here's how to think of this syntax in terms of its parts:</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Each set of () parentheses encloses a property name.</source>
          <target state="new">Each set of () parentheses encloses a property name.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Within the property name, there's a dot, and that dot separates a type name and a property name, so that the property you're identifying is unambiguous.</source>
          <target state="new">Within the property name, there's a dot, and that dot separates a type name and a property name, so that the property you're identifying is unambiguous.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The dot in the middle, the one that's not inside parentheses, is a step.</source>
          <target state="new">The dot in the middle, the one that's not inside parentheses, is a step.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>This is interpreted by the syntax to mean, take the value of the first property (which is an object), step into its object model, and target a specific sub-property of the first property's value.</source>
          <target state="new">This is interpreted by the syntax to mean, take the value of the first property (which is an object), step into its object model, and target a specific sub-property of the first property's value.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Here's a list of animation targeting scenarios where you'll probably be using indirect property targeting, and some property path strings that approximate the syntax you'll use:</source>
          <target state="new">Here's a list of animation targeting scenarios where you'll probably be using indirect property targeting, and some property path strings that approximate the syntax you'll use:</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Animating the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>X<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243029)</ept> value of a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>TranslateTransform<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR243027)</ept>, as applied to a <bpt id="p5">[</bpt><bpt id="p6">**</bpt>RenderTransform<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/BR208980)</ept>:</source>
          <target state="new">Animating the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>X<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243029)</ept> value of a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>TranslateTransform<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR243027)</ept>, as applied to a <bpt id="p5">[</bpt><bpt id="p6">**</bpt>RenderTransform<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/BR208980)</ept>:</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Animating a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Color<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR242963)</ept> within a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>GradientStop<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR210078)</ept> of a <bpt id="p5">[</bpt><bpt id="p6">**</bpt>LinearGradientBrush<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/BR210108)</ept>, as applied to a <bpt id="p7">[</bpt><bpt id="p8">**</bpt>Fill<ept id="p8">**</ept><ept id="p7">](https://msdn.microsoft.com/library/windows/apps/BR243378)</ept>:</source>
          <target state="new">Animating a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Color<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR242963)</ept> within a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>GradientStop<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR210078)</ept> of a <bpt id="p5">[</bpt><bpt id="p6">**</bpt>LinearGradientBrush<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/BR210108)</ept>, as applied to a <bpt id="p7">[</bpt><bpt id="p8">**</bpt>Fill<ept id="p8">**</ept><ept id="p7">](https://msdn.microsoft.com/library/windows/apps/BR243378)</ept>:</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Animating the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>X<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243029)</ept> value of a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>TranslateTransform<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR243027)</ept>, which is 1 of 4 transforms in a <bpt id="p5">[</bpt><bpt id="p6">**</bpt>TransformGroup<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/BR243022)</ept>, as applied to a <bpt id="p7">[</bpt><bpt id="p8">**</bpt>RenderTransform<ept id="p8">**</ept><ept id="p7">](https://msdn.microsoft.com/library/windows/apps/BR208980)</ept>:</source>
          <target state="new">Animating the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>X<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243029)</ept> value of a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>TranslateTransform<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR243027)</ept>, which is 1 of 4 transforms in a <bpt id="p5">[</bpt><bpt id="p6">**</bpt>TransformGroup<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/BR243022)</ept>, as applied to a <bpt id="p7">[</bpt><bpt id="p8">**</bpt>RenderTransform<ept id="p8">**</ept><ept id="p7">](https://msdn.microsoft.com/library/windows/apps/BR208980)</ept>:</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>You'll notice some of these examples use square brackets around numbers.</source>
          <target state="new">You'll notice some of these examples use square brackets around numbers.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>This is an indexer.</source>
          <target state="new">This is an indexer.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>It indicates that the property name preceding it has a collection as value, and that you want an item (as identified by a zero-based index) from within that collection.</source>
          <target state="new">It indicates that the property name preceding it has a collection as value, and that you want an item (as identified by a zero-based index) from within that collection.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>You can also animate XAML attached properties.</source>
          <target state="new">You can also animate XAML attached properties.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Always enclose the full attached property name in parentheses, for example <ph id="ph1">`(Canvas.Left)`</ph>.</source>
          <target state="new">Always enclose the full attached property name in parentheses, for example <ph id="ph1">`(Canvas.Left)`</ph>.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>For more info, see <bpt id="p1">[</bpt>Animating XAML attached properties<ept id="p1">](./storyboarded-animations.md#animating-xaml-attached-properties)</ept>.</source>
          <target state="new">For more info, see <bpt id="p1">[</bpt>Animating XAML attached properties<ept id="p1">](./storyboarded-animations.md#animating-xaml-attached-properties)</ept>.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>For more info on how to use a property path for indirect targeting of the property to animate, see <bpt id="p1">[</bpt>Property-path syntax<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Mt185586)</ept> or <bpt id="p2">[</bpt><bpt id="p3">**</bpt>Storyboard.TargetProperty attached property<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/Hh759824)</ept>.</source>
          <target state="new">For more info on how to use a property path for indirect targeting of the property to animate, see <bpt id="p1">[</bpt>Property-path syntax<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Mt185586)</ept> or <bpt id="p2">[</bpt><bpt id="p3">**</bpt>Storyboard.TargetProperty attached property<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/Hh759824)</ept>.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Animation types</source>
          <target state="new">Animation types</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The Windows Runtime animation system has three specific types that storyboarded animations can apply to:</source>
          <target state="new">The Windows Runtime animation system has three specific types that storyboarded animations can apply to:</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>Double<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/system.double.aspx)</ept>, can be animated with any <bpt id="p3">[</bpt><bpt id="p4">**</bpt>DoubleAnimation<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR243136)</ept></source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>Double<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/system.double.aspx)</ept>, can be animated with any <bpt id="p3">[</bpt><bpt id="p4">**</bpt>DoubleAnimation<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR243136)</ept></target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>Point<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR225870)</ept>, can be animated with any <bpt id="p3">[</bpt><bpt id="p4">**</bpt>PointAnimation<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR210346)</ept></source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>Point<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR225870)</ept>, can be animated with any <bpt id="p3">[</bpt><bpt id="p4">**</bpt>PointAnimation<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR210346)</ept></target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>Color<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Hh673723)</ept>, can be animated with any <bpt id="p3">[</bpt><bpt id="p4">**</bpt>ColorAnimation<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR243066)</ept></source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>Color<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Hh673723)</ept>, can be animated with any <bpt id="p3">[</bpt><bpt id="p4">**</bpt>ColorAnimation<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR243066)</ept></target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>There's also a generalized <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Object<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/system.object.aspx)</ept> animation type for object reference values, which we'll discuss later.</source>
          <target state="new">There's also a generalized <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Object<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/system.object.aspx)</ept> animation type for object reference values, which we'll discuss later.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Specifying the animated values</source>
          <target state="new">Specifying the animated values</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>So far we've shown you how to target the object and the property to animate, but haven't yet described what the animation does to the property value when it runs.</source>
          <target state="new">So far we've shown you how to target the object and the property to animate, but haven't yet described what the animation does to the property value when it runs.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The animation types we've described are sometimes referred to as <bpt id="p1">**</bpt>From<ept id="p1">**</ept><ph id="ph1">/</ph><bpt id="p2">**</bpt>To<ept id="p2">**</ept><ph id="ph2">/</ph><bpt id="p3">**</bpt>By<ept id="p3">**</ept> animations.</source>
          <target state="new">The animation types we've described are sometimes referred to as <bpt id="p1">**</bpt>From<ept id="p1">**</ept><ph id="ph1">/</ph><bpt id="p2">**</bpt>To<ept id="p2">**</ept><ph id="ph2">/</ph><bpt id="p3">**</bpt>By<ept id="p3">**</ept> animations.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>This means that the animation is changing the value of a property, over time, using one or more of these inputs that come from the animation definition:</source>
          <target state="new">This means that the animation is changing the value of a property, over time, using one or more of these inputs that come from the animation definition:</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The value starts at the <bpt id="p1">**</bpt>From<ept id="p1">**</ept> value.</source>
          <target state="new">The value starts at the <bpt id="p1">**</bpt>From<ept id="p1">**</ept> value.</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>If you don't specify a <bpt id="p1">**</bpt>From<ept id="p1">**</ept> value, the starting value is whatever value the animated property has at the time before the animation runs.</source>
          <target state="new">If you don't specify a <bpt id="p1">**</bpt>From<ept id="p1">**</ept> value, the starting value is whatever value the animated property has at the time before the animation runs.</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>This might be a default value, a value from a style or template, or a value specifically applied by a XAML UI definition or app code.</source>
          <target state="new">This might be a default value, a value from a style or template, or a value specifically applied by a XAML UI definition or app code.</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>At the end of the animation, the value is the <bpt id="p1">**</bpt>To<ept id="p1">**</ept> value.</source>
          <target state="new">At the end of the animation, the value is the <bpt id="p1">**</bpt>To<ept id="p1">**</ept> value.</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Or, to specify an ending value relative to the starting value, set the <bpt id="p1">**</bpt>By<ept id="p1">**</ept> property.</source>
          <target state="new">Or, to specify an ending value relative to the starting value, set the <bpt id="p1">**</bpt>By<ept id="p1">**</ept> property.</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>You'd set this instead of the <bpt id="p1">**</bpt>To<ept id="p1">**</ept> property.</source>
          <target state="new">You'd set this instead of the <bpt id="p1">**</bpt>To<ept id="p1">**</ept> property.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>If you don't specify a <bpt id="p1">**</bpt>To<ept id="p1">**</ept> value or a <bpt id="p2">**</bpt>By<ept id="p2">**</ept> value, the ending value is whatever value the animated property has at the time before the animation runs.</source>
          <target state="new">If you don't specify a <bpt id="p1">**</bpt>To<ept id="p1">**</ept> value or a <bpt id="p2">**</bpt>By<ept id="p2">**</ept> value, the ending value is whatever value the animated property has at the time before the animation runs.</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>In this case you'd better have a <bpt id="p1">**</bpt>From<ept id="p1">**</ept> value because otherwise the animation won't change the value at all; its starting and ending values are both the same.</source>
          <target state="new">In this case you'd better have a <bpt id="p1">**</bpt>From<ept id="p1">**</ept> value because otherwise the animation won't change the value at all; its starting and ending values are both the same.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>An animation typically has at least one of <bpt id="p1">**</bpt>From<ept id="p1">**</ept>, <bpt id="p2">**</bpt>By<ept id="p2">**</ept> or <bpt id="p3">**</bpt>To<ept id="p3">**</ept> but never all three.</source>
          <target state="new">An animation typically has at least one of <bpt id="p1">**</bpt>From<ept id="p1">**</ept>, <bpt id="p2">**</bpt>By<ept id="p2">**</ept> or <bpt id="p3">**</bpt>To<ept id="p3">**</ept> but never all three.</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Let's revisit the earlier XAML example and look again at the <bpt id="p1">**</bpt>From<ept id="p1">**</ept> and <bpt id="p2">**</bpt>To<ept id="p2">**</ept> values, and the <bpt id="p3">**</bpt>Duration<ept id="p3">**</ept>.</source>
          <target state="new">Let's revisit the earlier XAML example and look again at the <bpt id="p1">**</bpt>From<ept id="p1">**</ept> and <bpt id="p2">**</bpt>To<ept id="p2">**</ept> values, and the <bpt id="p3">**</bpt>Duration<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The example is animating the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Opacity<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR208962)</ept> property, and the property type of <bpt id="p3">**</bpt>Opacity<ept id="p3">**</ept> is <bpt id="p4">[</bpt><bpt id="p5">**</bpt>Double<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/xaml/system.double.aspx)</ept>.</source>
          <target state="new">The example is animating the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Opacity<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR208962)</ept> property, and the property type of <bpt id="p3">**</bpt>Opacity<ept id="p3">**</ept> is <bpt id="p4">[</bpt><bpt id="p5">**</bpt>Double<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/xaml/system.double.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>So the animation to use here is <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DoubleAnimation<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243136)</ept>.</source>
          <target state="new">So the animation to use here is <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DoubleAnimation<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243136)</ept>.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>specifies that when the animation runs, the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Opacity<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR208962)</ept> property starts at a value of 1 and animates to 0.</source>
          <target state="new">specifies that when the animation runs, the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Opacity<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR208962)</ept> property starts at a value of 1 and animates to 0.</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>In other words, in terms of what these <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Double<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/system.double.aspx)</ept> values mean to the <bpt id="p3">**</bpt>Opacity<ept id="p3">**</ept> property, this animation will cause the object to start opaque and then fade to transparent.</source>
          <target state="new">In other words, in terms of what these <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Double<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/system.double.aspx)</ept> values mean to the <bpt id="p3">**</bpt>Opacity<ept id="p3">**</ept> property, this animation will cause the object to start opaque and then fade to transparent.</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>specifies how long the animation lasts, that is, how fast the rectangle fades.</source>
          <target state="new">specifies how long the animation lasts, that is, how fast the rectangle fades.</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Duration<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243207)</ept> property is specified in the form of <bpt id="p3">*</bpt>hours<ept id="p3">*</ept>:<bpt id="p4">*</bpt>minutes<ept id="p4">*</ept>:<bpt id="p5">*</bpt>seconds<ept id="p5">*</ept>.</source>
          <target state="new">A <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Duration<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243207)</ept> property is specified in the form of <bpt id="p3">*</bpt>hours<ept id="p3">*</ept>:<bpt id="p4">*</bpt>minutes<ept id="p4">*</ept>:<bpt id="p5">*</bpt>seconds<ept id="p5">*</ept>.</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The time duration in this example is one second.</source>
          <target state="new">The time duration in this example is one second.</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>For more info about <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Duration<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR242377)</ept> values and the XAML syntax, see <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Duration<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR242377)</ept>.</source>
          <target state="new">For more info about <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Duration<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR242377)</ept> values and the XAML syntax, see <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Duration<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR242377)</ept>.</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  For the example we showed, if you were sure that the starting state of the object being animated has <bpt id="p2">[</bpt><bpt id="p3">**</bpt>Opacity<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/BR208962)</ept> always equal to 1, either through the default or an explicit set, you could omit the <bpt id="p4">**</bpt>From<ept id="p4">**</ept> value, the animation would use the implicit starting value, and the result would be the same.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  For the example we showed, if you were sure that the starting state of the object being animated has <bpt id="p2">[</bpt><bpt id="p3">**</bpt>Opacity<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/BR208962)</ept> always equal to 1, either through the default or an explicit set, you could omit the <bpt id="p4">**</bpt>From<ept id="p4">**</ept> value, the animation would use the implicit starting value, and the result would be the same.</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>From/To/By are nullable</source>
          <target state="new">From/To/By are nullable</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>We mentioned previously that you can omit <bpt id="p1">**</bpt>From<ept id="p1">**</ept>, <bpt id="p2">**</bpt>To<ept id="p2">**</ept> or <bpt id="p3">**</bpt>By<ept id="p3">**</ept> and thus use current non-animated values as substitutes for a missing value.</source>
          <target state="new">We mentioned previously that you can omit <bpt id="p1">**</bpt>From<ept id="p1">**</ept>, <bpt id="p2">**</bpt>To<ept id="p2">**</ept> or <bpt id="p3">**</bpt>By<ept id="p3">**</ept> and thus use current non-animated values as substitutes for a missing value.</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>From<ept id="p1">**</ept>, <bpt id="p2">**</bpt>To<ept id="p2">**</ept> or <bpt id="p3">**</bpt>By<ept id="p3">**</ept> properties of an animation aren't of the type you might guess.</source>
          <target state="new"><bpt id="p1">**</bpt>From<ept id="p1">**</ept>, <bpt id="p2">**</bpt>To<ept id="p2">**</ept> or <bpt id="p3">**</bpt>By<ept id="p3">**</ept> properties of an animation aren't of the type you might guess.</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>For example the type of the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DoubleAnimation.To<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.media.animation.doubleanimation.easingfunction.aspx)</ept> property isn't <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Double<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/system.double.aspx)</ept>.</source>
          <target state="new">For example the type of the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DoubleAnimation.To<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.media.animation.doubleanimation.easingfunction.aspx)</ept> property isn't <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Double<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/system.double.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Instead it's a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Nullable<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/b3h38hb0.aspx)</ept> for <bpt id="p3">**</bpt>Double<ept id="p3">**</ept>.</source>
          <target state="new">Instead it's a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Nullable<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/b3h38hb0.aspx)</ept> for <bpt id="p3">**</bpt>Double<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>And its default value is <bpt id="p1">**</bpt>null<ept id="p1">**</ept>, not 0.</source>
          <target state="new">And its default value is <bpt id="p1">**</bpt>null<ept id="p1">**</ept>, not 0.</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>That <bpt id="p1">**</bpt>null<ept id="p1">**</ept> value is how the animation system distinguishes that you haven't specifically set a value for a <bpt id="p2">**</bpt>From<ept id="p2">**</ept>, <bpt id="p3">**</bpt>To<ept id="p3">**</ept> or <bpt id="p4">**</bpt>By<ept id="p4">**</ept> property.</source>
          <target state="new">That <bpt id="p1">**</bpt>null<ept id="p1">**</ept> value is how the animation system distinguishes that you haven't specifically set a value for a <bpt id="p2">**</bpt>From<ept id="p2">**</ept>, <bpt id="p3">**</bpt>To<ept id="p3">**</ept> or <bpt id="p4">**</bpt>By<ept id="p4">**</ept> property.</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Visual C++ component extensions (C++/CX) doesn't have a <bpt id="p1">**</bpt>Nullable<ept id="p1">**</ept> type, so it uses <bpt id="p2">[</bpt><bpt id="p3">**</bpt>IReference<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/BR225864)</ept> instead.</source>
          <target state="new">Visual C++ component extensions (C++/CX) doesn't have a <bpt id="p1">**</bpt>Nullable<ept id="p1">**</ept> type, so it uses <bpt id="p2">[</bpt><bpt id="p3">**</bpt>IReference<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/BR225864)</ept> instead.</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Other properties of an animation</source>
          <target state="new">Other properties of an animation</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The next properties described in this section are all optional in that they have defaults that are appropriate for most animations.</source>
          <target state="new">The next properties described in this section are all optional in that they have defaults that are appropriate for most animations.</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>AutoReverse</source>
          <target state="new">AutoReverse</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>If you don't specify either <bpt id="p1">[</bpt><bpt id="p2">**</bpt>AutoReverse<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243202)</ept> or <bpt id="p3">[</bpt><bpt id="p4">**</bpt>RepeatBehavior<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR243211)</ept> on an animation, that animation will run once, and run for the time as specified as the <bpt id="p5">[</bpt><bpt id="p6">**</bpt>Duration<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/BR243207)</ept>.</source>
          <target state="new">If you don't specify either <bpt id="p1">[</bpt><bpt id="p2">**</bpt>AutoReverse<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243202)</ept> or <bpt id="p3">[</bpt><bpt id="p4">**</bpt>RepeatBehavior<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR243211)</ept> on an animation, that animation will run once, and run for the time as specified as the <bpt id="p5">[</bpt><bpt id="p6">**</bpt>Duration<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/BR243207)</ept>.</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>AutoReverse<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243202)</ept> property specifies whether a timeline plays in reverse after it reaches the end of its <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Duration<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR243207)</ept>.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>AutoReverse<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243202)</ept> property specifies whether a timeline plays in reverse after it reaches the end of its <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Duration<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR243207)</ept>.</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>If you set it to <bpt id="p1">**</bpt>true<ept id="p1">**</ept>, the animation reverses after it reaches the end of its declared <bpt id="p2">[</bpt><bpt id="p3">**</bpt>Duration<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/BR243207)</ept>, changing the value from its ending value (<bpt id="p4">**</bpt>To<ept id="p4">**</ept>) back to its starting value (<bpt id="p5">**</bpt>From<ept id="p5">**</ept>).</source>
          <target state="new">If you set it to <bpt id="p1">**</bpt>true<ept id="p1">**</ept>, the animation reverses after it reaches the end of its declared <bpt id="p2">[</bpt><bpt id="p3">**</bpt>Duration<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/BR243207)</ept>, changing the value from its ending value (<bpt id="p4">**</bpt>To<ept id="p4">**</ept>) back to its starting value (<bpt id="p5">**</bpt>From<ept id="p5">**</ept>).</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>This means that the animation effectively runs for double the time of its <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Duration<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243207)</ept>.</source>
          <target state="new">This means that the animation effectively runs for double the time of its <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Duration<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243207)</ept>.</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>RepeatBehavior</source>
          <target state="new">RepeatBehavior</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>RepeatBehavior<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243211)</ept> property specifies either how many times a timeline plays, or a larger duration that the timeline should repeat within.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>RepeatBehavior<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243211)</ept> property specifies either how many times a timeline plays, or a larger duration that the timeline should repeat within.</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>By default, a timeline has an iteration count of "1x", which means it plays one time for its <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Duration<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243207)</ept> and does not repeat.</source>
          <target state="new">By default, a timeline has an iteration count of "1x", which means it plays one time for its <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Duration<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243207)</ept> and does not repeat.</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>You can cause the animation to run multiple iterations, for example a value of "3x" causes the animation to run three times.</source>
          <target state="new">You can cause the animation to run multiple iterations, for example a value of "3x" causes the animation to run three times.</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Or, you can specify a different <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Duration<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR242377)</ept> for <bpt id="p3">[</bpt><bpt id="p4">**</bpt>RepeatBehavior<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR243211)</ept>.</source>
          <target state="new">Or, you can specify a different <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Duration<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR242377)</ept> for <bpt id="p3">[</bpt><bpt id="p4">**</bpt>RepeatBehavior<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR243211)</ept>.</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>That <bpt id="p1">**</bpt>Duration<ept id="p1">**</ept> should be longer than the <bpt id="p2">**</bpt>Duration<ept id="p2">**</ept> of the animation itself to be effective.</source>
          <target state="new">That <bpt id="p1">**</bpt>Duration<ept id="p1">**</ept> should be longer than the <bpt id="p2">**</bpt>Duration<ept id="p2">**</ept> of the animation itself to be effective.</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>For example, if you specify a <bpt id="p1">**</bpt>RepeatBehavior<ept id="p1">**</ept> of "0:0:10", for an animation that has a <bpt id="p2">[</bpt><bpt id="p3">**</bpt>Duration<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/BR243207)</ept> of "0:0:2", that animation repeats five times.</source>
          <target state="new">For example, if you specify a <bpt id="p1">**</bpt>RepeatBehavior<ept id="p1">**</ept> of "0:0:10", for an animation that has a <bpt id="p2">[</bpt><bpt id="p3">**</bpt>Duration<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/BR243207)</ept> of "0:0:2", that animation repeats five times.</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>If these don't divide evenly, the animation gets truncated at the time that the <bpt id="p1">**</bpt>RepeatBehavior<ept id="p1">**</ept> time is reached, which might be partway through.</source>
          <target state="new">If these don't divide evenly, the animation gets truncated at the time that the <bpt id="p1">**</bpt>RepeatBehavior<ept id="p1">**</ept> time is reached, which might be partway through.</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Finally you can specify the special value "Forever", which causes the animation to run infinitely until it's deliberately stopped.</source>
          <target state="new">Finally you can specify the special value "Forever", which causes the animation to run infinitely until it's deliberately stopped.</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>For more info about <bpt id="p1">[</bpt><bpt id="p2">**</bpt>RepeatBehavior<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR210411)</ept> values and the XAML syntax, see <bpt id="p3">[</bpt><bpt id="p4">**</bpt>RepeatBehavior<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR210411)</ept>.</source>
          <target state="new">For more info about <bpt id="p1">[</bpt><bpt id="p2">**</bpt>RepeatBehavior<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR210411)</ept> values and the XAML syntax, see <bpt id="p3">[</bpt><bpt id="p4">**</bpt>RepeatBehavior<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR210411)</ept>.</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>FillBehavior="Stop"</source>
          <target state="new">FillBehavior="Stop"</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>By default, when an animation ends, the animation leaves the property value as the final <bpt id="p1">**</bpt>To<ept id="p1">**</ept> or <bpt id="p2">**</bpt>By<ept id="p2">**</ept>-modified value even after its duration is surpassed.</source>
          <target state="new">By default, when an animation ends, the animation leaves the property value as the final <bpt id="p1">**</bpt>To<ept id="p1">**</ept> or <bpt id="p2">**</bpt>By<ept id="p2">**</ept>-modified value even after its duration is surpassed.</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>However, if you set the value of the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>FillBehavior<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243209)</ept> property to <bpt id="p3">[</bpt><bpt id="p4">**</bpt>FillBehavior.Stop<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR210306)</ept>, the value of the animated value reverts to whatever the value was before the animation was applied, or more precisely to the current effective value as determined by the dependency property system (for more info on this distinction, see <bpt id="p5">[</bpt>Dependency properties overview<ept id="p5">](https://msdn.microsoft.com/library/windows/apps/Mt185583)</ept>).</source>
          <target state="new">However, if you set the value of the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>FillBehavior<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243209)</ept> property to <bpt id="p3">[</bpt><bpt id="p4">**</bpt>FillBehavior.Stop<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR210306)</ept>, the value of the animated value reverts to whatever the value was before the animation was applied, or more precisely to the current effective value as determined by the dependency property system (for more info on this distinction, see <bpt id="p5">[</bpt>Dependency properties overview<ept id="p5">](https://msdn.microsoft.com/library/windows/apps/Mt185583)</ept>).</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>BeginTime</source>
          <target state="new">BeginTime</target>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>By default, the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>BeginTime<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243204)</ept> of an animation is "0:0:0", so it begins as soon as its containing <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Storyboard<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR210490)</ept> runs.</source>
          <target state="new">By default, the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>BeginTime<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243204)</ept> of an animation is "0:0:0", so it begins as soon as its containing <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Storyboard<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR210490)</ept> runs.</target>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>You might change this if the <bpt id="p1">**</bpt>Storyboard<ept id="p1">**</ept> contains more than one animation and you want to stagger the start times of the others versus an initial animation, or to create a deliberate short delay.</source>
          <target state="new">You might change this if the <bpt id="p1">**</bpt>Storyboard<ept id="p1">**</ept> contains more than one animation and you want to stagger the start times of the others versus an initial animation, or to create a deliberate short delay.</target>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>SpeedRatio</source>
          <target state="new">SpeedRatio</target>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>If you have more than one animation in a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Storyboard<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR210490)</ept> you can change the time rate of one or more of the animations relative to the <bpt id="p3">**</bpt>Storyboard<ept id="p3">**</ept>.</source>
          <target state="new">If you have more than one animation in a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Storyboard<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR210490)</ept> you can change the time rate of one or more of the animations relative to the <bpt id="p3">**</bpt>Storyboard<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>It's the parent <bpt id="p1">**</bpt>Storyboard<ept id="p1">**</ept> that ultimately controls how the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>Duration<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/BR242377)</ept> time elapses while the animations run.</source>
          <target state="new">It's the parent <bpt id="p1">**</bpt>Storyboard<ept id="p1">**</ept> that ultimately controls how the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>Duration<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/BR242377)</ept> time elapses while the animations run.</target>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>This property isn't used very often.</source>
          <target state="new">This property isn't used very often.</target>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>For more info see <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SpeedRatio<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243213)</ept>.</source>
          <target state="new">For more info see <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SpeedRatio<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243213)</ept>.</target>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Defining more than one animation in a <bpt id="p1">**</bpt>Storyboard<ept id="p1">**</ept></source>
          <target state="new">Defining more than one animation in a <bpt id="p1">**</bpt>Storyboard<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The contents of a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Storyboard<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR210490)</ept> can be more than one animation definition.</source>
          <target state="new">The contents of a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Storyboard<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR210490)</ept> can be more than one animation definition.</target>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>You might have more than one animation if you are applying related animations to two properties of the same target object.</source>
          <target state="new">You might have more than one animation if you are applying related animations to two properties of the same target object.</target>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>For example, you might change both the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TranslateX<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR228122)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>TranslateY<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR228124)</ept> properties of a <bpt id="p5">[</bpt><bpt id="p6">**</bpt>TranslateTransform<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/BR243027)</ept> used as the <bpt id="p7">[</bpt><bpt id="p8">**</bpt>RenderTransform<ept id="p8">**</ept><ept id="p7">](https://msdn.microsoft.com/library/windows/apps/BR208980)</ept> of a UI element; this will cause the element to translate diagonally.</source>
          <target state="new">For example, you might change both the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TranslateX<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR228122)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>TranslateY<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR228124)</ept> properties of a <bpt id="p5">[</bpt><bpt id="p6">**</bpt>TranslateTransform<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/BR243027)</ept> used as the <bpt id="p7">[</bpt><bpt id="p8">**</bpt>RenderTransform<ept id="p8">**</ept><ept id="p7">](https://msdn.microsoft.com/library/windows/apps/BR208980)</ept> of a UI element; this will cause the element to translate diagonally.</target>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>You need two different animations to accomplish that, but you might want the animations to be part of the same <bpt id="p1">**</bpt>Storyboard<ept id="p1">**</ept> because you always want those two animations to be run together.</source>
          <target state="new">You need two different animations to accomplish that, but you might want the animations to be part of the same <bpt id="p1">**</bpt>Storyboard<ept id="p1">**</ept> because you always want those two animations to be run together.</target>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The animations don't have to be the same type, or target the same object.</source>
          <target state="new">The animations don't have to be the same type, or target the same object.</target>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>They can have different durations, and don't have to share any property values.</source>
          <target state="new">They can have different durations, and don't have to share any property values.</target>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>When the parent <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Storyboard<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR210490)</ept> runs, each of the animations within will run too.</source>
          <target state="new">When the parent <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Storyboard<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR210490)</ept> runs, each of the animations within will run too.</target>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Storyboard<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR210490)</ept> class actually has a lot of the same animation properties as the animation types do, because both share the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Timeline<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR210517)</ept> base class.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Storyboard<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR210490)</ept> class actually has a lot of the same animation properties as the animation types do, because both share the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Timeline<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR210517)</ept> base class.</target>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Thus, a <bpt id="p1">**</bpt>Storyboard<ept id="p1">**</ept> can have a <bpt id="p2">[</bpt><bpt id="p3">**</bpt>RepeatBehavior<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/BR243211)</ept>, or a <bpt id="p4">[</bpt><bpt id="p5">**</bpt>BeginTime<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/BR243204)</ept>.</source>
          <target state="new">Thus, a <bpt id="p1">**</bpt>Storyboard<ept id="p1">**</ept> can have a <bpt id="p2">[</bpt><bpt id="p3">**</bpt>RepeatBehavior<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/BR243211)</ept>, or a <bpt id="p4">[</bpt><bpt id="p5">**</bpt>BeginTime<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/BR243204)</ept>.</target>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>You don't usually set these on a <bpt id="p1">**</bpt>Storyboard<ept id="p1">**</ept> though unless you want all the contained animations to have that behavior.</source>
          <target state="new">You don't usually set these on a <bpt id="p1">**</bpt>Storyboard<ept id="p1">**</ept> though unless you want all the contained animations to have that behavior.</target>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>As a general rule, any <bpt id="p1">**</bpt>Timeline<ept id="p1">**</ept> property as set on a <bpt id="p2">**</bpt>Storyboard<ept id="p2">**</ept> applies to all its child animations.</source>
          <target state="new">As a general rule, any <bpt id="p1">**</bpt>Timeline<ept id="p1">**</ept> property as set on a <bpt id="p2">**</bpt>Storyboard<ept id="p2">**</ept> applies to all its child animations.</target>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>If let unset, the <bpt id="p1">**</bpt>Storyboard<ept id="p1">**</ept> has an implicit duration that's calculated from the longest <bpt id="p2">[</bpt><bpt id="p3">**</bpt>Duration<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/BR242377)</ept> value of the contained animations.</source>
          <target state="new">If let unset, the <bpt id="p1">**</bpt>Storyboard<ept id="p1">**</ept> has an implicit duration that's calculated from the longest <bpt id="p2">[</bpt><bpt id="p3">**</bpt>Duration<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/BR242377)</ept> value of the contained animations.</target>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>An explicitly set <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Duration<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243207)</ept> on a <bpt id="p3">**</bpt>Storyboard<ept id="p3">**</ept> that's shorter than one of its child animations will cause that animation to get cut off, which isn't usually desirable.</source>
          <target state="new">An explicitly set <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Duration<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243207)</ept> on a <bpt id="p3">**</bpt>Storyboard<ept id="p3">**</ept> that's shorter than one of its child animations will cause that animation to get cut off, which isn't usually desirable.</target>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>A storyboard can't contain two animations that attempt to target and animate the same property on the same object.</source>
          <target state="new">A storyboard can't contain two animations that attempt to target and animate the same property on the same object.</target>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>If you try this, you'll get a runtime error when the storyboard tries to run.</source>
          <target state="new">If you try this, you'll get a runtime error when the storyboard tries to run.</target>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>This restriction applies even if the animations don't overlap in time because of deliberately different <bpt id="p1">[</bpt><bpt id="p2">**</bpt>BeginTime<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243204)</ept> values and durations.</source>
          <target state="new">This restriction applies even if the animations don't overlap in time because of deliberately different <bpt id="p1">[</bpt><bpt id="p2">**</bpt>BeginTime<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243204)</ept> values and durations.</target>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>If you really want to apply a more complex animation timeline to the same property in a single storyboard, the way to do this is to use a key-frame animation.</source>
          <target state="new">If you really want to apply a more complex animation timeline to the same property in a single storyboard, the way to do this is to use a key-frame animation.</target>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Key-frame and easing function animations<ept id="p1">](key-frame-and-easing-function-animations.md)</ept>.</source>
          <target state="new">See <bpt id="p1">[</bpt>Key-frame and easing function animations<ept id="p1">](key-frame-and-easing-function-animations.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The animation system can apply more than one animation to the value of a property, if those inputs come from multiple storyboards.</source>
          <target state="new">The animation system can apply more than one animation to the value of a property, if those inputs come from multiple storyboards.</target>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Using this behavior deliberately for simultaneously running storyboards isn't common.</source>
          <target state="new">Using this behavior deliberately for simultaneously running storyboards isn't common.</target>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>However it's possible that an app-defined animation that you apply to a control property will be modifying the <bpt id="p1">**</bpt>HoldEnd<ept id="p1">**</ept> value of an animation that was previously run as part of the control's visual state model.</source>
          <target state="new">However it's possible that an app-defined animation that you apply to a control property will be modifying the <bpt id="p1">**</bpt>HoldEnd<ept id="p1">**</ept> value of an animation that was previously run as part of the control's visual state model.</target>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Defining a storyboard as a resource</source>
          <target state="new">Defining a storyboard as a resource</target>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Storyboard<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR210490)</ept> is the container that you put animation objects in.</source>
          <target state="new">A <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Storyboard<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR210490)</ept> is the container that you put animation objects in.</target>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>You typically define the <bpt id="p1">**</bpt>Storyboard<ept id="p1">**</ept> as a resource that is available to the object that you want to animate, either in page-level <bpt id="p2">[</bpt><bpt id="p3">**</bpt>Resources<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/BR208740)</ept> or <bpt id="p4">[</bpt><bpt id="p5">**</bpt>Application.Resources<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/BR242338)</ept>.</source>
          <target state="new">You typically define the <bpt id="p1">**</bpt>Storyboard<ept id="p1">**</ept> as a resource that is available to the object that you want to animate, either in page-level <bpt id="p2">[</bpt><bpt id="p3">**</bpt>Resources<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/BR208740)</ept> or <bpt id="p4">[</bpt><bpt id="p5">**</bpt>Application.Resources<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/BR242338)</ept>.</target>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>This next example shows how the previous example <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Storyboard<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR210490)</ept> would be contained in a page-level <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Resources<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR208740)</ept> definition, where the <bpt id="p5">**</bpt>Storyboard<ept id="p5">**</ept> is a keyed resource of the root <bpt id="p6">[</bpt><bpt id="p7">**</bpt>Page<ept id="p7">**</ept><ept id="p6">](https://msdn.microsoft.com/library/windows/apps/BR227503)</ept>.</source>
          <target state="new">This next example shows how the previous example <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Storyboard<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR210490)</ept> would be contained in a page-level <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Resources<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR208740)</ept> definition, where the <bpt id="p5">**</bpt>Storyboard<ept id="p5">**</ept> is a keyed resource of the root <bpt id="p6">[</bpt><bpt id="p7">**</bpt>Page<ept id="p7">**</ept><ept id="p6">](https://msdn.microsoft.com/library/windows/apps/BR227503)</ept>.</target>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Note the <bpt id="p1">[</bpt>x:Name attribute<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Mt204788)</ept>.</source>
          <target state="new">Note the <bpt id="p1">[</bpt>x:Name attribute<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Mt204788)</ept>.</target>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>This attribute is how you define a variable name for the <bpt id="p1">**</bpt>Storyboard<ept id="p1">**</ept>, so that other elements in XAML as well as code can refer to the <bpt id="p2">**</bpt>Storyboard<ept id="p2">**</ept> later.</source>
          <target state="new">This attribute is how you define a variable name for the <bpt id="p1">**</bpt>Storyboard<ept id="p1">**</ept>, so that other elements in XAML as well as code can refer to the <bpt id="p2">**</bpt>Storyboard<ept id="p2">**</ept> later.</target>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Defining resources at the XAML root of a XAML file such as page.xaml or app.xaml is a common practice for how to organize keyed resources in your XAML.</source>
          <target state="new">Defining resources at the XAML root of a XAML file such as page.xaml or app.xaml is a common practice for how to organize keyed resources in your XAML.</target>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>You also can factor resources into separate files and merge them into apps or pages.</source>
          <target state="new">You also can factor resources into separate files and merge them into apps or pages.</target>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>For more info, see <bpt id="p1">[</bpt>ResourceDictionary and XAML resource references<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Mt187273)</ept>.</source>
          <target state="new">For more info, see <bpt id="p1">[</bpt>ResourceDictionary and XAML resource references<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Mt187273)</ept>.</target>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  Windows Runtime XAML supports identifying resources either using the <bpt id="p2">[</bpt>x:Key attribute<ept id="p2">](https://msdn.microsoft.com/library/windows/apps/Mt204787)</ept> or the <bpt id="p3">[</bpt>x:Name attribute<ept id="p3">](https://msdn.microsoft.com/library/windows/apps/Mt204788)</ept>.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  Windows Runtime XAML supports identifying resources either using the <bpt id="p2">[</bpt>x:Key attribute<ept id="p2">](https://msdn.microsoft.com/library/windows/apps/Mt204787)</ept> or the <bpt id="p3">[</bpt>x:Name attribute<ept id="p3">](https://msdn.microsoft.com/library/windows/apps/Mt204788)</ept>.</target>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Using x:Name attribute is more common for a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Storyboard<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR210490)</ept>, because you'll want to reference it by variable name eventually, so that you can call its <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Begin<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.media.animation.storyboard.begin)</ept> method and run the animations.</source>
          <target state="new">Using x:Name attribute is more common for a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Storyboard<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR210490)</ept>, because you'll want to reference it by variable name eventually, so that you can call its <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Begin<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.media.animation.storyboard.begin)</ept> method and run the animations.</target>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>If you do use <bpt id="p1">[</bpt>x:Key attribute<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Mt204787)</ept>, you'll need to use <bpt id="p2">[</bpt><bpt id="p3">**</bpt>ResourceDictionary<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/BR208794)</ept> methods such as the <bpt id="p4">[</bpt><bpt id="p5">**</bpt>Item<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.resourcedictionary.item)</ept> indexer to retrieve it as a keyed resource and then cast the retrieved object to <bpt id="p6">**</bpt>Storyboard<ept id="p6">**</ept> to use the <bpt id="p7">**</bpt>Storyboard<ept id="p7">**</ept> methods.</source>
          <target state="new">If you do use <bpt id="p1">[</bpt>x:Key attribute<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Mt204787)</ept>, you'll need to use <bpt id="p2">[</bpt><bpt id="p3">**</bpt>ResourceDictionary<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/BR208794)</ept> methods such as the <bpt id="p4">[</bpt><bpt id="p5">**</bpt>Item<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.resourcedictionary.item)</ept> indexer to retrieve it as a keyed resource and then cast the retrieved object to <bpt id="p6">**</bpt>Storyboard<ept id="p6">**</ept> to use the <bpt id="p7">**</bpt>Storyboard<ept id="p7">**</ept> methods.</target>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>You also put your animations within a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Storyboard<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR210490)</ept> unit when you are declaring the visual state animations for a control's visual appearance.</source>
          <target state="new">You also put your animations within a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Storyboard<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR210490)</ept> unit when you are declaring the visual state animations for a control's visual appearance.</target>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>In that case the <bpt id="p1">**</bpt>Storyboard<ept id="p1">**</ept> elements you define go into a <bpt id="p2">[</bpt><bpt id="p3">**</bpt>VisualState<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/BR209007)</ept> container that's nested more deeply in a <bpt id="p4">[</bpt><bpt id="p5">**</bpt>Style<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/BR208849)</ept> (it's the <bpt id="p6">**</bpt>Style<ept id="p6">**</ept> that is the keyed resource).</source>
          <target state="new">In that case the <bpt id="p1">**</bpt>Storyboard<ept id="p1">**</ept> elements you define go into a <bpt id="p2">[</bpt><bpt id="p3">**</bpt>VisualState<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/BR209007)</ept> container that's nested more deeply in a <bpt id="p4">[</bpt><bpt id="p5">**</bpt>Style<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/BR208849)</ept> (it's the <bpt id="p6">**</bpt>Style<ept id="p6">**</ept> that is the keyed resource).</target>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>You don't need a key or name for your <bpt id="p1">**</bpt>Storyboard<ept id="p1">**</ept> in this case because it's the <bpt id="p2">**</bpt>VisualState<ept id="p2">**</ept> that has a target name that the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>VisualStateManager<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR209007manager)</ept> can invoke.</source>
          <target state="new">You don't need a key or name for your <bpt id="p1">**</bpt>Storyboard<ept id="p1">**</ept> in this case because it's the <bpt id="p2">**</bpt>VisualState<ept id="p2">**</ept> that has a target name that the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>VisualStateManager<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR209007manager)</ept> can invoke.</target>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>The styles for controls are often factored into separate XAML <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ResourceDictionary<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR208794)</ept> files rather than placed in a page or app <bpt id="p3">**</bpt>Resources<ept id="p3">**</ept> collection.</source>
          <target state="new">The styles for controls are often factored into separate XAML <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ResourceDictionary<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR208794)</ept> files rather than placed in a page or app <bpt id="p3">**</bpt>Resources<ept id="p3">**</ept> collection.</target>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>For more info, see <bpt id="p1">[</bpt>Storyboarded animations for visual states<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/JJ819808)</ept>.</source>
          <target state="new">For more info, see <bpt id="p1">[</bpt>Storyboarded animations for visual states<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/JJ819808)</ept>.</target>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Dependent and independent animations</source>
          <target state="new">Dependent and independent animations</target>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>At this point we need to introduce some important points about how the animation system works.</source>
          <target state="new">At this point we need to introduce some important points about how the animation system works.</target>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>In particular, animation interacts fundamentally with how a Windows Runtime app renders to the screen, and how that rendering uses processing threads.</source>
          <target state="new">In particular, animation interacts fundamentally with how a Windows Runtime app renders to the screen, and how that rendering uses processing threads.</target>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>A Windows Runtime app always has a main UI thread, and this thread is responsible for updating the screen with current information.</source>
          <target state="new">A Windows Runtime app always has a main UI thread, and this thread is responsible for updating the screen with current information.</target>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>In addition, a Windows Runtime app has a composition thread, which is used for precalculating layouts immediately before they are shown.</source>
          <target state="new">In addition, a Windows Runtime app has a composition thread, which is used for precalculating layouts immediately before they are shown.</target>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>When you animate the UI, there's potential to cause a lot of work for the UI thread.</source>
          <target state="new">When you animate the UI, there's potential to cause a lot of work for the UI thread.</target>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>The system must redraw large areas of the screen using fairly short time intervals between each refresh.</source>
          <target state="new">The system must redraw large areas of the screen using fairly short time intervals between each refresh.</target>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>This is necessary for capturing the latest property value of the animated property.</source>
          <target state="new">This is necessary for capturing the latest property value of the animated property.</target>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>If you're not careful, there's risk that an animation can make the UI less responsive, or will impact performance of other app features that are also on the same UI thread.</source>
          <target state="new">If you're not careful, there's risk that an animation can make the UI less responsive, or will impact performance of other app features that are also on the same UI thread.</target>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>The variety of animation that is determined to have some risk of slowing down the UI thread is called a <bpt id="p1">*</bpt>dependent animation<ept id="p1">*</ept>.</source>
          <target state="new">The variety of animation that is determined to have some risk of slowing down the UI thread is called a <bpt id="p1">*</bpt>dependent animation<ept id="p1">*</ept>.</target>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>An animation not subject to this risk is an <bpt id="p1">*</bpt>independent animation<ept id="p1">*</ept>.</source>
          <target state="new">An animation not subject to this risk is an <bpt id="p1">*</bpt>independent animation<ept id="p1">*</ept>.</target>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>The distinction between dependent and independent animations isn't just determined by animation types (<bpt id="p1">[</bpt><bpt id="p2">**</bpt>DoubleAnimation<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243136)</ept> and so on) as we described earlier.</source>
          <target state="new">The distinction between dependent and independent animations isn't just determined by animation types (<bpt id="p1">[</bpt><bpt id="p2">**</bpt>DoubleAnimation<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243136)</ept> and so on) as we described earlier.</target>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Instead, it's determined by which specific properties you are animating, and other factors like inheritance and composition of controls.</source>
          <target state="new">Instead, it's determined by which specific properties you are animating, and other factors like inheritance and composition of controls.</target>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>There are circumstances where even if an animation does change UI, the animation can have minimal impact to the UI thread, and can instead be handled by the composition thread as an independent animation.</source>
          <target state="new">There are circumstances where even if an animation does change UI, the animation can have minimal impact to the UI thread, and can instead be handled by the composition thread as an independent animation.</target>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>An animation is independent if it has any of these characteristics:</source>
          <target state="new">An animation is independent if it has any of these characteristics:</target>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Duration<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243207)</ept> of the animation is 0 seconds (see Caution)</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Duration<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243207)</ept> of the animation is 0 seconds (see Caution)</target>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>The animation targets <bpt id="p1">[</bpt><bpt id="p2">**</bpt>UIElement.Opacity<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR208962)</ept></source>
          <target state="new">The animation targets <bpt id="p1">[</bpt><bpt id="p2">**</bpt>UIElement.Opacity<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR208962)</ept></target>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>The animation targets a sub-property value of these <bpt id="p1">[</bpt><bpt id="p2">**</bpt>UIElement<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR208911)</ept> properties: <bpt id="p3">[</bpt><bpt id="p4">**</bpt>RenderTransform<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR208980)</ept>, <bpt id="p5">[</bpt><bpt id="p6">**</bpt>Projection<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.uielement.projection.aspx)</ept>, <bpt id="p7">[</bpt><bpt id="p8">**</bpt>Clip<ept id="p8">**</ept><ept id="p7">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.uielement.clip)</ept></source>
          <target state="new">The animation targets a sub-property value of these <bpt id="p1">[</bpt><bpt id="p2">**</bpt>UIElement<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR208911)</ept> properties: <bpt id="p3">[</bpt><bpt id="p4">**</bpt>RenderTransform<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR208980)</ept>, <bpt id="p5">[</bpt><bpt id="p6">**</bpt>Projection<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.uielement.projection.aspx)</ept>, <bpt id="p7">[</bpt><bpt id="p8">**</bpt>Clip<ept id="p8">**</ept><ept id="p7">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.uielement.clip)</ept></target>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>The animation targets <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Canvas.Left<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Hh759771)</ept> or <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Canvas.Top<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/Hh759772)</ept></source>
          <target state="new">The animation targets <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Canvas.Left<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Hh759771)</ept> or <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Canvas.Top<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/Hh759772)</ept></target>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>The animation targets a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Brush<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR228076)</ept> value and uses a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>SolidColorBrush<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR242962)</ept>, animating its <bpt id="p5">[</bpt><bpt id="p6">**</bpt>Color<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/BR242963)</ept></source>
          <target state="new">The animation targets a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Brush<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR228076)</ept> value and uses a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>SolidColorBrush<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR242962)</ept>, animating its <bpt id="p5">[</bpt><bpt id="p6">**</bpt>Color<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/BR242963)</ept></target>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>The animation is an <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ObjectAnimationUsingKeyFrames<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR210320)</ept></source>
          <target state="new">The animation is an <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ObjectAnimationUsingKeyFrames<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR210320)</ept></target>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Caution<ept id="p1">**</ept>  In order for your animation to be treated as independent, you must explicitly set <ph id="ph1">`Duration="0"`</ph>.</source>
          <target state="new"><bpt id="p1">**</bpt>Caution<ept id="p1">**</ept>  In order for your animation to be treated as independent, you must explicitly set <ph id="ph1">`Duration="0"`</ph>.</target>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>For example, if you remove <ph id="ph1">`Duration="0"`</ph> from this XAML, the animation is treated as dependent, even though the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>KeyTime<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243169)</ept> of the frame is "0:0:0".</source>
          <target state="new">For example, if you remove <ph id="ph1">`Duration="0"`</ph> from this XAML, the animation is treated as dependent, even though the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>KeyTime<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243169)</ept> of the frame is "0:0:0".</target>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>If your animation doesn't meet these criteria, it's probably a dependent animation.</source>
          <target state="new">If your animation doesn't meet these criteria, it's probably a dependent animation.</target>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>By default, the animation system won't run a dependent animation.</source>
          <target state="new">By default, the animation system won't run a dependent animation.</target>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>So during the process of developing and testing, you might not even be seeing your animation running.</source>
          <target state="new">So during the process of developing and testing, you might not even be seeing your animation running.</target>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>You can still use this animation, but you must specifically enable each such dependent animation.</source>
          <target state="new">You can still use this animation, but you must specifically enable each such dependent animation.</target>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>To enable your animation, set the <bpt id="p1">**</bpt>EnableDependentAnimation<ept id="p1">**</ept> property of the animation object to <bpt id="p2">**</bpt>true<ept id="p2">**</ept>.</source>
          <target state="new">To enable your animation, set the <bpt id="p1">**</bpt>EnableDependentAnimation<ept id="p1">**</ept> property of the animation object to <bpt id="p2">**</bpt>true<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>(Each <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Timeline<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR210517)</ept> subclass that represents an animation has a different implementation of the property but they're all named <ph id="ph1">`EnableDependentAnimation`</ph>.)</source>
          <target state="new">(Each <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Timeline<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR210517)</ept> subclass that represents an animation has a different implementation of the property but they're all named <ph id="ph1">`EnableDependentAnimation`</ph>.)</target>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>The requirement of enabling dependent animations falling onto the app developer is a conscious design aspect of the animation system and the development experience.</source>
          <target state="new">The requirement of enabling dependent animations falling onto the app developer is a conscious design aspect of the animation system and the development experience.</target>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>We want developers to be aware that animations do have a performance cost for the responsiveness of your UI.</source>
          <target state="new">We want developers to be aware that animations do have a performance cost for the responsiveness of your UI.</target>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Poorly performing animations are difficult to isolate and debug in a full-scale app.</source>
          <target state="new">Poorly performing animations are difficult to isolate and debug in a full-scale app.</target>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>So it's better to turn on only the dependent animations you really need for your app's UI experience.</source>
          <target state="new">So it's better to turn on only the dependent animations you really need for your app's UI experience.</target>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>We didn't want to make too easy to compromise your app's performance because of decorative animations that use a lot of cycles.</source>
          <target state="new">We didn't want to make too easy to compromise your app's performance because of decorative animations that use a lot of cycles.</target>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>For more info on performance tips for animation, see <bpt id="p1">[</bpt>Optimize animations and media<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Mt204774)</ept>.</source>
          <target state="new">For more info on performance tips for animation, see <bpt id="p1">[</bpt>Optimize animations and media<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Mt204774)</ept>.</target>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>As an app developer, you can also choose to apply an app-wide setting that always disables dependent animations, even those where <bpt id="p1">**</bpt>EnableDependentAnimation<ept id="p1">**</ept> is <bpt id="p2">**</bpt>true<ept id="p2">**</ept>.</source>
          <target state="new">As an app developer, you can also choose to apply an app-wide setting that always disables dependent animations, even those where <bpt id="p1">**</bpt>EnableDependentAnimation<ept id="p1">**</ept> is <bpt id="p2">**</bpt>true<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Timeline.AllowDependentAnimations<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.media.animation.timeline.allowdependentanimations)</ept>.</source>
          <target state="new">See <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Timeline.AllowDependentAnimations<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.media.animation.timeline.allowdependentanimations)</ept>.</target>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Tip<ept id="p1">**</ept>  If you are composing visual states for a control using Visual Studio, the designer will produce warnings whenever you attempt to apply a dependent animation to a visual state property.</source>
          <target state="new"><bpt id="p1">**</bpt>Tip<ept id="p1">**</ept>  If you are composing visual states for a control using Visual Studio, the designer will produce warnings whenever you attempt to apply a dependent animation to a visual state property.</target>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>Starting and controlling an animation</source>
          <target state="new">Starting and controlling an animation</target>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Everything we've shown you so far doesn't actually cause an animation to run or be applied!</source>
          <target state="new">Everything we've shown you so far doesn't actually cause an animation to run or be applied!</target>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>Until the animation is started and is running, the value changes that an animation is declaring in XAML are latent and won't happen yet.</source>
          <target state="new">Until the animation is started and is running, the value changes that an animation is declaring in XAML are latent and won't happen yet.</target>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>You must explicitly start an animation in some way that's related to the app lifetime or the user experience.</source>
          <target state="new">You must explicitly start an animation in some way that's related to the app lifetime or the user experience.</target>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>At the simplest level, you start an animation by calling the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Begin<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.media.animation.storyboard.begin)</ept> method on the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Storyboard<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR210490)</ept> that's the parent for that animation.</source>
          <target state="new">At the simplest level, you start an animation by calling the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Begin<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.media.animation.storyboard.begin)</ept> method on the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Storyboard<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR210490)</ept> that's the parent for that animation.</target>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>You can't call methods from XAML directly, so whatever you do to enable your animations, you'll be doing it from code.</source>
          <target state="new">You can't call methods from XAML directly, so whatever you do to enable your animations, you'll be doing it from code.</target>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>That will either be the code-behind for the pages or components of your app, or perhaps the logic of your control if you're defining a custom control class.</source>
          <target state="new">That will either be the code-behind for the pages or components of your app, or perhaps the logic of your control if you're defining a custom control class.</target>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>Typically, you'll call <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Begin<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.media.animation.storyboard.begin)</ept> and just let the animation run to its duration completion.</source>
          <target state="new">Typically, you'll call <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Begin<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.media.animation.storyboard.begin)</ept> and just let the animation run to its duration completion.</target>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>However, you can also use <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Pause<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.media.animation.storyboard.pause.aspx)</ept>, <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Resume<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.media.animation.storyboard.resume.aspx)</ept> and <bpt id="p5">[</bpt><bpt id="p6">**</bpt>Stop<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.media.animation.storyboard.stop)</ept> methods to control the <bpt id="p7">[</bpt><bpt id="p8">**</bpt>Storyboard<ept id="p8">**</ept><ept id="p7">](https://msdn.microsoft.com/library/windows/apps/BR210490)</ept> at run-time, as well as other APIs that are used for more advanced animation control scenarios.</source>
          <target state="new">However, you can also use <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Pause<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.media.animation.storyboard.pause.aspx)</ept>, <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Resume<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.media.animation.storyboard.resume.aspx)</ept> and <bpt id="p5">[</bpt><bpt id="p6">**</bpt>Stop<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.media.animation.storyboard.stop)</ept> methods to control the <bpt id="p7">[</bpt><bpt id="p8">**</bpt>Storyboard<ept id="p8">**</ept><ept id="p7">](https://msdn.microsoft.com/library/windows/apps/BR210490)</ept> at run-time, as well as other APIs that are used for more advanced animation control scenarios.</target>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>When you call <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Begin<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.media.animation.storyboard.begin)</ept> on a storyboard that contain animations that repeat infinitely (<ph id="ph1">`RepeatBehavior="Forever"`</ph>) that animation runs until the page containing it is unloaded, or you specifically call <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Pause<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.media.animation.storyboard.pause.aspx)</ept> or <bpt id="p5">[</bpt><bpt id="p6">**</bpt>Stop<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.media.animation.storyboard.stop)</ept>.</source>
          <target state="new">When you call <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Begin<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.media.animation.storyboard.begin)</ept> on a storyboard that contain animations that repeat infinitely (<ph id="ph1">`RepeatBehavior="Forever"`</ph>) that animation runs until the page containing it is unloaded, or you specifically call <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Pause<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.media.animation.storyboard.pause.aspx)</ept> or <bpt id="p5">[</bpt><bpt id="p6">**</bpt>Stop<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.media.animation.storyboard.stop)</ept>.</target>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>Starting an animation from app code</source>
          <target state="new">Starting an animation from app code</target>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>You can either start animations automatically, or in response to user actions.</source>
          <target state="new">You can either start animations automatically, or in response to user actions.</target>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>For the automatic case, you typically use an object lifetime event such as <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Loaded<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR208723)</ept> to act as the animation trigger.</source>
          <target state="new">For the automatic case, you typically use an object lifetime event such as <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Loaded<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR208723)</ept> to act as the animation trigger.</target>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Loaded<ept id="p1">**</ept> event is a good event to use for this because at that point the UI is ready for interaction, and the animation won't be cut off at the beginning because another part of UI was still loading.</source>
          <target state="new">The <bpt id="p1">**</bpt>Loaded<ept id="p1">**</ept> event is a good event to use for this because at that point the UI is ready for interaction, and the animation won't be cut off at the beginning because another part of UI was still loading.</target>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>In this example, the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PointerPressed<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.uielement.pointerpressed)</ept> event is attached to the rectangle so that when the user clicks the rectangle, the animation begins.</source>
          <target state="new">In this example, the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PointerPressed<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.uielement.pointerpressed)</ept> event is attached to the rectangle so that when the user clicks the rectangle, the animation begins.</target>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>The event handler start the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Storyboard<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR210490)</ept> (the animation) by using the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Begin<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.media.animation.storyboard.begin)</ept> method of the <bpt id="p5">**</bpt>Storyboard<ept id="p5">**</ept>.</source>
          <target state="new">The event handler start the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Storyboard<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR210490)</ept> (the animation) by using the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Begin<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.media.animation.storyboard.begin)</ept> method of the <bpt id="p5">**</bpt>Storyboard<ept id="p5">**</ept>.</target>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>[!div class="tabbedCodeSnippets"]</source>
          <target state="new">[!div class="tabbedCodeSnippets"]</target>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>You can handle the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Completed<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.media.animation.timeline.completed.aspx)</ept> event if you want other logic to run after the animation has finished applying values.</source>
          <target state="new">You can handle the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Completed<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.media.animation.timeline.completed.aspx)</ept> event if you want other logic to run after the animation has finished applying values.</target>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>Also, for troubleshooting property system/animation interactions, the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>GetAnimationBaseValue<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR242358)</ept> method can be useful.</source>
          <target state="new">Also, for troubleshooting property system/animation interactions, the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>GetAnimationBaseValue<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR242358)</ept> method can be useful.</target>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Tip<ept id="p1">**</ept>  Whenever you are coding for an app scenario where you are starting an animation from app code, you might want to review again whether an animation or transition already exists in the animation library for your UI scenario.</source>
          <target state="new"><bpt id="p1">**</bpt>Tip<ept id="p1">**</ept>  Whenever you are coding for an app scenario where you are starting an animation from app code, you might want to review again whether an animation or transition already exists in the animation library for your UI scenario.</target>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>The library animations enable a more consistent UI experience across all Windows Runtime apps, and are easier to use.</source>
          <target state="new">The library animations enable a more consistent UI experience across all Windows Runtime apps, and are easier to use.</target>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>Animations for visual states</source>
          <target state="new">Animations for visual states</target>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>The run behavior for a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Storyboard<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR210490)</ept> that's used to define a control's visual state is different from how an app might run a storyboard directly.</source>
          <target state="new">The run behavior for a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Storyboard<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR210490)</ept> that's used to define a control's visual state is different from how an app might run a storyboard directly.</target>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>As applied to a visual state definition in XAML, the <bpt id="p1">**</bpt>Storyboard<ept id="p1">**</ept> is an element of a containing <bpt id="p2">[</bpt><bpt id="p3">**</bpt>VisualState<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/BR209007)</ept>, and the state as a whole is controlled by using the <bpt id="p4">[</bpt><bpt id="p5">**</bpt>VisualStateManager<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/BR209007manager)</ept> API.</source>
          <target state="new">As applied to a visual state definition in XAML, the <bpt id="p1">**</bpt>Storyboard<ept id="p1">**</ept> is an element of a containing <bpt id="p2">[</bpt><bpt id="p3">**</bpt>VisualState<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/BR209007)</ept>, and the state as a whole is controlled by using the <bpt id="p4">[</bpt><bpt id="p5">**</bpt>VisualStateManager<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/BR209007manager)</ept> API.</target>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>Any animations within will run according to their animation values and <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Timeline<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR210517)</ept> properties when the containing <bpt id="p3">**</bpt>VisualState<ept id="p3">**</ept> is used by a control.</source>
          <target state="new">Any animations within will run according to their animation values and <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Timeline<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR210517)</ept> properties when the containing <bpt id="p3">**</bpt>VisualState<ept id="p3">**</ept> is used by a control.</target>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>For more info, see <bpt id="p1">[</bpt>Storyboards for visual states<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/JJ819808)</ept>.</source>
          <target state="new">For more info, see <bpt id="p1">[</bpt>Storyboards for visual states<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/JJ819808)</ept>.</target>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>For visual states, the apparent <bpt id="p1">[</bpt><bpt id="p2">**</bpt>FillBehavior<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243209)</ept> is different.</source>
          <target state="new">For visual states, the apparent <bpt id="p1">[</bpt><bpt id="p2">**</bpt>FillBehavior<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243209)</ept> is different.</target>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>If a visual state is changed to another state, all the property changes applied by the previous visual state and its animations are canceled, even if the new visual state doesn't specifically apply a new animation to a property.</source>
          <target state="new">If a visual state is changed to another state, all the property changes applied by the previous visual state and its animations are canceled, even if the new visual state doesn't specifically apply a new animation to a property.</target>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Storyboard<ept id="p1">**</ept> and <bpt id="p2">**</bpt>EventTrigger<ept id="p2">**</ept></source>
          <target state="new"><bpt id="p1">**</bpt>Storyboard<ept id="p1">**</ept> and <bpt id="p2">**</bpt>EventTrigger<ept id="p2">**</ept></target>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>There is one way to start an animation that can be declared entirely in XAML.</source>
          <target state="new">There is one way to start an animation that can be declared entirely in XAML.</target>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>However, this technique isn't widely used anymore.</source>
          <target state="new">However, this technique isn't widely used anymore.</target>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>It's a legacy syntax from WPF and early versions of Silverlight prior to <bpt id="p1">[</bpt><bpt id="p2">**</bpt>VisualStateManager<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209007manager)</ept> support.</source>
          <target state="new">It's a legacy syntax from WPF and early versions of Silverlight prior to <bpt id="p1">[</bpt><bpt id="p2">**</bpt>VisualStateManager<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209007manager)</ept> support.</target>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>This <bpt id="p1">[</bpt><bpt id="p2">**</bpt>EventTrigger<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR242390)</ept> syntax still works in Windows Runtime XAML for import/compatibility reasons, but only works for a trigger behavior based on the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>FrameworkElement.Loaded<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR208723)</ept> event; attempting to trigger off other events will throw exceptions or fail to compile.</source>
          <target state="new">This <bpt id="p1">[</bpt><bpt id="p2">**</bpt>EventTrigger<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR242390)</ept> syntax still works in Windows Runtime XAML for import/compatibility reasons, but only works for a trigger behavior based on the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>FrameworkElement.Loaded<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR208723)</ept> event; attempting to trigger off other events will throw exceptions or fail to compile.</target>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>For more info, see <bpt id="p1">[</bpt><bpt id="p2">**</bpt>EventTrigger<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR242390)</ept> or <bpt id="p3">[</bpt><bpt id="p4">**</bpt>BeginStoryboard<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR243053)</ept>.</source>
          <target state="new">For more info, see <bpt id="p1">[</bpt><bpt id="p2">**</bpt>EventTrigger<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR242390)</ept> or <bpt id="p3">[</bpt><bpt id="p4">**</bpt>BeginStoryboard<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR243053)</ept>.</target>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>Animating XAML attached properties</source>
          <target state="new">Animating XAML attached properties</target>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>It's not a common scenario, but you can apply an animated value to a XAML attached property.</source>
          <target state="new">It's not a common scenario, but you can apply an animated value to a XAML attached property.</target>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>For more info on what attached properties are and how they work, see <bpt id="p1">[</bpt>Attached properties overview<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Mt185579)</ept>.</source>
          <target state="new">For more info on what attached properties are and how they work, see <bpt id="p1">[</bpt>Attached properties overview<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Mt185579)</ept>.</target>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>Targeting an attached property requires a <bpt id="p1">[</bpt>property-path syntax<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Mt185586)</ept> that encloses the property name in parentheses.</source>
          <target state="new">Targeting an attached property requires a <bpt id="p1">[</bpt>property-path syntax<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Mt185586)</ept> that encloses the property name in parentheses.</target>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>You can animate the built-in attached properties such as <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Canvas.ZIndex<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Hh759773)</ept> by using an <bpt id="p3">[</bpt><bpt id="p4">**</bpt>ObjectAnimationUsingKeyFrames<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR210320)</ept> that applies discrete integer values.</source>
          <target state="new">You can animate the built-in attached properties such as <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Canvas.ZIndex<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Hh759773)</ept> by using an <bpt id="p3">[</bpt><bpt id="p4">**</bpt>ObjectAnimationUsingKeyFrames<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR210320)</ept> that applies discrete integer values.</target>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>However, an existing limitation of the Windows Runtime XAML implementation is that you cannot animate a custom attached property.</source>
          <target state="new">However, an existing limitation of the Windows Runtime XAML implementation is that you cannot animate a custom attached property.</target>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>More animation types, and next steps for learning about animating your UI</source>
          <target state="new">More animation types, and next steps for learning about animating your UI</target>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>Up to now, we've shown the custom animations that are animating between two values, and then linearly interpolating the values as necessary while the animation runs.</source>
          <target state="new">Up to now, we've shown the custom animations that are animating between two values, and then linearly interpolating the values as necessary while the animation runs.</target>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>These are called <bpt id="p1">**</bpt>From<ept id="p1">**</ept><ph id="ph1">/</ph><bpt id="p2">**</bpt>To<ept id="p2">**</ept><ph id="ph2">/</ph><bpt id="p3">**</bpt>By<ept id="p3">**</ept> animations.</source>
          <target state="new">These are called <bpt id="p1">**</bpt>From<ept id="p1">**</ept><ph id="ph1">/</ph><bpt id="p2">**</bpt>To<ept id="p2">**</ept><ph id="ph2">/</ph><bpt id="p3">**</bpt>By<ept id="p3">**</ept> animations.</target>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>But there's another animation type that enables you to declare intermediate values that fall between the start and end.</source>
          <target state="new">But there's another animation type that enables you to declare intermediate values that fall between the start and end.</target>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>These are called <bpt id="p1">*</bpt>key-frame animations<ept id="p1">*</ept>.</source>
          <target state="new">These are called <bpt id="p1">*</bpt>key-frame animations<ept id="p1">*</ept>.</target>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>There's also a way to alter the interpolation logic on either a <bpt id="p1">**</bpt>From<ept id="p1">**</ept><ph id="ph1">/</ph><bpt id="p2">**</bpt>To<ept id="p2">**</ept><ph id="ph2">/</ph><bpt id="p3">**</bpt>By<ept id="p3">**</ept> animation or a key-frame animation.</source>
          <target state="new">There's also a way to alter the interpolation logic on either a <bpt id="p1">**</bpt>From<ept id="p1">**</ept><ph id="ph1">/</ph><bpt id="p2">**</bpt>To<ept id="p2">**</ept><ph id="ph2">/</ph><bpt id="p3">**</bpt>By<ept id="p3">**</ept> animation or a key-frame animation.</target>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>This involves applying an easing function.</source>
          <target state="new">This involves applying an easing function.</target>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>For more info on these concepts, see <bpt id="p1">[</bpt>Key-frame and easing function animations<ept id="p1">](key-frame-and-easing-function-animations.md)</ept>.</source>
          <target state="new">For more info on these concepts, see <bpt id="p1">[</bpt>Key-frame and easing function animations<ept id="p1">](key-frame-and-easing-function-animations.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>Related topics</source>
          <target state="new">Related topics</target>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>Property-path syntax</source>
          <target state="new">Property-path syntax</target>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>Dependency properties overview</source>
          <target state="new">Dependency properties overview</target>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>Key-frame and easing function animations</source>
          <target state="new">Key-frame and easing function animations</target>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>Storyboarded animations for visual states</source>
          <target state="new">Storyboarded animations for visual states</target>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>Control templates</source>
          <target state="new">Control templates</target>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>Storyboard</source>
          <target state="new">Storyboard</target>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>Storyboard.TargetProperty</source>
          <target state="new">Storyboard.TargetProperty</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>