<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci1\graphics\composition-visual-tree.md</xliffext:olfilepath>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0f49dc9a32861d10afe76ff6612d37720725eeee</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-e58fd48" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Composition visual tree</source>
          <target state="new">Composition visual tree</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Composition Visuals make up the visual tree structure which all other features of the composition API use and build on.</source>
          <target state="new">Composition Visuals make up the visual tree structure which all other features of the composition API use and build on.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The API allows developers to define and create one or many visual objects each representing a single node in a visual tree.</source>
          <target state="new">The API allows developers to define and create one or many visual objects each representing a single node in a visual tree.</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Composition visual tree</source>
          <target state="new">Composition visual tree</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Updated for UWP apps on Windows 10.</source>
          <target state="new">Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept></source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept></target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Composition Visuals make up the visual tree structure which all other features of the composition API use and build on.</source>
          <target state="new">Composition Visuals make up the visual tree structure which all other features of the composition API use and build on.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The API allows developers to define and create one or many visual objects each representing a single node in a visual tree.</source>
          <target state="new">The API allows developers to define and create one or many visual objects each representing a single node in a visual tree.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Visuals</source>
          <target state="new">Visuals</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>There are three visual types that make up the visual tree structure plus a base brush class with multiple subclasses that affect the content of a visual:</source>
          <target state="new">There are three visual types that make up the visual tree structure plus a base brush class with multiple subclasses that affect the content of a visual:</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>Visual<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Dn706858)</ept> – base object, the majority of the properties are here, and inherited by the other Visual objects.</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>Visual<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Dn706858)</ept> – base object, the majority of the properties are here, and inherited by the other Visual objects.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>ContainerVisual<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Dn706810)</ept> – derives from <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Visual<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/Dn706858)</ept>, and adds the ability to create children.</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>ContainerVisual<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Dn706810)</ept> – derives from <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Visual<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/Dn706858)</ept>, and adds the ability to create children.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>SpriteVisual<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Mt589433)</ept> – Derives from <bpt id="p3">[</bpt><bpt id="p4">**</bpt>ContainerVisual<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/Dn706810)</ept> and adds the ability to associate a brush so that the Visual can render pixels including images, effects or a solid color.</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>SpriteVisual<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Mt589433)</ept> – Derives from <bpt id="p3">[</bpt><bpt id="p4">**</bpt>ContainerVisual<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/Dn706810)</ept> and adds the ability to associate a brush so that the Visual can render pixels including images, effects or a solid color.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>CompositionBrush<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Mt589398)</ept> – Allows the application of an effect on the content of a Visual.</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>CompositionBrush<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Mt589398)</ept> – Allows the application of an effect on the content of a Visual.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>There are a number of subclasses of CompositionBrush.</source>
          <target state="new">There are a number of subclasses of CompositionBrush.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The CompositionVisual Sample</source>
          <target state="new">The CompositionVisual Sample</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>In the sample there are a number of solid color squares that can be clicked on and dragged about the screen.</source>
          <target state="new">In the sample there are a number of solid color squares that can be clicked on and dragged about the screen.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>When a square is clicked on, it will come to the front, rotate 45 degrees, and become opaque when dragged about.</source>
          <target state="new">When a square is clicked on, it will come to the front, rotate 45 degrees, and become opaque when dragged about.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This shows a number of basic concepts for working with the API including:</source>
          <target state="new">This shows a number of basic concepts for working with the API including:</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Creating a compositor</source>
          <target state="new">Creating a compositor</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Creating a SpriteVisual with a ColorBrush</source>
          <target state="new">Creating a SpriteVisual with a ColorBrush</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Clipping a Visual</source>
          <target state="new">Clipping a Visual</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Rotating a Visual</source>
          <target state="new">Rotating a Visual</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Setting Opacity</source>
          <target state="new">Setting Opacity</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Changing the Visual’s position in the collection.</source>
          <target state="new">Changing the Visual’s position in the collection.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>In the sample there are also three different Visuals at work:</source>
          <target state="new">In the sample there are also three different Visuals at work:</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>Visual<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Dn706858)</ept> – base object, the majority of the properties are here, and inherited by the other Visual objects.</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>Visual<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Dn706858)</ept> – base object, the majority of the properties are here, and inherited by the other Visual objects.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>ContainerVisual<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Dn706810)</ept> – derives from Visual, and adds the ability to create children.</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>ContainerVisual<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Dn706810)</ept> – derives from Visual, and adds the ability to create children.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>SpriteVisual<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Mt589433)</ept> – Derives from Visual and adds the ability to associate a brush so that the Visual can render pixels including images, effects or a solid color.</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>SpriteVisual<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Mt589433)</ept> – Derives from Visual and adds the ability to associate a brush so that the Visual can render pixels including images, effects or a solid color.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>While this sample doesn’t cover concepts like Animations or more complex effects, it contains the building blocks that all of those systems use.</source>
          <target state="new">While this sample doesn’t cover concepts like Animations or more complex effects, it contains the building blocks that all of those systems use.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Creating a Compositor</source>
          <target state="new">Creating a Compositor</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Creating a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Compositor<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Dn706789)</ept> and storing it for use as a factory in a variable is a simple task.</source>
          <target state="new">Creating a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Compositor<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Dn706789)</ept> and storing it for use as a factory in a variable is a simple task.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The following snippet shows creating a new <bpt id="p1">**</bpt>Compositor<ept id="p1">**</ept>:</source>
          <target state="new">The following snippet shows creating a new <bpt id="p1">**</bpt>Compositor<ept id="p1">**</ept>:</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Creating a SpriteVisual and ColorBrush</source>
          <target state="new">Creating a SpriteVisual and ColorBrush</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Using the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Compositor<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Dn706789)</ept> it's easy to create objects whenever you need them, such as a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>SpriteVisual<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/Mt589433)</ept> and a <bpt id="p5">[</bpt><bpt id="p6">**</bpt>CompositionColorBrush<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/Mt589399)</ept>:</source>
          <target state="new">Using the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Compositor<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Dn706789)</ept> it's easy to create objects whenever you need them, such as a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>SpriteVisual<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/Mt589433)</ept> and a <bpt id="p5">[</bpt><bpt id="p6">**</bpt>CompositionColorBrush<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/Mt589399)</ept>:</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>While this is only a few lines of code it demonstrates a powerful concept, <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SpriteVisual<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Mt589433)</ept> objects are the heart of the effects system.</source>
          <target state="new">While this is only a few lines of code it demonstrates a powerful concept, <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SpriteVisual<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Mt589433)</ept> objects are the heart of the effects system.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>SpriteVisual<ept id="p1">**</ept> allows for great flexibility and interplay in color, image and effect creation.</source>
          <target state="new">The <bpt id="p1">**</bpt>SpriteVisual<ept id="p1">**</ept> allows for great flexibility and interplay in color, image and effect creation.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>SpriteVisual<ept id="p1">**</ept> is a single visual type that can fill a 2D rectangle with a brush, in this case a solid color.</source>
          <target state="new">The <bpt id="p1">**</bpt>SpriteVisual<ept id="p1">**</ept> is a single visual type that can fill a 2D rectangle with a brush, in this case a solid color.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Clipping a Visual</source>
          <target state="new">Clipping a Visual</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Compositor<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Dn706789)</ept> can also be used to create clips to a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Visual<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/Dn706858)</ept>.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Compositor<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Dn706789)</ept> can also be used to create clips to a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Visual<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/Dn706858)</ept>.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Below is an example from the sample of using the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>InsetClip<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Dn706825)</ept> to trim each side of the visual:</source>
          <target state="new">Below is an example from the sample of using the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>InsetClip<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Dn706825)</ept> to trim each side of the visual:</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Note: Like other objects in the API <bpt id="p1">[</bpt><bpt id="p2">**</bpt>InsetClip<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Dn706825)</ept> can have animations applied to its properties.</source>
          <target state="new">Note: Like other objects in the API <bpt id="p1">[</bpt><bpt id="p2">**</bpt>InsetClip<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Dn706825)</ept> can have animations applied to its properties.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Rotating a Clip</source>
          <target state="new">Rotating a Clip</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Visual<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Dn706858)</ept> can be transformed with a rotation.</source>
          <target state="new">A <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Visual<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Dn706858)</ept> can be transformed with a rotation.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Note that <bpt id="p1">[</bpt><bpt id="p2">**</bpt>RotationAngle<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/windows.ui.composition.visual.rotationangle)</ept> supports both radians and degrees.</source>
          <target state="new">Note that <bpt id="p1">[</bpt><bpt id="p2">**</bpt>RotationAngle<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/windows.ui.composition.visual.rotationangle)</ept> supports both radians and degrees.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>It defaults to radians, but it’s easy to specify degrees as shown in the following snippet:</source>
          <target state="new">It defaults to radians, but it’s easy to specify degrees as shown in the following snippet:</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Rotation is just one example of a set of transform components provided by the API to make these tasks easier.</source>
          <target state="new">Rotation is just one example of a set of transform components provided by the API to make these tasks easier.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Others include Offset, Scale, Orientation, RotationAxis and a 4x4 TransformMatrix.</source>
          <target state="new">Others include Offset, Scale, Orientation, RotationAxis and a 4x4 TransformMatrix.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Setting Opacity</source>
          <target state="new">Setting Opacity</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Setting the opacity of a visual is a simple operation using a float value.</source>
          <target state="new">Setting the opacity of a visual is a simple operation using a float value.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>For example, in the sample all the squares start at .8 opacity:</source>
          <target state="new">For example, in the sample all the squares start at .8 opacity:</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Like rotation, the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Opacity<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/windows.ui.composition.visual.opacity)</ept> property can be animated.</source>
          <target state="new">Like rotation, the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Opacity<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/windows.ui.composition.visual.opacity)</ept> property can be animated.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Changing the Visual's position in the collection</source>
          <target state="new">Changing the Visual's position in the collection</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The Composition API allows for a Visual's position in a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>VisualCollection<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Dn706858collection)</ept> to be changed in a number of ways, it can be placed above another Visual with <bpt id="p3">[</bpt><bpt id="p4">**</bpt>InsertAbove<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/Dn706858collection_insertabove)</ept>, placed below with <bpt id="p5">[</bpt><bpt id="p6">**</bpt>InsertBelow<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/Dn706858collection_insertbelow)</ept>, move to the top with <bpt id="p7">[</bpt><bpt id="p8">**</bpt>InsertAtTop<ept id="p8">**</ept><ept id="p7">](https://msdn.microsoft.com/library/windows/apps/Dn706858collection_insertattop)</ept> or the bottom with <bpt id="p9">[</bpt><bpt id="p10">**</bpt>InsertAtBottom<ept id="p10">**</ept><ept id="p9">](https://msdn.microsoft.com/library/windows/apps/Dn706858collection_insertatbottom)</ept>.</source>
          <target state="new">The Composition API allows for a Visual's position in a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>VisualCollection<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Dn706858collection)</ept> to be changed in a number of ways, it can be placed above another Visual with <bpt id="p3">[</bpt><bpt id="p4">**</bpt>InsertAbove<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/Dn706858collection_insertabove)</ept>, placed below with <bpt id="p5">[</bpt><bpt id="p6">**</bpt>InsertBelow<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/Dn706858collection_insertbelow)</ept>, move to the top with <bpt id="p7">[</bpt><bpt id="p8">**</bpt>InsertAtTop<ept id="p8">**</ept><ept id="p7">](https://msdn.microsoft.com/library/windows/apps/Dn706858collection_insertattop)</ept> or the bottom with <bpt id="p9">[</bpt><bpt id="p10">**</bpt>InsertAtBottom<ept id="p10">**</ept><ept id="p9">](https://msdn.microsoft.com/library/windows/apps/Dn706858collection_insertatbottom)</ept>.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>In the sample a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Visual<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Dn706858)</ept> that has been clicked on is sorted to the top:</source>
          <target state="new">In the sample a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Visual<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Dn706858)</ept> that has been clicked on is sorted to the top:</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Full Example</source>
          <target state="new">Full Example</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>In the full sample, all of the concepts above are used together to construct and walk a simple tree of <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Visual<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Dn706858)</ept> objects to change opacity without using XAML, WWA, or DirectX.</source>
          <target state="new">In the full sample, all of the concepts above are used together to construct and walk a simple tree of <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Visual<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Dn706858)</ept> objects to change opacity without using XAML, WWA, or DirectX.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>This sample shows how child <bpt id="p1">**</bpt>Visual<ept id="p1">**</ept> objects are created and added and how properties are changed.</source>
          <target state="new">This sample shows how child <bpt id="p1">**</bpt>Visual<ept id="p1">**</ept> objects are created and added and how properties are changed.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>