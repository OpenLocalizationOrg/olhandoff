<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="zh-cn" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">windows-apps-src\monetize\adcontrol-in-xaml-and--net.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">d17d8a39f31bfcbf3172b4592e918f0be4a6bf92</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-781aacf</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>Learn how to use the AdControl class to display banner ads in a XAML app for Windows 10 (UWP), Windows 8.1, or Windows Phone 8.1.</source>
          <target>Learn how to use the AdControl class to display banner ads in a XAML app for Windows 10 (UWP), Windows 8.1, or Windows Phone 8.1.</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>AdControl in XAML and .NET</source>
          <target>AdControl in XAML and .NET</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>AdControl in XAML and .NET</source>
          <target>AdControl in XAML and .NET</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source>Updated for UWP apps on Windows 10.</source>
          <target>Updated for UWP apps on Windows 10.</target>
        </segment>
      </unit>
      <unit id="105">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
        </originalData>
        <segment state="initial">
          <source>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc></source>
          <target>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc></target>
        </segment>
      </unit>
      <unit id="106">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/microsoft.advertising.winrt.ui.adcontrol.aspx)</data>
        </originalData>
        <segment state="initial">
          <source>This walkthrough shows how to use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdControl</pc> class to display banner ads in a XAML app for Windows 10 (UWP), Windows 8.1, or Windows Phone 8.1.</source>
          <target>This walkthrough shows how to use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdControl</pc> class to display banner ads in a XAML app for Windows 10 (UWP), Windows 8.1, or Windows Phone 8.1.</target>
        </segment>
      </unit>
      <unit id="107">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>This walkthrough does not use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdMediatorControl</pc> or ad mediation.</source>
          <target>This walkthrough does not use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdMediatorControl</pc> or ad mediation.</target>
        </segment>
      </unit>
      <unit id="108">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://aka.ms/githubads)</data>
        </originalData>
        <segment state="initial">
          <source>For a complete sample project that demonstrates how to add banner ads to a XAML app using C# and C++, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">advertising samples on GitHub</pc>.</source>
          <target>For a complete sample project that demonstrates how to add banner ads to a XAML app using C# and C++, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">advertising samples on GitHub</pc>.</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source>Prerequisites</source>
          <target>Prerequisites</target>
        </segment>
      </unit>
      <unit id="110">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://aka.ms/store-em-sdk)</data>
        </originalData>
        <segment state="initial">
          <source>Install the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Microsoft Store Engagement and Monetization SDK</pc> with Visual Studio 2015 or Visual Studio 2013.</source>
          <target>Install the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Microsoft Store Engagement and Monetization SDK</pc> with Visual Studio 2015 or Visual Studio 2013.</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source>Code development</source>
          <target>Code development</target>
        </segment>
      </unit>
      <unit id="112">
        <segment state="initial">
          <source>In Visual Studio, open your project or create a new project.</source>
          <target>In Visual Studio, open your project or create a new project.</target>
        </segment>
      </unit>
      <unit id="113">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>If your project targets <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Any CPU</pc>, update your project to use an architecture-specific build output (for example, <pc dataRefEnd="id4" dataRefStart="id3" id="p2">x86</pc>).</source>
          <target>If your project targets <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Any CPU</pc>, update your project to use an architecture-specific build output (for example, <pc dataRefEnd="id4" dataRefStart="id3" id="p2">x86</pc>).</target>
        </segment>
      </unit>
      <unit id="114">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>If your project targets <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Any CPU</pc>, you will not be able to successfully add a reference to the Microsoft advertising library in the following steps.</source>
          <target>If your project targets <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Any CPU</pc>, you will not be able to successfully add a reference to the Microsoft advertising library in the following steps.</target>
        </segment>
      </unit>
      <unit id="115">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](known-issues-for-the-advertising-libraries.md#reference_errors)</data>
        </originalData>
        <segment state="initial">
          <source>For more information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Reference errors caused by targeting Any CPU in your project</pc>.</source>
          <target>For more information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Reference errors caused by targeting Any CPU in your project</pc>.</target>
        </segment>
      </unit>
      <unit id="116">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>From the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Solution Explorer</pc> window, right click <pc dataRefEnd="id4" dataRefStart="id3" id="p2">References</pc>, and select <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Add Reference…</pc></source>
          <target>From the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Solution Explorer</pc> window, right click <pc dataRefEnd="id4" dataRefStart="id3" id="p2">References</pc>, and select <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Add Reference…</pc></target>
        </segment>
      </unit>
      <unit id="117">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>In <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Reference Manager</pc>, select one of the following references depending on your project type:</source>
          <target>In <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Reference Manager</pc>, select one of the following references depending on your project type:</target>
        </segment>
      </unit>
      <unit id="118">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>For a Universal Windows Platform (UWP) project: Expand <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Universal Windows</pc>, click <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Extensions</pc>, and then select the check box next to <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Microsoft Advertising SDK for XAML</pc> (Version 10.0).</source>
          <target>For a Universal Windows Platform (UWP) project: Expand <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Universal Windows</pc>, click <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Extensions</pc>, and then select the check box next to <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Microsoft Advertising SDK for XAML</pc> (Version 10.0).</target>
        </segment>
      </unit>
      <unit id="119">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>For a Windows 8.1 project: Expand <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows 8.1</pc>, click <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Extensions</pc>, and then select the check box next to <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Ad Mediator SDK for Windows 8.1 XAML</pc>.</source>
          <target>For a Windows 8.1 project: Expand <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows 8.1</pc>, click <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Extensions</pc>, and then select the check box next to <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Ad Mediator SDK for Windows 8.1 XAML</pc>.</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source>This option will add both the Microsoft advertising and ad mediator libraries to your project, but you can ignore the ad mediator libraries.</source>
          <target>This option will add both the Microsoft advertising and ad mediator libraries to your project, but you can ignore the ad mediator libraries.</target>
        </segment>
      </unit>
      <unit id="121">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>For a Windows Phone 8.1 project: Expand <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows Phone 8.1</pc>, click <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Extensions</pc>, and then select the check box next to <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Ad Mediator SDK for Windows Phone 8.1 XAML</pc>.</source>
          <target>For a Windows Phone 8.1 project: Expand <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows Phone 8.1</pc>, click <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Extensions</pc>, and then select the check box next to <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Ad Mediator SDK for Windows Phone 8.1 XAML</pc>.</target>
        </segment>
      </unit>
      <unit id="122">
        <segment state="initial">
          <source>This option will add both the Microsoft advertising and ad mediator libraries to your project, but you can ignore the ad mediator libraries.</source>
          <target>This option will add both the Microsoft advertising and ad mediator libraries to your project, but you can ignore the ad mediator libraries.</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source>addreferences</source>
          <target>addreferences</target>
        </segment>
      </unit>
      <unit id="124">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  This image is for Visual Studio 2015 building a UWP project for Windows 10.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  This image is for Visual Studio 2015 building a UWP project for Windows 10.</target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source>If you are building a Windows 8.1 or Windows Phone 8.1 app or using Visual Studio 2013, your screen will look different.</source>
          <target>If you are building a Windows 8.1 or Windows Phone 8.1 app or using Visual Studio 2013, your screen will look different.</target>
        </segment>
      </unit>
      <unit id="126">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>In <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Reference Manager</pc>, click OK.</source>
          <target>In <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Reference Manager</pc>, click OK.</target>
        </segment>
      </unit>
      <unit id="127">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Modify the XAML for the page where you are embedding advertising to include the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Microsoft.Advertising.WinRT.UI</pc> namespace.</source>
          <target>Modify the XAML for the page where you are embedding advertising to include the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Microsoft.Advertising.WinRT.UI</pc> namespace.</target>
        </segment>
      </unit>
      <unit id="128">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>For example, in the default sample app generated by Visual Studio (named, in this app, MyAdFundedWindows10AppXAML), the XAML page is <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MainPage.XAML</pc>.</source>
          <target>For example, in the default sample app generated by Visual Studio (named, in this app, MyAdFundedWindows10AppXAML), the XAML page is <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MainPage.XAML</pc>.</target>
        </segment>
      </unit>
      <unit id="129">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Page</pc> section of the MainPage.xaml file generated by Visual Studio has the following code.</source>
          <target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Page</pc> section of the MainPage.xaml file generated by Visual Studio has the following code.</target>
        </segment>
      </unit>
      <unit id="130">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>Add the namespace reference <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Microsoft.Advertising.WinRT.UI</pc> so the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Page</pc> section of the MainPage.xaml file has the following code.</source>
          <target>Add the namespace reference <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Microsoft.Advertising.WinRT.UI</pc> so the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Page</pc> section of the MainPage.xaml file has the following code.</target>
        </segment>
      </unit>
      <unit id="131">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Grid</pc> tag, add the code for the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">AdControl</pc>.</source>
          <target>In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Grid</pc> tag, add the code for the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">AdControl</pc>.</target>
        </segment>
      </unit>
      <unit id="132">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/microsoft.advertising.winrt.ui.adcontrol.applicationid.aspx)</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/microsoft.advertising.winrt.ui.adcontrol.adunitid.aspx)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">[</data>
          <data id="id8">](test-mode-values.md)</data>
        </originalData>
        <segment state="initial">
          <source>Assign the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ApplicationId</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">AdUnitId</pc> properties in the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Page</pc> to the test values provided in <pc dataRefEnd="id8" dataRefStart="id7" id="p4">Test mode values</pc>.</source>
          <target>Assign the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ApplicationId</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">AdUnitId</pc> properties in the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Page</pc> to the test values provided in <pc dataRefEnd="id8" dataRefStart="id7" id="p4">Test mode values</pc>.</target>
        </segment>
      </unit>
      <unit id="133">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>   You will replace the test values with live values before submitting your app for submission.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>   You will replace the test values with live values before submitting your app for submission.</target>
        </segment>
      </unit>
      <unit id="134">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](supported-ad-sizes-for-banner-ads.md)</data>
        </originalData>
        <segment state="initial">
          <source>Adjust the height and width of the control so it is one of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">supported ad sizes for banner ads</pc>.</source>
          <target>Adjust the height and width of the control so it is one of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">supported ad sizes for banner ads</pc>.</target>
        </segment>
      </unit>
      <unit id="135">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>The complete <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Grid</pc> tag looks like this code.</source>
          <target>The complete <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Grid</pc> tag looks like this code.</target>
        </segment>
      </unit>
      <unit id="136">
        <segment state="initial">
          <source>The complete code for the MainPage.xaml file should look like this.</source>
          <target>The complete code for the MainPage.xaml file should look like this.</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source>Compile and run the app to see it with an ad.</source>
          <target>Compile and run the app to see it with an ad.</target>
        </segment>
      </unit>
      <unit id="138">
        <segment state="initial">
          <source>Release your app with live ads using Windows Dev Center</source>
          <target>Release your app with live ads using Windows Dev Center</target>
        </segment>
      </unit>
      <unit id="139">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">&amp;gt;</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">[</data>
          <data id="id7">](../publish/monetize-with-ads.md)</data>
        </originalData>
        <segment state="initial">
          <source>In the Dev Center dashboard, go to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Monetization</pc><ph dataRef="id3" id="ph1" /><pc dataRefEnd="id5" dataRefStart="id4" id="p2">Monetize with ads</pc> page for your app, and <pc dataRefEnd="id7" dataRefStart="id6" id="p3">create a standalone Microsoft Advertising unit</pc>.</source>
          <target>In the Dev Center dashboard, go to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Monetization</pc><ph dataRef="id3" id="ph1" /><pc dataRefEnd="id5" dataRefStart="id4" id="p2">Monetize with ads</pc> page for your app, and <pc dataRefEnd="id7" dataRefStart="id6" id="p3">create a standalone Microsoft Advertising unit</pc>.</target>
        </segment>
      </unit>
      <unit id="140">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>For the ad unit type, specify <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Banner</pc>.</source>
          <target>For the ad unit type, specify <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Banner</pc>.</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source>Make note of both the ad unit ID and the application ID.</source>
          <target>Make note of both the ad unit ID and the application ID.</target>
        </segment>
      </unit>
      <unit id="142">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>In your code, replace the test ad unit values (<pc dataRefEnd="id2" dataRefStart="id1" id="p1">ApplicationId</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">AdUnitId</pc>) with the live values you generated in Dev Center.</source>
          <target>In your code, replace the test ad unit values (<pc dataRefEnd="id2" dataRefStart="id1" id="p1">ApplicationId</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">AdUnitId</pc>) with the live values you generated in Dev Center.</target>
        </segment>
      </unit>
      <unit id="143">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](../publish/app-submissions.md)</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Submit your app</pc> to the Store using the Dev Center dashboard.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Submit your app</pc> to the Store using the Dev Center dashboard.</target>
        </segment>
      </unit>
      <unit id="144">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](../publish/advertising-performance-report.md)</data>
        </originalData>
        <segment state="initial">
          <source>Review your <pc dataRefEnd="id2" dataRefStart="id1" id="p1">advertising performance reports</pc> in the Dev Center dashboard.</source>
          <target>Review your <pc dataRefEnd="id2" dataRefStart="id1" id="p1">advertising performance reports</pc> in the Dev Center dashboard.</target>
        </segment>
      </unit>
      <unit id="145">
        <segment state="initial">
          <source>Notes</source>
          <target>Notes</target>
        </segment>
      </unit>
      <unit id="146">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](xaml-properties-example.md)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>C#: See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">XAML properties example</pc> for an example of how to assign event handlers to <pc dataRefEnd="id4" dataRefStart="id3" id="p2">AdControl</pc> events.</source>
          <target>C#: See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">XAML properties example</pc> for an example of how to assign event handlers to <pc dataRefEnd="id4" dataRefStart="id3" id="p2">AdControl</pc> events.</target>
        </segment>
      </unit>
      <unit id="147">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](adcontrol-events-in-c.md)</data>
        </originalData>
        <segment state="initial">
          <source>Then see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdControl events in C#</pc> for sample code that shows event handlers written in C#.</source>
          <target>Then see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdControl events in C#</pc> for sample code that shows event handlers written in C#.</target>
        </segment>
      </unit>
      <unit id="148">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](xaml-properties-example.md)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>Visual Basic: See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">XAML properties example</pc> for an example of how to assign event handlers to <pc dataRefEnd="id4" dataRefStart="id3" id="p2">AdControl</pc> events.</source>
          <target>Visual Basic: See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">XAML properties example</pc> for an example of how to assign event handlers to <pc dataRefEnd="id4" dataRefStart="id3" id="p2">AdControl</pc> events.</target>
        </segment>
      </unit>
      <unit id="149">
        <segment state="initial">
          <source>C++: The current release of the Microsoft advertising libraries support C++.</source>
          <target>C++: The current release of the Microsoft advertising libraries support C++.</target>
        </segment>
      </unit>
      <unit id="150">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdControl</pc> loads the CLR and uses managed C++.</source>
          <target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdControl</pc> loads the CLR and uses managed C++.</target>
        </segment>
      </unit>
      <unit id="151">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](adcontrol-error-handling.md)</data>
        </originalData>
        <segment state="initial">
          <source>Error Handling: To learn about how to handle errors, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdControl error handling</pc>.</source>
          <target>Error Handling: To learn about how to handle errors, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdControl error handling</pc>.</target>
        </segment>
      </unit>
      <unit id="152">
        <segment state="initial">
          <source>Related topics</source>
          <target>Related topics</target>
        </segment>
      </unit>
      <unit id="153">
        <segment state="initial">
          <source>Advertising samples on GitHub</source>
          <target>Advertising samples on GitHub</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>