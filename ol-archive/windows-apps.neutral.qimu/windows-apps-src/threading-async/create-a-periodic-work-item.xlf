<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="zh-cn" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">windows-apps-src\threading-async\create-a-periodic-work-item.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">f5b16c62b591481c52cfa4bb7e1ddb162bf18f42</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-781aacf</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>Create a periodic work item</source>
          <target>Create a periodic work item</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>Learn how to create a work item that repeats periodically.</source>
          <target>Learn how to create a work item that repeats periodically.</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>Create a periodic work item</source>
          <target>Create a periodic work item</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source>Updated for UWP apps on Windows 10.</source>
          <target>Updated for UWP apps on Windows 10.</target>
        </segment>
      </unit>
      <unit id="105">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
        </originalData>
        <segment state="initial">
          <source>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc></source>
          <target>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc></target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source>Important APIs</source>
          <target>Important APIs</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source>CreatePeriodicTimer</source>
          <target>CreatePeriodicTimer</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source>ThreadPoolTimer</source>
          <target>ThreadPoolTimer</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source>Learn how to create a work item that repeats periodically.</source>
          <target>Learn how to create a work item that repeats periodically.</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source>Create the periodic work item</source>
          <target>Create the periodic work item</target>
        </segment>
      </unit>
      <unit id="111">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/Hh967915)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CreatePeriodicTimer</pc></pc> method to create a periodic work item.</source>
          <target>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CreatePeriodicTimer</pc></pc> method to create a periodic work item.</target>
        </segment>
      </unit>
      <unit id="112">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
        </originalData>
        <segment state="initial">
          <source>Supply a lambda that accomplishes the work, and use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">period</pc> parameter to specify the interval between submissions.</source>
          <target>Supply a lambda that accomplishes the work, and use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">period</pc> parameter to specify the interval between submissions.</target>
        </segment>
      </unit>
      <unit id="113">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR225996)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>The period is specified using a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">TimeSpan</pc></pc> structure.</source>
          <target>The period is specified using a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">TimeSpan</pc></pc> structure.</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source>The work item will be resubmitted every time the period elapses, so make sure the period is long enough for work to complete.</source>
          <target>The work item will be resubmitted every time the period elapses, so make sure the period is long enough for work to complete.</target>
        </segment>
      </unit>
      <unit id="115">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.system.threading.threadpooltimer.createtimer.aspx)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/BR230587)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">
              <pc dataRefEnd="id4" dataRefStart="id3" id="p2">CreateTimer</pc>
            </pc> returns a <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">ThreadPoolTimer</pc></pc> object.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">
              <pc dataRefEnd="id4" dataRefStart="id3" id="p2">CreateTimer</pc>
            </pc> returns a <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">ThreadPoolTimer</pc></pc> object.</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source>Store this object in case the timer needs to be canceled.</source>
          <target>Store this object in case the timer needs to be canceled.</target>
        </segment>
      </unit>
      <unit id="117">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  Avoid specifying a value of zero (or any value less than one millisecond) for the interval.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  Avoid specifying a value of zero (or any value less than one millisecond) for the interval.</target>
        </segment>
      </unit>
      <unit id="118">
        <segment state="initial">
          <source>This causes the periodic timer to behave as a single-shot timer instead.</source>
          <target>This causes the periodic timer to behave as a single-shot timer instead.</target>
        </segment>
      </unit>
      <unit id="119">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/Hh750317)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  You can use <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">CoreDispatcher.RunAsync</pc></pc> to access the UI and show progress from the work item.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  You can use <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">CoreDispatcher.RunAsync</pc></pc> to access the UI and show progress from the work item.</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source>The following example creates a work item that runs once every 60 seconds:</source>
          <target>The following example creates a work item that runs once every 60 seconds:</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source>[!div class="tabbedCodeSnippets"]</source>
          <target>[!div class="tabbedCodeSnippets"]</target>
        </segment>
      </unit>
      <unit id="122">
        <segment state="initial">
          <source>Handle cancellation of the periodic work item (optional)</source>
          <target>Handle cancellation of the periodic work item (optional)</target>
        </segment>
      </unit>
      <unit id="123">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/Hh967926)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>If needed, you can handle cancellation of the periodic timer with a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">TimerDestroyedHandler</pc></pc>.</source>
          <target>If needed, you can handle cancellation of the periodic timer with a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">TimerDestroyedHandler</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="124">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/Hh967915)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CreatePeriodicTimer</pc></pc> overload to supply an additional lambda that handles cancellation of the periodic work item.</source>
          <target>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CreatePeriodicTimer</pc></pc> overload to supply an additional lambda that handles cancellation of the periodic work item.</target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source>The following example creates a periodic work item that repeats every 60 seconds and it also supplies a cancellation handler:</source>
          <target>The following example creates a periodic work item that repeats every 60 seconds and it also supplies a cancellation handler:</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source>[!div class="tabbedCodeSnippets"]</source>
          <target>[!div class="tabbedCodeSnippets"]</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source>Cancel the timer</source>
          <target>Cancel the timer</target>
        </segment>
      </unit>
      <unit id="128">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.system.threading.threadpooltimer.cancel.aspx)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>When necessary, call the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Cancel</pc></pc> method to stop the periodic work item from repeating.</source>
          <target>When necessary, call the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Cancel</pc></pc> method to stop the periodic work item from repeating.</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source>If the work item is running when the periodic timer is cancelled it is allowed to complete.</source>
          <target>If the work item is running when the periodic timer is cancelled it is allowed to complete.</target>
        </segment>
      </unit>
      <unit id="130">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/Hh967926)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">TimerDestroyedHandler</pc></pc> (if provided) is called when all instances of the periodic work item have completed.</source>
          <target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">TimerDestroyedHandler</pc></pc> (if provided) is called when all instances of the periodic work item have completed.</target>
        </segment>
      </unit>
      <unit id="131">
        <segment state="initial">
          <source>[!div class="tabbedCodeSnippets"]</source>
          <target>[!div class="tabbedCodeSnippets"]</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source>Remarks</source>
          <target>Remarks</target>
        </segment>
      </unit>
      <unit id="133">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](use-a-timer-to-submit-a-work-item.md)</data>
        </originalData>
        <segment state="initial">
          <source>For information about single-use timers, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Use a timer to submit a work item</pc>.</source>
          <target>For information about single-use timers, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Use a timer to submit a work item</pc>.</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source>Related topics</source>
          <target>Related topics</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source>Submit a work item to the thread pool</source>
          <target>Submit a work item to the thread pool</target>
        </segment>
      </unit>
      <unit id="136">
        <segment state="initial">
          <source>Best practices for using the thread pool</source>
          <target>Best practices for using the thread pool</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source>Use a timer to submit a work item</source>
          <target>Use a timer to submit a work item</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>