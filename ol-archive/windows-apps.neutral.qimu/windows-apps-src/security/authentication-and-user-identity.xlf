<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="zh-cn" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">windows-apps-src\security\authentication-and-user-identity.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">e748b319cdeda82aadaf8516e41883a3e32dc10c</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-781aacf</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>Authentication and user identity</source>
          <target>Authentication and user identity</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>Universal Windows Platform (UWP) apps have several options for user authentication, ranging from simple single sign-on (SSO) using Web authentication broker to highly secure two-factor authentication.</source>
          <target>Universal Windows Platform (UWP) apps have several options for user authentication, ranging from simple single sign-on (SSO) using Web authentication broker to highly secure two-factor authentication.</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>Authentication and user identity</source>
          <target>Authentication and user identity</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source>Updated for UWP apps on Windows 10.</source>
          <target>Updated for UWP apps on Windows 10.</target>
        </segment>
      </unit>
      <unit id="105">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
        </originalData>
        <segment state="initial">
          <source>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc></source>
          <target>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc></target>
        </segment>
      </unit>
      <unit id="106">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](web-authentication-broker.md)</data>
        </originalData>
        <segment state="initial">
          <source>Universal Windows Platform (UWP) apps have several options for user authentication, ranging from simple single sign-on (SSO) using <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Web authentication broker</pc> to highly secure two-factor authentication.</source>
          <target>Universal Windows Platform (UWP) apps have several options for user authentication, ranging from simple single sign-on (SSO) using <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Web authentication broker</pc> to highly secure two-factor authentication.</target>
        </segment>
      </unit>
      <unit id="107">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](web-authentication-broker.md)</data>
        </originalData>
        <segment state="initial">
          <source>For regular app connections to third-party identity provider services, such as Facebook, Twitter, Flickr, and so on, use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Web authentication broker</pc>.</source>
          <target>For regular app connections to third-party identity provider services, such as Facebook, Twitter, Flickr, and so on, use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Web authentication broker</pc>.</target>
        </segment>
      </unit>
      <unit id="108">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](credential-locker.md)</data>
        </originalData>
        <segment state="initial">
          <source>For added convenience, use <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Credential Locker</pc> to save and roam the user's login information.</source>
          <target>For added convenience, use <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Credential Locker</pc> to save and roam the user's login information.</target>
        </segment>
      </unit>
      <unit id="109">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](microsoft-passport.md)</data>
        </originalData>
        <segment state="initial">
          <source>Enterprises using Windows 10 should strongly consider using <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Microsoft Passport and Windows Hello</pc>, which enables highly secure two-factor authentication.</source>
          <target>Enterprises using Windows 10 should strongly consider using <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Microsoft Passport and Windows Hello</pc>, which enables highly secure two-factor authentication.</target>
        </segment>
      </unit>
      <unit id="110">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](smart-cards.md)</data>
          <data id="id3">[</data>
          <data id="id4">](fingerprint-biometrics.md)</data>
        </originalData>
        <segment state="initial">
          <source>If using Microsoft Passport is not possible, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Smart cards</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Fingerprint biometrics</pc> can add an additional layer of security.</source>
          <target>If using Microsoft Passport is not possible, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Smart cards</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Fingerprint biometrics</pc> can add an additional layer of security.</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source>Topic</source>
          <target>Topic</target>
        </segment>
      </unit>
      <unit id="112">
        <segment state="initial">
          <source>Description</source>
          <target>Description</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source>Credential locker</source>
          <target>Credential locker</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source>This article describes how apps can use the Credential Locker to securely store and retrieve user credentials, and roam them between devices with the user's Microsoft account</source>
          <target>This article describes how apps can use the Credential Locker to securely store and retrieve user credentials, and roam them between devices with the user's Microsoft account</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source>Fingerprint biometrics</source>
          <target>Fingerprint biometrics</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source>This article explains how to add fingerprint biometrics to your app.</source>
          <target>This article explains how to add fingerprint biometrics to your app.</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source>Including a request for fingerprint authentication when the user must consent to a particular action increases the security of your app.</source>
          <target>Including a request for fingerprint authentication when the user must consent to a particular action increases the security of your app.</target>
        </segment>
      </unit>
      <unit id="118">
        <segment state="initial">
          <source>For example, you could require fingerprint authentication before authorizing an in-app purchase, or access to restricted resources.</source>
          <target>For example, you could require fingerprint authentication before authorizing an in-app purchase, or access to restricted resources.</target>
        </segment>
      </unit>
      <unit id="119">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn279134)</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/hh701356)</data>
        </originalData>
        <segment state="initial">
          <source>Fingerprint authentication is managed using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">UserConsentVerifier</pc> class in the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Security.Credentials.UI</pc> namespace.</source>
          <target>Fingerprint authentication is managed using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">UserConsentVerifier</pc> class in the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Security.Credentials.UI</pc> namespace.</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source>Microsoft Passport and Windows Hello</source>
          <target>Microsoft Passport and Windows Hello</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source>This article describes the new Windows 10 Microsoft Passport technology, and discusses how developers can implement this technology to protect their apps and backend services.</source>
          <target>This article describes the new Windows 10 Microsoft Passport technology, and discusses how developers can implement this technology to protect their apps and backend services.</target>
        </segment>
      </unit>
      <unit id="122">
        <segment state="initial">
          <source>It highlights specific capabilities of these technologies that help mitigate threats from conventional credentials and provides guidance about designing and deploying these technologies as part of your Windows 10 rollout.</source>
          <target>It highlights specific capabilities of these technologies that help mitigate threats from conventional credentials and provides guidance about designing and deploying these technologies as part of your Windows 10 rollout.</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source>Create a Microsoft Passport login app</source>
          <target>Create a Microsoft Passport login app</target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source>Part 1 of a complete walkthrough on how to create a Windows 10 UWP (Universal Windows Platform) app that uses Microsoft Passport as an alternative to traditional username and password authentication systems.</source>
          <target>Part 1 of a complete walkthrough on how to create a Windows 10 UWP (Universal Windows Platform) app that uses Microsoft Passport as an alternative to traditional username and password authentication systems.</target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source>Create a Microsoft Passport login service</source>
          <target>Create a Microsoft Passport login service</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source>Part 2 of a complete walkthrough on how to use Microsoft Passport as an alternative to traditional username and password authentication systems in Windows 10 UWP (Universal Windows platform) apps.</source>
          <target>Part 2 of a complete walkthrough on how to use Microsoft Passport as an alternative to traditional username and password authentication systems in Windows 10 UWP (Universal Windows platform) apps.</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source>Smart cards</source>
          <target>Smart cards</target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source>This topic explains how apps can use smart cards to connect users to secure network services, including how to access physical smart card readers, create virtual smart cards, communicate with smart cards, authenticate users, reset user PINs, and remove or disconnect smart cards.</source>
          <target>This topic explains how apps can use smart cards to connect users to secure network services, including how to access physical smart card readers, create virtual smart cards, communicate with smart cards, authenticate users, reset user PINs, and remove or disconnect smart cards.</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source>Share certificates between apps</source>
          <target>Share certificates between apps</target>
        </segment>
      </unit>
      <unit id="130">
        <segment state="initial">
          <source>UWP apps that require secure authentication beyond a user Id and password combination can use certificates for authentication.</source>
          <target>UWP apps that require secure authentication beyond a user Id and password combination can use certificates for authentication.</target>
        </segment>
      </unit>
      <unit id="131">
        <segment state="initial">
          <source>Certificate authentication provides a high level of trust when authenticating a user.</source>
          <target>Certificate authentication provides a high level of trust when authenticating a user.</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source>In some cases, a group of services will want to authenticate a user for multiple apps.</source>
          <target>In some cases, a group of services will want to authenticate a user for multiple apps.</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source>This article shows how you can authenticate multiple apps using the same certificate, and how you can provide convenient code for a user to import a certificate that was provided to access secured web services.</source>
          <target>This article shows how you can authenticate multiple apps using the same certificate, and how you can provide convenient code for a user to import a certificate that was provided to access secured web services.</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source>Windows Unlock with companion IoT devices</source>
          <target>Windows Unlock with companion IoT devices</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source>A companion device is a device that can act in conjunction with your Windows 10 desktop to enhance the user authentication experience.</source>
          <target>A companion device is a device that can act in conjunction with your Windows 10 desktop to enhance the user authentication experience.</target>
        </segment>
      </unit>
      <unit id="136">
        <segment state="initial">
          <source>Using the Companion Device Framework, a companion device can provide a rich experience for Microsoft Passport even when Windows Hello is not available (e.g., if the Windows 10 desktop lacks a camera for face authentication or fingerprint reader device, for example).</source>
          <target>Using the Companion Device Framework, a companion device can provide a rich experience for Microsoft Passport even when Windows Hello is not available (e.g., if the Windows 10 desktop lacks a camera for face authentication or fingerprint reader device, for example).</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source>Web Account Manager</source>
          <target>Web Account Manager</target>
        </segment>
      </unit>
      <unit id="138">
        <segment state="initial">
          <source>This article describes how to show the AccountsSettingsPane and connect your Universal Windows Platform (UWP) app to external identity providers, like Microsoft or Facebook, using the new Windows 10 Web Account Manager APIs.</source>
          <target>This article describes how to show the AccountsSettingsPane and connect your Universal Windows Platform (UWP) app to external identity providers, like Microsoft or Facebook, using the new Windows 10 Web Account Manager APIs.</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source>You'll learn how to request a user's permission to use their Microsoft account, obtain an access token, and use it to perform basic operations (like get profile data or upload files to their OneDrive).</source>
          <target>You'll learn how to request a user's permission to use their Microsoft account, obtain an access token, and use it to perform basic operations (like get profile data or upload files to their OneDrive).</target>
        </segment>
      </unit>
      <unit id="140">
        <segment state="initial">
          <source>Web authentication broker</source>
          <target>Web authentication broker</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source>This article explains how to connect your app to an online identity provider that uses authentication protocols like OpenID or OAuth, such as Facebook, Twitter, Flickr, Instagram, and so on.</source>
          <target>This article explains how to connect your app to an online identity provider that uses authentication protocols like OpenID or OAuth, such as Facebook, Twitter, Flickr, Instagram, and so on.</target>
        </segment>
      </unit>
      <unit id="142">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br212066)</data>
        </originalData>
        <segment state="initial">
          <source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AuthenticateAsync</pc> method sends a request to the online identity provider and gets back an access token that describes the provider resources to which the app has access.</source>
          <target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AuthenticateAsync</pc> method sends a request to the online identity provider and gets back an access token that describes the provider resources to which the app has access.</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>