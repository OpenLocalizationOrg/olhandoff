<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="zh-cn" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">windows-apps-src\security\web-authentication-broker.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">96ca8d019fe6cbf742c98edf0b8bf04b35f71dfd</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-781aacf</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>Web authentication broker</source>
          <target>Web authentication broker</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>This article explains how to connect your Universal Windows Platform (UWP) app to an online identity provider that uses authentication protocols like OpenID or OAuth, such as Facebook, Twitter, Flickr, Instagram, and so on.</source>
          <target>This article explains how to connect your Universal Windows Platform (UWP) app to an online identity provider that uses authentication protocols like OpenID or OAuth, such as Facebook, Twitter, Flickr, Instagram, and so on.</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>Web authentication broker</source>
          <target>Web authentication broker</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source>Updated for UWP apps on Windows 10.</source>
          <target>Updated for UWP apps on Windows 10.</target>
        </segment>
      </unit>
      <unit id="105">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
        </originalData>
        <segment state="initial">
          <source>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc></source>
          <target>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc></target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source>This article explains how to connect your Universal Windows Platform (UWP) app to an online identity provider that uses authentication protocols like OpenID or OAuth, such as Facebook, Twitter, Flickr, Instagram, and so on.</source>
          <target>This article explains how to connect your Universal Windows Platform (UWP) app to an online identity provider that uses authentication protocols like OpenID or OAuth, such as Facebook, Twitter, Flickr, Instagram, and so on.</target>
        </segment>
      </unit>
      <unit id="107">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br212066)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">AuthenticateAsync</pc></pc> method sends a request to the online identity provider and gets back an access token that describes the provider resources to which the app has access.</source>
          <target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">AuthenticateAsync</pc></pc> method sends a request to the online identity provider and gets back an access token that describes the provider resources to which the app has access.</target>
        </segment>
      </unit>
      <unit id="108">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](http://go.microsoft.com/fwlink/p/?LinkId=620622)</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  For a complete, working code sample, clone the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">WebAuthenticationBroker repo on GitHub</pc>.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  For a complete, working code sample, clone the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">WebAuthenticationBroker repo on GitHub</pc>.</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source>Register your app with your online provider</source>
          <target>Register your app with your online provider</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source>You must register your app with the online identity provider to which you want to connect.</source>
          <target>You must register your app with the online identity provider to which you want to connect.</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source>You can find out how to register your app from the identity provider.</source>
          <target>You can find out how to register your app from the identity provider.</target>
        </segment>
      </unit>
      <unit id="112">
        <segment state="initial">
          <source>After registering, the online provider typically gives you an Id or secret key for your app.</source>
          <target>After registering, the online provider typically gives you an Id or secret key for your app.</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source>Build the authentication request URI</source>
          <target>Build the authentication request URI</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source>The request URI consists of the address where you send the authentication request to your online provider appended with other required information, such as an app ID or secret, a redirect URI where the user is sent after completing authentication, and the expected response type.</source>
          <target>The request URI consists of the address where you send the authentication request to your online provider appended with other required information, such as an app ID or secret, a redirect URI where the user is sent after completing authentication, and the expected response type.</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source>You can find out from your provider what parameters are required.</source>
          <target>You can find out from your provider what parameters are required.</target>
        </segment>
      </unit>
      <unit id="116">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/br212066)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>The request URI is sent as the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">requestUri</pc> parameter of the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">AuthenticateAsync</pc></pc> method.</source>
          <target>The request URI is sent as the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">requestUri</pc> parameter of the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">AuthenticateAsync</pc></pc> method.</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source>It must be a secure address (it must start with https://)</source>
          <target>It must be a secure address (it must start with https://)</target>
        </segment>
      </unit>
      <unit id="118">
        <segment state="initial">
          <source>The following example shows how to build the request URI.</source>
          <target>The following example shows how to build the request URI.</target>
        </segment>
      </unit>
      <unit id="119">
        <segment state="initial">
          <source>Connect to the online provider</source>
          <target>Connect to the online provider</target>
        </segment>
      </unit>
      <unit id="120">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br212066)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>You call the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">AuthenticateAsync</pc></pc> method to connect to the online identity provider and get an access token.</source>
          <target>You call the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">AuthenticateAsync</pc></pc> method to connect to the online identity provider and get an access token.</target>
        </segment>
      </unit>
      <unit id="121">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
          <data id="id3">*</data>
          <data id="id4">*</data>
        </originalData>
        <segment state="initial">
          <source>The method takes the URI constructed in the previous step as the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">requestUri</pc> parameter, and a URI to which you want the user to be redirected as the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">callbackUri</pc> parameter.</source>
          <target>The method takes the URI constructed in the previous step as the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">requestUri</pc> parameter, and a URI to which you want the user to be redirected as the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">callbackUri</pc> parameter.</target>
        </segment>
      </unit>
      <unit id="122">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br212066)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/br227044)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
          <data id="id9">[</data>
          <data id="id10">](https://msdn.microsoft.com/library/windows/apps/dn632425)</data>
          <data id="id11">**</data>
          <data id="id12">**</data>
        </originalData>
        <segment state="initial">
          <source>In addition to <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">AuthenticateAsync</pc></pc>, the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Windows.Security.Authentication.Web</pc></pc> namespace contains an <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">AuthenticateAndContinue</pc></pc> method.</source>
          <target>In addition to <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">AuthenticateAsync</pc></pc>, the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Windows.Security.Authentication.Web</pc></pc> namespace contains an <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">AuthenticateAndContinue</pc></pc> method.</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source>Do not call this method.</source>
          <target>Do not call this method.</target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source>It is designed for apps targeting Windows Phone 8.1 only and is deprecated starting with Windows 10.</source>
          <target>It is designed for apps targeting Windows Phone 8.1 only and is deprecated starting with Windows 10.</target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source>Connecting with single sign-on (SSO).</source>
          <target>Connecting with single sign-on (SSO).</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source>By default, Web authentication broker does not allow cookies to persist.</source>
          <target>By default, Web authentication broker does not allow cookies to persist.</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source>Because of this, even if the app user indicates that they want to stay logged in (for example, by selecting a check box in the provider's login dialog), they will have to login each time they want to access resources for that provider.</source>
          <target>Because of this, even if the app user indicates that they want to stay logged in (for example, by selecting a check box in the provider's login dialog), they will have to login each time they want to access resources for that provider.</target>
        </segment>
      </unit>
      <unit id="128">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br212068)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">*</data>
          <data id="id6">*</data>
        </originalData>
        <segment state="initial">
          <source>To login with SSO, your online identity provider must have enabled SSO for Web authentication broker, and your app must call the overload of <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">AuthenticateAsync</pc></pc> that does not take a <pc dataRefEnd="id6" dataRefStart="id5" id="p3">callbackUri</pc> parameter.</source>
          <target>To login with SSO, your online identity provider must have enabled SSO for Web authentication broker, and your app must call the overload of <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">AuthenticateAsync</pc></pc> that does not take a <pc dataRefEnd="id6" dataRefStart="id5" id="p3">callbackUri</pc> parameter.</target>
        </segment>
      </unit>
      <unit id="129">
        <originalData>
          <data id="id1">`ms-app://`</data>
          <data id="id2">*</data>
          <data id="id3">*</data>
          <data id="id4">*</data>
          <data id="id5">*</data>
        </originalData>
        <segment state="initial">
          <source>To support SSO, the online provider must allow you to register a redirect URI in the form <ph dataRef="id1" id="ph1" /><pc dataRefEnd="id3" dataRefStart="id2" id="p1">appSID</pc>, where <pc dataRefEnd="id5" dataRefStart="id4" id="p2">appSID</pc> is the SID for your app.</source>
          <target>To support SSO, the online provider must allow you to register a redirect URI in the form <ph dataRef="id1" id="ph1" /><pc dataRefEnd="id3" dataRefStart="id2" id="p1">appSID</pc>, where <pc dataRefEnd="id5" dataRefStart="id4" id="p2">appSID</pc> is the SID for your app.</target>
        </segment>
      </unit>
      <unit id="130">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br212069)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>You can find your app's SID from the app developer page for your app, or by calling the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetCurrentApplicationCallbackUri</pc></pc> method.</source>
          <target>You can find your app's SID from the app developer page for your app, or by calling the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GetCurrentApplicationCallbackUri</pc></pc> method.</target>
        </segment>
      </unit>
      <unit id="131">
        <segment state="initial">
          <source>Debugging</source>
          <target>Debugging</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source>There are several ways to troubleshoot the web authentication broker APIs, including reviewing operational logs and reviewing web requests and responses using Fiddler.</source>
          <target>There are several ways to troubleshoot the web authentication broker APIs, including reviewing operational logs and reviewing web requests and responses using Fiddler.</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source>Operational logs</source>
          <target>Operational logs</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source>Often you can determine what is not working by using the operational logs.</source>
          <target>Often you can determine what is not working by using the operational logs.</target>
        </segment>
      </unit>
      <unit id="135">
        <originalData>
          <data id="id1">\\</data>
        </originalData>
        <segment state="initial">
          <source>There is a dedicated event log channel Microsoft-Windows-WebAuth<ph dataRef="id1" id="ph1" />Operational that allows website developers to understand how their web pages are being processed by the Web authentication broker.</source>
          <target>There is a dedicated event log channel Microsoft-Windows-WebAuth<ph dataRef="id1" id="ph1" />Operational that allows website developers to understand how their web pages are being processed by the Web authentication broker.</target>
        </segment>
      </unit>
      <unit id="136">
        <originalData>
          <data id="id1">\\</data>
          <data id="id2">\\</data>
          <data id="id3">\\</data>
        </originalData>
        <segment state="initial">
          <source>To enable it, launch eventvwr.exe and enable Operational log under the Application and Services<ph dataRef="id1" id="ph1" />Microsoft<ph dataRef="id2" id="ph2" />Windows<ph dataRef="id3" id="ph3" />WebAuth.</source>
          <target>To enable it, launch eventvwr.exe and enable Operational log under the Application and Services<ph dataRef="id1" id="ph1" />Microsoft<ph dataRef="id2" id="ph2" />Windows<ph dataRef="id3" id="ph3" />WebAuth.</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source>Also, the Web authentication broker appends a unique string to the user agent string to identify itself on the web server.</source>
          <target>Also, the Web authentication broker appends a unique string to the user agent string to identify itself on the web server.</target>
        </segment>
      </unit>
      <unit id="138">
        <segment state="initial">
          <source>The string is "MSAuthHost/1.0".</source>
          <target>The string is "MSAuthHost/1.0".</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source>Note that the version number may change in the future, so you should not to depend on that version number in your code.</source>
          <target>Note that the version number may change in the future, so you should not to depend on that version number in your code.</target>
        </segment>
      </unit>
      <unit id="140">
        <segment state="initial">
          <source>An example of the full user agent string, followed by full debugging steps, is as follows.</source>
          <target>An example of the full user agent string, followed by full debugging steps, is as follows.</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source>Enable operational logs.</source>
          <target>Enable operational logs.</target>
        </segment>
      </unit>
      <unit id="142">
        <segment state="initial">
          <source>Run Contoso social application.</source>
          <target>Run Contoso social application.</target>
        </segment>
      </unit>
      <unit id="143">
        <segment state="initial">
          <source>event viewer displaying the webauth operational logs</source>
          <target>event viewer displaying the webauth operational logs</target>
        </segment>
      </unit>
      <unit id="144">
        <segment state="initial">
          <source>The generated logs entries can be used to understand the behavior of Web authentication broker in greater detail.</source>
          <target>The generated logs entries can be used to understand the behavior of Web authentication broker in greater detail.</target>
        </segment>
      </unit>
      <unit id="145">
        <segment state="initial">
          <source>In this case, these can include:</source>
          <target>In this case, these can include:</target>
        </segment>
      </unit>
      <unit id="146">
        <segment state="initial">
          <source>Navigation Start: Logs when the AuthHost is started and contains information about the start and termination URLs.</source>
          <target>Navigation Start: Logs when the AuthHost is started and contains information about the start and termination URLs.</target>
        </segment>
      </unit>
      <unit id="147">
        <segment state="initial">
          <source>illustrates the details of navigation start</source>
          <target>illustrates the details of navigation start</target>
        </segment>
      </unit>
      <unit id="148">
        <segment state="initial">
          <source>Navigation Complete: Logs the completion of loading a web page.</source>
          <target>Navigation Complete: Logs the completion of loading a web page.</target>
        </segment>
      </unit>
      <unit id="149">
        <segment state="initial">
          <source>Meta Tag: Logs when a meta-tag is encountered including the details.</source>
          <target>Meta Tag: Logs when a meta-tag is encountered including the details.</target>
        </segment>
      </unit>
      <unit id="150">
        <segment state="initial">
          <source>Navigation Terminate: Navigation terminated by the user.</source>
          <target>Navigation Terminate: Navigation terminated by the user.</target>
        </segment>
      </unit>
      <unit id="151">
        <segment state="initial">
          <source>Navigation Error: AuthHost encounters a navigation error at a URL including HttpStatusCode.</source>
          <target>Navigation Error: AuthHost encounters a navigation error at a URL including HttpStatusCode.</target>
        </segment>
      </unit>
      <unit id="152">
        <segment state="initial">
          <source>Navigation End: Terminating URL is encountered.</source>
          <target>Navigation End: Terminating URL is encountered.</target>
        </segment>
      </unit>
      <unit id="153">
        <segment state="initial">
          <source>Fiddler</source>
          <target>Fiddler</target>
        </segment>
      </unit>
      <unit id="154">
        <segment state="initial">
          <source>The Fiddler web debugger can be used with apps.</source>
          <target>The Fiddler web debugger can be used with apps.</target>
        </segment>
      </unit>
      <unit id="155">
        <segment state="initial">
          <source>Since the AuthHost runs in its own app container to give it the private network capability, you must set a registry key: Windows Registry Editor Version 5.00</source>
          <target>Since the AuthHost runs in its own app container to give it the private network capability, you must set a registry key: Windows Registry Editor Version 5.00</target>
        </segment>
      </unit>
      <unit id="156">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">\_</data>
          <data id="id4">\_</data>
          <data id="id5">\\</data>
          <data id="id6">**</data>
          <data id="id7">**</data>
          <data id="id8">\\</data>
          <data id="id9">**</data>
          <data id="id10">**</data>
          <data id="id11">\\</data>
          <data id="id12">**</data>
          <data id="id13">**</data>
          <data id="id14">\\</data>
          <data id="id15">**</data>
          <data id="id16">**</data>
          <data id="id17">\\</data>
          <data id="id18">**</data>
          <data id="id19">**</data>
          <data id="id20">\\</data>
          <data id="id21">**</data>
          <data id="id22">**</data>
          <data id="id23">\\</data>
          <data id="id24">**</data>
          <data id="id25">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">HKEY<ph dataRef="id3" id="ph1" />LOCAL<ph dataRef="id4" id="ph2" />MACHINE</pc>
            <ph dataRef="id5" id="ph3" />
            <pc dataRefEnd="id7" dataRefStart="id6" id="p2">SOFTWARE</pc>
            <ph dataRef="id8" id="ph4" />
            <pc dataRefEnd="id10" dataRefStart="id9" id="p3">Microsoft</pc>
            <ph dataRef="id11" id="ph5" />
            <pc dataRefEnd="id13" dataRefStart="id12" id="p4">Windows NT</pc>
            <ph dataRef="id14" id="ph6" />
            <pc dataRefEnd="id16" dataRefStart="id15" id="p5">CurrentVersion</pc>
            <ph dataRef="id17" id="ph7" />
            <pc dataRefEnd="id19" dataRefStart="id18" id="p6">Image File Execution Options</pc>
            <ph dataRef="id20" id="ph8" />
            <pc dataRefEnd="id22" dataRefStart="id21" id="p7">authhost.exe</pc>
            <ph dataRef="id23" id="ph9" />
            <pc dataRefEnd="id25" dataRefStart="id24" id="p8">EnablePrivateNetwork</pc> = 00000001</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">HKEY<ph dataRef="id3" id="ph1" />LOCAL<ph dataRef="id4" id="ph2" />MACHINE</pc>
            <ph dataRef="id5" id="ph3" />
            <pc dataRefEnd="id7" dataRefStart="id6" id="p2">SOFTWARE</pc>
            <ph dataRef="id8" id="ph4" />
            <pc dataRefEnd="id10" dataRefStart="id9" id="p3">Microsoft</pc>
            <ph dataRef="id11" id="ph5" />
            <pc dataRefEnd="id13" dataRefStart="id12" id="p4">Windows NT</pc>
            <ph dataRef="id14" id="ph6" />
            <pc dataRefEnd="id16" dataRefStart="id15" id="p5">CurrentVersion</pc>
            <ph dataRef="id17" id="ph7" />
            <pc dataRefEnd="id19" dataRefStart="id18" id="p6">Image File Execution Options</pc>
            <ph dataRef="id20" id="ph8" />
            <pc dataRefEnd="id22" dataRefStart="id21" id="p7">authhost.exe</pc>
            <ph dataRef="id23" id="ph9" />
            <pc dataRefEnd="id25" dataRefStart="id24" id="p8">EnablePrivateNetwork</pc> = 00000001</target>
        </segment>
      </unit>
      <unit id="157">
        <segment state="initial">
          <source>Add a rule for the AuthHost as this is what is generating the outbound traffic.</source>
          <target>Add a rule for the AuthHost as this is what is generating the outbound traffic.</target>
        </segment>
      </unit>
      <unit id="158">
        <segment state="initial">
          <source>Add a firewall rule for incoming traffic to Fiddler.</source>
          <target>Add a firewall rule for incoming traffic to Fiddler.</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>