<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="zh-cn" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">windows-apps-src\devices-sensors\sensor-orientation.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">3da7957bf9b162f1ac1533ccff90c8764f34890a</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-781aacf</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>Sensor orientation</source>
          <target>Sensor orientation</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>Sensor data from the Accelerometer, Gyrometer, Compass, Inclinometer, and OrientationSensor classes is defined by their reference axes.</source>
          <target>Sensor data from the Accelerometer, Gyrometer, Compass, Inclinometer, and OrientationSensor classes is defined by their reference axes.</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>These axes are defined by the device's landscape orientation and rotate with the device as the user turns it.</source>
          <target>These axes are defined by the device's landscape orientation and rotate with the device as the user turns it.</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source>Sensor orientation</source>
          <target>Sensor orientation</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source>Updated for UWP apps on Windows 10.</source>
          <target>Updated for UWP apps on Windows 10.</target>
        </segment>
      </unit>
      <unit id="106">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
        </originalData>
        <segment state="initial">
          <source>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc></source>
          <target>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc></target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source>Important APIs</source>
          <target>Important APIs</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source>Windows.Devices.Sensors</source>
          <target>Windows.Devices.Sensors</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source>Windows.Devices.Sensors.Custom</source>
          <target>Windows.Devices.Sensors.Custom</target>
        </segment>
      </unit>
      <unit id="110">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR225687)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/BR225718)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
          <data id="id9">[</data>
          <data id="id10">](https://msdn.microsoft.com/library/windows/apps/BR225705)</data>
          <data id="id11">**</data>
          <data id="id12">**</data>
          <data id="id13">[</data>
          <data id="id14">](https://msdn.microsoft.com/library/windows/apps/BR225766)</data>
          <data id="id15">**</data>
          <data id="id16">**</data>
          <data id="id17">[</data>
          <data id="id18">](https://msdn.microsoft.com/library/windows/apps/BR206371)</data>
          <data id="id19">**</data>
          <data id="id20">**</data>
        </originalData>
        <segment state="initial">
          <source>Sensor data from the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Accelerometer</pc></pc>, <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Gyrometer</pc></pc>, <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">Compass</pc></pc>, <pc dataRefEnd="id14" dataRefStart="id13" id="p7"><pc dataRefEnd="id16" dataRefStart="id15" id="p8">Inclinometer</pc></pc>, and <pc dataRefEnd="id18" dataRefStart="id17" id="p9"><pc dataRefEnd="id20" dataRefStart="id19" id="p10">OrientationSensor</pc></pc> classes is defined by their reference axes.</source>
          <target>Sensor data from the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Accelerometer</pc></pc>, <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Gyrometer</pc></pc>, <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">Compass</pc></pc>, <pc dataRefEnd="id14" dataRefStart="id13" id="p7"><pc dataRefEnd="id16" dataRefStart="id15" id="p8">Inclinometer</pc></pc>, and <pc dataRefEnd="id18" dataRefStart="id17" id="p9"><pc dataRefEnd="id20" dataRefStart="id19" id="p10">OrientationSensor</pc></pc> classes is defined by their reference axes.</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source>These axes are defined by the device's landscape orientation and rotate with the device as the user turns it.</source>
          <target>These axes are defined by the device's landscape orientation and rotate with the device as the user turns it.</target>
        </segment>
      </unit>
      <unit id="112">
        <segment state="initial">
          <source>If your app supports automatic rotation and reorients itself to accommodate the device as the user rotates it, you must adjust your sensor data for the rotation before using it.</source>
          <target>If your app supports automatic rotation and reorients itself to accommodate the device as the user rotates it, you must adjust your sensor data for the rotation before using it.</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source>Display orientation vs device orientation</source>
          <target>Display orientation vs device orientation</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source>In order to understand the reference axes for sensors, you need to distinguish display orientation from device orientation.</source>
          <target>In order to understand the reference axes for sensors, you need to distinguish display orientation from device orientation.</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source>Display orientation is the direction text and images are displayed on the screen whereas device orientation is the physical positioning of the device.</source>
          <target>Display orientation is the direction text and images are displayed on the screen whereas device orientation is the physical positioning of the device.</target>
        </segment>
      </unit>
      <unit id="116">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>In the following picture, both the device and display orientation are in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Landscape</pc>.</source>
          <target>In the following picture, both the device and display orientation are in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Landscape</pc>.</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source>Display and device orientation in Landscape</source>
          <target>Display and device orientation in Landscape</target>
        </segment>
      </unit>
      <unit id="118">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>The following picture shows both the display and device orientation in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">LandscapeFlipped</pc>.</source>
          <target>The following picture shows both the display and device orientation in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">LandscapeFlipped</pc>.</target>
        </segment>
      </unit>
      <unit id="119">
        <segment state="initial">
          <source>Display and device orientation in LandscapeFlipped</source>
          <target>Display and device orientation in LandscapeFlipped</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source>The next picture shows the display orientation in Landscape while the device orientation is LandscapeFlipped.</source>
          <target>The next picture shows the display orientation in Landscape while the device orientation is LandscapeFlipped.</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source>Display orientation in Landscape while the device orientation is LandscapeFlipped</source>
          <target>Display orientation in Landscape while the device orientation is LandscapeFlipped</target>
        </segment>
      </unit>
      <unit id="122">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/Dn264258)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.graphics.display.displayinformation.getforcurrentview.aspx)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
          <data id="id9">[</data>
          <data id="id10">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.graphics.display.displayinformation.currentorientation.aspx)</data>
          <data id="id11">**</data>
          <data id="id12">**</data>
        </originalData>
        <segment state="initial">
          <source>You can query the orientation values through the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DisplayInformation</pc></pc> class by using the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">GetForCurrentView</pc></pc> method with the <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">CurrentOrientation</pc></pc> property.</source>
          <target>You can query the orientation values through the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DisplayInformation</pc></pc> class by using the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">GetForCurrentView</pc></pc> method with the <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">CurrentOrientation</pc></pc> property.</target>
        </segment>
      </unit>
      <unit id="123">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR226142)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>Then you can create logic by comparing against the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DisplayOrientations</pc></pc> enumeration.</source>
          <target>Then you can create logic by comparing against the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DisplayOrientations</pc></pc> enumeration.</target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source>Remember that for every orientation you support, you have to support a conversion of the reference axes to that orientation.</source>
          <target>Remember that for every orientation you support, you have to support a conversion of the reference axes to that orientation.</target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source>Landscape-first vs portrait-first devices</source>
          <target>Landscape-first vs portrait-first devices</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source>Manufacturers produce both landscape-first and portrait-first devices.</source>
          <target>Manufacturers produce both landscape-first and portrait-first devices.</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source>When manufacturers integrate components into devices, they do so in a unified and consistent way so that all devices operate within the same reference frame.</source>
          <target>When manufacturers integrate components into devices, they do so in a unified and consistent way so that all devices operate within the same reference frame.</target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source>The following table shows the sensor axes for both landscape-first and portrait first devices.</source>
          <target>The following table shows the sensor axes for both landscape-first and portrait first devices.</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source>Orientation</source>
          <target>Orientation</target>
        </segment>
      </unit>
      <unit id="130">
        <segment state="initial">
          <source>Landscape-first</source>
          <target>Landscape-first</target>
        </segment>
      </unit>
      <unit id="131">
        <segment state="initial">
          <source>Portrait-first</source>
          <target>Portrait-first</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source>Landscape</source>
          <target>Landscape</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source>Landscape-first device in Landscape orientation</source>
          <target>Landscape-first device in Landscape orientation</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source>Portrait-first device in Landscape orientation</source>
          <target>Portrait-first device in Landscape orientation</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source>Portrait</source>
          <target>Portrait</target>
        </segment>
      </unit>
      <unit id="136">
        <segment state="initial">
          <source>Landscape-first device in Portrait orientation</source>
          <target>Landscape-first device in Portrait orientation</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source>Portrait-first device in Portrait orientation</source>
          <target>Portrait-first device in Portrait orientation</target>
        </segment>
      </unit>
      <unit id="138">
        <segment state="initial">
          <source>LandscapeFlipped</source>
          <target>LandscapeFlipped</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source>Landscape-first device in LandscapeFlipped orientation</source>
          <target>Landscape-first device in LandscapeFlipped orientation</target>
        </segment>
      </unit>
      <unit id="140">
        <segment state="initial">
          <source>Portrait-first device in LandscapeFlipped orientation</source>
          <target>Portrait-first device in LandscapeFlipped orientation</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source>PortraitFlipped</source>
          <target>PortraitFlipped</target>
        </segment>
      </unit>
      <unit id="142">
        <segment state="initial">
          <source>Landscape-first device in PortraitFlipped orientation</source>
          <target>Landscape-first device in PortraitFlipped orientation</target>
        </segment>
      </unit>
      <unit id="143">
        <segment state="initial">
          <source>Portrait-first device in PortraitFlipped orientation</source>
          <target>Portrait-first device in PortraitFlipped orientation</target>
        </segment>
      </unit>
      <unit id="144">
        <segment state="initial">
          <source>Devices broadcasting display and headless devices</source>
          <target>Devices broadcasting display and headless devices</target>
        </segment>
      </unit>
      <unit id="145">
        <segment state="initial">
          <source>Some devices have the ability to broadcast the display to another device.</source>
          <target>Some devices have the ability to broadcast the display to another device.</target>
        </segment>
      </unit>
      <unit id="146">
        <segment state="initial">
          <source>For example, you could take a tablet and broadcast the display to a projector that will be in landscape orientation.</source>
          <target>For example, you could take a tablet and broadcast the display to a projector that will be in landscape orientation.</target>
        </segment>
      </unit>
      <unit id="147">
        <segment state="initial">
          <source>In this scenario, it is important to keep in mind that the device orientation is based on the original device, not the one presenting the display.</source>
          <target>In this scenario, it is important to keep in mind that the device orientation is based on the original device, not the one presenting the display.</target>
        </segment>
      </unit>
      <unit id="148">
        <segment state="initial">
          <source>So an accelerometer would report data for the tablet.</source>
          <target>So an accelerometer would report data for the tablet.</target>
        </segment>
      </unit>
      <unit id="149">
        <segment state="initial">
          <source>Furthermore, some devices do not have a display.</source>
          <target>Furthermore, some devices do not have a display.</target>
        </segment>
      </unit>
      <unit id="150">
        <segment state="initial">
          <source>With these devices, the default orientation for these devices is portrait.</source>
          <target>With these devices, the default orientation for these devices is portrait.</target>
        </segment>
      </unit>
      <unit id="151">
        <segment state="initial">
          <source>Display orientation and compass heading</source>
          <target>Display orientation and compass heading</target>
        </segment>
      </unit>
      <unit id="152">
        <segment state="initial">
          <source>Compass heading depends upon the reference axes and so it changes with the device orientation.</source>
          <target>Compass heading depends upon the reference axes and so it changes with the device orientation.</target>
        </segment>
      </unit>
      <unit id="153">
        <segment state="initial">
          <source>You compensate based on the this table (assume the user is facing north).</source>
          <target>You compensate based on the this table (assume the user is facing north).</target>
        </segment>
      </unit>
      <unit id="154">
        <segment state="initial">
          <source>Display orientation</source>
          <target>Display orientation</target>
        </segment>
      </unit>
      <unit id="155">
        <segment state="initial">
          <source>Reference axis for compass heading</source>
          <target>Reference axis for compass heading</target>
        </segment>
      </unit>
      <unit id="156">
        <segment state="initial">
          <source>API compass heading when facing north</source>
          <target>API compass heading when facing north</target>
        </segment>
      </unit>
      <unit id="157">
        <segment state="initial">
          <source>Compass heading compensation</source>
          <target>Compass heading compensation</target>
        </segment>
      </unit>
      <unit id="158">
        <segment state="initial">
          <source>Landscape</source>
          <target>Landscape</target>
        </segment>
      </unit>
      <unit id="159">
        <segment state="initial">
          <source>-Z</source>
          <target>-Z</target>
        </segment>
      </unit>
      <unit id="160">
        <segment state="initial">
          <source>0</source>
          <target>0</target>
        </segment>
      </unit>
      <unit id="161">
        <segment state="initial">
          <source>Heading</source>
          <target>Heading</target>
        </segment>
      </unit>
      <unit id="162">
        <segment state="initial">
          <source>Portrait</source>
          <target>Portrait</target>
        </segment>
      </unit>
      <unit id="163">
        <segment state="initial">
          <source>Y</source>
          <target>Y</target>
        </segment>
      </unit>
      <unit id="164">
        <segment state="initial">
          <source>90</source>
          <target>90</target>
        </segment>
      </unit>
      <unit id="165">
        <segment state="initial">
          <source>(Heading + 270) % 360</source>
          <target>(Heading + 270) % 360</target>
        </segment>
      </unit>
      <unit id="166">
        <segment state="initial">
          <source>LandscapeFlipped</source>
          <target>LandscapeFlipped</target>
        </segment>
      </unit>
      <unit id="167">
        <segment state="initial">
          <source>Z</source>
          <target>Z</target>
        </segment>
      </unit>
      <unit id="168">
        <segment state="initial">
          <source>180</source>
          <target>180</target>
        </segment>
      </unit>
      <unit id="169">
        <segment state="initial">
          <source>(Heading + 180) % 360</source>
          <target>(Heading + 180) % 360</target>
        </segment>
      </unit>
      <unit id="170">
        <segment state="initial">
          <source>PortraitFlipped</source>
          <target>PortraitFlipped</target>
        </segment>
      </unit>
      <unit id="171">
        <segment state="initial">
          <source>Y</source>
          <target>Y</target>
        </segment>
      </unit>
      <unit id="172">
        <segment state="initial">
          <source>270</source>
          <target>270</target>
        </segment>
      </unit>
      <unit id="173">
        <segment state="initial">
          <source>(Heading + 90) % 360</source>
          <target>(Heading + 90) % 360</target>
        </segment>
      </unit>
      <unit id="174">
        <segment state="initial">
          <source>Modify the compass heading as shown in the table in order to correctly display the heading.</source>
          <target>Modify the compass heading as shown in the table in order to correctly display the heading.</target>
        </segment>
      </unit>
      <unit id="175">
        <segment state="initial">
          <source>The following code snippet demonstrates how to do this.</source>
          <target>The following code snippet demonstrates how to do this.</target>
        </segment>
      </unit>
      <unit id="176">
        <segment state="initial">
          <source>Display orientation with the accelerometer and gyrometer</source>
          <target>Display orientation with the accelerometer and gyrometer</target>
        </segment>
      </unit>
      <unit id="177">
        <segment state="initial">
          <source>This table converts accelerometer and gyrometer data for display orientation.</source>
          <target>This table converts accelerometer and gyrometer data for display orientation.</target>
        </segment>
      </unit>
      <unit id="178">
        <segment state="initial">
          <source>Reference axes</source>
          <target>Reference axes</target>
        </segment>
      </unit>
      <unit id="179">
        <segment state="initial">
          <source>X</source>
          <target>X</target>
        </segment>
      </unit>
      <unit id="180">
        <segment state="initial">
          <source>Y</source>
          <target>Y</target>
        </segment>
      </unit>
      <unit id="181">
        <segment state="initial">
          <source>Z</source>
          <target>Z</target>
        </segment>
      </unit>
      <unit id="182">
        <segment state="initial">
          <source>Landscape</source>
          <target>Landscape</target>
        </segment>
      </unit>
      <unit id="183">
        <segment state="initial">
          <source>X</source>
          <target>X</target>
        </segment>
      </unit>
      <unit id="184">
        <segment state="initial">
          <source>Y</source>
          <target>Y</target>
        </segment>
      </unit>
      <unit id="185">
        <segment state="initial">
          <source>Z</source>
          <target>Z</target>
        </segment>
      </unit>
      <unit id="186">
        <segment state="initial">
          <source>Portrait</source>
          <target>Portrait</target>
        </segment>
      </unit>
      <unit id="187">
        <segment state="initial">
          <source>Y</source>
          <target>Y</target>
        </segment>
      </unit>
      <unit id="188">
        <segment state="initial">
          <source>-X</source>
          <target>-X</target>
        </segment>
      </unit>
      <unit id="189">
        <segment state="initial">
          <source>Z</source>
          <target>Z</target>
        </segment>
      </unit>
      <unit id="190">
        <segment state="initial">
          <source>LandscapeFlipped</source>
          <target>LandscapeFlipped</target>
        </segment>
      </unit>
      <unit id="191">
        <segment state="initial">
          <source>-X</source>
          <target>-X</target>
        </segment>
      </unit>
      <unit id="192">
        <segment state="initial">
          <source>-Y</source>
          <target>-Y</target>
        </segment>
      </unit>
      <unit id="193">
        <segment state="initial">
          <source>Z</source>
          <target>Z</target>
        </segment>
      </unit>
      <unit id="194">
        <segment state="initial">
          <source>PortraitFlipped</source>
          <target>PortraitFlipped</target>
        </segment>
      </unit>
      <unit id="195">
        <segment state="initial">
          <source>-Y</source>
          <target>-Y</target>
        </segment>
      </unit>
      <unit id="196">
        <segment state="initial">
          <source>X</source>
          <target>X</target>
        </segment>
      </unit>
      <unit id="197">
        <segment state="initial">
          <source>Z</source>
          <target>Z</target>
        </segment>
      </unit>
      <unit id="198">
        <segment state="initial">
          <source>The following code example applies these conversions to the gyrometer.</source>
          <target>The following code example applies these conversions to the gyrometer.</target>
        </segment>
      </unit>
      <unit id="199">
        <segment state="initial">
          <source>Display orientation and device orientation</source>
          <target>Display orientation and device orientation</target>
        </segment>
      </unit>
      <unit id="200">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR206371)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">OrientationSensor</pc></pc> data must be changed in a different way.</source>
          <target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">OrientationSensor</pc></pc> data must be changed in a different way.</target>
        </segment>
      </unit>
      <unit id="201">
        <segment state="initial">
          <source>Think of these different orientations as rotations counterclockwise to the Z axis, so we need to reverse the rotation to get back the user’s orientation.</source>
          <target>Think of these different orientations as rotations counterclockwise to the Z axis, so we need to reverse the rotation to get back the user’s orientation.</target>
        </segment>
      </unit>
      <unit id="202">
        <segment state="initial">
          <source>For quaternion data, we can use Euler’s formula to define a rotation with a reference quaternion, and we can also use a reference rotation matrix.</source>
          <target>For quaternion data, we can use Euler’s formula to define a rotation with a reference quaternion, and we can also use a reference rotation matrix.</target>
        </segment>
      </unit>
      <unit id="203">
        <originalData>
          <data id="id1">](images/eulers-formula.png)</data>
        </originalData>
        <segment state="initial">
          <source>Euler's formula<ph dataRef="id1" id="ph1" /> To get the relative orientation you want, multiply the reference object against the absolute object.</source>
          <target>Euler's formula<ph dataRef="id1" id="ph1" /> To get the relative orientation you want, multiply the reference object against the absolute object.</target>
        </segment>
      </unit>
      <unit id="204">
        <segment state="initial">
          <source>Note that this math is not commutative.</source>
          <target>Note that this math is not commutative.</target>
        </segment>
      </unit>
      <unit id="205">
        <originalData>
          <data id="id1">](images/orientation-formula.png)</data>
        </originalData>
        <segment state="initial">
          <source>Multiply the reference object against the absolute object<ph dataRef="id1" id="ph1" /> In the preceding expression, the absolute object is returned by the sensor data.</source>
          <target>Multiply the reference object against the absolute object<ph dataRef="id1" id="ph1" /> In the preceding expression, the absolute object is returned by the sensor data.</target>
        </segment>
      </unit>
      <unit id="206">
        <segment state="initial">
          <source>Display orientation</source>
          <target>Display orientation</target>
        </segment>
      </unit>
      <unit id="207">
        <segment state="initial">
          <source>Counterclockwise rotation around Z</source>
          <target>Counterclockwise rotation around Z</target>
        </segment>
      </unit>
      <unit id="208">
        <segment state="initial">
          <source>Reference quaternion (reverse rotation)</source>
          <target>Reference quaternion (reverse rotation)</target>
        </segment>
      </unit>
      <unit id="209">
        <segment state="initial">
          <source>Reference rotation matrix (reverse rotation)</source>
          <target>Reference rotation matrix (reverse rotation)</target>
        </segment>
      </unit>
      <unit id="210">
        <segment state="initial">
          <source>Landscape</source>
          <target>Landscape</target>
        </segment>
      </unit>
      <unit id="211">
        <segment state="initial">
          <source>0</source>
          <target>0</target>
        </segment>
      </unit>
      <unit id="212">
        <segment state="initial">
          <source>1 + 0i + 0j + 0k</source>
          <target>1 + 0i + 0j + 0k</target>
        </segment>
      </unit>
      <unit id="213">
        <segment state="initial">
          <source>1 0 0</source>
          <target>1 0 0</target>
        </segment>
      </unit>
      <unit id="214">
        <segment state="initial">
          <source>0 1 0</source>
          <target>0 1 0</target>
        </segment>
      </unit>
      <unit id="215">
        <segment state="initial">
          <source>0 0 1</source>
          <target>0 0 1</target>
        </segment>
      </unit>
      <unit id="216">
        <segment state="initial">
          <source>Portrait</source>
          <target>Portrait</target>
        </segment>
      </unit>
      <unit id="217">
        <segment state="initial">
          <source>90</source>
          <target>90</target>
        </segment>
      </unit>
      <unit id="218">
        <segment state="initial">
          <source>cos(-45⁰) + (i + j + k)*sin(-45⁰)</source>
          <target>cos(-45⁰) + (i + j + k)*sin(-45⁰)</target>
        </segment>
      </unit>
      <unit id="219">
        <segment state="initial">
          <source>0 1 0</source>
          <target>0 1 0</target>
        </segment>
      </unit>
      <unit id="220">
        <segment state="initial">
          <source>-1 0 0</source>
          <target>-1 0 0</target>
        </segment>
      </unit>
      <unit id="221">
        <segment state="initial">
          <source>0 0 1]</source>
          <target>0 0 1]</target>
        </segment>
      </unit>
      <unit id="222">
        <segment state="initial">
          <source>LandscapeFlipped</source>
          <target>LandscapeFlipped</target>
        </segment>
      </unit>
      <unit id="223">
        <segment state="initial">
          <source>180</source>
          <target>180</target>
        </segment>
      </unit>
      <unit id="224">
        <segment state="initial">
          <source>0 - i - j - k</source>
          <target>0 - i - j - k</target>
        </segment>
      </unit>
      <unit id="225">
        <segment state="initial">
          <source>1 0 0</source>
          <target>1 0 0</target>
        </segment>
      </unit>
      <unit id="226">
        <segment state="initial">
          <source>0 1 0</source>
          <target>0 1 0</target>
        </segment>
      </unit>
      <unit id="227">
        <segment state="initial">
          <source>0 0 1]</source>
          <target>0 0 1]</target>
        </segment>
      </unit>
      <unit id="228">
        <segment state="initial">
          <source>PortraitFlipped</source>
          <target>PortraitFlipped</target>
        </segment>
      </unit>
      <unit id="229">
        <segment state="initial">
          <source>270</source>
          <target>270</target>
        </segment>
      </unit>
      <unit id="230">
        <segment state="initial">
          <source>cos(-135⁰) + (i + j + k)*sin(-135⁰)</source>
          <target>cos(-135⁰) + (i + j + k)*sin(-135⁰)</target>
        </segment>
      </unit>
      <unit id="231">
        <segment state="initial">
          <source>0 -1 0</source>
          <target>0 -1 0</target>
        </segment>
      </unit>
      <unit id="232">
        <segment state="initial">
          <source>1  0 0</source>
          <target>1  0 0</target>
        </segment>
      </unit>
      <unit id="233">
        <segment state="initial">
          <source>0  0 1]</source>
          <target>0  0 1]</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>