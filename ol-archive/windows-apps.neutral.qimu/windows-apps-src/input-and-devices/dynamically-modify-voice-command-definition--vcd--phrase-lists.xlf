<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="zh-cn" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">windows-apps-src\input-and-devices\dynamically-modify-voice-command-definition--vcd--phrase-lists.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">623243b94cf8ef6b276f8f2971af7bbdbdece81c</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-781aacf</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>Learn how to access and update the list of supported phrases (PhraseList elements) in a Voice Command Definition (VCD) file using the speech recognition result at run time.</source>
          <target>Learn how to access and update the list of supported phrases (PhraseList elements) in a Voice Command Definition (VCD) file using the speech recognition result at run time.</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>Dynamically modify VCD phrase lists</source>
          <target>Dynamically modify VCD phrase lists</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>Dynamically modify VCD phrase lists</source>
          <target>Dynamically modify VCD phrase lists</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source>Important APIs</source>
          <target>Important APIs</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source>Windows.ApplicationModel.VoiceCommands</source>
          <target>Windows.ApplicationModel.VoiceCommands</target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source>VCD elements and attributes v1.2</source>
          <target>VCD elements and attributes v1.2</target>
        </segment>
      </unit>
      <unit id="107">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Access and update the list of supported phrases (<pc dataRefEnd="id2" dataRefStart="id1" id="p1">PhraseList</pc> elements) in a Voice Command Definition (VCD) file at run time using the speech recognition result.</source>
          <target>Access and update the list of supported phrases (<pc dataRefEnd="id2" dataRefStart="id1" id="p1">PhraseList</pc> elements) in a Voice Command Definition (VCD) file at run time using the speech recognition result.</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source>Dynamically modifying a phrase list at run time is useful if the voice command is specific to a task involving some kind of user-defined, or transient, app data.</source>
          <target>Dynamically modifying a phrase list at run time is useful if the voice command is specific to a task involving some kind of user-defined, or transient, app data.</target>
        </segment>
      </unit>
      <unit id="109">
        <originalData>
          <data id="id1">&amp;lt;</data>
          <data id="id2">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>For example, let's say you have a travel app where users can enter destinations, and you want users to be able to start the app by saying the app name followed by "Show trip to <ph dataRef="id1" id="ph1" />destination<ph dataRef="id2" id="ph2" />".</source>
          <target>For example, let's say you have a travel app where users can enter destinations, and you want users to be able to start the app by saying the app name followed by "Show trip to <ph dataRef="id1" id="ph1" />destination<ph dataRef="id2" id="ph2" />".</target>
        </segment>
      </unit>
      <unit id="110">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">`&lt;ListenFor&gt; Show trip to {destination}  &lt;/ListenFor&gt;`</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">**</data>
        </originalData>
        <segment state="initial">
          <source>In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ListenFor</pc> element itself, you would specify something like: <ph dataRef="id3" id="ph1" />, where "destination" is the value of the <pc dataRefEnd="id5" dataRefStart="id4" id="p2">Label</pc> attribute for the <pc dataRefEnd="id7" dataRefStart="id6" id="p3">PhraseList</pc>.</source>
          <target>In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ListenFor</pc> element itself, you would specify something like: <ph dataRef="id3" id="ph1" />, where "destination" is the value of the <pc dataRefEnd="id5" dataRefStart="id4" id="p2">Label</pc> attribute for the <pc dataRefEnd="id7" dataRefStart="id6" id="p3">PhraseList</pc>.</target>
        </segment>
      </unit>
      <unit id="111">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Updating the phrase list at run time eliminates the need to create a separate <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ListenFor</pc> element for each possible destination.</source>
          <target>Updating the phrase list at run time eliminates the need to create a separate <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ListenFor</pc> element for each possible destination.</target>
        </segment>
      </unit>
      <unit id="112">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Instead, you can dynamically populate <pc dataRefEnd="id2" dataRefStart="id1" id="p1">PhraseList</pc> with destinations specified by the user as they enter their itineraries.</source>
          <target>Instead, you can dynamically populate <pc dataRefEnd="id2" dataRefStart="id1" id="p1">PhraseList</pc> with destinations specified by the user as they enter their itineraries.</target>
        </segment>
      </unit>
      <unit id="113">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/dn706593)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>For more info about <pc dataRefEnd="id2" dataRefStart="id1" id="p1">PhraseList</pc> and other VCD elements, see the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">VCD elements and attributes v1.2</pc></pc> reference.</source>
          <target>For more info about <pc dataRefEnd="id2" dataRefStart="id1" id="p1">PhraseList</pc> and other VCD elements, see the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">VCD elements and attributes v1.2</pc></pc> reference.</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source>Prerequisites:</source>
          <target>Prerequisites:</target>
        </segment>
      </unit>
      <unit id="115">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](launch-a-foreground-app-with-voice-commands-in-cortana.md)</data>
        </originalData>
        <segment state="initial">
          <source>This topic builds on <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Launch a foreground app with voice commands in Cortana</pc>.</source>
          <target>This topic builds on <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Launch a foreground app with voice commands in Cortana</pc>.</target>
        </segment>
      </unit>
      <unit id="116">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>We continue here to demonstrate features with a trip planning and management app named <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Adventure Works</pc>.</source>
          <target>We continue here to demonstrate features with a trip planning and management app named <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Adventure Works</pc>.</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source>If you're new to developing Universal Windows Platform (UWP) apps, have a look through these topics to get familiar with the technologies discussed here.</source>
          <target>If you're new to developing Universal Windows Platform (UWP) apps, have a look through these topics to get familiar with the technologies discussed here.</target>
        </segment>
      </unit>
      <unit id="118">
        <segment state="initial">
          <source>Create your first app</source>
          <target>Create your first app</target>
        </segment>
      </unit>
      <unit id="119">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/mt185584)</data>
        </originalData>
        <segment state="initial">
          <source>Learn about events with <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Events and routed events overview</pc></source>
          <target>Learn about events with <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Events and routed events overview</pc></target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source>User experience guidelines:</source>
          <target>User experience guidelines:</target>
        </segment>
      </unit>
      <unit id="121">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn974233)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/dn596121)</data>
        </originalData>
        <segment state="initial">
          <source>See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Cortana design guidelines</pc> for info about how to integrate your app with <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Cortana</pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Speech design guidelines</pc> for helpful tips on designing a useful and engaging speech-enabled app.</source>
          <target>See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Cortana design guidelines</pc> for info about how to integrate your app with <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Cortana</pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Speech design guidelines</pc> for helpful tips on designing a useful and engaging speech-enabled app.</target>
        </segment>
      </unit>
      <unit id="122">
        <segment state="initial">
          <source>Identify the command and update the phrase list</source>
          <target>Identify the command and update the phrase list</target>
        </segment>
      </unit>
      <unit id="123">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>Here's an example VCD file that defines a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Command</pc> "showTripToDestination" and a <pc dataRefEnd="id4" dataRefStart="id3" id="p2">PhraseList</pc> that defines three options for destination in our <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Adventure Works</pc> travel app.</source>
          <target>Here's an example VCD file that defines a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Command</pc> "showTripToDestination" and a <pc dataRefEnd="id4" dataRefStart="id3" id="p2">PhraseList</pc> that defines three options for destination in our <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Adventure Works</pc> travel app.</target>
        </segment>
      </unit>
      <unit id="124">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>As the user saves and deletes destinations in the app, the app updates the options in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">PhraseList</pc>.</source>
          <target>As the user saves and deletes destinations in the app, the app updates the options in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">PhraseList</pc>.</target>
        </segment>
      </unit>
      <unit id="125">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>To update a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">PhraseList</pc> element in the VCD file, get the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">CommandSet</pc> element that contains the phrase list.</source>
          <target>To update a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">PhraseList</pc> element in the VCD file, get the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">CommandSet</pc> element that contains the phrase list.</target>
        </segment>
      </unit>
      <unit id="126">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">[</data>
          <data id="id8">](https://msdn.microsoft.com/library/windows/apps/dn653257)</data>
          <data id="id9">**</data>
          <data id="id10">**</data>
          <data id="id11">[</data>
          <data id="id12">](https://msdn.microsoft.com/library/windows/apps/dn653258)</data>
          <data id="id13">**</data>
          <data id="id14">**</data>
        </originalData>
        <segment state="initial">
          <source>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Name</pc> attribute of that <pc dataRefEnd="id4" dataRefStart="id3" id="p2">CommandSet</pc> element (<pc dataRefEnd="id6" dataRefStart="id5" id="p3">Name</pc> must be unique in the VCD file) as a key to access the <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">VoiceCommandManager.InstalledCommandSets</pc></pc> property and get the <pc dataRefEnd="id12" dataRefStart="id11" id="p6"><pc dataRefEnd="id14" dataRefStart="id13" id="p7">VoiceCommandSet</pc></pc> reference.</source>
          <target>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Name</pc> attribute of that <pc dataRefEnd="id4" dataRefStart="id3" id="p2">CommandSet</pc> element (<pc dataRefEnd="id6" dataRefStart="id5" id="p3">Name</pc> must be unique in the VCD file) as a key to access the <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">VoiceCommandManager.InstalledCommandSets</pc></pc> property and get the <pc dataRefEnd="id12" dataRefStart="id11" id="p6"><pc dataRefEnd="id14" dataRefStart="id13" id="p7">VoiceCommandSet</pc></pc> reference.</target>
        </segment>
      </unit>
      <unit id="127">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn653261)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source>After you've identified the command set, get a reference to the phrase list that you want to modify and call the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SetPhraseListAsync</pc></pc> method; use the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Label</pc> attribute of the <pc dataRefEnd="id8" dataRefStart="id7" id="p4">PhraseList</pc> element and an array of strings as the new content of the phrase list.</source>
          <target>After you've identified the command set, get a reference to the phrase list that you want to modify and call the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SetPhraseListAsync</pc></pc> method; use the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Label</pc> attribute of the <pc dataRefEnd="id8" dataRefStart="id7" id="p4">PhraseList</pc> element and an array of strings as the new content of the phrase list.</target>
        </segment>
      </unit>
      <unit id="128">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  If you modify a phrase list, the entire phrase list is replaced.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  If you modify a phrase list, the entire phrase list is replaced.</target>
        </segment>
      </unit>
      <unit id="129">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn653261)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>If you want to insert new items into a phrase list, you must specify both the existing items and the new items in the call to <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SetPhraseListAsync</pc></pc>.</source>
          <target>If you want to insert new items into a phrase list, you must specify both the existing items and the new items in the call to <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SetPhraseListAsync</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="130">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>In this example, we update the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">PhraseList</pc> shown in the previous example with an additional destination to Phoenix.</source>
          <target>In this example, we update the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">PhraseList</pc> shown in the previous example with an additional destination to Phoenix.</target>
        </segment>
      </unit>
      <unit id="131">
        <segment state="initial">
          <source>Remarks</source>
          <target>Remarks</target>
        </segment>
      </unit>
      <unit id="132">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Using a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">PhraseList</pc> to constrain the recognition is appropriate for a relatively small set or words.</source>
          <target>Using a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">PhraseList</pc> to constrain the recognition is appropriate for a relatively small set or words.</target>
        </segment>
      </unit>
      <unit id="133">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>When the set of words is too large (hundreds of words, for example), or shouldn’t be constrained at all, use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">PhraseTopic</pc> element and a <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Subject</pc> element to refine the relevance of speech-recognition results to improve scalability.</source>
          <target>When the set of words is too large (hundreds of words, for example), or shouldn’t be constrained at all, use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">PhraseTopic</pc> element and a <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Subject</pc> element to refine the relevance of speech-recognition results to improve scalability.</target>
        </segment>
      </unit>
      <unit id="134">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">\\</data>
        </originalData>
        <segment state="initial">
          <source>In our example, we have a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">PhraseTopic</pc> with a <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Scenario</pc> of "Search", further refined by a <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Subject</pc> of "City<ph dataRef="id7" id="ph1" />State".</source>
          <target>In our example, we have a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">PhraseTopic</pc> with a <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Scenario</pc> of "Search", further refined by a <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Subject</pc> of "City<ph dataRef="id7" id="ph1" />State".</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source>Related articles</source>
          <target>Related articles</target>
        </segment>
      </unit>
      <unit id="136">
        <segment state="initial">
          <source>Developers</source>
          <target>Developers</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source>Cortana interactions</source>
          <target>Cortana interactions</target>
        </segment>
      </unit>
      <unit id="138">
        <segment state="initial">
          <source>Launch a foreground app with voice commands in Cortana</source>
          <target>Launch a foreground app with voice commands in Cortana</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source>Launch a background app with voice commands in Cortana</source>
          <target>Launch a background app with voice commands in Cortana</target>
        </segment>
      </unit>
      <unit id="140">
        <segment state="initial">
          <source>VCD elements and attributes v1.2</source>
          <target>VCD elements and attributes v1.2</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source>Designers</source>
          <target>Designers</target>
        </segment>
      </unit>
      <unit id="142">
        <segment state="initial">
          <source>Cortana design guidelines</source>
          <target>Cortana design guidelines</target>
        </segment>
      </unit>
      <unit id="143">
        <segment state="initial">
          <source>Speech design guidelines</source>
          <target>Speech design guidelines</target>
        </segment>
      </unit>
      <unit id="144">
        <segment state="initial">
          <source>Samples</source>
          <target>Samples</target>
        </segment>
      </unit>
      <unit id="145">
        <segment state="initial">
          <source>Cortana voice command sample</source>
          <target>Cortana voice command sample</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>