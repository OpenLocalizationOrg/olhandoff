<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="zh-cn" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">windows-apps-src\porting\android-ios-uwp-map.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">8e10b13f87a6b4b04b0bc8a8bbf221b08ad00911</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-781aacf</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>Compare platform features between iOS, Android, and Windows 10.</source>
          <target>Compare platform features between iOS, Android, and Windows 10.</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>Windows apps concept mapping for Android and iOS developers</source>
          <target>Windows apps concept mapping for Android and iOS developers</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>Windows apps concept mapping for Android and iOS developers</source>
          <target>Windows apps concept mapping for Android and iOS developers</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source>If you're a developer with Android or iOS skills and/or code, and you want to make the move to Windows 10 and the Universal Windows Platform (UWP), then this resource has all you need to map platform features—and your knowledge—between the three platforms.</source>
          <target>If you're a developer with Android or iOS skills and/or code, and you want to make the move to Windows 10 and the Universal Windows Platform (UWP), then this resource has all you need to map platform features—and your knowledge—between the three platforms.</target>
        </segment>
      </unit>
      <unit id="105">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](ios-to-uwp-root.md)</data>
        </originalData>
        <segment state="initial">
          <source>Also see the porting content in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Move from iOS to UWP</pc>.</source>
          <target>Also see the porting content in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Move from iOS to UWP</pc>.</target>
        </segment>
      </unit>
      <unit id="106">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://www.microsoft.com/en-us/download/details.aspx?id=52041)</data>
        </originalData>
        <segment state="initial">
          <source>This document is also available as a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">download</pc>.</source>
          <target>This document is also available as a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">download</pc>.</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source>User-interface (UI)</source>
          <target>User-interface (UI)</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source>General concept</source>
          <target>General concept</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source>Android</source>
          <target>Android</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source>iOS</source>
          <target>iOS</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source>Windows 10 UWP</source>
          <target>Windows 10 UWP</target>
        </segment>
      </unit>
      <unit id="112">
        <segment state="initial">
          <source>Design language.</source>
          <target>Design language.</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source>A set of conventions that prescribe how apps on the platform should look and behave.</source>
          <target>A set of conventions that prescribe how apps on the platform should look and behave.</target>
        </segment>
      </unit>
      <unit id="114">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Android Material Design<ph dataRef="id1" id="ph1" /> guidelines provide a visual language for Android designers and developers to follow.</source>
          <target>Android Material Design<ph dataRef="id1" id="ph1" /> guidelines provide a visual language for Android designers and developers to follow.</target>
        </segment>
      </unit>
      <unit id="115">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Human Interface Guidelines<ph dataRef="id1" id="ph1" /> provide advice for iOS designers and developers.</source>
          <target>Human Interface Guidelines<ph dataRef="id1" id="ph1" /> provide advice for iOS designers and developers.</target>
        </segment>
      </unit>
      <unit id="116">
        <originalData>
          <data id="id1">&lt;/strong&gt;&lt;/a&gt;</data>
        </originalData>
        <segment state="initial">
          <source>UWP Windows Apps Design<ph dataRef="id1" id="ph1" /> shows you how to create an app that looks fantastic on all Windows 10 devices.</source>
          <target>UWP Windows Apps Design<ph dataRef="id1" id="ph1" /> shows you how to create an app that looks fantastic on all Windows 10 devices.</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source>You will find user-interface (UI) design fundamentals, responsive design techniques, and a full list of detailed guidelines.</source>
          <target>You will find user-interface (UI) design fundamentals, responsive design techniques, and a full list of detailed guidelines.</target>
        </segment>
      </unit>
      <unit id="118">
        <segment state="initial">
          <source>User interface markup language.</source>
          <target>User interface markup language.</target>
        </segment>
      </unit>
      <unit id="119">
        <segment state="initial">
          <source>A markup language that renders and describes a UI and its components.</source>
          <target>A markup language that renders and describes a UI and its components.</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source>Each platform provides an editor for both visual and markup editing.</source>
          <target>Each platform provides an editor for both visual and markup editing.</target>
        </segment>
      </unit>
      <unit id="121">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
          <data id="id2">&lt;strong&gt;</data>
          <data id="id3">&lt;/strong&gt;</data>
          <data id="id4">&lt;strong&gt;</data>
          <data id="id5">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>XML layouts<ph dataRef="id1" id="ph1" />, edited using <ph dataRef="id2" id="ph2" />Android Studio<ph dataRef="id3" id="ph3" /> or <ph dataRef="id4" id="ph4" />Eclipse<ph dataRef="id5" id="ph5" />.</source>
          <target>XML layouts<ph dataRef="id1" id="ph1" />, edited using <ph dataRef="id2" id="ph2" />Android Studio<ph dataRef="id3" id="ph3" /> or <ph dataRef="id4" id="ph4" />Eclipse<ph dataRef="id5" id="ph5" />.</target>
        </segment>
      </unit>
      <unit id="122">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
          <data id="id2">&lt;strong&gt;</data>
          <data id="id3">&lt;/strong&gt;</data>
          <data id="id4">&lt;strong&gt;</data>
          <data id="id5">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>XIB<ph dataRef="id1" id="ph1" /> and <ph dataRef="id2" id="ph2" />Storyboards<ph dataRef="id3" id="ph3" /> edited using <ph dataRef="id4" id="ph4" />Interface Builder<ph dataRef="id5" id="ph5" /> inside Xcode.</source>
          <target>XIB<ph dataRef="id1" id="ph1" /> and <ph dataRef="id2" id="ph2" />Storyboards<ph dataRef="id3" id="ph3" /> edited using <ph dataRef="id4" id="ph4" />Interface Builder<ph dataRef="id5" id="ph5" /> inside Xcode.</target>
        </segment>
      </unit>
      <unit id="123">
        <originalData>
          <data id="id1">&lt;/a&gt;&lt;/strong&gt;</data>
          <data id="id2">&lt;strong&gt;&lt;a href="https://www.visualstudio.com/"&gt;</data>
          <data id="id3">&lt;/a&gt;&lt;/strong&gt;</data>
          <data id="id4">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/jj171012.aspx"&gt;</data>
          <data id="id5">&lt;/a&gt;&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>XAML<ph dataRef="id1" id="ph1" />, edited using <ph dataRef="id2" id="ph2" />Microsoft Visual Studio<ph dataRef="id3" id="ph3" /> and <ph dataRef="id4" id="ph4" />Blend for Visual Studio<ph dataRef="id5" id="ph5" />.</source>
          <target>XAML<ph dataRef="id1" id="ph1" />, edited using <ph dataRef="id2" id="ph2" />Microsoft Visual Studio<ph dataRef="id3" id="ph3" /> and <ph dataRef="id4" id="ph4" />Blend for Visual Studio<ph dataRef="id5" id="ph5" />.</target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source>XAML platform</source>
          <target>XAML platform</target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source>Create a UI with XAML</source>
          <target>Create a UI with XAML</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source>Define Layouts with XAML</source>
          <target>Define Layouts with XAML</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source>Built-in user interface controls.</source>
          <target>Built-in user interface controls.</target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source>Reusable UI elements provided by the platform such as buttons, list controls, and text controls.</source>
          <target>Reusable UI elements provided by the platform such as buttons, list controls, and text controls.</target>
        </segment>
      </unit>
      <unit id="129">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Prebuilt <ph dataRef="id1" id="ph1" />view<ph dataRef="id2" id="ph2" /> and <ph dataRef="id3" id="ph3" />view group<ph dataRef="id4" id="ph4" /> classes referred to as widgets, layouts, text fields, containers, date/time controls and expert controls.</source>
          <target>Prebuilt <ph dataRef="id1" id="ph1" />view<ph dataRef="id2" id="ph2" /> and <ph dataRef="id3" id="ph3" />view group<ph dataRef="id4" id="ph4" /> classes referred to as widgets, layouts, text fields, containers, date/time controls and expert controls.</target>
        </segment>
      </unit>
      <unit id="130">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
          <data id="id2">&lt;strong&gt;</data>
          <data id="id3">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Views<ph dataRef="id1" id="ph1" /> and <ph dataRef="id2" id="ph2" />controls<ph dataRef="id3" id="ph3" /> found in the Xcode object library and listed in the UIKit user interface catalog.</source>
          <target>Views<ph dataRef="id1" id="ph1" /> and <ph dataRef="id2" id="ph2" />controls<ph dataRef="id3" id="ph3" /> found in the Xcode object library and listed in the UIKit user interface catalog.</target>
        </segment>
      </unit>
      <unit id="131">
        <segment state="initial">
          <source>Views include image views, picker views and scroll views.</source>
          <target>Views include image views, picker views and scroll views.</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source>Controls include buttons, date pickers and text fields.</source>
          <target>Controls include buttons, date pickers and text fields.</target>
        </segment>
      </unit>
      <unit id="133">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>The XAML platform provides you with a generous set of <ph dataRef="id1" id="ph1" />built-in controls<ph dataRef="id2" id="ph2" /> such as buttons, list controls, panels, text controls, command bars, pickers, media, and inking.</source>
          <target>The XAML platform provides you with a generous set of <ph dataRef="id1" id="ph1" />built-in controls<ph dataRef="id2" id="ph2" /> such as buttons, list controls, panels, text controls, command bars, pickers, media, and inking.</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source>Add controls and handle events</source>
          <target>Add controls and handle events</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source>Control event-handling.</source>
          <target>Control event-handling.</target>
        </segment>
      </unit>
      <unit id="136">
        <segment state="initial">
          <source>Defining the logic that runs when events are triggered within UI controls.</source>
          <target>Defining the logic that runs when events are triggered within UI controls.</target>
        </segment>
      </unit>
      <unit id="137">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
          <data id="id2">&lt;strong&gt;</data>
          <data id="id3">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Event handlers<ph dataRef="id1" id="ph1" /> and <ph dataRef="id2" id="ph2" />event listeners<ph dataRef="id3" id="ph3" /> are added in XML or programmatically.</source>
          <target>Event handlers<ph dataRef="id1" id="ph1" /> and <ph dataRef="id2" id="ph2" />event listeners<ph dataRef="id3" id="ph3" /> are added in XML or programmatically.</target>
        </segment>
      </unit>
      <unit id="138">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Controls send <ph dataRef="id1" id="ph1" />action<ph dataRef="id2" id="ph2" /> messages to <ph dataRef="id3" id="ph3" />targets<ph dataRef="id4" id="ph4" />.</source>
          <target>Controls send <ph dataRef="id1" id="ph1" />action<ph dataRef="id2" id="ph2" /> messages to <ph dataRef="id3" id="ph3" />targets<ph dataRef="id4" id="ph4" />.</target>
        </segment>
      </unit>
      <unit id="139">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You can define methods to handle the events of a XAML control in a <ph dataRef="id1" id="ph1" />code-behind file<ph dataRef="id2" id="ph2" /> attached to the XAML page.</source>
          <target>You can define methods to handle the events of a XAML control in a <ph dataRef="id1" id="ph1" />code-behind file<ph dataRef="id2" id="ph2" /> attached to the XAML page.</target>
        </segment>
      </unit>
      <unit id="140">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Event handlers<ph dataRef="id1" id="ph1" /> are always written in code.</source>
          <target>Event handlers<ph dataRef="id1" id="ph1" /> are always written in code.</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source>But you can hook those handlers to events either in XAML markup or in code.</source>
          <target>But you can hook those handlers to events either in XAML markup or in code.</target>
        </segment>
      </unit>
      <unit id="142">
        <segment state="initial">
          <source>Add controls and handle events</source>
          <target>Add controls and handle events</target>
        </segment>
      </unit>
      <unit id="143">
        <segment state="initial">
          <source>Events and routed events overview</source>
          <target>Events and routed events overview</target>
        </segment>
      </unit>
      <unit id="144">
        <segment state="initial">
          <source>Data binding.</source>
          <target>Data binding.</target>
        </segment>
      </unit>
      <unit id="145">
        <segment state="initial">
          <source>A software design pattern that allows your app UI to render data and optionally stay in sync with that data.</source>
          <target>A software design pattern that allows your app UI to render data and optionally stay in sync with that data.</target>
        </segment>
      </unit>
      <unit id="146">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>There is a <ph dataRef="id1" id="ph1" />Data Binding Library<ph dataRef="id2" id="ph2" /> provided, although it is still in beta.</source>
          <target>There is a <ph dataRef="id1" id="ph1" />Data Binding Library<ph dataRef="id2" id="ph2" /> provided, although it is still in beta.</target>
        </segment>
      </unit>
      <unit id="147">
        <segment state="initial">
          <source>No built-in bindings system exists on iOS.</source>
          <target>No built-in bindings system exists on iOS.</target>
        </segment>
      </unit>
      <unit id="148">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Key-value observing<ph dataRef="id1" id="ph1" /> can be built upon to perform data binding, either with the use of a third-party library, or writing additional code.</source>
          <target>Key-value observing<ph dataRef="id1" id="ph1" /> can be built upon to perform data binding, either with the use of a third-party library, or writing additional code.</target>
        </segment>
      </unit>
      <unit id="149">
        <segment state="initial">
          <source>Controls use a delegate/callback approach for obtaining data.</source>
          <target>Controls use a delegate/callback approach for obtaining data.</target>
        </segment>
      </unit>
      <unit id="150">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>The UWP platform handles <ph dataRef="id1" id="ph1" />data binding<ph dataRef="id2" id="ph2" /> for you.</source>
          <target>The UWP platform handles <ph dataRef="id1" id="ph1" />data binding<ph dataRef="id2" id="ph2" /> for you.</target>
        </segment>
      </unit>
      <unit id="151">
        <originalData>
          <data id="id1">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/mt204783.aspx"&gt;</data>
          <data id="id2">&lt;/a&gt;&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/mt204782.aspx"&gt;</data>
          <data id="id4">&lt;/a&gt;&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You use the <ph dataRef="id1" id="ph1" />{x:Bind}<ph dataRef="id2" id="ph2" /> markup extension to take advantage of high performance binding or <ph dataRef="id3" id="ph3" />{Binding}<ph dataRef="id4" id="ph4" /> to take advantage of more features.</source>
          <target>You use the <ph dataRef="id1" id="ph1" />{x:Bind}<ph dataRef="id2" id="ph2" /> markup extension to take advantage of high performance binding or <ph dataRef="id3" id="ph3" />{Binding}<ph dataRef="id4" id="ph4" /> to take advantage of more features.</target>
        </segment>
      </unit>
      <unit id="152">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>It’s then just a case of configuring your binding to choose whether the platform uses <ph dataRef="id1" id="ph1" />one-way binding<ph dataRef="id2" id="ph2" /> to display values from a data source in your UI, or whether it also observes those values and updates your UI when they change with <ph dataRef="id3" id="ph3" />two-way binding<ph dataRef="id4" id="ph4" />.</source>
          <target>It’s then just a case of configuring your binding to choose whether the platform uses <ph dataRef="id1" id="ph1" />one-way binding<ph dataRef="id2" id="ph2" /> to display values from a data source in your UI, or whether it also observes those values and updates your UI when they change with <ph dataRef="id3" id="ph3" />two-way binding<ph dataRef="id4" id="ph4" />.</target>
        </segment>
      </unit>
      <unit id="153">
        <segment state="initial">
          <source>Data Binding</source>
          <target>Data Binding</target>
        </segment>
      </unit>
      <unit id="154">
        <segment state="initial">
          <source>UI Automation.</source>
          <target>UI Automation.</target>
        </segment>
      </unit>
      <unit id="155">
        <segment state="initial">
          <source>Programmatic access to UI elements, making apps accessible to assistive technology products and enabling automated test scripts to interact with your UI.</source>
          <target>Programmatic access to UI elements, making apps accessible to assistive technology products and enabling automated test scripts to interact with your UI.</target>
        </segment>
      </unit>
      <unit id="156">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
          <data id="id2">&lt;strong&gt;</data>
          <data id="id3">&lt;/strong&gt;</data>
          <data id="id4">&lt;strong&gt;</data>
          <data id="id5">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Text labels<ph dataRef="id1" id="ph1" />, <ph dataRef="id2" id="ph2" />contentDescription<ph dataRef="id3" id="ph3" /> and <ph dataRef="id4" id="ph4" />hint<ph dataRef="id5" id="ph5" /> values help ensure UI elements can be found by automation.</source>
          <target>Text labels<ph dataRef="id1" id="ph1" />, <ph dataRef="id2" id="ph2" />contentDescription<ph dataRef="id3" id="ph3" /> and <ph dataRef="id4" id="ph4" />hint<ph dataRef="id5" id="ph5" /> values help ensure UI elements can be found by automation.</target>
        </segment>
      </unit>
      <unit id="157">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Android Studio allows you to write UI tests using the <ph dataRef="id1" id="ph1" />UI Automator<ph dataRef="id2" id="ph2" /> and <ph dataRef="id3" id="ph3" />Espresso<ph dataRef="id4" id="ph4" /> testing frameworks.</source>
          <target>Android Studio allows you to write UI tests using the <ph dataRef="id1" id="ph1" />UI Automator<ph dataRef="id2" id="ph2" /> and <ph dataRef="id3" id="ph3" />Espresso<ph dataRef="id4" id="ph4" /> testing frameworks.</target>
        </segment>
      </unit>
      <unit id="158">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
          <data id="id5">&lt;strong&gt;</data>
          <data id="id6">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>The <ph dataRef="id1" id="ph1" />Automation instrument<ph dataRef="id2" id="ph2" /> allows you to write automated UI test scripts which identify elements using the <ph dataRef="id3" id="ph3" />accessibility<ph dataRef="id4" id="ph4" /> settings or the element's position in the <ph dataRef="id5" id="ph5" />element hierarchy<ph dataRef="id6" id="ph6" />.</source>
          <target>The <ph dataRef="id1" id="ph1" />Automation instrument<ph dataRef="id2" id="ph2" /> allows you to write automated UI test scripts which identify elements using the <ph dataRef="id3" id="ph3" />accessibility<ph dataRef="id4" id="ph4" /> settings or the element's position in the <ph dataRef="id5" id="ph5" />element hierarchy<ph dataRef="id6" id="ph6" />.</target>
        </segment>
      </unit>
      <unit id="159">
        <originalData>
          <data id="id1">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/ee684076.aspx"&gt;</data>
          <data id="id2">&lt;/a&gt;&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You get programmatic access to built-in UI elements in UWP out-of-box with <ph dataRef="id1" id="ph1" />UI Automation<ph dataRef="id2" id="ph2" />.</source>
          <target>You get programmatic access to built-in UI elements in UWP out-of-box with <ph dataRef="id1" id="ph1" />UI Automation<ph dataRef="id2" id="ph2" />.</target>
        </segment>
      </unit>
      <unit id="160">
        <originalData>
          <data id="id1">&lt;/a&gt;&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Custom Automation Peers<ph dataRef="id1" id="ph1" /> allow you to provide automation support for your own custom UI classes.</source>
          <target>Custom Automation Peers<ph dataRef="id1" id="ph1" /> allow you to provide automation support for your own custom UI classes.</target>
        </segment>
      </unit>
      <unit id="161">
        <originalData>
          <data id="id1">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/dd286726.aspx#VerifyingCodeUsingCUITCreate"&gt;</data>
          <data id="id2">&lt;/a&gt;&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>The <ph dataRef="id1" id="ph1" />Coded UI Test Project<ph dataRef="id2" id="ph2" /> in Visual Studio allows you to automatically test your whole application through the UI, or to test the UI in isolation.</source>
          <target>The <ph dataRef="id1" id="ph1" />Coded UI Test Project<ph dataRef="id2" id="ph2" /> in Visual Studio allows you to automatically test your whole application through the UI, or to test the UI in isolation.</target>
        </segment>
      </unit>
      <unit id="162">
        <segment state="initial">
          <source>Changing the appearance of a control.</source>
          <target>Changing the appearance of a control.</target>
        </segment>
      </unit>
      <unit id="163">
        <segment state="initial">
          <source>Editing size, color and other attributes.</source>
          <target>Editing size, color and other attributes.</target>
        </segment>
      </unit>
      <unit id="164">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Controls have <ph dataRef="id1" id="ph1" />properties<ph dataRef="id2" id="ph2" /> which can be edited using the designer tool, in XML markup or programmatically.</source>
          <target>Controls have <ph dataRef="id1" id="ph1" />properties<ph dataRef="id2" id="ph2" /> which can be edited using the designer tool, in XML markup or programmatically.</target>
        </segment>
      </unit>
      <unit id="165">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Controls have <ph dataRef="id1" id="ph1" />attributes<ph dataRef="id2" id="ph2" /> which you can edit using the <ph dataRef="id3" id="ph3" />Attributes Inspector<ph dataRef="id4" id="ph4" /> in Interface Builder or programmatically.</source>
          <target>Controls have <ph dataRef="id1" id="ph1" />attributes<ph dataRef="id2" id="ph2" /> which you can edit using the <ph dataRef="id3" id="ph3" />Attributes Inspector<ph dataRef="id4" id="ph4" /> in Interface Builder or programmatically.</target>
        </segment>
      </unit>
      <unit id="166">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You can edit the <ph dataRef="id1" id="ph1" />properties<ph dataRef="id2" id="ph2" /> of controls in the XAML markup or programmatically, using Visual Studio and Blend for Visual Studio.</source>
          <target>You can edit the <ph dataRef="id1" id="ph1" />properties<ph dataRef="id2" id="ph2" /> of controls in the XAML markup or programmatically, using Visual Studio and Blend for Visual Studio.</target>
        </segment>
      </unit>
      <unit id="167">
        <segment state="initial">
          <source>Add controls and handle events</source>
          <target>Add controls and handle events</target>
        </segment>
      </unit>
      <unit id="168">
        <segment state="initial">
          <source>Reusable visual styles.</source>
          <target>Reusable visual styles.</target>
        </segment>
      </unit>
      <unit id="169">
        <segment state="initial">
          <source>Apply visual changes to a number of controls, in a reusable format.</source>
          <target>Apply visual changes to a number of controls, in a reusable format.</target>
        </segment>
      </unit>
      <unit id="170">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>XML styles<ph dataRef="id1" id="ph1" /> are sets of properties that are applied to one or more controls.</source>
          <target>XML styles<ph dataRef="id1" id="ph1" /> are sets of properties that are applied to one or more controls.</target>
        </segment>
      </unit>
      <unit id="171">
        <segment state="initial">
          <source>iOS does not support reusable visual styles out-of-box, but the UIAppearance protocol allows multiple controls to share common attributes.</source>
          <target>iOS does not support reusable visual styles out-of-box, but the UIAppearance protocol allows multiple controls to share common attributes.</target>
        </segment>
      </unit>
      <unit id="172">
        <originalData>
          <data id="id1">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.style.aspx"&gt;</data>
          <data id="id2">&lt;/a&gt;&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.resourcedictionary.aspx"&gt;</data>
          <data id="id4">&lt;/a&gt;&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You can create reusable <ph dataRef="id1" id="ph1" />styles<ph dataRef="id2" id="ph2" />, which can be applied to multiple controls and stored in a <ph dataRef="id3" id="ph3" />ResourceDictionary<ph dataRef="id4" id="ph4" /> for easy reuse.</source>
          <target>You can create reusable <ph dataRef="id1" id="ph1" />styles<ph dataRef="id2" id="ph2" />, which can be applied to multiple controls and stored in a <ph dataRef="id3" id="ph3" />ResourceDictionary<ph dataRef="id4" id="ph4" /> for easy reuse.</target>
        </segment>
      </unit>
      <unit id="173">
        <segment state="initial">
          <source>Quickstart: Styling Controls</source>
          <target>Quickstart: Styling Controls</target>
        </segment>
      </unit>
      <unit id="174">
        <segment state="initial">
          <source>Editing the visual structure of controls.</source>
          <target>Editing the visual structure of controls.</target>
        </segment>
      </unit>
      <unit id="175">
        <segment state="initial">
          <source>Customize the visual structure of a control beyond just modifying properties or attributes, e.g. moving the checkbox text underneath the checkbox.</source>
          <target>Customize the visual structure of a control beyond just modifying properties or attributes, e.g. moving the checkbox text underneath the checkbox.</target>
        </segment>
      </unit>
      <unit id="176">
        <segment state="initial">
          <source>No simple method of editing the visual structure of controls exists in Android.</source>
          <target>No simple method of editing the visual structure of controls exists in Android.</target>
        </segment>
      </unit>
      <unit id="177">
        <segment state="initial">
          <source>No simple method of editing the visual structure of controls exists in iOS.</source>
          <target>No simple method of editing the visual structure of controls exists in iOS.</target>
        </segment>
      </unit>
      <unit id="178">
        <originalData>
          <data id="id1">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.controltemplate.aspx"&gt;</data>
          <data id="id2">&lt;/a&gt;&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>To customize the visual structure of a control, you can copy and edit its <ph dataRef="id1" id="ph1" />control template<ph dataRef="id2" id="ph2" /> in XAML markup.</source>
          <target>To customize the visual structure of a control, you can copy and edit its <ph dataRef="id1" id="ph1" />control template<ph dataRef="id2" id="ph2" /> in XAML markup.</target>
        </segment>
      </unit>
      <unit id="179">
        <segment state="initial">
          <source>Quickstart: Control Templates</source>
          <target>Quickstart: Control Templates</target>
        </segment>
      </unit>
      <unit id="180">
        <segment state="initial">
          <source>Built-in touch gestures.</source>
          <target>Built-in touch gestures.</target>
        </segment>
      </unit>
      <unit id="181">
        <segment state="initial">
          <source>Provide customized touch support by handling high level abstracted gesture events such as tap and double tap in views and controls.</source>
          <target>Provide customized touch support by handling high level abstracted gesture events such as tap and double tap in views and controls.</target>
        </segment>
      </unit>
      <unit id="182">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Gesture detectors<ph dataRef="id1" id="ph1" /> detect common touch gestures including scrolling, long-press, tap, double-tap and fling.</source>
          <target>Gesture detectors<ph dataRef="id1" id="ph1" /> detect common touch gestures including scrolling, long-press, tap, double-tap and fling.</target>
        </segment>
      </unit>
      <unit id="183">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>UIKit framework provides built-in <ph dataRef="id1" id="ph1" />gesture recognizers<ph dataRef="id2" id="ph2" /> which detect touch gestures including tap, pinch, pan, swipe, rotate and long-press.</source>
          <target>UIKit framework provides built-in <ph dataRef="id1" id="ph1" />gesture recognizers<ph dataRef="id2" id="ph2" /> which detect touch gestures including tap, pinch, pan, swipe, rotate and long-press.</target>
        </segment>
      </unit>
      <unit id="184">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
          <data id="id2">&lt;strong&gt;</data>
          <data id="id3">&lt;/strong&gt;</data>
          <data id="id4">&lt;strong&gt;</data>
          <data id="id5">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>UI elements<ph dataRef="id1" id="ph1" /> allow you to handle <ph dataRef="id2" id="ph2" />static gesture events<ph dataRef="id3" id="ph3" /> including tap, double-tap, right-tap and holding, as well as <ph dataRef="id4" id="ph4" />manipulation gesture events<ph dataRef="id5" id="ph5" /> including slide, swipe, turn, pinch and stretch.</source>
          <target>UI elements<ph dataRef="id1" id="ph1" /> allow you to handle <ph dataRef="id2" id="ph2" />static gesture events<ph dataRef="id3" id="ph3" /> including tap, double-tap, right-tap and holding, as well as <ph dataRef="id4" id="ph4" />manipulation gesture events<ph dataRef="id5" id="ph5" /> including slide, swipe, turn, pinch and stretch.</target>
        </segment>
      </unit>
      <unit id="185">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Gesture events are <ph dataRef="id1" id="ph1" />routed events<ph dataRef="id2" id="ph2" /> and can be handled by parent objects containing the child UIElement.</source>
          <target>Gesture events are <ph dataRef="id1" id="ph1" />routed events<ph dataRef="id2" id="ph2" /> and can be handled by parent objects containing the child UIElement.</target>
        </segment>
      </unit>
      <unit id="186">
        <segment state="initial">
          <source>Touch interactions</source>
          <target>Touch interactions</target>
        </segment>
      </unit>
      <unit id="187">
        <segment state="initial">
          <source>Custom user interactions - gestures, manipulations, and interactions</source>
          <target>Custom user interactions - gestures, manipulations, and interactions</target>
        </segment>
      </unit>
      <unit id="188">
        <segment state="initial">
          <source>Navigation and app structure</source>
          <target>Navigation and app structure</target>
        </segment>
      </unit>
      <unit id="189">
        <segment state="initial">
          <source>General concept</source>
          <target>General concept</target>
        </segment>
      </unit>
      <unit id="190">
        <segment state="initial">
          <source>Android</source>
          <target>Android</target>
        </segment>
      </unit>
      <unit id="191">
        <segment state="initial">
          <source>iOS</source>
          <target>iOS</target>
        </segment>
      </unit>
      <unit id="192">
        <segment state="initial">
          <source>Windows 10 UWP</source>
          <target>Windows 10 UWP</target>
        </segment>
      </unit>
      <unit id="193">
        <segment state="initial">
          <source>Layouts.</source>
          <target>Layouts.</target>
        </segment>
      </unit>
      <unit id="194">
        <segment state="initial">
          <source>The layout defines the structure of the user interface.</source>
          <target>The layout defines the structure of the user interface.</target>
        </segment>
      </unit>
      <unit id="195">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
          <data id="id5">&lt;strong&gt;</data>
          <data id="id6">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Layout is composed of <ph dataRef="id1" id="ph1" />view groups<ph dataRef="id2" id="ph2" /> such as the <ph dataRef="id3" id="ph3" />LinearLayout<ph dataRef="id4" id="ph4" /> and the <ph dataRef="id5" id="ph5" />RelativeLayout<ph dataRef="id6" id="ph6" /> which can nest other view groups or views.</source>
          <target>Layout is composed of <ph dataRef="id1" id="ph1" />view groups<ph dataRef="id2" id="ph2" /> such as the <ph dataRef="id3" id="ph3" />LinearLayout<ph dataRef="id4" id="ph4" /> and the <ph dataRef="id5" id="ph5" />RelativeLayout<ph dataRef="id6" id="ph6" /> which can nest other view groups or views.</target>
        </segment>
      </unit>
      <unit id="196">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Layout is composed of a <ph dataRef="id1" id="ph1" />UIViewController<ph dataRef="id2" id="ph2" /> containing <ph dataRef="id3" id="ph3" />UIView<ph dataRef="id4" id="ph4" />'s which can be nested.</source>
          <target>Layout is composed of a <ph dataRef="id1" id="ph1" />UIViewController<ph dataRef="id2" id="ph2" /> containing <ph dataRef="id3" id="ph3" />UIView<ph dataRef="id4" id="ph4" />'s which can be nested.</target>
        </segment>
      </unit>
      <unit id="197">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.canvas.aspx"&gt;</data>
          <data id="id4">&lt;/a&gt;&lt;/strong&gt;</data>
          <data id="id5">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.grid.aspx"&gt;</data>
          <data id="id6">&lt;/a&gt;&lt;/strong&gt;</data>
          <data id="id7">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.relativepanel.aspx"&gt;</data>
          <data id="id8">&lt;/a&gt;&lt;/strong&gt;</data>
          <data id="id9">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.stackpanel.aspx"&gt;</data>
          <data id="id10">&lt;/a&gt;&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>XAML which provides a flexible layout system composed of <ph dataRef="id1" id="ph1" />layout panel classes<ph dataRef="id2" id="ph2" /> such as <ph dataRef="id3" id="ph3" />Canvas<ph dataRef="id4" id="ph4" />, <ph dataRef="id5" id="ph5" />Grid<ph dataRef="id6" id="ph6" />, <ph dataRef="id7" id="ph7" />RelativePanel<ph dataRef="id8" id="ph8" /> and <ph dataRef="id9" id="ph9" />StackPanel<ph dataRef="id10" id="ph10" /> for static and responsive layouts.</source>
          <target>XAML which provides a flexible layout system composed of <ph dataRef="id1" id="ph1" />layout panel classes<ph dataRef="id2" id="ph2" /> such as <ph dataRef="id3" id="ph3" />Canvas<ph dataRef="id4" id="ph4" />, <ph dataRef="id5" id="ph5" />Grid<ph dataRef="id6" id="ph6" />, <ph dataRef="id7" id="ph7" />RelativePanel<ph dataRef="id8" id="ph8" /> and <ph dataRef="id9" id="ph9" />StackPanel<ph dataRef="id10" id="ph10" /> for static and responsive layouts.</target>
        </segment>
      </unit>
      <unit id="198">
        <originalData>
          <data id="id1">&lt;/a&gt;&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Properties<ph dataRef="id1" id="ph1" /> are used to control the size and position of the elements.</source>
          <target>Properties<ph dataRef="id1" id="ph1" /> are used to control the size and position of the elements.</target>
        </segment>
      </unit>
      <unit id="199">
        <segment state="initial">
          <source>Define layouts with XAML</source>
          <target>Define layouts with XAML</target>
        </segment>
      </unit>
      <unit id="200">
        <segment state="initial">
          <source>Peer-to-peer navigation.</source>
          <target>Peer-to-peer navigation.</target>
        </segment>
      </unit>
      <unit id="201">
        <segment state="initial">
          <source>Presenting the user with methods of navigating between pages of equal hierarchical importance.</source>
          <target>Presenting the user with methods of navigating between pages of equal hierarchical importance.</target>
        </segment>
      </unit>
      <unit id="202">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
          <data id="id2">&lt;strong&gt;</data>
          <data id="id3">&lt;/strong&gt;</data>
          <data id="id4">&lt;strong&gt;</data>
          <data id="id5">&lt;/strong&gt;</data>
          <data id="id6">&lt;strong&gt;</data>
          <data id="id7">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Tabs<ph dataRef="id1" id="ph1" />, <ph dataRef="id2" id="ph2" />swipe views<ph dataRef="id3" id="ph3" /> and <ph dataRef="id4" id="ph4" />navigation drawers<ph dataRef="id5" id="ph5" /> provide <ph dataRef="id6" id="ph6" />lateral navigation<ph dataRef="id7" id="ph7" />.</source>
          <target>Tabs<ph dataRef="id1" id="ph1" />, <ph dataRef="id2" id="ph2" />swipe views<ph dataRef="id3" id="ph3" /> and <ph dataRef="id4" id="ph4" />navigation drawers<ph dataRef="id5" id="ph5" /> provide <ph dataRef="id6" id="ph6" />lateral navigation<ph dataRef="id7" id="ph7" />.</target>
        </segment>
      </unit>
      <unit id="203">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
          <data id="id2">&lt;strong&gt;</data>
          <data id="id3">&lt;/strong&gt;</data>
          <data id="id4">&lt;strong&gt;</data>
          <data id="id5">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Tab bar controllers<ph dataRef="id1" id="ph1" />, <ph dataRef="id2" id="ph2" />split view controllers<ph dataRef="id3" id="ph3" /> and <ph dataRef="id4" id="ph4" />page view controllers<ph dataRef="id5" id="ph5" /> allow navigation between views of equal hierarchy.</source>
          <target>Tab bar controllers<ph dataRef="id1" id="ph1" />, <ph dataRef="id2" id="ph2" />split view controllers<ph dataRef="id3" id="ph3" /> and <ph dataRef="id4" id="ph4" />page view controllers<ph dataRef="id5" id="ph5" /> allow navigation between views of equal hierarchy.</target>
        </segment>
      </unit>
      <unit id="204">
        <originalData>
          <data id="id1">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/dn997788.aspx"&gt;</data>
          <data id="id2">&lt;/a&gt;&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You can display a persistent list of links/tabs above the content using <ph dataRef="id1" id="ph1" />tabs/pivots<ph dataRef="id2" id="ph2" />.</source>
          <target>You can display a persistent list of links/tabs above the content using <ph dataRef="id1" id="ph1" />tabs/pivots<ph dataRef="id2" id="ph2" />.</target>
        </segment>
      </unit>
      <unit id="205">
        <originalData>
          <data id="id1">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/dn997787.aspx"&gt;</data>
          <data id="id2">&lt;/a&gt;&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>The <ph dataRef="id1" id="ph1" />navigation pane/split view<ph dataRef="id2" id="ph2" /> lets you display a list of links alongside the content.</source>
          <target>The <ph dataRef="id1" id="ph1" />navigation pane/split view<ph dataRef="id2" id="ph2" /> lets you display a list of links alongside the content.</target>
        </segment>
      </unit>
      <unit id="206">
        <segment state="initial">
          <source>Navigation</source>
          <target>Navigation</target>
        </segment>
      </unit>
      <unit id="207">
        <segment state="initial">
          <source>Peer to peer navigation between two pages</source>
          <target>Peer to peer navigation between two pages</target>
        </segment>
      </unit>
      <unit id="208">
        <segment state="initial">
          <source>Hierarchical navigation.</source>
          <target>Hierarchical navigation.</target>
        </segment>
      </unit>
      <unit id="209">
        <segment state="initial">
          <source>Navigating between parent and child pages of a hierarchy.</source>
          <target>Navigating between parent and child pages of a hierarchy.</target>
        </segment>
      </unit>
      <unit id="210">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
          <data id="id2">&lt;strong&gt;</data>
          <data id="id3">&lt;/strong&gt;</data>
          <data id="id4">&lt;strong&gt;</data>
          <data id="id5">&lt;/strong&gt;</data>
          <data id="id6">&lt;strong&gt;</data>
          <data id="id7">&lt;/strong&gt;</data>
          <data id="id8">&lt;strong&gt;</data>
          <data id="id9">&lt;/strong&gt;</data>
          <data id="id10">&lt;strong&gt;</data>
          <data id="id11">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Lists<ph dataRef="id1" id="ph1" />, and <ph dataRef="id2" id="ph2" />grid lists<ph dataRef="id3" id="ph3" />, <ph dataRef="id4" id="ph4" />buttons<ph dataRef="id5" id="ph5" /> and other controls provide <ph dataRef="id6" id="ph6" />descendent navigation<ph dataRef="id7" id="ph7" /> when used with <ph dataRef="id8" id="ph8" />intents<ph dataRef="id9" id="ph9" /> to load other <ph dataRef="id10" id="ph10" />activities<ph dataRef="id11" id="ph11" />.</source>
          <target>Lists<ph dataRef="id1" id="ph1" />, and <ph dataRef="id2" id="ph2" />grid lists<ph dataRef="id3" id="ph3" />, <ph dataRef="id4" id="ph4" />buttons<ph dataRef="id5" id="ph5" /> and other controls provide <ph dataRef="id6" id="ph6" />descendent navigation<ph dataRef="id7" id="ph7" /> when used with <ph dataRef="id8" id="ph8" />intents<ph dataRef="id9" id="ph9" /> to load other <ph dataRef="id10" id="ph10" />activities<ph dataRef="id11" id="ph11" />.</target>
        </segment>
      </unit>
      <unit id="211">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Navigation controllers<ph dataRef="id1" id="ph1" /> allow users to navigate between levels of a hierarchy.</source>
          <target>Navigation controllers<ph dataRef="id1" id="ph1" /> allow users to navigate between levels of a hierarchy.</target>
        </segment>
      </unit>
      <unit id="212">
        <originalData>
          <data id="id1">&lt;/a&gt;&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Hubs<ph dataRef="id1" id="ph1" /> let you show the user a preview of content which can be selected to navigate to child pages.</source>
          <target>Hubs<ph dataRef="id1" id="ph1" /> let you show the user a preview of content which can be selected to navigate to child pages.</target>
        </segment>
      </unit>
      <unit id="213">
        <originalData>
          <data id="id1">&lt;/a&gt;&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Master/details<ph dataRef="id1" id="ph1" /> let users pick from a list of item summaries which display next to the corresponding detail section.</source>
          <target>Master/details<ph dataRef="id1" id="ph1" /> let users pick from a list of item summaries which display next to the corresponding detail section.</target>
        </segment>
      </unit>
      <unit id="214">
        <segment state="initial">
          <source>Navigation</source>
          <target>Navigation</target>
        </segment>
      </unit>
      <unit id="215">
        <segment state="initial">
          <source>Back button navigation.</source>
          <target>Back button navigation.</target>
        </segment>
      </unit>
      <unit id="216">
        <segment state="initial">
          <source>Navigating back through an application.</source>
          <target>Navigating back through an application.</target>
        </segment>
      </unit>
      <unit id="217">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
          <data id="id5">&lt;strong&gt;</data>
          <data id="id6">&lt;/strong&gt;</data>
          <data id="id7">&lt;strong&gt;</data>
          <data id="id8">&lt;/strong&gt;</data>
          <data id="id9">&lt;strong&gt;</data>
          <data id="id10">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>The <ph dataRef="id1" id="ph1" />back<ph dataRef="id2" id="ph2" /> and <ph dataRef="id3" id="ph3" />up<ph dataRef="id4" id="ph4" /> buttons inside the action bar provide <ph dataRef="id5" id="ph5" />ancestral<ph dataRef="id6" id="ph6" /> and <ph dataRef="id7" id="ph7" />temporal<ph dataRef="id8" id="ph8" /> navigation using the <ph dataRef="id9" id="ph9" />back stack<ph dataRef="id10" id="ph10" />.</source>
          <target>The <ph dataRef="id1" id="ph1" />back<ph dataRef="id2" id="ph2" /> and <ph dataRef="id3" id="ph3" />up<ph dataRef="id4" id="ph4" /> buttons inside the action bar provide <ph dataRef="id5" id="ph5" />ancestral<ph dataRef="id6" id="ph6" /> and <ph dataRef="id7" id="ph7" />temporal<ph dataRef="id8" id="ph8" /> navigation using the <ph dataRef="id9" id="ph9" />back stack<ph dataRef="id10" id="ph10" />.</target>
        </segment>
      </unit>
      <unit id="218">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>The <ph dataRef="id1" id="ph1" />navigation controller<ph dataRef="id2" id="ph2" /> can have a back button added to it.</source>
          <target>The <ph dataRef="id1" id="ph1" />navigation controller<ph dataRef="id2" id="ph2" /> can have a back button added to it.</target>
        </segment>
      </unit>
      <unit id="219">
        <originalData>
          <data id="id1">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.frame.backstack.aspx"&gt;</data>
          <data id="id2">&lt;/a&gt;&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You can handle software or hardware back button presses easily using the <ph dataRef="id1" id="ph1" />back stack property<ph dataRef="id2" id="ph2" /> which allows your users to traverse the <ph dataRef="id3" id="ph3" />navigation history<ph dataRef="id4" id="ph4" />.</source>
          <target>You can handle software or hardware back button presses easily using the <ph dataRef="id1" id="ph1" />back stack property<ph dataRef="id2" id="ph2" /> which allows your users to traverse the <ph dataRef="id3" id="ph3" />navigation history<ph dataRef="id4" id="ph4" />.</target>
        </segment>
      </unit>
      <unit id="220">
        <segment state="initial">
          <source>Back button navigation</source>
          <target>Back button navigation</target>
        </segment>
      </unit>
      <unit id="221">
        <segment state="initial">
          <source>Splash screen.</source>
          <target>Splash screen.</target>
        </segment>
      </unit>
      <unit id="222">
        <segment state="initial">
          <source>Showing an image on app launch, used primarily for branding.</source>
          <target>Showing an image on app launch, used primarily for branding.</target>
        </segment>
      </unit>
      <unit id="223">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Splash screens are not provided by default, and are implemented by editing the first activities <ph dataRef="id1" id="ph1" />theme background<ph dataRef="id2" id="ph2" />.</source>
          <target>Splash screens are not provided by default, and are implemented by editing the first activities <ph dataRef="id1" id="ph1" />theme background<ph dataRef="id2" id="ph2" />.</target>
        </segment>
      </unit>
      <unit id="224">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Apps must either have a <ph dataRef="id1" id="ph1" />static launch image<ph dataRef="id2" id="ph2" /> or <ph dataRef="id3" id="ph3" />XIB/storyboard launch file<ph dataRef="id4" id="ph4" />.</source>
          <target>Apps must either have a <ph dataRef="id1" id="ph1" />static launch image<ph dataRef="id2" id="ph2" /> or <ph dataRef="id3" id="ph3" />XIB/storyboard launch file<ph dataRef="id4" id="ph4" />.</target>
        </segment>
      </unit>
      <unit id="225">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You create a splash screen using an <ph dataRef="id1" id="ph1" />image<ph dataRef="id2" id="ph2" /> and colored background.</source>
          <target>You create a splash screen using an <ph dataRef="id1" id="ph1" />image<ph dataRef="id2" id="ph2" /> and colored background.</target>
        </segment>
      </unit>
      <unit id="226">
        <originalData>
          <data id="id1">&lt;/a&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Splash screen time can be extended<ph dataRef="id1" id="ph1" />.</source>
          <target>Splash screen time can be extended<ph dataRef="id1" id="ph1" />.</target>
        </segment>
      </unit>
      <unit id="227">
        <segment state="initial">
          <source>Add a splash screen</source>
          <target>Add a splash screen</target>
        </segment>
      </unit>
      <unit id="228">
        <segment state="initial">
          <source>Guidelines for splash screens</source>
          <target>Guidelines for splash screens</target>
        </segment>
      </unit>
      <unit id="229">
        <segment state="initial">
          <source>Custom inputs</source>
          <target>Custom inputs</target>
        </segment>
      </unit>
      <unit id="230">
        <segment state="initial">
          <source>General concept</source>
          <target>General concept</target>
        </segment>
      </unit>
      <unit id="231">
        <segment state="initial">
          <source>Android</source>
          <target>Android</target>
        </segment>
      </unit>
      <unit id="232">
        <segment state="initial">
          <source>iOS</source>
          <target>iOS</target>
        </segment>
      </unit>
      <unit id="233">
        <segment state="initial">
          <source>Windows 10 UWP</source>
          <target>Windows 10 UWP</target>
        </segment>
      </unit>
      <unit id="234">
        <segment state="initial">
          <source>Voice.</source>
          <target>Voice.</target>
        </segment>
      </unit>
      <unit id="235">
        <segment state="initial">
          <source>Speech recognition for speech input, and additional voice capabilities.</source>
          <target>Speech recognition for speech input, and additional voice capabilities.</target>
        </segment>
      </unit>
      <unit id="236">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Speech input can be provided by any app which implements a <ph dataRef="id1" id="ph1" />RecognizerIntent<ph dataRef="id2" id="ph2" />, such as <ph dataRef="id3" id="ph3" />Google Voice Search<ph dataRef="id4" id="ph4" />.</source>
          <target>Speech input can be provided by any app which implements a <ph dataRef="id1" id="ph1" />RecognizerIntent<ph dataRef="id2" id="ph2" />, such as <ph dataRef="id3" id="ph3" />Google Voice Search<ph dataRef="id4" id="ph4" />.</target>
        </segment>
      </unit>
      <unit id="237">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>The <ph dataRef="id1" id="ph1" />SpeechRecognizer<ph dataRef="id2" id="ph2" /> class allows apps to use Google's speech recognition API.</source>
          <target>The <ph dataRef="id1" id="ph1" />SpeechRecognizer<ph dataRef="id2" id="ph2" /> class allows apps to use Google's speech recognition API.</target>
        </segment>
      </unit>
      <unit id="238">
        <segment state="initial">
          <source>No built-in speech recognition or speech input APIs exist.</source>
          <target>No built-in speech recognition or speech input APIs exist.</target>
        </segment>
      </unit>
      <unit id="239">
        <originalData>
          <data id="id1">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/mt185615.aspx"&gt;</data>
          <data id="id2">&lt;/a&gt;&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You can use the <ph dataRef="id1" id="ph1" />speech recognition<ph dataRef="id2" id="ph2" /> API to interact with your app in the foreground.</source>
          <target>You can use the <ph dataRef="id1" id="ph1" />speech recognition<ph dataRef="id2" id="ph2" /> API to interact with your app in the foreground.</target>
        </segment>
      </unit>
      <unit id="240">
        <originalData>
          <data id="id1">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/mt185598.aspx"&gt;</data>
          <data id="id2">&lt;/a&gt;&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You can use speech-based <ph dataRef="id1" id="ph1" />Cortana interactions<ph dataRef="id2" id="ph2" /> to launch apps in the foreground or background, and to ​interact with background apps.</source>
          <target>You can use speech-based <ph dataRef="id1" id="ph1" />Cortana interactions<ph dataRef="id2" id="ph2" /> to launch apps in the foreground or background, and to ​interact with background apps.</target>
        </segment>
      </unit>
      <unit id="241">
        <segment state="initial">
          <source>Speech interactions</source>
          <target>Speech interactions</target>
        </segment>
      </unit>
      <unit id="242">
        <segment state="initial">
          <source>Custom user inputs.</source>
          <target>Custom user inputs.</target>
        </segment>
      </unit>
      <unit id="243">
        <segment state="initial">
          <source>Handling keyboard, mouse, stylus and other inputs.</source>
          <target>Handling keyboard, mouse, stylus and other inputs.</target>
        </segment>
      </unit>
      <unit id="244">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
          <data id="id5">&lt;strong&gt;</data>
          <data id="id6">&lt;/strong&gt;</data>
          <data id="id7">&lt;strong&gt;</data>
          <data id="id8">&lt;/strong&gt;</data>
          <data id="id9">&lt;strong&gt;</data>
          <data id="id10">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Support for interactions includes <ph dataRef="id1" id="ph1" />touch<ph dataRef="id2" id="ph2" />, <ph dataRef="id3" id="ph3" />touchpad<ph dataRef="id4" id="ph4" />, <ph dataRef="id5" id="ph5" />stylus<ph dataRef="id6" id="ph6" />, <ph dataRef="id7" id="ph7" />mouse<ph dataRef="id8" id="ph8" /> and <ph dataRef="id9" id="ph9" />keyboard<ph dataRef="id10" id="ph10" />.</source>
          <target>Support for interactions includes <ph dataRef="id1" id="ph1" />touch<ph dataRef="id2" id="ph2" />, <ph dataRef="id3" id="ph3" />touchpad<ph dataRef="id4" id="ph4" />, <ph dataRef="id5" id="ph5" />stylus<ph dataRef="id6" id="ph6" />, <ph dataRef="id7" id="ph7" />mouse<ph dataRef="id8" id="ph8" /> and <ph dataRef="id9" id="ph9" />keyboard<ph dataRef="id10" id="ph10" />.</target>
        </segment>
      </unit>
      <unit id="245">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Movements and inputs are reported in the same way as touch, but it is possible to detect more information about the <ph dataRef="id1" id="ph1" />input device<ph dataRef="id2" id="ph2" />.</source>
          <target>Movements and inputs are reported in the same way as touch, but it is possible to detect more information about the <ph dataRef="id1" id="ph1" />input device<ph dataRef="id2" id="ph2" />.</target>
        </segment>
      </unit>
      <unit id="246">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
          <data id="id5">&lt;strong&gt;</data>
          <data id="id6">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Support for <ph dataRef="id1" id="ph1" />touch<ph dataRef="id2" id="ph2" />, the <ph dataRef="id3" id="ph3" />Apple Pencil<ph dataRef="id4" id="ph4" /> and hardware <ph dataRef="id5" id="ph5" />keyboards<ph dataRef="id6" id="ph6" /> are provided.</source>
          <target>Support for <ph dataRef="id1" id="ph1" />touch<ph dataRef="id2" id="ph2" />, the <ph dataRef="id3" id="ph3" />Apple Pencil<ph dataRef="id4" id="ph4" /> and hardware <ph dataRef="id5" id="ph5" />keyboards<ph dataRef="id6" id="ph6" /> are provided.</target>
        </segment>
      </unit>
      <unit id="247">
        <originalData>
          <data id="id1">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/mt185617.aspx"&gt;</data>
          <data id="id2">&lt;/a&gt;&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/mt187313.aspx"&gt;</data>
          <data id="id4">&lt;/a&gt;&lt;/strong&gt;</data>
          <data id="id5">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/mt187311.aspx"&gt;</data>
          <data id="id6">&lt;/a&gt;&lt;/strong&gt;</data>
          <data id="id7">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/mt187308.aspx"&gt;</data>
          <data id="id8">&lt;/a&gt;&lt;/strong&gt;</data>
          <data id="id9">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/mt185607.aspx"&gt;</data>
          <data id="id10">&lt;/a&gt;&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You will find support for a wide range of interactions including <ph dataRef="id1" id="ph1" />touch<ph dataRef="id2" id="ph2" />, <ph dataRef="id3" id="ph3" />touchpad<ph dataRef="id4" id="ph4" />, <ph dataRef="id5" id="ph5" />pen/stylus<ph dataRef="id6" id="ph6" /> with digital ink, <ph dataRef="id7" id="ph7" />mouse<ph dataRef="id8" id="ph8" /> and <ph dataRef="id9" id="ph9" />keyboard<ph dataRef="id10" id="ph10" />.</source>
          <target>You will find support for a wide range of interactions including <ph dataRef="id1" id="ph1" />touch<ph dataRef="id2" id="ph2" />, <ph dataRef="id3" id="ph3" />touchpad<ph dataRef="id4" id="ph4" />, <ph dataRef="id5" id="ph5" />pen/stylus<ph dataRef="id6" id="ph6" /> with digital ink, <ph dataRef="id7" id="ph7" />mouse<ph dataRef="id8" id="ph8" /> and <ph dataRef="id9" id="ph9" />keyboard<ph dataRef="id10" id="ph10" />.</target>
        </segment>
      </unit>
      <unit id="248">
        <segment state="initial">
          <source>Your apps can handle the data without needing to know which input device was used, and raw input device data can be accessed if needed.</source>
          <target>Your apps can handle the data without needing to know which input device was used, and raw input device data can be accessed if needed.</target>
        </segment>
      </unit>
      <unit id="249">
        <segment state="initial">
          <source>Handle pointer input</source>
          <target>Handle pointer input</target>
        </segment>
      </unit>
      <unit id="250">
        <segment state="initial">
          <source>Custom user interactions</source>
          <target>Custom user interactions</target>
        </segment>
      </unit>
      <unit id="251">
        <segment state="initial">
          <source>Data</source>
          <target>Data</target>
        </segment>
      </unit>
      <unit id="252">
        <segment state="initial">
          <source>General concept</source>
          <target>General concept</target>
        </segment>
      </unit>
      <unit id="253">
        <segment state="initial">
          <source>Android</source>
          <target>Android</target>
        </segment>
      </unit>
      <unit id="254">
        <segment state="initial">
          <source>iOS</source>
          <target>iOS</target>
        </segment>
      </unit>
      <unit id="255">
        <segment state="initial">
          <source>Windows 10 UWP</source>
          <target>Windows 10 UWP</target>
        </segment>
      </unit>
      <unit id="256">
        <segment state="initial">
          <source>Local app data.</source>
          <target>Local app data.</target>
        </segment>
      </unit>
      <unit id="257">
        <segment state="initial">
          <source>Storing settings and files related to your app locally.</source>
          <target>Storing settings and files related to your app locally.</target>
        </segment>
      </unit>
      <unit id="258">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Local files can be saved using <ph dataRef="id1" id="ph1" />openFileOutput<ph dataRef="id2" id="ph2" /> and <ph dataRef="id3" id="ph3" />openFileInput<ph dataRef="id4" id="ph4" />.</source>
          <target>Local files can be saved using <ph dataRef="id1" id="ph1" />openFileOutput<ph dataRef="id2" id="ph2" /> and <ph dataRef="id3" id="ph3" />openFileInput<ph dataRef="id4" id="ph4" />.</target>
        </segment>
      </unit>
      <unit id="259">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Settings in a <ph dataRef="id1" id="ph1" />shared preferences file<ph dataRef="id2" id="ph2" /> can be accessed using <ph dataRef="id3" id="ph3" />getSharedPreferences<ph dataRef="id4" id="ph4" />.</source>
          <target>Settings in a <ph dataRef="id1" id="ph1" />shared preferences file<ph dataRef="id2" id="ph2" /> can be accessed using <ph dataRef="id3" id="ph3" />getSharedPreferences<ph dataRef="id4" id="ph4" />.</target>
        </segment>
      </unit>
      <unit id="260">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Local files can be stored in the <ph dataRef="id1" id="ph1" />application support<ph dataRef="id2" id="ph2" /> directory, accessed via the <ph dataRef="id3" id="ph3" />NSFileManager<ph dataRef="id4" id="ph4" /> class.</source>
          <target>Local files can be stored in the <ph dataRef="id1" id="ph1" />application support<ph dataRef="id2" id="ph2" /> directory, accessed via the <ph dataRef="id3" id="ph3" />NSFileManager<ph dataRef="id4" id="ph4" /> class.</target>
        </segment>
      </unit>
      <unit id="261">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Settings in <ph dataRef="id1" id="ph1" />preferences<ph dataRef="id2" id="ph2" /> files can be accessed by the <ph dataRef="id3" id="ph3" />NSUserDefaults<ph dataRef="id4" id="ph4" /> class.</source>
          <target>Settings in <ph dataRef="id1" id="ph1" />preferences<ph dataRef="id2" id="ph2" /> files can be accessed by the <ph dataRef="id3" id="ph3" />NSUserDefaults<ph dataRef="id4" id="ph4" /> class.</target>
        </segment>
      </unit>
      <unit id="262">
        <originalData>
          <data id="id1">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/xaml/br230562.aspx"&gt;</data>
          <data id="id2">&lt;/a&gt;&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>The <ph dataRef="id1" id="ph1" />Windows.Storage<ph dataRef="id2" id="ph2" /> classes handle local data storage for you in a unified way.</source>
          <target>The <ph dataRef="id1" id="ph1" />Windows.Storage<ph dataRef="id2" id="ph2" /> classes handle local data storage for you in a unified way.</target>
        </segment>
      </unit>
      <unit id="263">
        <originalData>
          <data id="id1">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/xaml/windows.storage.applicationdatacontainer.aspx"&gt;</data>
          <data id="id2">&lt;/a&gt;&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/xaml/windows.storage.applicationdata.localsettings.aspx"&gt;</data>
          <data id="id4">&lt;/a&gt;&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You store settings as an <ph dataRef="id1" id="ph1" />ApplicationDataContainer<ph dataRef="id2" id="ph2" /> object, accessed via the <ph dataRef="id3" id="ph3" />ApplicationData.LocalSettings<ph dataRef="id4" id="ph4" /> property.</source>
          <target>You store settings as an <ph dataRef="id1" id="ph1" />ApplicationDataContainer<ph dataRef="id2" id="ph2" /> object, accessed via the <ph dataRef="id3" id="ph3" />ApplicationData.LocalSettings<ph dataRef="id4" id="ph4" /> property.</target>
        </segment>
      </unit>
      <unit id="264">
        <originalData>
          <data id="id1">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/windows.storage.storagefolder.aspx"&gt;</data>
          <data id="id2">&lt;/a&gt;&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/xaml/windows.storage.applicationdata.localfolder.aspx"&gt;</data>
          <data id="id4">&lt;/a&gt;&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You store files in a <ph dataRef="id1" id="ph1" />StorageFolder<ph dataRef="id2" id="ph2" /> object accessed via the <ph dataRef="id3" id="ph3" />ApplicationData.LocalFolder<ph dataRef="id4" id="ph4" /> property.</source>
          <target>You store files in a <ph dataRef="id1" id="ph1" />StorageFolder<ph dataRef="id2" id="ph2" /> object accessed via the <ph dataRef="id3" id="ph3" />ApplicationData.LocalFolder<ph dataRef="id4" id="ph4" /> property.</target>
        </segment>
      </unit>
      <unit id="265">
        <segment state="initial">
          <source>Store and retrieve settings and other app data</source>
          <target>Store and retrieve settings and other app data</target>
        </segment>
      </unit>
      <unit id="266">
        <segment state="initial">
          <source>Local database storage.</source>
          <target>Local database storage.</target>
        </segment>
      </unit>
      <unit id="267">
        <segment state="initial">
          <source>Storing app data in a relational database, with object-relational mappers (ORM) if applicable.</source>
          <target>Storing app data in a relational database, with object-relational mappers (ORM) if applicable.</target>
        </segment>
      </unit>
      <unit id="268">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>The <ph dataRef="id1" id="ph1" />SQLite<ph dataRef="id2" id="ph2" /> database is provided.</source>
          <target>The <ph dataRef="id1" id="ph1" />SQLite<ph dataRef="id2" id="ph2" /> database is provided.</target>
        </segment>
      </unit>
      <unit id="269">
        <segment state="initial">
          <source>No ORM is built-in.</source>
          <target>No ORM is built-in.</target>
        </segment>
      </unit>
      <unit id="270">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>SQL queries are run using the <ph dataRef="id1" id="ph1" />SQLiteDatabase<ph dataRef="id2" id="ph2" /> class.</source>
          <target>SQL queries are run using the <ph dataRef="id1" id="ph1" />SQLiteDatabase<ph dataRef="id2" id="ph2" /> class.</target>
        </segment>
      </unit>
      <unit id="271">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>The <ph dataRef="id1" id="ph1" />SQLite<ph dataRef="id2" id="ph2" /> database is provided.</source>
          <target>The <ph dataRef="id1" id="ph1" />SQLite<ph dataRef="id2" id="ph2" /> database is provided.</target>
        </segment>
      </unit>
      <unit id="272">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>CoreData<ph dataRef="id1" id="ph1" /> is the built-in object graph framework which can be used with SQLite and provide functionality comparable with an ORM.</source>
          <target>CoreData<ph dataRef="id1" id="ph1" /> is the built-in object graph framework which can be used with SQLite and provide functionality comparable with an ORM.</target>
        </segment>
      </unit>
      <unit id="273">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You can store data using <ph dataRef="id1" id="ph1" />SQLite<ph dataRef="id2" id="ph2" />.</source>
          <target>You can store data using <ph dataRef="id1" id="ph1" />SQLite<ph dataRef="id2" id="ph2" />.</target>
        </segment>
      </unit>
      <unit id="274">
        <originalData>
          <data id="id1">&lt;/a&gt;&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Entity Framework<ph dataRef="id1" id="ph1" /> is a built-in ORM which eliminates the need to write lots of data access code and enables you to easily query the database without writing SQL.</source>
          <target>Entity Framework<ph dataRef="id1" id="ph1" /> is a built-in ORM which eliminates the need to write lots of data access code and enables you to easily query the database without writing SQL.</target>
        </segment>
      </unit>
      <unit id="275">
        <originalData>
          <data id="id1">&lt;a href="https://msdn.microsoft.com/library/windows/apps/xaml/mt592864.aspx"&gt;</data>
          <data id="id2">&lt;/a&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You can run SQL queries directly with the <ph dataRef="id1" id="ph1" />SQLite library<ph dataRef="id2" id="ph2" />.</source>
          <target>You can run SQL queries directly with the <ph dataRef="id1" id="ph1" />SQLite library<ph dataRef="id2" id="ph2" />.</target>
        </segment>
      </unit>
      <unit id="276">
        <segment state="initial">
          <source>Data Access</source>
          <target>Data Access</target>
        </segment>
      </unit>
      <unit id="277">
        <segment state="initial">
          <source>HTTP libraries for REST access.</source>
          <target>HTTP libraries for REST access.</target>
        </segment>
      </unit>
      <unit id="278">
        <segment state="initial">
          <source>Built-in libraries that let you communicate with web services and web servers using HTTP(S).</source>
          <target>Built-in libraries that let you communicate with web services and web servers using HTTP(S).</target>
        </segment>
      </unit>
      <unit id="279">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>HTTP libraries <ph dataRef="id1" id="ph1" />HttpURLConnection<ph dataRef="id2" id="ph2" /> and <ph dataRef="id3" id="ph3" />Volley<ph dataRef="id4" id="ph4" />.</source>
          <target>HTTP libraries <ph dataRef="id1" id="ph1" />HttpURLConnection<ph dataRef="id2" id="ph2" /> and <ph dataRef="id3" id="ph3" />Volley<ph dataRef="id4" id="ph4" />.</target>
        </segment>
      </unit>
      <unit id="280">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
          <data id="id2">&lt;strong&gt;</data>
          <data id="id3">&lt;/strong&gt;</data>
          <data id="id4">&lt;strong&gt;</data>
          <data id="id5">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>NSURLSession<ph dataRef="id1" id="ph1" />, <ph dataRef="id2" id="ph2" />NSURLConnection<ph dataRef="id3" id="ph3" /> and <ph dataRef="id4" id="ph4" />NSURLDownload<ph dataRef="id5" id="ph5" />.</source>
          <target>NSURLSession<ph dataRef="id1" id="ph1" />, <ph dataRef="id2" id="ph2" />NSURLConnection<ph dataRef="id3" id="ph3" /> and <ph dataRef="id4" id="ph4" />NSURLDownload<ph dataRef="id5" id="ph5" />.</target>
        </segment>
      </unit>
      <unit id="281">
        <originalData>
          <data id="id1">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/xaml/windows.web.http.httpclient"&gt;</data>
          <data id="id2">&lt;/a&gt;&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You can use the built-in <ph dataRef="id1" id="ph1" />HttpClient<ph dataRef="id2" id="ph2" /> API to access common HTTP functionality including GET, DELETE, PUT, POST, common authentication patterns, SSL, cookies and progress info.</source>
          <target>You can use the built-in <ph dataRef="id1" id="ph1" />HttpClient<ph dataRef="id2" id="ph2" /> API to access common HTTP functionality including GET, DELETE, PUT, POST, common authentication patterns, SSL, cookies and progress info.</target>
        </segment>
      </unit>
      <unit id="282">
        <segment state="initial">
          <source>Cloud backup services.</source>
          <target>Cloud backup services.</target>
        </segment>
      </unit>
      <unit id="283">
        <segment state="initial">
          <source>Platform-provided backup services for app data.</source>
          <target>Platform-provided backup services for app data.</target>
        </segment>
      </unit>
      <unit id="284">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Android's <ph dataRef="id1" id="ph1" />backup manager<ph dataRef="id2" id="ph2" /> handles the backing up of application data in Google's <ph dataRef="id3" id="ph3" />Android Backup Service<ph dataRef="id4" id="ph4" />.</source>
          <target>Android's <ph dataRef="id1" id="ph1" />backup manager<ph dataRef="id2" id="ph2" /> handles the backing up of application data in Google's <ph dataRef="id3" id="ph3" />Android Backup Service<ph dataRef="id4" id="ph4" />.</target>
        </segment>
      </unit>
      <unit id="285">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>iCloud Backup<ph dataRef="id1" id="ph1" /> can be configured by a user to handle their backups, including app data.</source>
          <target>iCloud Backup<ph dataRef="id1" id="ph1" /> can be configured by a user to handle their backups, including app data.</target>
        </segment>
      </unit>
      <unit id="286">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
          <data id="id5">&lt;strong&gt;</data>
          <data id="id6">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Apps which use iCloud compatible <ph dataRef="id1" id="ph1" />Core Data<ph dataRef="id2" id="ph2" />, the <ph dataRef="id3" id="ph3" />iCloud key-value store<ph dataRef="id4" id="ph4" /> and <ph dataRef="id5" id="ph5" />iCloud document storage<ph dataRef="id6" id="ph6" />.</source>
          <target>Apps which use iCloud compatible <ph dataRef="id1" id="ph1" />Core Data<ph dataRef="id2" id="ph2" />, the <ph dataRef="id3" id="ph3" />iCloud key-value store<ph dataRef="id4" id="ph4" /> and <ph dataRef="id5" id="ph5" />iCloud document storage<ph dataRef="id6" id="ph6" />.</target>
        </segment>
      </unit>
      <unit id="287">
        <originalData>
          <data id="id1">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/windows.storage.applicationdata.aspx"&gt;</data>
          <data id="id2">&lt;/a&gt;&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/windows.storage.applicationdata.roamingfolder.aspx"&gt;</data>
          <data id="id4">&lt;/a&gt;&lt;/strong&gt;</data>
          <data id="id5">&lt;a href="https://msdn.microsoft.com/library/windows/apps/windows.storage.applicationdata.roamingsettings.aspx"&gt;&lt;strong&gt;</data>
          <data id="id6">&lt;/strong&gt;&lt;/a&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Any app data that you store using the roaming <ph dataRef="id1" id="ph1" />ApplicationData APIs<ph dataRef="id2" id="ph2" /> (including <ph dataRef="id3" id="ph3" />RoamingFolder<ph dataRef="id4" id="ph4" /> and <ph dataRef="id5" id="ph5" />RoamingSettings<ph dataRef="id6" id="ph6" />) will be automatically synced to the cloud and to the user’s other devices, too.</source>
          <target>Any app data that you store using the roaming <ph dataRef="id1" id="ph1" />ApplicationData APIs<ph dataRef="id2" id="ph2" /> (including <ph dataRef="id3" id="ph3" />RoamingFolder<ph dataRef="id4" id="ph4" /> and <ph dataRef="id5" id="ph5" />RoamingSettings<ph dataRef="id6" id="ph6" />) will be automatically synced to the cloud and to the user’s other devices, too.</target>
        </segment>
      </unit>
      <unit id="288">
        <segment state="initial">
          <source>The syncing is done by way of the user’s Microsoft account.</source>
          <target>The syncing is done by way of the user’s Microsoft account.</target>
        </segment>
      </unit>
      <unit id="289">
        <segment state="initial">
          <source>Guidelines for roaming app data</source>
          <target>Guidelines for roaming app data</target>
        </segment>
      </unit>
      <unit id="290">
        <segment state="initial">
          <source>HTTP file downloads.</source>
          <target>HTTP file downloads.</target>
        </segment>
      </unit>
      <unit id="291">
        <segment state="initial">
          <source>Downloading large and small files over HTTP.</source>
          <target>Downloading large and small files over HTTP.</target>
        </segment>
      </unit>
      <unit id="292">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
          <data id="id2">&lt;strong&gt;</data>
          <data id="id3">&lt;/strong&gt;</data>
          <data id="id4">&lt;strong&gt;</data>
          <data id="id5">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>URLConnection<ph dataRef="id1" id="ph1" /> and <ph dataRef="id2" id="ph2" />HTTPURLConnection<ph dataRef="id3" id="ph3" /> are used to download over HTTP and FTP, it is also possible to make use of the system <ph dataRef="id4" id="ph4" />download manager<ph dataRef="id5" id="ph5" /> to download in the background.</source>
          <target>URLConnection<ph dataRef="id1" id="ph1" /> and <ph dataRef="id2" id="ph2" />HTTPURLConnection<ph dataRef="id3" id="ph3" /> are used to download over HTTP and FTP, it is also possible to make use of the system <ph dataRef="id4" id="ph4" />download manager<ph dataRef="id5" id="ph5" /> to download in the background.</target>
        </segment>
      </unit>
      <unit id="293">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
          <data id="id2">&lt;strong&gt;</data>
          <data id="id3">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>NSURLSession<ph dataRef="id1" id="ph1" /> and <ph dataRef="id2" id="ph2" />NSURLConnection<ph dataRef="id3" id="ph3" /> can be used to download files over HTTP and FTP.</source>
          <target>NSURLSession<ph dataRef="id1" id="ph1" /> and <ph dataRef="id2" id="ph2" />NSURLConnection<ph dataRef="id3" id="ph3" /> can be used to download files over HTTP and FTP.</target>
        </segment>
      </unit>
      <unit id="294">
        <originalData>
          <data id="id1">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/windows.networking.backgroundtransfer.aspx"&gt;</data>
          <data id="id2">&lt;/a&gt;&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>The <ph dataRef="id1" id="ph1" />background transfer API<ph dataRef="id2" id="ph2" /> lets you reliably transfer files over HTTP(S) and FTP, taking into account app suspension, connectivity loss and adjusting based on connectivity and battery life.</source>
          <target>The <ph dataRef="id1" id="ph1" />background transfer API<ph dataRef="id2" id="ph2" /> lets you reliably transfer files over HTTP(S) and FTP, taking into account app suspension, connectivity loss and adjusting based on connectivity and battery life.</target>
        </segment>
      </unit>
      <unit id="295">
        <originalData>
          <data id="id1">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/windows.web.http.httpclient.aspx"&gt;</data>
          <data id="id2">&lt;/a&gt;&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You can also use <ph dataRef="id1" id="ph1" />HttpClient<ph dataRef="id2" id="ph2" /> which is ideal for smaller files.</source>
          <target>You can also use <ph dataRef="id1" id="ph1" />HttpClient<ph dataRef="id2" id="ph2" /> which is ideal for smaller files.</target>
        </segment>
      </unit>
      <unit id="296">
        <segment state="initial">
          <source>Which networking technology?</source>
          <target>Which networking technology?</target>
        </segment>
      </unit>
      <unit id="297">
        <segment state="initial">
          <source>Background transfers</source>
          <target>Background transfers</target>
        </segment>
      </unit>
      <unit id="298">
        <segment state="initial">
          <source>Sockets.</source>
          <target>Sockets.</target>
        </segment>
      </unit>
      <unit id="299">
        <segment state="initial">
          <source>Creating low level UDP datagram and TCP sockets to communicate with other devices using your own protocol.</source>
          <target>Creating low level UDP datagram and TCP sockets to communicate with other devices using your own protocol.</target>
        </segment>
      </unit>
      <unit id="300">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
          <data id="id2">&lt;strong&gt;</data>
          <data id="id3">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Socket<ph dataRef="id1" id="ph1" /> class provides TCP sockets, <ph dataRef="id2" id="ph2" />DatagramSocket<ph dataRef="id3" id="ph3" /> class provides a UDP socket.</source>
          <target>Socket<ph dataRef="id1" id="ph1" /> class provides TCP sockets, <ph dataRef="id2" id="ph2" />DatagramSocket<ph dataRef="id3" id="ph3" /> class provides a UDP socket.</target>
        </segment>
      </unit>
      <unit id="301">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
          <data id="id2">&lt;strong&gt;</data>
          <data id="id3">&lt;/strong&gt;</data>
          <data id="id4">&lt;strong&gt;</data>
          <data id="id5">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>NSStream<ph dataRef="id1" id="ph1" /> and <ph dataRef="id2" id="ph2" />CFStream<ph dataRef="id3" id="ph3" /> provide TCP sockets, <ph dataRef="id4" id="ph4" />CFSocket<ph dataRef="id5" id="ph5" /> provides UDP sockets.</source>
          <target>NSStream<ph dataRef="id1" id="ph1" /> and <ph dataRef="id2" id="ph2" />CFStream<ph dataRef="id3" id="ph3" /> provide TCP sockets, <ph dataRef="id4" id="ph4" />CFSocket<ph dataRef="id5" id="ph5" /> provides UDP sockets.</target>
        </segment>
      </unit>
      <unit id="302">
        <originalData>
          <data id="id1">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/br241319"&gt;</data>
          <data id="id2">&lt;/a&gt;&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/br226882"&gt;</data>
          <data id="id4">&lt;/a&gt;&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You can use the <ph dataRef="id1" id="ph1" />DatagramSocket<ph dataRef="id2" id="ph2" /> class to communicate using a UDP datagram socket and the <ph dataRef="id3" id="ph3" />StreamSocket<ph dataRef="id4" id="ph4" /> class to communicate over TCP or Bluetooth RFCOMM.</source>
          <target>You can use the <ph dataRef="id1" id="ph1" />DatagramSocket<ph dataRef="id2" id="ph2" /> class to communicate using a UDP datagram socket and the <ph dataRef="id3" id="ph3" />StreamSocket<ph dataRef="id4" id="ph4" /> class to communicate over TCP or Bluetooth RFCOMM.</target>
        </segment>
      </unit>
      <unit id="303">
        <segment state="initial">
          <source>Networking basics</source>
          <target>Networking basics</target>
        </segment>
      </unit>
      <unit id="304">
        <segment state="initial">
          <source>Which networking technology?</source>
          <target>Which networking technology?</target>
        </segment>
      </unit>
      <unit id="305">
        <segment state="initial">
          <source>Sockets overview</source>
          <target>Sockets overview</target>
        </segment>
      </unit>
      <unit id="306">
        <segment state="initial">
          <source>WebSockets.</source>
          <target>WebSockets.</target>
        </segment>
      </unit>
      <unit id="307">
        <segment state="initial">
          <source>Provide two-way communication between a client and server, enabling real-time data transfer.</source>
          <target>Provide two-way communication between a client and server, enabling real-time data transfer.</target>
        </segment>
      </unit>
      <unit id="308">
        <segment state="initial">
          <source>No built-in WebSockets libraries exist on Android.</source>
          <target>No built-in WebSockets libraries exist on Android.</target>
        </segment>
      </unit>
      <unit id="309">
        <segment state="initial">
          <source>No built-in WebSockets libraries exist on iOS.</source>
          <target>No built-in WebSockets libraries exist on iOS.</target>
        </segment>
      </unit>
      <unit id="310">
        <originalData>
          <data id="id1">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/windows.networking.sockets.messagewebsocket.aspx"&gt;</data>
          <data id="id2">&lt;/a&gt;&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/windows.networking.sockets.streamwebsocket.aspx"&gt;</data>
          <data id="id4">&lt;/a&gt;&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Secure connections to servers supporting WebSockets can be made with the <ph dataRef="id1" id="ph1" />MessageWebSocket<ph dataRef="id2" id="ph2" /> class for smaller messages with receipt notifications and <ph dataRef="id3" id="ph3" />StreamWebSocket<ph dataRef="id4" id="ph4" /> for larger binary file transfers which can be read in sections.</source>
          <target>Secure connections to servers supporting WebSockets can be made with the <ph dataRef="id1" id="ph1" />MessageWebSocket<ph dataRef="id2" id="ph2" /> class for smaller messages with receipt notifications and <ph dataRef="id3" id="ph3" />StreamWebSocket<ph dataRef="id4" id="ph4" /> for larger binary file transfers which can be read in sections.</target>
        </segment>
      </unit>
      <unit id="311">
        <segment state="initial">
          <source>Networking basics</source>
          <target>Networking basics</target>
        </segment>
      </unit>
      <unit id="312">
        <segment state="initial">
          <source>Which networking technology?</source>
          <target>Which networking technology?</target>
        </segment>
      </unit>
      <unit id="313">
        <segment state="initial">
          <source>WebSockets overview</source>
          <target>WebSockets overview</target>
        </segment>
      </unit>
      <unit id="314">
        <segment state="initial">
          <source>OAuth libraries.</source>
          <target>OAuth libraries.</target>
        </segment>
      </unit>
      <unit id="315">
        <segment state="initial">
          <source>OAuth libraries allowing access to third party OAuth providers, and any account management built into the platform.</source>
          <target>OAuth libraries allowing access to third party OAuth providers, and any account management built into the platform.</target>
        </segment>
      </unit>
      <unit id="316">
        <segment state="initial">
          <source>No generic OAuth library is provided.</source>
          <target>No generic OAuth library is provided.</target>
        </segment>
      </unit>
      <unit id="317">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>The <ph dataRef="id1" id="ph1" />GoogleAuthUtil<ph dataRef="id2" id="ph2" /> class is provided for OAuth authentication with Google Play Services .</source>
          <target>The <ph dataRef="id1" id="ph1" />GoogleAuthUtil<ph dataRef="id2" id="ph2" /> class is provided for OAuth authentication with Google Play Services .</target>
        </segment>
      </unit>
      <unit id="318">
        <segment state="initial">
          <source>No generic OAuth library is provided.</source>
          <target>No generic OAuth library is provided.</target>
        </segment>
      </unit>
      <unit id="319">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>The <ph dataRef="id1" id="ph1" />accounts framework<ph dataRef="id2" id="ph2" /> provides access to user accounts already stored on the device such as Facebook and Twitter.</source>
          <target>The <ph dataRef="id1" id="ph1" />accounts framework<ph dataRef="id2" id="ph2" /> provides access to user accounts already stored on the device such as Facebook and Twitter.</target>
        </segment>
      </unit>
      <unit id="320">
        <originalData>
          <data id="id1">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/mt270196.aspx"&gt;</data>
          <data id="id2">&lt;/a&gt;&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>The generic OAuth library <ph dataRef="id1" id="ph1" />Web authentication broker<ph dataRef="id2" id="ph2" /> lets you connect to third-party identity provider services.</source>
          <target>The generic OAuth library <ph dataRef="id1" id="ph1" />Web authentication broker<ph dataRef="id2" id="ph2" /> lets you connect to third-party identity provider services.</target>
        </segment>
      </unit>
      <unit id="321">
        <originalData>
          <data id="id1">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/mt270189.aspx"&gt;</data>
          <data id="id2">&lt;/a&gt;&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>The <ph dataRef="id1" id="ph1" />Credential locker<ph dataRef="id2" id="ph2" /> allows your users to save their login and use it on multiple devices.</source>
          <target>The <ph dataRef="id1" id="ph1" />Credential locker<ph dataRef="id2" id="ph2" /> allows your users to save their login and use it on multiple devices.</target>
        </segment>
      </unit>
      <unit id="322">
        <originalData>
          <data id="id1">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/dn896755.aspx"&gt;</data>
          <data id="id2">&lt;/a&gt;&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>The <ph dataRef="id1" id="ph1" />Microsoft.Live<ph dataRef="id2" id="ph2" /> namespace lets you easily access Live SDK OAuth for access to Microsoft services.</source>
          <target>The <ph dataRef="id1" id="ph1" />Microsoft.Live<ph dataRef="id2" id="ph2" /> namespace lets you easily access Live SDK OAuth for access to Microsoft services.</target>
        </segment>
      </unit>
      <unit id="323">
        <segment state="initial">
          <source>Authentication and user identity</source>
          <target>Authentication and user identity</target>
        </segment>
      </unit>
      <unit id="324">
        <segment state="initial">
          <source>Windows.Security.Authentication.Web API documentation</source>
          <target>Windows.Security.Authentication.Web API documentation</target>
        </segment>
      </unit>
      <unit id="325">
        <segment state="initial">
          <source>WebAuthenticationBroker code example</source>
          <target>WebAuthenticationBroker code example</target>
        </segment>
      </unit>
      <unit id="326">
        <segment state="initial">
          <source>Tooling</source>
          <target>Tooling</target>
        </segment>
      </unit>
      <unit id="327">
        <segment state="initial">
          <source>General concept</source>
          <target>General concept</target>
        </segment>
      </unit>
      <unit id="328">
        <segment state="initial">
          <source>Android</source>
          <target>Android</target>
        </segment>
      </unit>
      <unit id="329">
        <segment state="initial">
          <source>iOS</source>
          <target>iOS</target>
        </segment>
      </unit>
      <unit id="330">
        <segment state="initial">
          <source>Windows 10 UWP</source>
          <target>Windows 10 UWP</target>
        </segment>
      </unit>
      <unit id="331">
        <segment state="initial">
          <source>IDE.</source>
          <target>IDE.</target>
        </segment>
      </unit>
      <unit id="332">
        <segment state="initial">
          <source>The toolset used to create your app.</source>
          <target>The toolset used to create your app.</target>
        </segment>
      </unit>
      <unit id="333">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
          <data id="id2">&lt;strong&gt;</data>
          <data id="id3">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Android Studio<ph dataRef="id1" id="ph1" /> and <ph dataRef="id2" id="ph2" />Eclipse<ph dataRef="id3" id="ph3" />, with Google pushing developers toward the use of Android Studio.</source>
          <target>Android Studio<ph dataRef="id1" id="ph1" /> and <ph dataRef="id2" id="ph2" />Eclipse<ph dataRef="id3" id="ph3" />, with Google pushing developers toward the use of Android Studio.</target>
        </segment>
      </unit>
      <unit id="334">
        <segment state="initial">
          <source>Xcode</source>
          <target>Xcode</target>
        </segment>
      </unit>
      <unit id="335">
        <originalData>
          <data id="id1">&lt;/a&gt;&lt;/strong&gt;</data>
          <data id="id2">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/jj171012.aspx"&gt;</data>
          <data id="id3">&lt;/a&gt;&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Visual Studio<ph dataRef="id1" id="ph1" /> and <ph dataRef="id2" id="ph2" />Blend for Visual Studio<ph dataRef="id3" id="ph3" /> has all the tools you need to code, design, connect, debug, analyze, optimize and test UWP apps.</source>
          <target>Visual Studio<ph dataRef="id1" id="ph1" /> and <ph dataRef="id2" id="ph2" />Blend for Visual Studio<ph dataRef="id3" id="ph3" /> has all the tools you need to code, design, connect, debug, analyze, optimize and test UWP apps.</target>
        </segment>
      </unit>
      <unit id="336">
        <originalData>
          <data id="id1">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/mt188754.aspx"&gt;</data>
          <data id="id2">&lt;/a&gt;&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Visual Studio also provides you with <ph dataRef="id1" id="ph1" />emulators<ph dataRef="id2" id="ph2" /> for Windows 10 devices, so you can test your app across a range of emulated devices.</source>
          <target>Visual Studio also provides you with <ph dataRef="id1" id="ph1" />emulators<ph dataRef="id2" id="ph2" /> for Windows 10 devices, so you can test your app across a range of emulated devices.</target>
        </segment>
      </unit>
      <unit id="337">
        <segment state="initial">
          <source>Downloads and tools for UWP</source>
          <target>Downloads and tools for UWP</target>
        </segment>
      </unit>
      <unit id="338">
        <segment state="initial">
          <source>Code organization.</source>
          <target>Code organization.</target>
        </segment>
      </unit>
      <unit id="339">
        <segment state="initial">
          <source>The basic folder structure of an app, often created from an initial template.</source>
          <target>The basic folder structure of an app, often created from an initial template.</target>
        </segment>
      </unit>
      <unit id="340">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
          <data id="id2">&lt;strong&gt;</data>
          <data id="id3">&lt;/strong&gt;</data>
          <data id="id4">&lt;strong&gt;</data>
          <data id="id5">&lt;/strong&gt;</data>
          <data id="id6">&lt;strong&gt;</data>
          <data id="id7">&lt;/strong&gt;</data>
          <data id="id8">&lt;strong&gt;</data>
          <data id="id9">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>AndroidManifest<ph dataRef="id1" id="ph1" /> file, <ph dataRef="id2" id="ph2" />java<ph dataRef="id3" id="ph3" /> folder containing source files, <ph dataRef="id4" id="ph4" />res<ph dataRef="id5" id="ph5" /> folder with resources including layouts and values, <ph dataRef="id6" id="ph6" />Gradle<ph dataRef="id7" id="ph7" /> build scripts in Android Studio and <ph dataRef="id8" id="ph8" />Ant<ph dataRef="id9" id="ph9" /> build scripts in Eclipse.</source>
          <target>AndroidManifest<ph dataRef="id1" id="ph1" /> file, <ph dataRef="id2" id="ph2" />java<ph dataRef="id3" id="ph3" /> folder containing source files, <ph dataRef="id4" id="ph4" />res<ph dataRef="id5" id="ph5" /> folder with resources including layouts and values, <ph dataRef="id6" id="ph6" />Gradle<ph dataRef="id7" id="ph7" /> build scripts in Android Studio and <ph dataRef="id8" id="ph8" />Ant<ph dataRef="id9" id="ph9" /> build scripts in Eclipse.</target>
        </segment>
      </unit>
      <unit id="341">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
          <data id="id5">&lt;strong&gt;</data>
          <data id="id6">&lt;/strong&gt;</data>
          <data id="id7">&lt;strong&gt;</data>
          <data id="id8">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Source files and <ph dataRef="id1" id="ph1" />Supporting Files<ph dataRef="id2" id="ph2" />, <ph dataRef="id3" id="ph3" />Info.plist<ph dataRef="id4" id="ph4" /> file, <ph dataRef="id5" id="ph5" />Main.storyboard<ph dataRef="id6" id="ph6" /> and <ph dataRef="id7" id="ph7" />LaunchScreen.storyboard<ph dataRef="id8" id="ph8" />.</source>
          <target>Source files and <ph dataRef="id1" id="ph1" />Supporting Files<ph dataRef="id2" id="ph2" />, <ph dataRef="id3" id="ph3" />Info.plist<ph dataRef="id4" id="ph4" /> file, <ph dataRef="id5" id="ph5" />Main.storyboard<ph dataRef="id6" id="ph6" /> and <ph dataRef="id7" id="ph7" />LaunchScreen.storyboard<ph dataRef="id8" id="ph8" />.</target>
        </segment>
      </unit>
      <unit id="342">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Images are stored in <ph dataRef="id1" id="ph1" />Asset libraries<ph dataRef="id2" id="ph2" />.</source>
          <target>Images are stored in <ph dataRef="id1" id="ph1" />Asset libraries<ph dataRef="id2" id="ph2" />.</target>
        </segment>
      </unit>
      <unit id="343">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
          <data id="id5">&lt;strong&gt;</data>
          <data id="id6">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Your UWP app contains XAML and code files for your app named Example.xaml and Example.xaml.cs, various images in the <ph dataRef="id1" id="ph1" />Assets folder<ph dataRef="id2" id="ph2" />, a start page such as <ph dataRef="id3" id="ph3" />MainPage.xaml<ph dataRef="id4" id="ph4" /> and <ph dataRef="id5" id="ph5" />MainPage.xaml.cs<ph dataRef="id6" id="ph6" /> and a manifest.</source>
          <target>Your UWP app contains XAML and code files for your app named Example.xaml and Example.xaml.cs, various images in the <ph dataRef="id1" id="ph1" />Assets folder<ph dataRef="id2" id="ph2" />, a start page such as <ph dataRef="id3" id="ph3" />MainPage.xaml<ph dataRef="id4" id="ph4" /> and <ph dataRef="id5" id="ph5" />MainPage.xaml.cs<ph dataRef="id6" id="ph6" /> and a manifest.</target>
        </segment>
      </unit>
      <unit id="344">
        <segment state="initial">
          <source>Create a hello world app</source>
          <target>Create a hello world app</target>
        </segment>
      </unit>
      <unit id="345">
        <segment state="initial">
          <source>App lifecycle</source>
          <target>App lifecycle</target>
        </segment>
      </unit>
      <unit id="346">
        <segment state="initial">
          <source>General concept</source>
          <target>General concept</target>
        </segment>
      </unit>
      <unit id="347">
        <segment state="initial">
          <source>Android</source>
          <target>Android</target>
        </segment>
      </unit>
      <unit id="348">
        <segment state="initial">
          <source>iOS</source>
          <target>iOS</target>
        </segment>
      </unit>
      <unit id="349">
        <segment state="initial">
          <source>Windows 10 UWP</source>
          <target>Windows 10 UWP</target>
        </segment>
      </unit>
      <unit id="350">
        <segment state="initial">
          <source>App lifecycle.</source>
          <target>App lifecycle.</target>
        </segment>
      </unit>
      <unit id="351">
        <segment state="initial">
          <source>Handling events on app launch, suspension, resume and close, providing an opportunity to save/restore application state and run other tasks.</source>
          <target>Handling events on app launch, suspension, resume and close, providing an opportunity to save/restore application state and run other tasks.</target>
        </segment>
      </unit>
      <unit id="352">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Each activity has its own <ph dataRef="id1" id="ph1" />activity lifecycle<ph dataRef="id2" id="ph2" /> with states such as <ph dataRef="id3" id="ph3" />resumed<ph dataRef="id4" id="ph4" />.</source>
          <target>Each activity has its own <ph dataRef="id1" id="ph1" />activity lifecycle<ph dataRef="id2" id="ph2" /> with states such as <ph dataRef="id3" id="ph3" />resumed<ph dataRef="id4" id="ph4" />.</target>
        </segment>
      </unit>
      <unit id="353">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
          <data id="id2">&lt;strong&gt;</data>
          <data id="id3">&lt;/strong&gt;</data>
          <data id="id4">&lt;strong&gt;</data>
          <data id="id5">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Lifecycle callbacks<ph dataRef="id1" id="ph1" /> such as <ph dataRef="id2" id="ph2" />onResume<ph dataRef="id3" id="ph3" /> are implemented in in your <ph dataRef="id4" id="ph4" />activity classes<ph dataRef="id5" id="ph5" />.</source>
          <target>Lifecycle callbacks<ph dataRef="id1" id="ph1" /> such as <ph dataRef="id2" id="ph2" />onResume<ph dataRef="id3" id="ph3" /> are implemented in in your <ph dataRef="id4" id="ph4" />activity classes<ph dataRef="id5" id="ph5" />.</target>
        </segment>
      </unit>
      <unit id="354">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>The <ph dataRef="id1" id="ph1" />application lifecycle<ph dataRef="id2" id="ph2" /> has states such as <ph dataRef="id3" id="ph3" />suspended<ph dataRef="id4" id="ph4" />.</source>
          <target>The <ph dataRef="id1" id="ph1" />application lifecycle<ph dataRef="id2" id="ph2" /> has states such as <ph dataRef="id3" id="ph3" />suspended<ph dataRef="id4" id="ph4" />.</target>
        </segment>
      </unit>
      <unit id="355">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Methods such as <ph dataRef="id1" id="ph1" />applicationDidEnterBackground:<ph dataRef="id2" id="ph2" /> are implemented in the <ph dataRef="id3" id="ph3" />application delegate object<ph dataRef="id4" id="ph4" /> to run code on state changes.</source>
          <target>Methods such as <ph dataRef="id1" id="ph1" />applicationDidEnterBackground:<ph dataRef="id2" id="ph2" /> are implemented in the <ph dataRef="id3" id="ph3" />application delegate object<ph dataRef="id4" id="ph4" /> to run code on state changes.</target>
        </segment>
      </unit>
      <unit id="356">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Your application has the <ph dataRef="id1" id="ph1" />app execution states<ph dataRef="id2" id="ph2" /> NotRunning, Activated, Running, Suspending, Suspended and Resuming.</source>
          <target>Your application has the <ph dataRef="id1" id="ph1" />app execution states<ph dataRef="id2" id="ph2" /> NotRunning, Activated, Running, Suspending, Suspended and Resuming.</target>
        </segment>
      </unit>
      <unit id="357">
        <originalData>
          <data id="id1">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.application.aspx"&gt;</data>
          <data id="id2">&lt;/a&gt;&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You can implement the <ph dataRef="id1" id="ph1" />Application class<ph dataRef="id2" id="ph2" /> methods OnLaunched, OnActivated, Suspending or Resuming in your app to run code when the state changes.</source>
          <target>You can implement the <ph dataRef="id1" id="ph1" />Application class<ph dataRef="id2" id="ph2" /> methods OnLaunched, OnActivated, Suspending or Resuming in your app to run code when the state changes.</target>
        </segment>
      </unit>
      <unit id="358">
        <segment state="initial">
          <source>App lifecycle</source>
          <target>App lifecycle</target>
        </segment>
      </unit>
      <unit id="359">
        <segment state="initial">
          <source>Background tasks.</source>
          <target>Background tasks.</target>
        </segment>
      </unit>
      <unit id="360">
        <segment state="initial">
          <source>Tasks that perform background operations and continue to run when the app is no longer in the foreground.</source>
          <target>Tasks that perform background operations and continue to run when the app is no longer in the foreground.</target>
        </segment>
      </unit>
      <unit id="361">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Apps can launch <ph dataRef="id1" id="ph1" />services<ph dataRef="id2" id="ph2" /> which perform background operations when the app is no longer in the foreground.</source>
          <target>Apps can launch <ph dataRef="id1" id="ph1" />services<ph dataRef="id2" id="ph2" /> which perform background operations when the app is no longer in the foreground.</target>
        </segment>
      </unit>
      <unit id="362">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Services have their own <ph dataRef="id1" id="ph1" />lifecycle<ph dataRef="id2" id="ph2" /> and are registered in the manifest.</source>
          <target>Services have their own <ph dataRef="id1" id="ph1" />lifecycle<ph dataRef="id2" id="ph2" /> and are registered in the manifest.</target>
        </segment>
      </unit>
      <unit id="363">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Background execution<ph dataRef="id1" id="ph1" /> is only permitted for specific task types.</source>
          <target>Background execution<ph dataRef="id1" id="ph1" /> is only permitted for specific task types.</target>
        </segment>
      </unit>
      <unit id="364">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Apps declare <ph dataRef="id1" id="ph1" />supported background tasks<ph dataRef="id2" id="ph2" /> in the Info.plist file using the <ph dataRef="id3" id="ph3" />UIBackgroundModes<ph dataRef="id4" id="ph4" />.</source>
          <target>Apps declare <ph dataRef="id1" id="ph1" />supported background tasks<ph dataRef="id2" id="ph2" /> in the Info.plist file using the <ph dataRef="id3" id="ph3" />UIBackgroundModes<ph dataRef="id4" id="ph4" />.</target>
        </segment>
      </unit>
      <unit id="365">
        <segment state="initial">
          <source>The system controls when background tasks are run and for how long.</source>
          <target>The system controls when background tasks are run and for how long.</target>
        </segment>
      </unit>
      <unit id="366">
        <originalData>
          <data id="id1">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/windows.applicationmodel.background.ibackgroundtask.aspx"&gt;</data>
          <data id="id2">&lt;/a&gt;&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You can create a background task by implementing the <ph dataRef="id1" id="ph1" />IBackgroundTask<ph dataRef="id2" id="ph2" /> interface and registering the task in the application manifest.</source>
          <target>You can create a background task by implementing the <ph dataRef="id1" id="ph1" />IBackgroundTask<ph dataRef="id2" id="ph2" /> interface and registering the task in the application manifest.</target>
        </segment>
      </unit>
      <unit id="367">
        <originalData>
          <data id="id1">&lt;a href="https://msdn.microsoft.com/library/windows/apps/mt186458.aspx"&gt;&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;&lt;/a&gt;</data>
          <data id="id3">&lt;a href="https://msdn.microsoft.com/library/windows/apps/windows.applicationmodel.background.systemtriggertype.aspx"&gt;&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;&lt;/a&gt;</data>
          <data id="id5">&lt;a href="https://msdn.microsoft.com/library/windows/apps/mt185632.aspx"&gt;&lt;strong&gt;</data>
          <data id="id6">&lt;/strong&gt;&lt;/a&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You can set a task to be triggered with a <ph dataRef="id1" id="ph1" />timer<ph dataRef="id2" id="ph2" />, <ph dataRef="id3" id="ph3" />system trigger<ph dataRef="id4" id="ph4" />, and <ph dataRef="id5" id="ph5" />maintenance trigger<ph dataRef="id6" id="ph6" />.</source>
          <target>You can set a task to be triggered with a <ph dataRef="id1" id="ph1" />timer<ph dataRef="id2" id="ph2" />, <ph dataRef="id3" id="ph3" />system trigger<ph dataRef="id4" id="ph4" />, and <ph dataRef="id5" id="ph5" />maintenance trigger<ph dataRef="id6" id="ph6" />.</target>
        </segment>
      </unit>
      <unit id="368">
        <segment state="initial">
          <source>Support your app with background tasks</source>
          <target>Support your app with background tasks</target>
        </segment>
      </unit>
      <unit id="369">
        <segment state="initial">
          <source>Create and register a background task</source>
          <target>Create and register a background task</target>
        </segment>
      </unit>
      <unit id="370">
        <segment state="initial">
          <source>Guidelines for background tasks</source>
          <target>Guidelines for background tasks</target>
        </segment>
      </unit>
      <unit id="371">
        <segment state="initial">
          <source>Performance</source>
          <target>Performance</target>
        </segment>
      </unit>
      <unit id="372">
        <segment state="initial">
          <source>General concept</source>
          <target>General concept</target>
        </segment>
      </unit>
      <unit id="373">
        <segment state="initial">
          <source>Android</source>
          <target>Android</target>
        </segment>
      </unit>
      <unit id="374">
        <segment state="initial">
          <source>iOS</source>
          <target>iOS</target>
        </segment>
      </unit>
      <unit id="375">
        <segment state="initial">
          <source>Windows 10 UWP</source>
          <target>Windows 10 UWP</target>
        </segment>
      </unit>
      <unit id="376">
        <segment state="initial">
          <source>Performance best practices.</source>
          <target>Performance best practices.</target>
        </segment>
      </unit>
      <unit id="377">
        <segment state="initial">
          <source>Guidelines for building apps that are fast, responsive, considerate of battery life with a fast startup time.</source>
          <target>Guidelines for building apps that are fast, responsive, considerate of battery life with a fast startup time.</target>
        </segment>
      </unit>
      <unit id="378">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Android provides the <ph dataRef="id1" id="ph1" />Best Practices for Performance<ph dataRef="id2" id="ph2" /> training guide.</source>
          <target>Android provides the <ph dataRef="id1" id="ph1" />Best Practices for Performance<ph dataRef="id2" id="ph2" /> training guide.</target>
        </segment>
      </unit>
      <unit id="379">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>iOS provides the <ph dataRef="id1" id="ph1" />Performance Overview<ph dataRef="id2" id="ph2" /> document.</source>
          <target>iOS provides the <ph dataRef="id1" id="ph1" />Performance Overview<ph dataRef="id2" id="ph2" /> document.</target>
        </segment>
      </unit>
      <unit id="380">
        <originalData>
          <data id="id1">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/mt270266.aspx"&gt;</data>
          <data id="id2">&lt;/a&gt;&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You can read the detailed <ph dataRef="id1" id="ph1" />Performance guide<ph dataRef="id2" id="ph2" /> with sections covering topics such as; setting performance goals, measuring performance, memory management, smooth animations, efficient file system access and the tools available for profiling and performance.</source>
          <target>You can read the detailed <ph dataRef="id1" id="ph1" />Performance guide<ph dataRef="id2" id="ph2" /> with sections covering topics such as; setting performance goals, measuring performance, memory management, smooth animations, efficient file system access and the tools available for profiling and performance.</target>
        </segment>
      </unit>
      <unit id="381">
        <segment state="initial">
          <source>View optimization for a responsive UI.</source>
          <target>View optimization for a responsive UI.</target>
        </segment>
      </unit>
      <unit id="382">
        <segment state="initial">
          <source>Improving performance by optimizing views.</source>
          <target>Improving performance by optimizing views.</target>
        </segment>
      </unit>
      <unit id="383">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
          <data id="id5">&lt;strong&gt;</data>
          <data id="id6">&lt;/strong&gt;</data>
          <data id="id7">&amp;quot;</data>
          <data id="id8">&amp;quot;</data>
          <data id="id9">&lt;strong&gt;</data>
          <data id="id10">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Optimizing <ph dataRef="id1" id="ph1" />layout hierarchies<ph dataRef="id2" id="ph2" /> using the Hierarchy Viewer tool, <ph dataRef="id3" id="ph3" />reusing layouts<ph dataRef="id4" id="ph4" /> and loading <ph dataRef="id5" id="ph5" />views on demand<ph dataRef="id6" id="ph6" /> are all techniques to help keep the UI thread responsive and avoid <ph dataRef="id7" id="ph7" />Application Not Responding<ph dataRef="id8" id="ph8" /> dialogs (<ph dataRef="id9" id="ph9" />ANR's<ph dataRef="id10" id="ph10" />).</source>
          <target>Optimizing <ph dataRef="id1" id="ph1" />layout hierarchies<ph dataRef="id2" id="ph2" /> using the Hierarchy Viewer tool, <ph dataRef="id3" id="ph3" />reusing layouts<ph dataRef="id4" id="ph4" /> and loading <ph dataRef="id5" id="ph5" />views on demand<ph dataRef="id6" id="ph6" /> are all techniques to help keep the UI thread responsive and avoid <ph dataRef="id7" id="ph7" />Application Not Responding<ph dataRef="id8" id="ph8" /> dialogs (<ph dataRef="id9" id="ph9" />ANR's<ph dataRef="id10" id="ph10" />).</target>
        </segment>
      </unit>
      <unit id="384">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
          <data id="id5">&lt;strong&gt;</data>
          <data id="id6">&lt;/strong&gt;</data>
          <data id="id7">&lt;strong&gt;</data>
          <data id="id8">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Fixing UI issues with <ph dataRef="id1" id="ph1" />offscreen rendering<ph dataRef="id2" id="ph2" />, <ph dataRef="id3" id="ph3" />blended layers<ph dataRef="id4" id="ph4" />, <ph dataRef="id5" id="ph5" />rasterization<ph dataRef="id6" id="ph6" /> using the <ph dataRef="id7" id="ph7" />Core Animation<ph dataRef="id8" id="ph8" /> tool help keep the UI thread responsive.</source>
          <target>Fixing UI issues with <ph dataRef="id1" id="ph1" />offscreen rendering<ph dataRef="id2" id="ph2" />, <ph dataRef="id3" id="ph3" />blended layers<ph dataRef="id4" id="ph4" />, <ph dataRef="id5" id="ph5" />rasterization<ph dataRef="id6" id="ph6" /> using the <ph dataRef="id7" id="ph7" />Core Animation<ph dataRef="id8" id="ph8" /> tool help keep the UI thread responsive.</target>
        </segment>
      </unit>
      <unit id="385">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
          <data id="id5">&lt;strong&gt;</data>
          <data id="id6">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You can easily <ph dataRef="id1" id="ph1" />optimize<ph dataRef="id2" id="ph2" /> XAML <ph dataRef="id3" id="ph3" />markup<ph dataRef="id4" id="ph4" /> and <ph dataRef="id5" id="ph5" />layouts<ph dataRef="id6" id="ph6" /> by following a few simple steps.</source>
          <target>You can easily <ph dataRef="id1" id="ph1" />optimize<ph dataRef="id2" id="ph2" /> XAML <ph dataRef="id3" id="ph3" />markup<ph dataRef="id4" id="ph4" /> and <ph dataRef="id5" id="ph5" />layouts<ph dataRef="id6" id="ph6" /> by following a few simple steps.</target>
        </segment>
      </unit>
      <unit id="386">
        <segment state="initial">
          <source>Techniques include reducing layout structure, minimizing the element count and minimizing overdrawing.</source>
          <target>Techniques include reducing layout structure, minimizing the element count and minimizing overdrawing.</target>
        </segment>
      </unit>
      <unit id="387">
        <segment state="initial">
          <source>Keep the UI thread responsive</source>
          <target>Keep the UI thread responsive</target>
        </segment>
      </unit>
      <unit id="388">
        <segment state="initial">
          <source>Optimize your XAML markup</source>
          <target>Optimize your XAML markup</target>
        </segment>
      </unit>
      <unit id="389">
        <segment state="initial">
          <source>Optimize your XAML layout</source>
          <target>Optimize your XAML layout</target>
        </segment>
      </unit>
      <unit id="390">
        <segment state="initial">
          <source>Threading.</source>
          <target>Threading.</target>
        </segment>
      </unit>
      <unit id="391">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Use of threading to maintain a <ph dataRef="id1" id="ph1" />responsive UI<ph dataRef="id2" id="ph2" /> and run multiple <ph dataRef="id3" id="ph3" />tasks in parallel<ph dataRef="id4" id="ph4" />.</source>
          <target>Use of threading to maintain a <ph dataRef="id1" id="ph1" />responsive UI<ph dataRef="id2" id="ph2" /> and run multiple <ph dataRef="id3" id="ph3" />tasks in parallel<ph dataRef="id4" id="ph4" />.</target>
        </segment>
      </unit>
      <unit id="392">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
          <data id="id5">&lt;strong&gt;</data>
          <data id="id6">&lt;/strong&gt;</data>
          <data id="id7">&lt;strong&gt;</data>
          <data id="id8">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Threading is achieved using the classes <ph dataRef="id1" id="ph1" />Runnable<ph dataRef="id2" id="ph2" />, <ph dataRef="id3" id="ph3" />Handler<ph dataRef="id4" id="ph4" />, <ph dataRef="id5" id="ph5" />ThreadPoolExecutor<ph dataRef="id6" id="ph6" />, and the higher level <ph dataRef="id7" id="ph7" />AsyncTask<ph dataRef="id8" id="ph8" />.</source>
          <target>Threading is achieved using the classes <ph dataRef="id1" id="ph1" />Runnable<ph dataRef="id2" id="ph2" />, <ph dataRef="id3" id="ph3" />Handler<ph dataRef="id4" id="ph4" />, <ph dataRef="id5" id="ph5" />ThreadPoolExecutor<ph dataRef="id6" id="ph6" />, and the higher level <ph dataRef="id7" id="ph7" />AsyncTask<ph dataRef="id8" id="ph8" />.</target>
        </segment>
      </unit>
      <unit id="393">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
          <data id="id5">&lt;strong&gt;</data>
          <data id="id6">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Threading is achieved using <ph dataRef="id1" id="ph1" />NSThread<ph dataRef="id2" id="ph2" />, <ph dataRef="id3" id="ph3" />Grand Central Dispatch<ph dataRef="id4" id="ph4" />, and the higher level <ph dataRef="id5" id="ph5" />NSOperation<ph dataRef="id6" id="ph6" />.</source>
          <target>Threading is achieved using <ph dataRef="id1" id="ph1" />NSThread<ph dataRef="id2" id="ph2" />, <ph dataRef="id3" id="ph3" />Grand Central Dispatch<ph dataRef="id4" id="ph4" />, and the higher level <ph dataRef="id5" id="ph5" />NSOperation<ph dataRef="id6" id="ph6" />.</target>
        </segment>
      </unit>
      <unit id="394">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
          <data id="id5">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/windows.system.threading.threadpool.runasync.aspx"&gt;</data>
          <data id="id6">&lt;/a&gt;&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You can work with threads by submitting <ph dataRef="id1" id="ph1" />work items<ph dataRef="id2" id="ph2" /> to the <ph dataRef="id3" id="ph3" />threadpool<ph dataRef="id4" id="ph4" /> with <ph dataRef="id5" id="ph5" />RunAsync<ph dataRef="id6" id="ph6" />.</source>
          <target>You can work with threads by submitting <ph dataRef="id1" id="ph1" />work items<ph dataRef="id2" id="ph2" /> to the <ph dataRef="id3" id="ph3" />threadpool<ph dataRef="id4" id="ph4" /> with <ph dataRef="id5" id="ph5" />RunAsync<ph dataRef="id6" id="ph6" />.</target>
        </segment>
      </unit>
      <unit id="395">
        <originalData>
          <data id="id1">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/br230590.aspx"&gt;</data>
          <data id="id2">&lt;/a&gt;&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/br230589.aspx"&gt;</data>
          <data id="id4">&lt;/a&gt;&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You can use a timer to submit a work item with <ph dataRef="id1" id="ph1" />CreateTimer<ph dataRef="id2" id="ph2" /> and create a repeating work item with <ph dataRef="id3" id="ph3" />CreatePeriodicTimer<ph dataRef="id4" id="ph4" />.</source>
          <target>You can use a timer to submit a work item with <ph dataRef="id1" id="ph1" />CreateTimer<ph dataRef="id2" id="ph2" /> and create a repeating work item with <ph dataRef="id3" id="ph3" />CreatePeriodicTimer<ph dataRef="id4" id="ph4" />.</target>
        </segment>
      </unit>
      <unit id="396">
        <segment state="initial">
          <source>Submit a work item to the thread pool</source>
          <target>Submit a work item to the thread pool</target>
        </segment>
      </unit>
      <unit id="397">
        <segment state="initial">
          <source>Use a timer to submit a work item</source>
          <target>Use a timer to submit a work item</target>
        </segment>
      </unit>
      <unit id="398">
        <segment state="initial">
          <source>Create a periodic work item</source>
          <target>Create a periodic work item</target>
        </segment>
      </unit>
      <unit id="399">
        <segment state="initial">
          <source>Best practices for using the thread pool</source>
          <target>Best practices for using the thread pool</target>
        </segment>
      </unit>
      <unit id="400">
        <segment state="initial">
          <source>Asynchronous programming.</source>
          <target>Asynchronous programming.</target>
        </segment>
      </unit>
      <unit id="401">
        <segment state="initial">
          <source>Avoid threading complexity by taking advantage of asynchronous programming patterns to keep the UI thread responsive.</source>
          <target>Avoid threading complexity by taking advantage of asynchronous programming patterns to keep the UI thread responsive.</target>
        </segment>
      </unit>
      <unit id="402">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>The use of <ph dataRef="id1" id="ph1" />threading is required<ph dataRef="id2" id="ph2" /> to create your own asynchronous classes.</source>
          <target>The use of <ph dataRef="id1" id="ph1" />threading is required<ph dataRef="id2" id="ph2" /> to create your own asynchronous classes.</target>
        </segment>
      </unit>
      <unit id="403">
        <segment state="initial">
          <source>Some built-in classes are asynchronous.</source>
          <target>Some built-in classes are asynchronous.</target>
        </segment>
      </unit>
      <unit id="404">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>The use of <ph dataRef="id1" id="ph1" />threading is required<ph dataRef="id2" id="ph2" /> is required to create your own asynchronous classes.</source>
          <target>The use of <ph dataRef="id1" id="ph1" />threading is required<ph dataRef="id2" id="ph2" /> is required to create your own asynchronous classes.</target>
        </segment>
      </unit>
      <unit id="405">
        <segment state="initial">
          <source>Some built-in classes are asynchronous.</source>
          <target>Some built-in classes are asynchronous.</target>
        </segment>
      </unit>
      <unit id="406">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You can use asynchronous patterns to avoid blocking the main thread when you create your own APIs, e.g. using <ph dataRef="id1" id="ph1" />async<ph dataRef="id2" id="ph2" /> and <ph dataRef="id3" id="ph3" />await<ph dataRef="id4" id="ph4" /> in C# and Visual Basic.</source>
          <target>You can use asynchronous patterns to avoid blocking the main thread when you create your own APIs, e.g. using <ph dataRef="id1" id="ph1" />async<ph dataRef="id2" id="ph2" /> and <ph dataRef="id3" id="ph3" />await<ph dataRef="id4" id="ph4" /> in C# and Visual Basic.</target>
        </segment>
      </unit>
      <unit id="407">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You can use the asynchronous built-in APIs which end in the word <ph dataRef="id1" id="ph1" />Async<ph dataRef="id2" id="ph2" />.</source>
          <target>You can use the asynchronous built-in APIs which end in the word <ph dataRef="id1" id="ph1" />Async<ph dataRef="id2" id="ph2" />.</target>
        </segment>
      </unit>
      <unit id="408">
        <segment state="initial">
          <source>Asynchronous programming</source>
          <target>Asynchronous programming</target>
        </segment>
      </unit>
      <unit id="409">
        <segment state="initial">
          <source>Call asynchronous APIs in C# or Visual Basic</source>
          <target>Call asynchronous APIs in C# or Visual Basic</target>
        </segment>
      </unit>
      <unit id="410">
        <segment state="initial">
          <source>List view optimization.</source>
          <target>List view optimization.</target>
        </segment>
      </unit>
      <unit id="411">
        <segment state="initial">
          <source>Built-in patterns to aid with optimizing lists of data, which often have poor performance when large amounts of data need to be shown</source>
          <target>Built-in patterns to aid with optimizing lists of data, which often have poor performance when large amounts of data need to be shown</target>
        </segment>
      </unit>
      <unit id="412">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>The <ph dataRef="id1" id="ph1" />ViewHolder<ph dataRef="id2" id="ph2" /> design pattern is used to avoid multiple view lookups, which allows you to use reusable UI elements.</source>
          <target>The <ph dataRef="id1" id="ph1" />ViewHolder<ph dataRef="id2" id="ph2" /> design pattern is used to avoid multiple view lookups, which allows you to use reusable UI elements.</target>
        </segment>
      </unit>
      <unit id="413">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>A range of optimizations can be made to improve the performance of <ph dataRef="id1" id="ph1" />UITableView<ph dataRef="id2" id="ph2" />, nothing is built-in.</source>
          <target>A range of optimizations can be made to improve the performance of <ph dataRef="id1" id="ph1" />UITableView<ph dataRef="id2" id="ph2" />, nothing is built-in.</target>
        </segment>
      </unit>
      <unit id="414">
        <originalData>
          <data id="id1">&lt;a href="https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.listview.aspx"&gt;</data>
          <data id="id2">&lt;/a&gt;</data>
          <data id="id3">&lt;a href="https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.gridview.aspx"&gt;</data>
          <data id="id4">&lt;/a&gt;</data>
          <data id="id5">&lt;strong&gt;</data>
          <data id="id6">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You can use the <ph dataRef="id1" id="ph1" />ListView<ph dataRef="id2" id="ph2" /> and <ph dataRef="id3" id="ph3" />GridView<ph dataRef="id4" id="ph4" /> controls which provide <ph dataRef="id5" id="ph5" />UI virtualization<ph dataRef="id6" id="ph6" /> out-of-box, providing a smooth panning and scrolling experience and a faster startup time.</source>
          <target>You can use the <ph dataRef="id1" id="ph1" />ListView<ph dataRef="id2" id="ph2" /> and <ph dataRef="id3" id="ph3" />GridView<ph dataRef="id4" id="ph4" /> controls which provide <ph dataRef="id5" id="ph5" />UI virtualization<ph dataRef="id6" id="ph6" /> out-of-box, providing a smooth panning and scrolling experience and a faster startup time.</target>
        </segment>
      </unit>
      <unit id="415">
        <originalData>
          <data id="id1">&lt;a href="https://msdn.microsoft.com/library/windows/apps/system.collections.ilist.aspx"&gt;</data>
          <data id="id2">&lt;/a&gt;</data>
          <data id="id3">&lt;a href="https://msdn.microsoft.com/library/windows/apps/system.collections.specialized.inotifycollectionchanged.aspx"&gt;</data>
          <data id="id4">&lt;/a&gt;</data>
          <data id="id5">&lt;strong&gt;</data>
          <data id="id6">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You can also implement <ph dataRef="id1" id="ph1" />IList<ph dataRef="id2" id="ph2" /> and <ph dataRef="id3" id="ph3" />INotifyCollectionChanged<ph dataRef="id4" id="ph4" /> in your data source, providing <ph dataRef="id5" id="ph5" />data virtualization<ph dataRef="id6" id="ph6" /> and further improving performance.</source>
          <target>You can also implement <ph dataRef="id1" id="ph1" />IList<ph dataRef="id2" id="ph2" /> and <ph dataRef="id3" id="ph3" />INotifyCollectionChanged<ph dataRef="id4" id="ph4" /> in your data source, providing <ph dataRef="id5" id="ph5" />data virtualization<ph dataRef="id6" id="ph6" /> and further improving performance.</target>
        </segment>
      </unit>
      <unit id="416">
        <segment state="initial">
          <source>ListView and GridView UI optimization</source>
          <target>ListView and GridView UI optimization</target>
        </segment>
      </unit>
      <unit id="417">
        <segment state="initial">
          <source>ListView and GridView data virtualization</source>
          <target>ListView and GridView data virtualization</target>
        </segment>
      </unit>
      <unit id="418">
        <segment state="initial">
          <source>Monetization</source>
          <target>Monetization</target>
        </segment>
      </unit>
      <unit id="419">
        <segment state="initial">
          <source>General concept</source>
          <target>General concept</target>
        </segment>
      </unit>
      <unit id="420">
        <segment state="initial">
          <source>Android</source>
          <target>Android</target>
        </segment>
      </unit>
      <unit id="421">
        <segment state="initial">
          <source>iOS</source>
          <target>iOS</target>
        </segment>
      </unit>
      <unit id="422">
        <segment state="initial">
          <source>Windows 10 UWP</source>
          <target>Windows 10 UWP</target>
        </segment>
      </unit>
      <unit id="423">
        <segment state="initial">
          <source>In-app purchases.</source>
          <target>In-app purchases.</target>
        </segment>
      </unit>
      <unit id="424">
        <segment state="initial">
          <source>Platform features that allow users to make purchases in your apps.</source>
          <target>Platform features that allow users to make purchases in your apps.</target>
        </segment>
      </unit>
      <unit id="425">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>In-app billing<ph dataRef="id1" id="ph1" /> is provided by Google Services.</source>
          <target>In-app billing<ph dataRef="id1" id="ph1" /> is provided by Google Services.</target>
        </segment>
      </unit>
      <unit id="426">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Products are added to the <ph dataRef="id1" id="ph1" />Google Play Developer Console<ph dataRef="id2" id="ph2" />.</source>
          <target>Products are added to the <ph dataRef="id1" id="ph1" />Google Play Developer Console<ph dataRef="id2" id="ph2" />.</target>
        </segment>
      </unit>
      <unit id="427">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>In-app purchases are implemented with the <ph dataRef="id1" id="ph1" />Google Play Billing Library<ph dataRef="id2" id="ph2" />.</source>
          <target>In-app purchases are implemented with the <ph dataRef="id1" id="ph1" />Google Play Billing Library<ph dataRef="id2" id="ph2" />.</target>
        </segment>
      </unit>
      <unit id="428">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Products are added to <ph dataRef="id1" id="ph1" />iTunes Connect<ph dataRef="id2" id="ph2" />.</source>
          <target>Products are added to <ph dataRef="id1" id="ph1" />iTunes Connect<ph dataRef="id2" id="ph2" />.</target>
        </segment>
      </unit>
      <unit id="429">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>In-app purchases are implemented using the <ph dataRef="id1" id="ph1" />StoreKit<ph dataRef="id2" id="ph2" /> framework.</source>
          <target>In-app purchases are implemented using the <ph dataRef="id1" id="ph1" />StoreKit<ph dataRef="id2" id="ph2" /> framework.</target>
        </segment>
      </unit>
      <unit id="430">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Products are purchased using <ph dataRef="id1" id="ph1" />SKMutablePayment<ph dataRef="id2" id="ph2" /> and <ph dataRef="id3" id="ph3" />SKPaymentQueue<ph dataRef="id4" id="ph4" />.</source>
          <target>Products are purchased using <ph dataRef="id1" id="ph1" />SKMutablePayment<ph dataRef="id2" id="ph2" /> and <ph dataRef="id3" id="ph3" />SKPaymentQueue<ph dataRef="id4" id="ph4" />.</target>
        </segment>
      </unit>
      <unit id="431">
        <originalData>
          <data id="id1">&lt;a href="https://msdn.microsoft.com/library/windows/apps/mt148551.aspx"&gt;</data>
          <data id="id2">&lt;/a&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You create in-app product purchases for your app by <ph dataRef="id1" id="ph1" />adding them to your app and submitting them to the Store<ph dataRef="id2" id="ph2" />.</source>
          <target>You create in-app product purchases for your app by <ph dataRef="id1" id="ph1" />adding them to your app and submitting them to the Store<ph dataRef="id2" id="ph2" />.</target>
        </segment>
      </unit>
      <unit id="432">
        <originalData>
          <data id="id1">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/windows.applicationmodel.store.currentapp.aspx"&gt;</data>
          <data id="id2">&lt;/a&gt;&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You use the <ph dataRef="id1" id="ph1" />CurrentApp class<ph dataRef="id2" id="ph2" /> to define in-app purchases.</source>
          <target>You use the <ph dataRef="id1" id="ph1" />CurrentApp class<ph dataRef="id2" id="ph2" /> to define in-app purchases.</target>
        </segment>
      </unit>
      <unit id="433">
        <originalData>
          <data id="id1">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/windows.applicationmodel.store.currentapp.requestproductpurchaseasync.aspx"&gt;</data>
          <data id="id2">&lt;/a&gt;&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You use <ph dataRef="id1" id="ph1" />CurrentApp.RequestProductPurchaseAsync<ph dataRef="id2" id="ph2" /> to display the UI that allows customers to purchase the product.</source>
          <target>You use <ph dataRef="id1" id="ph1" />CurrentApp.RequestProductPurchaseAsync<ph dataRef="id2" id="ph2" /> to display the UI that allows customers to purchase the product.</target>
        </segment>
      </unit>
      <unit id="434">
        <segment state="initial">
          <source>Enable in-app product purchases</source>
          <target>Enable in-app product purchases</target>
        </segment>
      </unit>
      <unit id="435">
        <segment state="initial">
          <source>Consumable in-app purchases.</source>
          <target>Consumable in-app purchases.</target>
        </segment>
      </unit>
      <unit id="436">
        <segment state="initial">
          <source>In-app products which can be purchased, used and then purchased again.</source>
          <target>In-app products which can be purchased, used and then purchased again.</target>
        </segment>
      </unit>
      <unit id="437">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Consumable purchases are enabled by making a regular purchase and then consuming it with <ph dataRef="id1" id="ph1" />consumePurchase<ph dataRef="id2" id="ph2" />, enabling it to be purchased, used, and then purchased again.</source>
          <target>Consumable purchases are enabled by making a regular purchase and then consuming it with <ph dataRef="id1" id="ph1" />consumePurchase<ph dataRef="id2" id="ph2" />, enabling it to be purchased, used, and then purchased again.</target>
        </segment>
      </unit>
      <unit id="438">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Consumable products are <ph dataRef="id1" id="ph1" />defined as consumable products<ph dataRef="id2" id="ph2" /> in iTunes Connect.</source>
          <target>Consumable products are <ph dataRef="id1" id="ph1" />defined as consumable products<ph dataRef="id2" id="ph2" /> in iTunes Connect.</target>
        </segment>
      </unit>
      <unit id="439">
        <originalData>
          <data id="id1">&lt;a href="https://msdn.microsoft.com/library/windows/apps/mt148534.aspx"&gt;</data>
          <data id="id2">&lt;/a&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You can support consumables by <ph dataRef="id1" id="ph1" />defining their product type as Consumable when you submit them to<ph dataRef="id2" id="ph2" /> the Store.</source>
          <target>You can support consumables by <ph dataRef="id1" id="ph1" />defining their product type as Consumable when you submit them to<ph dataRef="id2" id="ph2" /> the Store.</target>
        </segment>
      </unit>
      <unit id="440">
        <originalData>
          <data id="id1">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/windows.applicationmodel.store.currentapp.reportconsumablefulfillmentasync.aspx"&gt;</data>
          <data id="id2">&lt;/a&gt;&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You then call <ph dataRef="id1" id="ph1" />CurrentApp.ReportConsumableFulfillmentAsync<ph dataRef="id2" id="ph2" /> after a consumable purchase has been made to allow the customer to access it.</source>
          <target>You then call <ph dataRef="id1" id="ph1" />CurrentApp.ReportConsumableFulfillmentAsync<ph dataRef="id2" id="ph2" /> after a consumable purchase has been made to allow the customer to access it.</target>
        </segment>
      </unit>
      <unit id="441">
        <segment state="initial">
          <source>Enable consumable in-app purchases</source>
          <target>Enable consumable in-app purchases</target>
        </segment>
      </unit>
      <unit id="442">
        <segment state="initial">
          <source>Testing in-app purchases.</source>
          <target>Testing in-app purchases.</target>
        </segment>
      </unit>
      <unit id="443">
        <segment state="initial">
          <source>Enabling you to test your in-app purchase code without putting your app in the Store.</source>
          <target>Enabling you to test your in-app purchase code without putting your app in the Store.</target>
        </segment>
      </unit>
      <unit id="444">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>The <ph dataRef="id1" id="ph1" />in-app billing sandbox<ph dataRef="id2" id="ph2" /> is used for testing.</source>
          <target>The <ph dataRef="id1" id="ph1" />in-app billing sandbox<ph dataRef="id2" id="ph2" /> is used for testing.</target>
        </segment>
      </unit>
      <unit id="445">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Sandbox tester accounts<ph dataRef="id1" id="ph1" /> are used for testing.</source>
          <target>Sandbox tester accounts<ph dataRef="id1" id="ph1" /> are used for testing.</target>
        </segment>
      </unit>
      <unit id="446">
        <originalData>
          <data id="id1">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/windows.applicationmodel.store.currentappsimulator.aspx"&gt;</data>
          <data id="id2">&lt;/a&gt;&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You can test in-app purchases by simply using the <ph dataRef="id1" id="ph1" />CurrentAppSimulator<ph dataRef="id2" id="ph2" /> class in place of CurrentApp.</source>
          <target>You can test in-app purchases by simply using the <ph dataRef="id1" id="ph1" />CurrentAppSimulator<ph dataRef="id2" id="ph2" /> class in place of CurrentApp.</target>
        </segment>
      </unit>
      <unit id="447">
        <segment state="initial">
          <source>Trials.</source>
          <target>Trials.</target>
        </segment>
      </unit>
      <unit id="448">
        <segment state="initial">
          <source>Enabling you to easily limit content or remove advertising based on a trial version of an app.</source>
          <target>Enabling you to easily limit content or remove advertising based on a trial version of an app.</target>
        </segment>
      </unit>
      <unit id="449">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Google Play <ph dataRef="id1" id="ph1" />doesn't officially support app trials<ph dataRef="id2" id="ph2" />.</source>
          <target>Google Play <ph dataRef="id1" id="ph1" />doesn't officially support app trials<ph dataRef="id2" id="ph2" />.</target>
        </segment>
      </unit>
      <unit id="450">
        <segment state="initial">
          <source>Trials or removing advertising is achieved by creating an in-app purchase and taking the appropriate code path when confirming the purchase was successful.</source>
          <target>Trials or removing advertising is achieved by creating an in-app purchase and taking the appropriate code path when confirming the purchase was successful.</target>
        </segment>
      </unit>
      <unit id="451">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>The App Store <ph dataRef="id1" id="ph1" />doesn't officially support app trials<ph dataRef="id2" id="ph2" />.</source>
          <target>The App Store <ph dataRef="id1" id="ph1" />doesn't officially support app trials<ph dataRef="id2" id="ph2" />.</target>
        </segment>
      </unit>
      <unit id="452">
        <segment state="initial">
          <source>Trials or removing advertising is achieved by creating an in-app purchase and taking the appropriate code path when confirming the purchase was successful.</source>
          <target>Trials or removing advertising is achieved by creating an in-app purchase and taking the appropriate code path when confirming the purchase was successful.</target>
        </segment>
      </unit>
      <unit id="453">
        <originalData>
          <data id="id1">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/mt148548.aspx"&gt;</data>
          <data id="id2">&lt;/a&gt;&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You can offer a free trial version of your app by using the <ph dataRef="id1" id="ph1" />'Free Trial' option<ph dataRef="id2" id="ph2" /> when submitting your app to the Store.</source>
          <target>You can offer a free trial version of your app by using the <ph dataRef="id1" id="ph1" />'Free Trial' option<ph dataRef="id2" id="ph2" /> when submitting your app to the Store.</target>
        </segment>
      </unit>
      <unit id="454">
        <originalData>
          <data id="id1">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/windows.applicationmodel.store.licenseinformation.istrial.aspx"&gt;</data>
          <data id="id2">&lt;/a&gt;&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You can then use <ph dataRef="id1" id="ph1" />LicenseInformation.IsTrial<ph dataRef="id2" id="ph2" /> to check the trial status of the app and present different code paths accordingly.</source>
          <target>You can then use <ph dataRef="id1" id="ph1" />LicenseInformation.IsTrial<ph dataRef="id2" id="ph2" /> to check the trial status of the app and present different code paths accordingly.</target>
        </segment>
      </unit>
      <unit id="455">
        <originalData>
          <data id="id1">&lt;a href="https://msdn.microsoft.com/library/windows/apps/windows.applicationmodel.store.licenseinformation.licensechanged"&gt;</data>
          <data id="id2">&lt;/a&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You can register for the <ph dataRef="id1" id="ph1" />LicenseChanged event<ph dataRef="id2" id="ph2" /> to be notified when the user changes the trial status while the app is running.</source>
          <target>You can register for the <ph dataRef="id1" id="ph1" />LicenseChanged event<ph dataRef="id2" id="ph2" /> to be notified when the user changes the trial status while the app is running.</target>
        </segment>
      </unit>
      <unit id="456">
        <segment state="initial">
          <source>Exclude or limit features in a trial version</source>
          <target>Exclude or limit features in a trial version</target>
        </segment>
      </unit>
      <unit id="457">
        <segment state="initial">
          <source>Adapting to multiple platforms</source>
          <target>Adapting to multiple platforms</target>
        </segment>
      </unit>
      <unit id="458">
        <segment state="initial">
          <source>General concept</source>
          <target>General concept</target>
        </segment>
      </unit>
      <unit id="459">
        <segment state="initial">
          <source>Android</source>
          <target>Android</target>
        </segment>
      </unit>
      <unit id="460">
        <segment state="initial">
          <source>iOS</source>
          <target>iOS</target>
        </segment>
      </unit>
      <unit id="461">
        <segment state="initial">
          <source>Windows 10 UWP</source>
          <target>Windows 10 UWP</target>
        </segment>
      </unit>
      <unit id="462">
        <segment state="initial">
          <source>Adaptive UI: flexible layouts.</source>
          <target>Adaptive UI: flexible layouts.</target>
        </segment>
      </unit>
      <unit id="463">
        <segment state="initial">
          <source>Supporting different screen sizes with a flexible height and width.</source>
          <target>Supporting different screen sizes with a flexible height and width.</target>
        </segment>
      </unit>
      <unit id="464">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Flexible layouts can be achieved using the <ph dataRef="id1" id="ph1" />wrap_content<ph dataRef="id2" id="ph2" /> and <ph dataRef="id3" id="ph3" />match_parent<ph dataRef="id4" id="ph4" /> values in LinearLayout objects, or by making use of RelativeLayout objects for alignment.</source>
          <target>Flexible layouts can be achieved using the <ph dataRef="id1" id="ph1" />wrap_content<ph dataRef="id2" id="ph2" /> and <ph dataRef="id3" id="ph3" />match_parent<ph dataRef="id4" id="ph4" /> values in LinearLayout objects, or by making use of RelativeLayout objects for alignment.</target>
        </segment>
      </unit>
      <unit id="465">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
          <data id="id5">&lt;strong&gt;</data>
          <data id="id6">&lt;/strong&gt;</data>
          <data id="id7">&lt;strong&gt;</data>
          <data id="id8">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Flexible layouts can be achieved using the <ph dataRef="id1" id="ph1" />adaptive model<ph dataRef="id2" id="ph2" /> with universal Storyboards, making use of <ph dataRef="id3" id="ph3" />Auto Layout<ph dataRef="id4" id="ph4" /> with <ph dataRef="id5" id="ph5" />constraints<ph dataRef="id6" id="ph6" /> and <ph dataRef="id7" id="ph7" />traits<ph dataRef="id8" id="ph8" /> such as horizontalSizeClass and displayScale which are applied to view controllers.</source>
          <target>Flexible layouts can be achieved using the <ph dataRef="id1" id="ph1" />adaptive model<ph dataRef="id2" id="ph2" /> with universal Storyboards, making use of <ph dataRef="id3" id="ph3" />Auto Layout<ph dataRef="id4" id="ph4" /> with <ph dataRef="id5" id="ph5" />constraints<ph dataRef="id6" id="ph6" /> and <ph dataRef="id7" id="ph7" />traits<ph dataRef="id8" id="ph8" /> such as horizontalSizeClass and displayScale which are applied to view controllers.</target>
        </segment>
      </unit>
      <unit id="466">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You can create a fluid layout using <ph dataRef="id1" id="ph1" />layout properties<ph dataRef="id2" id="ph2" /> and <ph dataRef="id3" id="ph3" />panels<ph dataRef="id4" id="ph4" /> with a combination of fixed and dynamic sizing.</source>
          <target>You can create a fluid layout using <ph dataRef="id1" id="ph1" />layout properties<ph dataRef="id2" id="ph2" /> and <ph dataRef="id3" id="ph3" />panels<ph dataRef="id4" id="ph4" /> with a combination of fixed and dynamic sizing.</target>
        </segment>
      </unit>
      <unit id="467">
        <segment state="initial">
          <source>Define layouts with XAML - layout properties and panels</source>
          <target>Define layouts with XAML - layout properties and panels</target>
        </segment>
      </unit>
      <unit id="468">
        <segment state="initial">
          <source>Responsive design 101</source>
          <target>Responsive design 101</target>
        </segment>
      </unit>
      <unit id="469">
        <segment state="initial">
          <source>Adaptive UI: tailored layouts.</source>
          <target>Adaptive UI: tailored layouts.</target>
        </segment>
      </unit>
      <unit id="470">
        <segment state="initial">
          <source>Supporting different screen sizes with separate targeted layouts.</source>
          <target>Supporting different screen sizes with separate targeted layouts.</target>
        </segment>
      </unit>
      <unit id="471">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
          <data id="id5">&lt;strong&gt;</data>
          <data id="id6">&lt;/strong&gt;</data>
          <data id="id7">&lt;strong&gt;</data>
          <data id="id8">&lt;/strong&gt;</data>
          <data id="id9">&lt;strong&gt;</data>
          <data id="id10">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Providing alternative layout files for different screen configurations in the resources directory using <ph dataRef="id1" id="ph1" />configuration qualifiers<ph dataRef="id2" id="ph2" /> such as <ph dataRef="id3" id="ph3" />small<ph dataRef="id4" id="ph4" />, <ph dataRef="id5" id="ph5" />large<ph dataRef="id6" id="ph6" />, <ph dataRef="id7" id="ph7" />ldpi<ph dataRef="id8" id="ph8" />, and <ph dataRef="id9" id="ph9" />hdpi<ph dataRef="id10" id="ph10" /> allows you to target custom layouts to screens of varying size and density.</source>
          <target>Providing alternative layout files for different screen configurations in the resources directory using <ph dataRef="id1" id="ph1" />configuration qualifiers<ph dataRef="id2" id="ph2" /> such as <ph dataRef="id3" id="ph3" />small<ph dataRef="id4" id="ph4" />, <ph dataRef="id5" id="ph5" />large<ph dataRef="id6" id="ph6" />, <ph dataRef="id7" id="ph7" />ldpi<ph dataRef="id8" id="ph8" />, and <ph dataRef="id9" id="ph9" />hdpi<ph dataRef="id10" id="ph10" /> allows you to target custom layouts to screens of varying size and density.</target>
        </segment>
      </unit>
      <unit id="472">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Define a <ph dataRef="id1" id="ph1" />separate iPhone and iPad Storyboard<ph dataRef="id2" id="ph2" /> to tailor layouts to different device families in a universal app.</source>
          <target>Define a <ph dataRef="id1" id="ph1" />separate iPhone and iPad Storyboard<ph dataRef="id2" id="ph2" /> to tailor layouts to different device families in a universal app.</target>
        </segment>
      </unit>
      <unit id="473">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You can build a tailored layout by defining <ph dataRef="id1" id="ph1" />different XAML markup files<ph dataRef="id2" id="ph2" /> per device family.</source>
          <target>You can build a tailored layout by defining <ph dataRef="id1" id="ph1" />different XAML markup files<ph dataRef="id2" id="ph2" /> per device family.</target>
        </segment>
      </unit>
      <unit id="474">
        <segment state="initial">
          <source>Define layouts with XAML - tailored layouts</source>
          <target>Define layouts with XAML - tailored layouts</target>
        </segment>
      </unit>
      <unit id="475">
        <segment state="initial">
          <source>Adaptive UI: responsive layouts.</source>
          <target>Adaptive UI: responsive layouts.</target>
        </segment>
      </unit>
      <unit id="476">
        <segment state="initial">
          <source>Responding to changes in screen size, such as rotation, or a change in the size of a window.</source>
          <target>Responding to changes in screen size, such as rotation, or a change in the size of a window.</target>
        </segment>
      </unit>
      <unit id="477">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Use of flexible layouts with <ph dataRef="id1" id="ph1" />LinearLayout<ph dataRef="id2" id="ph2" /> and <ph dataRef="id3" id="ph3" />RelativeLayout<ph dataRef="id4" id="ph4" />, or providing alternative layout files for different orientations enable responsive layouts.</source>
          <target>Use of flexible layouts with <ph dataRef="id1" id="ph1" />LinearLayout<ph dataRef="id2" id="ph2" /> and <ph dataRef="id3" id="ph3" />RelativeLayout<ph dataRef="id4" id="ph4" />, or providing alternative layout files for different orientations enable responsive layouts.</target>
        </segment>
      </unit>
      <unit id="478">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
          <data id="id5">&lt;strong&gt;</data>
          <data id="id6">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>When the <ph dataRef="id1" id="ph1" />size<ph dataRef="id2" id="ph2" /> or <ph dataRef="id3" id="ph3" />traits<ph dataRef="id4" id="ph4" /> of a view change, the <ph dataRef="id5" id="ph5" />constraints<ph dataRef="id6" id="ph6" /> specified in storyboards are applied.</source>
          <target>When the <ph dataRef="id1" id="ph1" />size<ph dataRef="id2" id="ph2" /> or <ph dataRef="id3" id="ph3" />traits<ph dataRef="id4" id="ph4" /> of a view change, the <ph dataRef="id5" id="ph5" />constraints<ph dataRef="id6" id="ph6" /> specified in storyboards are applied.</target>
        </segment>
      </unit>
      <unit id="479">
        <originalData>
          <data id="id1">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.visualstate.aspx"&gt;</data>
          <data id="id2">&lt;/a&gt;&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.visualstatemanager.aspx"&gt;</data>
          <data id="id4">&lt;/a&gt;&lt;/strong&gt;</data>
          <data id="id5">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.adaptivetrigger.aspx"&gt;</data>
          <data id="id6">&lt;/a&gt;&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You can easily reflow, reposition, resize, reveal, or replace sections of your UI at runtime in response to window size changes using <ph dataRef="id1" id="ph1" />VisualState<ph dataRef="id2" id="ph2" />, the <ph dataRef="id3" id="ph3" />VisualStateManager<ph dataRef="id4" id="ph4" /> and <ph dataRef="id5" id="ph5" />AdaptiveTrigger<ph dataRef="id6" id="ph6" />.</source>
          <target>You can easily reflow, reposition, resize, reveal, or replace sections of your UI at runtime in response to window size changes using <ph dataRef="id1" id="ph1" />VisualState<ph dataRef="id2" id="ph2" />, the <ph dataRef="id3" id="ph3" />VisualStateManager<ph dataRef="id4" id="ph4" /> and <ph dataRef="id5" id="ph5" />AdaptiveTrigger<ph dataRef="id6" id="ph6" />.</target>
        </segment>
      </unit>
      <unit id="480">
        <segment state="initial">
          <source>Define layouts with XAML - visual states and state triggers</source>
          <target>Define layouts with XAML - visual states and state triggers</target>
        </segment>
      </unit>
      <unit id="481">
        <segment state="initial">
          <source>Responsive design 101</source>
          <target>Responsive design 101</target>
        </segment>
      </unit>
      <unit id="482">
        <segment state="initial">
          <source>Supporting different device capabilities.</source>
          <target>Supporting different device capabilities.</target>
        </segment>
      </unit>
      <unit id="483">
        <segment state="initial">
          <source>Take advantage of advanced hardware features while still supporting devices without them.</source>
          <target>Take advantage of advanced hardware features while still supporting devices without them.</target>
        </segment>
      </unit>
      <unit id="484">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Testing for device features at runtime using <ph dataRef="id1" id="ph1" />PackageManager.hasSystemFeature<ph dataRef="id2" id="ph2" /> enables you to decide if hardware specific code can run.</source>
          <target>Testing for device features at runtime using <ph dataRef="id1" id="ph1" />PackageManager.hasSystemFeature<ph dataRef="id2" id="ph2" /> enables you to decide if hardware specific code can run.</target>
        </segment>
      </unit>
      <unit id="485">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>There is <ph dataRef="id1" id="ph1" />no single check<ph dataRef="id2" id="ph2" /> you can perform at runtime to test for device features, you test for each feature in a specific way to decide if hardware specific code can be run.</source>
          <target>There is <ph dataRef="id1" id="ph1" />no single check<ph dataRef="id2" id="ph2" /> you can perform at runtime to test for device features, you test for each feature in a specific way to decide if hardware specific code can be run.</target>
        </segment>
      </unit>
      <unit id="486">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You can add <ph dataRef="id1" id="ph1" />platform extension SDKs<ph dataRef="id2" id="ph2" /> to your package to target additional functionality found in different device families including phone, desktop, and IoT.</source>
          <target>You can add <ph dataRef="id1" id="ph1" />platform extension SDKs<ph dataRef="id2" id="ph2" /> to your package to target additional functionality found in different device families including phone, desktop, and IoT.</target>
        </segment>
      </unit>
      <unit id="487">
        <originalData>
          <data id="id1">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/windows.foundation.metadata.apiinformation.aspx"&gt;</data>
          <data id="id2">&lt;/a&gt;&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You use the <ph dataRef="id1" id="ph1" />ApiInformation API<ph dataRef="id2" id="ph2" /> to test for the presence of types and members at runtime, and can call those types and members only if they're present.</source>
          <target>You use the <ph dataRef="id1" id="ph1" />ApiInformation API<ph dataRef="id2" id="ph2" /> to test for the presence of types and members at runtime, and can call those types and members only if they're present.</target>
        </segment>
      </unit>
      <unit id="488">
        <segment state="initial">
          <source>Supporting different device capabilities.</source>
          <target>Supporting different device capabilities.</target>
        </segment>
      </unit>
      <unit id="489">
        <segment state="initial">
          <source>Take advantage of advanced hardware features while still supporting devices without them.</source>
          <target>Take advantage of advanced hardware features while still supporting devices without them.</target>
        </segment>
      </unit>
      <unit id="490">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>The <ph dataRef="id1" id="ph1" />Android Support Library<ph dataRef="id2" id="ph2" /> can be packaged with your app to make some newer APIs available to those with older versions of Android.</source>
          <target>The <ph dataRef="id1" id="ph1" />Android Support Library<ph dataRef="id2" id="ph2" /> can be packaged with your app to make some newer APIs available to those with older versions of Android.</target>
        </segment>
      </unit>
      <unit id="491">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Testing for the API level at runtime can be done using <ph dataRef="id1" id="ph1" />Build.Version.SDK_INT<ph dataRef="id2" id="ph2" />.</source>
          <target>Testing for the API level at runtime can be done using <ph dataRef="id1" id="ph1" />Build.Version.SDK_INT<ph dataRef="id2" id="ph2" />.</target>
        </segment>
      </unit>
      <unit id="492">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Standard runtime checks are used to find out if APIs are available, such as the <ph dataRef="id1" id="ph1" />class<ph dataRef="id2" id="ph2" /> method to check if a class exists and <ph dataRef="id3" id="ph3" />respondsToSelector:<ph dataRef="id4" id="ph4" /> to check for methods on classes.</source>
          <target>Standard runtime checks are used to find out if APIs are available, such as the <ph dataRef="id1" id="ph1" />class<ph dataRef="id2" id="ph2" /> method to check if a class exists and <ph dataRef="id3" id="ph3" />respondsToSelector:<ph dataRef="id4" id="ph4" /> to check for methods on classes.</target>
        </segment>
      </unit>
      <unit id="493">
        <originalData>
          <data id="id1">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/dn949005.aspx"&gt;</data>
          <data id="id2">&lt;/a&gt;&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You can use <ph dataRef="id1" id="ph1" />ApiInformation.IsApiContractPresent<ph dataRef="id2" id="ph2" /> to identify if an API contract with a specified major and minor number is present.</source>
          <target>You can use <ph dataRef="id1" id="ph1" />ApiInformation.IsApiContractPresent<ph dataRef="id2" id="ph2" /> to identify if an API contract with a specified major and minor number is present.</target>
        </segment>
      </unit>
      <unit id="494">
        <originalData>
          <data id="id1">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/windows.foundation.metadata.apiinformation.aspx"&gt;</data>
          <data id="id2">&lt;/a&gt;&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You also use the <ph dataRef="id1" id="ph1" />ApiInformation API<ph dataRef="id2" id="ph2" /> to test for the presence of types and members at runtime, and can call those types and members only if they're present.</source>
          <target>You also use the <ph dataRef="id1" id="ph1" />ApiInformation API<ph dataRef="id2" id="ph2" /> to test for the presence of types and members at runtime, and can call those types and members only if they're present.</target>
        </segment>
      </unit>
      <unit id="495">
        <segment state="initial">
          <source>Notifications</source>
          <target>Notifications</target>
        </segment>
      </unit>
      <unit id="496">
        <segment state="initial">
          <source>General concept</source>
          <target>General concept</target>
        </segment>
      </unit>
      <unit id="497">
        <segment state="initial">
          <source>Android</source>
          <target>Android</target>
        </segment>
      </unit>
      <unit id="498">
        <segment state="initial">
          <source>iOS</source>
          <target>iOS</target>
        </segment>
      </unit>
      <unit id="499">
        <segment state="initial">
          <source>Windows 10 UWP</source>
          <target>Windows 10 UWP</target>
        </segment>
      </unit>
      <unit id="500">
        <segment state="initial">
          <source>Tiles and badges.</source>
          <target>Tiles and badges.</target>
        </segment>
      </unit>
      <unit id="501">
        <segment state="initial">
          <source>Present updates to users on the home screen.</source>
          <target>Present updates to users on the home screen.</target>
        </segment>
      </unit>
      <unit id="502">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>App Widgets<ph dataRef="id1" id="ph1" /> are views on your application that can be embedded into the home screen and can receive periodic updates.</source>
          <target>App Widgets<ph dataRef="id1" id="ph1" /> are views on your application that can be embedded into the home screen and can receive periodic updates.</target>
        </segment>
      </unit>
      <unit id="503">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>No badge system<ph dataRef="id1" id="ph1" /> exists on Android.</source>
          <target>No badge system<ph dataRef="id1" id="ph1" /> exists on Android.</target>
        </segment>
      </unit>
      <unit id="504">
        <segment state="initial">
          <source>No identical system to tiles exists.</source>
          <target>No identical system to tiles exists.</target>
        </segment>
      </unit>
      <unit id="505">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>No tiles or widgets<ph dataRef="id1" id="ph1" /> exist on iOS.</source>
          <target>No tiles or widgets<ph dataRef="id1" id="ph1" /> exist on iOS.</target>
        </segment>
      </unit>
      <unit id="506">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You can add a <ph dataRef="id1" id="ph1" />badge<ph dataRef="id2" id="ph2" /> to your icon with a number which can change in response to local or remote notifications.</source>
          <target>You can add a <ph dataRef="id1" id="ph1" />badge<ph dataRef="id2" id="ph2" /> to your icon with a number which can change in response to local or remote notifications.</target>
        </segment>
      </unit>
      <unit id="507">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Your app has a <ph dataRef="id1" id="ph1" />tile<ph dataRef="id2" id="ph2" /> which can be pinned to the start screen and is used to display your choice of text, images, and a <ph dataRef="id3" id="ph3" />badge<ph dataRef="id4" id="ph4" /> with glyphs and numbers.</source>
          <target>Your app has a <ph dataRef="id1" id="ph1" />tile<ph dataRef="id2" id="ph2" /> which can be pinned to the start screen and is used to display your choice of text, images, and a <ph dataRef="id3" id="ph3" />badge<ph dataRef="id4" id="ph4" /> with glyphs and numbers.</target>
        </segment>
      </unit>
      <unit id="508">
        <segment state="initial">
          <source>You can update the content of tiles from the app; via push notifications or at predefined schedules.</source>
          <target>You can update the content of tiles from the app; via push notifications or at predefined schedules.</target>
        </segment>
      </unit>
      <unit id="509">
        <segment state="initial">
          <source>Tiles can be adaptive, and can change according to where they are being displayed.</source>
          <target>Tiles can be adaptive, and can change according to where they are being displayed.</target>
        </segment>
      </unit>
      <unit id="510">
        <segment state="initial">
          <source>Create tiles</source>
          <target>Create tiles</target>
        </segment>
      </unit>
      <unit id="511">
        <segment state="initial">
          <source>Create adaptive tiles</source>
          <target>Create adaptive tiles</target>
        </segment>
      </unit>
      <unit id="512">
        <segment state="initial">
          <source>Choose a notification delivery method</source>
          <target>Choose a notification delivery method</target>
        </segment>
      </unit>
      <unit id="513">
        <segment state="initial">
          <source>Guidelines for tiles and badges</source>
          <target>Guidelines for tiles and badges</target>
        </segment>
      </unit>
      <unit id="514">
        <segment state="initial">
          <source>Displaying notifications.</source>
          <target>Displaying notifications.</target>
        </segment>
      </unit>
      <unit id="515">
        <segment state="initial">
          <source>Types of notifications that can be displayed.</source>
          <target>Types of notifications that can be displayed.</target>
        </segment>
      </unit>
      <unit id="516">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
          <data id="id5">&lt;strong&gt;</data>
          <data id="id6">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Notifications can be shown in the <ph dataRef="id1" id="ph1" />notification area<ph dataRef="id2" id="ph2" /> and <ph dataRef="id3" id="ph3" />notification drawer<ph dataRef="id4" id="ph4" />, <ph dataRef="id5" id="ph5" />heads-up notifications<ph dataRef="id6" id="ph6" /> present a notification in a small floating window.</source>
          <target>Notifications can be shown in the <ph dataRef="id1" id="ph1" />notification area<ph dataRef="id2" id="ph2" /> and <ph dataRef="id3" id="ph3" />notification drawer<ph dataRef="id4" id="ph4" />, <ph dataRef="id5" id="ph5" />heads-up notifications<ph dataRef="id6" id="ph6" /> present a notification in a small floating window.</target>
        </segment>
      </unit>
      <unit id="517">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Notifications can have actions added to them by defining a <ph dataRef="id1" id="ph1" />PendingIntent<ph dataRef="id2" id="ph2" />.</source>
          <target>Notifications can have actions added to them by defining a <ph dataRef="id1" id="ph1" />PendingIntent<ph dataRef="id2" id="ph2" />.</target>
        </segment>
      </unit>
      <unit id="518">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Pop-up notifications appear as <ph dataRef="id1" id="ph1" />banners<ph dataRef="id2" id="ph2" /> or <ph dataRef="id3" id="ph3" />alerts<ph dataRef="id4" id="ph4" />.</source>
          <target>Pop-up notifications appear as <ph dataRef="id1" id="ph1" />banners<ph dataRef="id2" id="ph2" /> or <ph dataRef="id3" id="ph3" />alerts<ph dataRef="id4" id="ph4" />.</target>
        </segment>
      </unit>
      <unit id="519">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You can add custom action buttons to <ph dataRef="id1" id="ph1" />actionable notifications<ph dataRef="id2" id="ph2" /> which are defined with <ph dataRef="id3" id="ph3" />UIMutableUserNotificationAction<ph dataRef="id4" id="ph4" />.</source>
          <target>You can add custom action buttons to <ph dataRef="id1" id="ph1" />actionable notifications<ph dataRef="id2" id="ph2" /> which are defined with <ph dataRef="id3" id="ph3" />UIMutableUserNotificationAction<ph dataRef="id4" id="ph4" />.</target>
        </segment>
      </unit>
      <unit id="520">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You can create adaptive pop-up notifications called <ph dataRef="id1" id="ph1" />toast notifications<ph dataRef="id2" id="ph2" />.</source>
          <target>You can create adaptive pop-up notifications called <ph dataRef="id1" id="ph1" />toast notifications<ph dataRef="id2" id="ph2" />.</target>
        </segment>
      </unit>
      <unit id="521">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You can define toasts in XML with visual content, <ph dataRef="id1" id="ph1" />actions<ph dataRef="id2" id="ph2" /> which can be buttons, or inputs and audio.</source>
          <target>You can define toasts in XML with visual content, <ph dataRef="id1" id="ph1" />actions<ph dataRef="id2" id="ph2" /> which can be buttons, or inputs and audio.</target>
        </segment>
      </unit>
      <unit id="522">
        <segment state="initial">
          <source>Adaptive and interactive toast notifications</source>
          <target>Adaptive and interactive toast notifications</target>
        </segment>
      </unit>
      <unit id="523">
        <segment state="initial">
          <source>Choose a notification delivery method</source>
          <target>Choose a notification delivery method</target>
        </segment>
      </unit>
      <unit id="524">
        <segment state="initial">
          <source>Guidelines for toast notifications</source>
          <target>Guidelines for toast notifications</target>
        </segment>
      </unit>
      <unit id="525">
        <segment state="initial">
          <source>Scheduling local notifications.</source>
          <target>Scheduling local notifications.</target>
        </segment>
      </unit>
      <unit id="526">
        <segment state="initial">
          <source>Local notifications sent by your app at a scheduled time.</source>
          <target>Local notifications sent by your app at a scheduled time.</target>
        </segment>
      </unit>
      <unit id="527">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
          <data id="id5">&lt;strong&gt;</data>
          <data id="id6">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Notifications and actions are defined using a <ph dataRef="id1" id="ph1" />NotificationCompat.Builder<ph dataRef="id2" id="ph2" /> and can be scheduled and handled in-app using <ph dataRef="id3" id="ph3" />AlarmManager<ph dataRef="id4" id="ph4" /> and <ph dataRef="id5" id="ph5" />BroadcastReceiver<ph dataRef="id6" id="ph6" />.</source>
          <target>Notifications and actions are defined using a <ph dataRef="id1" id="ph1" />NotificationCompat.Builder<ph dataRef="id2" id="ph2" /> and can be scheduled and handled in-app using <ph dataRef="id3" id="ph3" />AlarmManager<ph dataRef="id4" id="ph4" /> and <ph dataRef="id5" id="ph5" />BroadcastReceiver<ph dataRef="id6" id="ph6" />.</target>
        </segment>
      </unit>
      <unit id="528">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Local notifications are created using <ph dataRef="id1" id="ph1" />UILocalNotification<ph dataRef="id2" id="ph2" />, and can be scheduled with ** UILocalNotification.scheduleLocalNotification:<ph dataRef="id3" id="ph3" />.</source>
          <target>Local notifications are created using <ph dataRef="id1" id="ph1" />UILocalNotification<ph dataRef="id2" id="ph2" />, and can be scheduled with ** UILocalNotification.scheduleLocalNotification:<ph dataRef="id3" id="ph3" />.</target>
        </segment>
      </unit>
      <unit id="529">
        <originalData>
          <data id="id1">&lt;/strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.notifications.scheduledtoastnotification.aspx"&gt;</data>
          <data id="id2">&lt;/a&gt;&lt;strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>| You can schedule a toast notification using <ph dataRef="id1" id="ph1" />ScheduledToastNotification<ph dataRef="id2" id="ph2" />.</source>
          <target>| You can schedule a toast notification using <ph dataRef="id1" id="ph1" />ScheduledToastNotification<ph dataRef="id2" id="ph2" />.</target>
        </segment>
      </unit>
      <unit id="530">
        <originalData>
          <data id="id1">&lt;/strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.notifications.tilenotification.aspx"&gt;</data>
          <data id="id2">&lt;/a&gt;&lt;strong&gt;</data>
          <data id="id3">&lt;a href="https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.notifications.scheduledtilenotification.aspx"&gt;</data>
          <data id="id4">&lt;/a&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You can send a tile notification from your app using the <ph dataRef="id1" id="ph1" />TileNotification class<ph dataRef="id2" id="ph2" />, or schedule a tile notification with <ph dataRef="id3" id="ph3" />ScheduledTileNotification<ph dataRef="id4" id="ph4" />.</source>
          <target>You can send a tile notification from your app using the <ph dataRef="id1" id="ph1" />TileNotification class<ph dataRef="id2" id="ph2" />, or schedule a tile notification with <ph dataRef="id3" id="ph3" />ScheduledTileNotification<ph dataRef="id4" id="ph4" />.</target>
        </segment>
      </unit>
      <unit id="531">
        <segment state="initial">
          <source>Adaptive and interactive toast notifications</source>
          <target>Adaptive and interactive toast notifications</target>
        </segment>
      </unit>
      <unit id="532">
        <originalData>
          <data id="id1">&lt;/a&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Send a local tile notification<ph dataRef="id1" id="ph1" /> | | <ph dataRef="id2" id="ph2" />Sending push notifications.** A notification sent from a push notification server and optionally handled in-app.</source>
          <target>Send a local tile notification<ph dataRef="id1" id="ph1" /> | | <ph dataRef="id2" id="ph2" />Sending push notifications.** A notification sent from a push notification server and optionally handled in-app.</target>
        </segment>
      </unit>
      <unit id="533">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Google Cloud Messaging<ph dataRef="id1" id="ph1" /> provides push notification support for Android.</source>
          <target>Google Cloud Messaging<ph dataRef="id1" id="ph1" /> provides push notification support for Android.</target>
        </segment>
      </unit>
      <unit id="534">
        <segment state="initial">
          <source>Media capture and rendering</source>
          <target>Media capture and rendering</target>
        </segment>
      </unit>
      <unit id="535">
        <segment state="initial">
          <source>General concept</source>
          <target>General concept</target>
        </segment>
      </unit>
      <unit id="536">
        <segment state="initial">
          <source>Android</source>
          <target>Android</target>
        </segment>
      </unit>
      <unit id="537">
        <segment state="initial">
          <source>iOS</source>
          <target>iOS</target>
        </segment>
      </unit>
      <unit id="538">
        <segment state="initial">
          <source>Windows 10 UWP</source>
          <target>Windows 10 UWP</target>
        </segment>
      </unit>
      <unit id="539">
        <segment state="initial">
          <source>Capturing media.</source>
          <target>Capturing media.</target>
        </segment>
      </unit>
      <unit id="540">
        <segment state="initial">
          <source>Recording audio and visual content.</source>
          <target>Recording audio and visual content.</target>
        </segment>
      </unit>
      <unit id="541">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Using an <ph dataRef="id1" id="ph1" />intent<ph dataRef="id2" id="ph2" /> such as MediaStore.ACTION_VIDEO_CAPTURE allows media to be captured with an existing camera app.</source>
          <target>Using an <ph dataRef="id1" id="ph1" />intent<ph dataRef="id2" id="ph2" /> such as MediaStore.ACTION_VIDEO_CAPTURE allows media to be captured with an existing camera app.</target>
        </segment>
      </unit>
      <unit id="542">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Using the <ph dataRef="id1" id="ph1" />android.hardware.camera2<ph dataRef="id2" id="ph2" /> or <ph dataRef="id3" id="ph3" />camera<ph dataRef="id4" id="ph4" /> library enables the implementation of a custom camera interface.</source>
          <target>Using the <ph dataRef="id1" id="ph1" />android.hardware.camera2<ph dataRef="id2" id="ph2" /> or <ph dataRef="id3" id="ph3" />camera<ph dataRef="id4" id="ph4" /> library enables the implementation of a custom camera interface.</target>
        </segment>
      </unit>
      <unit id="543">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>MediaRecorder<ph dataRef="id1" id="ph1" /> APIs can be used to capture audio.</source>
          <target>MediaRecorder<ph dataRef="id1" id="ph1" /> APIs can be used to capture audio.</target>
        </segment>
      </unit>
      <unit id="544">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>The <ph dataRef="id1" id="ph1" />UIImagePickerController<ph dataRef="id2" id="ph2" /> allows for the capture of video and photos with the system UI.</source>
          <target>The <ph dataRef="id1" id="ph1" />UIImagePickerController<ph dataRef="id2" id="ph2" /> allows for the capture of video and photos with the system UI.</target>
        </segment>
      </unit>
      <unit id="545">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>The <ph dataRef="id1" id="ph1" />AVFoundation<ph dataRef="id2" id="ph2" /> classes such as <ph dataRef="id3" id="ph3" />AVCaptureSession<ph dataRef="id4" id="ph4" /> enable direct access to the camera.</source>
          <target>The <ph dataRef="id1" id="ph1" />AVFoundation<ph dataRef="id2" id="ph2" /> classes such as <ph dataRef="id3" id="ph3" />AVCaptureSession<ph dataRef="id4" id="ph4" /> enable direct access to the camera.</target>
        </segment>
      </unit>
      <unit id="546">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>The <ph dataRef="id1" id="ph1" />AVAudioRecorder<ph dataRef="id2" id="ph2" /> class enables audio recording.</source>
          <target>The <ph dataRef="id1" id="ph1" />AVAudioRecorder<ph dataRef="id2" id="ph2" /> class enables audio recording.</target>
        </segment>
      </unit>
      <unit id="547">
        <originalData>
          <data id="id1">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/xaml/windows.media.capture.cameracaptureui.aspx"&gt;</data>
          <data id="id2">&lt;/a&gt;&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You can capture photos and video while using the built-in camera UI with the <ph dataRef="id1" id="ph1" />CameraCaptureUI class<ph dataRef="id2" id="ph2" />.</source>
          <target>You can capture photos and video while using the built-in camera UI with the <ph dataRef="id1" id="ph1" />CameraCaptureUI class<ph dataRef="id2" id="ph2" />.</target>
        </segment>
      </unit>
      <unit id="548">
        <originalData>
          <data id="id1">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/xaml/windows.media.capture.aspx"&gt;</data>
          <data id="id2">&lt;/a&gt;&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/xaml/windows.media.capture.mediacapture.aspx"&gt;</data>
          <data id="id4">&lt;/a&gt;&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You can interact with the camera at a low level, and capture audio with classes in <ph dataRef="id1" id="ph1" />Windows.Media.Capture<ph dataRef="id2" id="ph2" /> such as the <ph dataRef="id3" id="ph3" />MediaCapture API<ph dataRef="id4" id="ph4" />.</source>
          <target>You can interact with the camera at a low level, and capture audio with classes in <ph dataRef="id1" id="ph1" />Windows.Media.Capture<ph dataRef="id2" id="ph2" /> such as the <ph dataRef="id3" id="ph3" />MediaCapture API<ph dataRef="id4" id="ph4" />.</target>
        </segment>
      </unit>
      <unit id="549">
        <segment state="initial">
          <source>Capture photos and video with CameraCaptureUI</source>
          <target>Capture photos and video with CameraCaptureUI</target>
        </segment>
      </unit>
      <unit id="550">
        <segment state="initial">
          <source>Capture photos and video with MediaCapture</source>
          <target>Capture photos and video with MediaCapture</target>
        </segment>
      </unit>
      <unit id="551">
        <segment state="initial">
          <source>Media playback.</source>
          <target>Media playback.</target>
        </segment>
      </unit>
      <unit id="552">
        <segment state="initial">
          <source>Playing audio and video files.</source>
          <target>Playing audio and video files.</target>
        </segment>
      </unit>
      <unit id="553">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>The <ph dataRef="id1" id="ph1" />MediaPlayer<ph dataRef="id2" id="ph2" /> and <ph dataRef="id3" id="ph3" />AudioManager<ph dataRef="id4" id="ph4" /> classes are used to play audio and video files.</source>
          <target>The <ph dataRef="id1" id="ph1" />MediaPlayer<ph dataRef="id2" id="ph2" /> and <ph dataRef="id3" id="ph3" />AudioManager<ph dataRef="id4" id="ph4" /> classes are used to play audio and video files.</target>
        </segment>
      </unit>
      <unit id="554">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
          <data id="id5">&lt;strong&gt;</data>
          <data id="id6">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>The <ph dataRef="id1" id="ph1" />AVKit framework<ph dataRef="id2" id="ph2" />, <ph dataRef="id3" id="ph3" />AVAudioPlayer<ph dataRef="id4" id="ph4" />, and <ph dataRef="id5" id="ph5" />Media Player Framework<ph dataRef="id6" id="ph6" /> are used to play audio and video files.</source>
          <target>The <ph dataRef="id1" id="ph1" />AVKit framework<ph dataRef="id2" id="ph2" />, <ph dataRef="id3" id="ph3" />AVAudioPlayer<ph dataRef="id4" id="ph4" />, and <ph dataRef="id5" id="ph5" />Media Player Framework<ph dataRef="id6" id="ph6" /> are used to play audio and video files.</target>
        </segment>
      </unit>
      <unit id="555">
        <originalData>
          <data id="id1">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/xaml/windows.media.core.mediasource.aspx"&gt;</data>
          <data id="id2">&lt;/a&gt;&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.mediaelement.aspx"&gt;</data>
          <data id="id4">&lt;/a&gt;&lt;/strong&gt;</data>
          <data id="id5">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/windows.media.playback.mediaplayer.aspx"&gt;</data>
          <data id="id6">&lt;/a&gt;&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You can use the <ph dataRef="id1" id="ph1" />MediaSource class<ph dataRef="id2" id="ph2" />, <ph dataRef="id3" id="ph3" />MediaElement<ph dataRef="id4" id="ph4" />, and <ph dataRef="id5" id="ph5" />MediaPlayer<ph dataRef="id6" id="ph6" /> classes to play back audio and video from sources such as local and remote files.</source>
          <target>You can use the <ph dataRef="id1" id="ph1" />MediaSource class<ph dataRef="id2" id="ph2" />, <ph dataRef="id3" id="ph3" />MediaElement<ph dataRef="id4" id="ph4" />, and <ph dataRef="id5" id="ph5" />MediaPlayer<ph dataRef="id6" id="ph6" /> classes to play back audio and video from sources such as local and remote files.</target>
        </segment>
      </unit>
      <unit id="556">
        <segment state="initial">
          <source>Media playback with MediaSource</source>
          <target>Media playback with MediaSource</target>
        </segment>
      </unit>
      <unit id="557">
        <segment state="initial">
          <source>Editing media.</source>
          <target>Editing media.</target>
        </segment>
      </unit>
      <unit id="558">
        <segment state="initial">
          <source>Composing new media files from existing recordings and applying special effects.</source>
          <target>Composing new media files from existing recordings and applying special effects.</target>
        </segment>
      </unit>
      <unit id="559">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
          <data id="id5">&lt;strong&gt;</data>
          <data id="id6">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Low level classes such as <ph dataRef="id1" id="ph1" />MediaCodec<ph dataRef="id2" id="ph2" />, <ph dataRef="id3" id="ph3" />MediaMuxer<ph dataRef="id4" id="ph4" />, and <ph dataRef="id5" id="ph5" />android.media.effect<ph dataRef="id6" id="ph6" /> can be used for content editing.</source>
          <target>Low level classes such as <ph dataRef="id1" id="ph1" />MediaCodec<ph dataRef="id2" id="ph2" />, <ph dataRef="id3" id="ph3" />MediaMuxer<ph dataRef="id4" id="ph4" />, and <ph dataRef="id5" id="ph5" />android.media.effect<ph dataRef="id6" id="ph6" /> can be used for content editing.</target>
        </segment>
      </unit>
      <unit id="560">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
          <data id="id5">&lt;strong&gt;</data>
          <data id="id6">&lt;/strong&gt;</data>
          <data id="id7">&lt;strong&gt;</data>
          <data id="id8">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Classes in the <ph dataRef="id1" id="ph1" />AV Foundation<ph dataRef="id2" id="ph2" /> framework such as <ph dataRef="id3" id="ph3" />AVMutableComposition<ph dataRef="id4" id="ph4" />, <ph dataRef="id5" id="ph5" />AVMutableVideoComposition<ph dataRef="id6" id="ph6" />, and <ph dataRef="id7" id="ph7" />AVMutableAudioMix<ph dataRef="id8" id="ph8" /> can be used for content editing.</source>
          <target>Classes in the <ph dataRef="id1" id="ph1" />AV Foundation<ph dataRef="id2" id="ph2" /> framework such as <ph dataRef="id3" id="ph3" />AVMutableComposition<ph dataRef="id4" id="ph4" />, <ph dataRef="id5" id="ph5" />AVMutableVideoComposition<ph dataRef="id6" id="ph6" />, and <ph dataRef="id7" id="ph7" />AVMutableAudioMix<ph dataRef="id8" id="ph8" /> can be used for content editing.</target>
        </segment>
      </unit>
      <unit id="561">
        <originalData>
          <data id="id1">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/windows.media.editing.aspx"&gt;</data>
          <data id="id2">&lt;/a&gt;&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/windows.media.editing.mediacomposition.aspx"&gt;</data>
          <data id="id4">&lt;/a&gt;&lt;/strong&gt;</data>
          <data id="id5">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/windows.media.editing.mediaclip.aspx"&gt;</data>
          <data id="id6">&lt;/a&gt;&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You can use the <ph dataRef="id1" id="ph1" />Windows.Media.Editing<ph dataRef="id2" id="ph2" /> APIs such as <ph dataRef="id3" id="ph3" />MediaComposition<ph dataRef="id4" id="ph4" /> and <ph dataRef="id5" id="ph5" />MediaClip<ph dataRef="id6" id="ph6" /> to create media compositions from audio and video files.</source>
          <target>You can use the <ph dataRef="id1" id="ph1" />Windows.Media.Editing<ph dataRef="id2" id="ph2" /> APIs such as <ph dataRef="id3" id="ph3" />MediaComposition<ph dataRef="id4" id="ph4" /> and <ph dataRef="id5" id="ph5" />MediaClip<ph dataRef="id6" id="ph6" /> to create media compositions from audio and video files.</target>
        </segment>
      </unit>
      <unit id="562">
        <segment state="initial">
          <source>You are able to add video and image overlays, combine video clips, add background audio, and apply audio and video effects.</source>
          <target>You are able to add video and image overlays, combine video clips, add background audio, and apply audio and video effects.</target>
        </segment>
      </unit>
      <unit id="563">
        <segment state="initial">
          <source>Media compositions and editing</source>
          <target>Media compositions and editing</target>
        </segment>
      </unit>
      <unit id="564">
        <segment state="initial">
          <source>Sensors</source>
          <target>Sensors</target>
        </segment>
      </unit>
      <unit id="565">
        <segment state="initial">
          <source>General concept</source>
          <target>General concept</target>
        </segment>
      </unit>
      <unit id="566">
        <segment state="initial">
          <source>Android</source>
          <target>Android</target>
        </segment>
      </unit>
      <unit id="567">
        <segment state="initial">
          <source>iOS</source>
          <target>iOS</target>
        </segment>
      </unit>
      <unit id="568">
        <segment state="initial">
          <source>Windows 10 UWP</source>
          <target>Windows 10 UWP</target>
        </segment>
      </unit>
      <unit id="569">
        <segment state="initial">
          <source>Sensors.</source>
          <target>Sensors.</target>
        </segment>
      </unit>
      <unit id="570">
        <segment state="initial">
          <source>Detect device movement, position and environmental properties.</source>
          <target>Detect device movement, position and environmental properties.</target>
        </segment>
      </unit>
      <unit id="571">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
          <data id="id5">&lt;strong&gt;</data>
          <data id="id6">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>The <ph dataRef="id1" id="ph1" />sensor framework<ph dataRef="id2" id="ph2" /> is used to access hardware and software sensors with classes such as <ph dataRef="id3" id="ph3" />SensorManager<ph dataRef="id4" id="ph4" /> and <ph dataRef="id5" id="ph5" />SensorEvent<ph dataRef="id6" id="ph6" />.</source>
          <target>The <ph dataRef="id1" id="ph1" />sensor framework<ph dataRef="id2" id="ph2" /> is used to access hardware and software sensors with classes such as <ph dataRef="id3" id="ph3" />SensorManager<ph dataRef="id4" id="ph4" /> and <ph dataRef="id5" id="ph5" />SensorEvent<ph dataRef="id6" id="ph6" />.</target>
        </segment>
      </unit>
      <unit id="572">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>The <ph dataRef="id1" id="ph1" />Core Motion framework<ph dataRef="id2" id="ph2" /> is used to access raw and processed sensor data.</source>
          <target>The <ph dataRef="id1" id="ph1" />Core Motion framework<ph dataRef="id2" id="ph2" /> is used to access raw and processed sensor data.</target>
        </segment>
      </unit>
      <unit id="573">
        <originalData>
          <data id="id1">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/windows.devices.sensors.aspx"&gt;</data>
          <data id="id2">&lt;/a&gt;&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You can use classes in <ph dataRef="id1" id="ph1" />Windows.Devices.Sensors<ph dataRef="id2" id="ph2" /> to access sensor readings and events triggered when new reading data is received from the sensor.</source>
          <target>You can use classes in <ph dataRef="id1" id="ph1" />Windows.Devices.Sensors<ph dataRef="id2" id="ph2" /> to access sensor readings and events triggered when new reading data is received from the sensor.</target>
        </segment>
      </unit>
      <unit id="574">
        <segment state="initial">
          <source>Sensors</source>
          <target>Sensors</target>
        </segment>
      </unit>
      <unit id="575">
        <segment state="initial">
          <source>Location and mapping</source>
          <target>Location and mapping</target>
        </segment>
      </unit>
      <unit id="576">
        <segment state="initial">
          <source>General concept</source>
          <target>General concept</target>
        </segment>
      </unit>
      <unit id="577">
        <segment state="initial">
          <source>Android</source>
          <target>Android</target>
        </segment>
      </unit>
      <unit id="578">
        <segment state="initial">
          <source>iOS</source>
          <target>iOS</target>
        </segment>
      </unit>
      <unit id="579">
        <segment state="initial">
          <source>Windows 10 UWP</source>
          <target>Windows 10 UWP</target>
        </segment>
      </unit>
      <unit id="580">
        <segment state="initial">
          <source>Location.</source>
          <target>Location.</target>
        </segment>
      </unit>
      <unit id="581">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Finding the device's <ph dataRef="id1" id="ph1" />current<ph dataRef="id2" id="ph2" /> location and tracking <ph dataRef="id3" id="ph3" />changes<ph dataRef="id4" id="ph4" />.</source>
          <target>Finding the device's <ph dataRef="id1" id="ph1" />current<ph dataRef="id2" id="ph2" /> location and tracking <ph dataRef="id3" id="ph3" />changes<ph dataRef="id4" id="ph4" />.</target>
        </segment>
      </unit>
      <unit id="582">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
          <data id="id5">&lt;strong&gt;</data>
          <data id="id6">&lt;/strong&gt;</data>
          <data id="id7">&lt;strong&gt;</data>
          <data id="id8">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>The Google Play services location APIs provide high-level access to the <ph dataRef="id1" id="ph1" />last known location<ph dataRef="id2" id="ph2" /> with the <ph dataRef="id3" id="ph3" />fused location provider<ph dataRef="id4" id="ph4" /> using the <ph dataRef="id5" id="ph5" />getLastLocation<ph dataRef="id6" id="ph6" /> and <ph dataRef="id7" id="ph7" />requestLocationUpdates<ph dataRef="id8" id="ph8" /> methods.</source>
          <target>The Google Play services location APIs provide high-level access to the <ph dataRef="id1" id="ph1" />last known location<ph dataRef="id2" id="ph2" /> with the <ph dataRef="id3" id="ph3" />fused location provider<ph dataRef="id4" id="ph4" /> using the <ph dataRef="id5" id="ph5" />getLastLocation<ph dataRef="id6" id="ph6" /> and <ph dataRef="id7" id="ph7" />requestLocationUpdates<ph dataRef="id8" id="ph8" /> methods.</target>
        </segment>
      </unit>
      <unit id="583">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Low-level access is provided in the Android libraries with the <ph dataRef="id1" id="ph1" />LocationManager<ph dataRef="id2" id="ph2" />.</source>
          <target>Low-level access is provided in the Android libraries with the <ph dataRef="id1" id="ph1" />LocationManager<ph dataRef="id2" id="ph2" />.</target>
        </segment>
      </unit>
      <unit id="584">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt; &lt;strong&gt;</data>
          <data id="id3">&lt;/strong&gt;</data>
          <data id="id4">&lt;strong&gt;</data>
          <data id="id5">&lt;/strong&gt;</data>
          <data id="id6">&lt;strong&gt;</data>
          <data id="id7">&lt;/strong&gt;</data>
          <data id="id8">&lt;strong&gt;</data>
          <data id="id9">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>The <ph dataRef="id1" id="ph1" />Core Location<ph dataRef="id2" id="ph2" />CLLocationManager<ph dataRef="id3" id="ph3" /> class is used to monitor a device's location, with <ph dataRef="id4" id="ph4" />startUpdatingLocation<ph dataRef="id5" id="ph5" /> for the standard location service and <ph dataRef="id6" id="ph6" />startMonitoringSignificantLocationChanges<ph dataRef="id7" id="ph7" /> for the <ph dataRef="id8" id="ph8" />significant-change<ph dataRef="id9" id="ph9" /> location service.</source>
          <target>The <ph dataRef="id1" id="ph1" />Core Location<ph dataRef="id2" id="ph2" />CLLocationManager<ph dataRef="id3" id="ph3" /> class is used to monitor a device's location, with <ph dataRef="id4" id="ph4" />startUpdatingLocation<ph dataRef="id5" id="ph5" /> for the standard location service and <ph dataRef="id6" id="ph6" />startMonitoringSignificantLocationChanges<ph dataRef="id7" id="ph7" /> for the <ph dataRef="id8" id="ph8" />significant-change<ph dataRef="id9" id="ph9" /> location service.</target>
        </segment>
      </unit>
      <unit id="585">
        <originalData>
          <data id="id1">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/windows.devices.geolocation.aspx"&gt;</data>
          <data id="id2">&lt;/a&gt;&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You can track device location with classes in <ph dataRef="id1" id="ph1" />Windows.Devices.Geolocation<ph dataRef="id2" id="ph2" />.</source>
          <target>You can track device location with classes in <ph dataRef="id1" id="ph1" />Windows.Devices.Geolocation<ph dataRef="id2" id="ph2" />.</target>
        </segment>
      </unit>
      <unit id="586">
        <originalData>
          <data id="id1">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/br225537.aspx"&gt;</data>
          <data id="id2">&lt;/a&gt;&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Use <ph dataRef="id1" id="ph1" />Geolocator.GetGeopositionAsync<ph dataRef="id2" id="ph2" /> for a one-time reading.</source>
          <target>Use <ph dataRef="id1" id="ph1" />Geolocator.GetGeopositionAsync<ph dataRef="id2" id="ph2" /> for a one-time reading.</target>
        </segment>
      </unit>
      <unit id="587">
        <originalData>
          <data id="id1">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/windows.devices.geolocation.geolocator.positionchanged.aspx"&gt;</data>
          <data id="id2">&lt;/a&gt;&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Use <ph dataRef="id1" id="ph1" />Geolocator.PositionChanged<ph dataRef="id2" id="ph2" /> to obtain the location regularly using a timer, or be informed when the location has changed.</source>
          <target>Use <ph dataRef="id1" id="ph1" />Geolocator.PositionChanged<ph dataRef="id2" id="ph2" /> to obtain the location regularly using a timer, or be informed when the location has changed.</target>
        </segment>
      </unit>
      <unit id="588">
        <segment state="initial">
          <source>Get the user's location</source>
          <target>Get the user's location</target>
        </segment>
      </unit>
      <unit id="589">
        <segment state="initial">
          <source>Displaying maps.</source>
          <target>Displaying maps.</target>
        </segment>
      </unit>
      <unit id="590">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Displaying an <ph dataRef="id1" id="ph1" />interactive built-in map<ph dataRef="id2" id="ph2" /> and adding <ph dataRef="id3" id="ph3" />points of interest<ph dataRef="id4" id="ph4" />.</source>
          <target>Displaying an <ph dataRef="id1" id="ph1" />interactive built-in map<ph dataRef="id2" id="ph2" /> and adding <ph dataRef="id3" id="ph3" />points of interest<ph dataRef="id4" id="ph4" />.</target>
        </segment>
      </unit>
      <unit id="591">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
          <data id="id5">&lt;strong&gt;</data>
          <data id="id6">&lt;/strong&gt;</data>
          <data id="id7">&lt;strong&gt;</data>
          <data id="id8">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>The <ph dataRef="id1" id="ph1" />GoogleMap<ph dataRef="id2" id="ph2" />, <ph dataRef="id3" id="ph3" />MapFragment<ph dataRef="id4" id="ph4" />, and <ph dataRef="id5" id="ph5" />MapView<ph dataRef="id6" id="ph6" /> classes within the <ph dataRef="id7" id="ph7" />Google Maps Android API<ph dataRef="id8" id="ph8" /> allow maps to be embedded in apps.</source>
          <target>The <ph dataRef="id1" id="ph1" />GoogleMap<ph dataRef="id2" id="ph2" />, <ph dataRef="id3" id="ph3" />MapFragment<ph dataRef="id4" id="ph4" />, and <ph dataRef="id5" id="ph5" />MapView<ph dataRef="id6" id="ph6" /> classes within the <ph dataRef="id7" id="ph7" />Google Maps Android API<ph dataRef="id8" id="ph8" /> allow maps to be embedded in apps.</target>
        </segment>
      </unit>
      <unit id="592">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Points of interest can be displayed using <ph dataRef="id1" id="ph1" />markers<ph dataRef="id2" id="ph2" /> and the customizable <ph dataRef="id3" id="ph3" />Marker<ph dataRef="id4" id="ph4" /> class.</source>
          <target>Points of interest can be displayed using <ph dataRef="id1" id="ph1" />markers<ph dataRef="id2" id="ph2" /> and the customizable <ph dataRef="id3" id="ph3" />Marker<ph dataRef="id4" id="ph4" /> class.</target>
        </segment>
      </unit>
      <unit id="593">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Maps are embedded into iOS apps with the <ph dataRef="id1" id="ph1" />MKMapView<ph dataRef="id2" id="ph2" /> class in the <ph dataRef="id3" id="ph3" />MapKit framework<ph dataRef="id4" id="ph4" />.</source>
          <target>Maps are embedded into iOS apps with the <ph dataRef="id1" id="ph1" />MKMapView<ph dataRef="id2" id="ph2" /> class in the <ph dataRef="id3" id="ph3" />MapKit framework<ph dataRef="id4" id="ph4" />.</target>
        </segment>
      </unit>
      <unit id="594">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
          <data id="id2">&lt;strong&gt;</data>
          <data id="id3">&lt;/strong&gt;</data>
          <data id="id4">&lt;strong&gt;</data>
          <data id="id5">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Annotations<ph dataRef="id1" id="ph1" /> can be added to apps to display points of interest using object classes such as <ph dataRef="id2" id="ph2" />MKPointAnnotation<ph dataRef="id3" id="ph3" /> and view classes such as <ph dataRef="id4" id="ph4" />MKPinAnnotationView<ph dataRef="id5" id="ph5" />.</source>
          <target>Annotations<ph dataRef="id1" id="ph1" /> can be added to apps to display points of interest using object classes such as <ph dataRef="id2" id="ph2" />MKPointAnnotation<ph dataRef="id3" id="ph3" /> and view classes such as <ph dataRef="id4" id="ph4" />MKPinAnnotationView<ph dataRef="id5" id="ph5" />.</target>
        </segment>
      </unit>
      <unit id="595">
        <originalData>
          <data id="id1">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.maps.mapcontrol.aspx"&gt;</data>
          <data id="id2">&lt;/a&gt;&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You can embed maps in your apps using the built-in <ph dataRef="id1" id="ph1" />MapControl<ph dataRef="id2" id="ph2" /> XAML control which provides 2D, 3D, and streetside views.</source>
          <target>You can embed maps in your apps using the built-in <ph dataRef="id1" id="ph1" />MapControl<ph dataRef="id2" id="ph2" /> XAML control which provides 2D, 3D, and streetside views.</target>
        </segment>
      </unit>
      <unit id="596">
        <originalData>
          <data id="id1">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.maps.mapicon.aspx"&gt;</data>
          <data id="id2">&lt;/a&gt;&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.maps.mappolygon.aspx"&gt;</data>
          <data id="id4">&lt;/a&gt;&lt;/strong&gt;</data>
          <data id="id5">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.maps.mappolyline.aspx"&gt;</data>
          <data id="id6">&lt;/a&gt;&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You can add points of interest with a pushpin, image, or shape using classes such as <ph dataRef="id1" id="ph1" />MapIcon<ph dataRef="id2" id="ph2" />, <ph dataRef="id3" id="ph3" />MapPolygon<ph dataRef="id4" id="ph4" /> and <ph dataRef="id5" id="ph5" />MapPolyline<ph dataRef="id6" id="ph6" />.</source>
          <target>You can add points of interest with a pushpin, image, or shape using classes such as <ph dataRef="id1" id="ph1" />MapIcon<ph dataRef="id2" id="ph2" />, <ph dataRef="id3" id="ph3" />MapPolygon<ph dataRef="id4" id="ph4" /> and <ph dataRef="id5" id="ph5" />MapPolyline<ph dataRef="id6" id="ph6" />.</target>
        </segment>
      </unit>
      <unit id="597">
        <segment state="initial">
          <source>Display maps with 2D, 3D, and Streetside views</source>
          <target>Display maps with 2D, 3D, and Streetside views</target>
        </segment>
      </unit>
      <unit id="598">
        <segment state="initial">
          <source>Display points of interest (POI) on a map</source>
          <target>Display points of interest (POI) on a map</target>
        </segment>
      </unit>
      <unit id="599">
        <segment state="initial">
          <source>Geofencing.</source>
          <target>Geofencing.</target>
        </segment>
      </unit>
      <unit id="600">
        <segment state="initial">
          <source>Monitor the entering and leaving of a particular geographic region.</source>
          <target>Monitor the entering and leaving of a particular geographic region.</target>
        </segment>
      </unit>
      <unit id="601">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Geofences are monitored using the <ph dataRef="id1" id="ph1" />Location Services<ph dataRef="id2" id="ph2" /> in the Google Play Services SDK.</source>
          <target>Geofences are monitored using the <ph dataRef="id1" id="ph1" />Location Services<ph dataRef="id2" id="ph2" /> in the Google Play Services SDK.</target>
        </segment>
      </unit>
      <unit id="602">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Regions are monitored with the <ph dataRef="id1" id="ph1" />CLCircularRegion<ph dataRef="id2" id="ph2" /> class and registered with the <ph dataRef="id3" id="ph3" />CLLocationManager.startMonitoringForRegion:<ph dataRef="id4" id="ph4" />.</source>
          <target>Regions are monitored with the <ph dataRef="id1" id="ph1" />CLCircularRegion<ph dataRef="id2" id="ph2" /> class and registered with the <ph dataRef="id3" id="ph3" />CLLocationManager.startMonitoringForRegion:<ph dataRef="id4" id="ph4" />.</target>
        </segment>
      </unit>
      <unit id="603">
        <originalData>
          <data id="id1">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/windows.devices.geolocation.geofencing.geofence.aspx"&gt;</data>
          <data id="id2">&lt;/a&gt;&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You can create a geofence with the <ph dataRef="id1" id="ph1" />Geofence<ph dataRef="id2" id="ph2" /> class and define your <ph dataRef="id3" id="ph3" />monitored states<ph dataRef="id4" id="ph4" /> such as entering or leaving a region.</source>
          <target>You can create a geofence with the <ph dataRef="id1" id="ph1" />Geofence<ph dataRef="id2" id="ph2" /> class and define your <ph dataRef="id3" id="ph3" />monitored states<ph dataRef="id4" id="ph4" /> such as entering or leaving a region.</target>
        </segment>
      </unit>
      <unit id="604">
        <originalData>
          <data id="id1">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/windows.devices.geolocation.geofencing.geofencemonitor.aspx"&gt;</data>
          <data id="id2">&lt;/a&gt;&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/windows.applicationmodel.background.locationtrigger.aspx"&gt;</data>
          <data id="id4">&lt;/a&gt;&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Handle geofence events in the foreground with the <ph dataRef="id1" id="ph1" />GeofenceMonitor class<ph dataRef="id2" id="ph2" />, and in the background with the <ph dataRef="id3" id="ph3" />LocationTrigger background class<ph dataRef="id4" id="ph4" />.</source>
          <target>Handle geofence events in the foreground with the <ph dataRef="id1" id="ph1" />GeofenceMonitor class<ph dataRef="id2" id="ph2" />, and in the background with the <ph dataRef="id3" id="ph3" />LocationTrigger background class<ph dataRef="id4" id="ph4" />.</target>
        </segment>
      </unit>
      <unit id="605">
        <segment state="initial">
          <source>Set up a geofence</source>
          <target>Set up a geofence</target>
        </segment>
      </unit>
      <unit id="606">
        <segment state="initial">
          <source>Geocoding and reverse geocoding.</source>
          <target>Geocoding and reverse geocoding.</target>
        </segment>
      </unit>
      <unit id="607">
        <segment state="initial">
          <source>Converting addresses to geographic locations (geocoding) and converting geographic locations to addresses (reverse geocoding).</source>
          <target>Converting addresses to geographic locations (geocoding) and converting geographic locations to addresses (reverse geocoding).</target>
        </segment>
      </unit>
      <unit id="608">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>The <ph dataRef="id1" id="ph1" />Geocoder<ph dataRef="id2" id="ph2" /> class is used for geocoding and reverse geocoding.</source>
          <target>The <ph dataRef="id1" id="ph1" />Geocoder<ph dataRef="id2" id="ph2" /> class is used for geocoding and reverse geocoding.</target>
        </segment>
      </unit>
      <unit id="609">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>The <ph dataRef="id1" id="ph1" />CLGeocoder<ph dataRef="id2" id="ph2" /> class is used for geocoding.</source>
          <target>The <ph dataRef="id1" id="ph1" />CLGeocoder<ph dataRef="id2" id="ph2" /> class is used for geocoding.</target>
        </segment>
      </unit>
      <unit id="610">
        <originalData>
          <data id="id1">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/windows.services.maps.maplocationfinder.aspx"&gt;</data>
          <data id="id2">&lt;/a&gt;&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/windows.services.maps.aspx"&gt;</data>
          <data id="id4">&lt;/a&gt;&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You can perform geocoding using the <ph dataRef="id1" id="ph1" />MapLocationFinder class<ph dataRef="id2" id="ph2" /> in <ph dataRef="id3" id="ph3" />Windows.Services.Maps<ph dataRef="id4" id="ph4" />.</source>
          <target>You can perform geocoding using the <ph dataRef="id1" id="ph1" />MapLocationFinder class<ph dataRef="id2" id="ph2" /> in <ph dataRef="id3" id="ph3" />Windows.Services.Maps<ph dataRef="id4" id="ph4" />.</target>
        </segment>
      </unit>
      <unit id="611">
        <originalData>
          <data id="id1">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/windows.services.maps.maplocationfinder.findlocationsasync.aspx"&gt;</data>
          <data id="id2">&lt;/a&gt;&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/windows.services.maps.maplocationfinder.findlocationsatasync.aspx"&gt;</data>
          <data id="id4">&lt;/a&gt;&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You use <ph dataRef="id1" id="ph1" />FindLocationsAsync<ph dataRef="id2" id="ph2" /> for geocoding and <ph dataRef="id3" id="ph3" />FindLocationsAtAsync<ph dataRef="id4" id="ph4" /> for reverse geocoding.</source>
          <target>You use <ph dataRef="id1" id="ph1" />FindLocationsAsync<ph dataRef="id2" id="ph2" /> for geocoding and <ph dataRef="id3" id="ph3" />FindLocationsAtAsync<ph dataRef="id4" id="ph4" /> for reverse geocoding.</target>
        </segment>
      </unit>
      <unit id="612">
        <segment state="initial">
          <source>Perform geocoding and reverse geocoding</source>
          <target>Perform geocoding and reverse geocoding</target>
        </segment>
      </unit>
      <unit id="613">
        <segment state="initial">
          <source>Routes and directions.</source>
          <target>Routes and directions.</target>
        </segment>
      </unit>
      <unit id="614">
        <segment state="initial">
          <source>Providing routes, distances, and directions between two geographical locations.</source>
          <target>Providing routes, distances, and directions between two geographical locations.</target>
        </segment>
      </unit>
      <unit id="615">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Google provides the web service <ph dataRef="id1" id="ph1" />Google Maps Directions API<ph dataRef="id2" id="ph2" /> which can be used on Android although no SDK is provided.</source>
          <target>Google provides the web service <ph dataRef="id1" id="ph1" />Google Maps Directions API<ph dataRef="id2" id="ph2" /> which can be used on Android although no SDK is provided.</target>
        </segment>
      </unit>
      <unit id="616">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Map Kit provides the <ph dataRef="id1" id="ph1" />MKDirections<ph dataRef="id2" id="ph2" /> API which can be used to fetch information about a route and directions.</source>
          <target>Map Kit provides the <ph dataRef="id1" id="ph1" />MKDirections<ph dataRef="id2" id="ph2" /> API which can be used to fetch information about a route and directions.</target>
        </segment>
      </unit>
      <unit id="617">
        <originalData>
          <data id="id1">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/windows.services.maps.maproutefinder.aspx"&gt;</data>
          <data id="id2">&lt;/a&gt;&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/windows.services.maps.aspx"&gt;</data>
          <data id="id4">&lt;/a&gt;&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You can request a walking or driving route with the <ph dataRef="id1" id="ph1" />MapRouteFinder<ph dataRef="id2" id="ph2" /> class in <ph dataRef="id3" id="ph3" />Windows.Services.Maps<ph dataRef="id4" id="ph4" />.</source>
          <target>You can request a walking or driving route with the <ph dataRef="id1" id="ph1" />MapRouteFinder<ph dataRef="id2" id="ph2" /> class in <ph dataRef="id3" id="ph3" />Windows.Services.Maps<ph dataRef="id4" id="ph4" />.</target>
        </segment>
      </unit>
      <unit id="618">
        <originalData>
          <data id="id1">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/windows.services.maps.maproute.aspx"&gt;</data>
          <data id="id2">&lt;/a&gt;&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Routes are returned as a <ph dataRef="id1" id="ph1" />MapRoute<ph dataRef="id2" id="ph2" /> instance which can be easily shown on a MapControl.</source>
          <target>Routes are returned as a <ph dataRef="id1" id="ph1" />MapRoute<ph dataRef="id2" id="ph2" /> instance which can be easily shown on a MapControl.</target>
        </segment>
      </unit>
      <unit id="619">
        <originalData>
          <data id="id1">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/windows.services.maps.maproutemaneuver.aspx"&gt;</data>
          <data id="id2">&lt;/a&gt;&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Directions are returned inside the <ph dataRef="id1" id="ph1" />MapRouteManeuver<ph dataRef="id2" id="ph2" /> object.</source>
          <target>Directions are returned inside the <ph dataRef="id1" id="ph1" />MapRouteManeuver<ph dataRef="id2" id="ph2" /> object.</target>
        </segment>
      </unit>
      <unit id="620">
        <segment state="initial">
          <source>Display routes and directions on a map</source>
          <target>Display routes and directions on a map</target>
        </segment>
      </unit>
      <unit id="621">
        <segment state="initial">
          <source>App-to-app communication</source>
          <target>App-to-app communication</target>
        </segment>
      </unit>
      <unit id="622">
        <segment state="initial">
          <source>General concept</source>
          <target>General concept</target>
        </segment>
      </unit>
      <unit id="623">
        <segment state="initial">
          <source>Android</source>
          <target>Android</target>
        </segment>
      </unit>
      <unit id="624">
        <segment state="initial">
          <source>iOS</source>
          <target>iOS</target>
        </segment>
      </unit>
      <unit id="625">
        <segment state="initial">
          <source>Windows 10 UWP</source>
          <target>Windows 10 UWP</target>
        </segment>
      </unit>
      <unit id="626">
        <segment state="initial">
          <source>Invoking another app.</source>
          <target>Invoking another app.</target>
        </segment>
      </unit>
      <unit id="627">
        <segment state="initial">
          <source>Launching another app, and optionally sharing data such as links, text, photos, videos, and files.</source>
          <target>Launching another app, and optionally sharing data such as links, text, photos, videos, and files.</target>
        </segment>
      </unit>
      <unit id="628">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
          <data id="id5">&lt;strong&gt;</data>
          <data id="id6">&lt;/strong&gt;</data>
          <data id="id7">&lt;strong&gt;</data>
          <data id="id8">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>An <ph dataRef="id1" id="ph1" />implicit intent<ph dataRef="id2" id="ph2" /> is used to launch another app, by defining an <ph dataRef="id3" id="ph3" />action<ph dataRef="id4" id="ph4" /> and optional data in an <ph dataRef="id5" id="ph5" />Intent<ph dataRef="id6" id="ph6" /> and calling it with <ph dataRef="id7" id="ph7" />startActivityForResult<ph dataRef="id8" id="ph8" />.</source>
          <target>An <ph dataRef="id1" id="ph1" />implicit intent<ph dataRef="id2" id="ph2" /> is used to launch another app, by defining an <ph dataRef="id3" id="ph3" />action<ph dataRef="id4" id="ph4" /> and optional data in an <ph dataRef="id5" id="ph5" />Intent<ph dataRef="id6" id="ph6" /> and calling it with <ph dataRef="id7" id="ph7" />startActivityForResult<ph dataRef="id8" id="ph8" />.</target>
        </segment>
      </unit>
      <unit id="629">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>App extensions<ph dataRef="id1" id="ph1" /> can be used to provide access to app data to another app.</source>
          <target>App extensions<ph dataRef="id1" id="ph1" /> can be used to provide access to app data to another app.</target>
        </segment>
      </unit>
      <unit id="630">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>URL schemes<ph dataRef="id1" id="ph1" /> enable a URL to be passed to another app.</source>
          <target>URL schemes<ph dataRef="id1" id="ph1" /> enable a URL to be passed to another app.</target>
        </segment>
      </unit>
      <unit id="631">
        <originalData>
          <data id="id1">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/windows.system.launcher.launchuriasync.aspx"&gt;</data>
          <data id="id2">&lt;/a&gt;&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/windows.system.launcher.launchuriforresultsasync.aspx"&gt;</data>
          <data id="id4">&lt;/a&gt;&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You can launch another app which has registered for a URI with <ph dataRef="id1" id="ph1" />Launcher.LaunchUriAsync<ph dataRef="id2" id="ph2" />, or <ph dataRef="id3" id="ph3" />Launcher.LaunchUriForResultsAsync<ph dataRef="id4" id="ph4" /> to launch for results and get data back from the launched app.</source>
          <target>You can launch another app which has registered for a URI with <ph dataRef="id1" id="ph1" />Launcher.LaunchUriAsync<ph dataRef="id2" id="ph2" />, or <ph dataRef="id3" id="ph3" />Launcher.LaunchUriForResultsAsync<ph dataRef="id4" id="ph4" /> to launch for results and get data back from the launched app.</target>
        </segment>
      </unit>
      <unit id="632">
        <originalData>
          <data id="id1">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/hh701471.aspx"&gt;</data>
          <data id="id2">&lt;/a&gt;&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You can use <ph dataRef="id1" id="ph1" />Launcher.LaunchFileAsync<ph dataRef="id2" id="ph2" /> to pass a file to another app to handle.</source>
          <target>You can use <ph dataRef="id1" id="ph1" />Launcher.LaunchFileAsync<ph dataRef="id2" id="ph2" /> to pass a file to another app to handle.</target>
        </segment>
      </unit>
      <unit id="633">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You can use a <ph dataRef="id1" id="ph1" />share contract<ph dataRef="id2" id="ph2" /> to easily share data between apps.</source>
          <target>You can use a <ph dataRef="id1" id="ph1" />share contract<ph dataRef="id2" id="ph2" /> to easily share data between apps.</target>
        </segment>
      </unit>
      <unit id="634">
        <segment state="initial">
          <source>Launch the default app for a URI</source>
          <target>Launch the default app for a URI</target>
        </segment>
      </unit>
      <unit id="635">
        <segment state="initial">
          <source>Launch an app for results</source>
          <target>Launch an app for results</target>
        </segment>
      </unit>
      <unit id="636">
        <segment state="initial">
          <source>Launch the default app for a file</source>
          <target>Launch the default app for a file</target>
        </segment>
      </unit>
      <unit id="637">
        <segment state="initial">
          <source>Share data</source>
          <target>Share data</target>
        </segment>
      </unit>
      <unit id="638">
        <segment state="initial">
          <source>Allowing your app to be invoked.</source>
          <target>Allowing your app to be invoked.</target>
        </segment>
      </unit>
      <unit id="639">
        <segment state="initial">
          <source>Allow your app to respond to a request from another app.</source>
          <target>Allow your app to respond to a request from another app.</target>
        </segment>
      </unit>
      <unit id="640">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Apps register an <ph dataRef="id1" id="ph1" />intent handling activity<ph dataRef="id2" id="ph2" /> with an <ph dataRef="id3" id="ph3" />intent filter<ph dataRef="id4" id="ph4" /> to respond to an implicit intent from another app.</source>
          <target>Apps register an <ph dataRef="id1" id="ph1" />intent handling activity<ph dataRef="id2" id="ph2" /> with an <ph dataRef="id3" id="ph3" />intent filter<ph dataRef="id4" id="ph4" /> to respond to an implicit intent from another app.</target>
        </segment>
      </unit>
      <unit id="641">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Packaging an <ph dataRef="id1" id="ph1" />app extension<ph dataRef="id2" id="ph2" /> enables data to be shared with other apps.</source>
          <target>Packaging an <ph dataRef="id1" id="ph1" />app extension<ph dataRef="id2" id="ph2" /> enables data to be shared with other apps.</target>
        </segment>
      </unit>
      <unit id="642">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Apps can register a <ph dataRef="id1" id="ph1" />custom URL scheme<ph dataRef="id2" id="ph2" /> using the <ph dataRef="id3" id="ph3" />CFBundleURLTypes<ph dataRef="id4" id="ph4" /> key in Info.plist.</source>
          <target>Apps can register a <ph dataRef="id1" id="ph1" />custom URL scheme<ph dataRef="id2" id="ph2" /> using the <ph dataRef="id3" id="ph3" />CFBundleURLTypes<ph dataRef="id4" id="ph4" /> key in Info.plist.</target>
        </segment>
      </unit>
      <unit id="643">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/windows.applicationmodel.activation.activationkind.aspx#Protocol"&gt;</data>
          <data id="id4">&lt;/a&gt;&lt;/strong&gt;</data>
          <data id="id5">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.application.onactivated.aspx"&gt;</data>
          <data id="id6">&lt;/a&gt;&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You can register your app to be the default handler for a <ph dataRef="id1" id="ph1" />URI scheme name<ph dataRef="id2" id="ph2" /> by registering a <ph dataRef="id3" id="ph3" />protocol<ph dataRef="id4" id="ph4" /> in the package manifest and updating the <ph dataRef="id5" id="ph5" />Application.OnActivated<ph dataRef="id6" id="ph6" /> event handler, optionally returning results.</source>
          <target>You can register your app to be the default handler for a <ph dataRef="id1" id="ph1" />URI scheme name<ph dataRef="id2" id="ph2" /> by registering a <ph dataRef="id3" id="ph3" />protocol<ph dataRef="id4" id="ph4" /> in the package manifest and updating the <ph dataRef="id5" id="ph5" />Application.OnActivated<ph dataRef="id6" id="ph6" /> event handler, optionally returning results.</target>
        </segment>
      </unit>
      <unit id="644">
        <originalData>
          <data id="id1">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.application.onfileactivated.aspx"&gt;</data>
          <data id="id2">&lt;/a&gt;&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>In the same way you can register your app to be the default handler for certain file types by adding a declaration in the package manifest and handling the <ph dataRef="id1" id="ph1" />Application.OnFileActivated<ph dataRef="id2" id="ph2" /> event.</source>
          <target>In the same way you can register your app to be the default handler for certain file types by adding a declaration in the package manifest and handling the <ph dataRef="id1" id="ph1" />Application.OnFileActivated<ph dataRef="id2" id="ph2" /> event.</target>
        </segment>
      </unit>
      <unit id="645">
        <originalData>
          <data id="id1">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.application.onsharetargetactivated.aspx"&gt;</data>
          <data id="id2">&lt;/a&gt;&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You can handle share contract requests by registering your app as a share target in the manifest and handling the <ph dataRef="id1" id="ph1" />Application.OnShareTargetActivated<ph dataRef="id2" id="ph2" /> event.</source>
          <target>You can handle share contract requests by registering your app as a share target in the manifest and handling the <ph dataRef="id1" id="ph1" />Application.OnShareTargetActivated<ph dataRef="id2" id="ph2" /> event.</target>
        </segment>
      </unit>
      <unit id="646">
        <segment state="initial">
          <source>Launch an app for results</source>
          <target>Launch an app for results</target>
        </segment>
      </unit>
      <unit id="647">
        <segment state="initial">
          <source>Handle file activation</source>
          <target>Handle file activation</target>
        </segment>
      </unit>
      <unit id="648">
        <segment state="initial">
          <source>Receive data</source>
          <target>Receive data</target>
        </segment>
      </unit>
      <unit id="649">
        <segment state="initial">
          <source>Copy and paste.</source>
          <target>Copy and paste.</target>
        </segment>
      </unit>
      <unit id="650">
        <segment state="initial">
          <source>Copy and pasting text and other content between apps.</source>
          <target>Copy and pasting text and other content between apps.</target>
        </segment>
      </unit>
      <unit id="651">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
          <data id="id5">&lt;strong&gt;</data>
          <data id="id6">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>The <ph dataRef="id1" id="ph1" />clipboard framework<ph dataRef="id2" id="ph2" /> can be used to implement copy and paste with the <ph dataRef="id3" id="ph3" />ClipboardManager<ph dataRef="id4" id="ph4" /> and <ph dataRef="id5" id="ph5" />ClipData<ph dataRef="id6" id="ph6" /> classes.</source>
          <target>The <ph dataRef="id1" id="ph1" />clipboard framework<ph dataRef="id2" id="ph2" /> can be used to implement copy and paste with the <ph dataRef="id3" id="ph3" />ClipboardManager<ph dataRef="id4" id="ph4" /> and <ph dataRef="id5" id="ph5" />ClipData<ph dataRef="id6" id="ph6" /> classes.</target>
        </segment>
      </unit>
      <unit id="652">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
          <data id="id5">&lt;strong&gt;</data>
          <data id="id6">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>The <ph dataRef="id1" id="ph1" />UIPasteboard<ph dataRef="id2" id="ph2" />, <ph dataRef="id3" id="ph3" />UIMenuController<ph dataRef="id4" id="ph4" />, and <ph dataRef="id5" id="ph5" />UIResponderStandardEditActions<ph dataRef="id6" id="ph6" /> can be used to implement copy and paste.</source>
          <target>The <ph dataRef="id1" id="ph1" />UIPasteboard<ph dataRef="id2" id="ph2" />, <ph dataRef="id3" id="ph3" />UIMenuController<ph dataRef="id4" id="ph4" />, and <ph dataRef="id5" id="ph5" />UIResponderStandardEditActions<ph dataRef="id6" id="ph6" /> can be used to implement copy and paste.</target>
        </segment>
      </unit>
      <unit id="653">
        <segment state="initial">
          <source>Many default XAML controls already support copy and paste.</source>
          <target>Many default XAML controls already support copy and paste.</target>
        </segment>
      </unit>
      <unit id="654">
        <originalData>
          <data id="id1">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/windows.applicationmodel.datatransfer.datapackage.aspx"&gt;</data>
          <data id="id2">&lt;/a&gt;&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/xaml/windows.applicationmodel.datatransfer.clipboard.aspx"&gt;</data>
          <data id="id4">&lt;/a&gt;&lt;/strong&gt;</data>
          <data id="id5">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/br205967"&gt;</data>
          <data id="id6">&lt;/a&gt;&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You can implement copy and paste yourself using the <ph dataRef="id1" id="ph1" />DataPackage<ph dataRef="id2" id="ph2" /> and <ph dataRef="id3" id="ph3" />Clipboard<ph dataRef="id4" id="ph4" /> classes in <ph dataRef="id5" id="ph5" />Windows.ApplicationModel.DataTransfer<ph dataRef="id6" id="ph6" />.</source>
          <target>You can implement copy and paste yourself using the <ph dataRef="id1" id="ph1" />DataPackage<ph dataRef="id2" id="ph2" /> and <ph dataRef="id3" id="ph3" />Clipboard<ph dataRef="id4" id="ph4" /> classes in <ph dataRef="id5" id="ph5" />Windows.ApplicationModel.DataTransfer<ph dataRef="id6" id="ph6" />.</target>
        </segment>
      </unit>
      <unit id="655">
        <segment state="initial">
          <source>Copy and paste</source>
          <target>Copy and paste</target>
        </segment>
      </unit>
      <unit id="656">
        <segment state="initial">
          <source>Drag and drop.</source>
          <target>Drag and drop.</target>
        </segment>
      </unit>
      <unit id="657">
        <segment state="initial">
          <source>Dragging and dropping content between apps.</source>
          <target>Dragging and dropping content between apps.</target>
        </segment>
      </unit>
      <unit id="658">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Drag and drop can be implemented within a single application by using the <ph dataRef="id1" id="ph1" />Android drag/drop framework<ph dataRef="id2" id="ph2" />.</source>
          <target>Drag and drop can be implemented within a single application by using the <ph dataRef="id1" id="ph1" />Android drag/drop framework<ph dataRef="id2" id="ph2" />.</target>
        </segment>
      </unit>
      <unit id="659">
        <segment state="initial">
          <source>No high-level drag and drop APIs are provided by iOS.</source>
          <target>No high-level drag and drop APIs are provided by iOS.</target>
        </segment>
      </unit>
      <unit id="660">
        <segment state="initial">
          <source>You can implement dragging and dropping in your app to enable app-to-app, desktop-to-app, and app-to-desktop drag and drop capabilities.</source>
          <target>You can implement dragging and dropping in your app to enable app-to-app, desktop-to-app, and app-to-desktop drag and drop capabilities.</target>
        </segment>
      </unit>
      <unit id="661">
        <originalData>
          <data id="id1">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.uielement.allowdrop.aspx"&gt;</data>
          <data id="id2">&lt;/a&gt;&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.uielement.candrag.aspx"&gt;</data>
          <data id="id4">&lt;/a&gt;&lt;/strong&gt;</data>
          <data id="id5">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.uielement.dragover.aspx"&gt;</data>
          <data id="id6">&lt;/a&gt;&lt;/strong&gt;</data>
          <data id="id7">&lt;strong&gt;&lt;a href="https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.uielement.drop.aspx"&gt;</data>
          <data id="id8">&lt;/a&gt;&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You implement drag and drop support in the UIElement class with the <ph dataRef="id1" id="ph1" />AllowDrop<ph dataRef="id2" id="ph2" />, and <ph dataRef="id3" id="ph3" />CanDrag<ph dataRef="id4" id="ph4" /> properties, and the <ph dataRef="id5" id="ph5" />DragOver<ph dataRef="id6" id="ph6" />, and <ph dataRef="id7" id="ph7" />Drop<ph dataRef="id8" id="ph8" /> events.</source>
          <target>You implement drag and drop support in the UIElement class with the <ph dataRef="id1" id="ph1" />AllowDrop<ph dataRef="id2" id="ph2" />, and <ph dataRef="id3" id="ph3" />CanDrag<ph dataRef="id4" id="ph4" /> properties, and the <ph dataRef="id5" id="ph5" />DragOver<ph dataRef="id6" id="ph6" />, and <ph dataRef="id7" id="ph7" />Drop<ph dataRef="id8" id="ph8" /> events.</target>
        </segment>
      </unit>
      <unit id="662">
        <segment state="initial">
          <source>Drag and drop</source>
          <target>Drag and drop</target>
        </segment>
      </unit>
      <unit id="663">
        <segment state="initial">
          <source>Software design</source>
          <target>Software design</target>
        </segment>
      </unit>
      <unit id="664">
        <segment state="initial">
          <source>General concept</source>
          <target>General concept</target>
        </segment>
      </unit>
      <unit id="665">
        <segment state="initial">
          <source>Android</source>
          <target>Android</target>
        </segment>
      </unit>
      <unit id="666">
        <segment state="initial">
          <source>iOS</source>
          <target>iOS</target>
        </segment>
      </unit>
      <unit id="667">
        <segment state="initial">
          <source>Windows 10 UWP</source>
          <target>Windows 10 UWP</target>
        </segment>
      </unit>
      <unit id="668">
        <segment state="initial">
          <source>Software design patterns.</source>
          <target>Software design patterns.</target>
        </segment>
      </unit>
      <unit id="669">
        <segment state="initial">
          <source>Recommended or well-used patterns for the platform.</source>
          <target>Recommended or well-used patterns for the platform.</target>
        </segment>
      </unit>
      <unit id="670">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>No formal pattern has been recommended or provided for Android development, although the beta Data Binding Framework may enable more widespread use of the <ph dataRef="id1" id="ph1" />Model-View-ViewModel (MVVM)<ph dataRef="id2" id="ph2" /> pattern.</source>
          <target>No formal pattern has been recommended or provided for Android development, although the beta Data Binding Framework may enable more widespread use of the <ph dataRef="id1" id="ph1" />Model-View-ViewModel (MVVM)<ph dataRef="id2" id="ph2" /> pattern.</target>
        </segment>
      </unit>
      <unit id="671">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>A number of third party articles and frameworks recommend the <ph dataRef="id1" id="ph1" />Model-View-Presenter (MVP)<ph dataRef="id2" id="ph2" /> and <ph dataRef="id3" id="ph3" />MVVM<ph dataRef="id4" id="ph4" /> approaches.</source>
          <target>A number of third party articles and frameworks recommend the <ph dataRef="id1" id="ph1" />Model-View-Presenter (MVP)<ph dataRef="id2" id="ph2" /> and <ph dataRef="id3" id="ph3" />MVVM<ph dataRef="id4" id="ph4" /> approaches.</target>
        </segment>
      </unit>
      <unit id="672">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Model-View-Controller (MVC)<ph dataRef="id1" id="ph1" /> is a common pattern used with iOS and is integrated into the platform.</source>
          <target>Model-View-Controller (MVC)<ph dataRef="id1" id="ph1" /> is a common pattern used with iOS and is integrated into the platform.</target>
        </segment>
      </unit>
      <unit id="673">
        <segment state="initial">
          <source>You are not limited towards a specific pattern when building for UWP.</source>
          <target>You are not limited towards a specific pattern when building for UWP.</target>
        </segment>
      </unit>
      <unit id="674">
        <originalData>
          <data id="id1">&lt;a href="https://msdn.microsoft.com/library/windows/apps/mt210947.aspx"&gt;</data>
          <data id="id2">&lt;/a&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You can use the built-in <ph dataRef="id1" id="ph1" />data binding<ph dataRef="id2" id="ph2" /> pattern to ensure clean separation of data concerns and UI concerns, and avoid having to code up UI event handlers which then update property values.</source>
          <target>You can use the built-in <ph dataRef="id1" id="ph1" />data binding<ph dataRef="id2" id="ph2" /> pattern to ensure clean separation of data concerns and UI concerns, and avoid having to code up UI event handlers which then update property values.</target>
        </segment>
      </unit>
      <unit id="675">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;a href="https://mvvmlight.codeplex.com/"&gt;</data>
          <data id="id4">&lt;/a&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You can extend data binding to follow the <ph dataRef="id1" id="ph1" />Model-View-ViewModel (MVVM)<ph dataRef="id2" id="ph2" /> pattern, either by making use of third-party MVVM libraries such as <ph dataRef="id3" id="ph3" />MVVM Light Toolkit<ph dataRef="id4" id="ph4" />, or rolling your own and keeping logic out of code-behind.</source>
          <target>You can extend data binding to follow the <ph dataRef="id1" id="ph1" />Model-View-ViewModel (MVVM)<ph dataRef="id2" id="ph2" /> pattern, either by making use of third-party MVVM libraries such as <ph dataRef="id3" id="ph3" />MVVM Light Toolkit<ph dataRef="id4" id="ph4" />, or rolling your own and keeping logic out of code-behind.</target>
        </segment>
      </unit>
      <unit id="676">
        <segment state="initial">
          <source>The MVVM Pattern</source>
          <target>The MVVM Pattern</target>
        </segment>
      </unit>
      <unit id="677">
        <segment state="initial">
          <source>Template 10 Visual Studio project templates</source>
          <target>Template 10 Visual Studio project templates</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>