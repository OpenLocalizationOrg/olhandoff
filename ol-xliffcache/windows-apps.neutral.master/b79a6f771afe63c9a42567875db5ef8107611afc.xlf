<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="zh-cn" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">windows-apps-src\controls-and-patterns\tiles-and-notifications-choosing-a-notification-delivery-method.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">b79a6f771afe63c9a42567875db5ef8107611afc</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-781aacf</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <originalData>
          <data id="id1">\#</data>
          <data id="id2">\#</data>
        </originalData>
        <segment state="initial">
          <source>This article covers the four notification options&amp;<ph dataRef="id1" id="ph1" />8212;local, scheduled, periodic, and push&amp;<ph dataRef="id2" id="ph2" />8212;that deliver tile and badge updates and toast notification content.</source>
          <target>This article covers the four notification options&amp;<ph dataRef="id1" id="ph1" />8212;local, scheduled, periodic, and push&amp;<ph dataRef="id2" id="ph2" />8212;that deliver tile and badge updates and toast notification content.</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>Choose a notification delivery method</source>
          <target>Choose a notification delivery method</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>Choose a notification delivery method</source>
          <target>Choose a notification delivery method</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source>This article covers the four notification options—local, scheduled, periodic, and push—that deliver tile and badge updates and toast notification content.</source>
          <target>This article covers the four notification options—local, scheduled, periodic, and push—that deliver tile and badge updates and toast notification content.</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source>A tile or a toast notification can get information to your user even when the user is not directly engaged with your app.</source>
          <target>A tile or a toast notification can get information to your user even when the user is not directly engaged with your app.</target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source>The nature and content of your app and the information that you want to deliver can help you determine which notification method or methods is best for your scenario.</source>
          <target>The nature and content of your app and the information that you want to deliver can help you determine which notification method or methods is best for your scenario.</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source>Notification delivery methods overview</source>
          <target>Notification delivery methods overview</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source>There are four mechanisms that an app can use to deliver a notification:</source>
          <target>There are four mechanisms that an app can use to deliver a notification:</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source>Local</source>
          <target>Local</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source>Scheduled</source>
          <target>Scheduled</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source>Periodic</source>
          <target>Periodic</target>
        </segment>
      </unit>
      <unit id="112">
        <segment state="initial">
          <source>Push</source>
          <target>Push</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source>This table summarizes the notification delivery types.</source>
          <target>This table summarizes the notification delivery types.</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source>Delivery method</source>
          <target>Delivery method</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source>Use with</source>
          <target>Use with</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source>Description</source>
          <target>Description</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source>Examples</source>
          <target>Examples</target>
        </segment>
      </unit>
      <unit id="118">
        <segment state="initial">
          <source>Local</source>
          <target>Local</target>
        </segment>
      </unit>
      <unit id="119">
        <segment state="initial">
          <source>Tile, Badge, Toast</source>
          <target>Tile, Badge, Toast</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source>A set of API calls that send notifications while your app is running, directly updating the tile or badge, or sending a toast notification.</source>
          <target>A set of API calls that send notifications while your app is running, directly updating the tile or badge, or sending a toast notification.</target>
        </segment>
      </unit>
      <unit id="121">
        <originalData>
          <data id="id1">&amp;quot;</data>
          <data id="id2">&amp;quot;</data>
        </originalData>
        <segment state="initial">
          <source>A music app updates its tile to show what's <ph dataRef="id1" id="ph1" />Now Playing<ph dataRef="id2" id="ph2" />.</source>
          <target>A music app updates its tile to show what's <ph dataRef="id1" id="ph1" />Now Playing<ph dataRef="id2" id="ph2" />.</target>
        </segment>
      </unit>
      <unit id="122">
        <segment state="initial">
          <source>A game app updates its tile with the user's high score when the user leaves the game.</source>
          <target>A game app updates its tile with the user's high score when the user leaves the game.</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source>A badge whose glyph indicates that there's new info int the app is cleared when the app is activated.</source>
          <target>A badge whose glyph indicates that there's new info int the app is cleared when the app is activated.</target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source>Scheduled</source>
          <target>Scheduled</target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source>Tile, Toast</source>
          <target>Tile, Toast</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source>A set of API calls that schedule a notification in advance, to update at the time you specify.</source>
          <target>A set of API calls that schedule a notification in advance, to update at the time you specify.</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source>A calendar app sets a toast notification reminder for an upcoming meeting.</source>
          <target>A calendar app sets a toast notification reminder for an upcoming meeting.</target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source>Periodic</source>
          <target>Periodic</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source>Tile, Badge</source>
          <target>Tile, Badge</target>
        </segment>
      </unit>
      <unit id="130">
        <segment state="initial">
          <source>Notifications that update tiles and badges regularly at a fixed time interval by polling a cloud service for new content.</source>
          <target>Notifications that update tiles and badges regularly at a fixed time interval by polling a cloud service for new content.</target>
        </segment>
      </unit>
      <unit id="131">
        <segment state="initial">
          <source>A weather app updates its tile, which shows the forecast, at 30-minute intervals.</source>
          <target>A weather app updates its tile, which shows the forecast, at 30-minute intervals.</target>
        </segment>
      </unit>
      <unit id="132">
        <originalData>
          <data id="id1">&amp;quot;</data>
          <data id="id2">&amp;quot;</data>
        </originalData>
        <segment state="initial">
          <source>A <ph dataRef="id1" id="ph1" />daily deals<ph dataRef="id2" id="ph2" /> site updates its deal-of-the-day every morning.</source>
          <target>A <ph dataRef="id1" id="ph1" />daily deals<ph dataRef="id2" id="ph2" /> site updates its deal-of-the-day every morning.</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source>A tile that displays the days until an event updates the displayed countdown each day at midnight.</source>
          <target>A tile that displays the days until an event updates the displayed countdown each day at midnight.</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source>Push</source>
          <target>Push</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source>Tile, Badge, Toast, Raw</source>
          <target>Tile, Badge, Toast, Raw</target>
        </segment>
      </unit>
      <unit id="136">
        <segment state="initial">
          <source>Notifications sent from a cloud server, even if your app isn't running.</source>
          <target>Notifications sent from a cloud server, even if your app isn't running.</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source>A shopping app sends a toast notification to let a user know about a sale on an item that they're watching.</source>
          <target>A shopping app sends a toast notification to let a user know about a sale on an item that they're watching.</target>
        </segment>
      </unit>
      <unit id="138">
        <segment state="initial">
          <source>A news app updates its tile with breaking news as it happens.</source>
          <target>A news app updates its tile with breaking news as it happens.</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source>A sports app keeps its tile up-to-date during an ongoing game.</source>
          <target>A sports app keeps its tile up-to-date during an ongoing game.</target>
        </segment>
      </unit>
      <unit id="140">
        <segment state="initial">
          <source>A communication app provides alerts about incoming messages or phone calls.</source>
          <target>A communication app provides alerts about incoming messages or phone calls.</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source>Local notifications</source>
          <target>Local notifications</target>
        </segment>
      </unit>
      <unit id="142">
        <segment state="initial">
          <source>Updating the app tile or badge or raising a toast notification while the app is running is the simplest of the notification delivery mechanisms; it only requires local API calls.</source>
          <target>Updating the app tile or badge or raising a toast notification while the app is running is the simplest of the notification delivery mechanisms; it only requires local API calls.</target>
        </segment>
      </unit>
      <unit id="143">
        <segment state="initial">
          <source>Every app can have useful or interesting information to show on the tile, even if that content only changes after the user launches and interacts with the app.</source>
          <target>Every app can have useful or interesting information to show on the tile, even if that content only changes after the user launches and interacts with the app.</target>
        </segment>
      </unit>
      <unit id="144">
        <segment state="initial">
          <source>Local notifications are also a good way to keep the app tile current, even if you also use one of the other notification mechanisms.</source>
          <target>Local notifications are also a good way to keep the app tile current, even if you also use one of the other notification mechanisms.</target>
        </segment>
      </unit>
      <unit id="145">
        <segment state="initial">
          <source>For instance, a photo app tile could show photos from a recently added album.</source>
          <target>For instance, a photo app tile could show photos from a recently added album.</target>
        </segment>
      </unit>
      <unit id="146">
        <segment state="initial">
          <source>We recommended that your app update its tile locally on first launch, or at least immediately after the user makes a change that your app would normally reflect on the tile.</source>
          <target>We recommended that your app update its tile locally on first launch, or at least immediately after the user makes a change that your app would normally reflect on the tile.</target>
        </segment>
      </unit>
      <unit id="147">
        <segment state="initial">
          <source>That update isn't seen until the user leaves the app, but by making that change while the app is being used ensures that the tile is already up-to-date when the user departs.</source>
          <target>That update isn't seen until the user leaves the app, but by making that change while the app is being used ensures that the tile is already up-to-date when the user departs.</target>
        </segment>
      </unit>
      <unit id="148">
        <segment state="initial">
          <source>While the API calls are local, the notifications can reference web images.</source>
          <target>While the API calls are local, the notifications can reference web images.</target>
        </segment>
      </unit>
      <unit id="149">
        <segment state="initial">
          <source>If the web image is not available for download, is corrupted, or doesn't meet the image specifications, tiles and toast respond differently:</source>
          <target>If the web image is not available for download, is corrupted, or doesn't meet the image specifications, tiles and toast respond differently:</target>
        </segment>
      </unit>
      <unit id="150">
        <segment state="initial">
          <source>Tiles: The update is not shown</source>
          <target>Tiles: The update is not shown</target>
        </segment>
      </unit>
      <unit id="151">
        <segment state="initial">
          <source>Toast: The notification is displayed, but with a placeholder image</source>
          <target>Toast: The notification is displayed, but with a placeholder image</target>
        </segment>
      </unit>
      <unit id="152">
        <segment state="initial">
          <source>Although local notifications don't expire, it's a best practice to set an explicit expiration time.</source>
          <target>Although local notifications don't expire, it's a best practice to set an explicit expiration time.</target>
        </segment>
      </unit>
      <unit id="153">
        <segment state="initial">
          <source>For more information, see these topics:</source>
          <target>For more information, see these topics:</target>
        </segment>
      </unit>
      <unit id="154">
        <segment state="initial">
          <source>Send a local tile notification</source>
          <target>Send a local tile notification</target>
        </segment>
      </unit>
      <unit id="155">
        <segment state="initial">
          <source>Universal Windows Platform (UWP) notifications code samples</source>
          <target>Universal Windows Platform (UWP) notifications code samples</target>
        </segment>
      </unit>
      <unit id="156">
        <segment state="initial">
          <source>Scheduled notifications</source>
          <target>Scheduled notifications</target>
        </segment>
      </unit>
      <unit id="157">
        <segment state="initial">
          <source>Scheduled notifications are the subset of local notifications that can specify the precise time when a tile should be updated or a toast notification should be shown.</source>
          <target>Scheduled notifications are the subset of local notifications that can specify the precise time when a tile should be updated or a toast notification should be shown.</target>
        </segment>
      </unit>
      <unit id="158">
        <segment state="initial">
          <source>Scheduled notifications are ideal in situations where the content to be updated is known in advance, such as a meeting invitation.</source>
          <target>Scheduled notifications are ideal in situations where the content to be updated is known in advance, such as a meeting invitation.</target>
        </segment>
      </unit>
      <unit id="159">
        <segment state="initial">
          <source>If you don't have advance knowledge of the notification content, you should use a push or periodic notification.</source>
          <target>If you don't have advance knowledge of the notification content, you should use a push or periodic notification.</target>
        </segment>
      </unit>
      <unit id="160">
        <segment state="initial">
          <source>By default, scheduled notifications expire three days from the time that they are delivered.</source>
          <target>By default, scheduled notifications expire three days from the time that they are delivered.</target>
        </segment>
      </unit>
      <unit id="161">
        <segment state="initial">
          <source>If needed, you can override this default with an explicit expiration time.</source>
          <target>If needed, you can override this default with an explicit expiration time.</target>
        </segment>
      </unit>
      <unit id="162">
        <segment state="initial">
          <source>For more information, see these topics:</source>
          <target>For more information, see these topics:</target>
        </segment>
      </unit>
      <unit id="163">
        <segment state="initial">
          <source>Guidelines for scheduled notifications</source>
          <target>Guidelines for scheduled notifications</target>
        </segment>
      </unit>
      <unit id="164">
        <segment state="initial">
          <source>Universal Windows Platform (UWP) notifications code samples</source>
          <target>Universal Windows Platform (UWP) notifications code samples</target>
        </segment>
      </unit>
      <unit id="165">
        <segment state="initial">
          <source>Periodic notifications</source>
          <target>Periodic notifications</target>
        </segment>
      </unit>
      <unit id="166">
        <segment state="initial">
          <source>Periodic notifications give you live tile updates with a minimal cloud service and client investment.</source>
          <target>Periodic notifications give you live tile updates with a minimal cloud service and client investment.</target>
        </segment>
      </unit>
      <unit id="167">
        <segment state="initial">
          <source>They are also an excellent method of distributing the same content to a wide audience.</source>
          <target>They are also an excellent method of distributing the same content to a wide audience.</target>
        </segment>
      </unit>
      <unit id="168">
        <segment state="initial">
          <source>Your client code specifies the URL of a cloud location that Windows polls for tile or badge updates, and how often the location should be polled.</source>
          <target>Your client code specifies the URL of a cloud location that Windows polls for tile or badge updates, and how often the location should be polled.</target>
        </segment>
      </unit>
      <unit id="169">
        <segment state="initial">
          <source>At each polling interval, Windows contacts the URL to download the specified XML content and display it on the tile.</source>
          <target>At each polling interval, Windows contacts the URL to download the specified XML content and display it on the tile.</target>
        </segment>
      </unit>
      <unit id="170">
        <segment state="initial">
          <source>Periodic notifications require the app to host a cloud service, and this service will be polled at the specified interval by all users who have the app installed.</source>
          <target>Periodic notifications require the app to host a cloud service, and this service will be polled at the specified interval by all users who have the app installed.</target>
        </segment>
      </unit>
      <unit id="171">
        <segment state="initial">
          <source>Note that periodic updates cannot be used for toast notifications; toast notifications are best served by scheduled or push notifications.</source>
          <target>Note that periodic updates cannot be used for toast notifications; toast notifications are best served by scheduled or push notifications.</target>
        </segment>
      </unit>
      <unit id="172">
        <segment state="initial">
          <source>By default, periodic notifications expire three days from the time that the polling occurs.</source>
          <target>By default, periodic notifications expire three days from the time that the polling occurs.</target>
        </segment>
      </unit>
      <unit id="173">
        <segment state="initial">
          <source>If needed, you can override this default with an explicit expiration time.</source>
          <target>If needed, you can override this default with an explicit expiration time.</target>
        </segment>
      </unit>
      <unit id="174">
        <segment state="initial">
          <source>For more information, see these topics:</source>
          <target>For more information, see these topics:</target>
        </segment>
      </unit>
      <unit id="175">
        <segment state="initial">
          <source>Periodic notification overview</source>
          <target>Periodic notification overview</target>
        </segment>
      </unit>
      <unit id="176">
        <segment state="initial">
          <source>Universal Windows Platform (UWP) notifications code samples</source>
          <target>Universal Windows Platform (UWP) notifications code samples</target>
        </segment>
      </unit>
      <unit id="177">
        <segment state="initial">
          <source>Push notifications</source>
          <target>Push notifications</target>
        </segment>
      </unit>
      <unit id="178">
        <segment state="initial">
          <source>Push notifications are ideal to communicate real-time data or data that is personalized for your user.</source>
          <target>Push notifications are ideal to communicate real-time data or data that is personalized for your user.</target>
        </segment>
      </unit>
      <unit id="179">
        <segment state="initial">
          <source>Push notifications are used for content that is generated at unpredictable times, such as breaking news, social network updates, or instant messages.</source>
          <target>Push notifications are used for content that is generated at unpredictable times, such as breaking news, social network updates, or instant messages.</target>
        </segment>
      </unit>
      <unit id="180">
        <segment state="initial">
          <source>Push notifications are also useful in situations where the data is time-sensitive in a way that would not suit periodic notifications, such as sports scores during a game.</source>
          <target>Push notifications are also useful in situations where the data is time-sensitive in a way that would not suit periodic notifications, such as sports scores during a game.</target>
        </segment>
      </unit>
      <unit id="181">
        <segment state="initial">
          <source>Push notifications require a cloud service that manages push notification channels and chooses when and to whom to send notifications.</source>
          <target>Push notifications require a cloud service that manages push notification channels and chooses when and to whom to send notifications.</target>
        </segment>
      </unit>
      <unit id="182">
        <segment state="initial">
          <source>By default, push notifications expire three days from the time that they are received by Windows Push Notification Services (WNS).</source>
          <target>By default, push notifications expire three days from the time that they are received by Windows Push Notification Services (WNS).</target>
        </segment>
      </unit>
      <unit id="183">
        <segment state="initial">
          <source>If needed, you can override this default with an explicit expiration time.</source>
          <target>If needed, you can override this default with an explicit expiration time.</target>
        </segment>
      </unit>
      <unit id="184">
        <segment state="initial">
          <source>For more information, see:</source>
          <target>For more information, see:</target>
        </segment>
      </unit>
      <unit id="185">
        <segment state="initial">
          <source>Windows Push Notification Services (WNS) overview</source>
          <target>Windows Push Notification Services (WNS) overview</target>
        </segment>
      </unit>
      <unit id="186">
        <segment state="initial">
          <source>Guidelines for push notifications</source>
          <target>Guidelines for push notifications</target>
        </segment>
      </unit>
      <unit id="187">
        <segment state="initial">
          <source>Universal Windows Platform (UWP) notifications code samples</source>
          <target>Universal Windows Platform (UWP) notifications code samples</target>
        </segment>
      </unit>
      <unit id="188">
        <segment state="initial">
          <source>Related topics</source>
          <target>Related topics</target>
        </segment>
      </unit>
      <unit id="189">
        <segment state="initial">
          <source>Send a local tile notification</source>
          <target>Send a local tile notification</target>
        </segment>
      </unit>
      <unit id="190">
        <segment state="initial">
          <source>Guidelines for push notifications</source>
          <target>Guidelines for push notifications</target>
        </segment>
      </unit>
      <unit id="191">
        <segment state="initial">
          <source>Guidelines for scheduled notifications</source>
          <target>Guidelines for scheduled notifications</target>
        </segment>
      </unit>
      <unit id="192">
        <segment state="initial">
          <source>Guidelines for toast notifications</source>
          <target>Guidelines for toast notifications</target>
        </segment>
      </unit>
      <unit id="193">
        <segment state="initial">
          <source>Periodic notification overview</source>
          <target>Periodic notification overview</target>
        </segment>
      </unit>
      <unit id="194">
        <segment state="initial">
          <source>Windows Push Notification Services (WNS) overview</source>
          <target>Windows Push Notification Services (WNS) overview</target>
        </segment>
      </unit>
      <unit id="195">
        <segment state="initial">
          <source>Universal Windows Platform (UWP) notifications code samples on GitHub</source>
          <target>Universal Windows Platform (UWP) notifications code samples on GitHub</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>