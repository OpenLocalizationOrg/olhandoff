{"nodes":[{"content":"How to activate an app (DirectX and C++)","pos":[27,67]},{"content":"This topic shows how to define the activation experience for a Universal Windows Platform (UWP) DirectX app.","pos":[81,189]},{"content":"How to activate an app (DirectX and C++)","pos":[246,286]},{"content":"Updated for UWP apps on Windows 10.","pos":[292,327]},{"content":"For Windows 8.x articles, see the <bpt id=\"p1\">[</bpt>archive<ept id=\"p1\">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept>","pos":[328,420]},{"content":"This topic shows how to define the activation experience for a Universal Windows Platform (UWP) DirectX app.","pos":[425,533]},{"content":"Register the app activation event handler","pos":[538,579]},{"pos":[582,795],"content":"First, register to handle the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>CoreApplicationView::Activated<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br225018)</ept> event, which is raised when your app is started and initialized by the operating system."},{"pos":[797,1003],"content":"Add this code to your implementation of the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>IFrameworkView::Initialize<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/hh700495)</ept> method of your view provider (named <bpt id=\"p3\">**</bpt>MyViewProvider<ept id=\"p3\">**</ept> in the example):"},{"content":"Activate the CoreWindow instance for the app","pos":[1404,1448]},{"content":"When your app starts, you must obtain a reference to the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>CoreWindow<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br208225)</ept> for your app.","pos":[1451,1596]},{"content":"<bpt id=\"p1\">**</bpt>CoreWindow<ept id=\"p1\">**</ept> contains the window event message dispatcher that your app uses to process window events.","pos":[1597,1701]},{"content":"Obtain this reference in your callback for the app activation event by calling <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>CoreWindow::GetForCurrentThread<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/hh701589)</ept>.","pos":[1702,1877]},{"content":"Once you have obtained this reference, activate the main app window by calling <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>CoreWindow::Activate<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br208254)</ept>.","pos":[1878,2042]},{"content":"Start processing event message for the main app window","pos":[2261,2315]},{"content":"Your callbacks occur as event messages are processed by the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>CoreDispatcher<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br208211)</ept> for the app's <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>CoreWindow<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/br208225)</ept>.","pos":[2318,2546]},{"content":"This callback will not be invoked if you do not call <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>CoreDispatcher::ProcessEvents<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br208215)</ept> from your app's main loop (implemented in the <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>IFrameworkView::Run<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/hh700505)</ept> method of your view provider).","pos":[2547,2854]},{"content":"Related topics","pos":[3459,3473]},{"content":"How to suspend an app (DirectX and C++)","pos":[3479,3518]},{"content":"How to resume an app (DirectX and C++)","pos":[3565,3603]}],"content":"---\nauthor: mtoepke\ntitle: How to activate an app (DirectX and C++)\ndescription: This topic shows how to define the activation experience for a Universal Windows Platform (UWP) DirectX app.\nms.assetid: b07c7da1-8a5e-5b57-6f77-6439bf653a53\n---\n\n# How to activate an app (DirectX and C++)\n\n\n\\[ Updated for UWP apps on Windows 10. For Windows 8.x articles, see the [archive](http://go.microsoft.com/fwlink/p/?linkid=619132) \\]\n\nThis topic shows how to define the activation experience for a Universal Windows Platform (UWP) DirectX app.\n\n## Register the app activation event handler\n\n\nFirst, register to handle the [**CoreApplicationView::Activated**](https://msdn.microsoft.com/library/windows/apps/br225018) event, which is raised when your app is started and initialized by the operating system.\n\nAdd this code to your implementation of the [**IFrameworkView::Initialize**](https://msdn.microsoft.com/library/windows/apps/hh700495) method of your view provider (named **MyViewProvider** in the example):\n\n```cpp\nvoid App::Initialize(CoreApplicationView^ applicationView)\n{\n    // Register event handlers for the app lifecycle. This example includes Activated, so that we\n    // can make the CoreWindow active and start rendering on the window.\n    applicationView->Activated +=\n        ref new TypedEventHandler<CoreApplicationView^, IActivatedEventArgs^>(this, &App::OnActivated);\n  \n  //...\n\n}\n```\n\n## Activate the CoreWindow instance for the app\n\n\nWhen your app starts, you must obtain a reference to the [**CoreWindow**](https://msdn.microsoft.com/library/windows/apps/br208225) for your app. **CoreWindow** contains the window event message dispatcher that your app uses to process window events. Obtain this reference in your callback for the app activation event by calling [**CoreWindow::GetForCurrentThread**](https://msdn.microsoft.com/library/windows/apps/hh701589). Once you have obtained this reference, activate the main app window by calling [**CoreWindow::Activate**](https://msdn.microsoft.com/library/windows/apps/br208254).\n\n```cpp\nvoid App::OnActivated(CoreApplicationView^ applicationView, IActivatedEventArgs^ args)\n{\n    // Run() won't start until the CoreWindow is activated.\n    CoreWindow::GetForCurrentThread()->Activate();\n}\n```\n\n## Start processing event message for the main app window\n\n\nYour callbacks occur as event messages are processed by the [**CoreDispatcher**](https://msdn.microsoft.com/library/windows/apps/br208211) for the app's [**CoreWindow**](https://msdn.microsoft.com/library/windows/apps/br208225). This callback will not be invoked if you do not call [**CoreDispatcher::ProcessEvents**](https://msdn.microsoft.com/library/windows/apps/br208215) from your app's main loop (implemented in the [**IFrameworkView::Run**](https://msdn.microsoft.com/library/windows/apps/hh700505) method of your view provider).\n\n``` syntax\n// This method is called after the window becomes active.\nvoid App::Run()\n{\n    while (!m_windowClosed)\n    {\n        if (m_windowVisible)\n        {\n            CoreWindow::GetForCurrentThread()->Dispatcher->ProcessEvents(CoreProcessEventsOption::ProcessAllIfPresent);\n\n            m_main->Update();\n\n            if (m_main->Render())\n            {\n                m_deviceResources->Present();\n            }\n        }\n        else\n        {\n            CoreWindow::GetForCurrentThread()->Dispatcher->ProcessEvents(CoreProcessEventsOption::ProcessOneAndAllPending);\n        }\n    }\n}\n```\n\n## Related topics\n\n\n* [How to suspend an app (DirectX and C++)](how-to-suspend-an-app-directx-and-cpp.md)\n* [How to resume an app (DirectX and C++)](how-to-resume-an-app-directx-and-cpp.md)\n\n \n\n \n\n\n\n\n"}