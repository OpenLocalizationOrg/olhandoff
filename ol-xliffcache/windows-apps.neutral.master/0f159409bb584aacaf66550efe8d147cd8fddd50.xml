{"nodes":[{"content":"Learn how to include interstitial ads in a Windows 10, Windows 8.1, or Windows Phone 8.1 app using the Microsoft advertising libraries in the Microsoft Store Engagement and Monetization SDK.","pos":[86,276]},{"content":"Interstitial ads","pos":[284,300]},{"content":"Interstitial ads","pos":[308,324]},{"content":"Updated for UWP apps on Windows 10.","pos":[330,365]},{"content":"For Windows 8.x articles, see the <bpt id=\"p1\">[</bpt>archive<ept id=\"p1\">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept>","pos":[366,458]},{"content":"This walkthrough shows how to include interstitial ads in a Windows 10, Windows 8.1, or Windows Phone 8.1 app using the Microsoft advertising libraries in the Microsoft Store Engagement and Monetization SDK.","pos":[463,670]},{"pos":[672,867],"content":"For complete sample projects that demonstrate how to add interstitial ads to JavaScript/HTML apps and XAML apps using C# and C++, see the <bpt id=\"p1\">[</bpt>advertising samples on GitHub<ept id=\"p1\">](http://aka.ms/githubads)</ept>."},{"content":"What are interstitial ads?","pos":[910,936]},{"content":"Unlike banner ads, interstitial ads (or <bpt id=\"p1\">*</bpt>interstitials<ept id=\"p1\">*</ept>) are shown on the entire screen of the app.","pos":[938,1037]},{"content":"Two basic forms are frequently used in games.","pos":[1038,1083]},{"content":"With <bpt id=\"p1\">*</bpt>Paywall<ept id=\"p1\">*</ept> ads, the user must watch an ad at some regular interval.","pos":[1087,1158]},{"content":"For example between game levels:","pos":[1159,1191]},{"content":"whatisaninterstitial","pos":[1199,1219]},{"pos":[1276,1460],"content":"With <bpt id=\"p1\">*</bpt>Rewards Based<ept id=\"p1\">*</ept> ads the user is explicitly seeking some benefit, such as a hint or extra time to complete the level, and initializes the video ad through the appâ€™s user interface."},{"content":"It is important to note that this SDK does not handle any user interface except at the time of video playback.","pos":[1466,1576]},{"content":"Refer to the <bpt id=\"p1\">[</bpt>interstitial best practices<ept id=\"p1\">](ui-and-user-experience-guidelines.md#interstitialbestpractices10)</ept> for guidelines on what to do, and avoid, as you consider how to integrate interstitial ads in your app.","pos":[1577,1789]},{"content":"Building an app with interstitial ads","pos":[1794,1831]},{"content":"Prerequisites","pos":[1838,1851]},{"pos":[1857,1993],"content":"Install the <bpt id=\"p1\">[</bpt>Microsoft Store Engagement and Monetization SDK<ept id=\"p1\">](http://aka.ms/store-em-sdk)</ept> with Visual Studio 2015 or Visual Studio 2013."},{"content":"In Visual Studio, open your project or create a new project.","pos":[1999,2059]},{"content":"Code development","pos":[2065,2081]},{"content":"Steps for a XAML/.NET app","pos":[2086,2111]},{"content":"Steps for HTML/JavaScript","pos":[2141,2166]},{"content":"Steps for C++ (DirectX Interop)","pos":[2196,2227]},{"content":"Interstitial ads (XAML/.NET)","pos":[2296,2324]},{"pos":[2328,2418],"content":"<bpt id=\"p1\">**</bpt>Note<ept id=\"p1\">**</ept>   This section provides C# examples, but Visual Basic and C++ are also supported."},{"content":"Open your project in Visual Studio.","pos":[2424,2459]},{"pos":[2463,2559],"content":"In <bpt id=\"p1\">**</bpt>Reference Manager<ept id=\"p1\">**</ept>, select one of the following references depending on your project type:"},{"pos":[2569,2761],"content":"For a Universal Windows Platform (UWP) project: Expand <bpt id=\"p1\">**</bpt>Universal Windows<ept id=\"p1\">**</ept>, click <bpt id=\"p2\">**</bpt>Extensions<ept id=\"p2\">**</ept>, and then select the check box next to <bpt id=\"p3\">**</bpt>Microsoft Advertising SDK for XAML<ept id=\"p3\">**</ept> (Version 10.0)."},{"content":"For a Windows 8.1 project: Expand <bpt id=\"p1\">**</bpt>Windows 8.1<ept id=\"p1\">**</ept>, click <bpt id=\"p2\">**</bpt>Extensions<ept id=\"p2\">**</ept>, and then select the check box next to <bpt id=\"p3\">**</bpt>Ad Mediator SDK for Windows 8.1 XAML<ept id=\"p3\">**</ept>.","pos":[2771,2923]},{"content":"This option will add both the Microsoft advertising and ad mediator libraries to your project, but you can ignore the ad mediator libraries.","pos":[2924,3064]},{"content":"For a Windows Phone 8.1 project: Expand <bpt id=\"p1\">**</bpt>Windows Phone 8.1<ept id=\"p1\">**</ept>, click <bpt id=\"p2\">**</bpt>Extensions<ept id=\"p2\">**</ept>, and then select the check box next to <bpt id=\"p3\">**</bpt>Ad Mediator SDK for Windows Phone 8.1 XAML<ept id=\"p3\">**</ept>.","pos":[3074,3244]},{"content":"This option will add both the Microsoft advertising and ad mediator libraries to your project, but you can ignore the ad mediator libraries.","pos":[3245,3385]},{"content":"In the app code, include the following namespace reference.","pos":[3391,3450]},{"pos":[3522,3573],"content":"Declare your <ph id=\"ph1\">`MyAppId`</ph> and <ph id=\"ph2\">`MyAdUnitId`</ph> properties."},{"pos":[4015,4118],"content":"<bpt id=\"p1\">**</bpt>Note<ept id=\"p1\">**</ept>   You will replace the test values with live values before submitting your app for submission."},{"pos":[4124,4303],"content":"Instantiate an <bpt id=\"p1\">[</bpt>InterstitialAd<ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/microsoft.advertising.winrt.ui.interstitialad.aspx)</ept>, wire up all event handlers, and request an ad."},{"content":"At the point in your code where the ad is to be shown, be sure the ad is ready, and show it.","pos":[4799,4891]},{"content":"Define and code up the events.","pos":[5015,5045]},{"content":"Assign the <ph id=\"ph1\">`MyAppId`</ph> property to the test value provided in <bpt id=\"p1\">[</bpt>Test mode values<ept id=\"p1\">](test-mode-values.md)</ept>.","pos":[5412,5512]},{"content":"This value is used only used for testing; you will replace it with a live value before you publish your app.","pos":[5513,5621]},{"content":"Assign the <ph id=\"ph1\">`MyAdUnitId`</ph> property to the test value provided in <bpt id=\"p1\">[</bpt>Test mode values<ept id=\"p1\">](test-mode-values.md)</ept>.","pos":[5709,5812]},{"content":"This value is used only used for testing; you will replace it with a live value before you publish your app.","pos":[5813,5921]},{"content":"Build and test your app to confirm it is showing test ads.","pos":[5985,6043]},{"content":"Interstitial ads (HTML/JavaScript)","pos":[6084,6118]},{"content":"This sample assumes you have created a Universal App project for JavaScript in Visual Studio 2015 and are targeting a specific CPU.","pos":[6120,6251]},{"content":"Open your project in Visual Studio.","pos":[6256,6291]},{"pos":[6296,6392],"content":"In <bpt id=\"p1\">**</bpt>Reference Manager<ept id=\"p1\">**</ept>, select one of the following references depending on your project type:"},{"pos":[6402,6600],"content":"For a Universal Windows Platform (UWP) project: Expand <bpt id=\"p1\">**</bpt>Universal Windows<ept id=\"p1\">**</ept>, click <bpt id=\"p2\">**</bpt>Extensions<ept id=\"p2\">**</ept>, and then select the check box next to <bpt id=\"p3\">**</bpt>Microsoft Advertising SDK for JavaScript<ept id=\"p3\">**</ept> (Version 10.0)."},{"pos":[6610,6779],"content":"For a Windows 8.1 project: Expand <bpt id=\"p1\">**</bpt>Windows 8.1<ept id=\"p1\">**</ept>, click <bpt id=\"p2\">**</bpt>Extensions<ept id=\"p2\">**</ept>, and then select the check box next to <bpt id=\"p3\">**</bpt>Microsoft Advertising SDK for Windows 8.1 Native (JS)<ept id=\"p3\">**</ept>."},{"pos":[6789,6970],"content":"For a Windows 8.1 project: Expand <bpt id=\"p1\">**</bpt>Windows Phone 8.1<ept id=\"p1\">**</ept>, click <bpt id=\"p2\">**</bpt>Extensions<ept id=\"p2\">**</ept>, and then select the check box next to <bpt id=\"p3\">**</bpt>Microsoft Advertising SDK for Windows Phone 8.1 Native (JS)<ept id=\"p3\">**</ept>."},{"content":"In the HTML, include the following script reference.","pos":[6976,7028]},{"pos":[7127,7178],"content":"Declare your <ph id=\"ph1\">`myAppId`</ph> and <ph id=\"ph2\">`myAdUnitId`</ph> properties."},{"pos":[7315,7396],"content":"Instantiate an <bpt id=\"p1\">**</bpt>InterstitialAd<ept id=\"p1\">**</ept>, wire up all event handlers, and request an ad."},{"content":"At the point in your code where the ad is to be shown, be sure the ad is ready, and show it.","pos":[8020,8112]},{"content":"Define and code up the events.","pos":[8289,8319]},{"content":"Assign the <ph id=\"ph1\">`MyAppId`</ph> property to the test value provided in <bpt id=\"p1\">[</bpt>Test mode values<ept id=\"p1\">](test-mode-values.md)</ept>.","pos":[8586,8686]},{"content":"This value is used only used for testing; you will replace it with a live value before you publish your app.","pos":[8687,8795]},{"content":"Assign the <ph id=\"ph1\">`MyAdUnitId`</ph> property to the test value provided in <bpt id=\"p1\">[</bpt>Test mode values<ept id=\"p1\">](test-mode-values.md)</ept>.","pos":[8883,8986]},{"content":"This value is used only used for testing; you will replace it with a live value before you publish your app.","pos":[8987,9095]},{"content":"Build and test your app to confirm it is showing test ads.","pos":[9158,9216]},{"content":"Interstitial ads (C++ and DirectX with XAML interop)","pos":[9260,9312]},{"content":"This sample assumes you have created a Universal App project for XAML in Visual Studio 2015 and are targeting a specific CPU architecture.","pos":[9314,9452]},{"pos":[9456,9524],"content":"<bpt id=\"p1\">**</bpt>Important<ept id=\"p1\">**</ept>   This code is written in C++ as required for DirectX."},{"content":"Open your project in Visual Studio.","pos":[9531,9566]},{"pos":[9571,9667],"content":"In <bpt id=\"p1\">**</bpt>Reference Manager<ept id=\"p1\">**</ept>, select one of the following references depending on your project type:"},{"pos":[9677,9869],"content":"For a Universal Windows Platform (UWP) project: Expand <bpt id=\"p1\">**</bpt>Universal Windows<ept id=\"p1\">**</ept>, click <bpt id=\"p2\">**</bpt>Extensions<ept id=\"p2\">**</ept>, and then select the check box next to <bpt id=\"p3\">**</bpt>Microsoft Advertising SDK for XAML<ept id=\"p3\">**</ept> (Version 10.0)."},{"content":"For a Windows 8.1 project: Expand <bpt id=\"p1\">**</bpt>Windows 8.1<ept id=\"p1\">**</ept>, click <bpt id=\"p2\">**</bpt>Extensions<ept id=\"p2\">**</ept>, and then select the check box next to <bpt id=\"p3\">**</bpt>Ad Mediator SDK for Windows 8.1 XAML<ept id=\"p3\">**</ept>.","pos":[9879,10031]},{"content":"This option will add both the Microsoft advertising and ad mediator libraries to your project, but you can ignore the ad mediator libraries.","pos":[10032,10172]},{"content":"For a Windows Phone 8.1 project: Expand <bpt id=\"p1\">**</bpt>Windows Phone 8.1<ept id=\"p1\">**</ept>, click <bpt id=\"p2\">**</bpt>Extensions<ept id=\"p2\">**</ept>, and then select the check box next to <bpt id=\"p3\">**</bpt>Ad Mediator SDK for Windows Phone 8.1 XAML<ept id=\"p3\">**</ept>.","pos":[10182,10352]},{"content":"This option will add both the Microsoft advertising and ad mediator libraries to your project, but you can ignore the ad mediator libraries.","pos":[10353,10493]},{"content":"In the appropriate header file for your app, declare the interstitial ad object and related properties/methods.","pos":[10499,10610]},{"pos":[10956,11003],"content":"Declare your <ph id=\"ph1\">`AppId`</ph> and <ph id=\"ph2\">`AdUnitId`</ph> properties."},{"content":"In the .cpp file, add a namespace reference.","pos":[11386,11430]},{"pos":[11515,11596],"content":"Instantiate an <bpt id=\"p1\">**</bpt>InterstitialAd<ept id=\"p1\">**</ept>, wire up all event handlers, and request an ad."},{"content":"At the point in your code where the ad is to be shown, be sure the ad is ready, and show it.","pos":[12527,12619]},{"content":"Define and code up the events.","pos":[12736,12766]},{"content":"Assign the <ph id=\"ph1\">`AppId`</ph> property to the test value provided in <bpt id=\"p1\">[</bpt>Test mode values<ept id=\"p1\">](test-mode-values.md)</ept>.","pos":[13211,13309]},{"content":"This value is used only used for testing; you will replace it with a live value before you publish your app.","pos":[13310,13418]},{"content":"Assign the <ph id=\"ph1\">`AdUnitId`</ph> property to the test value provided in <bpt id=\"p1\">[</bpt>Test mode values<ept id=\"p1\">](test-mode-values.md)</ept>.","pos":[13529,13630]},{"content":"This value is used only used for testing; you will replace it with a live value before you publish your app.","pos":[13631,13739]},{"content":"Build and test your app to confirm it is showing test ads.","pos":[13825,13883]},{"content":"Release your app with live ads using Windows Dev Center","pos":[13889,13944]},{"content":"In the Dev Center dashboard, go to the <bpt id=\"p1\">**</bpt>Monetization<ept id=\"p1\">**</ept> <ph id=\"ph1\">&amp;gt;</ph> <bpt id=\"p2\">**</bpt>Monetize with ads<ept id=\"p2\">**</ept> page for your app, and <bpt id=\"p3\">[</bpt>create a standalone Microsoft Advertising unit<ept id=\"p3\">](../publish/monetize-with-ads.md)</ept>.","pos":[13950,14138]},{"content":"For the ad unit type, specify <bpt id=\"p1\">**</bpt>Video interstitial<ept id=\"p1\">**</ept>.","pos":[14139,14192]},{"content":"Make note of both the ad unit ID and the application ID.","pos":[14193,14249]},{"content":"In your code, replace the test ad unit values with the live values you generated in Dev Center.","pos":[14255,14350]},{"pos":[14356,14457],"content":"<bpt id=\"p1\">[</bpt>Submit your app<ept id=\"p1\">](../publish/app-submissions.md)</ept> to the Store using the Windows Dev Center dashboard."},{"pos":[14463,14583],"content":"Review your <bpt id=\"p1\">[</bpt>advertising performance reports<ept id=\"p1\">](../publish/advertising-performance-report.md)</ept> in the Dev Center dashboard."},{"content":"Interstitial best practices","pos":[14629,14656]},{"pos":[14659,14805],"content":"For more information about how to use interstitial ads effectively, see <bpt id=\"p1\">[</bpt>UI and user experience guidelines<ept id=\"p1\">](ui-and-user-experience-guidelines.md)</ept>."},{"content":"Remove reference errors: target a specific CPU platform (XAML and HTML)","pos":[14840,14911]},{"content":"When using the Microsoft advertising libraries, you cannot target <bpt id=\"p1\">**</bpt>Any CPU<ept id=\"p1\">**</ept> in your project.","pos":[14914,15008]},{"content":"If your project targets the <bpt id=\"p1\">**</bpt>Any CPU<ept id=\"p1\">**</ept> platform, you may see a warning in your project after you add a reference to the Microsoft advertising libraries.","pos":[15009,15162]},{"content":"To remove this warning, update your project to use an architecture-specific build output (for example, <bpt id=\"p1\">**</bpt>x86<ept id=\"p1\">**</ept>).","pos":[15163,15275]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Known issues<ept id=\"p1\">](known-issues-for-the-advertising-libraries.md)</ept>.","pos":[15276,15364]},{"content":"Related topics","pos":[15369,15383]},{"content":"Interstitial ad sample code in C","pos":[15389,15421]},{"content":"Interstitial ad sample code in JavaScript","pos":[15464,15505]},{"content":"Advertising samples on GitHub","pos":[15556,15585]}],"content":"---\nauthor: mcleanbyron\nms.assetid: 1f970d38-2338-470e-b5ba-811402752fc4\ndescription: Learn how to include interstitial ads in a Windows 10, Windows 8.1, or Windows Phone 8.1 app using the Microsoft advertising libraries in the Microsoft Store Engagement and Monetization SDK.\ntitle: Interstitial ads\n---\n\n# Interstitial ads\n\n\n\\[ Updated for UWP apps on Windows 10. For Windows 8.x articles, see the [archive](http://go.microsoft.com/fwlink/p/?linkid=619132) \\]\n\nThis walkthrough shows how to include interstitial ads in a Windows 10, Windows 8.1, or Windows Phone 8.1 app using the Microsoft advertising libraries in the Microsoft Store Engagement and Monetization SDK.\n\nFor complete sample projects that demonstrate how to add interstitial ads to JavaScript/HTML apps and XAML apps using C# and C++, see the [advertising samples on GitHub](http://aka.ms/githubads).\n\n<span id=\"whatareinterstitialads10\"/>\n## What are interstitial ads?\n\nUnlike banner ads, interstitial ads (or *interstitials*) are shown on the entire screen of the app. Two basic forms are frequently used in games.\n\n* With *Paywall* ads, the user must watch an ad at some regular interval. For example between game levels:\n\n    ![whatisaninterstitial](images/13-ed0a333b-0fc8-4ca9-a4c8-11e8b4392831.png)\n\n* With *Rewards Based* ads the user is explicitly seeking some benefit, such as a hint or extra time to complete the level, and initializes the video ad through the appâ€™s user interface.\n\n    It is important to note that this SDK does not handle any user interface except at the time of video playback. Refer to the [interstitial best practices](ui-and-user-experience-guidelines.md#interstitialbestpractices10) for guidelines on what to do, and avoid, as you consider how to integrate interstitial ads in your app.\n\n## Building an app with interstitial ads\n\n\n### Prerequisites\n\n1.  Install the [Microsoft Store Engagement and Monetization SDK](http://aka.ms/store-em-sdk) with Visual Studio 2015 or Visual Studio 2013.\n\n2.  In Visual Studio, open your project or create a new project.\n\n### Code development\n\n* [Steps for a XAML/.NET app](#interstitialadsxaml10)\n\n* [Steps for HTML/JavaScript](#interstitialadshtml10)\n\n* [Steps for C++ (DirectX Interop)](#interstitialadsdirectx10)\n\n<span id=\"interstitialadsxaml10\"/>\n### Interstitial ads (XAML/.NET)\n\n> **Note**   This section provides C# examples, but Visual Basic and C++ are also supported.\n \n1. Open your project in Visual Studio.\n2. In **Reference Manager**, select one of the following references depending on your project type:\n\n    -   For a Universal Windows Platform (UWP) project: Expand **Universal Windows**, click **Extensions**, and then select the check box next to **Microsoft Advertising SDK for XAML** (Version 10.0).\n\n    -   For a Windows 8.1 project: Expand **Windows 8.1**, click **Extensions**, and then select the check box next to **Ad Mediator SDK for Windows 8.1 XAML**. This option will add both the Microsoft advertising and ad mediator libraries to your project, but you can ignore the ad mediator libraries.\n\n    -   For a Windows Phone 8.1 project: Expand **Windows Phone 8.1**, click **Extensions**, and then select the check box next to **Ad Mediator SDK for Windows Phone 8.1 XAML**. This option will add both the Microsoft advertising and ad mediator libraries to your project, but you can ignore the ad mediator libraries.\n\n3.  In the app code, include the following namespace reference.\n\n    ``` syntax\n    using Microsoft.Advertising.WinRT.UI;\n    ```\n\n4.  Declare your `MyAppId` and `MyAdUnitId` properties.\n\n    ``` syntax\n    var MyAppId = \"<your app id for windows>\";\n    var MyAdUnitId = \"<your adunit for windows\";\n\n    // if your code is in a universal solution and resides in the shared project\n    // you can opt to use #if WINDOWS_APP or WINDOWS_PHONE_APP to override with different\n    // identifiers for each\n#if WINDOWS_PHONE_APP\n    MyAppId = \"<your app id for phone>\";\n    MyAdUnitId = \"<your adunit for phone>\";\n#endif\n    ```\n\n    > **Note**   You will replace the test values with live values before submitting your app for submission.\n\n5.  Instantiate an [InterstitialAd](https://msdn.microsoft.com/library/windows/apps/microsoft.advertising.winrt.ui.interstitialad.aspx), wire up all event handlers, and request an ad.\n\n    ``` syntax\n    // instantiate an InterstitialAd\n    InterstitialAd MyVideoAd = new InterstitialAd();\n\n    // wire up all 4 events, see below for function templates\n    MyVideoAd.AdReady += MyVideoAd_AdReady;\n    MyVideoAd.ErrorOccurred += MyVideoAd_ErrorOccurred;\n    MyVideoAd.Completed += MyVideoAd_Completed;\n    MyVideoAd.Cancelled += MyVideoAd_Cancelled;\n\n    // pre-fetch an ad 30-60 seconds before you need it\n    MyVideoAd.RequestAd(AdType.Video, MyAppId, MyAdUnitId);\n    ```\n\n6.  At the point in your code where the ad is to be shown, be sure the ad is ready, and show it.\n\n    ``` syntax\n    if ((InterstitialAdState.Ready) == (MyVideoAd.State))\n    {\n      MyVideoAd.Show();\n    }\n    ```\n\n7.  Define and code up the events.\n\n    ``` syntax\n    void MyVideoAd_AdReady(object sender, object e)\n    {\n      // code\n    }\n\n    void MyVideoAd_ErrorOccurred(object sender, AdErrorEventArgs e)\n    {\n      // code\n    }\n\n    void MyVideoAd_Completed(object sender, object e)\n    {  \n      // code\n    }\n\n    void MyVideoAd_Cancelled(object sender, object e)\n    {\n      // code\n    }\n    ```\n\n8.  Assign the `MyAppId` property to the test value provided in [Test mode values](test-mode-values.md). This value is used only used for testing; you will replace it with a live value before you publish your app.\n\n    ``` syntax\n    var MyAppId = \"d25517cb-12d4-4699-8bdc-52040c712cab\";\n    ```\n\n9.  Assign the `MyAdUnitId` property to the test value provided in [Test mode values](test-mode-values.md). This value is used only used for testing; you will replace it with a live value before you publish your app.\n\n    ``` syntax\n    var MyAdUnitId = \"11389925\";\n    ```\n\n10.  Build and test your app to confirm it is showing test ads.\n\n<span id=\"interstitialadshtml10\"/>\n### Interstitial ads (HTML/JavaScript)\n\nThis sample assumes you have created a Universal App project for JavaScript in Visual Studio 2015 and are targeting a specific CPU.\n\n1. Open your project in Visual Studio.\n2.  In **Reference Manager**, select one of the following references depending on your project type:\n\n    -   For a Universal Windows Platform (UWP) project: Expand **Universal Windows**, click **Extensions**, and then select the check box next to **Microsoft Advertising SDK for JavaScript** (Version 10.0).\n\n    -   For a Windows 8.1 project: Expand **Windows 8.1**, click **Extensions**, and then select the check box next to **Microsoft Advertising SDK for Windows 8.1 Native (JS)**.\n\n    -   For a Windows 8.1 project: Expand **Windows Phone 8.1**, click **Extensions**, and then select the check box next to **Microsoft Advertising SDK for Windows Phone 8.1 Native (JS)**.\n\n3.  In the HTML, include the following script reference.\n\n    ``` syntax\n    <script src=\"//Microsoft.Advertising.JavaScript/ad.js\"></script>\n    ```\n\n4.  Declare your `myAppId` and `myAdUnitId` properties.\n\n    ``` syntax\n    <script>\n      var myAppId = \"<your app id>\";\n      var myAdUnitId = \"<your adunit id>\";\n    </script>\n    ```\n\n5.  Instantiate an **InterstitialAd**, wire up all event handlers, and request an ad.\n\n    ``` syntax\n    // instantiate an InterstitialAd\n    window.interstitialAd = new MicrosoftNSJS.Advertising.InterstitialAd();\n\n    // wire up all 4 events, see below for function templates\n    window.interstitialAd.onAdReady = readyHandler;\n    window.interstitialAd.onErrorOccurred = errorHandler;\n    window.interstitialAd.onCompleted = completeHandler;\n    window.interstitialAd.onCancelled = cancelHandler;\n\n    // pre-fetch an ad 30-60 seconds before you need it\n    var myAdType = MicrosoftNSJS.Advertising.InterstitialAdType.video;\n    window.interstitialAd.requestAd(myAdType, myAppId, myAdUnitId);\n    ```\n\n6.  At the point in your code where the ad is to be shown, be sure the ad is ready, and show it.\n\n    ``` syntax\n    if ((MicrosoftNSJS.Advertising.InterstitialAdState.ready) == (window.interstitialAd.state)) {\n             window.interstitialAd.show();\n    }\n    ```\n\n7.  Define and code up the events.\n\n    ``` syntax\n    function readyHandler(sender) {\n      // code\n    }\n\n    function errorHandler(sender, args) {\n      // code\n    }\n\n    function completeHandler(sender) {\n      // code\n    }\n\n    function cancelHandler(sender) {\n      // code\n    }\n    ```\n\n7.  Assign the `MyAppId` property to the test value provided in [Test mode values](test-mode-values.md). This value is used only used for testing; you will replace it with a live value before you publish your app.\n\n    ``` syntax\n    var MyAppId = \"d25517cb-12d4-4699-8bdc-52040c712cab\";\n    ```\n\n8.  Assign the `MyAdUnitId` property to the test value provided in [Test mode values](test-mode-values.md). This value is used only used for testing; you will replace it with a live value before you publish your app.\n\n    ``` syntax\n    var MyAdUnitId = \"11389925\";\n    ```\n\n9.  Build and test your app to confirm it is showing test ads.\n\n<span id=\"interstitialadsdirectx10\"/>\n### Interstitial ads (C++ and DirectX with XAML interop)\n\nThis sample assumes you have created a Universal App project for XAML in Visual Studio 2015 and are targeting a specific CPU architecture.\n\n> **Important**   This code is written in C++ as required for DirectX.\n\n \n1. Open your project in Visual Studio.\n1.  In **Reference Manager**, select one of the following references depending on your project type:\n\n    -   For a Universal Windows Platform (UWP) project: Expand **Universal Windows**, click **Extensions**, and then select the check box next to **Microsoft Advertising SDK for XAML** (Version 10.0).\n\n    -   For a Windows 8.1 project: Expand **Windows 8.1**, click **Extensions**, and then select the check box next to **Ad Mediator SDK for Windows 8.1 XAML**. This option will add both the Microsoft advertising and ad mediator libraries to your project, but you can ignore the ad mediator libraries.\n\n    -   For a Windows Phone 8.1 project: Expand **Windows Phone 8.1**, click **Extensions**, and then select the check box next to **Ad Mediator SDK for Windows Phone 8.1 XAML**. This option will add both the Microsoft advertising and ad mediator libraries to your project, but you can ignore the ad mediator libraries.\n\n2.  In the appropriate header file for your app, declare the interstitial ad object and related properties/methods.\n\n    ``` syntax\n    Microsoft::Advertising::WinRT::UI::InterstitialAd^ m_ia;\n    void OnAdReady(Object^ sender, Object^ args);\n    void OnAdCompleted(Object^ sender, Object^ args);\n    void OnAdCancelled(Object^ sender, Object^ args);\n    void OnAdError (Object^ sender,  Microsoft::Advertising::WinRT::UI::AdErrorEventArgs^ args);\n    ```\n\n3.  Declare your `AppId` and `AdUnitId` properties.\n\n    ``` syntax\n    #if WINDOWS_PHONE_APP\n    static Platform::String^ IA_APPID = L\"<your app id for phone>\";\n    static Platform::String^ IA_ADUNITID = L\"<your ad unit for phone>\";\n    #endif\n\n    #if WINDOWS_APP\n    static Platform::String^ IA_APPID = L\"<your app id for windows>\";\n    static Platform::String^ IA_ADUNITID = L\"<your ad unit for windows>\";\n    #endif\n    ```\n\n4.  In the .cpp file, add a namespace reference.\n\n    ``` syntax\n    using namespace Microsoft::Advertising::WinRT::UI;\n    ```\n\n5.  Instantiate an **InterstitialAd**, wire up all event handlers, and request an ad.\n\n    ``` syntax\n    // Instantiate an InterstitialAd.\n    m_ia = ref new InterstitialAd();\n\n    // Wire up all 4 events, see below for function templates.            \n    m_ia->AdReady += ref new Windows::Foundation::EventHandler<Platform::Object ^>\n        (this, &Simple3DGameXaml::DirectXPage::OnAdReady);\n    m_ia->Completed += ref new Windows::Foundation::EventHandler<Platform::Object ^>\n        (this, &Simple3DGameXaml::DirectXPage::OnAdCompleted);\n    m_ia->Cancelled += ref new Windows::Foundation::EventHandler<Platform::Object ^>\n        (this, &Simple3DGameXaml::DirectXPage::OnAdCancelled);\n    m_ia->ErrorOccurred += ref new\n        Windows::Foundation::EventHandler<Microsoft::Advertising::WinRT::UI::AdErrorEventArgs ^>\n            (this, &Simple3DGameXaml::DirectXPage::OnAdError);\n\n    // Pre-fetch an ad 30-60 seconds before you need it.\n    m_ia->RequestAd(AdType::Video, IA_APPID, IA_ADUNITID);\n    ```\n\n6.  At the point in your code where the ad is to be shown, be sure the ad is ready, and show it.\n\n    ``` syntax\n    if ((InterstitialAdState::Ready == m_ia->State))\n    {\n        m_ia->Show();\n    }\n    ```\n\n7.  Define and code up the events.\n\n    ``` syntax\n    void DirectXPage::OnAdReady(Object^ sender, Object^ args)\n    {\n      // code\n    }\n\n    void DirectXPage::OnAdCompleted(Object^ sender, Object^ args)\n    {\n      // code\n    }\n\n    void DirectXPage::OnAdCancelled(Object^ sender, Object^ args)\n    {\n      // code\n    }\n\n    void DirectXPage::OnAdError\n      (Object^ sender, Microsoft::Advertising::WinRT::UI::AdErrorEventArgs^ args)\n    {\n      // code\n    }\n    ```\n\n8.  Assign the `AppId` property to the test value provided in [Test mode values](test-mode-values.md). This value is used only used for testing; you will replace it with a live value before you publish your app.\n\n    ``` syntax\n    static Platform::String^ IA_APPID = L\"d25517cb-12d4-4699-8bdc-52040c712cab\";\n    ```\n\n9.  Assign the `AdUnitId` property to the test value provided in [Test mode values](test-mode-values.md). This value is used only used for testing; you will replace it with a live value before you publish your app.\n\n    ``` syntax\n    static Platform::String^ IA_ADUNITID = L\"11389925\";\n    ```\n\n10. Build and test your app to confirm it is showing test ads.\n\n### Release your app with live ads using Windows Dev Center\n\n1.  In the Dev Center dashboard, go to the **Monetization** &gt; **Monetize with ads** page for your app, and [create a standalone Microsoft Advertising unit](../publish/monetize-with-ads.md). For the ad unit type, specify **Video interstitial**. Make note of both the ad unit ID and the application ID.\n\n2.  In your code, replace the test ad unit values with the live values you generated in Dev Center.\n\n3.  [Submit your app](../publish/app-submissions.md) to the Store using the Windows Dev Center dashboard.\n\n4.  Review your [advertising performance reports](../publish/advertising-performance-report.md) in the Dev Center dashboard.\n\n<span id=\"interstitialbestpractices10\"/>\n## Interstitial best practices\n\n\nFor more information about how to use interstitial ads effectively, see [UI and user experience guidelines](ui-and-user-experience-guidelines.md).\n\n<span id=\"targetplatform10\"/>\n## Remove reference errors: target a specific CPU platform (XAML and HTML)\n\n\nWhen using the Microsoft advertising libraries, you cannot target **Any CPU** in your project. If your project targets the **Any CPU** platform, you may see a warning in your project after you add a reference to the Microsoft advertising libraries. To remove this warning, update your project to use an architecture-specific build output (for example, **x86**). For more information, see [Known issues](known-issues-for-the-advertising-libraries.md).\n\n## Related topics\n\n\n* [Interstitial ad sample code in C#](interstitial-ad-sample-code-in-c.md)\n* [Interstitial ad sample code in JavaScript](interstitial-ad-sample-code-in-javascript.md)\n* [Advertising samples on GitHub](http://aka.ms/githubads)\n\n \n\n \n"}