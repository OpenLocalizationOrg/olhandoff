{"nodes":[{"content":"Develop your app to support the layouts and fonts of multiple languages, including RTL (right-to-left) flow direction.","pos":[32,150]},{"content":"Adjust layout and fonts, and support RTL","pos":[158,198]},{"content":"Adjust layout and fonts, and support RTL","pos":[324,364]},{"content":"Develop your app to support the layouts and fonts of multiple languages, including RTL (right-to-left) flow direction.","pos":[370,488]},{"pos":[601,618],"content":"Layout guidelines"},{"content":"Some languages, such as German and Finnish, require more space than English for their text.","pos":[621,712]},{"content":"The fonts for some languages, such as Japanese, require more height.","pos":[713,781]},{"content":"And some languages, such as Arabic and Hebrew, require that text layout and app layout must be in right-to-left (RTL) reading order.","pos":[782,914]},{"content":"Use flexible layout mechanisms instead of absolute positioning, fixed widths, or fixed heights.","pos":[916,1011]},{"content":"When necessary, particular UI elements can be adjusted based on language.","pos":[1012,1085]},{"pos":[1137,1141],"content":"XAML"},{"pos":[1143,1176],"content":"Specify a <bpt id=\"p1\">**</bpt>Uid<ept id=\"p1\">**</ept> for an element:"},{"content":"Ensure that your app's ResW file has a resource for Block1.Width, which you can set for each language that you localize into.","pos":[1217,1342]},{"pos":[1344,1585],"content":"For Windows Store apps using C++, C<ph id=\"ph1\">\\#</ph>, or Visual Basic, use the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>FlowDirection<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br208716)</ept> property, with symmetrical padding and margins, to enable localization for other layout directions."},{"content":"XAML layout controls such as <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Grid<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br242704)</ept> scale and flip automatically with the <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>FlowDirection<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/br208716)</ept> property.","pos":[1587,1810]},{"content":"Expose your own <bpt id=\"p1\">**</bpt>FlowDirection<ept id=\"p1\">**</ept> property in your app as a resource for localizers.","pos":[1811,1895]},{"pos":[1897,1945],"content":"Specify a <bpt id=\"p1\">**</bpt>Uid<ept id=\"p1\">**</ept> for the main page of your app:"},{"pos":[1983,2122],"content":"Ensure that your app's <bpt id=\"p1\">**</bpt>ResW<ept id=\"p1\">**</ept> file has a resource for MainPage.FlowDirection, which you can set for each language that you localize into."},{"pos":[2174,2178],"content":"HTML"},{"content":"For Windows Store apps using JavaScript, use <bpt id=\"p1\">[</bpt>Cascading Style Sheets (CSS)<ept id=\"p1\">](https://msdn.microsoft.com/library/ms531209)</ept> layout mechanisms such as <bpt id=\"p2\">[</bpt>-ms-grid<ept id=\"p2\">](https://msdn.microsoft.com/en-us/library/windows/apps/hh465453.aspx#g_section)</ept> and <bpt id=\"p3\">[</bpt>â€“ms-box<ept id=\"p3\">](https://msdn.microsoft.com/en-us/library/windows/apps/hh465453.aspx#f_section)</ept>.","pos":[2180,2510]},{"content":"Use symmetrical padding and margins to enable localization for various layout directions.","pos":[2511,2600]},{"content":"Your app can also use the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>:-ms-lang()<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/cc848867)</ept> pseudo-class selector to adjust CSS properties such as width on particular elements based on the language of the app.","pos":[2602,2808]},{"content":"To enable this, the App Host sets the root element's <bpt id=\"p1\">**</bpt>lang<ept id=\"p1\">**</ept> attribute to the app language.","pos":[2809,2901]},{"content":"CSS","pos":[2905,2908]},{"content":"Windows Store apps using JavaScript that use the ui-light.css or ui-dark.css style sheets have their body layout direction set automatically, based on the app language.","pos":[2964,3132]},{"content":"The following CSS is in ui-light and ui-dark.css, and you don't need to write it yourself.","pos":[3133,3223]},{"content":"CSS","pos":[3227,3230]},{"content":"This means that most app layouts are set correctly when the system uses a right-to-left language.","pos":[3286,3383]},{"content":"Like <bpt id=\"p1\">[</bpt>WinJS.UI<ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br229782)</ept> controls, your app can use the <bpt id=\"p2\">[</bpt><bpt id=\"p3\">**</bpt>:-ms-lang()<ept id=\"p3\">**</ept><ept id=\"p2\">](https://msdn.microsoft.com/library/cc848867)</ept> pseudo-class selector to adjust physical CSS properties, such as <bpt id=\"p4\">**</bpt>margin<ept id=\"p4\">**</ept> and <bpt id=\"p5\">**</bpt>padding<ept id=\"p5\">**</ept>.","pos":[3385,3645]},{"content":"You don't need to adjust logical CSS properties that use keywords such as <bpt id=\"p1\">**</bpt>after<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>before<ept id=\"p2\">**</ept>.","pos":[3646,3745]},{"content":"Don't use the <bpt id=\"p1\">**</bpt>align<ept id=\"p1\">**</ept> property or attribute in HTML.","pos":[3747,3801]},{"content":"Instead, use the <bpt id=\"p1\">**</bpt>direction<ept id=\"p1\">**</ept> property to control alignment of particular components.","pos":[3802,3888]},{"pos":[3890,4011],"content":"Use the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>writing-mode<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/ms531187)</ept> property to support vertical text layouts in CSS."},{"pos":[4121,4137],"content":"Mirroring images"},{"pos":[4190,4194],"content":"XAML"},{"pos":[4196,4396],"content":"If your app has images that must be mirrored (that is, the same image can be flipped) for RTL, you can apply the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>FlowDirection<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br208716)</ept> property:"},{"pos":[4605,4609],"content":"HTML"},{"content":"If your app has images that must be mirrored (that is, the same image can be flipped) for RTL, you can use CSS transforms to mirror your images at rendering time by adding a .mirrorable class to your elements and adding the following CSS class:","pos":[4611,4855]},{"content":"<bpt id=\"p1\">**</bpt>For both XAML and HTML:<ept id=\"p1\">**</ept> If your app requires a different image to flip the image correctly, you can use the resource management system with the <bpt id=\"p2\">[</bpt>layoutdir qualifier<ept id=\"p2\">](https://msdn.microsoft.com/library/windows/apps/xaml/hh965324)</ept>.","pos":[4908,5141]},{"content":"The system chooses an image named file.layoutdir-rtl.png when the <bpt id=\"p1\">[</bpt>application language<ept id=\"p1\">](manage-language-and-region.md)</ept> is set to an RTL language.","pos":[5142,5288]},{"content":"This approach may be necessary when some part of the image is flipped, but another part isn't.","pos":[5289,5383]},{"pos":[5460,5465],"content":"Fonts"},{"content":"<bpt id=\"p1\">**</bpt>For both XAML and HTML:<ept id=\"p1\">**</ept> Use the <bpt id=\"p2\">[</bpt><bpt id=\"p3\">**</bpt>LanguageFont<ept id=\"p3\">**</ept><ept id=\"p2\">](https://msdn.microsoft.com/library/windows/apps/br206864)</ept> font-mapping APIs for programmatic access to the recommended font family, size, weight, and style for a particular language.","pos":[5468,5705]},{"content":"The <bpt id=\"p1\">**</bpt>LanguageFont<ept id=\"p1\">**</ept> object provides access to the correct font info for various categories of content including UI headers, notifications, body text, and user-editable document body fonts.","pos":[5706,5895]},{"pos":[5947,5951],"content":"HTML"},{"content":"Windows Store apps using JavaScript that use the ui-light.css or ui-dark.css style sheets have their font set automatically to the most appropriate font, based on the app language.","pos":[5953,6133]},{"content":"The App Host sets the root element's <bpt id=\"p1\">**</bpt>lang<ept id=\"p1\">**</ept> attribute to the app language.","pos":[6134,6210]},{"content":"Apps that display multiple languages on a single page should set the <bpt id=\"p1\">**</bpt>lang<ept id=\"p1\">**</ept> attribute for the section in each language.","pos":[6212,6333]},{"content":"The <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>:-ms-lang()<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/cc848867)</ept> pseudo-class selector picks up the correct font for each section of the page.","pos":[6334,6478]}],"content":"---\nauthor: DelfCo\nDescription: Develop your app to support the layouts and fonts of multiple languages, including RTL (right-to-left) flow direction.\ntitle: Adjust layout and fonts, and support RTL\nms.assetid: F2522B07-017D-40F1-B3C8-C4D0DFD03AC3\nlabel: Adjust layout and fonts, and support RTL\ntemplate: detail.hbs\n---\n\n# Adjust layout and fonts, and support RTL\n\n\n\n\n\nDevelop your app to support the layouts and fonts of multiple languages, including RTL (right-to-left) flow direction.\n\n## <span id=\"Layout_guidelines\"></span><span id=\"layout_guidelines\"></span><span id=\"LAYOUT_GUIDELINES\"></span>Layout guidelines\n\n\nSome languages, such as German and Finnish, require more space than English for their text. The fonts for some languages, such as Japanese, require more height. And some languages, such as Arabic and Hebrew, require that text layout and app layout must be in right-to-left (RTL) reading order.\n\nUse flexible layout mechanisms instead of absolute positioning, fixed widths, or fixed heights. When necessary, particular UI elements can be adjusted based on language.\n\n### <span id=\"XAML\"></span><span id=\"xaml\"></span>XAML\n\nSpecify a **Uid** for an element:\n\n```XML\n<TextBlock x:Uid=\"Block1\">\n```\n\nEnsure that your app's ResW file has a resource for Block1.Width, which you can set for each language that you localize into.\n\nFor Windows Store apps using C++, C\\#, or Visual Basic, use the [**FlowDirection**](https://msdn.microsoft.com/library/windows/apps/br208716) property, with symmetrical padding and margins, to enable localization for other layout directions.\n\nXAML layout controls such as [**Grid**](https://msdn.microsoft.com/library/windows/apps/br242704) scale and flip automatically with the [**FlowDirection**](https://msdn.microsoft.com/library/windows/apps/br208716) property. Expose your own **FlowDirection** property in your app as a resource for localizers.\n\nSpecify a **Uid** for the main page of your app:\n\n```XML\n<Page x:Uid=\"MainPage\">\n```\n\nEnsure that your app's **ResW** file has a resource for MainPage.FlowDirection, which you can set for each language that you localize into.\n\n### <span id=\"HTML\"></span><span id=\"html\"></span>HTML\n\nFor Windows Store apps using JavaScript, use [Cascading Style Sheets (CSS)](https://msdn.microsoft.com/library/ms531209) layout mechanisms such as [-ms-grid](https://msdn.microsoft.com/en-us/library/windows/apps/hh465453.aspx#g_section) and [â€“ms-box](https://msdn.microsoft.com/en-us/library/windows/apps/hh465453.aspx#f_section). Use symmetrical padding and margins to enable localization for various layout directions.\n\nYour app can also use the [**:-ms-lang()**](https://msdn.microsoft.com/library/cc848867) pseudo-class selector to adjust CSS properties such as width on particular elements based on the language of the app. To enable this, the App Host sets the root element's **lang** attribute to the app language.\n\n**CSS**\n```CSS\n.item:-ms-lang(de, fi) { width: 350px; }\n```\n\nWindows Store apps using JavaScript that use the ui-light.css or ui-dark.css style sheets have their body layout direction set automatically, based on the app language. The following CSS is in ui-light and ui-dark.css, and you don't need to write it yourself.\n\n**CSS**\n```CSS\nbody:-ms-lang(ar,heâ€¦) { direction: rtl;}\n```\n\nThis means that most app layouts are set correctly when the system uses a right-to-left language.\n\nLike [WinJS.UI](https://msdn.microsoft.com/library/windows/apps/br229782) controls, your app can use the [**:-ms-lang()**](https://msdn.microsoft.com/library/cc848867) pseudo-class selector to adjust physical CSS properties, such as **margin** and **padding**. You don't need to adjust logical CSS properties that use keywords such as **after** and **before**.\n\nDon't use the **align** property or attribute in HTML. Instead, use the **direction** property to control alignment of particular components.\n\nUse the [**writing-mode**](https://msdn.microsoft.com/library/ms531187) property to support vertical text layouts in CSS.\n\n## <span id=\"Mirroring_images\"></span><span id=\"mirroring_images\"></span><span id=\"MIRRORING_IMAGES\"></span>Mirroring images\n\n\n### <span id=\"XAML\"></span><span id=\"xaml\"></span>XAML\n\nIf your app has images that must be mirrored (that is, the same image can be flipped) for RTL, you can apply the [**FlowDirection**](https://msdn.microsoft.com/library/windows/apps/br208716) property:\n\n```XML\n<!-- en-US\\localized.xaml -->\n<Image ... FlowDirection=\"LeftToRight\" />\n\n<!-- ar-SA\\localized.xaml -->\n<Image ... FlowDirection=\"RightToLeft\" />\n```\n\n### <span id=\"HTML\"></span><span id=\"html\"></span>HTML\n\nIf your app has images that must be mirrored (that is, the same image can be flipped) for RTL, you can use CSS transforms to mirror your images at rendering time by adding a .mirrorable class to your elements and adding the following CSS class:\n\n```CSS\n.mirrorable { transform: scaleX(-1); }\n```\n\n**For both XAML and HTML:** If your app requires a different image to flip the image correctly, you can use the resource management system with the [layoutdir qualifier](https://msdn.microsoft.com/library/windows/apps/xaml/hh965324). The system chooses an image named file.layoutdir-rtl.png when the [application language](manage-language-and-region.md) is set to an RTL language. This approach may be necessary when some part of the image is flipped, but another part isn't.\n\n## <span id=\"Fonts\"></span><span id=\"fonts\"></span><span id=\"FONTS\"></span>Fonts\n\n\n**For both XAML and HTML:** Use the [**LanguageFont**](https://msdn.microsoft.com/library/windows/apps/br206864) font-mapping APIs for programmatic access to the recommended font family, size, weight, and style for a particular language. The **LanguageFont** object provides access to the correct font info for various categories of content including UI headers, notifications, body text, and user-editable document body fonts.\n\n### <span id=\"HTML\"></span><span id=\"html\"></span>HTML\n\nWindows Store apps using JavaScript that use the ui-light.css or ui-dark.css style sheets have their font set automatically to the most appropriate font, based on the app language. The App Host sets the root element's **lang** attribute to the app language.\n\nApps that display multiple languages on a single page should set the **lang** attribute for the section in each language. The [**:-ms-lang()**](https://msdn.microsoft.com/library/cc848867) pseudo-class selector picks up the correct font for each section of the page.\n\n \n\n \n\n\n\n"}