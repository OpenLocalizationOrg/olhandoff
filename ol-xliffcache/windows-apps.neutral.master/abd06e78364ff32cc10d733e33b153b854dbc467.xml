{"nodes":[{"content":"How to turn off overscan","pos":[26,50]},{"content":"How to draw UI to the edge of the screen","pos":[83,123]},{"content":"By default, applications will have borders placed at the edges of the viewport.","pos":[127,206]},{"content":"This is to account for the TV-safe area.","pos":[207,247]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Designing for Xbox and TV<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkID=760736#tv-safe-area)</ept>.","pos":[248,362]},{"content":"We recommend turning this off and drawing to the edge of the screen.","pos":[364,432]},{"content":"You can draw to the edge of the screen by adding the following code when your application starts:","pos":[433,530]},{"content":"Note: C++/DirectX applications do not have to worry about this.","pos":[692,755]},{"content":"The system will always render your application to the edge of the screen.","pos":[756,829]}],"content":"---\nauthor: payzer\ntitle: How to turn off overscan\ndescription: \narea: Xbox\n---\n\n# How to draw UI to the edge of the screen   \nBy default, applications will have borders placed at the edges of the viewport. This is to account for the TV-safe area. For more information, see [Designing for Xbox and TV](http://go.microsoft.com/fwlink/?LinkID=760736#tv-safe-area).  We recommend turning this off and drawing to the edge of the screen. You can draw to the edge of the screen by adding the following code when your application starts:\n   \n`Windows.UI.ViewManagement.ApplicationView.GetForCurrentView().SetDesiredBoundsMode(Windows.UI.ViewManagement.ApplicationViewBoundsMode.UseCoreWindow);`\n   \nNote: C++/DirectX applications do not have to worry about this. The system will always render your application to the edge of the screen.\n"}