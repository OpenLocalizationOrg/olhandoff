{"nodes":[{"content":"Graphics diagnostics tools","pos":[27,53]},{"content":"Learn how to get and use the graphics diagnostics features including Graphics Debugging, Graphics Frame Analysis, and GPU Usage in Visual Studio.","pos":[67,212]},{"content":"Graphics diagnostics tools","pos":[269,295]},{"content":"Updated for UWP apps on Windows 10.","pos":[301,336]},{"content":"For Windows 8.x articles, see the <bpt id=\"p1\">[</bpt>archive<ept id=\"p1\">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept>","pos":[337,429]},{"content":"With Windows 10, the graphics diagnostic tools are now available from within Windows as an optional feature.","pos":[434,542]},{"content":"To use the graphics diagnostic features provided in the runtime and Visual Studio to develop DirectX apps or games, install the optional Graphics Tools feature:","pos":[543,703]},{"content":"Go to <bpt id=\"p1\">**</bpt>Settings<ept id=\"p1\">**</ept>, select <bpt id=\"p2\">**</bpt>System<ept id=\"p2\">**</ept>, select <bpt id=\"p3\">**</bpt>Optional features<ept id=\"p3\">**</ept>, and then click <bpt id=\"p4\">**</bpt>Add a feature<ept id=\"p4\">**</ept>.","pos":[709,811]},{"content":"Go to <bpt id=\"p1\">**</bpt>Settings<ept id=\"p1\">**</ept>, select <bpt id=\"p2\">**</bpt>System<ept id=\"p2\">**</ept>, select <bpt id=\"p3\">**</bpt>Apps &amp; features<ept id=\"p3\">**</ept>, select <bpt id=\"p4\">**</bpt>Manage optional features<ept id=\"p4\">**</ept>, and then click <bpt id=\"p5\">**</bpt>Add a feature<ept id=\"p5\">**</ept>.","pos":[812,949]},{"pos":[954,1010],"content":"In the <bpt id=\"p1\">**</bpt>Add a Feature<ept id=\"p1\">**</ept> list, click <bpt id=\"p2\">**</bpt>Graphics Tools<ept id=\"p2\">**</ept>."},{"content":"Graphics diagnostics features include the ability to create Direct3D debug devices (via Direct3D SDK Layers) in the DirectX runtime, plus Graphics Debugging, Frame Analysis, and GPU Usage.","pos":[1012,1200]},{"content":"Graphics Debugging lets you trace the Direct3D calls being made by your app.","pos":[1206,1282]},{"content":"Then, you can replay those calls, inspect parameters, debug and experiment with shaders, and visualize graphics assets to diagnose rendering issues.","pos":[1283,1431]},{"content":"Logs can be taken on Windows PCs, simulators, or devices, and be played back on different hardware.","pos":[1432,1531]},{"content":"Graphics Frame Analysis in Visual Studio runs on a graphics debugging log and gathers baseline timing for the Direct3D draw calls.","pos":[1536,1666]},{"content":"It then performs a set of experiments by modifying various graphics settings and produces a table of timing results.","pos":[1667,1783]},{"content":"You can use this data to understand graphics performance issues in your app, and you can review results of the various experiments to identify opportunities for performance improvements.","pos":[1784,1970]},{"content":"GPU Usage in Visual Studio allows you to monitor GPU use in real time.","pos":[1975,2045]},{"content":"It collects and analyzes the timing data of the workloads being handled by the CPU and GPU, so you can determine where the bottlenecks are.","pos":[2046,2185]},{"content":"Related topics","pos":[2190,2204]},{"content":"Graphics Diagnostics Overview in Visual Studio","pos":[2208,2254]}],"content":"---\nauthor: mtoepke\ntitle: Graphics diagnostics tools\ndescription: Learn how to get and use the graphics diagnostics features including Graphics Debugging, Graphics Frame Analysis, and GPU Usage in Visual Studio.\nms.assetid: 629ea462-18ed-a333-07e9-cc87ea2dcd93\n---\n\n# Graphics diagnostics tools\n\n\n\\[ Updated for UWP apps on Windows 10. For Windows 8.x articles, see the [archive](http://go.microsoft.com/fwlink/p/?linkid=619132) \\]\n\nWith Windows 10, the graphics diagnostic tools are now available from within Windows as an optional feature. To use the graphics diagnostic features provided in the runtime and Visual Studio to develop DirectX apps or games, install the optional Graphics Tools feature:\n\n1.  Go to **Settings**, select **System**, select **Optional features**, and then click **Add a feature**. Go to **Settings**, select **System**, select **Apps & features**, select **Manage optional features**, and then click **Add a feature**.\n2.  In the **Add a Feature** list, click **Graphics Tools**.\n\nGraphics diagnostics features include the ability to create Direct3D debug devices (via Direct3D SDK Layers) in the DirectX runtime, plus Graphics Debugging, Frame Analysis, and GPU Usage.\n\n-   Graphics Debugging lets you trace the Direct3D calls being made by your app. Then, you can replay those calls, inspect parameters, debug and experiment with shaders, and visualize graphics assets to diagnose rendering issues. Logs can be taken on Windows PCs, simulators, or devices, and be played back on different hardware.\n-   Graphics Frame Analysis in Visual Studio runs on a graphics debugging log and gathers baseline timing for the Direct3D draw calls. It then performs a set of experiments by modifying various graphics settings and produces a table of timing results. You can use this data to understand graphics performance issues in your app, and you can review results of the various experiments to identify opportunities for performance improvements.\n-   GPU Usage in Visual Studio allows you to monitor GPU use in real time. It collects and analyzes the timing data of the workloads being handled by the CPU and GPU, so you can determine where the bottlenecks are.\n\n## Related topics\n\n\n[Graphics Diagnostics Overview in Visual Studio](http://go.microsoft.com/fwlink/p/?LinkID=526382)\n\n \n\n \n\n\n\n\n"}