<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="zh-cn" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">windows-apps-src\controls-and-patterns\nav-pane.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">eb5600a78d7e8cfcad98509afc4de2d117066f7e</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-781aacf</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>Provides top-level navigation while conserving screen real estate.</source>
          <target>Provides top-level navigation while conserving screen real estate.</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>Guidelines for navigation panes</source>
          <target>Guidelines for navigation panes</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>Nav panes</source>
          <target>Nav panes</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source>A navigation pane (or just "nav" pane) is a pattern that allows for many top-level navigation items while conserving screen real estate.</source>
          <target>A navigation pane (or just "nav" pane) is a pattern that allows for many top-level navigation items while conserving screen real estate.</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source>The nav pane is widely used for mobile apps, but also works well on larger screens.</source>
          <target>The nav pane is widely used for mobile apps, but also works well on larger screens.</target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source>When used as an overlay, the pane remains collapsed and out-of-the way until the user presses the button, which is handy for smaller screens.</source>
          <target>When used as an overlay, the pane remains collapsed and out-of-the way until the user presses the button, which is handy for smaller screens.</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source>When used in its docked mode, the pane remains open, which allows greater utility if there's enough screen real estate.</source>
          <target>When used in its docked mode, the pane remains open, which allows greater utility if there's enough screen real estate.</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source>Example of a nav pane</source>
          <target>Example of a nav pane</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source>Important APIs</source>
          <target>Important APIs</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source>SplitView class</source>
          <target>SplitView class</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source>Is this the right pattern?</source>
          <target>Is this the right pattern?</target>
        </segment>
      </unit>
      <unit id="112">
        <segment state="initial">
          <source>The nav pane works well for:</source>
          <target>The nav pane works well for:</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source>Apps with many top-level navigation items that are of similar type.</source>
          <target>Apps with many top-level navigation items that are of similar type.</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source>For example, a sports app with categories like Football, Baseball, Basketball, Soccer, and so on.</source>
          <target>For example, a sports app with categories like Football, Baseball, Basketball, Soccer, and so on.</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source>Providing a consistent navigational experience across apps.</source>
          <target>Providing a consistent navigational experience across apps.</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source>Nav pane should include only navigational elements, not actions.</source>
          <target>Nav pane should include only navigational elements, not actions.</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source>A medium-to-high number (5-10+) of top-level navigational categories.</source>
          <target>A medium-to-high number (5-10+) of top-level navigational categories.</target>
        </segment>
      </unit>
      <unit id="118">
        <segment state="initial">
          <source>Preserving screen real estate (as an overlay).</source>
          <target>Preserving screen real estate (as an overlay).</target>
        </segment>
      </unit>
      <unit id="119">
        <segment state="initial">
          <source>Navigation items that are infrequently accessed.</source>
          <target>Navigation items that are infrequently accessed.</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source>(as an overlay).</source>
          <target>(as an overlay).</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source>Building a nav pane</source>
          <target>Building a nav pane</target>
        </segment>
      </unit>
      <unit id="122">
        <segment state="initial">
          <source>The nav pane pattern consists of a pane for navigation categories, a content area, and an optional button to open or close the pane.</source>
          <target>The nav pane pattern consists of a pane for navigation categories, a content area, and an optional button to open or close the pane.</target>
        </segment>
      </unit>
      <unit id="123">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](split-view.md)</data>
        </originalData>
        <segment state="initial">
          <source>The easiest way to build a nav pane is with a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">split view control</pc>, which comes with an empty pane and a content area that's always visible.</source>
          <target>The easiest way to build a nav pane is with a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">split view control</pc>, which comes with an empty pane and a content area that's always visible.</target>
        </segment>
      </unit>
      <unit id="124">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://github.com/Microsoft/Windows-universal-samples/tree/master/Samples/XamlNavigation)</data>
        </originalData>
        <segment state="initial">
          <source>To try out code implementing this pattern, download the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">XAML Navigation solution</pc> from GitHub.</source>
          <target>To try out code implementing this pattern, download the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">XAML Navigation solution</pc> from GitHub.</target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source>Pane</source>
          <target>Pane</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source>Headers for navigational categories go in the pane.</source>
          <target>Headers for navigational categories go in the pane.</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source>Entry points to app settings and account management, if applicable, also go in the pane.</source>
          <target>Entry points to app settings and account management, if applicable, also go in the pane.</target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source>Navigation headers are usually a list of items for the user to choose from.</source>
          <target>Navigation headers are usually a list of items for the user to choose from.</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source>Example of the nav pane's pane</source>
          <target>Example of the nav pane's pane</target>
        </segment>
      </unit>
      <unit id="130">
        <segment state="initial">
          <source>Content area</source>
          <target>Content area</target>
        </segment>
      </unit>
      <unit id="131">
        <segment state="initial">
          <source>The content area is where information for the selected nav location is displayed.</source>
          <target>The content area is where information for the selected nav location is displayed.</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source>It can contain individual elements or other sub-level navigation.</source>
          <target>It can contain individual elements or other sub-level navigation.</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source>Button</source>
          <target>Button</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source>When present, the button allows users to open and close the pane.</source>
          <target>When present, the button allows users to open and close the pane.</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source>The button remains visible in a fixed position and does not move with the pane.</source>
          <target>The button remains visible in a fixed position and does not move with the pane.</target>
        </segment>
      </unit>
      <unit id="136">
        <segment state="initial">
          <source>We recommend placing the button in the upper-left corner of your app.</source>
          <target>We recommend placing the button in the upper-left corner of your app.</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source>The nav pane button is visualized as three stacked horizontal lines and is commonly referred to as the "hamburger" button.</source>
          <target>The nav pane button is visualized as three stacked horizontal lines and is commonly referred to as the "hamburger" button.</target>
        </segment>
      </unit>
      <unit id="138">
        <segment state="initial">
          <source>Example of the nav pane button</source>
          <target>Example of the nav pane button</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source>The button is usually associated with a text string.</source>
          <target>The button is usually associated with a text string.</target>
        </segment>
      </unit>
      <unit id="140">
        <segment state="initial">
          <source>At the top level of the app, the app title can be displayed next to the button.</source>
          <target>At the top level of the app, the app title can be displayed next to the button.</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source>At lower levels of the app, the text string may be the title of the page that the user is currently on.</source>
          <target>At lower levels of the app, the text string may be the title of the page that the user is currently on.</target>
        </segment>
      </unit>
      <unit id="142">
        <segment state="initial">
          <source>Nav pane variations</source>
          <target>Nav pane variations</target>
        </segment>
      </unit>
      <unit id="143">
        <segment state="initial">
          <source>The nav pane has three modes: overlay, compact and inline.</source>
          <target>The nav pane has three modes: overlay, compact and inline.</target>
        </segment>
      </unit>
      <unit id="144">
        <segment state="initial">
          <source>An overlay collapses and expands as needed.</source>
          <target>An overlay collapses and expands as needed.</target>
        </segment>
      </unit>
      <unit id="145">
        <segment state="initial">
          <source>When compact, the pane always shows as a narrow sliver which can be expanded.</source>
          <target>When compact, the pane always shows as a narrow sliver which can be expanded.</target>
        </segment>
      </unit>
      <unit id="146">
        <segment state="initial">
          <source>An inline pane remains open by default.</source>
          <target>An inline pane remains open by default.</target>
        </segment>
      </unit>
      <unit id="147">
        <segment state="initial">
          <source>Overlay</source>
          <target>Overlay</target>
        </segment>
      </unit>
      <unit id="148">
        <segment state="initial">
          <source>An overlay can be used on any screen size and in either portrait or landscape orientation.</source>
          <target>An overlay can be used on any screen size and in either portrait or landscape orientation.</target>
        </segment>
      </unit>
      <unit id="149">
        <segment state="initial">
          <source>In its default (collapsed) state, the overlay takes up no real-estate, with only the button shown.</source>
          <target>In its default (collapsed) state, the overlay takes up no real-estate, with only the button shown.</target>
        </segment>
      </unit>
      <unit id="150">
        <segment state="initial">
          <source>Provides on-demand navigation that conserves screen real estate.</source>
          <target>Provides on-demand navigation that conserves screen real estate.</target>
        </segment>
      </unit>
      <unit id="151">
        <segment state="initial">
          <source>Ideal for apps on phones and phablets.</source>
          <target>Ideal for apps on phones and phablets.</target>
        </segment>
      </unit>
      <unit id="152">
        <segment state="initial">
          <source>The pane is hidden by default, with only the button visible.</source>
          <target>The pane is hidden by default, with only the button visible.</target>
        </segment>
      </unit>
      <unit id="153">
        <segment state="initial">
          <source>Pressing the nav pane button opens and closes the overlay.</source>
          <target>Pressing the nav pane button opens and closes the overlay.</target>
        </segment>
      </unit>
      <unit id="154">
        <segment state="initial">
          <source>The expanded state is transient and is dismissed when a selection is made, when the back button is used, or when the user taps outside of the pane.</source>
          <target>The expanded state is transient and is dismissed when a selection is made, when the back button is used, or when the user taps outside of the pane.</target>
        </segment>
      </unit>
      <unit id="155">
        <segment state="initial">
          <source>The overlay draws over the top of content and does not reflow content.</source>
          <target>The overlay draws over the top of content and does not reflow content.</target>
        </segment>
      </unit>
      <unit id="156">
        <segment state="initial">
          <source>Compact</source>
          <target>Compact</target>
        </segment>
      </unit>
      <unit id="157">
        <originalData>
          <data id="id1">`CompactOverlay`</data>
          <data id="id2">`CompactInline`</data>
        </originalData>
        <segment state="initial">
          <source>Compact mode can be specified as <ph dataRef="id1" id="ph1" />, which overlays content when opened, or <ph dataRef="id2" id="ph2" />, which pushes content out of its way.</source>
          <target>Compact mode can be specified as <ph dataRef="id1" id="ph1" />, which overlays content when opened, or <ph dataRef="id2" id="ph2" />, which pushes content out of its way.</target>
        </segment>
      </unit>
      <unit id="158">
        <segment state="initial">
          <source>We recommend using CompactOverlay.</source>
          <target>We recommend using CompactOverlay.</target>
        </segment>
      </unit>
      <unit id="159">
        <segment state="initial">
          <source>Compact panes provide some indication of the selected location while using a small amount of screen real-estate.</source>
          <target>Compact panes provide some indication of the selected location while using a small amount of screen real-estate.</target>
        </segment>
      </unit>
      <unit id="160">
        <segment state="initial">
          <source>This mode is better suited for medium screens like tablets.</source>
          <target>This mode is better suited for medium screens like tablets.</target>
        </segment>
      </unit>
      <unit id="161">
        <segment state="initial">
          <source>By default, the pane is closed with only navigation icons and the button visible.</source>
          <target>By default, the pane is closed with only navigation icons and the button visible.</target>
        </segment>
      </unit>
      <unit id="162">
        <segment state="initial">
          <source>Pressing the nav pane button opens and closes the pane, which behaves like overlay or inline depending on the specified display mode.</source>
          <target>Pressing the nav pane button opens and closes the pane, which behaves like overlay or inline depending on the specified display mode.</target>
        </segment>
      </unit>
      <unit id="163">
        <segment state="initial">
          <source>The selection should be shown on the list icons to highlight where the user is in the navigation tree.</source>
          <target>The selection should be shown on the list icons to highlight where the user is in the navigation tree.</target>
        </segment>
      </unit>
      <unit id="164">
        <segment state="initial">
          <source>Inline</source>
          <target>Inline</target>
        </segment>
      </unit>
      <unit id="165">
        <segment state="initial">
          <source>The navigation pane remains open.</source>
          <target>The navigation pane remains open.</target>
        </segment>
      </unit>
      <unit id="166">
        <segment state="initial">
          <source>This mode is better suited for larger screens.</source>
          <target>This mode is better suited for larger screens.</target>
        </segment>
      </unit>
      <unit id="167">
        <segment state="initial">
          <source>Supports drag-and-drop scenarios to and from the pane.</source>
          <target>Supports drag-and-drop scenarios to and from the pane.</target>
        </segment>
      </unit>
      <unit id="168">
        <segment state="initial">
          <source>The nav pane button is not required for this state.</source>
          <target>The nav pane button is not required for this state.</target>
        </segment>
      </unit>
      <unit id="169">
        <segment state="initial">
          <source>If the button is used, then the content area is pushed out and the content within that area will reflow.</source>
          <target>If the button is used, then the content area is pushed out and the content within that area will reflow.</target>
        </segment>
      </unit>
      <unit id="170">
        <segment state="initial">
          <source>The selection should be shown on the list items to highlight where the user is in the navigation tree.</source>
          <target>The selection should be shown on the list items to highlight where the user is in the navigation tree.</target>
        </segment>
      </unit>
      <unit id="171">
        <segment state="initial">
          <source>Adaptability</source>
          <target>Adaptability</target>
        </segment>
      </unit>
      <unit id="172">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](../layout/screen-sizes-and-breakpoints-for-responsive-design.md)</data>
        </originalData>
        <segment state="initial">
          <source>To maximize usability on a variety of devices, we recommend utilizing <pc dataRefEnd="id2" dataRefStart="id1" id="p1">break points</pc> and adjusting nav pane's mode based on the width of its app window.</source>
          <target>To maximize usability on a variety of devices, we recommend utilizing <pc dataRefEnd="id2" dataRefStart="id1" id="p1">break points</pc> and adjusting nav pane's mode based on the width of its app window.</target>
        </segment>
      </unit>
      <unit id="173">
        <segment state="initial">
          <source>Small window</source>
          <target>Small window</target>
        </segment>
      </unit>
      <unit id="174">
        <segment state="initial">
          <source>Less than or equal to 640px wide.</source>
          <target>Less than or equal to 640px wide.</target>
        </segment>
      </unit>
      <unit id="175">
        <segment state="initial">
          <source>Nav pane should be in overlay mode, closed by default.</source>
          <target>Nav pane should be in overlay mode, closed by default.</target>
        </segment>
      </unit>
      <unit id="176">
        <segment state="initial">
          <source>Medium window</source>
          <target>Medium window</target>
        </segment>
      </unit>
      <unit id="177">
        <segment state="initial">
          <source>Greater than 640px and less than or equal to 1007px wide.</source>
          <target>Greater than 640px and less than or equal to 1007px wide.</target>
        </segment>
      </unit>
      <unit id="178">
        <segment state="initial">
          <source>Nav pane should be in sliver mode, closed by default.</source>
          <target>Nav pane should be in sliver mode, closed by default.</target>
        </segment>
      </unit>
      <unit id="179">
        <segment state="initial">
          <source>Large window</source>
          <target>Large window</target>
        </segment>
      </unit>
      <unit id="180">
        <segment state="initial">
          <source>Greater than 1007px wide.</source>
          <target>Greater than 1007px wide.</target>
        </segment>
      </unit>
      <unit id="181">
        <segment state="initial">
          <source>Nav pane should be in docked mode, opened by default.</source>
          <target>Nav pane should be in docked mode, opened by default.</target>
        </segment>
      </unit>
      <unit id="182">
        <segment state="initial">
          <source>Tailoring</source>
          <target>Tailoring</target>
        </segment>
      </unit>
      <unit id="183">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/?LinkId=760736)</data>
        </originalData>
        <segment state="initial">
          <source>To optimize your app's <pc dataRefEnd="id2" dataRefStart="id1" id="p1">10ft experience</pc>, consider tailoring nav pane by altering the visual appearance of its navigational elements.</source>
          <target>To optimize your app's <pc dataRefEnd="id2" dataRefStart="id1" id="p1">10ft experience</pc>, consider tailoring nav pane by altering the visual appearance of its navigational elements.</target>
        </segment>
      </unit>
      <unit id="184">
        <segment state="initial">
          <source>Depending on the interaction context, it may be more important to call the user's attention to either the selected nav item or to the focused nav item.</source>
          <target>Depending on the interaction context, it may be more important to call the user's attention to either the selected nav item or to the focused nav item.</target>
        </segment>
      </unit>
      <unit id="185">
        <segment state="initial">
          <source>For 10ft experience, where gamepad is the most common input device, ensuring that the user can easily keep track of the currently focused item's location on screen is particularly important.</source>
          <target>For 10ft experience, where gamepad is the most common input device, ensuring that the user can easily keep track of the currently focused item's location on screen is particularly important.</target>
        </segment>
      </unit>
      <unit id="186">
        <segment state="initial">
          <source>Example of tailored nav pane items</source>
          <target>Example of tailored nav pane items</target>
        </segment>
      </unit>
      <unit id="187">
        <segment state="initial">
          <source>Related topics</source>
          <target>Related topics</target>
        </segment>
      </unit>
      <unit id="188">
        <segment state="initial">
          <source>Split view control</source>
          <target>Split view control</target>
        </segment>
      </unit>
      <unit id="189">
        <segment state="initial">
          <source>Master/details</source>
          <target>Master/details</target>
        </segment>
      </unit>
      <unit id="190">
        <segment state="initial">
          <source>Navigation basics</source>
          <target>Navigation basics</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>