{"nodes":[{"content":"Enterprise Shared Storage","pos":[78,103]},{"content":"Enterprise shared storage defines local data locations for line of business apps to share data.","pos":[117,212]},{"content":"Enterprise Shared Storage","pos":[219,244]},{"content":"The shared storage consists of two locations, where apps with the restricted capability  <bpt id=\"p1\">**</bpt>enterpriseDeviceLockdown<ept id=\"p1\">**</ept> and an Enterprise certificate have full read and write access.","pos":[246,426]},{"content":"Note that the <bpt id=\"p1\">**</bpt>enterpriseDeviceLockdown<ept id=\"p1\">**</ept> capability allows apps to use the device lock down API and access the enterprise shared storage folders.","pos":[427,574]},{"content":"For more information about the API, see <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Windows.Embedded.DeviceLockdown<ept id=\"p2\">**</ept><ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=699331)</ept> namespace.","pos":[575,710]},{"content":"These locations are set on the local drive:","pos":[714,757]},{"content":"\\Data\\SharedData\\Enterprise\\Persistent","pos":[760,798]},{"content":"\\Data\\SharedData\\Enterprise\\Non-Persistent","pos":[801,843]},{"content":"Scenarios","pos":[848,857]},{"content":"Enterprise shared storage provides support for the following scenarios.","pos":[859,930]},{"content":"You can share data within an instance of an app, between instances of the same app, or even between apps assuming they both have the appropriate capability and certificate.","pos":[934,1106]},{"content":"You can store data on the local hard drive in the \\Data\\SharedData\\Enterprise\\Persistent folder and it persists even after the device has been reset.","pos":[1109,1258]},{"content":"Manipulate files, including read, write, and delete of files on a device via Mobile Device Management (MDM) service.","pos":[1261,1377]},{"content":"For more information on how to use enterprise shared storage through the MDM service, see <bpt id=\"p1\">[</bpt>EnterpriseExtFileSystem CSP<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=699333)</ept>.","pos":[1378,1545]},{"content":"Access enterprise shared storage","pos":[1550,1582]},{"content":"The following example shows how to declare the capability to access enterprise shared storage in the package manifest, and how to access the shared storage folders by using the Windows.Storage.StorageFolder class.","pos":[1584,1797]},{"content":"In your app package manifest, include the following capability:","pos":[1799,1862]},{"content":"To access the shared data location, your app would use the following code.","pos":[2332,2406]}],"content":"---\nauthor: mcleblanc\nms.assetid: B48E21AB-0EA5-444B-8333-393DD8D1B76D\ntitle: Enterprise Shared Storage\ndescription: Enterprise shared storage defines local data locations for line of business apps to share data.\n---\n# Enterprise Shared Storage\n\nThe shared storage consists of two locations, where apps with the restricted capability  **enterpriseDeviceLockdown** and an Enterprise certificate have full read and write access. Note that the **enterpriseDeviceLockdown** capability allows apps to use the device lock down API and access the enterprise shared storage folders. For more information about the API, see [**Windows.Embedded.DeviceLockdown**](http://go.microsoft.com/fwlink/?LinkId=699331) namespace.  \n\nThese locations are set on the local drive:\n- \\Data\\SharedData\\Enterprise\\Persistent\n- \\Data\\SharedData\\Enterprise\\Non-Persistent\n\n## Scenarios\n\nEnterprise shared storage provides support for the following scenarios.\n\n- You can share data within an instance of an app, between instances of the same app, or even between apps assuming they both have the appropriate capability and certificate.\n- You can store data on the local hard drive in the \\Data\\SharedData\\Enterprise\\Persistent folder and it persists even after the device has been reset.\n- Manipulate files, including read, write, and delete of files on a device via Mobile Device Management (MDM) service. For more information on how to use enterprise shared storage through the MDM service, see [EnterpriseExtFileSystem CSP](http://go.microsoft.com/fwlink/?LinkId=699333).\n\n## Access enterprise shared storage\n\nThe following example shows how to declare the capability to access enterprise shared storage in the package manifest, and how to access the shared storage folders by using the Windows.Storage.StorageFolder class.\n\nIn your app package manifest, include the following capability:\n\n```xml\n<Package\n  xmlns=\"http://schemas.microsoft.com/appx/manifest/foundation/windows10\"\n  xmlns:mp=\"http://schemas.microsoft.com/appx/2014/phone/manifest\"\n  xmlns:uap=\"http://schemas.microsoft.com/appx/manifest/uap/windows10\"\n  xmlns:rescap=\"http://schemas.microsoft.com/appx/manifest/foundation/windows10/restrictedcapabilities\"\n  IgnorableNamespaces=\"uap mp rescap\">\n\n…\n\n<Capabilities>\n    <rescap:Capability Name=\"enterpriseDeviceLockdown\"/>\n</Capabilities>\n```\n\nTo access the shared data location, your app would use the following code.\n\n```csharp\nusing System;\nusing System.Collections.Generic;\nusing System.Diagnostics;\nusing Windows.Storage;\n\n…\n\n// Get the Enterprise Shared Storage folder.\nvar enterprisePersistentFolderRoot = @\"C:\\Data\\SharedData\\Enterprise\\Persistent\";\n\nStorageFolder folder =\n    await StorageFolder.GetFolderFromPathAsync(enterprisePersistentFolderRoot);\n\n// Get the files in the folder.\nIReadOnlyList<StorageFile> sortedItems =\n    await folder.GetFilesAsync();\n\n// Iterate over the results and print the list of files\n// to the Visual Studio Output window.\nforeach (StorageFile file in sortedItems)\n    Debug.WriteLine(file.Name + \", \" + file.DateCreated);\n```\n\n"}