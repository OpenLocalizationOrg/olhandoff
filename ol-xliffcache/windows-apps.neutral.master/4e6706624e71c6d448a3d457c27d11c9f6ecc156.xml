{"nodes":[{"content":"After you define your experiment in the Dev Center dashboard, you are ready to code the experiment in your app.","pos":[37,148]},{"content":"Code your app for experimentation","pos":[156,189]},{"content":"Code your app for experimentation","pos":[246,279]},{"pos":[281,644],"content":"After you <bpt id=\"p1\">[</bpt>define your experiment in the Dev Center dashboard<ept id=\"p1\">](define-your-experiment-in-the-dev-center-dashboard.md)</ept>, you are ready to update the code in your Universal Windows Platform (UWP) app to get variation data for the experiment, use this data to modify the behavior of the feature you are testing, and log view event and conversion events to Dev Center."},{"content":"The following sections describe the general process of getting variations for your experiment and logging events to Dev Center.","pos":[646,773]},{"content":"For a walkthrough that demonstrates the end-to-end process of creating and running an experiment, see <bpt id=\"p1\">[</bpt>Create and run your first experiment with A/B testing<ept id=\"p1\">](create-and-run-your-first-experiment-with-a-b-testing.md)</ept>.","pos":[774,990]},{"content":"Configure your project","pos":[995,1017]},{"content":"To get started, install the Microsoft Store Engagement and Monetization SDK on your development computer and add the necessary references to your project.","pos":[1019,1173]},{"pos":[1178,1268],"content":"Install the <bpt id=\"p1\">[</bpt>Microsoft Store Engagement and Monetization SDK<ept id=\"p1\">](http://aka.ms/store-em-sdk)</ept>."},{"content":"Open your project in Visual Studio.","pos":[1272,1307]},{"pos":[1311,1415],"content":"In Solution Explorer, expand your project node, right-click <bpt id=\"p1\">**</bpt>References<ept id=\"p1\">**</ept>, and click <bpt id=\"p2\">**</bpt>Add Reference<ept id=\"p2\">**</ept>."},{"pos":[1419,1499],"content":"In <bpt id=\"p1\">**</bpt>Reference Manager<ept id=\"p1\">**</ept>, expand <bpt id=\"p2\">**</bpt>Universal Windows<ept id=\"p2\">**</ept> and click <bpt id=\"p3\">**</bpt>Extensions<ept id=\"p3\">**</ept>."},{"pos":[1503,1605],"content":"In the list of SDKs, select the check box next to <bpt id=\"p1\">**</bpt>Microsoft Store Engagement SDK<ept id=\"p1\">**</ept> and click <bpt id=\"p2\">**</bpt>OK<ept id=\"p2\">**</ept>."},{"content":"Add code to get variation settings","pos":[1610,1644]},{"content":"In your project, locate the code for the feature that you want to modify in your experiment.","pos":[1646,1738]},{"content":"Add code that retrieves settings for a variation, and use this data to modify the behavior of the feature you are testing.","pos":[1739,1861]},{"content":"The specific code you need will depend on your app, but here are the general steps.","pos":[1862,1945]},{"content":"For complete code example, see <bpt id=\"p1\">[</bpt>Create and run your first experiment with A/B testing<ept id=\"p1\">](create-and-run-your-first-experiment-with-a-b-testing.md)</ept>.","pos":[1946,2091]},{"pos":[2096,2496],"content":"Declare an <bpt id=\"p1\">[</bpt>ExperimentClient<ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/microsoft.services.store.engagement.experimentclient.aspx)</ept> object that you will use to retrieve variations for your experiment and an <bpt id=\"p2\">[</bpt>ExperimentVariation<ept id=\"p2\">](https://msdn.microsoft.com/library/windows/apps/microsoft.services.store.engagement.experimentvariation.aspx)</ept> object that represents the current variation assignment."},{"content":"Initialize the <bpt id=\"p1\">[</bpt>ExperimentClient<ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/microsoft.services.store.engagement.experimentclient.aspx)</ept> object, and pass the API key that you retrieved from the <bpt id=\"p2\">**</bpt>Experiments<ept id=\"p2\">**</ept> page of the dashboard to the constructor.","pos":[2600,2855]},{"content":"For more information about the API key, see <bpt id=\"p1\">[</bpt>Define your experiment in the Dev Center dashboard<ept id=\"p1\">](define-your-experiment-in-the-dev-center-dashboard.md#generate-an-api-key)</ept>.","pos":[2856,3028]},{"content":"The API key shown below is for example purposes only.","pos":[3029,3082]},{"content":"Get the current cached variation assignment for your experiment by calling the <bpt id=\"p1\">[</bpt>GetVariationAsync<ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/microsoft.services.store.engagement.experimentclient.getvariationasync.aspx)</ept> method.","pos":[3176,3407]},{"content":"This method returns an <bpt id=\"p1\">[</bpt>ExperimentVariationResult<ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/microsoft.services.store.engagement.experimentvariationresult.aspx)</ept> object that provides access to the variation assignment via the <bpt id=\"p2\">[</bpt>Variation<ept id=\"p2\">](https://msdn.microsoft.com/library/windows/apps/microsoft.services.store.engagement.experimentvariationresult.variation.aspx)</ept> property.","pos":[3408,3786]},{"content":"Check the <bpt id=\"p1\">[</bpt>NeedsRefresh<ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/microsoft.services.store.engagement.experimentvariation.needsrefresh.aspx)</ept> property to determine whether the cached variation assignment needs to be refreshed.","pos":[3908,4140]},{"content":"If it does need to be refreshed, call the <bpt id=\"p1\">[</bpt>RefreshVariationAsync<ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/microsoft.services.store.engagement.experimentclient.refreshvariationasync.aspx)</ept> method to check for an updated variation assignment from the server and refresh the local cached variation.","pos":[4141,4443]},{"content":"Use the <bpt id=\"p1\">[</bpt>GetBoolean<ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/microsoft.services.store.engagement.experimentvariation.getboolean.aspx)</ept>, <bpt id=\"p2\">[</bpt>GetDouble<ept id=\"p2\">](https://msdn.microsoft.com/library/windows/apps/microsoft.services.store.engagement.experimentvariation.getdouble.aspx)</ept>, <bpt id=\"p3\">[</bpt>GetInteger<ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/microsoft.services.store.engagement.experimentvariation.getinteger.aspx)</ept>, or <bpt id=\"p4\">[</bpt>GetString<ept id=\"p4\">](https://msdn.microsoft.com/library/windows/apps/microsoft.services.store.engagement.experimentvariation.getstring.aspx)</ept> methods of the <bpt id=\"p5\">[</bpt>ExperimentVariation<ept id=\"p5\">](https://msdn.microsoft.com/library/windows/apps/microsoft.services.store.engagement.experimentvariation.aspx)</ept> object to get the settings for the variation assignment.","pos":[4938,5687]},{"content":"In each method, the first parameter is the name of the setting that you want to retrieve (as you entered it in your Dev Center dashboard).","pos":[5688,5826]},{"content":"The second parameter is the default value that the method should return if it is not able to retrieve the specified value from Dev Center (for example, if there is no network connectivity), and a cached version of the variation is not available.","pos":[5827,6072]},{"pos":[6076,6328],"content":"The following example uses <bpt id=\"p1\">[</bpt>GetString<ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/microsoft.services.store.engagement.experimentvariation.getstring.aspx)</ept> to get a setting named <bpt id=\"p2\">*</bpt>buttonText<ept id=\"p2\">*</ept> and specifies a default setting value of <bpt id=\"p3\">**</bpt>Grey Button<ept id=\"p3\">**</ept>."},{"content":"In your code, use the setting values to modify the behavior of the feature you are testing.","pos":[6420,6511]},{"content":"For example, the following code assigns the <bpt id=\"p1\">*</bpt>buttonText<ept id=\"p1\">*</ept> value to the content of a button.","pos":[6512,6602]},{"content":"Add code to log view and conversion events to Dev Center","pos":[6650,6706]},{"content":"Next, add code that logs view and conversion events to the A/B testing service in Dev Center.","pos":[6708,6801]},{"content":"Your code should log the view event when the user starts viewing a variation that is part of your experiment, and it should log the conversion event when the user reaches an objective for your experiment.","pos":[6802,7006]},{"content":"The specific code you need will depend on your app, but here are the general steps.","pos":[7008,7091]},{"content":"For complete code example, see <bpt id=\"p1\">[</bpt>Create and run your first experiment with A/B testing<ept id=\"p1\">](create-and-run-your-first-experiment-with-a-b-testing.md)</ept>.","pos":[7092,7237]},{"content":"In code that runs when the user starts viewing a variation, call the static <bpt id=\"p1\">[</bpt>Log<ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/microsoft.services.store.engagement.storeservicescustomevents.log.aspx)</ept> method of the <bpt id=\"p2\">[</bpt>StoreServicesCustomEvents<ept id=\"p2\">](https://msdn.microsoft.com/library/windows/apps/microsoft.services.store.engagement.storeservicescustomevents.aspx)</ept> object.","pos":[7242,7609]},{"content":"Pass the name of the view event that you defined in your experiment on your Dev Center dashboard and the <bpt id=\"p1\">[</bpt>ExperimentVariation<ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/microsoft.services.store.engagement.experimentvariation.aspx)</ept> object that represents the current variation assignment (this object provides context about the event to Dev Center).","pos":[7610,7964]},{"content":"The following example logs a view event named <bpt id=\"p1\">**</bpt>userViewedButton<ept id=\"p1\">**</ept>.","pos":[7965,8032]},{"content":"In code that runs when the user reaches an objective for one of the goals of the experiment, call the <bpt id=\"p1\">[</bpt>Log<ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/microsoft.services.store.engagement.storeservicescustomevents.log.aspx)</ept> method again and pass the name of a conversion event that you defined in your experiment and the <bpt id=\"p2\">[</bpt>ExperimentVariation<ept id=\"p2\">](https://msdn.microsoft.com/library/windows/apps/microsoft.services.store.engagement.experimentvariation.aspx)</ept> object.","pos":[8112,8576]},{"content":"The following example logs a conversion event named <bpt id=\"p1\">**</bpt>userClickedButton<ept id=\"p1\">**</ept>.","pos":[8577,8651]},{"content":"Next steps","pos":[8733,8743]},{"pos":[8745,8948],"content":"After you define your experiment in the Dev Center dashboard and code the experiment in your app, you are ready to <bpt id=\"p1\">[</bpt>run and manage your experiment in the Dev Center dashboard<ept id=\"p1\">](manage-your-experiment.md)</ept>."},{"content":"Related topics","pos":[8953,8967]},{"content":"Define your experiment in the Dev Center dashboard","pos":[8974,9024]},{"content":"Manage your experiment in the Dev Center dashboard","pos":[9086,9136]},{"content":"Create and run your first experiment with A/B testing","pos":[9170,9223]},{"content":"Run app experiments with A/B testing","pos":[9288,9324]}],"content":"---\nauthor: mcleanbyron\nDescription: After you define your experiment in the Dev Center dashboard, you are ready to code the experiment in your app.\ntitle: Code your app for experimentation\nms.assetid: 6A5063E1-28CD-4087-A4FA-FBB511E9CED5\n---\n\n# Code your app for experimentation\n\nAfter you [define your experiment in the Dev Center dashboard](define-your-experiment-in-the-dev-center-dashboard.md), you are ready to update the code in your Universal Windows Platform (UWP) app to get variation data for the experiment, use this data to modify the behavior of the feature you are testing, and log view event and conversion events to Dev Center.\n\nThe following sections describe the general process of getting variations for your experiment and logging events to Dev Center. For a walkthrough that demonstrates the end-to-end process of creating and running an experiment, see [Create and run your first experiment with A/B testing](create-and-run-your-first-experiment-with-a-b-testing.md).\n\n## Configure your project\n\nTo get started, install the Microsoft Store Engagement and Monetization SDK on your development computer and add the necessary references to your project.\n\n1. Install the [Microsoft Store Engagement and Monetization SDK](http://aka.ms/store-em-sdk).\n2. Open your project in Visual Studio.\n3. In Solution Explorer, expand your project node, right-click **References**, and click **Add Reference**.\n3. In **Reference Manager**, expand **Universal Windows** and click **Extensions**.\n4. In the list of SDKs, select the check box next to **Microsoft Store Engagement SDK** and click **OK**.\n\n## Add code to get variation settings\n\nIn your project, locate the code for the feature that you want to modify in your experiment. Add code that retrieves settings for a variation, and use this data to modify the behavior of the feature you are testing. The specific code you need will depend on your app, but here are the general steps. For complete code example, see [Create and run your first experiment with A/B testing](create-and-run-your-first-experiment-with-a-b-testing.md).\n\n1. Declare an [ExperimentClient](https://msdn.microsoft.com/library/windows/apps/microsoft.services.store.engagement.experimentclient.aspx) object that you will use to retrieve variations for your experiment and an [ExperimentVariation](https://msdn.microsoft.com/library/windows/apps/microsoft.services.store.engagement.experimentvariation.aspx) object that represents the current variation assignment.\n```CSharp\nprivate readonly ExperimentClient experiment;\nprivate ExperimentVariation variation;\n```\n\n2. Initialize the [ExperimentClient](https://msdn.microsoft.com/library/windows/apps/microsoft.services.store.engagement.experimentclient.aspx) object, and pass the API key that you retrieved from the **Experiments** page of the dashboard to the constructor. For more information about the API key, see [Define your experiment in the Dev Center dashboard](define-your-experiment-in-the-dev-center-dashboard.md#generate-an-api-key). The API key shown below is for example purposes only.\n```CSharp\nexperiment = new ExperimentClient(\"F48AC670-4472-4387-AB7D-D65B095153FB\");\n```\n\n3. Get the current cached variation assignment for your experiment by calling the [GetVariationAsync](https://msdn.microsoft.com/library/windows/apps/microsoft.services.store.engagement.experimentclient.getvariationasync.aspx) method. This method returns an [ExperimentVariationResult](https://msdn.microsoft.com/library/windows/apps/microsoft.services.store.engagement.experimentvariationresult.aspx) object that provides access to the variation assignment via the [Variation](https://msdn.microsoft.com/library/windows/apps/microsoft.services.store.engagement.experimentvariationresult.variation.aspx) property.\n```CSharp\nExperimentVariationResult result = await experiment.GetVariationAsync();\nvariation = result.Variation;\n```\n\n4. Check the [NeedsRefresh](https://msdn.microsoft.com/library/windows/apps/microsoft.services.store.engagement.experimentvariation.needsrefresh.aspx) property to determine whether the cached variation assignment needs to be refreshed. If it does need to be refreshed, call the [RefreshVariationAsync](https://msdn.microsoft.com/library/windows/apps/microsoft.services.store.engagement.experimentclient.refreshvariationasync.aspx) method to check for an updated variation assignment from the server and refresh the local cached variation.\n```CSharp\n// Check whether the cached variation assignment needs to be refreshed.\n// If so, then refresh it.\nif (result.ErrorCode != EngagementErrorCode.Success || result.Variation.NeedsRefresh)\n{\n      result = await experiment.RefreshVariationAsync();\n\n      // If the call succeeds, use the new result. Otherwise, use the\n      // cached value we retrieved earlier.\n      if (result.ErrorCode == EngagementErrorCode.Success)\n      {\n          variation = result.Variation;\n      }\n}\n```\n\n5. Use the [GetBoolean](https://msdn.microsoft.com/library/windows/apps/microsoft.services.store.engagement.experimentvariation.getboolean.aspx), [GetDouble](https://msdn.microsoft.com/library/windows/apps/microsoft.services.store.engagement.experimentvariation.getdouble.aspx), [GetInteger](https://msdn.microsoft.com/library/windows/apps/microsoft.services.store.engagement.experimentvariation.getinteger.aspx), or [GetString](https://msdn.microsoft.com/library/windows/apps/microsoft.services.store.engagement.experimentvariation.getstring.aspx) methods of the [ExperimentVariation](https://msdn.microsoft.com/library/windows/apps/microsoft.services.store.engagement.experimentvariation.aspx) object to get the settings for the variation assignment. In each method, the first parameter is the name of the setting that you want to retrieve (as you entered it in your Dev Center dashboard). The second parameter is the default value that the method should return if it is not able to retrieve the specified value from Dev Center (for example, if there is no network connectivity), and a cached version of the variation is not available.\n\n  The following example uses [GetString](https://msdn.microsoft.com/library/windows/apps/microsoft.services.store.engagement.experimentvariation.getstring.aspx) to get a setting named *buttonText* and specifies a default setting value of **Grey Button**.\n```CSharp\nvar buttonText = currentVariation.GetString(\"buttonText\", \"Grey Button\");\n```\n4. In your code, use the setting values to modify the behavior of the feature you are testing. For example, the following code assigns the *buttonText* value to the content of a button.\n```CSharp\nbutton.Content = buttonText;\n```\n\n## Add code to log view and conversion events to Dev Center\n\nNext, add code that logs view and conversion events to the A/B testing service in Dev Center. Your code should log the view event when the user starts viewing a variation that is part of your experiment, and it should log the conversion event when the user reaches an objective for your experiment.\n\nThe specific code you need will depend on your app, but here are the general steps. For complete code example, see [Create and run your first experiment with A/B testing](create-and-run-your-first-experiment-with-a-b-testing.md).\n\n1. In code that runs when the user starts viewing a variation, call the static [Log](https://msdn.microsoft.com/library/windows/apps/microsoft.services.store.engagement.storeservicescustomevents.log.aspx) method of the [StoreServicesCustomEvents](https://msdn.microsoft.com/library/windows/apps/microsoft.services.store.engagement.storeservicescustomevents.aspx) object. Pass the name of the view event that you defined in your experiment on your Dev Center dashboard and the [ExperimentVariation](https://msdn.microsoft.com/library/windows/apps/microsoft.services.store.engagement.experimentvariation.aspx) object that represents the current variation assignment (this object provides context about the event to Dev Center). The following example logs a view event named **userViewedButton**.\n```CSharp\nStoreServicesCustomEvents.Log(\"userViewedButton\", variation);\n```\n2. In code that runs when the user reaches an objective for one of the goals of the experiment, call the [Log](https://msdn.microsoft.com/library/windows/apps/microsoft.services.store.engagement.storeservicescustomevents.log.aspx) method again and pass the name of a conversion event that you defined in your experiment and the [ExperimentVariation](https://msdn.microsoft.com/library/windows/apps/microsoft.services.store.engagement.experimentvariation.aspx) object. The following example logs a conversion event named **userClickedButton**.\n```CSharp\nStoreServicesCustomEvents.Log(\"userClickedButton\", variation);\n```\n\n## Next steps\n\nAfter you define your experiment in the Dev Center dashboard and code the experiment in your app, you are ready to [run and manage your experiment in the Dev Center dashboard](manage-your-experiment.md).\n\n## Related topics\n\n  * [Define your experiment in the Dev Center dashboard](define-your-experiment-in-the-dev-center-dashboard.md)\n  * [Manage your experiment in the Dev Center dashboard](manage-your-experiment.md)\n  * [Create and run your first experiment with A/B testing](create-and-run-your-first-experiment-with-a-b-testing.md)\n  * [Run app experiments with A/B testing](run-app-experiments-with-a-b-testing.md)\n"}