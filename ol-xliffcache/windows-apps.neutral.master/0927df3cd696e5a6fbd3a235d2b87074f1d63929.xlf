<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="zh-cn" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">windows-apps-src\monetize\manage-a-large-catalog-of-in-app-products.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">0927df3cd696e5a6fbd3a235d2b87074f1d63929</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-781aacf</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>If your app offers a large in-app product catalog, you can optionally follow the process described in this topic to help manage your catalog.</source>
          <target>If your app offers a large in-app product catalog, you can optionally follow the process described in this topic to help manage your catalog.</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>Manage a large catalog of in-app products</source>
          <target>Manage a large catalog of in-app products</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>Manage a large catalog of in-app products</source>
          <target>Manage a large catalog of in-app products</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source>Updated for UWP apps on Windows 10.</source>
          <target>Updated for UWP apps on Windows 10.</target>
        </segment>
      </unit>
      <unit id="105">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
        </originalData>
        <segment state="initial">
          <source>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc></source>
          <target>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc></target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source>If your app offers a large in-app product catalog, you can optionally follow the process described in this topic to help manage your catalog.</source>
          <target>If your app offers a large in-app product catalog, you can optionally follow the process described in this topic to help manage your catalog.</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source>You will create a handful of product entries for specific price tiers, with each one able to represent hundreds of products within a catalog.</source>
          <target>You will create a handful of product entries for specific price tiers, with each one able to represent hundreds of products within a catalog.</target>
        </segment>
      </unit>
      <unit id="108">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn263382)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>To enable this capability, use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">RequestProductPurchaseAsync</pc></pc> method overload that specifies an app-defined offer associated with an in-app product listed in the Store.</source>
          <target>To enable this capability, use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">RequestProductPurchaseAsync</pc></pc> method overload that specifies an app-defined offer associated with an in-app product listed in the Store.</target>
        </segment>
      </unit>
      <unit id="109">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn263384)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>In addition to specifying an offer and product association during the call, your app should also pass a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ProductPurchaseDisplayProperties</pc></pc> object that contains the large catalog offer details.</source>
          <target>In addition to specifying an offer and product association during the call, your app should also pass a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ProductPurchaseDisplayProperties</pc></pc> object that contains the large catalog offer details.</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source>If these details are not provided, the details for the listed product will be used instead.</source>
          <target>If these details are not provided, the details for the listed product will be used instead.</target>
        </segment>
      </unit>
      <unit id="111">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/dn263392)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>The Store will only use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">offerId</pc> from the purchase request in the resulting <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">PurchaseResults</pc></pc>.</source>
          <target>The Store will only use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">offerId</pc> from the purchase request in the resulting <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">PurchaseResults</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="112">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/mt148551)</data>
        </originalData>
        <segment state="initial">
          <source>This process does not directly modify the information originally provided when <pc dataRefEnd="id2" dataRefStart="id1" id="p1">listing the in-app product in the Store</pc>.</source>
          <target>This process does not directly modify the information originally provided when <pc dataRefEnd="id2" dataRefStart="id1" id="p1">listing the in-app product in the Store</pc>.</target>
        </segment>
      </unit>
      <unit id="113">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  Starting with Windows 10, the Store has no limit to the number of product listings per developer account.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  Starting with Windows 10, the Store has no limit to the number of product listings per developer account.</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source>In previous releases, the Store has a limit of 200 product listings per developer account, and the process described in this topic can be used to work around that limitation.</source>
          <target>In previous releases, the Store has a limit of 200 product listings per developer account, and the process described in this topic can be used to work around that limitation.</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source>Prerequisites</source>
          <target>Prerequisites</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source>This topic covers Store support for the representation of multiple in-app offers using a single in-app product listed in the Store.</source>
          <target>This topic covers Store support for the representation of multiple in-app offers using a single in-app product listed in the Store.</target>
        </segment>
      </unit>
      <unit id="117">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](enable-in-app-product-purchases.md)</data>
        </originalData>
        <segment state="initial">
          <source>If you are unfamiliar with in-app purchases please review <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Enable in-app product purchases</pc> to learn about license information, and how to properly list your in-app purchase in the Store.</source>
          <target>If you are unfamiliar with in-app purchases please review <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Enable in-app product purchases</pc> to learn about license information, and how to properly list your in-app purchase in the Store.</target>
        </segment>
      </unit>
      <unit id="118">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh779766)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/hh779765)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source>When you code and test new in-app offers for the first time, you must use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CurrentAppSimulator</pc></pc> object instead of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">CurrentApp</pc></pc> object.</source>
          <target>When you code and test new in-app offers for the first time, you must use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CurrentAppSimulator</pc></pc> object instead of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">CurrentApp</pc></pc> object.</target>
        </segment>
      </unit>
      <unit id="119">
        <segment state="initial">
          <source>This way you can verify your license logic using simulated calls to the license server instead of calling the live server.</source>
          <target>This way you can verify your license logic using simulated calls to the license server instead of calling the live server.</target>
        </segment>
      </unit>
      <unit id="120">
        <originalData>
          <data id="id1">\\</data>
          <data id="id2">\\</data>
          <data id="id3">\\</data>
          <data id="id4">\\&amp;lt;</data>
          <data id="id5">&amp;gt;\\</data>
          <data id="id6">\\</data>
          <data id="id7">\\</data>
          <data id="id8">\\</data>
        </originalData>
        <segment state="initial">
          <source>To do this, you need to customize the file named "WindowsStoreProxy.xml" in %userprofile%<ph dataRef="id1" id="ph1" />AppData<ph dataRef="id2" id="ph2" />local<ph dataRef="id3" id="ph3" />packages<ph dataRef="id4" id="ph4" />package name<ph dataRef="id5" id="ph5" />LocalState<ph dataRef="id6" id="ph6" />Microsoft<ph dataRef="id7" id="ph7" />Windows Store<ph dataRef="id8" id="ph8" />ApiData.</source>
          <target>To do this, you need to customize the file named "WindowsStoreProxy.xml" in %userprofile%<ph dataRef="id1" id="ph1" />AppData<ph dataRef="id2" id="ph2" />local<ph dataRef="id3" id="ph3" />packages<ph dataRef="id4" id="ph4" />package name<ph dataRef="id5" id="ph5" />LocalState<ph dataRef="id6" id="ph6" />Microsoft<ph dataRef="id7" id="ph7" />Windows Store<ph dataRef="id8" id="ph8" />ApiData.</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source>The Microsoft Visual Studio simulator creates this file when you run your app for the first time—or you can also load a custom one at runtime.</source>
          <target>The Microsoft Visual Studio simulator creates this file when you run your app for the first time—or you can also load a custom one at runtime.</target>
        </segment>
      </unit>
      <unit id="122">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">CurrentAppSimulator</pc>.</source>
          <target>For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">CurrentAppSimulator</pc>.</target>
        </segment>
      </unit>
      <unit id="123">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?LinkID=627610)</data>
        </originalData>
        <segment state="initial">
          <source>This topic also references code examples provided in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Store sample</pc>.</source>
          <target>This topic also references code examples provided in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Store sample</pc>.</target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source>This sample is a great way to get hands-on experience with the different monetization options provided for Universal Windows Platform (UWP) apps.</source>
          <target>This sample is a great way to get hands-on experience with the different monetization options provided for Universal Windows Platform (UWP) apps.</target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source>Make the purchase request for the in-app product</source>
          <target>Make the purchase request for the in-app product</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source>The purchase request for a specific product within a large catalog is handled in much the same way as any other purchase request within an app.</source>
          <target>The purchase request for a specific product within a large catalog is handled in much the same way as any other purchase request within an app.</target>
        </segment>
      </unit>
      <unit id="127">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn263382)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">*</data>
          <data id="id6">*</data>
          <data id="id7">[</data>
          <data id="id8">](https://msdn.microsoft.com/library/windows/apps/dn263390)</data>
          <data id="id9">**</data>
          <data id="id10">**</data>
        </originalData>
        <segment state="initial">
          <source>When your app calls the new <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">RequestProductPurchaseAsync</pc></pc> method overload, your app provides both an <pc dataRefEnd="id6" dataRefStart="id5" id="p3">OfferId</pc> and a <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">ProductPurchaseDisplayProperties</pc></pc> object populated with the name of the in-app product.</source>
          <target>When your app calls the new <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">RequestProductPurchaseAsync</pc></pc> method overload, your app provides both an <pc dataRefEnd="id6" dataRefStart="id5" id="p3">OfferId</pc> and a <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">ProductPurchaseDisplayProperties</pc></pc> object populated with the name of the in-app product.</target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source>Report fulfillment of the in-app offer</source>
          <target>Report fulfillment of the in-app offer</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source>Your app will need to report product fulfillment to the Store as soon as the offer has been fulfilled locally.</source>
          <target>Your app will need to report product fulfillment to the Store as soon as the offer has been fulfilled locally.</target>
        </segment>
      </unit>
      <unit id="130">
        <segment state="initial">
          <source>In a large catalog scenario, if your app does not report offer fulfillment, the user will be unable to purchase any in-app offers using that same Store product listing.</source>
          <target>In a large catalog scenario, if your app does not report offer fulfillment, the user will be unable to purchase any in-app offers using that same Store product listing.</target>
        </segment>
      </unit>
      <unit id="131">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn263392)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>As mentioned earlier, the Store only uses provided offer info to populate the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PurchaseResults</pc></pc>, and does not create a persistent association between a large catalog offer and Store product listing.</source>
          <target>As mentioned earlier, the Store only uses provided offer info to populate the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PurchaseResults</pc></pc>, and does not create a persistent association between a large catalog offer and Store product listing.</target>
        </segment>
      </unit>
      <unit id="132">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn263382)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>As a result you need to track user entitlement for products, and provide product-specific context (such as the name of the item being purchased or details about it) to the user outside of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">RequestProductPurchaseAsync</pc></pc> operation.</source>
          <target>As a result you need to track user entitlement for products, and provide product-specific context (such as the name of the item being purchased or details about it) to the user outside of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">RequestProductPurchaseAsync</pc></pc> operation.</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source>The following code demonstrates the fulfillment call, and a UI messaging pattern in which the specific offer info is inserted.</source>
          <target>The following code demonstrates the fulfillment call, and a UI messaging pattern in which the specific offer info is inserted.</target>
        </segment>
      </unit>
      <unit id="134">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br225163)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>In the absence of that specific product info, the example uses info from the product <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ListingInformation</pc></pc>.</source>
          <target>In the absence of that specific product info, the example uses info from the product <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ListingInformation</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source>Related topics</source>
          <target>Related topics</target>
        </segment>
      </unit>
      <unit id="136">
        <segment state="initial">
          <source>Enable in-app product purchases</source>
          <target>Enable in-app product purchases</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source>Enable consumable in-app product purchases</source>
          <target>Enable consumable in-app product purchases</target>
        </segment>
      </unit>
      <unit id="138">
        <segment state="initial">
          <source>Store sample (demonstrates trials and in-app purchases)</source>
          <target>Store sample (demonstrates trials and in-app purchases)</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source>RequestProductPurchaseAsync</source>
          <target>RequestProductPurchaseAsync</target>
        </segment>
      </unit>
      <unit id="140">
        <segment state="initial">
          <source>ProductPurchaseDisplayProperties</source>
          <target>ProductPurchaseDisplayProperties</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>