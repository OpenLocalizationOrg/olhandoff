{"nodes":[{"content":"Learn how a user can interact with a background app through the Cortana voice and canvas during the execution of a voice command.","pos":[47,176]},{"content":"Interact with a background app","pos":[184,214]},{"content":"Interact with a background app in Cortana","pos":[330,371]},{"pos":[373,509],"content":"Enable user interaction with a background app, through speech and text input in the <bpt id=\"p1\">**</bpt>Cortana<ept id=\"p1\">**</ept> canvas, while executing a voice command."},{"content":"Important APIs","pos":[515,529]},{"content":"Windows.ApplicationModel.VoiceCommands","pos":[540,578]},{"content":"Voice Command Definition (VCD) elements and attributes v1.2","pos":[647,706]},{"content":"Cortana supports a complete turn-by-turn workflow with your app.","pos":[770,834]},{"content":"This workflow is defined by your app, and can support functionality such as:","pos":[835,911]},{"content":"Successful completion","pos":[918,939]},{"content":"Hand-off","pos":[944,952]},{"content":"Progress","pos":[957,965]},{"content":"Confirmation","pos":[970,982]},{"content":"Disambiguation","pos":[987,1001]},{"content":"Error","pos":[1006,1011]},{"content":"Prerequisites:","pos":[1015,1029]},{"content":"This topic builds on <bpt id=\"p1\">[</bpt>Launch a background app with voice commands in Cortana<ept id=\"p1\">](launch-a-background-app-with-voice-commands-in-cortana.md)</ept>.","pos":[1033,1170]},{"content":"We continue here to demonstrate features with a trip planning and management app named <bpt id=\"p1\">**</bpt>Adventure Works<ept id=\"p1\">**</ept>.","pos":[1171,1278]},{"content":"If you're new to developing Universal Windows Platform (UWP) apps, have a look through these topics to get familiar with the technologies discussed here.","pos":[1280,1433]},{"content":"Create your first app","pos":[1440,1461]},{"pos":[1525,1642],"content":"Learn about events with <bpt id=\"p1\">[</bpt>Events and routed events overview<ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/mt185584)</ept>"},{"content":"User experience guidelines:","pos":[1646,1673]},{"pos":[1679,1987],"content":"See <bpt id=\"p1\">[</bpt>Cortana design guidelines<ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn974233)</ept> for info about how to integrate your app with <bpt id=\"p2\">**</bpt>Cortana<ept id=\"p2\">**</ept> and <bpt id=\"p3\">[</bpt>Speech design guidelines<ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/dn596121)</ept> for helpful tips on designing a useful and engaging speech-enabled app."},{"pos":[2097,2113],"content":"Feedback strings"},{"pos":[2115,2194],"content":"Compose the feedback strings that are both displayed and spoken by <bpt id=\"p1\">**</bpt>Cortana<ept id=\"p1\">**</ept>."},{"pos":[2196,2347],"content":"The <bpt id=\"p1\">[</bpt>Cortana design guidelines<ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn974233)</ept>provides recommendations on composing strings for <bpt id=\"p2\">**</bpt>Cortana<ept id=\"p2\">**</ept>."},{"pos":[2457,2473],"content":"Feedback strings"},{"content":"Content cards can provide additional context for the user and help you keep feedback strings concise.","pos":[2475,2576]},{"pos":[2578,2693],"content":"<bpt id=\"p1\">**</bpt>Cortana<ept id=\"p1\">**</ept> supports the following content card templates (only one template can be used on the completion screen):"},{"content":"The image can be:","pos":[2840,2857]},{"content":"You can also let users launch your app in the foreground by clicking either a card or the text link to your app.","pos":[2916,3028]},{"pos":[3141,3158],"content":"Completion screen"},{"content":"A completion screen provides the user with information about the completed voice command task.","pos":[3160,3254]},{"content":"Tasks that take less than 500 milliseconds for your app to respond, and require no additional information from the user, are completed without further interaction with  <bpt id=\"p1\">**</bpt>Cortana<ept id=\"p1\">**</ept>.","pos":[3256,3437]},{"content":"Cortana simply displays the completion screen.","pos":[3438,3484]},{"pos":[3486,3621],"content":"Here, we use the <bpt id=\"p1\">**</bpt>Adventure Works<ept id=\"p1\">**</ept> app to show the completion screen for a voice command request to display upcoming trips to London."},{"content":"cortana background app completion screen","pos":[3626,3666]},{"content":"The voice command is defined in AdventureWorksCommands.xml:","pos":[3726,3785]},{"content":"AdventureWorksVoiceCommandService.cs contains the completion message method:","pos":[4240,4316]},{"pos":[7729,7744],"content":"Hand-off screen"},{"content":"Once a voice command is recognized, <bpt id=\"p1\">**</bpt>Cortana<ept id=\"p1\">**</ept> must call ReportSuccessAsync and present feedback within approximately 500ms.","pos":[7746,7871]},{"content":"If the app service cannot complete the action specified by the voice command within 500ms, <bpt id=\"p1\">**</bpt>Cortana<ept id=\"p1\">**</ept> presents a hand-off screen that is shown until your app calls ReportSuccessAsync, or for up to 5 seconds.","pos":[7872,8080]},{"content":"If the app service doesn’t call ReportSuccessAsync, or any other VoiceCommandServiceConnection method, the user receives an error message and the app service call is cancelled.","pos":[8082,8258]},{"content":"Here's an example of a hand-off screen for the <bpt id=\"p1\">**</bpt>Adventure Works<ept id=\"p1\">**</ept> app.","pos":[8260,8331]},{"content":"In this example, a user has queried <bpt id=\"p1\">**</bpt>Cortana<ept id=\"p1\">**</ept> for upcoming trips.","pos":[8332,8399]},{"content":"The hand-off screen includes a message customized with the app service name, an icon, and a <bpt id=\"p1\">**</bpt>Feedback<ept id=\"p1\">**</ept> string.","pos":[8400,8512]},{"content":"You can declare a <bpt id=\"p1\">**</bpt>Feedback<ept id=\"p1\">**</ept> string in the VCD file.","pos":[8523,8577]},{"content":"This string does not affect the UI text displayed on the Cortana canvas, it only affects the text spoken by <bpt id=\"p1\">**</bpt>Cortana<ept id=\"p1\">**</ept>.","pos":[8578,8698]},{"content":"cortana background app hand-off screen","pos":[8702,8740]},{"pos":[8899,8914],"content":"Progress screen"},{"content":"If the app service takes more than 500ms to call ReportSuccessAsync, <bpt id=\"p1\">**</bpt>Cortana<ept id=\"p1\">**</ept> provides the user with a progress screen.","pos":[8917,9039]},{"content":"The app icon is displayed, and you must provide both GUI and TTS progress strings to indicate that the task is being actively handled.","pos":[9040,9174]},{"content":"<bpt id=\"p1\">**</bpt>Cortana<ept id=\"p1\">**</ept> shows a progress screen for a maximum of 5 seconds.","pos":[9176,9239]},{"content":"After 5 seconds, <bpt id=\"p1\">**</bpt>Cortana<ept id=\"p1\">**</ept> presents the user with an error message and the app service is closed.","pos":[9240,9339]},{"content":"If the app service needs more than 5 seconds to complete the action, it can continue to update <bpt id=\"p1\">**</bpt>Cortana<ept id=\"p1\">**</ept> with progress screens.","pos":[9340,9469]},{"content":"Here's an example of a progress screen for the <bpt id=\"p1\">**</bpt>Adventure Works<ept id=\"p1\">**</ept> app.","pos":[9471,9542]},{"content":"In this example, a user has canceled a trip to Las Vegas.","pos":[9543,9600]},{"content":"The progress screen includes a message customized for the action, an icon, and a content tile with information about the trip being canceled.","pos":[9601,9742]},{"content":"cortana background app progress screen","pos":[9746,9784]},{"pos":[9824,10048],"content":"AdventureWorksVoiceCommandService.cs contains the following progress message method, which calls <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>ReportProgressAsync<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn706579)</ept> to show the progress screen in <bpt id=\"p3\">**</bpt>Cortana<ept id=\"p3\">**</ept>."},{"pos":[10811,10830],"content":"Confirmation screen"},{"content":"When an action specified by a voice command is irreversible, has a significant impact, or the recognition confidence is not high, an app service can request confirmation.","pos":[10833,11003]},{"content":"Here's an example of a confirmation screen for the <bpt id=\"p1\">**</bpt>Adventure Works<ept id=\"p1\">**</ept> app.","pos":[11005,11080]},{"content":"In this example, a user has instructed the app service to cancel a trip to Las Vegas through <bpt id=\"p1\">**</bpt>Cortana<ept id=\"p1\">**</ept>.","pos":[11081,11186]},{"content":"The app service has provided <bpt id=\"p1\">**</bpt>Cortana<ept id=\"p1\">**</ept> with a confirmation screen that prompts the user for a yes or no answer before canceling the trip.","pos":[11187,11326]},{"content":"If the user says something other than \"Yes\" or \"No\", <bpt id=\"p1\">**</bpt>Cortana<ept id=\"p1\">**</ept> cannot determine the answer to the question.","pos":[11328,11437]},{"content":"In this case, <bpt id=\"p1\">**</bpt>Cortana<ept id=\"p1\">**</ept> prompts the user with a similar question provided by the app service.","pos":[11438,11533]},{"content":"On the second prompt, if the user still doesn’t say \"Yes\" or \"No\", <bpt id=\"p1\">**</bpt>Cortana<ept id=\"p1\">**</ept> prompts the user a third time with the same question prefixed with an apology.","pos":[11535,11692]},{"content":"If the user still doesn’t say \"Yes\" or \"No\", <bpt id=\"p1\">**</bpt>Cortana<ept id=\"p1\">**</ept> stops listening for voice input and asks the user to tap one of the buttons instead.","pos":[11693,11834]},{"content":"The confirmation screen includes a message customized for the action, an icon, and a content tile with information about the trip being canceled.","pos":[11836,11981]},{"content":"cortana background app confirmation screen","pos":[11985,12027]},{"pos":[12070,12302],"content":"AdventureWorksVoiceCommandService.cs contains the following trip cancellation method, which calls <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>RequestConfirmationAsync<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn706582)</ept> to show a confirmation screen in <bpt id=\"p3\">**</bpt>Cortana<ept id=\"p3\">**</ept>."},{"pos":[17758,17779],"content":"Disambiguation screen"},{"content":"When an action specified by a voice command has more than one possible outcome, an app service can request more info from the user.","pos":[17782,17913]},{"content":"Here's an example of a disambiguation screen for the <bpt id=\"p1\">**</bpt>Adventure Works<ept id=\"p1\">**</ept> app.","pos":[17915,17992]},{"content":"In this example, a user has instructed the app service to cancel a trip to Las Vegas through <bpt id=\"p1\">**</bpt>Cortana<ept id=\"p1\">**</ept>.","pos":[17993,18098]},{"content":"However, the user has two trips to Las Vegas on different dates and the app service cannot complete the action without the user selecting the intended trip.","pos":[18099,18255]},{"pos":[18257,18418],"content":"The app service provides <bpt id=\"p1\">**</bpt>Cortana<ept id=\"p1\">**</ept> with a disambiguation screen that prompts the user to make a selection from a list of matching trips, before it cancels any."},{"pos":[18420,18515],"content":"In this case, <bpt id=\"p1\">**</bpt>Cortana<ept id=\"p1\">**</ept> prompts the user with a similar question provided by the app service."},{"content":"On the second prompt, if the user still doesn’t say something that can be used to identify the selection, <bpt id=\"p1\">**</bpt>Cortana<ept id=\"p1\">**</ept> prompts the user a third time with the same question prefixed with an apology.","pos":[18517,18713]},{"content":"If the user still doesn’t say something that can be used to identify the selection, <bpt id=\"p1\">**</bpt>Cortana<ept id=\"p1\">**</ept> stops listening for voice input and asks the user to tap one of the buttons instead.","pos":[18714,18894]},{"content":"The disambiguation screen includes a message customized for the action, an icon, and a content tile with information about the trip being canceled.","pos":[18896,19043]},{"content":"cortana background app disambiguation screen","pos":[19047,19091]},{"pos":[19137,19375],"content":"AdventureWorksVoiceCommandService.cs contains the following trip cancellation method, which calls <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>RequestDisambiguationAsync<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn706583)</ept> to show the disambiguation screen in <bpt id=\"p3\">**</bpt>Cortana<ept id=\"p3\">**</ept>."},{"pos":[22135,22147],"content":"Error screen"},{"content":"When an action specified by a voice command cannot be completed, an app service can provide an error screen.","pos":[22150,22258]},{"content":"Here's an example of an error screen for the <bpt id=\"p1\">**</bpt>Adventure Works<ept id=\"p1\">**</ept> app.","pos":[22260,22329]},{"content":"In this example, a user has instructed the app service to cancel a trip to Las Vegas through <bpt id=\"p1\">**</bpt>Cortana<ept id=\"p1\">**</ept>.","pos":[22330,22435]},{"content":"However, the user does not have any trips scheduled to Las Vegas.","pos":[22436,22501]},{"pos":[22503,22652],"content":"The app service provides <bpt id=\"p1\">**</bpt>Cortana<ept id=\"p1\">**</ept> with an error screen that includes a message customized for the action, an icon, and the specific error message."},{"pos":[22654,22782],"content":"Call <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>ReportFailureAsync<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn706578)</ept> to show the error screen in <bpt id=\"p3\">**</bpt>Cortana<ept id=\"p3\">**</ept>."},{"pos":[23204,23220],"content":"Related articles"},{"content":"Developers","pos":[23225,23235]},{"content":"Cortana interactions","pos":[23241,23261]},{"content":"VCD elements and attributes v1.2","pos":[23293,23325]},{"content":"Designers","pos":[23390,23399]},{"content":"Cortana design guidelines","pos":[23405,23430]},{"content":"Speech design guidelines","pos":[23493,23517]},{"content":"Samples","pos":[23580,23587]},{"content":"Cortana voice command sample","pos":[23593,23621]}],"content":"---\nauthor: Karl-Bridge-Microsoft\nDescription: Learn how a user can interact with a background app through the Cortana voice and canvas during the execution of a voice command.\ntitle: Interact with a background app\nms.assetid: 6C60F03C-A242-435D-96BB-736892CC1CA6\nlabel: Interact with a background app\ntemplate: detail.hbs\n---\n\n# Interact with a background app in Cortana\n\nEnable user interaction with a background app, through speech and text input in the **Cortana** canvas, while executing a voice command.\n\n\n\n**Important APIs**\n\n-   [**Windows.ApplicationModel.VoiceCommands**](https://msdn.microsoft.com/library/windows/apps/dn706594)\n-   [**Voice Command Definition (VCD) elements and attributes v1.2**](https://msdn.microsoft.com/library/windows/apps/dn706593)\n\n\nCortana supports a complete turn-by-turn workflow with your app. This workflow is defined by your app, and can support functionality such as: \n\n-   Successful completion\n-   Hand-off\n-   Progress\n-   Confirmation\n-   Disambiguation\n-   Error\n\n**Prerequisites:**\n\nThis topic builds on [Launch a background app with voice commands in Cortana](launch-a-background-app-with-voice-commands-in-cortana.md). We continue here to demonstrate features with a trip planning and management app named **Adventure Works**.\n\nIf you're new to developing Universal Windows Platform (UWP) apps, have a look through these topics to get familiar with the technologies discussed here.\n\n-   [Create your first app](https://msdn.microsoft.com/library/windows/apps/bg124288)\n-   Learn about events with [Events and routed events overview](https://msdn.microsoft.com/library/windows/apps/mt185584)\n\n**User experience guidelines:  **\n\nSee [Cortana design guidelines](https://msdn.microsoft.com/library/windows/apps/dn974233) for info about how to integrate your app with **Cortana** and [Speech design guidelines](https://msdn.microsoft.com/library/windows/apps/dn596121) for helpful tips on designing a useful and engaging speech-enabled app.\n\n## <span id=\"Feedback_strings\"></span><span id=\"feedback_strings\"></span><span id=\"FEEDBACK_STRINGS\"></span>Feedback strings\n\nCompose the feedback strings that are both displayed and spoken by **Cortana**.\n\nThe [Cortana design guidelines](https://msdn.microsoft.com/library/windows/apps/dn974233)provides recommendations on composing strings for **Cortana**.\n\n## <span id=\"Feedback_strings\"></span><span id=\"feedback_strings\"></span><span id=\"FEEDBACK_STRINGS\"></span>Feedback strings\n\nContent cards can provide additional context for the user and help you keep feedback strings concise.\n\n**Cortana** supports the following content card templates (only one template can be used on the completion screen):\n\n    -   Title only\n    -   Title with up to three lines of text\n    -   Title with image\n    -   Title with image and up to three lines of text\n\nThe image can be:\n\n    -   68w x 68h\n    -   68w x 92h\n    -   280w x 140h\n\nYou can also let users launch your app in the foreground by clicking either a card or the text link to your app.\n\n## <span id=\"Completion_screen\"></span><span id=\"completion_screen\"></span><span id=\"COMPLETION_SCREEN\"></span>Completion screen\n\nA completion screen provides the user with information about the completed voice command task.\n\nTasks that take less than 500 milliseconds for your app to respond, and require no additional information from the user, are completed without further interaction with  **Cortana**. Cortana simply displays the completion screen.\n\nHere, we use the **Adventure Works** app to show the completion screen for a voice command request to display upcoming trips to London. \n\n![cortana background app completion screen](images/cortana-completion-screen-upcomingtrip-small.png)\n\nThe voice command is defined in AdventureWorksCommands.xml:\n```\n<Command Name=\"whenIsTripToDestination\">\n  <Example> When is my trip to Las Vegas?</Example>\n  <ListenFor RequireAppName=\"BeforeOrAfterPhrase\"> when is [my] trip to {destination}</ListenFor>\n  <ListenFor RequireAppName=\"ExplicitlySpecified\"> when is [my] {builtin:AppName} trip to {destination} </ListenFor>\n  <Feedback> Looking for trip to {destination}</Feedback>\n  <VoiceCommandService Target=\"AdventureWorksVoiceCommandService\"/>\n</Command>\n```\n\nAdventureWorksVoiceCommandService.cs contains the completion message method:\n\n```csharp\n/// <summary>\n/// Show details for a single trip, if the trip can be found. \n/// This demonstrates a simple response flow in Cortana.\n/// </summary>\n/// <param name=\"destination\">The destination specified in the voice command.</param>\nprivate async Task SendCompletionMessageForDestination(string destination)\n{\n    // If this operation is expected to take longer than 0.5 seconds, the task must\n    // supply a progress response to Cortana before starting the operation, and\n    // updates must be provided at least every 5 seconds.\n    string loadingTripToDestination = string.Format(\n               cortanaResourceMap.GetValue(\"LoadingTripToDestination\", cortanaContext).ValueAsString,\n               destination);\n    await ShowProgressScreen(loadingTripToDestination);\n    Model.TripStore store = new Model.TripStore();\n    await store.LoadTrips();\n\n    // Query for the specified trip. \n    // The destination should be in the phrase list. However, there might be  \n    // multiple trips to the destination. We pick the first.\n    IEnumerable<Model.Trip> trips = store.Trips.Where(p => p.Destination == destination);\n\n    var userMessage = new VoiceCommandUserMessage();\n    var destinationsContentTiles = new List<VoiceCommandContentTile>();\n    if (trips.Count() == 0)\n    {\n        string foundNoTripToDestination = string.Format(\n               cortanaResourceMap.GetValue(\"FoundNoTripToDestination\", cortanaContext).ValueAsString,\n               destination);\n        userMessage.DisplayMessage = foundNoTripToDestination;\n        userMessage.SpokenMessage = foundNoTripToDestination;\n    }\n    else\n    {\n        // Set plural or singular title.\n        string message = \"\";\n        if (trips.Count() > 1)\n        {\n            message = cortanaResourceMap.GetValue(\"PluralUpcomingTrips\", cortanaContext).ValueAsString;\n        }\n        else\n        {\n            message = cortanaResourceMap.GetValue(\"SingularUpcomingTrip\", cortanaContext).ValueAsString;\n        }\n        userMessage.DisplayMessage = message;\n        userMessage.SpokenMessage = message;\n\n        // Define a tile for each destination.\n        foreach (Model.Trip trip in trips)\n        {\n            int i = 1;\n            \n            var destinationTile = new VoiceCommandContentTile();\n\n            destinationTile.ContentTileType = VoiceCommandContentTileType.TitleWith68x68IconAndText;\n            destinationTile.Image = await StorageFile.GetFileFromApplicationUriAsync(new Uri(\"ms-appx:///AdventureWorks.VoiceCommands/Images/GreyTile.png\"));\n\n            destinationTile.AppLaunchArgument = trip.Destination;\n            destinationTile.Title = trip.Destination;\n            if (trip.StartDate != null)\n            {\n                destinationTile.TextLine1 = trip.StartDate.Value.ToString(dateFormatInfo.LongDatePattern);\n            }\n            else\n            {\n                destinationTile.TextLine1 = trip.Destination + \" \" + i;\n            }\n\n            destinationsContentTiles.Add(destinationTile);\n            i++;\n        }\n    }\n\n    var response = VoiceCommandResponse.CreateResponse(userMessage, destinationsContentTiles);\n\n    if (trips.Count() > 0)\n    {\n        response.AppLaunchArgument = destination;\n    }\n\n    await voiceServiceConnection.ReportSuccessAsync(response);\n}\n```\n\n## <span id=\"Hand-off_screen\"></span><span id=\"hand-off_screen\"></span><span id=\"HAND-OFF_SCREEN\"></span>Hand-off screen\n\nOnce a voice command is recognized, **Cortana** must call ReportSuccessAsync and present feedback within approximately 500ms. If the app service cannot complete the action specified by the voice command within 500ms, **Cortana** presents a hand-off screen that is shown until your app calls ReportSuccessAsync, or for up to 5 seconds.\n\nIf the app service doesn’t call ReportSuccessAsync, or any other VoiceCommandServiceConnection method, the user receives an error message and the app service call is cancelled.\n\nHere's an example of a hand-off screen for the **Adventure Works** app. In this example, a user has queried **Cortana** for upcoming trips. The hand-off screen includes a message customized with the app service name, an icon, and a **Feedback** string. \n\n[!NOTE] You can declare a **Feedback** string in the VCD file. This string does not affect the UI text displayed on the Cortana canvas, it only affects the text spoken by **Cortana**.\n\n![cortana background app hand-off screen](images/cortana-backgroundapp-progress-result.png)\n\n\n## <span id=\"Progress_screen\"></span><span id=\"progress_screen\"></span><span id=\"PROGRESS_SCREEN\"></span>Progress screen\n\n\nIf the app service takes more than 500ms to call ReportSuccessAsync, **Cortana** provides the user with a progress screen. The app icon is displayed, and you must provide both GUI and TTS progress strings to indicate that the task is being actively handled.\n\n**Cortana** shows a progress screen for a maximum of 5 seconds. After 5 seconds, **Cortana** presents the user with an error message and the app service is closed. If the app service needs more than 5 seconds to complete the action, it can continue to update **Cortana** with progress screens.\n\nHere's an example of a progress screen for the **Adventure Works** app. In this example, a user has canceled a trip to Las Vegas. The progress screen includes a message customized for the action, an icon, and a content tile with information about the trip being canceled.\n\n![cortana background app progress screen ](images/cortana-progress-screen.png)\n\nAdventureWorksVoiceCommandService.cs contains the following progress message method, which calls [**ReportProgressAsync**](https://msdn.microsoft.com/library/windows/apps/dn706579) to show the progress screen in **Cortana**.\n\n\n```    CSharp\n/// <summary>\n/// Show a progress screen. These should be posted at least every 5 seconds for a \n/// long-running operation.\n/// </summary>\n/// <param name=\"message\">The message to display, relating to the task being performed.</param>\n/// <returns></returns>\nprivate async Task ShowProgressScreen(string message)\n{\n    var userProgressMessage = new VoiceCommandUserMessage();\n    userProgressMessage.DisplayMessage = userProgressMessage.SpokenMessage = message;\n\n    VoiceCommandResponse response = VoiceCommandResponse.CreateResponse(userProgressMessage);\n    await voiceServiceConnection.ReportProgressAsync(response);\n}\n```\n\n## <span id=\"Confirmation_screen\"></span><span id=\"confirmation_screen\"></span><span id=\"CONFIRMATION_SCREEN\"></span>Confirmation screen\n\n\nWhen an action specified by a voice command is irreversible, has a significant impact, or the recognition confidence is not high, an app service can request confirmation.\n\nHere's an example of a confirmation screen for the **Adventure Works** app. In this example, a user has instructed the app service to cancel a trip to Las Vegas through **Cortana**. The app service has provided **Cortana** with a confirmation screen that prompts the user for a yes or no answer before canceling the trip.\n\nIf the user says something other than \"Yes\" or \"No\", **Cortana** cannot determine the answer to the question. In this case, **Cortana** prompts the user with a similar question provided by the app service.\n\nOn the second prompt, if the user still doesn’t say \"Yes\" or \"No\", **Cortana** prompts the user a third time with the same question prefixed with an apology. If the user still doesn’t say \"Yes\" or \"No\", **Cortana** stops listening for voice input and asks the user to tap one of the buttons instead.\n\nThe confirmation screen includes a message customized for the action, an icon, and a content tile with information about the trip being canceled.\n\n![cortana background app confirmation screen](images/cortana-confirmation-screen.png)\n\nAdventureWorksVoiceCommandService.cs contains the following trip cancellation method, which calls [**RequestConfirmationAsync**](https://msdn.microsoft.com/library/windows/apps/dn706582) to show a confirmation screen in **Cortana**.\n\n```    CSharp\n/// <summary>\n/// Handle the Trip Cancellation task. This task demonstrates how to prompt a user\n/// for confirmation of an operation, show users a progress screen while performing\n/// a long-running task, and show a completion screen.\n/// </summary>\n/// <param name=\"destination\">The name of a destination.</param>\n/// <returns></returns>\nprivate async Task SendCompletionMessageForCancellation(string destination)\n{\n    // Begin loading data to search for the target store. \n    // Consider inserting a progress screen here, in order to prevent Cortana from timing out. \n    string progressScreenString = string.Format(\n        cortanaResourceMap.GetValue(\"ProgressLookingForTripToDest\", cortanaContext).ValueAsString,\n        destination);\n    await ShowProgressScreen(progressScreenString);\n\n    Model.TripStore store = new Model.TripStore();\n    await store.LoadTrips();\n\n    IEnumerable<Model.Trip> trips = store.Trips.Where(p => p.Destination == destination);\n    Model.Trip trip = null;\n    if (trips.Count() > 1)\n    {\n        // If there is more than one trip, provide a disambiguation screen.\n        // However, if a significant number of items are returned, you might want to \n        // just display a link to your app and provide a deeper search experience.\n        string disambiguationDestinationString = string.Format(\n            cortanaResourceMap.GetValue(\"DisambiguationWhichTripToDest\", cortanaContext).ValueAsString,\n            destination);\n        string disambiguationRepeatString = cortanaResourceMap.GetValue(\"DisambiguationRepeat\", cortanaContext).ValueAsString;\n        trip = await DisambiguateTrips(trips, disambiguationDestinationString, disambiguationRepeatString);\n    }\n    else\n    {\n        trip = trips.FirstOrDefault();\n    }\n\n    var userPrompt = new VoiceCommandUserMessage();\n    \n    VoiceCommandResponse response;\n    if (trip == null)\n    {\n        var userMessage = new VoiceCommandUserMessage();\n        string noSuchTripToDestination = string.Format(\n            cortanaResourceMap.GetValue(\"NoSuchTripToDestination\", cortanaContext).ValueAsString,\n            destination);\n        userMessage.DisplayMessage = userMessage.SpokenMessage = noSuchTripToDestination;\n\n        response = VoiceCommandResponse.CreateResponse(userMessage);\n        await voiceServiceConnection.ReportSuccessAsync(response);\n    }\n    else\n    {\n        // Prompt the user for confirmation that this is the correct trip to cancel.\n        string cancelTripToDestination = string.Format(\n            cortanaResourceMap.GetValue(\"CancelTripToDestination\", cortanaContext).ValueAsString,\n            destination);\n        userPrompt.DisplayMessage = userPrompt.SpokenMessage = cancelTripToDestination;\n        var userReprompt = new VoiceCommandUserMessage();\n        string confirmCancelTripToDestination = string.Format(\n            cortanaResourceMap.GetValue(\"ConfirmCancelTripToDestination\", cortanaContext).ValueAsString,\n            destination);\n        userReprompt.DisplayMessage = userReprompt.SpokenMessage = confirmCancelTripToDestination;\n        \n        response = VoiceCommandResponse.CreateResponseForPrompt(userPrompt, userReprompt);\n\n        var voiceCommandConfirmation = await voiceServiceConnection.RequestConfirmationAsync(response);\n\n        // If RequestConfirmationAsync returns null, Cortana has likely been dismissed.\n        if (voiceCommandConfirmation != null)\n        {\n            if (voiceCommandConfirmation.Confirmed == true)\n            {\n                string cancellingTripToDestination = string.Format(\n               cortanaResourceMap.GetValue(\"CancellingTripToDestination\", cortanaContext).ValueAsString,\n               destination);\n                await ShowProgressScreen(cancellingTripToDestination);\n\n                // Perform the operation to remove the trip from app data. \n                // As the background task runs within the app package of the installed app,\n                // we can access local files belonging to the app without issue.\n                await store.DeleteTrip(trip);\n\n                // Provide a completion message to the user.\n                var userMessage = new VoiceCommandUserMessage();\n                string cancelledTripToDestination = string.Format(\n                    cortanaResourceMap.GetValue(\"CancelledTripToDestination\", cortanaContext).ValueAsString,\n                    destination);\n                userMessage.DisplayMessage = userMessage.SpokenMessage = cancelledTripToDestination;\n                response = VoiceCommandResponse.CreateResponse(userMessage);\n                await voiceServiceConnection.ReportSuccessAsync(response);\n            }\n            else\n            {\n                // Confirm no action for the user.\n                var userMessage = new VoiceCommandUserMessage();\n                string keepingTripToDestination = string.Format(\n                    cortanaResourceMap.GetValue(\"KeepingTripToDestination\", cortanaContext).ValueAsString,\n                    destination);\n                userMessage.DisplayMessage = userMessage.SpokenMessage = keepingTripToDestination;\n\n                response = VoiceCommandResponse.CreateResponse(userMessage);\n                await voiceServiceConnection.ReportSuccessAsync(response);\n            }\n        }\n    }\n}\n```\n\n## <span id=\"Disambiguation_screen\"></span><span id=\"disambiguation_screen\"></span><span id=\"DISAMBIGUATION_SCREEN\"></span>Disambiguation screen\n\n\nWhen an action specified by a voice command has more than one possible outcome, an app service can request more info from the user.\n\nHere's an example of a disambiguation screen for the **Adventure Works** app. In this example, a user has instructed the app service to cancel a trip to Las Vegas through **Cortana**. However, the user has two trips to Las Vegas on different dates and the app service cannot complete the action without the user selecting the intended trip.\n\nThe app service provides **Cortana** with a disambiguation screen that prompts the user to make a selection from a list of matching trips, before it cancels any.\n\nIn this case, **Cortana** prompts the user with a similar question provided by the app service.\n\nOn the second prompt, if the user still doesn’t say something that can be used to identify the selection, **Cortana** prompts the user a third time with the same question prefixed with an apology. If the user still doesn’t say something that can be used to identify the selection, **Cortana** stops listening for voice input and asks the user to tap one of the buttons instead.\n\nThe disambiguation screen includes a message customized for the action, an icon, and a content tile with information about the trip being canceled.\n\n![cortana background app disambiguation screen ](images/cortana-disambiguation-screen.png)\n\nAdventureWorksVoiceCommandService.cs contains the following trip cancellation method, which calls [**RequestDisambiguationAsync**](https://msdn.microsoft.com/library/windows/apps/dn706583) to show the disambiguation screen in **Cortana**.\n\n```csharp\n/// <summary>\n/// Provide the user with a way to identify which trip to cancel. \n/// </summary>\n/// <param name=\"trips\">The set of trips</param>\n/// <param name=\"disambiguationMessage\">The initial disambiguation message</param>\n/// <param name=\"secondDisambiguationMessage\">Repeat prompt retry message</param>\nprivate async Task<Model.Trip> DisambiguateTrips(IEnumerable<Model.Trip> trips, string disambiguationMessage, string secondDisambiguationMessage)\n{\n    // Create the first prompt message.\n    var userPrompt = new VoiceCommandUserMessage();\n    userPrompt.DisplayMessage =\n        userPrompt.SpokenMessage = disambiguationMessage;\n\n    // Create a re-prompt message if the user responds with an out-of-grammar response.\n    var userReprompt = new VoiceCommandUserMessage();\n    userReprompt.DisplayMessage =\n        userReprompt.SpokenMessage = secondDisambiguationMessage;\n\n    // Create card for each item. \n    var destinationContentTiles = new List<VoiceCommandContentTile>();\n    int i = 1;\n    foreach (Model.Trip trip in trips)\n    {\n        var destinationTile = new VoiceCommandContentTile();\n\n        destinationTile.ContentTileType = VoiceCommandContentTileType.TitleWith68x68IconAndText;\n        destinationTile.Image = await StorageFile.GetFileFromApplicationUriAsync(new Uri(\"ms-appx:///AdventureWorks.VoiceCommands/Images/GreyTile.png\"));\n        \n        // The AppContext can be any arbitrary object.\n        destinationTile.AppContext = trip;\n        string dateFormat = \"\";\n        if (trip.StartDate != null)\n        {\n            dateFormat = trip.StartDate.Value.ToString(dateFormatInfo.LongDatePattern);\n        }\n        else\n        {\n            // The app allows a trip to have no date.\n            // However, the choices must be unique so they can be distinguished.\n            // Here, we add a number to identify them.\n            dateFormat = string.Format(\"{0}\", i);\n        } \n\n        destinationTile.Title = trip.Destination + \" \" + dateFormat;\n        destinationTile.TextLine1 = trip.Description;\n\n        destinationContentTiles.Add(destinationTile);\n        i++;\n    }\n\n    // Cortana handles re-prompting if no valid response.\n    var response = VoiceCommandResponse.CreateResponseForPrompt(userPrompt, userReprompt, destinationContentTiles);\n\n    // If cortana is dismissed in this operation, null is returned.\n    var voiceCommandDisambiguationResult = await\n        voiceServiceConnection.RequestDisambiguationAsync(response);\n    if (voiceCommandDisambiguationResult != null)\n    {\n        return (Model.Trip)voiceCommandDisambiguationResult.SelectedItem.AppContext;\n    }\n\n    return null;\n}\n```\n\n## <span id=\"Error_screen\"></span><span id=\"error_screen\"></span><span id=\"ERROR_SCREEN\"></span>Error screen\n\n\nWhen an action specified by a voice command cannot be completed, an app service can provide an error screen.\n\nHere's an example of an error screen for the **Adventure Works** app. In this example, a user has instructed the app service to cancel a trip to Las Vegas through **Cortana**. However, the user does not have any trips scheduled to Las Vegas.\n\nThe app service provides **Cortana** with an error screen that includes a message customized for the action, an icon, and the specific error message.\n\nCall [**ReportFailureAsync**](https://msdn.microsoft.com/library/windows/apps/dn706578) to show the error screen in **Cortana**.\n\n```csharp\nvar userMessage = new VoiceCommandUserMessage();\n    userMessage.DisplayMessage = userMessage.SpokenMessage = \n      \"Sorry, you don't have any trips to Las Vegas\";\n                \n    var response = VoiceCommandResponse.CreateResponse(userMessage);\n\n    response.AppLaunchArgument = \"showUpcomingTrips\";\n    await voiceServiceConnection.ReportFailureAsync(response);\n```\n\n## <span id=\"related_topics\"></span>Related articles\n\n\n**Developers**\n* [Cortana interactions](cortana-interactions.md)\n* [**VCD elements and attributes v1.2**](https://msdn.microsoft.com/library/windows/apps/dn706593)\n\n**Designers**\n* [Cortana design guidelines](https://msdn.microsoft.com/library/windows/apps/dn974233)\n* [Speech design guidelines](https://msdn.microsoft.com/library/windows/apps/dn596121)\n\n**Samples**\n* [Cortana voice command sample](http://go.microsoft.com/fwlink/p/?LinkID=619899)\n \n\n \n\n\n\n\n"}