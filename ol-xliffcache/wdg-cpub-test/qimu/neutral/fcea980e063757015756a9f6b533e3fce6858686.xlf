<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci2\gaming\adding-audio-to-the-marble-maze-sample.md</xliffext:olfilepath>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fcea980e063757015756a9f6b533e3fce6858686</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-e58fd48" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Adding audio to the Marble Maze sample</source>
          <target state="new">Adding audio to the Marble Maze sample</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This document describes the key practices to consider when you work with audio and shows how Marble Maze applies these practices.</source>
          <target state="new">This document describes the key practices to consider when you work with audio and shows how Marble Maze applies these practices.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Adding audio to the Marble Maze sample</source>
          <target state="new">Adding audio to the Marble Maze sample</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Updated for UWP apps on Windows 10.</source>
          <target state="new">Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept></source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept></target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This document describes the key practices to consider when you work with audio and shows how Marble Maze applies these practices.</source>
          <target state="new">This document describes the key practices to consider when you work with audio and shows how Marble Maze applies these practices.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Marble Maze uses Microsoft Media Foundation to load audio resources from file, and XAudio2 to mix and play audio and to apply effects to audio.</source>
          <target state="new">Marble Maze uses Microsoft Media Foundation to load audio resources from file, and XAudio2 to mix and play audio and to apply effects to audio.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Marble Maze plays music in the background, and also uses game-play sounds to indicate game events, such as when the marble hits a wall.</source>
          <target state="new">Marble Maze plays music in the background, and also uses game-play sounds to indicate game events, such as when the marble hits a wall.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>An important part of the implementation is that Marble Maze uses a reverb, or echo, effect to simulate the sound of a marble when it bounces.</source>
          <target state="new">An important part of the implementation is that Marble Maze uses a reverb, or echo, effect to simulate the sound of a marble when it bounces.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The reverb effect implementation causes echoes to reach you more quickly and loudly in small rooms; echoes are quieter and reach you more slowly in larger rooms.</source>
          <target state="new">The reverb effect implementation causes echoes to reach you more quickly and loudly in small rooms; echoes are quieter and reach you more slowly in larger rooms.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>   The sample code that corresponds to this document is found in the <bpt id="p2">[</bpt>DirectX Marble Maze game sample<ept id="p2">](http://go.microsoft.com/fwlink/?LinkId=624011)</ept>.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>   The sample code that corresponds to this document is found in the <bpt id="p2">[</bpt>DirectX Marble Maze game sample<ept id="p2">](http://go.microsoft.com/fwlink/?LinkId=624011)</ept>.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Here are some of the key points that this document discusses for when you work with audio in your game:</source>
          <target state="new">Here are some of the key points that this document discusses for when you work with audio in your game:</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Consider using Media Foundation to decode audio assets and XAudio2 to play audio.</source>
          <target state="new">Consider using Media Foundation to decode audio assets and XAudio2 to play audio.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>However, if you have an existing audio asset-loading mechanism that works in a Universal Windows Platform (UWP) app, you can use it.</source>
          <target state="new">However, if you have an existing audio asset-loading mechanism that works in a Universal Windows Platform (UWP) app, you can use it.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>An audio graph contains one source voice for each active sound, zero or more submix voices, and one mastering voice.</source>
          <target state="new">An audio graph contains one source voice for each active sound, zero or more submix voices, and one mastering voice.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Source voices can feed into submix voices and/or the mastering voice.</source>
          <target state="new">Source voices can feed into submix voices and/or the mastering voice.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Submix voices feed into other submix voices or the mastering voice.</source>
          <target state="new">Submix voices feed into other submix voices or the mastering voice.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If your background music files are large, consider streaming your music into smaller buffers so that less memory is used.</source>
          <target state="new">If your background music files are large, consider streaming your music into smaller buffers so that less memory is used.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If it makes sense to do so, pause audio playback when the app loses focus or visibility, or is suspended.</source>
          <target state="new">If it makes sense to do so, pause audio playback when the app loses focus or visibility, or is suspended.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Resume playback when your app regains focus, becomes visible, or is resumed.</source>
          <target state="new">Resume playback when your app regains focus, becomes visible, or is resumed.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Set audio categories to reflect the role of each sound.</source>
          <target state="new">Set audio categories to reflect the role of each sound.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For example, you typically use <bpt id="p1">**</bpt>AudioCategory<ph id="ph1">\_</ph>GameMedia<ept id="p1">**</ept> for game background audio and <bpt id="p2">**</bpt>AudioCategory<ph id="ph2">\_</ph>GameEffects<ept id="p2">**</ept> for sound effects.</source>
          <target state="new">For example, you typically use <bpt id="p1">**</bpt>AudioCategory<ph id="ph1">\_</ph>GameMedia<ept id="p1">**</ept> for game background audio and <bpt id="p2">**</bpt>AudioCategory<ph id="ph2">\_</ph>GameEffects<ept id="p2">**</ept> for sound effects.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Handle device changes, including headphones, by releasing and recreating all audio resources and interfaces.</source>
          <target state="new">Handle device changes, including headphones, by releasing and recreating all audio resources and interfaces.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Consider whether to compress audio files when minimizing disk space and streaming costs is a requirement.</source>
          <target state="new">Consider whether to compress audio files when minimizing disk space and streaming costs is a requirement.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Otherwise, you can leave audio uncompressed so that it loads faster.</source>
          <target state="new">Otherwise, you can leave audio uncompressed so that it loads faster.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Introducing XAudio2 and Microsoft Media Foundation</source>
          <target state="new">Introducing XAudio2 and Microsoft Media Foundation</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>XAudio2 is a low-level audio library for Windows that specifically supports game audio.</source>
          <target state="new">XAudio2 is a low-level audio library for Windows that specifically supports game audio.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>It provides a digital signal processing (DSP) and audio-graph engine for games.</source>
          <target state="new">It provides a digital signal processing (DSP) and audio-graph engine for games.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>XAudio2 expands on its predecessors, DirectSound and XAudio, by supporting computing trends such as SIMD floating-point architectures and HD audio.</source>
          <target state="new">XAudio2 expands on its predecessors, DirectSound and XAudio, by supporting computing trends such as SIMD floating-point architectures and HD audio.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>It also supports the more complex sound processing demands of today’s games.</source>
          <target state="new">It also supports the more complex sound processing demands of today’s games.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The document <bpt id="p1">[</bpt>XAudio2 Key Concepts<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ee415764)</ept> explains the key concepts for using XAudio2.</source>
          <target state="new">The document <bpt id="p1">[</bpt>XAudio2 Key Concepts<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ee415764)</ept> explains the key concepts for using XAudio2.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>In brief, the concepts are:</source>
          <target state="new">In brief, the concepts are:</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IXAudio2<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ee415908)</ept> interface is the core of the XAudio2 engine.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IXAudio2<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ee415908)</ept> interface is the core of the XAudio2 engine.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Marble Maze uses this interface to create voices and to receive notification when the output device changes or fails.</source>
          <target state="new">Marble Maze uses this interface to create voices and to receive notification when the output device changes or fails.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>A voice processes, adjusts, and plays audio data.</source>
          <target state="new">A voice processes, adjusts, and plays audio data.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>A source voice is a collection of audio channels (mono, 5.1, and so on) and represents one stream of audio data.</source>
          <target state="new">A source voice is a collection of audio channels (mono, 5.1, and so on) and represents one stream of audio data.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>In XAudio2, a source voice is where audio processing begins.</source>
          <target state="new">In XAudio2, a source voice is where audio processing begins.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Typically, sound data is loaded from an external source, such as a file or a network, and is sent to a source voice.</source>
          <target state="new">Typically, sound data is loaded from an external source, such as a file or a network, and is sent to a source voice.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Marble Maze uses <bpt id="p1">[</bpt>Media Foundation<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ms694197)</ept> to load sound data from files.</source>
          <target state="new">Marble Maze uses <bpt id="p1">[</bpt>Media Foundation<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ms694197)</ept> to load sound data from files.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Media Foundation is introduced later in this document.</source>
          <target state="new">Media Foundation is introduced later in this document.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A submix voice processes audio data.</source>
          <target state="new">A submix voice processes audio data.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>This processing can include changing the audio stream or combining multiple streams into one.</source>
          <target state="new">This processing can include changing the audio stream or combining multiple streams into one.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Marble Maze uses submixes to create the reverb effect.</source>
          <target state="new">Marble Maze uses submixes to create the reverb effect.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A mastering voice combines data from source and submix voices and sends that data to the audio hardware.</source>
          <target state="new">A mastering voice combines data from source and submix voices and sends that data to the audio hardware.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>An audio graph contains one source voice for each active sound, zero or more submix voices, and only one mastering voice.</source>
          <target state="new">An audio graph contains one source voice for each active sound, zero or more submix voices, and only one mastering voice.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>A callback informs client code that some event has occurred in a voice or in an engine object.</source>
          <target state="new">A callback informs client code that some event has occurred in a voice or in an engine object.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>By using callbacks, you can reuse memory when XAudio2 is finished with a buffer, react when the audio device changes (for example, when you connect or disconnect headphones), and more.</source>
          <target state="new">By using callbacks, you can reuse memory when XAudio2 is finished with a buffer, react when the audio device changes (for example, when you connect or disconnect headphones), and more.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>Handling headphones and device changes section<ept id="p1">](#phones)</ept> later in this document explains how Marble Maze uses this mechanism to handle device changes.</source>
          <target state="new">The <bpt id="p1">[</bpt>Handling headphones and device changes section<ept id="p1">](#phones)</ept> later in this document explains how Marble Maze uses this mechanism to handle device changes.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Marble Maze uses two audio engines (in other words, two <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IXAudio2<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ee415908)</ept> objects) to process audio.</source>
          <target state="new">Marble Maze uses two audio engines (in other words, two <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IXAudio2<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ee415908)</ept> objects) to process audio.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>One engine processes the background music, and the other engine processes game-play sounds.</source>
          <target state="new">One engine processes the background music, and the other engine processes game-play sounds.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Marble Maze must also create one mastering voice for each engine.</source>
          <target state="new">Marble Maze must also create one mastering voice for each engine.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Recall that a mastering engine combines audio streams into one stream and sends that stream to the audio hardware.</source>
          <target state="new">Recall that a mastering engine combines audio streams into one stream and sends that stream to the audio hardware.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The background music stream, a source voice, outputs data to a mastering voice and to two submix voices.</source>
          <target state="new">The background music stream, a source voice, outputs data to a mastering voice and to two submix voices.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The submix voices perform the reverb effect.</source>
          <target state="new">The submix voices perform the reverb effect.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Media Foundation is a multimedia library that supports many audio and video formats.</source>
          <target state="new">Media Foundation is a multimedia library that supports many audio and video formats.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>XAudio2 and Media Foundation complement each other.</source>
          <target state="new">XAudio2 and Media Foundation complement each other.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Marble Maze uses Media Foundation to load audio assets from file and uses XAudio2 to play audio.</source>
          <target state="new">Marble Maze uses Media Foundation to load audio assets from file and uses XAudio2 to play audio.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>You don't have to use Media Foundation to load audio assets.</source>
          <target state="new">You don't have to use Media Foundation to load audio assets.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>If you have an existing audio asset loading mechanism that works in Universal Windows Platform (UWP) apps, use it.</source>
          <target state="new">If you have an existing audio asset loading mechanism that works in Universal Windows Platform (UWP) apps, use it.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>For more information about XAudio2, see <bpt id="p1">[</bpt>Programming Guide<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ee415737)</ept>.</source>
          <target state="new">For more information about XAudio2, see <bpt id="p1">[</bpt>Programming Guide<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ee415737)</ept>.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>For more information about Media Foundation, see <bpt id="p1">[</bpt>Microsoft Media Foundation<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ms694197)</ept>.</source>
          <target state="new">For more information about Media Foundation, see <bpt id="p1">[</bpt>Microsoft Media Foundation<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ms694197)</ept>.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Initializing audio resources</source>
          <target state="new">Initializing audio resources</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Marble Mazes uses a Windows Media Audio (.wma) file for the background music, and WAV (.wav) files for game play sounds.</source>
          <target state="new">Marble Mazes uses a Windows Media Audio (.wma) file for the background music, and WAV (.wav) files for game play sounds.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>These formats are supported by Media Foundation.</source>
          <target state="new">These formats are supported by Media Foundation.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Although the .wav file format is natively supported by XAudio2, a game has to parse the file format manually to fill out the appropriate XAudio2 data structures.</source>
          <target state="new">Although the .wav file format is natively supported by XAudio2, a game has to parse the file format manually to fill out the appropriate XAudio2 data structures.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Marble Maze uses Media Foundation to more easily work with .wav files.</source>
          <target state="new">Marble Maze uses Media Foundation to more easily work with .wav files.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>For the complete list of the media formats that are supported by Media Foundation, see <bpt id="p1">[</bpt>Supported Media Formats in Media Foundation<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/dd757927)</ept>.</source>
          <target state="new">For the complete list of the media formats that are supported by Media Foundation, see <bpt id="p1">[</bpt>Supported Media Formats in Media Foundation<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/dd757927)</ept>.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Marble Maze does not use separate design-time and run-time audio formats, and does not use XAudio2 ADPCM compression support.</source>
          <target state="new">Marble Maze does not use separate design-time and run-time audio formats, and does not use XAudio2 ADPCM compression support.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>For more information about ADPCM compression in XAudio2, see <bpt id="p1">[</bpt>ADPCM Overview<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ee415711)</ept>.</source>
          <target state="new">For more information about ADPCM compression in XAudio2, see <bpt id="p1">[</bpt>ADPCM Overview<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ee415711)</ept>.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Audio::CreateResources<ept id="p1">**</ept> method, which is called from <bpt id="p2">**</bpt>MarbleMaze::CreateDeviceIndependentResources<ept id="p2">**</ept>, loads the audio streams from file, initializes the XAudio2 engine objects, and creates the source, submix, and mastering voices.</source>
          <target state="new">The <bpt id="p1">**</bpt>Audio::CreateResources<ept id="p1">**</ept> method, which is called from <bpt id="p2">**</bpt>MarbleMaze::CreateDeviceIndependentResources<ept id="p2">**</ept>, loads the audio streams from file, initializes the XAudio2 engine objects, and creates the source, submix, and mastering voices.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Creating the XAudio2 engines</source>
          <target state="new">Creating the XAudio2 engines</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Recall that Marble Maze creates one <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IXAudio2<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ee415908)</ept> object to represent each audio engine that it uses.</source>
          <target state="new">Recall that Marble Maze creates one <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IXAudio2<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ee415908)</ept> object to represent each audio engine that it uses.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>To create an audio engine, call the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>XAudio2Create<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ee419212)</ept> function.</source>
          <target state="new">To create an audio engine, call the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>XAudio2Create<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ee419212)</ept> function.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The following example shows how Marble Maze creates the audio engine that processes background music.</source>
          <target state="new">The following example shows how Marble Maze creates the audio engine that processes background music.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Marble Maze performs a similar step to create the audio engine that plays game-play sounds.</source>
          <target state="new">Marble Maze performs a similar step to create the audio engine that plays game-play sounds.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>How to work with the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IXAudio2<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ee415908)</ept> interface in a UWP app differs from a desktop app in two ways.</source>
          <target state="new">How to work with the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IXAudio2<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ee415908)</ept> interface in a UWP app differs from a desktop app in two ways.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>First, you don't have to call <bpt id="p1">**</bpt>CoInitializeEx<ept id="p1">**</ept> before you call <bpt id="p2">[</bpt><bpt id="p3">**</bpt>XAudio2Create<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/desktop/ee419212)</ept>.</source>
          <target state="new">First, you don't have to call <bpt id="p1">**</bpt>CoInitializeEx<ept id="p1">**</ept> before you call <bpt id="p2">[</bpt><bpt id="p3">**</bpt>XAudio2Create<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/desktop/ee419212)</ept>.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>In addition, <bpt id="p1">**</bpt>IXAudio2<ept id="p1">**</ept> no longer supports device enumeration.</source>
          <target state="new">In addition, <bpt id="p1">**</bpt>IXAudio2<ept id="p1">**</ept> no longer supports device enumeration.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>For information about how to enumerate audio devices, see <bpt id="p1">[</bpt>Enumerating devices<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh464977)</ept>.</source>
          <target state="new">For information about how to enumerate audio devices, see <bpt id="p1">[</bpt>Enumerating devices<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh464977)</ept>.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Creating the mastering voices</source>
          <target state="new">Creating the mastering voices</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The following example shows how the <bpt id="p1">**</bpt>Audio::CreateResources<ept id="p1">**</ept> method creates the mastering voice for the background music.</source>
          <target state="new">The following example shows how the <bpt id="p1">**</bpt>Audio::CreateResources<ept id="p1">**</ept> method creates the mastering voice for the background music.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The call to <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IXAudio2::CreateMasteringVoice<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/hh405048)</ept> specifies two input channels.</source>
          <target state="new">The call to <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IXAudio2::CreateMasteringVoice<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/hh405048)</ept> specifies two input channels.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>This simplifies the logic for the reverb effect.</source>
          <target state="new">This simplifies the logic for the reverb effect.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>XAUDIO2<ph id="ph1">\_</ph>DEFAULT<ph id="ph2">\_</ph>SAMPLERATE<ept id="p1">**</ept> specification tells the audio engine to use the sample rate that is specified in the Sound Control Panel.</source>
          <target state="new">The <bpt id="p1">**</bpt>XAUDIO2<ph id="ph1">\_</ph>DEFAULT<ph id="ph2">\_</ph>SAMPLERATE<ept id="p1">**</ept> specification tells the audio engine to use the sample rate that is specified in the Sound Control Panel.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>In this example, <bpt id="p1">**</bpt>m<ph id="ph1">\_</ph>musicMasteringVoice<ept id="p1">**</ept> is an <bpt id="p2">[</bpt><bpt id="p3">**</bpt>IXAudio2MasteringVoice<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/desktop/ee415912)</ept> object.</source>
          <target state="new">In this example, <bpt id="p1">**</bpt>m<ph id="ph1">\_</ph>musicMasteringVoice<ept id="p1">**</ept> is an <bpt id="p2">[</bpt><bpt id="p3">**</bpt>IXAudio2MasteringVoice<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/desktop/ee415912)</ept> object.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Audio::CreateResources<ept id="p1">**</ept> method performs a similar step to create the mastering voice for the game play sounds, except that it specifies <bpt id="p2">**</bpt>AudioCategory<ph id="ph1">\_</ph>GameEffects<ept id="p2">**</ept> for the <bpt id="p3">*</bpt>StreamCategory<ept id="p3">*</ept> parameter, which is the default.</source>
          <target state="new">The <bpt id="p1">**</bpt>Audio::CreateResources<ept id="p1">**</ept> method performs a similar step to create the mastering voice for the game play sounds, except that it specifies <bpt id="p2">**</bpt>AudioCategory<ph id="ph1">\_</ph>GameEffects<ept id="p2">**</ept> for the <bpt id="p3">*</bpt>StreamCategory<ept id="p3">*</ept> parameter, which is the default.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Marble Maze specifies <bpt id="p1">**</bpt>AudioCategory<ph id="ph1">\_</ph>GameMedia<ept id="p1">**</ept> for background music so that users can listen to music from a different application as they play the game.</source>
          <target state="new">Marble Maze specifies <bpt id="p1">**</bpt>AudioCategory<ph id="ph1">\_</ph>GameMedia<ept id="p1">**</ept> for background music so that users can listen to music from a different application as they play the game.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>When a music app is playing, Windows mutes any voices that are created by the <bpt id="p1">**</bpt>AudioCategory<ph id="ph1">\_</ph>GameMedia<ept id="p1">**</ept> option.</source>
          <target state="new">When a music app is playing, Windows mutes any voices that are created by the <bpt id="p1">**</bpt>AudioCategory<ph id="ph1">\_</ph>GameMedia<ept id="p1">**</ept> option.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The user still hears game-play sounds because they are created by the <bpt id="p1">**</bpt>AudioCategory<ph id="ph1">\_</ph>GameEffects<ept id="p1">**</ept> option.</source>
          <target state="new">The user still hears game-play sounds because they are created by the <bpt id="p1">**</bpt>AudioCategory<ph id="ph1">\_</ph>GameEffects<ept id="p1">**</ept> option.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>For more info about audio categories, see <bpt id="p1">[</bpt><bpt id="p2">**</bpt>AUDIO<ph id="ph1">\_</ph>STREAM<ph id="ph2">\_</ph>CATEGORY<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/hh404178)</ept> enumeration.</source>
          <target state="new">For more info about audio categories, see <bpt id="p1">[</bpt><bpt id="p2">**</bpt>AUDIO<ph id="ph1">\_</ph>STREAM<ph id="ph2">\_</ph>CATEGORY<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/hh404178)</ept> enumeration.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Creating the reverb effect</source>
          <target state="new">Creating the reverb effect</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>For each voice, you can use XAudio2 to create sequences of effects that process audio.</source>
          <target state="new">For each voice, you can use XAudio2 to create sequences of effects that process audio.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Such a sequence is known as an effect chain.</source>
          <target state="new">Such a sequence is known as an effect chain.</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Use effect chains when you want to apply one or more effects to a voice.</source>
          <target state="new">Use effect chains when you want to apply one or more effects to a voice.</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Effect chains can be destructive; that is, each effect in the chain can overwrite the audio buffer.</source>
          <target state="new">Effect chains can be destructive; that is, each effect in the chain can overwrite the audio buffer.</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>This property is important because XAudio2 makes no guarantee that output buffers are initialized with silence.</source>
          <target state="new">This property is important because XAudio2 makes no guarantee that output buffers are initialized with silence.</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Effect objects are represented in XAudio2 by cross-platform audio processing objects (XAPO).</source>
          <target state="new">Effect objects are represented in XAudio2 by cross-platform audio processing objects (XAPO).</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>For more information about XAPO, see <bpt id="p1">[</bpt>XAPO Overviews<ept id="p1">](o:microsoft.directx_sdk.xapo.audio_overview_xapo)</ept>.</source>
          <target state="new">For more information about XAPO, see <bpt id="p1">[</bpt>XAPO Overviews<ept id="p1">](o:microsoft.directx_sdk.xapo.audio_overview_xapo)</ept>.</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>When you create an effect chain, follow these steps:</source>
          <target state="new">When you create an effect chain, follow these steps:</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Create the effect object.</source>
          <target state="new">Create the effect object.</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Populate an <bpt id="p1">[</bpt><bpt id="p2">**</bpt>XAUDIO2<ph id="ph1">\_</ph>EFFECT<ph id="ph2">\_</ph>DESCRIPTOR<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ee419236)</ept> structure with effect data.</source>
          <target state="new">Populate an <bpt id="p1">[</bpt><bpt id="p2">**</bpt>XAUDIO2<ph id="ph1">\_</ph>EFFECT<ph id="ph2">\_</ph>DESCRIPTOR<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ee419236)</ept> structure with effect data.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Populate an <bpt id="p1">[</bpt><bpt id="p2">**</bpt>XAUDIO2<ph id="ph1">\_</ph>EFFECT<ph id="ph2">\_</ph>CHAIN<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ee419235)</ept> structure with data.</source>
          <target state="new">Populate an <bpt id="p1">[</bpt><bpt id="p2">**</bpt>XAUDIO2<ph id="ph1">\_</ph>EFFECT<ph id="ph2">\_</ph>CHAIN<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ee419235)</ept> structure with data.</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Apply the effect chain to a voice.</source>
          <target state="new">Apply the effect chain to a voice.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Populate an effect parameter structure and apply it to the effect.</source>
          <target state="new">Populate an effect parameter structure and apply it to the effect.</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Disable or enable the effect whenever appropriate.</source>
          <target state="new">Disable or enable the effect whenever appropriate.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Audio<ept id="p1">**</ept> class defines the <bpt id="p2">**</bpt>CreateReverb<ept id="p2">**</ept> method to create the effect chain that implements reverb.</source>
          <target state="new">The <bpt id="p1">**</bpt>Audio<ept id="p1">**</ept> class defines the <bpt id="p2">**</bpt>CreateReverb<ept id="p2">**</ept> method to create the effect chain that implements reverb.</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>This method calls the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>XAudio2CreateReverb<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ee419213)</ept> function to create a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>IXAudio2SubmixVoice<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/desktop/ee415915)</ept> object, which acts as the submix voice for the reverb effect.</source>
          <target state="new">This method calls the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>XAudio2CreateReverb<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ee419213)</ept> function to create a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>IXAudio2SubmixVoice<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/desktop/ee415915)</ept> object, which acts as the submix voice for the reverb effect.</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>XAUDIO2<ph id="ph1">\_</ph>EFFECT<ph id="ph2">\_</ph>DESCRIPTOR<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ee419236)</ept> structure contains information about an XAPO for use in an effect chain, for example, the target number of output channels.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>XAUDIO2<ph id="ph1">\_</ph>EFFECT<ph id="ph2">\_</ph>DESCRIPTOR<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ee419236)</ept> structure contains information about an XAPO for use in an effect chain, for example, the target number of output channels.</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Audio::CreateReverb<ept id="p1">**</ept> method creates an <bpt id="p2">**</bpt>XAUDIO2<ph id="ph1">\_</ph>EFFECT<ph id="ph2">\_</ph>DESCRIPTOR<ept id="p2">**</ept> object that is set to the disabled state, uses two output channels, and references the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>IXAudio2SubmixVoice<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/desktop/ee415915)</ept> object for the reverb effect.</source>
          <target state="new">The <bpt id="p1">**</bpt>Audio::CreateReverb<ept id="p1">**</ept> method creates an <bpt id="p2">**</bpt>XAUDIO2<ph id="ph1">\_</ph>EFFECT<ph id="ph2">\_</ph>DESCRIPTOR<ept id="p2">**</ept> object that is set to the disabled state, uses two output channels, and references the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>IXAudio2SubmixVoice<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/desktop/ee415915)</ept> object for the reverb effect.</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>XAUDIO2<ph id="ph1">\_</ph>EFFECT<ph id="ph2">\_</ph>DESCRIPTOR<ept id="p1">**</ept> object starts in the disabled state because the game must set parameters before the effect starts modifying game sounds.</source>
          <target state="new">The <bpt id="p1">**</bpt>XAUDIO2<ph id="ph1">\_</ph>EFFECT<ph id="ph2">\_</ph>DESCRIPTOR<ept id="p1">**</ept> object starts in the disabled state because the game must set parameters before the effect starts modifying game sounds.</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Marble Maze uses two output channels to simplify the logic for the reverb effect.</source>
          <target state="new">Marble Maze uses two output channels to simplify the logic for the reverb effect.</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>If your effect chain has multiple effects, each effect requires an object.</source>
          <target state="new">If your effect chain has multiple effects, each effect requires an object.</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>XAUDIO2<ph id="ph1">\_</ph>EFFECT<ph id="ph2">\_</ph>CHAIN<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ee419235)</ept> structure holds the array of <bpt id="p3">[</bpt><bpt id="p4">**</bpt>XAUDIO2<ph id="ph3">\_</ph>EFFECT<ph id="ph4">\_</ph>DESCRIPTOR<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/desktop/ee419236)</ept> objects that participate in the effect.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>XAUDIO2<ph id="ph1">\_</ph>EFFECT<ph id="ph2">\_</ph>CHAIN<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ee419235)</ept> structure holds the array of <bpt id="p3">[</bpt><bpt id="p4">**</bpt>XAUDIO2<ph id="ph3">\_</ph>EFFECT<ph id="ph4">\_</ph>DESCRIPTOR<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/desktop/ee419236)</ept> objects that participate in the effect.</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The following example shows how the <bpt id="p1">**</bpt>Audio::CreateReverb<ept id="p1">**</ept> method specifies the one effect to implement reverb.</source>
          <target state="new">The following example shows how the <bpt id="p1">**</bpt>Audio::CreateReverb<ept id="p1">**</ept> method specifies the one effect to implement reverb.</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Audio::CreateReverb<ept id="p1">**</ept> method calls the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>IXAudio2::CreateSubmixVoice<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/desktop/ee418608)</ept> method to create the submix voice for the effect.</source>
          <target state="new">The <bpt id="p1">**</bpt>Audio::CreateReverb<ept id="p1">**</ept> method calls the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>IXAudio2::CreateSubmixVoice<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/desktop/ee418608)</ept> method to create the submix voice for the effect.</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>It specifies the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>XAUDIO2<ph id="ph1">\_</ph>EFFECT<ph id="ph2">\_</ph>CHAIN<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ee419235)</ept> object for the <bpt id="p3">*</bpt>pEffectChain<ept id="p3">*</ept> parameter to associate the effect chain with the voice.</source>
          <target state="new">It specifies the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>XAUDIO2<ph id="ph1">\_</ph>EFFECT<ph id="ph2">\_</ph>CHAIN<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ee419235)</ept> object for the <bpt id="p3">*</bpt>pEffectChain<ept id="p3">*</ept> parameter to associate the effect chain with the voice.</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Marble Maze also specifies two output channels and a sample rate of 48 kilohertz.</source>
          <target state="new">Marble Maze also specifies two output channels and a sample rate of 48 kilohertz.</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>We chose this sample rate because it represented a balance between audio quality and the amount of required CPU processing.</source>
          <target state="new">We chose this sample rate because it represented a balance between audio quality and the amount of required CPU processing.</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>A greater sample rate would have required more CPU processing without having a noticeable quality benefit.</source>
          <target state="new">A greater sample rate would have required more CPU processing without having a noticeable quality benefit.</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Tip<ept id="p1">**</ept>   If you want to attach an existing effect chain to an existing submix voice, or you want to replace the current effect chain, use the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>IXAudio2Voice::SetEffectChain<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/desktop/ee418594)</ept> method.</source>
          <target state="new"><bpt id="p1">**</bpt>Tip<ept id="p1">**</ept>   If you want to attach an existing effect chain to an existing submix voice, or you want to replace the current effect chain, use the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>IXAudio2Voice::SetEffectChain<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/desktop/ee418594)</ept> method.</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Audio::XAudio2CreateReverb<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ee419213)</ept> method calls <bpt id="p3">[</bpt><bpt id="p4">**</bpt>IXAudio2Voice::SetEffectParameters<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/desktop/ee418595)</ept> to set additional parameters that are associated with the effect.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Audio::XAudio2CreateReverb<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ee419213)</ept> method calls <bpt id="p3">[</bpt><bpt id="p4">**</bpt>IXAudio2Voice::SetEffectParameters<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/desktop/ee418595)</ept> to set additional parameters that are associated with the effect.</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>This method takes a parameter structure that is specific to the effect.</source>
          <target state="new">This method takes a parameter structure that is specific to the effect.</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">[</bpt><bpt id="p2">**</bpt>XAUDIO2FX<ph id="ph1">\_</ph>REVERB<ph id="ph2">\_</ph>PARAMETERS<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ee419224)</ept> object, which contains the effect parameters for reverb, is initialized in the <bpt id="p3">**</bpt>Audio::Initialize<ept id="p3">**</ept> method because every reverb effect shares the same parameters.</source>
          <target state="new">An <bpt id="p1">[</bpt><bpt id="p2">**</bpt>XAUDIO2FX<ph id="ph1">\_</ph>REVERB<ph id="ph2">\_</ph>PARAMETERS<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ee419224)</ept> object, which contains the effect parameters for reverb, is initialized in the <bpt id="p3">**</bpt>Audio::Initialize<ept id="p3">**</ept> method because every reverb effect shares the same parameters.</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The following example shows how the <bpt id="p1">**</bpt>Audio::Initialize<ept id="p1">**</ept> method initializes the reverb parameters for near-field reverb.</source>
          <target state="new">The following example shows how the <bpt id="p1">**</bpt>Audio::Initialize<ept id="p1">**</ept> method initializes the reverb parameters for near-field reverb.</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>This example uses the default values for most of the reverb parameters, but it sets <bpt id="p1">**</bpt>DisableLateField<ept id="p1">**</ept> to TRUE to specify near-field reverb, <bpt id="p2">**</bpt>EarlyDiffusion<ept id="p2">**</ept> to 4 to simulate flat near surfaces, and <bpt id="p3">**</bpt>LateDiffusion<ept id="p3">**</ept> to 15 to simulate very diffuse distant surfaces.</source>
          <target state="new">This example uses the default values for most of the reverb parameters, but it sets <bpt id="p1">**</bpt>DisableLateField<ept id="p1">**</ept> to TRUE to specify near-field reverb, <bpt id="p2">**</bpt>EarlyDiffusion<ept id="p2">**</ept> to 4 to simulate flat near surfaces, and <bpt id="p3">**</bpt>LateDiffusion<ept id="p3">**</ept> to 15 to simulate very diffuse distant surfaces.</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Flat near surfaces cause echoes to reach you more quickly and loudly; diffuse distant surfaces cause echoes to be quieter and reach you more slowly.</source>
          <target state="new">Flat near surfaces cause echoes to reach you more quickly and loudly; diffuse distant surfaces cause echoes to be quieter and reach you more slowly.</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>You can experiment with reverb values to get the desired effect in your game or use the <bpt id="p1">**</bpt>ReverbConvertI3DL2ToNative<ept id="p1">**</ept> function to use industry-standard I3DL2 (Interactive 3D Audio Rendering Guidelines Level 2.0) parameters.</source>
          <target state="new">You can experiment with reverb values to get the desired effect in your game or use the <bpt id="p1">**</bpt>ReverbConvertI3DL2ToNative<ept id="p1">**</ept> function to use industry-standard I3DL2 (Interactive 3D Audio Rendering Guidelines Level 2.0) parameters.</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The following example shows how <bpt id="p1">**</bpt>Audio::CreateReverb<ept id="p1">**</ept> sets the reverb parameters.</source>
          <target state="new">The following example shows how <bpt id="p1">**</bpt>Audio::CreateReverb<ept id="p1">**</ept> sets the reverb parameters.</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The parameters parameter is an <bpt id="p1">[</bpt><bpt id="p2">**</bpt>XAUDIO2FX<ph id="ph1">\_</ph>REVERB<ph id="ph2">\_</ph>PARAMETERS<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ee419224)</ept> object.</source>
          <target state="new">The parameters parameter is an <bpt id="p1">[</bpt><bpt id="p2">**</bpt>XAUDIO2FX<ph id="ph1">\_</ph>REVERB<ph id="ph2">\_</ph>PARAMETERS<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ee419224)</ept> object.</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Audio::CreateReverb<ept id="p1">**</ept> method finishes by enabling the effect if the <bpt id="p2">**</bpt>enableEffect<ept id="p2">**</ept> flag is set and by setting its volume and output matrix.</source>
          <target state="new">The <bpt id="p1">**</bpt>Audio::CreateReverb<ept id="p1">**</ept> method finishes by enabling the effect if the <bpt id="p2">**</bpt>enableEffect<ept id="p2">**</ept> flag is set and by setting its volume and output matrix.</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>This part sets the volume to full (1.0) and then specifies the volume matrix to be silence for both left and right inputs and left and right output speakers.</source>
          <target state="new">This part sets the volume to full (1.0) and then specifies the volume matrix to be silence for both left and right inputs and left and right output speakers.</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>We do this because other code later cross-fades between the two reverbs (simulating the transition from being near a wall to being in a large room), or mutes both reverbs if required.</source>
          <target state="new">We do this because other code later cross-fades between the two reverbs (simulating the transition from being near a wall to being in a large room), or mutes both reverbs if required.</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>When the reverb path is later unmuted, the game sets a matrix of {1.0f, 0.0f, 0.0f, 1.0f} to route left reverb output to the left input of the mastering voice and right reverb output to the right input of the mastering voice.</source>
          <target state="new">When the reverb path is later unmuted, the game sets a matrix of {1.0f, 0.0f, 0.0f, 1.0f} to route left reverb output to the left input of the mastering voice and right reverb output to the right input of the mastering voice.</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Marble Maze calls the <bpt id="p1">**</bpt>CreateReverb<ept id="p1">**</ept> method four times; two times for the background music and two times for the game-play sounds.</source>
          <target state="new">Marble Maze calls the <bpt id="p1">**</bpt>CreateReverb<ept id="p1">**</ept> method four times; two times for the background music and two times for the game-play sounds.</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The following shows how Marble Maze calls the <bpt id="p1">**</bpt>CreateReverb<ept id="p1">**</ept> method for the background music.</source>
          <target state="new">The following shows how Marble Maze calls the <bpt id="p1">**</bpt>CreateReverb<ept id="p1">**</ept> method for the background music.</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>For a list of possible sources of effects for use with XAudio2, see <bpt id="p1">[</bpt>XAudio2 Audio Effects<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ee415756)</ept>.</source>
          <target state="new">For a list of possible sources of effects for use with XAudio2, see <bpt id="p1">[</bpt>XAudio2 Audio Effects<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ee415756)</ept>.</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Loading audio data from file</source>
          <target state="new">Loading audio data from file</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Marble Maze defines the <bpt id="p1">**</bpt>MediaStreamer<ept id="p1">**</ept> class, which uses Media Foundation to load audio resources from file.</source>
          <target state="new">Marble Maze defines the <bpt id="p1">**</bpt>MediaStreamer<ept id="p1">**</ept> class, which uses Media Foundation to load audio resources from file.</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Marble Maze uses one <bpt id="p1">**</bpt>MediaStreamer<ept id="p1">**</ept> object to load each audio file.</source>
          <target state="new">Marble Maze uses one <bpt id="p1">**</bpt>MediaStreamer<ept id="p1">**</ept> object to load each audio file.</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Marble Maze calls the <bpt id="p1">**</bpt>MediaStreamer::Initialize<ept id="p1">**</ept> method to initialize each audio stream.</source>
          <target state="new">Marble Maze calls the <bpt id="p1">**</bpt>MediaStreamer::Initialize<ept id="p1">**</ept> method to initialize each audio stream.</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Here's how the <bpt id="p1">**</bpt>Audio::CreateResources<ept id="p1">**</ept> method calls <bpt id="p2">**</bpt>MediaStreamer::Initialize<ept id="p2">**</ept> to initialize the audio stream for the background music:</source>
          <target state="new">Here's how the <bpt id="p1">**</bpt>Audio::CreateResources<ept id="p1">**</ept> method calls <bpt id="p2">**</bpt>MediaStreamer::Initialize<ept id="p2">**</ept> to initialize the audio stream for the background music:</target>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>MediaStreamer::Initialize<ept id="p1">**</ept> method starts by calling the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>MFStartup<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/desktop/ms702238)</ept> function to initialize Media Foundation.</source>
          <target state="new">The <bpt id="p1">**</bpt>MediaStreamer::Initialize<ept id="p1">**</ept> method starts by calling the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>MFStartup<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/desktop/ms702238)</ept> function to initialize Media Foundation.</target>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>MediaStreamer::Initialize<ept id="p1">**</ept> then calls <bpt id="p2">[</bpt><bpt id="p3">**</bpt>MFCreateSourceReaderFromURL<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/desktop/dd388110)</ept> to create an <bpt id="p4">[</bpt><bpt id="p5">**</bpt>IMFSourceReader<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/desktop/dd374655)</ept> object.</source>
          <target state="new"><bpt id="p1">**</bpt>MediaStreamer::Initialize<ept id="p1">**</ept> then calls <bpt id="p2">[</bpt><bpt id="p3">**</bpt>MFCreateSourceReaderFromURL<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/desktop/dd388110)</ept> to create an <bpt id="p4">[</bpt><bpt id="p5">**</bpt>IMFSourceReader<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/desktop/dd374655)</ept> object.</target>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">**</bpt>IMFSourceReader<ept id="p1">**</ept> object reads media data from the file that is specified by url.</source>
          <target state="new">An <bpt id="p1">**</bpt>IMFSourceReader<ept id="p1">**</ept> object reads media data from the file that is specified by url.</target>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>MediaStreamer::Initialize<ept id="p1">**</ept> method then creates an <bpt id="p2">[</bpt><bpt id="p3">**</bpt>IMFMediaType<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/desktop/ms704850)</ept> object to describe the format of the audio stream.</source>
          <target state="new">The <bpt id="p1">**</bpt>MediaStreamer::Initialize<ept id="p1">**</ept> method then creates an <bpt id="p2">[</bpt><bpt id="p3">**</bpt>IMFMediaType<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/desktop/ms704850)</ept> object to describe the format of the audio stream.</target>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>An audio format has two types: a major type and a subtype.</source>
          <target state="new">An audio format has two types: a major type and a subtype.</target>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The major type defines the overall format of the media, such as video, audio, script, and so on.</source>
          <target state="new">The major type defines the overall format of the media, such as video, audio, script, and so on.</target>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>The subtype defines the format, such as PCM, ADPCM, or WMA.</source>
          <target state="new">The subtype defines the format, such as PCM, ADPCM, or WMA.</target>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>MediaStreamer::Initialize<ept id="p1">**</ept> method uses the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>IMFMediaType::SetGUID<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/desktop/bb970530)</ept> method to specify the major type as audio (<bpt id="p4">**</bpt>MFMediaType<ph id="ph1">\_</ph>Audio<ept id="p4">**</ept>) and the minor type as uncompressed PCM audio (<bpt id="p5">**</bpt>MFAudioFormat<ph id="ph2">\_</ph>PCM<ept id="p5">**</ept>).</source>
          <target state="new">The <bpt id="p1">**</bpt>MediaStreamer::Initialize<ept id="p1">**</ept> method uses the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>IMFMediaType::SetGUID<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/desktop/bb970530)</ept> method to specify the major type as audio (<bpt id="p4">**</bpt>MFMediaType<ph id="ph1">\_</ph>Audio<ept id="p4">**</ept>) and the minor type as uncompressed PCM audio (<bpt id="p5">**</bpt>MFAudioFormat<ph id="ph2">\_</ph>PCM<ept id="p5">**</ept>).</target>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IMFSourceReader::SetCurrentMediaType<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/bb970432)</ept> method associates the media type with the stream reader.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IMFSourceReader::SetCurrentMediaType<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/bb970432)</ept> method associates the media type with the stream reader.</target>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>MediaStreamer::Initialize<ept id="p1">**</ept> method then obtains the complete output media format from Media Foundation and calls the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>MFCreateWaveFormatExFromMFMediaType<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/desktop/ms702177)</ept> function to convert the Media Foundation audio media type to a <bpt id="p4">[</bpt><bpt id="p5">**</bpt>WAVEFORMATEX<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/hardware/ff538799)</ept> structure.</source>
          <target state="new">The <bpt id="p1">**</bpt>MediaStreamer::Initialize<ept id="p1">**</ept> method then obtains the complete output media format from Media Foundation and calls the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>MFCreateWaveFormatExFromMFMediaType<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/desktop/ms702177)</ept> function to convert the Media Foundation audio media type to a <bpt id="p4">[</bpt><bpt id="p5">**</bpt>WAVEFORMATEX<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/hardware/ff538799)</ept> structure.</target>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>WAVEFORMATEX<ept id="p1">**</ept> structure defines the format of waveform-audio data.</source>
          <target state="new">The <bpt id="p1">**</bpt>WAVEFORMATEX<ept id="p1">**</ept> structure defines the format of waveform-audio data.</target>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Marble Maze uses this structure to create the source voices and to apply the low-pass filter to the marble rolling sound.</source>
          <target state="new">Marble Maze uses this structure to create the source voices and to apply the low-pass filter to the marble rolling sound.</target>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Important<ept id="p1">**</ept>   The <bpt id="p2">[</bpt><bpt id="p3">**</bpt>MFCreateWaveFormatExFromMFMediaType<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/desktop/ms702177)</ept> function uses <bpt id="p4">**</bpt>CoTaskMemAlloc<ept id="p4">**</ept> to allocate the <bpt id="p5">[</bpt><bpt id="p6">**</bpt>WAVEFORMATEX<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/hardware/ff538799)</ept> object.</source>
          <target state="new"><bpt id="p1">**</bpt>Important<ept id="p1">**</ept>   The <bpt id="p2">[</bpt><bpt id="p3">**</bpt>MFCreateWaveFormatExFromMFMediaType<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/desktop/ms702177)</ept> function uses <bpt id="p4">**</bpt>CoTaskMemAlloc<ept id="p4">**</ept> to allocate the <bpt id="p5">[</bpt><bpt id="p6">**</bpt>WAVEFORMATEX<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/hardware/ff538799)</ept> object.</target>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Therefore, make sure that you call <bpt id="p1">**</bpt>CoTaskMemFree<ept id="p1">**</ept> when you are finished using this object.</source>
          <target state="new">Therefore, make sure that you call <bpt id="p1">**</bpt>CoTaskMemFree<ept id="p1">**</ept> when you are finished using this object.</target>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>MediaStreamer::Initialize<ept id="p1">**</ept> method finishes by computing the length of the stream, m<ph id="ph1">\_</ph><bpt id="p2">*</bpt>maxStreamLengthInBytes<ept id="p2">*</ept>, in bytes.</source>
          <target state="new">The <bpt id="p1">**</bpt>MediaStreamer::Initialize<ept id="p1">**</ept> method finishes by computing the length of the stream, m<ph id="ph1">\_</ph><bpt id="p2">*</bpt>maxStreamLengthInBytes<ept id="p2">*</ept>, in bytes.</target>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>To do so, it calls the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IMFSourceReader::IMFSourceReader::GetPresentationAttribute<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/dd374662)</ept> method to get the duration of the audio stream in 100-nanosecond units, converts the duration to sections, and then multiplies by the average data transfer rate in bytes per second.</source>
          <target state="new">To do so, it calls the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IMFSourceReader::IMFSourceReader::GetPresentationAttribute<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/dd374662)</ept> method to get the duration of the audio stream in 100-nanosecond units, converts the duration to sections, and then multiplies by the average data transfer rate in bytes per second.</target>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Marble Maze later uses this value to allocate the buffer that holds each game play sound.</source>
          <target state="new">Marble Maze later uses this value to allocate the buffer that holds each game play sound.</target>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Creating the source voices</source>
          <target state="new">Creating the source voices</target>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Marble Maze creates XAudio2 source voices to play each of its game sounds and music in source voices.</source>
          <target state="new">Marble Maze creates XAudio2 source voices to play each of its game sounds and music in source voices.</target>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Audio<ept id="p1">**</ept> class defines an <bpt id="p2">[</bpt><bpt id="p3">**</bpt>IXAudio2SourceVoice<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/desktop/ee415914)</ept> object for the background music and an array of <bpt id="p4">**</bpt>SoundEffectData<ept id="p4">**</ept> objects to hold the game play sounds.</source>
          <target state="new">The <bpt id="p1">**</bpt>Audio<ept id="p1">**</ept> class defines an <bpt id="p2">[</bpt><bpt id="p3">**</bpt>IXAudio2SourceVoice<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/desktop/ee415914)</ept> object for the background music and an array of <bpt id="p4">**</bpt>SoundEffectData<ept id="p4">**</ept> objects to hold the game play sounds.</target>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>SoundEffectData<ept id="p1">**</ept> structure holds the <bpt id="p2">**</bpt>IXAudio2SourceVoice<ept id="p2">**</ept> object for an effect and also defines other effect-related data, such as the audio buffer.</source>
          <target state="new">The <bpt id="p1">**</bpt>SoundEffectData<ept id="p1">**</ept> structure holds the <bpt id="p2">**</bpt>IXAudio2SourceVoice<ept id="p2">**</ept> object for an effect and also defines other effect-related data, such as the audio buffer.</target>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Audio.h defines the <bpt id="p1">**</bpt>SoundEvent<ept id="p1">**</ept> enumeration.</source>
          <target state="new">Audio.h defines the <bpt id="p1">**</bpt>SoundEvent<ept id="p1">**</ept> enumeration.</target>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Marble Maze uses this enumeration to identify each game play sound.</source>
          <target state="new">Marble Maze uses this enumeration to identify each game play sound.</target>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>The Audio class also uses this enumeration to index the array of <bpt id="p1">**</bpt>SoundEffectData<ept id="p1">**</ept> objects.</source>
          <target state="new">The Audio class also uses this enumeration to index the array of <bpt id="p1">**</bpt>SoundEffectData<ept id="p1">**</ept> objects.</target>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The following table shows the relationship between each of these values, the file that contains the associated sound data, and a brief description of what each sound represents.</source>
          <target state="new">The following table shows the relationship between each of these values, the file that contains the associated sound data, and a brief description of what each sound represents.</target>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The audio files are located in the <ph id="ph1">\\</ph>Media<ph id="ph2">\\</ph>Audio folder.</source>
          <target state="new">The audio files are located in the <ph id="ph1">\\</ph>Media<ph id="ph2">\\</ph>Audio folder.</target>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>SoundEvent value</source>
          <target state="new">SoundEvent value</target>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>File name</source>
          <target state="new">File name</target>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="new">Description</target>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>RollingEvent</source>
          <target state="new">RollingEvent</target>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>MarbleRoll.wav</source>
          <target state="new">MarbleRoll.wav</target>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Played as the marble rolls.</source>
          <target state="new">Played as the marble rolls.</target>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>FallingEvent</source>
          <target state="new">FallingEvent</target>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>MarbleFall.wav</source>
          <target state="new">MarbleFall.wav</target>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Played when the marble falls off the maze.</source>
          <target state="new">Played when the marble falls off the maze.</target>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>CollisionEvent</source>
          <target state="new">CollisionEvent</target>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>MarbleHit.wav</source>
          <target state="new">MarbleHit.wav</target>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Played when the marble collides with the maze.</source>
          <target state="new">Played when the marble collides with the maze.</target>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>CheckpointEvent</source>
          <target state="new">CheckpointEvent</target>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Checkpoint.wav</source>
          <target state="new">Checkpoint.wav</target>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Played when the marble passes over a checkpoint.</source>
          <target state="new">Played when the marble passes over a checkpoint.</target>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>MenuChangeEvent</source>
          <target state="new">MenuChangeEvent</target>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>MenuChange.wav</source>
          <target state="new">MenuChange.wav</target>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>Played when the game user changes the current menu item.</source>
          <target state="new">Played when the game user changes the current menu item.</target>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>MenuSelectedEvent</source>
          <target state="new">MenuSelectedEvent</target>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>MenuSelect.wav</source>
          <target state="new">MenuSelect.wav</target>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Played when the game user selects a menu item.</source>
          <target state="new">Played when the game user selects a menu item.</target>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>The following example shows how the <bpt id="p1">**</bpt>Audio::CreateResources<ept id="p1">**</ept> method creates the source voice for the background music.</source>
          <target state="new">The following example shows how the <bpt id="p1">**</bpt>Audio::CreateResources<ept id="p1">**</ept> method creates the source voice for the background music.</target>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IXAudio2::CreateSourceVoice<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ee418607)</ept> method creates and configures a source voice.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IXAudio2::CreateSourceVoice<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ee418607)</ept> method creates and configures a source voice.</target>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>It takes a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>WAVEFORMATEX<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/hardware/ff538799)</ept> structure that defines the format of the audio buffers that are sent to the voice.</source>
          <target state="new">It takes a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>WAVEFORMATEX<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/hardware/ff538799)</ept> structure that defines the format of the audio buffers that are sent to the voice.</target>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>As mentioned previously, Marble Maze uses the PCM format.</source>
          <target state="new">As mentioned previously, Marble Maze uses the PCM format.</target>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>XAUDIO2<ph id="ph1">\_</ph>SEND<ph id="ph2">\_</ph>DESCRIPTOR<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ee419244)</ept> structure defines the target destination voice from another voice and specifies whether a filter should be used.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>XAUDIO2<ph id="ph1">\_</ph>SEND<ph id="ph2">\_</ph>DESCRIPTOR<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ee419244)</ept> structure defines the target destination voice from another voice and specifies whether a filter should be used.</target>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Marble Maze calls the <bpt id="p1">**</bpt>Audio::SetSoundEffectFilter<ept id="p1">**</ept> function to use the filters to change the sound of the ball as it rolls.</source>
          <target state="new">Marble Maze calls the <bpt id="p1">**</bpt>Audio::SetSoundEffectFilter<ept id="p1">**</ept> function to use the filters to change the sound of the ball as it rolls.</target>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>XAUDIO2<ph id="ph1">\_</ph>VOICE<ph id="ph2">\_</ph>SENDS<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ee419246)</ept> structure defines the set of voices to receive data from a single output voice.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>XAUDIO2<ph id="ph1">\_</ph>VOICE<ph id="ph2">\_</ph>SENDS<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ee419246)</ept> structure defines the set of voices to receive data from a single output voice.</target>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Marble Maze sends data from the source voice to the mastering voice (for the dry, or unaltered, portion of a playing sound) and to the two submix voices that implement the wet, or reverberant, portion of a playing sound.</source>
          <target state="new">Marble Maze sends data from the source voice to the mastering voice (for the dry, or unaltered, portion of a playing sound) and to the two submix voices that implement the wet, or reverberant, portion of a playing sound.</target>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Playing background music</source>
          <target state="new">Playing background music</target>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>A source voice is created in the stopped state.</source>
          <target state="new">A source voice is created in the stopped state.</target>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Marble Maze starts the background music in the game loop.</source>
          <target state="new">Marble Maze starts the background music in the game loop.</target>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The first call to <bpt id="p1">**</bpt>MarbleMaze::Update<ept id="p1">**</ept> calls <bpt id="p2">**</bpt>Audio::Start<ept id="p2">**</ept> to start the background music.</source>
          <target state="new">The first call to <bpt id="p1">**</bpt>MarbleMaze::Update<ept id="p1">**</ept> calls <bpt id="p2">**</bpt>Audio::Start<ept id="p2">**</ept> to start the background music.</target>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Audio::Start<ept id="p1">**</ept> method calls <bpt id="p2">[</bpt><bpt id="p3">**</bpt>IXAudio2SourceVoice::Start<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/desktop/ee418471)</ept> to start to process the source voice for the background music.</source>
          <target state="new">The <bpt id="p1">**</bpt>Audio::Start<ept id="p1">**</ept> method calls <bpt id="p2">[</bpt><bpt id="p3">**</bpt>IXAudio2SourceVoice::Start<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/desktop/ee418471)</ept> to start to process the source voice for the background music.</target>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>The source voice passes that audio data to the next stage of the audio graph.</source>
          <target state="new">The source voice passes that audio data to the next stage of the audio graph.</target>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>In the case of Marble Maze, the next stage contains two submix voices that apply the two reverb effects to the audio.</source>
          <target state="new">In the case of Marble Maze, the next stage contains two submix voices that apply the two reverb effects to the audio.</target>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>One submix voice applies a close late-field reverb; the second applies a far late-field reverb.</source>
          <target state="new">One submix voice applies a close late-field reverb; the second applies a far late-field reverb.</target>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>The amount that each submix voice contributes to the final mix is determined by the size and shape of the room.</source>
          <target state="new">The amount that each submix voice contributes to the final mix is determined by the size and shape of the room.</target>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>The near-field reverb contributes more when the ball is near a wall or in a small room, and the late-field reverb contributes more when the ball is in a large space.</source>
          <target state="new">The near-field reverb contributes more when the ball is near a wall or in a small room, and the late-field reverb contributes more when the ball is in a large space.</target>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>This technique produces a more realistic echo effect as the marble moves through the maze.</source>
          <target state="new">This technique produces a more realistic echo effect as the marble moves through the maze.</target>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>To learn more about how Marble Maze implements this effect, see <bpt id="p1">**</bpt>Audio::SetRoomSize<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Physics::CalculateCurrentRoomSize<ept id="p2">**</ept> in the Marble Maze source code.</source>
          <target state="new">To learn more about how Marble Maze implements this effect, see <bpt id="p1">**</bpt>Audio::SetRoomSize<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Physics::CalculateCurrentRoomSize<ept id="p2">**</ept> in the Marble Maze source code.</target>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  In a game in which most room sizes are relatively the same, you can use a more basic reverb model.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  In a game in which most room sizes are relatively the same, you can use a more basic reverb model.</target>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>For example, you can use one reverb setting for all rooms or you can create a predefined reverb setting for each room.</source>
          <target state="new">For example, you can use one reverb setting for all rooms or you can create a predefined reverb setting for each room.</target>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Audio::CreateResources<ept id="p1">**</ept> method uses Media Foundation to load the background music.</source>
          <target state="new">The <bpt id="p1">**</bpt>Audio::CreateResources<ept id="p1">**</ept> method uses Media Foundation to load the background music.</target>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>At this point, however, the source voice does not have audio data to work with.</source>
          <target state="new">At this point, however, the source voice does not have audio data to work with.</target>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>In addition, because the background music loops, the source voice must be regularly updated with data so that the music continues to play.</source>
          <target state="new">In addition, because the background music loops, the source voice must be regularly updated with data so that the music continues to play.</target>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>To keep the source voice filled with data, the game loop updates the audio buffers every frame.</source>
          <target state="new">To keep the source voice filled with data, the game loop updates the audio buffers every frame.</target>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>MarbleMaze::Render<ept id="p1">**</ept> method calls <bpt id="p2">**</bpt>Audio::Render<ept id="p2">**</ept> to process the background music audio buffer.</source>
          <target state="new">The <bpt id="p1">**</bpt>MarbleMaze::Render<ept id="p1">**</ept> method calls <bpt id="p2">**</bpt>Audio::Render<ept id="p2">**</ept> to process the background music audio buffer.</target>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Audio::Render<ept id="p1">**</ept> defines an array of three audio buffers, <bpt id="p2">**</bpt>m<ph id="ph1">\_</ph>audioBuffers<ept id="p2">**</ept>.</source>
          <target state="new">The <bpt id="p1">**</bpt>Audio::Render<ept id="p1">**</ept> defines an array of three audio buffers, <bpt id="p2">**</bpt>m<ph id="ph1">\_</ph>audioBuffers<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Each buffer holds 64 KB (65536 bytes) of data.</source>
          <target state="new">Each buffer holds 64 KB (65536 bytes) of data.</target>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>The loop reads data from the Media Foundation object and writes that data to the source voice until the source voice has three queued buffers.</source>
          <target state="new">The loop reads data from the Media Foundation object and writes that data to the source voice until the source voice has three queued buffers.</target>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Caution<ept id="p1">**</ept>  Although Marble Maze uses a 64 KB buffer to hold music data, you may need to use a larger or smaller buffer.</source>
          <target state="new"><bpt id="p1">**</bpt>Caution<ept id="p1">**</ept>  Although Marble Maze uses a 64 KB buffer to hold music data, you may need to use a larger or smaller buffer.</target>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>This amount depends on the requirements of your game.</source>
          <target state="new">This amount depends on the requirements of your game.</target>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>The loop also handles when the Media Foundation object reaches the end of the stream.</source>
          <target state="new">The loop also handles when the Media Foundation object reaches the end of the stream.</target>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>In this case, it calls the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MediaStreamer::OnClockRestart<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ms697215)</ept> method to reset the position of the audio source.</source>
          <target state="new">In this case, it calls the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MediaStreamer::OnClockRestart<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ms697215)</ept> method to reset the position of the audio source.</target>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>To implement audio looping for a single buffer (or for an entire sound that is fully loaded into memory), you can set the <bpt id="p1">**</bpt>LoopCount<ept id="p1">**</ept> field to <bpt id="p2">**</bpt>XAUDIO2<ph id="ph1">\_</ph>LOOP<ph id="ph2">\_</ph>INFINITE<ept id="p2">**</ept> when you initialize the sound.</source>
          <target state="new">To implement audio looping for a single buffer (or for an entire sound that is fully loaded into memory), you can set the <bpt id="p1">**</bpt>LoopCount<ept id="p1">**</ept> field to <bpt id="p2">**</bpt>XAUDIO2<ph id="ph1">\_</ph>LOOP<ph id="ph2">\_</ph>INFINITE<ept id="p2">**</ept> when you initialize the sound.</target>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>Marble Maze uses this technique to play the rolling sound for the marble.</source>
          <target state="new">Marble Maze uses this technique to play the rolling sound for the marble.</target>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>However, for the background music, Marble Maze manages the buffers directly so that it can better control the amount of memory that is used.</source>
          <target state="new">However, for the background music, Marble Maze manages the buffers directly so that it can better control the amount of memory that is used.</target>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>When your music files are large, you can stream the music data into smaller buffers.</source>
          <target state="new">When your music files are large, you can stream the music data into smaller buffers.</target>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Doing so can help balance memory size with the frequency of the game’s ability to process and stream audio data.</source>
          <target state="new">Doing so can help balance memory size with the frequency of the game’s ability to process and stream audio data.</target>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Tip<ept id="p1">**</ept>  If your game has a low or varying frame rate, processing audio on the main thread can produce unexpected pauses or pops in the audio because the audio engine has insufficient buffered audio data to work with.</source>
          <target state="new"><bpt id="p1">**</bpt>Tip<ept id="p1">**</ept>  If your game has a low or varying frame rate, processing audio on the main thread can produce unexpected pauses or pops in the audio because the audio engine has insufficient buffered audio data to work with.</target>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>If your game is sensitive to this issue, consider processing audio on a separate thread that does not perform rendering.</source>
          <target state="new">If your game is sensitive to this issue, consider processing audio on a separate thread that does not perform rendering.</target>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>This approach is especially useful on computers that have multiple processors because your game can use idle processors.</source>
          <target state="new">This approach is especially useful on computers that have multiple processors because your game can use idle processors.</target>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>Reacting to game events</source>
          <target state="new">Reacting to game events</target>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>MarbleMaze<ept id="p1">**</ept> class provides methods such as <bpt id="p2">**</bpt>PlaySoundEffect<ept id="p2">**</ept>, <bpt id="p3">**</bpt>IsSoundEffectStarted<ept id="p3">**</ept>, <bpt id="p4">**</bpt>StopSoundEffect<ept id="p4">**</ept>, <bpt id="p5">**</bpt>SetSoundEffectVolume<ept id="p5">**</ept>, <bpt id="p6">**</bpt>SetSoundEffectPitch<ept id="p6">**</ept>, and <bpt id="p7">**</bpt>SetSoundEffectFilter<ept id="p7">**</ept> to enable the game to control when sounds play and stop, and to control sound properties such as volume and pitch.</source>
          <target state="new">The <bpt id="p1">**</bpt>MarbleMaze<ept id="p1">**</ept> class provides methods such as <bpt id="p2">**</bpt>PlaySoundEffect<ept id="p2">**</ept>, <bpt id="p3">**</bpt>IsSoundEffectStarted<ept id="p3">**</ept>, <bpt id="p4">**</bpt>StopSoundEffect<ept id="p4">**</ept>, <bpt id="p5">**</bpt>SetSoundEffectVolume<ept id="p5">**</ept>, <bpt id="p6">**</bpt>SetSoundEffectPitch<ept id="p6">**</ept>, and <bpt id="p7">**</bpt>SetSoundEffectFilter<ept id="p7">**</ept> to enable the game to control when sounds play and stop, and to control sound properties such as volume and pitch.</target>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>For example, if the marble falls off the maze, <bpt id="p1">**</bpt>MarbleMaze::Update<ept id="p1">**</ept> method calls the <bpt id="p2">**</bpt>Audio::PlaySoundEffect<ept id="p2">**</ept> method to play the <bpt id="p3">**</bpt>FallingEvent<ept id="p3">**</ept> sound.</source>
          <target state="new">For example, if the marble falls off the maze, <bpt id="p1">**</bpt>MarbleMaze::Update<ept id="p1">**</ept> method calls the <bpt id="p2">**</bpt>Audio::PlaySoundEffect<ept id="p2">**</ept> method to play the <bpt id="p3">**</bpt>FallingEvent<ept id="p3">**</ept> sound.</target>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Audio::PlaySoundEffect<ept id="p1">**</ept> method calls the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>IXAudio2SourceVoice::Start<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/desktop/ee418471)</ept> method to begin playback of the sound.</source>
          <target state="new">The <bpt id="p1">**</bpt>Audio::PlaySoundEffect<ept id="p1">**</ept> method calls the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>IXAudio2SourceVoice::Start<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/desktop/ee418471)</ept> method to begin playback of the sound.</target>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>If the <bpt id="p1">**</bpt>IXAudio2SourceVoice::Start<ept id="p1">**</ept> method has already been called, it is not started again.</source>
          <target state="new">If the <bpt id="p1">**</bpt>IXAudio2SourceVoice::Start<ept id="p1">**</ept> method has already been called, it is not started again.</target>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Audio::PlaySoundEffect<ept id="p1">**</ept> then performs custom logic for certain sounds.</source>
          <target state="new"><bpt id="p1">**</bpt>Audio::PlaySoundEffect<ept id="p1">**</ept> then performs custom logic for certain sounds.</target>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>For sounds other than rolling, the <bpt id="p1">**</bpt>Audio::PlaySoundEffect<ept id="p1">**</ept> method calls <bpt id="p2">[</bpt><bpt id="p3">**</bpt>IXAudio2SourceVoice::GetState<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/desktop/hh405047)</ept> to determine the number of buffers that the source voice is playing.</source>
          <target state="new">For sounds other than rolling, the <bpt id="p1">**</bpt>Audio::PlaySoundEffect<ept id="p1">**</ept> method calls <bpt id="p2">[</bpt><bpt id="p3">**</bpt>IXAudio2SourceVoice::GetState<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/desktop/hh405047)</ept> to determine the number of buffers that the source voice is playing.</target>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>It calls <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IXAudio2SourceVoice::SubmitSourceBuffer<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ee418473)</ept> to add the audio data for the sound to the voice’s input queue if no buffers are active.</source>
          <target state="new">It calls <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IXAudio2SourceVoice::SubmitSourceBuffer<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ee418473)</ept> to add the audio data for the sound to the voice’s input queue if no buffers are active.</target>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Audio::PlaySoundEffect<ept id="p1">**</ept> method also enables the collision sound to be played two times in sequence.</source>
          <target state="new">The <bpt id="p1">**</bpt>Audio::PlaySoundEffect<ept id="p1">**</ept> method also enables the collision sound to be played two times in sequence.</target>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>This occurs, for example, when the marble collides with a corner of the maze.</source>
          <target state="new">This occurs, for example, when the marble collides with a corner of the maze.</target>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>As already described, the Audio class uses the <bpt id="p1">**</bpt>XAUDIO2<ph id="ph1">\_</ph>LOOP<ph id="ph2">\_</ph>INFINITE<ept id="p1">**</ept> flag when it initializes the sound for the rolling event.</source>
          <target state="new">As already described, the Audio class uses the <bpt id="p1">**</bpt>XAUDIO2<ph id="ph1">\_</ph>LOOP<ph id="ph2">\_</ph>INFINITE<ept id="p1">**</ept> flag when it initializes the sound for the rolling event.</target>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>The sound starts looped playback the first time that <bpt id="p1">**</bpt>Audio::PlaySoundEffect<ept id="p1">**</ept> is called for this event.</source>
          <target state="new">The sound starts looped playback the first time that <bpt id="p1">**</bpt>Audio::PlaySoundEffect<ept id="p1">**</ept> is called for this event.</target>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>To simplify the playback logic for the rolling sound, Marble Maze mutes the sound instead of stopping it.</source>
          <target state="new">To simplify the playback logic for the rolling sound, Marble Maze mutes the sound instead of stopping it.</target>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>As the marble changes velocity, Marble Maze changes the pitch and volume of the sound to give it a more realistic effect.</source>
          <target state="new">As the marble changes velocity, Marble Maze changes the pitch and volume of the sound to give it a more realistic effect.</target>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>The following shows how the <bpt id="p1">**</bpt>MarbleMaze::Update<ept id="p1">**</ept> method updates the pitch and volume of the marble as its velocity changes and how it mutes the sound by setting its volume to zero when the marble stops.</source>
          <target state="new">The following shows how the <bpt id="p1">**</bpt>MarbleMaze::Update<ept id="p1">**</ept> method updates the pitch and volume of the marble as its velocity changes and how it mutes the sound by setting its volume to zero when the marble stops.</target>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>Reacting to suspend and resume events</source>
          <target state="new">Reacting to suspend and resume events</target>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>The document Marble Maze application structure describes how Marble Maze supports suspend and resume.</source>
          <target state="new">The document Marble Maze application structure describes how Marble Maze supports suspend and resume.</target>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>When the game is suspended, the game pauses the audio.</source>
          <target state="new">When the game is suspended, the game pauses the audio.</target>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>When the game resumes, the game resumes the audio where it left off.</source>
          <target state="new">When the game resumes, the game resumes the audio where it left off.</target>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>We do so to follow the best practice of not using resources when you know they’re not needed.</source>
          <target state="new">We do so to follow the best practice of not using resources when you know they’re not needed.</target>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Audio::SuspendAudio<ept id="p1">**</ept> method is called when the game is suspended.</source>
          <target state="new">The <bpt id="p1">**</bpt>Audio::SuspendAudio<ept id="p1">**</ept> method is called when the game is suspended.</target>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>This method calls the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IXAudio2::StopEngine<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ee418628)</ept> method to stop all audio.</source>
          <target state="new">This method calls the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IXAudio2::StopEngine<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ee418628)</ept> method to stop all audio.</target>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>Although <bpt id="p1">**</bpt>IXAudio2::StopEngine<ept id="p1">**</ept> stops all audio output immediately, it preserves the audio graph and its effect parameters (for example, the reverb effect that’s applied when the marble bounces).</source>
          <target state="new">Although <bpt id="p1">**</bpt>IXAudio2::StopEngine<ept id="p1">**</ept> stops all audio output immediately, it preserves the audio graph and its effect parameters (for example, the reverb effect that’s applied when the marble bounces).</target>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Audio::ResumeAudio<ept id="p1">**</ept> method is called when the game is resumed.</source>
          <target state="new">The <bpt id="p1">**</bpt>Audio::ResumeAudio<ept id="p1">**</ept> method is called when the game is resumed.</target>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>This method uses the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IXAudio2::StartEngine<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ee418626)</ept> method to restart the audio.</source>
          <target state="new">This method uses the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IXAudio2::StartEngine<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ee418626)</ept> method to restart the audio.</target>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>Because the call to <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IXAudio2::StopEngine<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ee418628)</ept> preserves the audio graph and its effect parameters, the audio output resumes where it left off.</source>
          <target state="new">Because the call to <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IXAudio2::StopEngine<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ee418628)</ept> preserves the audio graph and its effect parameters, the audio output resumes where it left off.</target>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>Handling headphones and device changes</source>
          <target state="new">Handling headphones and device changes</target>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>Marble maze uses engine callbacks to handle XAudio2 engine failures, such as when the audio device changes.</source>
          <target state="new">Marble maze uses engine callbacks to handle XAudio2 engine failures, such as when the audio device changes.</target>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>A likely cause of a device change is when the game user connects or disconnects the headphones.</source>
          <target state="new">A likely cause of a device change is when the game user connects or disconnects the headphones.</target>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>We recommend that you implement the engine callback that handles device changes.</source>
          <target state="new">We recommend that you implement the engine callback that handles device changes.</target>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>Otherwise, your game will stop playing sound when the user plugs in or removes headphones, until the game is restarted.</source>
          <target state="new">Otherwise, your game will stop playing sound when the user plugs in or removes headphones, until the game is restarted.</target>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>Audio.h defines the <bpt id="p1">**</bpt>AudioEngineCallbacks<ept id="p1">**</ept> class.</source>
          <target state="new">Audio.h defines the <bpt id="p1">**</bpt>AudioEngineCallbacks<ept id="p1">**</ept> class.</target>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>This class implements the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IXAudio2EngineCallback<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ee415910)</ept> interface.</source>
          <target state="new">This class implements the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IXAudio2EngineCallback<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ee415910)</ept> interface.</target>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IXAudio2EngineCallback<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ee415910)</ept> interface enables your code to be notified when audio processing events occur and when the engine encounters a critical error.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IXAudio2EngineCallback<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ee415910)</ept> interface enables your code to be notified when audio processing events occur and when the engine encounters a critical error.</target>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>To register for callbacks, Marble Maze calls the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IXAudio2::RegisterForCallbacks<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ee418620)</ept> method after it creates the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>IXAudio2<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/desktop/ee415908)</ept> object for the music engine.</source>
          <target state="new">To register for callbacks, Marble Maze calls the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IXAudio2::RegisterForCallbacks<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ee418620)</ept> method after it creates the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>IXAudio2<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/desktop/ee415908)</ept> object for the music engine.</target>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>Marble Maze does not require notification when audio processing starts or ends.</source>
          <target state="new">Marble Maze does not require notification when audio processing starts or ends.</target>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>Therefore, it implements the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IXAudio2EngineCallback::OnProcessingPassStart<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ee418463)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>IXAudio2EngineCallback::OnProcessingPassEnd<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/desktop/ee418462)</ept> methods to do nothing.</source>
          <target state="new">Therefore, it implements the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IXAudio2EngineCallback::OnProcessingPassStart<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ee418463)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>IXAudio2EngineCallback::OnProcessingPassEnd<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/desktop/ee418462)</ept> methods to do nothing.</target>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>For the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IXAudio2EngineCallback::OnCriticalError<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ee418461)</ept> method, Marble Maze calls the <bpt id="p3">**</bpt>SetEngineExperiencedCriticalError<ept id="p3">**</ept> method, which sets the <bpt id="p4">**</bpt>m<ph id="ph1">\_</ph>engineExperiencedCriticalError<ept id="p4">**</ept> flag.</source>
          <target state="new">For the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IXAudio2EngineCallback::OnCriticalError<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ee418461)</ept> method, Marble Maze calls the <bpt id="p3">**</bpt>SetEngineExperiencedCriticalError<ept id="p3">**</ept> method, which sets the <bpt id="p4">**</bpt>m<ph id="ph1">\_</ph>engineExperiencedCriticalError<ept id="p4">**</ept> flag.</target>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>When a critical error occurs, audio processing stops and all additional calls to XAudio2 fail.</source>
          <target state="new">When a critical error occurs, audio processing stops and all additional calls to XAudio2 fail.</target>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>To recover from this situation, you must release the XAudio2 instance and create a new one.</source>
          <target state="new">To recover from this situation, you must release the XAudio2 instance and create a new one.</target>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Audio::Render<ept id="p1">**</ept> method, which is called from the game loop every frame, first checks the <bpt id="p2">**</bpt>m<ph id="ph1">\_</ph>engineExperiencedCriticalError<ept id="p2">**</ept> flag.</source>
          <target state="new">The <bpt id="p1">**</bpt>Audio::Render<ept id="p1">**</ept> method, which is called from the game loop every frame, first checks the <bpt id="p2">**</bpt>m<ph id="ph1">\_</ph>engineExperiencedCriticalError<ept id="p2">**</ept> flag.</target>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>If this flag is set, it clears the flag, releases the current XAudio2 instance, initializes resources, and then starts the background music.</source>
          <target state="new">If this flag is set, it clears the flag, releases the current XAudio2 instance, initializes resources, and then starts the background music.</target>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>Marble Maze also uses the <bpt id="p1">**</bpt>m<ph id="ph1">\_</ph>engineExperiencedCriticalError<ept id="p1">**</ept> flag to guard against calling into XAudio2 when no audio device is available.</source>
          <target state="new">Marble Maze also uses the <bpt id="p1">**</bpt>m<ph id="ph1">\_</ph>engineExperiencedCriticalError<ept id="p1">**</ept> flag to guard against calling into XAudio2 when no audio device is available.</target>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>For example, the <bpt id="p1">**</bpt>MarbleMaze::Update<ept id="p1">**</ept> method does not process audio for rolling or collision events when this flag is set.</source>
          <target state="new">For example, the <bpt id="p1">**</bpt>MarbleMaze::Update<ept id="p1">**</ept> method does not process audio for rolling or collision events when this flag is set.</target>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>The app attempts to repair the audio engine every frame if it is required; however, the <bpt id="p1">**</bpt>m<ph id="ph1">\_</ph>engineExperiencedCriticalError<ept id="p1">**</ept> flag might always be set if the computer does not have an audio device or the headphones are unplugged and there is no other available audio device.</source>
          <target state="new">The app attempts to repair the audio engine every frame if it is required; however, the <bpt id="p1">**</bpt>m<ph id="ph1">\_</ph>engineExperiencedCriticalError<ept id="p1">**</ept> flag might always be set if the computer does not have an audio device or the headphones are unplugged and there is no other available audio device.</target>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Caution<ept id="p1">**</ept>   As a rule, do not perform blocking operations in the body of an engine callback.</source>
          <target state="new"><bpt id="p1">**</bpt>Caution<ept id="p1">**</ept>   As a rule, do not perform blocking operations in the body of an engine callback.</target>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>Doing so can cause performance issues.</source>
          <target state="new">Doing so can cause performance issues.</target>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>Marble Maze sets a flag in the <bpt id="p1">**</bpt>OnCriticalError<ept id="p1">**</ept> callback and later handles the error during the regular audio processing phase.</source>
          <target state="new">Marble Maze sets a flag in the <bpt id="p1">**</bpt>OnCriticalError<ept id="p1">**</ept> callback and later handles the error during the regular audio processing phase.</target>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>For more information about XAudio2 callbacks, see <bpt id="p1">[</bpt>XAudio2 Callbacks<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ee415745)</ept>.</source>
          <target state="new">For more information about XAudio2 callbacks, see <bpt id="p1">[</bpt>XAudio2 Callbacks<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ee415745)</ept>.</target>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>Related topics</source>
          <target state="new">Related topics</target>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>Adding input and interactivity to the Marble Maze sample</source>
          <target state="new">Adding input and interactivity to the Marble Maze sample</target>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>Developing Marble Maze, a UWP game in C++ and DirectX</source>
          <target state="new">Developing Marble Maze, a UWP game in C++ and DirectX</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>