<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci1\audio-video-camera\media-playback-with-mediasource.md</xliffext:olfilepath>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d1d2ed10c7b8654a95d4cc19ea22fce737ca11cc</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-e58fd48" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>The MediaSource class provides a common way to reference and play back media from different sources such as local or remote files and exposes a common model for accessing media data, regardless of the underlying media format.</source>
          <target state="new">The MediaSource class provides a common way to reference and play back media from different sources such as local or remote files and exposes a common model for accessing media data, regardless of the underlying media format.</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Media playback with MediaSource</source>
          <target state="new">Media playback with MediaSource</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Media playback with MediaSource</source>
          <target state="new">Media playback with MediaSource</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Updated for UWP apps on Windows 10.</source>
          <target state="new">Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept></source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept></target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Some information relates to pre-released product which may be substantially modified before it's commercially released.</source>
          <target state="new">Some information relates to pre-released product which may be substantially modified before it's commercially released.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Microsoft makes no warranties, express or implied, with respect to the information provided here.</source>
          <target state="new">Microsoft makes no warranties, express or implied, with respect to the information provided here.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MediaSource<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn930905)</ept> class provides a common way to reference and play back media from different sources such as local or remote files and exposes a common model for accessing media data, regardless of the underlying media format.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MediaSource<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn930905)</ept> class provides a common way to reference and play back media from different sources such as local or remote files and exposes a common model for accessing media data, regardless of the underlying media format.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MediaPlaybackItem<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn930939)</ept> class extends the functionality of <bpt id="p3">**</bpt>MediaSource<ept id="p3">**</ept>, allowing you to manage and select from multiple audio, video, and metadata tracks contained in a media item.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MediaPlaybackItem<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn930939)</ept> class extends the functionality of <bpt id="p3">**</bpt>MediaSource<ept id="p3">**</ept>, allowing you to manage and select from multiple audio, video, and metadata tracks contained in a media item.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>MediaPlaybackList<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn930955)</ept> allows you to create playback lists from one or more media playback items.</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>MediaPlaybackList<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn930955)</ept> allows you to create playback lists from one or more media playback items.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The code in this article was adapted from the <bpt id="p1">[</bpt>Video Playback SDK<ept id="p1">](http://go.microsoft.com/fwlink/p/?LinkId=620020&amp;clcid=0x409)</ept> sample.</source>
          <target state="new">The code in this article was adapted from the <bpt id="p1">[</bpt>Video Playback SDK<ept id="p1">](http://go.microsoft.com/fwlink/p/?LinkId=620020&amp;clcid=0x409)</ept> sample.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You can download this sample to see the code used in context or to use as a starting point for your own app.</source>
          <target state="new">You can download this sample to see the code used in context or to use as a starting point for your own app.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Create and play a MediaSource</source>
          <target state="new">Create and play a MediaSource</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Create a new instance of <bpt id="p1">**</bpt>MediaSource<ept id="p1">**</ept> by calling one of the factory methods exposed by the class:</source>
          <target state="new">Create a new instance of <bpt id="p1">**</bpt>MediaSource<ept id="p1">**</ept> by calling one of the factory methods exposed by the class:</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>CreateFromAdaptiveMediaSource</source>
          <target state="new">CreateFromAdaptiveMediaSource</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>CreateFromIMediaSource</source>
          <target state="new">CreateFromIMediaSource</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>CreateFromMediaStreamSource</source>
          <target state="new">CreateFromMediaStreamSource</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>CreateFromMseStreamSource</source>
          <target state="new">CreateFromMseStreamSource</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>CreateFromStorageFile</source>
          <target state="new">CreateFromStorageFile</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>CreateFromStream</source>
          <target state="new">CreateFromStream</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>CreateFromStreamReference</source>
          <target state="new">CreateFromStreamReference</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>CreateFromUri</source>
          <target state="new">CreateFromUri</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>After creating a <bpt id="p1">**</bpt>MediaSource<ept id="p1">**</ept> you can play the source directly with a <bpt id="p2">[</bpt><bpt id="p3">**</bpt>MediaElement<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br242926)</ept>, by calling <bpt id="p4">[</bpt><bpt id="p5">**</bpt>SetPlaybackSource<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/dn899085)</ept>, or with a <bpt id="p6">[</bpt><bpt id="p7">**</bpt>MediaPlayer<ept id="p7">**</ept><ept id="p6">](https://msdn.microsoft.com/library/windows/apps/dn652535)</ept>, by setting the <bpt id="p8">[</bpt><bpt id="p9">**</bpt>Source<ept id="p9">**</ept><ept id="p8">](https://msdn.microsoft.com/library/windows/apps/dn987010)</ept> property.</source>
          <target state="new">After creating a <bpt id="p1">**</bpt>MediaSource<ept id="p1">**</ept> you can play the source directly with a <bpt id="p2">[</bpt><bpt id="p3">**</bpt>MediaElement<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br242926)</ept>, by calling <bpt id="p4">[</bpt><bpt id="p5">**</bpt>SetPlaybackSource<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/dn899085)</ept>, or with a <bpt id="p6">[</bpt><bpt id="p7">**</bpt>MediaPlayer<ept id="p7">**</ept><ept id="p6">](https://msdn.microsoft.com/library/windows/apps/dn652535)</ept>, by setting the <bpt id="p8">[</bpt><bpt id="p9">**</bpt>Source<ept id="p9">**</ept><ept id="p8">](https://msdn.microsoft.com/library/windows/apps/dn987010)</ept> property.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The following example shows how to play back a user-selected media file in a <bpt id="p1">**</bpt>MediaElement<ept id="p1">**</ept> using <bpt id="p2">**</bpt>MediaSource<ept id="p2">**</ept>.</source>
          <target state="new">The following example shows how to play back a user-selected media file in a <bpt id="p1">**</bpt>MediaElement<ept id="p1">**</ept> using <bpt id="p2">**</bpt>MediaSource<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>You will need to include the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows.Media.Core<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn278962)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Windows.Media.Playback<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn640562)</ept> namespaces in order to complete this scenario.</source>
          <target state="new">You will need to include the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows.Media.Core<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn278962)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Windows.Media.Playback<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn640562)</ept> namespaces in order to complete this scenario.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Using</source>
          <target state="new">Using</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Declare a variable of type <bpt id="p1">**</bpt>MediaSource<ept id="p1">**</ept>.</source>
          <target state="new">Declare a variable of type <bpt id="p1">**</bpt>MediaSource<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For the examples in this article, the media source is declared as a class member so that it can be accessed from multiple locations.</source>
          <target state="new">For the examples in this article, the media source is declared as a class member so that it can be accessed from multiple locations.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>DeclareMediaSource</source>
          <target state="new">DeclareMediaSource</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>To allow the user to pick a media file to play, use a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>FileOpenPicker<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br207847)</ept>.</source>
          <target state="new">To allow the user to pick a media file to play, use a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>FileOpenPicker<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br207847)</ept>.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>With the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StorageFile<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br227171)</ept> object returned from the picker's <bpt id="p3">[</bpt><bpt id="p4">**</bpt>PickSingleFileAsync<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/jj635275)</ept> method, initialize a new MediaObject by calling <bpt id="p5">[</bpt><bpt id="p6">**</bpt>MediaSource.CreateFromStorageFile<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/dn930909)</ept>.</source>
          <target state="new">With the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StorageFile<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br227171)</ept> object returned from the picker's <bpt id="p3">[</bpt><bpt id="p4">**</bpt>PickSingleFileAsync<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/jj635275)</ept> method, initialize a new MediaObject by calling <bpt id="p5">[</bpt><bpt id="p6">**</bpt>MediaSource.CreateFromStorageFile<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/dn930909)</ept>.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Finally, set the media source as the playback source for the <bpt id="p1">**</bpt>MediaElement<ept id="p1">**</ept> by calling the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>SetPlaybackSource<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/dn899085)</ept> method.</source>
          <target state="new">Finally, set the media source as the playback source for the <bpt id="p1">**</bpt>MediaElement<ept id="p1">**</ept> by calling the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>SetPlaybackSource<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/dn899085)</ept> method.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>PlayMediaSource</source>
          <target state="new">PlayMediaSource</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Handle multiple audio, video, and metadata tracks with MediaPlaybackItem</source>
          <target state="new">Handle multiple audio, video, and metadata tracks with MediaPlaybackItem</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Using a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MediaSource<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn930905)</ept> for playback is convenient because it provides a common way to playback media from different kinds of sources, but more advanced behavior can be accessed by using a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>MediaPlaybackItem<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn930939)</ept>.</source>
          <target state="new">Using a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MediaSource<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn930905)</ept> for playback is convenient because it provides a common way to playback media from different kinds of sources, but more advanced behavior can be accessed by using a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>MediaPlaybackItem<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn930939)</ept>.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>This includes the ability to access and manage multiple audio, video, and data tracks for a media item.</source>
          <target state="new">This includes the ability to access and manage multiple audio, video, and data tracks for a media item.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Declare a variable to store your <bpt id="p1">**</bpt>MediaPlaybackItem<ept id="p1">**</ept>.</source>
          <target state="new">Declare a variable to store your <bpt id="p1">**</bpt>MediaPlaybackItem<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>DeclareMediaPlaybackItem</source>
          <target state="new">DeclareMediaPlaybackItem</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Create a <bpt id="p1">**</bpt>MediaPlaybackItem<ept id="p1">**</ept> by calling the constructor and passing in an initialized <bpt id="p2">**</bpt>MediaSource<ept id="p2">**</ept> object.</source>
          <target state="new">Create a <bpt id="p1">**</bpt>MediaPlaybackItem<ept id="p1">**</ept> by calling the constructor and passing in an initialized <bpt id="p2">**</bpt>MediaSource<ept id="p2">**</ept> object.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If your app supports multiple audio, video, or data tracks in a media playback item, register event handlers for the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>AudioTracksChanged<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn930948)</ept>, <bpt id="p3">[</bpt><bpt id="p4">**</bpt>VideoTracksChanged<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn930954)</ept>, or <bpt id="p5">[</bpt><bpt id="p6">**</bpt>TimedMetadataTracksChanged<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/dn930952)</ept> events.</source>
          <target state="new">If your app supports multiple audio, video, or data tracks in a media playback item, register event handlers for the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>AudioTracksChanged<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn930948)</ept>, <bpt id="p3">[</bpt><bpt id="p4">**</bpt>VideoTracksChanged<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn930954)</ept>, or <bpt id="p5">[</bpt><bpt id="p6">**</bpt>TimedMetadataTracksChanged<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/dn930952)</ept> events.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Finally, set the playback source of the <bpt id="p1">**</bpt>MediaElement<ept id="p1">**</ept> or <bpt id="p2">**</bpt>MediaPlayer<ept id="p2">**</ept> to your <bpt id="p3">**</bpt>MediaPlaybackItem<ept id="p3">**</ept>.</source>
          <target state="new">Finally, set the playback source of the <bpt id="p1">**</bpt>MediaElement<ept id="p1">**</ept> or <bpt id="p2">**</bpt>MediaPlayer<ept id="p2">**</ept> to your <bpt id="p3">**</bpt>MediaPlaybackItem<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>PlayMediaPlaybackItem</source>
          <target state="new">PlayMediaPlaybackItem</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Note</source>
          <target state="new">Note</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">**</bpt>MediaSource<ept id="p1">**</ept> can only be associated with a single <bpt id="p2">**</bpt>MediaPlaybackItem<ept id="p2">**</ept>.</source>
          <target state="new">A <bpt id="p1">**</bpt>MediaSource<ept id="p1">**</ept> can only be associated with a single <bpt id="p2">**</bpt>MediaPlaybackItem<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>After creating a <bpt id="p1">**</bpt>MediaPlaybackItem<ept id="p1">**</ept> from a source, attempting to create another playback item from the same source will result in an error.</source>
          <target state="new">After creating a <bpt id="p1">**</bpt>MediaPlaybackItem<ept id="p1">**</ept> from a source, attempting to create another playback item from the same source will result in an error.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Also, after creating a <bpt id="p1">**</bpt>MediaPlaybackItem<ept id="p1">**</ept> from a media source, you can't set the <bpt id="p2">**</bpt>MediaSource<ept id="p2">**</ept> object directly as the source for a <bpt id="p3">**</bpt>MediaElement<ept id="p3">**</ept> or <bpt id="p4">**</bpt>MediaPlayer<ept id="p4">**</ept> but should instead use the <bpt id="p5">**</bpt>MediaPlaybackItem<ept id="p5">**</ept>.</source>
          <target state="new">Also, after creating a <bpt id="p1">**</bpt>MediaPlaybackItem<ept id="p1">**</ept> from a media source, you can't set the <bpt id="p2">**</bpt>MediaSource<ept id="p2">**</ept> object directly as the source for a <bpt id="p3">**</bpt>MediaElement<ept id="p3">**</ept> or <bpt id="p4">**</bpt>MediaPlayer<ept id="p4">**</ept> but should instead use the <bpt id="p5">**</bpt>MediaPlaybackItem<ept id="p5">**</ept>.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>VideoTracksChanged<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn930954)</ept> event is raised after a <bpt id="p3">**</bpt>MediaPlaybackItem<ept id="p3">**</ept> containing multiple video tracks is assigned as a playback source, and can be raised again if the list of video tracks changes for the item changes.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>VideoTracksChanged<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn930954)</ept> event is raised after a <bpt id="p3">**</bpt>MediaPlaybackItem<ept id="p3">**</ept> containing multiple video tracks is assigned as a playback source, and can be raised again if the list of video tracks changes for the item changes.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The handler for this event gives you the opportunity to update your UI to allow the user to switch between available tracks.</source>
          <target state="new">The handler for this event gives you the opportunity to update your UI to allow the user to switch between available tracks.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>This example uses a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ComboBox<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br209348)</ept> to display the available video tracks.</source>
          <target state="new">This example uses a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ComboBox<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br209348)</ept> to display the available video tracks.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>VideoComboBox</source>
          <target state="new">VideoComboBox</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>VideoTracksChanged<ept id="p1">**</ept> handler, loop through all of the tracks in the playback item's <bpt id="p2">[</bpt><bpt id="p3">**</bpt>VideoTracks<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/dn930953)</ept> list.</source>
          <target state="new">In the <bpt id="p1">**</bpt>VideoTracksChanged<ept id="p1">**</ept> handler, loop through all of the tracks in the playback item's <bpt id="p2">[</bpt><bpt id="p3">**</bpt>VideoTracks<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/dn930953)</ept> list.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>For each track, a new <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ComboBoxItem<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br209349)</ept> is created.</source>
          <target state="new">For each track, a new <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ComboBoxItem<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br209349)</ept> is created.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>If the track does not already have a label, a label is generated from the track index.</source>
          <target state="new">If the track does not already have a label, a label is generated from the track index.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Tag<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208745)</ept> property of the combo box item is set to the track index so that it can be identified later.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Tag<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208745)</ept> property of the combo box item is set to the track index so that it can be identified later.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Finally, the item is added to the combo box.</source>
          <target state="new">Finally, the item is added to the combo box.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Note that these operations are performed within a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CoreDispatcher.RunAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh750317)</ept> call because all UI changes must be made on the UI thread and this event is raised on a different thread.</source>
          <target state="new">Note that these operations are performed within a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CoreDispatcher.RunAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh750317)</ept> call because all UI changes must be made on the UI thread and this event is raised on a different thread.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>VideoTracksChanged</source>
          <target state="new">VideoTracksChanged</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SelectionChanged<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br209776)</ept> handler for the combo box, the track index is retrieved from the selected item's <bpt id="p3">**</bpt>Tag<ept id="p3">**</ept> property.</source>
          <target state="new">In the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SelectionChanged<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br209776)</ept> handler for the combo box, the track index is retrieved from the selected item's <bpt id="p3">**</bpt>Tag<ept id="p3">**</ept> property.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Setting the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SelectedIndex<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn956634)</ept> property of the media playback item's <bpt id="p3">[</bpt><bpt id="p4">**</bpt>VideoTracks<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn930953)</ept> list causes the <bpt id="p5">**</bpt>MediaElement<ept id="p5">**</ept> or <bpt id="p6">**</bpt>MediaPlayer<ept id="p6">**</ept> to switch the active video track to the specified index.</source>
          <target state="new">Setting the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SelectedIndex<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn956634)</ept> property of the media playback item's <bpt id="p3">[</bpt><bpt id="p4">**</bpt>VideoTracks<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn930953)</ept> list causes the <bpt id="p5">**</bpt>MediaElement<ept id="p5">**</ept> or <bpt id="p6">**</bpt>MediaPlayer<ept id="p6">**</ept> to switch the active video track to the specified index.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>VideoTracksSelectionChanged</source>
          <target state="new">VideoTracksSelectionChanged</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Managing media items with multiple audio tracks works exactly the same as with video tracks.</source>
          <target state="new">Managing media items with multiple audio tracks works exactly the same as with video tracks.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Handle the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>AudioTracksChanged<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn930948)</ept> to update your UI with the audio tracks found in the playback item's <bpt id="p3">[</bpt><bpt id="p4">**</bpt>AudioTracks<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn930947)</ept> list.</source>
          <target state="new">Handle the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>AudioTracksChanged<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn930948)</ept> to update your UI with the audio tracks found in the playback item's <bpt id="p3">[</bpt><bpt id="p4">**</bpt>AudioTracks<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn930947)</ept> list.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>When the user selects an audio track, set the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SelectedIndex<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn930937)</ept> property of the <bpt id="p3">**</bpt>AudioTracks<ept id="p3">**</ept> list to cause the <bpt id="p4">**</bpt>MediaElement<ept id="p4">**</ept> or <bpt id="p5">**</bpt>MediaPlayer<ept id="p5">**</ept> to switch the active audio track to the specified index.</source>
          <target state="new">When the user selects an audio track, set the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SelectedIndex<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn930937)</ept> property of the <bpt id="p3">**</bpt>AudioTracks<ept id="p3">**</ept> list to cause the <bpt id="p4">**</bpt>MediaElement<ept id="p4">**</ept> or <bpt id="p5">**</bpt>MediaPlayer<ept id="p5">**</ept> to switch the active audio track to the specified index.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>AudioComboBox</source>
          <target state="new">AudioComboBox</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>AudioTracksChanged</source>
          <target state="new">AudioTracksChanged</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>AudioTracksSelectionChanged</source>
          <target state="new">AudioTracksSelectionChanged</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>In addition to audio and video, a <bpt id="p1">**</bpt>MediaPlaybackItem<ept id="p1">**</ept> object may contain zero or more <bpt id="p2">[</bpt><bpt id="p3">**</bpt>TimedMetadataTrack<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/dn956580)</ept> objects.</source>
          <target state="new">In addition to audio and video, a <bpt id="p1">**</bpt>MediaPlaybackItem<ept id="p1">**</ept> object may contain zero or more <bpt id="p2">[</bpt><bpt id="p3">**</bpt>TimedMetadataTrack<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/dn956580)</ept> objects.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>A timed metadata track can contain subtitle or caption text, or it may contain custom data that is proprietary to your app.</source>
          <target state="new">A timed metadata track can contain subtitle or caption text, or it may contain custom data that is proprietary to your app.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>A timed metadata track contains a list of cues represented by objects that inherit from <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IMediaCue<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn930899)</ept>, such as a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>DataCue<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn930892)</ept> or a <bpt id="p5">[</bpt><bpt id="p6">**</bpt>TimedTextCue<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/dn956655)</ept>.</source>
          <target state="new">A timed metadata track contains a list of cues represented by objects that inherit from <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IMediaCue<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn930899)</ept>, such as a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>DataCue<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn930892)</ept> or a <bpt id="p5">[</bpt><bpt id="p6">**</bpt>TimedTextCue<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/dn956655)</ept>.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Each cue has a start time and a duration that determines when the cue is activated and for how long.</source>
          <target state="new">Each cue has a start time and a duration that determines when the cue is activated and for how long.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Similar to audio tracks and video tracks, the timed metadata tracks for a media item can be discovered by handling the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TimedMetadataTracksChanged<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn930952)</ept> event of a <bpt id="p3">**</bpt>MediaPlaybackItem<ept id="p3">**</ept>.</source>
          <target state="new">Similar to audio tracks and video tracks, the timed metadata tracks for a media item can be discovered by handling the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TimedMetadataTracksChanged<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn930952)</ept> event of a <bpt id="p3">**</bpt>MediaPlaybackItem<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>With timed metadata tracks, however, the user may want to enable more than one metadata track at a time.</source>
          <target state="new">With timed metadata tracks, however, the user may want to enable more than one metadata track at a time.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Also, depending on your app scenario, you may want to enable or disable metadata tracks automatically, without user intervention.</source>
          <target state="new">Also, depending on your app scenario, you may want to enable or disable metadata tracks automatically, without user intervention.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>For illustration purposes, this example adds a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ToggleButton<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br209795)</ept> for each metadata track in a media item to allow the user to enable and disable the track.</source>
          <target state="new">For illustration purposes, this example adds a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ToggleButton<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br209795)</ept> for each metadata track in a media item to allow the user to enable and disable the track.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Tag<ept id="p1">**</ept> property of each button is set to the index of the associated metadata track so that it can be identified when the button is toggled.</source>
          <target state="new">The <bpt id="p1">**</bpt>Tag<ept id="p1">**</ept> property of each button is set to the index of the associated metadata track so that it can be identified when the button is toggled.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>MetaStackPanel</source>
          <target state="new">MetaStackPanel</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>TimedMetadataTrackschanged</source>
          <target state="new">TimedMetadataTrackschanged</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Because more than one metadata track can be active at a time, you don't simply set the active index for the metadata track list.</source>
          <target state="new">Because more than one metadata track can be active at a time, you don't simply set the active index for the metadata track list.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Instead, call the <bpt id="p1">**</bpt>MediaPlaybackItem<ept id="p1">**</ept> object's <bpt id="p2">[</bpt><bpt id="p3">**</bpt>SetPresentationMode<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/dn986977)</ept> method, passing in the index of the track you want to toggle, and then providing a value from the <bpt id="p4">[</bpt><bpt id="p5">**</bpt>TimedMetadataTrackPresentationMode<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/dn987016)</ept> enumeration.</source>
          <target state="new">Instead, call the <bpt id="p1">**</bpt>MediaPlaybackItem<ept id="p1">**</ept> object's <bpt id="p2">[</bpt><bpt id="p3">**</bpt>SetPresentationMode<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/dn986977)</ept> method, passing in the index of the track you want to toggle, and then providing a value from the <bpt id="p4">[</bpt><bpt id="p5">**</bpt>TimedMetadataTrackPresentationMode<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/dn987016)</ept> enumeration.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The presentation mode you choose depends on the implementation of your app.</source>
          <target state="new">The presentation mode you choose depends on the implementation of your app.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>In this example, the metadata track is set to <bpt id="p1">**</bpt>PlatformPresented<ept id="p1">**</ept> when enabled.</source>
          <target state="new">In this example, the metadata track is set to <bpt id="p1">**</bpt>PlatformPresented<ept id="p1">**</ept> when enabled.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>For text-based tracks, this means that the system will automatically display the text cues in the track.</source>
          <target state="new">For text-based tracks, this means that the system will automatically display the text cues in the track.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>When the toggle button is toggled off, the presentation mode is set to <bpt id="p1">**</bpt>Disabled<ept id="p1">**</ept>, which means that no text is displayed and no cue events are raised.</source>
          <target state="new">When the toggle button is toggled off, the presentation mode is set to <bpt id="p1">**</bpt>Disabled<ept id="p1">**</ept>, which means that no text is displayed and no cue events are raised.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Cue events are discussed later in this article.</source>
          <target state="new">Cue events are discussed later in this article.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>ToggleChecked</source>
          <target state="new">ToggleChecked</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>ToggleUnchecked</source>
          <target state="new">ToggleUnchecked</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Add external timed text with TimedTextSource</source>
          <target state="new">Add external timed text with TimedTextSource</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>For some scenarios, you may have external files that contains timed text associated with a media item, such as separate files that contain subtitles for different locales.</source>
          <target state="new">For some scenarios, you may have external files that contains timed text associated with a media item, such as separate files that contain subtitles for different locales.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TimedTextSource<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn956679)</ept> class to load in external timed text files from a stream or URI.</source>
          <target state="new">Use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TimedTextSource<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn956679)</ept> class to load in external timed text files from a stream or URI.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>This example uses a <bpt id="p1">**</bpt>Dictionary<ept id="p1">**</ept> collection to store a list of the timed text sources for the media item using the source URI and the <bpt id="p2">**</bpt>TimedTextSource<ept id="p2">**</ept> object as the key/value pair in order to identify the tracks after they have been resolved.</source>
          <target state="new">This example uses a <bpt id="p1">**</bpt>Dictionary<ept id="p1">**</ept> collection to store a list of the timed text sources for the media item using the source URI and the <bpt id="p2">**</bpt>TimedTextSource<ept id="p2">**</ept> object as the key/value pair in order to identify the tracks after they have been resolved.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>TimedTextSourceMap</source>
          <target state="new">TimedTextSourceMap</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Create a new <bpt id="p1">**</bpt>TimedTextSource<ept id="p1">**</ept> for each external timed text file by calling <bpt id="p2">[</bpt><bpt id="p3">**</bpt>CreateFromUri<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/dn708190)</ept>.</source>
          <target state="new">Create a new <bpt id="p1">**</bpt>TimedTextSource<ept id="p1">**</ept> for each external timed text file by calling <bpt id="p2">[</bpt><bpt id="p3">**</bpt>CreateFromUri<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/dn708190)</ept>.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Add an entry to the <bpt id="p1">**</bpt>Dictionary<ept id="p1">**</ept> for the timed text source.</source>
          <target state="new">Add an entry to the <bpt id="p1">**</bpt>Dictionary<ept id="p1">**</ept> for the timed text source.</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Add a handler for the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TimedTextSource.Resolved<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn965540)</ept> event to handle if the item failed to load or to set additional properties after the item was loaded successfully.</source>
          <target state="new">Add a handler for the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TimedTextSource.Resolved<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn965540)</ept> event to handle if the item failed to load or to set additional properties after the item was loaded successfully.</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Register all of your <bpt id="p1">**</bpt>TimedTextSource<ept id="p1">**</ept> objects with the <bpt id="p2">**</bpt>MediaSource<ept id="p2">**</ept> by adding them to the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>ExternalTimedTextSources<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn930916)</ept> collection.</source>
          <target state="new">Register all of your <bpt id="p1">**</bpt>TimedTextSource<ept id="p1">**</ept> objects with the <bpt id="p2">**</bpt>MediaSource<ept id="p2">**</ept> by adding them to the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>ExternalTimedTextSources<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn930916)</ept> collection.</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Note that external timed text sources are added to directly the <bpt id="p1">**</bpt>MediaSource<ept id="p1">**</ept> and not the <bpt id="p2">**</bpt>MediaPlaybackItem<ept id="p2">**</ept> created from the source.</source>
          <target state="new">Note that external timed text sources are added to directly the <bpt id="p1">**</bpt>MediaSource<ept id="p1">**</ept> and not the <bpt id="p2">**</bpt>MediaPlaybackItem<ept id="p2">**</ept> created from the source.</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>To update your UI to reflect the external text tracks, register and handle the <bpt id="p1">**</bpt>TimedMetadataTracksChanged<ept id="p1">**</ept> event as described previously in this article.</source>
          <target state="new">To update your UI to reflect the external text tracks, register and handle the <bpt id="p1">**</bpt>TimedMetadataTracksChanged<ept id="p1">**</ept> event as described previously in this article.</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>TimedTextSource</source>
          <target state="new">TimedTextSource</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>In the handler for the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TimedTextSource.Resolved<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn965540)</ept> event, check the <bpt id="p3">**</bpt>Error<ept id="p3">**</ept> property of the <bpt id="p4">[</bpt><bpt id="p5">**</bpt>TimedTextSourceResolveResultEventArgs<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/dn965537)</ept> passed into the handler to determine if an error occurred while trying to load the timed text data.</source>
          <target state="new">In the handler for the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TimedTextSource.Resolved<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn965540)</ept> event, check the <bpt id="p3">**</bpt>Error<ept id="p3">**</ept> property of the <bpt id="p4">[</bpt><bpt id="p5">**</bpt>TimedTextSourceResolveResultEventArgs<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/dn965537)</ept> passed into the handler to determine if an error occurred while trying to load the timed text data.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>If the item was resolved successfully, you can use this handler to update additional properties of the resolved track.</source>
          <target state="new">If the item was resolved successfully, you can use this handler to update additional properties of the resolved track.</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>This example adds a label for each track based on the URI previously stored in the <bpt id="p1">**</bpt>Dictionary<ept id="p1">**</ept>.</source>
          <target state="new">This example adds a label for each track based on the URI previously stored in the <bpt id="p1">**</bpt>Dictionary<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>TimedTextSourceResolved</source>
          <target state="new">TimedTextSourceResolved</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Add additional metadata tracks</source>
          <target state="new">Add additional metadata tracks</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>You can dynamically create custom metadata tracks in code and associate them with a media source.</source>
          <target state="new">You can dynamically create custom metadata tracks in code and associate them with a media source.</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The tracks you create can contain subtitle or caption text, or they can contain your proprietary app data.</source>
          <target state="new">The tracks you create can contain subtitle or caption text, or they can contain your proprietary app data.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Create a new <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TimedMetadataTrack<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn956580)</ept> by calling the constructor and specifying an ID, the language identifier, and a value from the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>TimedMetadataKind<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn956578)</ept> enumeration.</source>
          <target state="new">Create a new <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TimedMetadataTrack<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn956580)</ept> by calling the constructor and specifying an ID, the language identifier, and a value from the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>TimedMetadataKind<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn956578)</ept> enumeration.</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Register handlers for the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CueEntered<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn956583)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>CueExited<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn956584)</ept> events.</source>
          <target state="new">Register handlers for the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CueEntered<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn956583)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>CueExited<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn956584)</ept> events.</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>These events are raised when the start time for a cue has been reached and when the duration for a cue has expired, respectively.</source>
          <target state="new">These events are raised when the start time for a cue has been reached and when the duration for a cue has expired, respectively.</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Create a new cue object, appropriate for the type of metadata track you created, and set the ID, start time, and duration for the track.</source>
          <target state="new">Create a new cue object, appropriate for the type of metadata track you created, and set the ID, start time, and duration for the track.</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>This example creates a data track, so a set of <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DataCue<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn930892)</ept> objects are generated and a buffer containing app-specific data is provided for each cue.</source>
          <target state="new">This example creates a data track, so a set of <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DataCue<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn930892)</ept> objects are generated and a buffer containing app-specific data is provided for each cue.</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>To register the new track, add it to the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ExternalTimedMetadataTracks<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn930915)</ept> collection of the <bpt id="p3">**</bpt>MediaSource<ept id="p3">**</ept> object.</source>
          <target state="new">To register the new track, add it to the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ExternalTimedMetadataTracks<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn930915)</ept> collection of the <bpt id="p3">**</bpt>MediaSource<ept id="p3">**</ept> object.</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>AddDataTrack</source>
          <target state="new">AddDataTrack</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>CueEntered<ept id="p1">**</ept> event is raised when a cue's start time has been reached as long as the associated track has a presentation mode of <bpt id="p2">**</bpt>ApplicationPresented<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Hidden<ept id="p3">**</ept>, or <bpt id="p4">**</bpt>PlatformPresented.<ept id="p4">**</ept></source>
          <target state="new">The <bpt id="p1">**</bpt>CueEntered<ept id="p1">**</ept> event is raised when a cue's start time has been reached as long as the associated track has a presentation mode of <bpt id="p2">**</bpt>ApplicationPresented<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Hidden<ept id="p3">**</ept>, or <bpt id="p4">**</bpt>PlatformPresented.<ept id="p4">**</ept></target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Cue events are not raised for metadata tracks while the presentation mode for the track is <bpt id="p1">**</bpt>Disabled<ept id="p1">**</ept>.</source>
          <target state="new">Cue events are not raised for metadata tracks while the presentation mode for the track is <bpt id="p1">**</bpt>Disabled<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>This example simply outputs the custom data associated with the cue to the debug window.</source>
          <target state="new">This example simply outputs the custom data associated with the cue to the debug window.</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>DataCueEntered</source>
          <target state="new">DataCueEntered</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>This example adds a custom text track by specifying <bpt id="p1">**</bpt>TimedMetadataKind.Caption<ept id="p1">**</ept> when creating the track and using <bpt id="p2">[</bpt><bpt id="p3">**</bpt>TimedTextCue<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/dn956655)</ept> objects to add cues to the track.</source>
          <target state="new">This example adds a custom text track by specifying <bpt id="p1">**</bpt>TimedMetadataKind.Caption<ept id="p1">**</ept> when creating the track and using <bpt id="p2">[</bpt><bpt id="p3">**</bpt>TimedTextCue<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/dn956655)</ept> objects to add cues to the track.</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>AddTextTrack</source>
          <target state="new">AddTextTrack</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>TextCueEntered</source>
          <target state="new">TextCueEntered</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Play a list of media items with MediaPlaybackList</source>
          <target state="new">Play a list of media items with MediaPlaybackList</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MediaPlaybackList<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn930955)</ept> allows you to create a playlist of media items, which are represented by <bpt id="p3">**</bpt>MediaPlaybackItem<ept id="p3">**</ept> objects.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MediaPlaybackList<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn930955)</ept> allows you to create a playlist of media items, which are represented by <bpt id="p3">**</bpt>MediaPlaybackItem<ept id="p3">**</ept> objects.</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  Items in a <bpt id="p2">[</bpt><bpt id="p3">**</bpt>MediaPlaybackList<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/dn930955)</ept> are rendered using gapless playback.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  Items in a <bpt id="p2">[</bpt><bpt id="p3">**</bpt>MediaPlaybackList<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/dn930955)</ept> are rendered using gapless playback.</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The system will use provided metadata in MP3 or AAC encoded files to determine the delay or padding compensation needed for gapless playback.</source>
          <target state="new">The system will use provided metadata in MP3 or AAC encoded files to determine the delay or padding compensation needed for gapless playback.</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>If the MP3 or AAC encoded files don't provide this metadata, then the system determines the delay or padding heuristically.</source>
          <target state="new">If the MP3 or AAC encoded files don't provide this metadata, then the system determines the delay or padding heuristically.</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>For lossless formats, such as PCM, FLAC, or ALAC, the system takes no action because these encoders don't introduce delay or padding.</source>
          <target state="new">For lossless formats, such as PCM, FLAC, or ALAC, the system takes no action because these encoders don't introduce delay or padding.</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>To get started, declare a variable to store your <bpt id="p1">**</bpt>MediaPlaybackList<ept id="p1">**</ept>.</source>
          <target state="new">To get started, declare a variable to store your <bpt id="p1">**</bpt>MediaPlaybackList<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>DeclareMediaPlaybackList</source>
          <target state="new">DeclareMediaPlaybackList</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Create a <bpt id="p1">**</bpt>MediaPlaybackItem<ept id="p1">**</ept> for each media item you want to add to your list using the same procedure described previously in this article.</source>
          <target state="new">Create a <bpt id="p1">**</bpt>MediaPlaybackItem<ept id="p1">**</ept> for each media item you want to add to your list using the same procedure described previously in this article.</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Initialize your <bpt id="p1">**</bpt>MediaPlaybackList<ept id="p1">**</ept> object and add the media playback items to it.</source>
          <target state="new">Initialize your <bpt id="p1">**</bpt>MediaPlaybackList<ept id="p1">**</ept> object and add the media playback items to it.</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Register a handler for the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CurrentItemChanged<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn930957)</ept> event.</source>
          <target state="new">Register a handler for the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CurrentItemChanged<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn930957)</ept> event.</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>This event allows you to update your UI to reflect the currently playing media item.</source>
          <target state="new">This event allows you to update your UI to reflect the currently playing media item.</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Finally, set the playback source of the <bpt id="p1">**</bpt>MediaElement<ept id="p1">**</ept> or <bpt id="p2">**</bpt>MediaPlayer<ept id="p2">**</ept> to your <bpt id="p3">**</bpt>MediaPlaybackList<ept id="p3">**</ept>.</source>
          <target state="new">Finally, set the playback source of the <bpt id="p1">**</bpt>MediaElement<ept id="p1">**</ept> or <bpt id="p2">**</bpt>MediaPlayer<ept id="p2">**</ept> to your <bpt id="p3">**</bpt>MediaPlaybackList<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>PlayMediaPlaybackList</source>
          <target state="new">PlayMediaPlaybackList</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>CurrentItemChanged<ept id="p1">**</ept> event handler, update your UI to reflect the currently playing item, which can be retrieved using the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>NewItem<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/dn930930)</ept> property of the <bpt id="p4">[</bpt><bpt id="p5">**</bpt>CurrentMediaPlaybackItemChangedEventArgs<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/dn930929)</ept> object passed into the event.</source>
          <target state="new">In the <bpt id="p1">**</bpt>CurrentItemChanged<ept id="p1">**</ept> event handler, update your UI to reflect the currently playing item, which can be retrieved using the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>NewItem<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/dn930930)</ept> property of the <bpt id="p4">[</bpt><bpt id="p5">**</bpt>CurrentMediaPlaybackItemChangedEventArgs<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/dn930929)</ept> object passed into the event.</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Remember that if you update the UI from this event, you should do so within a call to <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CoreDispatcher.RunAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh750317)</ept> so that the updates are made on the UI thread.</source>
          <target state="new">Remember that if you update the UI from this event, you should do so within a call to <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CoreDispatcher.RunAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh750317)</ept> so that the updates are made on the UI thread.</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>MediaPlaybackListItemChanged</source>
          <target state="new">MediaPlaybackListItemChanged</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Call <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MovePrevious<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/mt146455)</ept> or <bpt id="p3">[</bpt><bpt id="p4">**</bpt>MoveNext<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/mt146454)</ept> to cause the media player to play the previous or next item in your <bpt id="p5">**</bpt>MediaPlaybackList<ept id="p5">**</ept>.</source>
          <target state="new">Call <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MovePrevious<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/mt146455)</ept> or <bpt id="p3">[</bpt><bpt id="p4">**</bpt>MoveNext<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/mt146454)</ept> to cause the media player to play the previous or next item in your <bpt id="p5">**</bpt>MediaPlaybackList<ept id="p5">**</ept>.</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>PrevButton</source>
          <target state="new">PrevButton</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>NextButton</source>
          <target state="new">NextButton</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Set the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ShuffleEnabled<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/mt146457)</ept> property to specify whether the media player should play the items in your list in random order.</source>
          <target state="new">Set the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ShuffleEnabled<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/mt146457)</ept> property to specify whether the media player should play the items in your list in random order.</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>ShuffleButton</source>
          <target state="new">ShuffleButton</target>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Set the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>AutoRepeatEnabled<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/mt146452)</ept> property to specify whether the media player should loop playback of your list.</source>
          <target state="new">Set the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>AutoRepeatEnabled<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/mt146452)</ept> property to specify whether the media player should loop playback of your list.</target>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>RepeatButton</source>
          <target state="new">RepeatButton</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>