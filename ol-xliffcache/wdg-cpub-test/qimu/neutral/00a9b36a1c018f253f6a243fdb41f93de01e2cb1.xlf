<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci2\gaming\tutorial--create-your-first-metro-style-directx-game.md</xliffext:olfilepath>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">00a9b36a1c018f253f6a243fdb41f93de01e2cb1</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-e58fd48" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Create a simple Universal Windows Platform (UWP) game with DirectX</source>
          <target state="new">Create a simple Universal Windows Platform (UWP) game with DirectX</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>In this set of tutorials, you learn how to create a basic Universal Windows Platform (UWP) game with DirectX and C++.</source>
          <target state="new">In this set of tutorials, you learn how to create a basic Universal Windows Platform (UWP) game with DirectX and C++.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Create a simple Universal Windows Platform (UWP) game with DirectX</source>
          <target state="new">Create a simple Universal Windows Platform (UWP) game with DirectX</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Updated for UWP apps on Windows 10.</source>
          <target state="new">Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept></source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept></target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>In this set of tutorials, you learn how to create a basic Universal Windows Platform (UWP) game with DirectX and C++.</source>
          <target state="new">In this set of tutorials, you learn how to create a basic Universal Windows Platform (UWP) game with DirectX and C++.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>We cover all the major parts of a game, including the processes for loading assets such as arts and meshes, creating a main game loop, implementing a simple rendering pipeline, and adding sound and controls.</source>
          <target state="new">We cover all the major parts of a game, including the processes for loading assets such as arts and meshes, creating a main game loop, implementing a simple rendering pipeline, and adding sound and controls.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>We show you the UWP game development techniques and considerations.</source>
          <target state="new">We show you the UWP game development techniques and considerations.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>We don't provide a complete end-to-end game.</source>
          <target state="new">We don't provide a complete end-to-end game.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Rather, we focus on key UWP DirectX game development concepts, and call out Windows Runtime specific considerations around those concepts.</source>
          <target state="new">Rather, we focus on key UWP DirectX game development concepts, and call out Windows Runtime specific considerations around those concepts.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Objective</source>
          <target state="new">Objective</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To use the basic concepts and components of a UWP DirectX game, and to become more comfortable designing UWP games with DirectX.</source>
          <target state="new">To use the basic concepts and components of a UWP DirectX game, and to become more comfortable designing UWP games with DirectX.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>What you need to know before starting</source>
          <target state="new">What you need to know before starting</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Before we get started with this tutorial, you need to be familiar with these subjects.</source>
          <target state="new">Before we get started with this tutorial, you need to be familiar with these subjects.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Microsoft C++ with Component Extensions (C++/CX).</source>
          <target state="new">Microsoft C++ with Component Extensions (C++/CX).</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This is an update to Microsoft C++ that incorporates automatic reference counting, and is the language for developing a UWP games with DirectX 11.1 or later versions.</source>
          <target state="new">This is an update to Microsoft C++ that incorporates automatic reference counting, and is the language for developing a UWP games with DirectX 11.1 or later versions.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Basic linear algebra and Newtonian physics concepts.</source>
          <target state="new">Basic linear algebra and Newtonian physics concepts.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Basic graphics programming terminology.</source>
          <target state="new">Basic graphics programming terminology.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Basic Windows programming concepts.</source>
          <target state="new">Basic Windows programming concepts.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Basic familiarity with the <bpt id="p1">[</bpt>Direct2D<ept id="p1">](https://msdn.microsoft.com/en-us/library/windows/apps/dd370990.aspx)</ept> and <bpt id="p2">[</bpt>Direct3D 11<ept id="p2">](https://msdn.microsoft.com/library/windows/desktop/hh404569)</ept> APIs.</source>
          <target state="new">Basic familiarity with the <bpt id="p1">[</bpt>Direct2D<ept id="p1">](https://msdn.microsoft.com/en-us/library/windows/apps/dd370990.aspx)</ept> and <bpt id="p2">[</bpt>Direct3D 11<ept id="p2">](https://msdn.microsoft.com/library/windows/desktop/hh404569)</ept> APIs.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The Windows Store Direct3D shooting game sample</source>
          <target state="new">The Windows Store Direct3D shooting game sample</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This sample implements a simple first-person shooting gallery, where the player fires balls at moving targets.</source>
          <target state="new">This sample implements a simple first-person shooting gallery, where the player fires balls at moving targets.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Hitting each target awards a set number of points, and the player can progress through 6 levels of increasing challenge.</source>
          <target state="new">Hitting each target awards a set number of points, and the player can progress through 6 levels of increasing challenge.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>At the end of the levels, the points are tallied, and the player is awarded a final score.</source>
          <target state="new">At the end of the levels, the points are tallied, and the player is awarded a final score.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The sample demonstrates the game concepts:</source>
          <target state="new">The sample demonstrates the game concepts:</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Interoperation between DirectX 11.1 and the Windows Runtime</source>
          <target state="new">Interoperation between DirectX 11.1 and the Windows Runtime</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A first-person 3D perspective and camera</source>
          <target state="new">A first-person 3D perspective and camera</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Stereoscopic 3D effects</source>
          <target state="new">Stereoscopic 3D effects</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Collision detection between objects in 3D</source>
          <target state="new">Collision detection between objects in 3D</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Handling player input for mouse, touch, and Xbox 360 controller controls</source>
          <target state="new">Handling player input for mouse, touch, and Xbox 360 controller controls</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Audio mixing and playback</source>
          <target state="new">Audio mixing and playback</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>A basic game state machine</source>
          <target state="new">A basic game state machine</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>the game sample in action</source>
          <target state="new">the game sample in action</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Topic</source>
          <target state="new">Topic</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="new">Description</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Set up the game project</source>
          <target state="new">Set up the game project</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The first step in assembling your game is to set up a project in Microsoft Visual Studio in such a way that you minimize the amount of code infrastructure work you need to do.</source>
          <target state="new">The first step in assembling your game is to set up a project in Microsoft Visual Studio in such a way that you minimize the amount of code infrastructure work you need to do.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>You can save yourself a lot of time and hassle by using the right template and configuring the project specifically for game development.</source>
          <target state="new">You can save yourself a lot of time and hassle by using the right template and configuring the project specifically for game development.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>We step you through the setup and configuration of a simple game project.</source>
          <target state="new">We step you through the setup and configuration of a simple game project.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Define the game's UWP app framework</source>
          <target state="new">Define the game's UWP app framework</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The first part of coding a UWP with DirectX game is building the framework that lets the game object interact with Windows.</source>
          <target state="new">The first part of coding a UWP with DirectX game is building the framework that lets the game object interact with Windows.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>This includes Windows Runtime properties like suspend/resume event handling, window focus, and snapping, plus as the events, interactions and transitions for the user interface.</source>
          <target state="new">This includes Windows Runtime properties like suspend/resume event handling, window focus, and snapping, plus as the events, interactions and transitions for the user interface.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>We go over how the sample game is structured, and how it defines the high-level state machine for the player and system interaction.</source>
          <target state="new">We go over how the sample game is structured, and how it defines the high-level state machine for the player and system interaction.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Define the main game object</source>
          <target state="new">Define the main game object</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Now, we look at the details of the game sample's main object and how the rules it implements translate into interactions with the game world.</source>
          <target state="new">Now, we look at the details of the game sample's main object and how the rules it implements translate into interactions with the game world.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Assemble the rendering framework</source>
          <target state="new">Assemble the rendering framework</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Now, it's time to look at how the sample game uses that structure and state to display its graphics.</source>
          <target state="new">Now, it's time to look at how the sample game uses that structure and state to display its graphics.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Here, we look at how to implement a rendering framework, starting from the initialization of the graphics device through the presentation of the graphics objects for display.</source>
          <target state="new">Here, we look at how to implement a rendering framework, starting from the initialization of the graphics device through the presentation of the graphics objects for display.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Add a user interface</source>
          <target state="new">Add a user interface</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>You've seen how the sample game implements the main game object as well as the basic rendering framework.</source>
          <target state="new">You've seen how the sample game implements the main game object as well as the basic rendering framework.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Now, let's look at how the sample game provides feedback about game state to the player.</source>
          <target state="new">Now, let's look at how the sample game provides feedback about game state to the player.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Here, you learn how you can add simple menu options and heads-up display components on top of the 3-D graphics pipeline output.</source>
          <target state="new">Here, you learn how you can add simple menu options and heads-up display components on top of the 3-D graphics pipeline output.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Add controls</source>
          <target state="new">Add controls</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Now, we take a look at how the game sample implements move-look controls in a 3-D game, and how to develop basic touch, mouse, and game controller controls.</source>
          <target state="new">Now, we take a look at how the game sample implements move-look controls in a 3-D game, and how to develop basic touch, mouse, and game controller controls.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Add sound</source>
          <target state="new">Add sound</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>In this step, we examine how the shooting game sample creates an object for sound playback using the <bpt id="p1">[</bpt>XAudio2<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ee415813)</ept> APIs.</source>
          <target state="new">In this step, we examine how the shooting game sample creates an object for sound playback using the <bpt id="p1">[</bpt>XAudio2<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ee415813)</ept> APIs.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Extend the game sample</source>
          <target state="new">Extend the game sample</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Congratulations!</source>
          <target state="new">Congratulations!</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>At this point, you understand the key components of a basic UWP DirectX 3D game.</source>
          <target state="new">At this point, you understand the key components of a basic UWP DirectX 3D game.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>You can set up the framework for a game, including the view provider and rendering pipeline, and implement a basic game loop.</source>
          <target state="new">You can set up the framework for a game, including the view provider and rendering pipeline, and implement a basic game loop.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>You can also create a basic user interface overlay, and incorporate sounds and controls.</source>
          <target state="new">You can also create a basic user interface overlay, and incorporate sounds and controls.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>You're on your way to creating a game of your own, and here are some resources to further your knowledge of DirectX game development.</source>
          <target state="new">You're on your way to creating a game of your own, and here are some resources to further your knowledge of DirectX game development.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>