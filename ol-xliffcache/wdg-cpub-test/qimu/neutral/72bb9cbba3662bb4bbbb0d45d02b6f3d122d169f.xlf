<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci2\controls-and-patterns\app-bars.md</xliffext:olfilepath>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">72bb9cbba3662bb4bbbb0d45d02b6f3d122d169f</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-e58fd48" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>App bar and command bar</source>
          <target state="new">App bar and command bar</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Command bars (also called "app bars") provide users with easy access to your app's most common tasks, and can be used to show commands or options that are specific to the user's context, such as a photo selection or drawing mode.</source>
          <target state="new">Command bars (also called "app bars") provide users with easy access to your app's most common tasks, and can be used to show commands or options that are specific to the user's context, such as a photo selection or drawing mode.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>They can also be used for navigation among app pages or between app sections.</source>
          <target state="new">They can also be used for navigation among app pages or between app sections.</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Command bars can be used with any navigation pattern.</source>
          <target state="new">Command bars can be used with any navigation pattern.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Example of a command bar with icons</source>
          <target state="new">Example of a command bar with icons</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Important APIs</source>
          <target state="new">Important APIs</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>CommandBar</source>
          <target state="new">CommandBar</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>AppBarButton</source>
          <target state="new">AppBarButton</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>AppBarToggleButton</source>
          <target state="new">AppBarToggleButton</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>AppBarSeparator</source>
          <target state="new">AppBarSeparator</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Is this the right control</source>
          <target state="new">Is this the right control</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The CommandBar control is a general-purpose, flexible, light-weight control that can display both complex content, such as images, progress bars, or text blocks, as well as simple commands such as <bpt id="p1">[</bpt>AppBarButton<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.appbarbutton.aspx)</ept>, <bpt id="p2">[</bpt>AppBarToggleButton<ept id="p2">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.appbartogglebutton.aspx)</ept>, and <bpt id="p3">[</bpt>AppBarSeparator<ept id="p3">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.appbarseparator.aspx)</ept> controls.</source>
          <target state="new">The CommandBar control is a general-purpose, flexible, light-weight control that can display both complex content, such as images, progress bars, or text blocks, as well as simple commands such as <bpt id="p1">[</bpt>AppBarButton<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.appbarbutton.aspx)</ept>, <bpt id="p2">[</bpt>AppBarToggleButton<ept id="p2">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.appbartogglebutton.aspx)</ept>, and <bpt id="p3">[</bpt>AppBarSeparator<ept id="p3">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.appbarseparator.aspx)</ept> controls.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>XAML provides both the AppBar control and the CommandBar control.</source>
          <target state="new">XAML provides both the AppBar control and the CommandBar control.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You should use the AppBar only when you are upgrading a Universal Windows 8 app that uses the AppBar, and need to minimize changes.</source>
          <target state="new">You should use the AppBar only when you are upgrading a Universal Windows 8 app that uses the AppBar, and need to minimize changes.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For new apps in Windows 10, we recommend using the CommandBar control instead.</source>
          <target state="new">For new apps in Windows 10, we recommend using the CommandBar control instead.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This document assumes you are using the CommandBar control.</source>
          <target state="new">This document assumes you are using the CommandBar control.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="new">Examples</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A command bar in the Microsoft Edge browser.</source>
          <target state="new">A command bar in the Microsoft Edge browser.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Command bar in Microsoft Edge browser</source>
          <target state="new">Command bar in Microsoft Edge browser</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A command bar in the Outlook Calendar on Windows Phone.</source>
          <target state="new">A command bar in the Outlook Calendar on Windows Phone.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Command bar in Microsoft Edge browser</source>
          <target state="new">Command bar in Microsoft Edge browser</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>An inline command bar in the MediaTransportControls control template.</source>
          <target state="new">An inline command bar in the MediaTransportControls control template.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Command bar in Microsoft Edge browser</source>
          <target state="new">Command bar in Microsoft Edge browser</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Anatomy</source>
          <target state="new">Anatomy</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>By default, the command bar shows a row of icon buttons and a "see more" button, which is represented by an ellipsis <ph id="ph1">\[</ph>•••<ph id="ph2">\]</ph>.</source>
          <target state="new">By default, the command bar shows a row of icon buttons and a "see more" button, which is represented by an ellipsis <ph id="ph1">\[</ph>•••<ph id="ph2">\]</ph>.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Here's the command bar created by the example code shown later.</source>
          <target state="new">Here's the command bar created by the example code shown later.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>It's shown in its default, closed, compact state.</source>
          <target state="new">It's shown in its default, closed, compact state.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A closed command bar</source>
          <target state="new">A closed command bar</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The command bar can also be shown in a closed, minimal state that looks like this.</source>
          <target state="new">The command bar can also be shown in a closed, minimal state that looks like this.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>See the <bpt id="p1">[</bpt>Open and closed states<ept id="p1">](#open-and-closed-states)</ept> section for more info.</source>
          <target state="new">See the <bpt id="p1">[</bpt>Open and closed states<ept id="p1">](#open-and-closed-states)</ept> section for more info.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>A closed command bar</source>
          <target state="new">A closed command bar</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Here's the same command bar in its open state.</source>
          <target state="new">Here's the same command bar in its open state.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The labels identify the main parts of the control.</source>
          <target state="new">The labels identify the main parts of the control.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>A closed command bar</source>
          <target state="new">A closed command bar</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The command bar is divided into 4 main areas:</source>
          <target state="new">The command bar is divided into 4 main areas:</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The "see more" <ph id="ph1">\[</ph>•••<ph id="ph2">\]</ph> button is shown on the right of the bar, and is always visible.</source>
          <target state="new">The "see more" <ph id="ph1">\[</ph>•••<ph id="ph2">\]</ph> button is shown on the right of the bar, and is always visible.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Pressing the "see more" <ph id="ph1">\[</ph>•••<ph id="ph2">\]</ph> button has 2 effects: it reveals the labels on the primary command buttons, and it opens the overflow menu if any secondary commands are present.</source>
          <target state="new">Pressing the "see more" <ph id="ph1">\[</ph>•••<ph id="ph2">\]</ph> button has 2 effects: it reveals the labels on the primary command buttons, and it opens the overflow menu if any secondary commands are present.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The content area is aligned to the left side of the bar.</source>
          <target state="new">The content area is aligned to the left side of the bar.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>It is shown if the Content property is populated.</source>
          <target state="new">It is shown if the Content property is populated.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The primary command area is aligned to the right side of the bar, next to the "see more" <ph id="ph1">\[</ph>•••<ph id="ph2">\]</ph> button.</source>
          <target state="new">The primary command area is aligned to the right side of the bar, next to the "see more" <ph id="ph1">\[</ph>•••<ph id="ph2">\]</ph> button.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>It is shown if the PrimaryCommands property is populated.</source>
          <target state="new">It is shown if the PrimaryCommands property is populated.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The overflow menu is shown only when the command bar is open and the SecondaryCommands property is populated.</source>
          <target state="new">The overflow menu is shown only when the command bar is open and the SecondaryCommands property is populated.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The layout is reversed when the <bpt id="p1">[</bpt>FlowDirection<ept id="p1">]()</ept> is <bpt id="p2">**</bpt>RightToLeft<ept id="p2">**</ept>.</source>
          <target state="new">The layout is reversed when the <bpt id="p1">[</bpt>FlowDirection<ept id="p1">]()</ept> is <bpt id="p2">**</bpt>RightToLeft<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Create a command bar</source>
          <target state="new">Create a command bar</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>This example creates the command bar shown previously.</source>
          <target state="new">This example creates the command bar shown previously.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Commands and content</source>
          <target state="new">Commands and content</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The CommandBar control has 3 properties you can use to add commands and content: <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PrimaryCommands<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.commandbar.primarycommands.aspx)</ept>, <bpt id="p3">[</bpt><bpt id="p4">**</bpt>SecondaryCommands<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.commandbar.secondarycommands.aspx)</ept>, and <bpt id="p5">[</bpt><bpt id="p6">**</bpt>Content<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.contentcontrol.content.aspx)</ept>.</source>
          <target state="new">The CommandBar control has 3 properties you can use to add commands and content: <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PrimaryCommands<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.commandbar.primarycommands.aspx)</ept>, <bpt id="p3">[</bpt><bpt id="p4">**</bpt>SecondaryCommands<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.commandbar.secondarycommands.aspx)</ept>, and <bpt id="p5">[</bpt><bpt id="p6">**</bpt>Content<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.contentcontrol.content.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Give visiblity to the actions in the command bar based on their priority.</source>
          <target state="new">Give visiblity to the actions in the command bar based on their priority.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Primary actions and overflow</source>
          <target state="new">Primary actions and overflow</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>By default, items you add to the command bar are added to the <bpt id="p1">**</bpt>PrimaryCommands<ept id="p1">**</ept> collection.</source>
          <target state="new">By default, items you add to the command bar are added to the <bpt id="p1">**</bpt>PrimaryCommands<ept id="p1">**</ept> collection.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>These commands are shown to the left of the "see more" <ph id="ph1">\[</ph>•••<ph id="ph2">\]</ph> button, in what we call the action space.</source>
          <target state="new">These commands are shown to the left of the "see more" <ph id="ph1">\[</ph>•••<ph id="ph2">\]</ph> button, in what we call the action space.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Place the most important commands, the ones that you want to remain visible in the bar, in the action space.</source>
          <target state="new">Place the most important commands, the ones that you want to remain visible in the bar, in the action space.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>On the smallest screens (320 epx width), between 2-4 items will fit in the command bar's action space, depending on other on-screen UI.</source>
          <target state="new">On the smallest screens (320 epx width), between 2-4 items will fit in the command bar's action space, depending on other on-screen UI.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>You can add commands to the <bpt id="p1">**</bpt>SecondaryCommands<ept id="p1">**</ept> collection, and these items are shown in the overflow area.</source>
          <target state="new">You can add commands to the <bpt id="p1">**</bpt>SecondaryCommands<ept id="p1">**</ept> collection, and these items are shown in the overflow area.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Place less important commands within the overflow area.</source>
          <target state="new">Place less important commands within the overflow area.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The default overflow area is styled to be distinct from the bar.</source>
          <target state="new">The default overflow area is styled to be distinct from the bar.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>You can adjust the styling by setting the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CommandBarOverflowPresenterStyle<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.commandbar.commandbaroverflowpresenterstyle.aspx)</ept> property to a <bpt id="p3">[</bpt>Style<ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.style.aspx)</ept> that targets the <bpt id="p4">[</bpt><bpt id="p5">**</bpt>CommandBarOverflowPresenter<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.commandbaroverflowpresenter.aspx)</ept>.</source>
          <target state="new">You can adjust the styling by setting the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CommandBarOverflowPresenterStyle<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.commandbar.commandbaroverflowpresenterstyle.aspx)</ept> property to a <bpt id="p3">[</bpt>Style<ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.style.aspx)</ept> that targets the <bpt id="p4">[</bpt><bpt id="p5">**</bpt>CommandBarOverflowPresenter<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.commandbaroverflowpresenter.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>You can programmatically move commands between the PrimaryCommands and SecondaryCommands as needed.</source>
          <target state="new">You can programmatically move commands between the PrimaryCommands and SecondaryCommands as needed.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>However, commands do not automatically move into or out of the overflow area as the command bar width changes.</source>
          <target state="new">However, commands do not automatically move into or out of the overflow area as the command bar width changes.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>App bar buttons</source>
          <target state="new">App bar buttons</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Both the PrimaryCommands and SecondaryCommands can be populated only with <bpt id="p1">[</bpt><bpt id="p2">**</bpt>AppBarButton<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.appbarbutton.aspx)</ept>, <bpt id="p3">[</bpt><bpt id="p4">**</bpt>AppBarToggleButton<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.appbartogglebutton.aspx)</ept>, and <bpt id="p5">[</bpt><bpt id="p6">**</bpt>AppBarSeparator<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.appbarseparator.aspx)</ept> command elements.</source>
          <target state="new">Both the PrimaryCommands and SecondaryCommands can be populated only with <bpt id="p1">[</bpt><bpt id="p2">**</bpt>AppBarButton<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.appbarbutton.aspx)</ept>, <bpt id="p3">[</bpt><bpt id="p4">**</bpt>AppBarToggleButton<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.appbartogglebutton.aspx)</ept>, and <bpt id="p5">[</bpt><bpt id="p6">**</bpt>AppBarSeparator<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.appbarseparator.aspx)</ept> command elements.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>These controls are optimized for use in a command bar, and their appearance changes depending on whether the control is used in the action space or overflow area.</source>
          <target state="new">These controls are optimized for use in a command bar, and their appearance changes depending on whether the control is used in the action space or overflow area.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The app bar button controls are characterized by an icon and associated label.</source>
          <target state="new">The app bar button controls are characterized by an icon and associated label.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>They have two sizes; normal and compact.</source>
          <target state="new">They have two sizes; normal and compact.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>By default, the text label is shown.</source>
          <target state="new">By default, the text label is shown.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>When the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IsCompact<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.appbarbutton.iscompact.aspx)</ept> property is set to <bpt id="p3">**</bpt>true<ept id="p3">**</ept>, the text label is hidden.</source>
          <target state="new">When the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IsCompact<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.appbarbutton.iscompact.aspx)</ept> property is set to <bpt id="p3">**</bpt>true<ept id="p3">**</ept>, the text label is hidden.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>When used in a CommandBar control, the command bar sets the button's IsCompact property automatically as the command bar is opened and closed.</source>
          <target state="new">When used in a CommandBar control, the command bar sets the button's IsCompact property automatically as the command bar is opened and closed.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>When you place an app bar button in the overflow menu (SecondaryCommands), it's shown as text only.</source>
          <target state="new">When you place an app bar button in the overflow menu (SecondaryCommands), it's shown as text only.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Here's the same app bar toggle button shown in the action space as a primary command (top), and in the overflow area as a secondary command (bottom).</source>
          <target state="new">Here's the same app bar toggle button shown in the action space as a primary command (top), and in the overflow area as a secondary command (bottom).</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>App bar button as primary and secondary command</source>
          <target state="new">App bar button as primary and secondary command</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>If there is a command that would appear consistently across pages, it's best to keep that command in a consistent location.</source>
          <target state="new">If there is a command that would appear consistently across pages, it's best to keep that command in a consistent location.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>We recommended placing Accept, Yes, and OK commands to the left of Reject, No, and Cancel.</source>
          <target state="new">We recommended placing Accept, Yes, and OK commands to the left of Reject, No, and Cancel.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Consistency gives users the confidence to move around the system and helps them transfer their knowledge of app navigation from app to app.</source>
          <target state="new">Consistency gives users the confidence to move around the system and helps them transfer their knowledge of app navigation from app to app.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Other content</source>
          <target state="new">Other content</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>You can add any XAML elements to the content area by setting the <bpt id="p1">**</bpt>Content<ept id="p1">**</ept> property.</source>
          <target state="new">You can add any XAML elements to the content area by setting the <bpt id="p1">**</bpt>Content<ept id="p1">**</ept> property.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>If you want to add more than one element, you need to place them in a panel container and make the panel the single child of the Content property.</source>
          <target state="new">If you want to add more than one element, you need to place them in a panel container and make the panel the single child of the Content property.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>When there are both primary commands and content, the primary commands take precedence and may cause the content to be clipped.</source>
          <target state="new">When there are both primary commands and content, the primary commands take precedence and may cause the content to be clipped.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>When the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ClosedDisplayMode<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.appbar.closeddisplaymode.aspx)</ept> is <bpt id="p3">**</bpt>Compact<ept id="p3">**</ept>, the content can be clipped if it is larger than the compact size of the command bar.</source>
          <target state="new">When the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ClosedDisplayMode<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.appbar.closeddisplaymode.aspx)</ept> is <bpt id="p3">**</bpt>Compact<ept id="p3">**</ept>, the content can be clipped if it is larger than the compact size of the command bar.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>You should handle the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Opening<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.appbar.opening.aspx)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Closed<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.appbar.closed.aspx)</ept> events to show or hide parts of the UI in the content area so that they aren't clipped.</source>
          <target state="new">You should handle the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Opening<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.appbar.opening.aspx)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Closed<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.appbar.closed.aspx)</ept> events to show or hide parts of the UI in the content area so that they aren't clipped.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>See the <bpt id="p1">[</bpt>Open and closed states<ept id="p1">](#open-and-closed-states)</ept> section for more info.</source>
          <target state="new">See the <bpt id="p1">[</bpt>Open and closed states<ept id="p1">](#open-and-closed-states)</ept> section for more info.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Labels and tooltips</source>
          <target state="new">Labels and tooltips</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>If a text label for an app bar button is too long to fit on one line it will wrap to another line, increasing the overall height of the bar when it's opened.</source>
          <target state="new">If a text label for an app bar button is too long to fit on one line it will wrap to another line, increasing the overall height of the bar when it's opened.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>You can include a soft-hyphen character (0x00AD) in the text for a label to hint at the character boundary where a word break should occur.</source>
          <target state="new">You can include a soft-hyphen character (0x00AD) in the text for a label to hint at the character boundary where a word break should occur.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>In XAML, you express this using an escape sequence, like this:</source>
          <target state="new">In XAML, you express this using an escape sequence, like this:</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>When the label wraps at the hinted location, it looks like this.</source>
          <target state="new">When the label wraps at the hinted location, it looks like this.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>App bar button with wrapping label</source>
          <target state="new">App bar button with wrapping label</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Because text labels are hidden for command bar actions unless "see more" <ph id="ph1">\[</ph>•••<ph id="ph2">\]</ph> is pressed, consider using tooltips for action icons.</source>
          <target state="new">Because text labels are hidden for command bar actions unless "see more" <ph id="ph1">\[</ph>•••<ph id="ph2">\]</ph> is pressed, consider using tooltips for action icons.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>This makes it easier for mouse users to discover your intent.</source>
          <target state="new">This makes it easier for mouse users to discover your intent.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Open and closed states</source>
          <target state="new">Open and closed states</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The command bar can be open or closed.</source>
          <target state="new">The command bar can be open or closed.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>A user can switch between these states by pressing the "see more" <ph id="ph1">\[</ph>•••<ph id="ph2">\]</ph> button.</source>
          <target state="new">A user can switch between these states by pressing the "see more" <ph id="ph1">\[</ph>•••<ph id="ph2">\]</ph> button.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>You can switch between them programmatically by setting the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IsOpen<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.appbar.isopen.aspx)</ept> property.</source>
          <target state="new">You can switch between them programmatically by setting the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IsOpen<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.appbar.isopen.aspx)</ept> property.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>When open, the primary command buttons are shown with text labels and the overflow menu is open if secondary commands are present, as shown previously.</source>
          <target state="new">When open, the primary command buttons are shown with text labels and the overflow menu is open if secondary commands are present, as shown previously.</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Opening<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.appbar.opening.aspx)</ept>, <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Opened<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.appbar.opened.aspx)</ept>, <bpt id="p5">[</bpt><bpt id="p6">**</bpt>Closing<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.appbar.closing.aspx)</ept>, and <bpt id="p7">[</bpt><bpt id="p8">**</bpt>Closed<ept id="p8">**</ept><ept id="p7">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.appbar.closed.aspx)</ept> events to respond to the command bar being opened or closed.</source>
          <target state="new">You can use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Opening<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.appbar.opening.aspx)</ept>, <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Opened<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.appbar.opened.aspx)</ept>, <bpt id="p5">[</bpt><bpt id="p6">**</bpt>Closing<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.appbar.closing.aspx)</ept>, and <bpt id="p7">[</bpt><bpt id="p8">**</bpt>Closed<ept id="p8">**</ept><ept id="p7">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.appbar.closed.aspx)</ept> events to respond to the command bar being opened or closed.</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The Opening and Closing events occur before the transition animation begins.</source>
          <target state="new">The Opening and Closing events occur before the transition animation begins.</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The Opened and Closed events occur after the transition completes.</source>
          <target state="new">The Opened and Closed events occur after the transition completes.</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>In this example, the Opening and Closing events are used to change the opacity of the command bar.</source>
          <target state="new">In this example, the Opening and Closing events are used to change the opacity of the command bar.</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>When the command bar is closed, it's semi-transparent so the app background shows through.</source>
          <target state="new">When the command bar is closed, it's semi-transparent so the app background shows through.</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>When the command bar is opened, the command bar is made opaque so the user can focus on the commands.</source>
          <target state="new">When the command bar is opened, the command bar is made opaque so the user can focus on the commands.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>ClosedDisplayMode</source>
          <target state="new">ClosedDisplayMode</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>You can control how the command bar is shown in its closed state by setting the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ClosedDisplayMode<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.appbar.closeddisplaymode.aspx)</ept> property.</source>
          <target state="new">You can control how the command bar is shown in its closed state by setting the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ClosedDisplayMode<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.appbar.closeddisplaymode.aspx)</ept> property.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>There are 3 closed display modes to choose from:</source>
          <target state="new">There are 3 closed display modes to choose from:</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Compact<ept id="p1">**</ept>: The default mode.</source>
          <target state="new"><bpt id="p1">**</bpt>Compact<ept id="p1">**</ept>: The default mode.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Shows content, primary command icons without labels, and the "see more" <ph id="ph1">\[</ph>•••<ph id="ph2">\]</ph> button.</source>
          <target state="new">Shows content, primary command icons without labels, and the "see more" <ph id="ph1">\[</ph>•••<ph id="ph2">\]</ph> button.</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Minimal<ept id="p1">**</ept>: Shows only a thin bar that acts as the "see more" <ph id="ph1">\[</ph>•••<ph id="ph2">\]</ph> button.</source>
          <target state="new"><bpt id="p1">**</bpt>Minimal<ept id="p1">**</ept>: Shows only a thin bar that acts as the "see more" <ph id="ph1">\[</ph>•••<ph id="ph2">\]</ph> button.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The user can press anywhere on the bar to open it.</source>
          <target state="new">The user can press anywhere on the bar to open it.</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Hidden<ept id="p1">**</ept>: The command bar is not shown when it's closed.</source>
          <target state="new"><bpt id="p1">**</bpt>Hidden<ept id="p1">**</ept>: The command bar is not shown when it's closed.</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>This can be useful for showing contextual commands with an inline command bar.</source>
          <target state="new">This can be useful for showing contextual commands with an inline command bar.</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>In this case, you must open the command bar programmatically by setting the <bpt id="p1">**</bpt>IsOpen<ept id="p1">**</ept> property or changing the ClosedDisplayMode to <bpt id="p2">**</bpt>Minimal<ept id="p2">**</ept> or <bpt id="p3">**</bpt>Compact<ept id="p3">**</ept>.</source>
          <target state="new">In this case, you must open the command bar programmatically by setting the <bpt id="p1">**</bpt>IsOpen<ept id="p1">**</ept> property or changing the ClosedDisplayMode to <bpt id="p2">**</bpt>Minimal<ept id="p2">**</ept> or <bpt id="p3">**</bpt>Compact<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Here, a command bar is used to hold simple formatting commands for a <bpt id="p1">[</bpt>RichEditBox<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.richeditbox.aspx)</ept>.</source>
          <target state="new">Here, a command bar is used to hold simple formatting commands for a <bpt id="p1">[</bpt>RichEditBox<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.richeditbox.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>When the edit box doesn't have focus, the formatting commands can be distracting, so they're hidden.</source>
          <target state="new">When the edit box doesn't have focus, the formatting commands can be distracting, so they're hidden.</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>When the edit box is being used, the command bar's ClosedDisplayMode is changed to Compact so the formatting commands are visible.</source>
          <target state="new">When the edit box is being used, the command bar's ClosedDisplayMode is changed to Compact so the formatting commands are visible.</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept><ph id="ph1">&amp;nbsp;&amp;nbsp;</ph>The implementation of the editing commands is beyond the scope of this example.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept><ph id="ph1">&amp;nbsp;&amp;nbsp;</ph>The implementation of the editing commands is beyond the scope of this example.</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>For more info, see the <bpt id="p1">[</bpt>RichEditBox<ept id="p1">](rich-edit-box.md)</ept> article.</source>
          <target state="new">For more info, see the <bpt id="p1">[</bpt>RichEditBox<ept id="p1">](rich-edit-box.md)</ept> article.</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Although the Minimal and Hidden modes are useful in some situations, keep in mind that hiding all actions could confuse users.</source>
          <target state="new">Although the Minimal and Hidden modes are useful in some situations, keep in mind that hiding all actions could confuse users.</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Changing the ClosedDisplayMode to provide more or less of a hint to the user affects the layout of surrounding elements.</source>
          <target state="new">Changing the ClosedDisplayMode to provide more or less of a hint to the user affects the layout of surrounding elements.</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>In contrast, when the CommandBar transitions between closed and open, it does not affect the layout of other elements.</source>
          <target state="new">In contrast, when the CommandBar transitions between closed and open, it does not affect the layout of other elements.</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>IsSticky</source>
          <target state="new">IsSticky</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>After opening the command bar, if the user interacts with the app anywhere outside of the control then by default the overflow menu is dismissed and the labels are hidden.</source>
          <target state="new">After opening the command bar, if the user interacts with the app anywhere outside of the control then by default the overflow menu is dismissed and the labels are hidden.</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Closing it in this way is called <bpt id="p1">*</bpt>light dismiss<ept id="p1">*</ept>.</source>
          <target state="new">Closing it in this way is called <bpt id="p1">*</bpt>light dismiss<ept id="p1">*</ept>.</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>You can control how the bar is dismissed by setting the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IsSticky<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.appbar.issticky.aspx)</ept> property.</source>
          <target state="new">You can control how the bar is dismissed by setting the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IsSticky<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.appbar.issticky.aspx)</ept> property.</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>When the bar is sticky (<ph id="ph1">`IsSticky="true"`</ph>), it's not closed by a light dismiss gesture.</source>
          <target state="new">When the bar is sticky (<ph id="ph1">`IsSticky="true"`</ph>), it's not closed by a light dismiss gesture.</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The bar remains open until the user presses the "see more" <ph id="ph1">\[</ph>•••<ph id="ph2">\]</ph> button or, if present, selects an item from the overflow menu.</source>
          <target state="new">The bar remains open until the user presses the "see more" <ph id="ph1">\[</ph>•••<ph id="ph2">\]</ph> button or, if present, selects an item from the overflow menu.</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Recommendations</source>
          <target state="new">Recommendations</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Placement</source>
          <target state="new">Placement</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Command bars can be placed at the top of the app window, at the bottom of the app window, and inline.</source>
          <target state="new">Command bars can be placed at the top of the app window, at the bottom of the app window, and inline.</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Example 1 of app bar placement</source>
          <target state="new">Example 1 of app bar placement</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>For mobile devices, if you're placing just one command bar in your app, put it at the bottom of the screen for easy reachability.</source>
          <target state="new">For mobile devices, if you're placing just one command bar in your app, put it at the bottom of the screen for easy reachability.</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>If your app has tabs on the bottom, consider placing the command bar at the top so that the UI isn't too bottom-heavy.</source>
          <target state="new">If your app has tabs on the bottom, consider placing the command bar at the top so that the UI isn't too bottom-heavy.</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>For larger screens, if you're placing just one command bar, we recommend placing it at the top of the screen.</source>
          <target state="new">For larger screens, if you're placing just one command bar, we recommend placing it at the top of the screen.</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>You can also place command bars inline, so that people can use them for contextual actions.</source>
          <target state="new">You can also place command bars inline, so that people can use them for contextual actions.</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Command bars can be placed in the following screen regions on single-view screens (left example) and on multi-view screens (right example).</source>
          <target state="new">Command bars can be placed in the following screen regions on single-view screens (left example) and on multi-view screens (right example).</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Inline command bars can be placed anywhere in the action space.</source>
          <target state="new">Inline command bars can be placed anywhere in the action space.</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Example 2 of app bar placement</source>
          <target state="new">Example 2 of app bar placement</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Mobile Device Family<ept id="p1">**</ept>: If the command bar must remain visible to a user when the touch keyboard, or Soft Input Panel (SIP), appears then you can assign the command bar to the BottomAppBar property of a Page and it will move to remain visible when the SIP is present.</source>
          <target state="new"><bpt id="p1">**</bpt>Mobile Device Family<ept id="p1">**</ept>: If the command bar must remain visible to a user when the touch keyboard, or Soft Input Panel (SIP), appears then you can assign the command bar to the BottomAppBar property of a Page and it will move to remain visible when the SIP is present.</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Otherwise, you should place the command bar inline and positioned relative to your app content.</source>
          <target state="new">Otherwise, you should place the command bar inline and positioned relative to your app content.</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Where you place the command bar will influence things like whether you make it sticky, or use the minimal mode when it's closed.</source>
          <target state="new">Where you place the command bar will influence things like whether you make it sticky, or use the minimal mode when it's closed.</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Actions</source>
          <target state="new">Actions</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Prioritize the actions that go in the command bar based on their visibility.</source>
          <target state="new">Prioritize the actions that go in the command bar based on their visibility.</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Place the most important commands, the ones that you want to remain visible in the bar, in the first few slots of the action space.</source>
          <target state="new">Place the most important commands, the ones that you want to remain visible in the bar, in the first few slots of the action space.</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>On the smallest screens (320 epx width), between 2-4 items will fit in the command bar's action space, depending on other on-screen UI.</source>
          <target state="new">On the smallest screens (320 epx width), between 2-4 items will fit in the command bar's action space, depending on other on-screen UI.</target>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Place less-important commands later in the bar's action space or within the first few slots of the overflow area.</source>
          <target state="new">Place less-important commands later in the bar's action space or within the first few slots of the overflow area.</target>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>These commands will be visible when the bar has enough screen real estate, but will fall into the overflow area's drop-down menu when there isn't enough room.</source>
          <target state="new">These commands will be visible when the bar has enough screen real estate, but will fall into the overflow area's drop-down menu when there isn't enough room.</target>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Place the least-important commands within the overflow area.</source>
          <target state="new">Place the least-important commands within the overflow area.</target>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>These commands will always appear in the drop-down menu.</source>
          <target state="new">These commands will always appear in the drop-down menu.</target>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Items in the actions space can be visualized with either icons or buttons.</source>
          <target state="new">Items in the actions space can be visualized with either icons or buttons.</target>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>When only using icons, include a text label.</source>
          <target state="new">When only using icons, include a text label.</target>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>The text label appears under the icon when the "see more" <ph id="ph1">\[</ph>•••<ph id="ph2">\]</ph> button is pressed.</source>
          <target state="new">The text label appears under the icon when the "see more" <ph id="ph1">\[</ph>•••<ph id="ph2">\]</ph> button is pressed.</target>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>If there is a command that would appear consistently across pages, it's best to keep that command in a consistent location.</source>
          <target state="new">If there is a command that would appear consistently across pages, it's best to keep that command in a consistent location.</target>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>We recommended placing Accept, Yes, and OK commands to the left of Reject, No, and Cancel.</source>
          <target state="new">We recommended placing Accept, Yes, and OK commands to the left of Reject, No, and Cancel.</target>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Consistency gives users the confidence to move around the system and helps them transfer their knowledge of app navigation from app to app.</source>
          <target state="new">Consistency gives users the confidence to move around the system and helps them transfer their knowledge of app navigation from app to app.</target>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Although you can place all actions within the overflow area so that only the "see more" <ph id="ph1">\[</ph>•••<ph id="ph2">\]</ph> button is visible on the command bar, keep in mind that hiding all actions could confuse users.</source>
          <target state="new">Although you can place all actions within the overflow area so that only the "see more" <ph id="ph1">\[</ph>•••<ph id="ph2">\]</ph> button is visible on the command bar, keep in mind that hiding all actions could confuse users.</target>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Command bar flyouts and tooltips</source>
          <target state="new">Command bar flyouts and tooltips</target>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Consider logical groupings for the commands, such as placing Reply, Reply All, and Forward in a Respond menu.</source>
          <target state="new">Consider logical groupings for the commands, such as placing Reply, Reply All, and Forward in a Respond menu.</target>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Example of flyouts on a command bar</source>
          <target state="new">Example of flyouts on a command bar</target>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Because text labels are hidden for command bar actions unless <ph id="ph1">\[</ph>•••<ph id="ph2">\]</ph> is selected, consider using tooltips for action icons.</source>
          <target state="new">Because text labels are hidden for command bar actions unless <ph id="ph1">\[</ph>•••<ph id="ph2">\]</ph> is selected, consider using tooltips for action icons.</target>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Overflow menu</source>
          <target state="new">Overflow menu</target>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Example of command bar with "More" area</source>
          <target state="new">Example of command bar with "More" area</target>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>The overflow menu is represented by the "see more" <ph id="ph1">\[</ph>•••<ph id="ph2">\]</ph> button, the visible entry point for the menu.</source>
          <target state="new">The overflow menu is represented by the "see more" <ph id="ph1">\[</ph>•••<ph id="ph2">\]</ph> button, the visible entry point for the menu.</target>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>It's on the far-right of the toolbar, adjacent to primary actions.</source>
          <target state="new">It's on the far-right of the toolbar, adjacent to primary actions.</target>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Each action in the primary action space is represented by an icon.</source>
          <target state="new">Each action in the primary action space is represented by an icon.</target>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Selecting the overflow menu reveals text labels for each of the actions in the primary action space.</source>
          <target state="new">Selecting the overflow menu reveals text labels for each of the actions in the primary action space.</target>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>The overflow area is allocated for actions that are less frequently used.</source>
          <target state="new">The overflow area is allocated for actions that are less frequently used.</target>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Actions can come and go between the primary action space and the overflow menu at breakpoints.</source>
          <target state="new">Actions can come and go between the primary action space and the overflow menu at breakpoints.</target>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>You can also designate actions to always remain in the primary action space regardless of screen or app window size.</source>
          <target state="new">You can also designate actions to always remain in the primary action space regardless of screen or app window size.</target>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Infrequently used actions can remain in the overflow menu even when the app bar is expanded on larger screens.</source>
          <target state="new">Infrequently used actions can remain in the overflow menu even when the app bar is expanded on larger screens.</target>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Responsive guidance</source>
          <target state="new">Responsive guidance</target>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The same number of actions in the app bar should be visible in both portrait and landscape orientation, which reduces the user's cognitive load.</source>
          <target state="new">The same number of actions in the app bar should be visible in both portrait and landscape orientation, which reduces the user's cognitive load.</target>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>The number of actions available should be determined by the device's width in portrait orientation.</source>
          <target state="new">The number of actions available should be determined by the device's width in portrait orientation.</target>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>By targeting breakpoints, you can move actions in and out of the menu as the screen size or app window size changes.</source>
          <target state="new">By targeting breakpoints, you can move actions in and out of the menu as the screen size or app window size changes.</target>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Related articles</source>
          <target state="new">Related articles</target>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>For designers<ept id="p1">**</ept><ph id="ph1">
</ph><bpt id="p2">[</bpt>Command design basics for UWP apps<ept id="p2">](https://msdn.microsoft.com/library/windows/apps/dn958433)</ept></source>
          <target state="new"><bpt id="p1">**</bpt>For designers<ept id="p1">**</ept><ph id="ph1">
</ph><bpt id="p2">[</bpt>Command design basics for UWP apps<ept id="p2">](https://msdn.microsoft.com/library/windows/apps/dn958433)</ept></target>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>For developers (XAML)<ept id="p1">**</ept><ph id="ph1">
</ph><bpt id="p2">[</bpt><bpt id="p3">**</bpt>CommandBar<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/dn279427)</ept></source>
          <target state="new"><bpt id="p1">**</bpt>For developers (XAML)<ept id="p1">**</ept><ph id="ph1">
</ph><bpt id="p2">[</bpt><bpt id="p3">**</bpt>CommandBar<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/dn279427)</ept></target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>