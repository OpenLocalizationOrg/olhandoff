<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci2\controls-and-patterns\text-box.md</xliffext:olfilepath>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">199e222c27ac89f23f54f756bb691ea9e72d0410</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-e58fd48" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Text box</source>
          <target state="new">Text box</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The TextBox control lets a user type text into an app.</source>
          <target state="new">The TextBox control lets a user type text into an app.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>It's typically used to capture a single line of text, but can be configured to capture multiple lines of text.</source>
          <target state="new">It's typically used to capture a single line of text, but can be configured to capture multiple lines of text.</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The text displays on the screen in a simple, uniform, plaintext format.</source>
          <target state="new">The text displays on the screen in a simple, uniform, plaintext format.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>TextBox has a number of features that can simplify text entry.</source>
          <target state="new">TextBox has a number of features that can simplify text entry.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>It comes with a familiar, built-in context menu with support for copying and pasting text.</source>
          <target state="new">It comes with a familiar, built-in context menu with support for copying and pasting text.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The "clear all" button lets a user quickly delete all text that has been entered.</source>
          <target state="new">The "clear all" button lets a user quickly delete all text that has been entered.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>It also has spell checking capabilities built in and enabled by default.</source>
          <target state="new">It also has spell checking capabilities built in and enabled by default.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Important APIs</source>
          <target state="new">Important APIs</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>TextBox class</source>
          <target state="new">TextBox class</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Text property</source>
          <target state="new">Text property</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Is this the right control?</source>
          <target state="new">Is this the right control?</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Use a <bpt id="p1">**</bpt>TextBox<ept id="p1">**</ept> control to let a user enter and edit unformatted text, such as in a form.</source>
          <target state="new">Use a <bpt id="p1">**</bpt>TextBox<ept id="p1">**</ept> control to let a user enter and edit unformatted text, such as in a form.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">[</bpt>Text<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textbox.text.aspx)</ept> property to get and set the text in a TextBox.</source>
          <target state="new">You can use the <bpt id="p1">[</bpt>Text<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textbox.text.aspx)</ept> property to get and set the text in a TextBox.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>You can make a TextBox read-only, but this should be a temporary, conditional state.</source>
          <target state="new">You can make a TextBox read-only, but this should be a temporary, conditional state.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If the text is never editable, consider using a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TextBlock<ept id="p2">**</ept><ept id="p1">](text-block.md)</ept> instead.</source>
          <target state="new">If the text is never editable, consider using a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TextBlock<ept id="p2">**</ept><ept id="p1">](text-block.md)</ept> instead.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Use a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PasswordBox<ept id="p2">**</ept><ept id="p1">](password-box.md)</ept> control to collect a password or other private data, such as a Social Security number.</source>
          <target state="new">Use a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PasswordBox<ept id="p2">**</ept><ept id="p1">](password-box.md)</ept> control to collect a password or other private data, such as a Social Security number.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A password box looks like a text input box, except that it renders bullets in place of the text that has been entered.</source>
          <target state="new">A password box looks like a text input box, except that it renders bullets in place of the text that has been entered.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Use an <bpt id="p1">[</bpt><bpt id="p2">**</bpt>AutoSuggestBox<ept id="p2">**</ept><ept id="p1">](auto-suggest-box.md)</ept> control to let the user enter search terms or to show the user a list of suggestions to choose from as they type.</source>
          <target state="new">Use an <bpt id="p1">[</bpt><bpt id="p2">**</bpt>AutoSuggestBox<ept id="p2">**</ept><ept id="p1">](auto-suggest-box.md)</ept> control to let the user enter search terms or to show the user a list of suggestions to choose from as they type.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Use a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>RichEditBox<ept id="p2">**</ept><ept id="p1">](rich-edit-box.md)</ept> to display and edit rich text files.</source>
          <target state="new">Use a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>RichEditBox<ept id="p2">**</ept><ept id="p1">](rich-edit-box.md)</ept> to display and edit rich text files.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For more info about choosing the right text control, see the <bpt id="p1">[</bpt>Text controls<ept id="p1">](text-controls.md)</ept> article.</source>
          <target state="new">For more info about choosing the right text control, see the <bpt id="p1">[</bpt>Text controls<ept id="p1">](text-controls.md)</ept> article.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="new">Examples</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>A text box</source>
          <target state="new">A text box</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Create a text box</source>
          <target state="new">Create a text box</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Here's the XAML for a simple text box with a header and placeholder text.</source>
          <target state="new">Here's the XAML for a simple text box with a header and placeholder text.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Here's the text box that results from this XAML.</source>
          <target state="new">Here's the text box that results from this XAML.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A simple text box</source>
          <target state="new">A simple text box</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Use a text box for data input in a form</source>
          <target state="new">Use a text box for data input in a form</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>It’s common to use a text box to accept data input on a form, and use the <bpt id="p1">[</bpt>Text<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textbox.text.aspx)</ept> property to get the complete text string from the text box.</source>
          <target state="new">It’s common to use a text box to accept data input on a form, and use the <bpt id="p1">[</bpt>Text<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textbox.text.aspx)</ept> property to get the complete text string from the text box.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>You typically use an event like a submit button click to access the Text property, but you can handle the <bpt id="p1">[</bpt>TextChanged<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textbox.textchanged.aspx)</ept> or <bpt id="p2">[</bpt>TextChanging<ept id="p2">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textbox.textchanging.aspx)</ept> event if you need to do something when the text changes.</source>
          <target state="new">You typically use an event like a submit button click to access the Text property, but you can handle the <bpt id="p1">[</bpt>TextChanged<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textbox.textchanged.aspx)</ept> or <bpt id="p2">[</bpt>TextChanging<ept id="p2">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textbox.textchanging.aspx)</ept> event if you need to do something when the text changes.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>You can add a <bpt id="p1">[</bpt>Header<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textbox.header.aspx)</ept> (or label) and <bpt id="p2">[</bpt>PlaceholderText<ept id="p2">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textbox.placeholdertext.aspx)</ept> (or watermark) to the text box to give the user an indication of what the text box is for.</source>
          <target state="new">You can add a <bpt id="p1">[</bpt>Header<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textbox.header.aspx)</ept> (or label) and <bpt id="p2">[</bpt>PlaceholderText<ept id="p2">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textbox.placeholdertext.aspx)</ept> (or watermark) to the text box to give the user an indication of what the text box is for.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>To customize the look of the header, you can set the <bpt id="p1">[</bpt>HeaderTemplate<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textbox.headertemplate.aspx)</ept> property instead of Header.</source>
          <target state="new">To customize the look of the header, you can set the <bpt id="p1">[</bpt>HeaderTemplate<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textbox.headertemplate.aspx)</ept> property instead of Header.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>For design info, see Guidelines for labels<ept id="p1">*</ept>.</source>
          <target state="new"><bpt id="p1">*</bpt>For design info, see Guidelines for labels<ept id="p1">*</ept>.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>You can restrict the number of characters the user can type by setting the <bpt id="p1">[</bpt>MaxLength<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textbox.maxlength.aspx)</ept> property.</source>
          <target state="new">You can restrict the number of characters the user can type by setting the <bpt id="p1">[</bpt>MaxLength<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textbox.maxlength.aspx)</ept> property.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>However, MaxLength does not restrict the length of pasted text.</source>
          <target state="new">However, MaxLength does not restrict the length of pasted text.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">[</bpt>Paste<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textbox.paste.aspx)</ept> event to modify pasted text if this is important for your app.</source>
          <target state="new">Use the <bpt id="p1">[</bpt>Paste<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textbox.paste.aspx)</ept> event to modify pasted text if this is important for your app.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The text box includes a clear all button ("X") that appears when text is entered in the box.</source>
          <target state="new">The text box includes a clear all button ("X") that appears when text is entered in the box.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>When a user clicks the "X", the text in the text box is cleared.</source>
          <target state="new">When a user clicks the "X", the text in the text box is cleared.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>It looks like this.</source>
          <target state="new">It looks like this.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>A text box with a clear all button</source>
          <target state="new">A text box with a clear all button</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The clear all button is shown only for editable, single-line text boxes that contain text and have focus.</source>
          <target state="new">The clear all button is shown only for editable, single-line text boxes that contain text and have focus.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The clear all button is not shown in any of these cases:</source>
          <target state="new">The clear all button is not shown in any of these cases:</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>IsReadOnly<ept id="p1">**</ept> is <bpt id="p2">**</bpt>true<ept id="p2">**</ept></source>
          <target state="new"><bpt id="p1">**</bpt>IsReadOnly<ept id="p1">**</ept> is <bpt id="p2">**</bpt>true<ept id="p2">**</ept></target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>AcceptsReturn<ept id="p1">**</ept> is <bpt id="p2">**</bpt>true<ept id="p2">**</ept></source>
          <target state="new"><bpt id="p1">**</bpt>AcceptsReturn<ept id="p1">**</ept> is <bpt id="p2">**</bpt>true<ept id="p2">**</ept></target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>TextWrap<ept id="p1">**</ept> has a value other than <bpt id="p2">**</bpt>NoWrap<ept id="p2">**</ept></source>
          <target state="new"><bpt id="p1">**</bpt>TextWrap<ept id="p1">**</ept> has a value other than <bpt id="p2">**</bpt>NoWrap<ept id="p2">**</ept></target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Make a text box read-only</source>
          <target state="new">Make a text box read-only</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>You can make a text box read-only by setting the <bpt id="p1">[</bpt>IsReadOnly<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textbox.isreadonly.aspx)</ept> property to <bpt id="p2">**</bpt>true<ept id="p2">**</ept>.</source>
          <target state="new">You can make a text box read-only by setting the <bpt id="p1">[</bpt>IsReadOnly<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textbox.isreadonly.aspx)</ept> property to <bpt id="p2">**</bpt>true<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>You typically toggle this property in your app code based on conditions in your app.</source>
          <target state="new">You typically toggle this property in your app code based on conditions in your app.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>If need text that is always read-only, consider using a TextBlock instead.</source>
          <target state="new">If need text that is always read-only, consider using a TextBlock instead.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>You can make a TextBox read-only by setting the IsReadOnly property to true.</source>
          <target state="new">You can make a TextBox read-only by setting the IsReadOnly property to true.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>For example, you might have a TextBox for a user to enter comments that is enabled only under certain conditions.</source>
          <target state="new">For example, you might have a TextBox for a user to enter comments that is enabled only under certain conditions.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>You can make the TextBox read-only until the conditions are met.</source>
          <target state="new">You can make the TextBox read-only until the conditions are met.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>If you need only to display text, consider using a TextBlock or RichTextBlock instead.</source>
          <target state="new">If you need only to display text, consider using a TextBlock or RichTextBlock instead.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>A read-only text box looks the same as a read/write text box, so it might be confusing to a user.</source>
          <target state="new">A read-only text box looks the same as a read/write text box, so it might be confusing to a user.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>A user can select and copy text.</source>
          <target state="new">A user can select and copy text.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>IsEnabled</source>
          <target state="new">IsEnabled</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Enable multi-line input</source>
          <target state="new">Enable multi-line input</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>There are two properties that you can use to control whether the TextBox displays text on more than one line.</source>
          <target state="new">There are two properties that you can use to control whether the TextBox displays text on more than one line.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>You typically set both properties to make a multi-line text box.</source>
          <target state="new">You typically set both properties to make a multi-line text box.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>To let the text box allow and display the newline or return characters, set the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>AcceptsReturn<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textbox.acceptsreturn.aspx)</ept> property to <bpt id="p3">**</bpt>true<ept id="p3">**</ept>.</source>
          <target state="new">To let the text box allow and display the newline or return characters, set the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>AcceptsReturn<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textbox.acceptsreturn.aspx)</ept> property to <bpt id="p3">**</bpt>true<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>To enable text wrapping, set the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TextWrapping<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textbox.textwrapping.aspx)</ept> property to <bpt id="p3">**</bpt>Wrap<ept id="p3">**</ept>.</source>
          <target state="new">To enable text wrapping, set the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TextWrapping<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textbox.textwrapping.aspx)</ept> property to <bpt id="p3">**</bpt>Wrap<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>This causes the text to wrap when it reaches the  edge of the text box, independent of line separator characters.</source>
          <target state="new">This causes the text to wrap when it reaches the  edge of the text box, independent of line separator characters.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept><ph id="ph1">&amp;nbsp;&amp;nbsp;</ph>TextBox and RichEditBox don't support the <bpt id="p2">**</bpt>WrapWholeWords<ept id="p2">**</ept> value for their TextWrapping properties.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept><ph id="ph1">&amp;nbsp;&amp;nbsp;</ph>TextBox and RichEditBox don't support the <bpt id="p2">**</bpt>WrapWholeWords<ept id="p2">**</ept> value for their TextWrapping properties.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>If you try to use WrapWholeWords as a value for TextBox.TextWrapping or RichEditBox.TextWrapping an invalid argument exception is thrown.</source>
          <target state="new">If you try to use WrapWholeWords as a value for TextBox.TextWrapping or RichEditBox.TextWrapping an invalid argument exception is thrown.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>A multi-line TextBox will continue to grow vertically as text is entered unless it’s constrained by its <bpt id="p1">[</bpt>Height<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.frameworkelement.height.aspx)</ept> or <bpt id="p2">[</bpt>MaxHeight<ept id="p2">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.frameworkelement.maxheight.aspx)</ept> property, or by a parent container.</source>
          <target state="new">A multi-line TextBox will continue to grow vertically as text is entered unless it’s constrained by its <bpt id="p1">[</bpt>Height<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.frameworkelement.height.aspx)</ept> or <bpt id="p2">[</bpt>MaxHeight<ept id="p2">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.frameworkelement.maxheight.aspx)</ept> property, or by a parent container.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>You should test that a multi-line text box doesn’t grow beyond its visible area, and constrain its growth if it does.</source>
          <target state="new">You should test that a multi-line text box doesn’t grow beyond its visible area, and constrain its growth if it does.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>We recommend that you always specify an appropriate height for a multi-line text box, and not let it grow in height as the user types.</source>
          <target state="new">We recommend that you always specify an appropriate height for a multi-line text box, and not let it grow in height as the user types.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Scrolling using a scroll-wheel or touch is automatically enabled when needed.</source>
          <target state="new">Scrolling using a scroll-wheel or touch is automatically enabled when needed.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>However, the vertical scrollbars are not visible by default.</source>
          <target state="new">However, the vertical scrollbars are not visible by default.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>You can show the vertical scrollbars by setting the <bpt id="p1">[</bpt>ScrollViewer.VerticalScrollBarVisibility<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.scrollviewer.verticalscrollbarvisibility.aspx)</ept> to <bpt id="p2">**</bpt>Auto<ept id="p2">**</ept> on the embedded ScrollViewer, as shown here.</source>
          <target state="new">You can show the vertical scrollbars by setting the <bpt id="p1">[</bpt>ScrollViewer.VerticalScrollBarVisibility<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.scrollviewer.verticalscrollbarvisibility.aspx)</ept> to <bpt id="p2">**</bpt>Auto<ept id="p2">**</ept> on the embedded ScrollViewer, as shown here.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Here's what the text box looks like after text is added.</source>
          <target state="new">Here's what the text box looks like after text is added.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>A multi line text box</source>
          <target state="new">A multi line text box</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Format the text display</source>
          <target state="new">Format the text display</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">[</bpt>TextAlignment<ept id="p1">]()</ept> property to align text within a text box.</source>
          <target state="new">Use the <bpt id="p1">[</bpt>TextAlignment<ept id="p1">]()</ept> property to align text within a text box.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>To align the text box within the layout of the page, use the <bpt id="p1">[</bpt>HorizontalAlignment<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.frameworkelement.horizontalalignment.aspx)</ept> and <bpt id="p2">[</bpt>VerticalAlignment<ept id="p2">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.frameworkelement.verticalalignment.aspx)</ept> properties.</source>
          <target state="new">To align the text box within the layout of the page, use the <bpt id="p1">[</bpt>HorizontalAlignment<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.frameworkelement.horizontalalignment.aspx)</ept> and <bpt id="p2">[</bpt>VerticalAlignment<ept id="p2">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.frameworkelement.verticalalignment.aspx)</ept> properties.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>While the text bBox supports only unformatted text, you can customize how the text is displayed in the text box to match your branding.</source>
          <target state="new">While the text bBox supports only unformatted text, you can customize how the text is displayed in the text box to match your branding.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>You can set standard <bpt id="p1">[</bpt>Control<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.control.aspx)</ept> properties like <bpt id="p2">[</bpt>FontFamily<ept id="p2">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.control.fontfamily.aspx)</ept>, <bpt id="p3">[</bpt>FontSize<ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.control.fontsize.aspx)</ept>, <bpt id="p4">[</bpt>FontStyle<ept id="p4">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.control.fontstyle.aspx)</ept>, <bpt id="p5">[</bpt>Background<ept id="p5">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.control.background.aspx)</ept>, <bpt id="p6">[</bpt>Foreground<ept id="p6">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.control.foreground.aspx)</ept>, and <bpt id="p7">[</bpt>CharacterSpacing<ept id="p7">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.control.characterspacing.aspx)</ept> to change the look of the text.</source>
          <target state="new">You can set standard <bpt id="p1">[</bpt>Control<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.control.aspx)</ept> properties like <bpt id="p2">[</bpt>FontFamily<ept id="p2">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.control.fontfamily.aspx)</ept>, <bpt id="p3">[</bpt>FontSize<ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.control.fontsize.aspx)</ept>, <bpt id="p4">[</bpt>FontStyle<ept id="p4">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.control.fontstyle.aspx)</ept>, <bpt id="p5">[</bpt>Background<ept id="p5">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.control.background.aspx)</ept>, <bpt id="p6">[</bpt>Foreground<ept id="p6">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.control.foreground.aspx)</ept>, and <bpt id="p7">[</bpt>CharacterSpacing<ept id="p7">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.control.characterspacing.aspx)</ept> to change the look of the text.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>These properties affect only how the text box displays the text locally, so if you were to copy and paste the text into a rich text control, for example, no formatting would be applied.</source>
          <target state="new">These properties affect only how the text box displays the text locally, so if you were to copy and paste the text into a rich text control, for example, no formatting would be applied.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>This example shows a read-only TextBox with several properties set to customize the appearance of the text.</source>
          <target state="new">This example shows a read-only TextBox with several properties set to customize the appearance of the text.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The resulting text box looks like this.</source>
          <target state="new">The resulting text box looks like this.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>A formatted text box</source>
          <target state="new">A formatted text box</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Modify the context menu</source>
          <target state="new">Modify the context menu</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>By default, the commands shown in the text box context menu depend on the state of the text box.</source>
          <target state="new">By default, the commands shown in the text box context menu depend on the state of the text box.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>For example, the following commands can be shown when the text box is editable.</source>
          <target state="new">For example, the following commands can be shown when the text box is editable.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Command</source>
          <target state="new">Command</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Shown when...</source>
          <target state="new">Shown when...</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Copy</source>
          <target state="new">Copy</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>text is selected.</source>
          <target state="new">text is selected.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Cut</source>
          <target state="new">Cut</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>text is selected.</source>
          <target state="new">text is selected.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Paste</source>
          <target state="new">Paste</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>the clipboard contains text.</source>
          <target state="new">the clipboard contains text.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Select all</source>
          <target state="new">Select all</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>the TextBox contains text.</source>
          <target state="new">the TextBox contains text.</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Undo</source>
          <target state="new">Undo</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>text has been changed.</source>
          <target state="new">text has been changed.</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>To modify the commands shown in the context menu, handle the <bpt id="p1">[</bpt>ContextMenuOpening<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textbox.contextmenuopening.aspx)</ept> event.</source>
          <target state="new">To modify the commands shown in the context menu, handle the <bpt id="p1">[</bpt>ContextMenuOpening<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textbox.contextmenuopening.aspx)</ept> event.</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>For an example of this, see Scenario 2 of the <bpt id="p1">[</bpt>ContextMenu sample<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=234891)</ept>.</source>
          <target state="new">For an example of this, see Scenario 2 of the <bpt id="p1">[</bpt>ContextMenu sample<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=234891)</ept>.</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>For design info, see Guidelines for context menus.</source>
          <target state="new">For design info, see Guidelines for context menus.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Select, copy, and paste</source>
          <target state="new">Select, copy, and paste</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>You can get or set the selected text in a TextBox using the <bpt id="p1">[</bpt>SelectedText<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textbox.selectedtext.aspx)</ept> property.</source>
          <target state="new">You can get or set the selected text in a TextBox using the <bpt id="p1">[</bpt>SelectedText<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textbox.selectedtext.aspx)</ept> property.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">[</bpt>SelectionStart<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textbox.selectionstart.aspx)</ept> and <bpt id="p2">[</bpt>SelectionLength<ept id="p2">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textbox.selectionlength.aspx)</ept> properties, and the <bpt id="p3">[</bpt>Select<ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textbox.select.aspx)</ept> and <bpt id="p4">[</bpt>SelectAll<ept id="p4">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textbox.selectall.aspx)</ept> methods, to manipulate the text selection.</source>
          <target state="new">Use the <bpt id="p1">[</bpt>SelectionStart<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textbox.selectionstart.aspx)</ept> and <bpt id="p2">[</bpt>SelectionLength<ept id="p2">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textbox.selectionlength.aspx)</ept> properties, and the <bpt id="p3">[</bpt>Select<ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textbox.select.aspx)</ept> and <bpt id="p4">[</bpt>SelectAll<ept id="p4">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textbox.selectall.aspx)</ept> methods, to manipulate the text selection.</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Handle the <bpt id="p1">[</bpt>SelectionChanged<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textbox.selectionchanged.aspx)</ept> event to do something when the user selects or de-selects text.</source>
          <target state="new">Handle the <bpt id="p1">[</bpt>SelectionChanged<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textbox.selectionchanged.aspx)</ept> event to do something when the user selects or de-selects text.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>You can change the color used to highlight the selected text by setting the <bpt id="p1">[</bpt>SelectionHighlightColor<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textbox.selectionhighlightcolor.aspx)</ept> property.</source>
          <target state="new">You can change the color used to highlight the selected text by setting the <bpt id="p1">[</bpt>SelectionHighlightColor<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textbox.selectionhighlightcolor.aspx)</ept> property.</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>TextBox supports copy and paste by default.</source>
          <target state="new">TextBox supports copy and paste by default.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>You can provide custom handling of the <bpt id="p1">[</bpt>Paste<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textbox.paste.aspx)</ept> event on editable text controls in your app.</source>
          <target state="new">You can provide custom handling of the <bpt id="p1">[</bpt>Paste<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textbox.paste.aspx)</ept> event on editable text controls in your app.</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>For example, you might remove the line breaks from a multi-line address when pasting it into a single-line search box.</source>
          <target state="new">For example, you might remove the line breaks from a multi-line address when pasting it into a single-line search box.</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Or, you might check the length of the pasted text and warn the user if it exceeds the maximum length that can be saved to a database.</source>
          <target state="new">Or, you might check the length of the pasted text and warn the user if it exceeds the maximum length that can be saved to a database.</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>For more info and examples, see the <bpt id="p1">[</bpt>Paste<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textbox.paste.aspx)</ept> event.</source>
          <target state="new">For more info and examples, see the <bpt id="p1">[</bpt>Paste<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textbox.paste.aspx)</ept> event.</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Here, we have an example of these properties and methods in use.</source>
          <target state="new">Here, we have an example of these properties and methods in use.</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>When you select text in the first text box, the selected text is displayed in the second text box, which is read-only.</source>
          <target state="new">When you select text in the first text box, the selected text is displayed in the second text box, which is read-only.</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The values of the <bpt id="p1">[</bpt>SelectionLength<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textbox.selectionlength.aspx)</ept> and <bpt id="p2">[</bpt>SelectionStart<ept id="p2">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textbox.selectionstart.aspx)</ept> properties are shown in two text blocks.</source>
          <target state="new">The values of the <bpt id="p1">[</bpt>SelectionLength<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textbox.selectionlength.aspx)</ept> and <bpt id="p2">[</bpt>SelectionStart<ept id="p2">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textbox.selectionstart.aspx)</ept> properties are shown in two text blocks.</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>This is done using the <bpt id="p1">[</bpt>SelectionChanged<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textbox.selectionchanged.aspx)</ept> event.</source>
          <target state="new">This is done using the <bpt id="p1">[</bpt>SelectionChanged<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textbox.selectionchanged.aspx)</ept> event.</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Here's the result of this code.</source>
          <target state="new">Here's the result of this code.</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Selected text in a text box</source>
          <target state="new">Selected text in a text box</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Choose the right keyboard for your text control</source>
          <target state="new">Choose the right keyboard for your text control</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>To help users to enter data using the touch keyboard, or Soft Input Panel (SIP), you can set the input scope of the text control to match the kind of data the user is expected to enter.</source>
          <target state="new">To help users to enter data using the touch keyboard, or Soft Input Panel (SIP), you can set the input scope of the text control to match the kind of data the user is expected to enter.</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The touch keyboard can be used for text entry when your app runs on a device with a touch screen.</source>
          <target state="new">The touch keyboard can be used for text entry when your app runs on a device with a touch screen.</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The touch keyboard is invoked when the user taps on an editable input field, such as a TextBox or RichEditBox.</source>
          <target state="new">The touch keyboard is invoked when the user taps on an editable input field, such as a TextBox or RichEditBox.</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>You can make it much faster and easier for users to enter data in your app by setting the input scope of the text control to match the kind of data you expect the user to enter.</source>
          <target state="new">You can make it much faster and easier for users to enter data in your app by setting the input scope of the text control to match the kind of data you expect the user to enter.</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The input scope provides a hint to the system about the type of text input expected by the control so the system can provide a specialized touch keyboard layout for the input type.</source>
          <target state="new">The input scope provides a hint to the system about the type of text input expected by the control so the system can provide a specialized touch keyboard layout for the input type.</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>For example, if a text box is used only to enter a 4-digit PIN, set the <bpt id="p1">[</bpt>InputScope<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textbox.inputscope.aspx)</ept> property to <bpt id="p2">**</bpt>Number<ept id="p2">**</ept>.</source>
          <target state="new">For example, if a text box is used only to enter a 4-digit PIN, set the <bpt id="p1">[</bpt>InputScope<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textbox.inputscope.aspx)</ept> property to <bpt id="p2">**</bpt>Number<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>This tells the system to show the number keypad layout, which makes it easier for the user to enter the PIN.</source>
          <target state="new">This tells the system to show the number keypad layout, which makes it easier for the user to enter the PIN.</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Important<ept id="p1">**</ept><ph id="ph1">&amp;nbsp;&amp;nbsp;</ph>The input scope does not cause any input validation to be performed, and does not prevent the user from providing any input through a hardware keyboard or other input device.</source>
          <target state="new"><bpt id="p1">**</bpt>Important<ept id="p1">**</ept><ph id="ph1">&amp;nbsp;&amp;nbsp;</ph>The input scope does not cause any input validation to be performed, and does not prevent the user from providing any input through a hardware keyboard or other input device.</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>You are still responsible for validating the input in your code as needed.</source>
          <target state="new">You are still responsible for validating the input in your code as needed.</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Other properties that affect the touch keyboard are <bpt id="p1">[</bpt>IsSpellCheckEnabled<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textbox.isspellcheckenabled.aspx)</ept>, <bpt id="p2">[</bpt>IsTextPredictionEnabled<ept id="p2">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textbox.istextpredictionenabled.aspx)</ept>, and <bpt id="p3">[</bpt>PreventKeyboardDisplayOnProgrammaticFocus<ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textbox.preventkeyboarddisplayonprogrammaticfocus.aspx)</ept>.</source>
          <target state="new">Other properties that affect the touch keyboard are <bpt id="p1">[</bpt>IsSpellCheckEnabled<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textbox.isspellcheckenabled.aspx)</ept>, <bpt id="p2">[</bpt>IsTextPredictionEnabled<ept id="p2">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textbox.istextpredictionenabled.aspx)</ept>, and <bpt id="p3">[</bpt>PreventKeyboardDisplayOnProgrammaticFocus<ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.textbox.preventkeyboarddisplayonprogrammaticfocus.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>(IsSpellCheckEnabled also affects the TextBox when a hardware keyboard is used.)</source>
          <target state="new">(IsSpellCheckEnabled also affects the TextBox when a hardware keyboard is used.)</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>For more info and examples, see <bpt id="p1">[</bpt>Use input scope to change the touch keyboard<ept id="p1">]()</ept> and the property documentation.</source>
          <target state="new">For more info and examples, see <bpt id="p1">[</bpt>Use input scope to change the touch keyboard<ept id="p1">]()</ept> and the property documentation.</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Recommendations</source>
          <target state="new">Recommendations</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Use a label or placeholder text if the purpose of the text box isn't clear.</source>
          <target state="new">Use a label or placeholder text if the purpose of the text box isn't clear.</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>A label is visible whether or not the text input box has a value.</source>
          <target state="new">A label is visible whether or not the text input box has a value.</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Placeholder text is displayed inside the text input box and disappears once a value has been entered.</source>
          <target state="new">Placeholder text is displayed inside the text input box and disappears once a value has been entered.</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Give the text box an appropriate width for the range of values that can be entered.</source>
          <target state="new">Give the text box an appropriate width for the range of values that can be entered.</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Word length varies between languages, so take localization into account if you want your app to be world-ready.</source>
          <target state="new">Word length varies between languages, so take localization into account if you want your app to be world-ready.</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>A text input box is typically single-line (<ph id="ph1">`TextWrap = "NoWrap"`</ph>).</source>
          <target state="new">A text input box is typically single-line (<ph id="ph1">`TextWrap = "NoWrap"`</ph>).</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>When users need to enter or edit a long string, set the text input box to multi-line (<ph id="ph1">`TextWrap = "Wrap"`</ph>).</source>
          <target state="new">When users need to enter or edit a long string, set the text input box to multi-line (<ph id="ph1">`TextWrap = "Wrap"`</ph>).</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Generally, a text input box is used for editable text.</source>
          <target state="new">Generally, a text input box is used for editable text.</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>But you can make a text input box read-only so that its content can be read, selected, and copied, but not edited.</source>
          <target state="new">But you can make a text input box read-only so that its content can be read, selected, and copied, but not edited.</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>If you need to reduce clutter in a view, consider making a set of text input boxes appear only when a controlling checkbox is checked.</source>
          <target state="new">If you need to reduce clutter in a view, consider making a set of text input boxes appear only when a controlling checkbox is checked.</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>You can also bind the enabled state of a text input box to a control such as a checkbox.</source>
          <target state="new">You can also bind the enabled state of a text input box to a control such as a checkbox.</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Consider how you want a text input box to behave when it contains a value and the user taps it.</source>
          <target state="new">Consider how you want a text input box to behave when it contains a value and the user taps it.</target>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The default behavior is appropriate for editing the value rather than replacing it; the insertion point is placed between words and nothing is selected.</source>
          <target state="new">The default behavior is appropriate for editing the value rather than replacing it; the insertion point is placed between words and nothing is selected.</target>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>If replacing is the most common use case for a given text input box, you can select all the text in the field whenever the control receives focus, and typing replaces the selection.</source>
          <target state="new">If replacing is the most common use case for a given text input box, you can select all the text in the field whenever the control receives focus, and typing replaces the selection.</target>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Single-line input boxes</source>
          <target state="new">Single-line input boxes</target>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Use several single-line text boxes to capture many small pieces of text information.</source>
          <target state="new">Use several single-line text boxes to capture many small pieces of text information.</target>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>If the text boxes are related in nature, group those together.</source>
          <target state="new">If the text boxes are related in nature, group those together.</target>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Make the size of single-line text boxes slightly wider than the longest anticipated input.</source>
          <target state="new">Make the size of single-line text boxes slightly wider than the longest anticipated input.</target>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>If doing so makes the control too wide, separate it into two controls.</source>
          <target state="new">If doing so makes the control too wide, separate it into two controls.</target>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>For example, you could split a single address input into "Address line 1" and "Address line 2".</source>
          <target state="new">For example, you could split a single address input into "Address line 1" and "Address line 2".</target>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Set a maximum length for characters that can be entered.</source>
          <target state="new">Set a maximum length for characters that can be entered.</target>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>If the backing data source doesn't allow a long input string, limit the input and use a validation popup to let users know when they reach the limit.</source>
          <target state="new">If the backing data source doesn't allow a long input string, limit the input and use a validation popup to let users know when they reach the limit.</target>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Use single-line text input controls to gather small pieces of text from users.</source>
          <target state="new">Use single-line text input controls to gather small pieces of text from users.</target>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The following example shows a single-line text box to capture an answer to a security question.</source>
          <target state="new">The following example shows a single-line text box to capture an answer to a security question.</target>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The answer is expected to be short, and so a single-line text box is appropriate here.</source>
          <target state="new">The answer is expected to be short, and so a single-line text box is appropriate here.</target>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Basic data input</source>
          <target state="new">Basic data input</target>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Use a set of short, fixed-sized, single-line text input controls to enter data with a specific format.</source>
          <target state="new">Use a set of short, fixed-sized, single-line text input controls to enter data with a specific format.</target>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Formatted data input</source>
          <target state="new">Formatted data input</target>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Use a single-line, unconstrained text input control to enter or edit strings, combined with a command button that helps users select valid values.</source>
          <target state="new">Use a single-line, unconstrained text input control to enter or edit strings, combined with a command button that helps users select valid values.</target>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Assisted data input</source>
          <target state="new">Assisted data input</target>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Multi-line text input controls</source>
          <target state="new">Multi-line text input controls</target>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>When you create a rich text box, provide styling buttons and implement their actions.</source>
          <target state="new">When you create a rich text box, provide styling buttons and implement their actions.</target>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Use a font that's consistent with the style of your app.</source>
          <target state="new">Use a font that's consistent with the style of your app.</target>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Make the height of the text control tall enough to accommodate typical entries.</source>
          <target state="new">Make the height of the text control tall enough to accommodate typical entries.</target>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>When capturing long spans of text with a maximum character or word count, use a plain text box and provide a live-running counter to show the user how many characters or words they have left before they reach the limit.</source>
          <target state="new">When capturing long spans of text with a maximum character or word count, use a plain text box and provide a live-running counter to show the user how many characters or words they have left before they reach the limit.</target>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>You'll need to create the counter yourself; place it below the text box and dynamically update it as the user enters each character or word.</source>
          <target state="new">You'll need to create the counter yourself; place it below the text box and dynamically update it as the user enters each character or word.</target>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>A long span of text</source>
          <target state="new">A long span of text</target>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Don't let your text input controls grow in height while users type.</source>
          <target state="new">Don't let your text input controls grow in height while users type.</target>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Don't use a multi-line text box when users only need a single line.</source>
          <target state="new">Don't use a multi-line text box when users only need a single line.</target>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Don't use a rich text control if a plain text control is adequate.</source>
          <target state="new">Don't use a rich text control if a plain text control is adequate.</target>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>This article contains information that is specific to Universal Windows Platform (UWP) apps and Windows 10.</source>
          <target state="new">This article contains information that is specific to Universal Windows Platform (UWP) apps and Windows 10.</target>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>For Windows 8.1 guidance, please download the <bpt id="p1">[</bpt>Windows 8.1 guidelines PDF<ept id="p1">](https://go.microsoft.com/fwlink/p/?linkid=258743)</ept>.</source>
          <target state="new">For Windows 8.1 guidance, please download the <bpt id="p1">[</bpt>Windows 8.1 guidelines PDF<ept id="p1">](https://go.microsoft.com/fwlink/p/?linkid=258743)</ept>.</target>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Related articles</source>
          <target state="new">Related articles</target>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Text controls</source>
          <target state="new">Text controls</target>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>For designers</source>
          <target state="new">For designers</target>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Guidelines for spell checking</source>
          <target state="new">Guidelines for spell checking</target>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Adding search</source>
          <target state="new">Adding search</target>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Guidelines for text input</source>
          <target state="new">Guidelines for text input</target>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>For developers (XAML)</source>
          <target state="new">For developers (XAML)</target>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>TextBox class</source>
          <target state="new">TextBox class</target>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Windows.UI.Xaml.Controls PasswordBox class</source>
          <target state="new">Windows.UI.Xaml.Controls PasswordBox class</target>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>For developers (other)</source>
          <target state="new">For developers (other)</target>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>String.Length property</source>
          <target state="new">String.Length property</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>