<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci2\gaming\tutorial--setting-up-the-games-infrastructure.md</xliffext:olfilepath>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">807d9e648fd5a884fdfc2a0da02dfc1d99c9aa96</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-e58fd48" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Set up the game project</source>
          <target state="new">Set up the game project</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The first step in assembling your game is to set up a project in Microsoft Visual Studio in such a way that you minimize the amount of code infrastructure work you need to do.</source>
          <target state="new">The first step in assembling your game is to set up a project in Microsoft Visual Studio in such a way that you minimize the amount of code infrastructure work you need to do.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Set up the game project</source>
          <target state="new">Set up the game project</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Updated for UWP apps on Windows 10.</source>
          <target state="new">Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept></source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept></target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The first step in assembling your game is to set up a project in Microsoft Visual Studio in such a way that you minimize the amount of code infrastructure work you need to do.</source>
          <target state="new">The first step in assembling your game is to set up a project in Microsoft Visual Studio in such a way that you minimize the amount of code infrastructure work you need to do.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>You can save yourself a lot of time and hassle by using the right template and configuring the project specifically for game development.</source>
          <target state="new">You can save yourself a lot of time and hassle by using the right template and configuring the project specifically for game development.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>We step you through the setup and configuration of a simple game project.</source>
          <target state="new">We step you through the setup and configuration of a simple game project.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Objective</source>
          <target state="new">Objective</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>To learn how to set up a Direct3D game project in Visual Studio.</source>
          <target state="new">To learn how to set up a Direct3D game project in Visual Studio.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Setting up the game project</source>
          <target state="new">Setting up the game project</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You can write a game from scratch, with just a handy text editor, a few samples, and a hat full of raw brainpower.</source>
          <target state="new">You can write a game from scratch, with just a handy text editor, a few samples, and a hat full of raw brainpower.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>But that probably isn't the most effective use of your time.</source>
          <target state="new">But that probably isn't the most effective use of your time.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If you're new to Universal Windows Platform (UWP) development, why not let Visual Studio shoulder some of the burden?</source>
          <target state="new">If you're new to Universal Windows Platform (UWP) development, why not let Visual Studio shoulder some of the burden?</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Here's what to do to get your project off to a roaring start.</source>
          <target state="new">Here's what to do to get your project off to a roaring start.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>1. Pick the right template</source>
          <target state="new">1. Pick the right template</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>A Visual Studio template is a collection of settings and code files that target a specific type of app based on the preferred language and technology.</source>
          <target state="new">A Visual Studio template is a collection of settings and code files that target a specific type of app based on the preferred language and technology.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>In Microsoft Visual Studio 2015, you'll find a number of templates that can dramatically ease game and graphics app development.</source>
          <target state="new">In Microsoft Visual Studio 2015, you'll find a number of templates that can dramatically ease game and graphics app development.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If you don't use a template, you must develop much of the basic graphics rendering and display framework yourself, which can be a bit of a chore to a new game developer.</source>
          <target state="new">If you don't use a template, you must develop much of the basic graphics rendering and display framework yourself, which can be a bit of a chore to a new game developer.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The right template for this tutorial, is the one titled DirectX 11 App (Universal Windows).</source>
          <target state="new">The right template for this tutorial, is the one titled DirectX 11 App (Universal Windows).</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>In Visual Studio 2015, click <bpt id="p1">**</bpt>File...<ept id="p1">**</ept> <ph id="ph1">&amp;gt;</ph> <bpt id="p2">**</bpt>New Project<ept id="p2">**</ept>, and then:</source>
          <target state="new">In Visual Studio 2015, click <bpt id="p1">**</bpt>File...<ept id="p1">**</ept> <ph id="ph1">&amp;gt;</ph> <bpt id="p2">**</bpt>New Project<ept id="p2">**</ept>, and then:</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>From <bpt id="p1">**</bpt>Templates<ept id="p1">**</ept>, select <bpt id="p2">**</bpt>Visual C++<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Windows<ept id="p3">**</ept>, <bpt id="p4">**</bpt>Universal<ept id="p4">**</ept>.</source>
          <target state="new">From <bpt id="p1">**</bpt>Templates<ept id="p1">**</ept>, select <bpt id="p2">**</bpt>Visual C++<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Windows<ept id="p3">**</ept>, <bpt id="p4">**</bpt>Universal<ept id="p4">**</ept>.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>In the center pane, select <bpt id="p1">**</bpt>DirectX 11 App (Universal Windows)<ept id="p1">**</ept>.</source>
          <target state="new">In the center pane, select <bpt id="p1">**</bpt>DirectX 11 App (Universal Windows)<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Give your game project a name, and click <bpt id="p1">**</bpt>OK<ept id="p1">**</ept>.</source>
          <target state="new">Give your game project a name, and click <bpt id="p1">**</bpt>OK<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>selecting the direct3d application template</source>
          <target state="new">selecting the direct3d application template</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This template provides you with the basic framework for a UWP app using DirectX with C++.</source>
          <target state="new">This template provides you with the basic framework for a UWP app using DirectX with C++.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Go on, build and run it with F5!</source>
          <target state="new">Go on, build and run it with F5!</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Check out that powder blue screen.</source>
          <target state="new">Check out that powder blue screen.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Take a moment and review the code that the template provides.</source>
          <target state="new">Take a moment and review the code that the template provides.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Tthe template creates multiple code files containing the basic functionality for a UWP app using DirectX with C++.</source>
          <target state="new">Tthe template creates multiple code files containing the basic functionality for a UWP app using DirectX with C++.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>We talk more about the other code files in <bpt id="p1">[</bpt>step 3<ept id="p1">](#3-review-the-included-libraries-and-headers)</ept>.</source>
          <target state="new">We talk more about the other code files in <bpt id="p1">[</bpt>step 3<ept id="p1">](#3-review-the-included-libraries-and-headers)</ept>.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Right now, let's quickly inspect <bpt id="p1">**</bpt>App.h<ept id="p1">**</ept>.</source>
          <target state="new">Right now, let's quickly inspect <bpt id="p1">**</bpt>App.h<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>You create these 5 methods, <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Initialize<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh700495)</ept>, <bpt id="p3">[</bpt><bpt id="p4">**</bpt>SetWindow<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/hh700509)</ept>, <bpt id="p5">[</bpt><bpt id="p6">**</bpt>Load<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/hh700501)</ept>, <bpt id="p7">[</bpt><bpt id="p8">**</bpt>Run<ept id="p8">**</ept><ept id="p7">](https://msdn.microsoft.com/library/windows/apps/hh700505)</ept>, and <bpt id="p9">[</bpt><bpt id="p10">**</bpt>Uninitialize<ept id="p10">**</ept><ept id="p9">](https://msdn.microsoft.com/library/windows/apps/hh700523)</ept>, when implementing the <bpt id="p11">[</bpt><bpt id="p12">**</bpt>IFrameworkView<ept id="p12">**</ept><ept id="p11">](https://msdn.microsoft.com/library/windows/apps/hh700469)</ept> interface that defines a view provider.</source>
          <target state="new">You create these 5 methods, <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Initialize<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh700495)</ept>, <bpt id="p3">[</bpt><bpt id="p4">**</bpt>SetWindow<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/hh700509)</ept>, <bpt id="p5">[</bpt><bpt id="p6">**</bpt>Load<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/hh700501)</ept>, <bpt id="p7">[</bpt><bpt id="p8">**</bpt>Run<ept id="p8">**</ept><ept id="p7">](https://msdn.microsoft.com/library/windows/apps/hh700505)</ept>, and <bpt id="p9">[</bpt><bpt id="p10">**</bpt>Uninitialize<ept id="p10">**</ept><ept id="p9">](https://msdn.microsoft.com/library/windows/apps/hh700523)</ept>, when implementing the <bpt id="p11">[</bpt><bpt id="p12">**</bpt>IFrameworkView<ept id="p12">**</ept><ept id="p11">](https://msdn.microsoft.com/library/windows/apps/hh700469)</ept> interface that defines a view provider.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>These methods are run by the app singleton that is created when your game is launched, and load all your app's resources as well as connect the appropriate event handlers.</source>
          <target state="new">These methods are run by the app singleton that is created when your game is launched, and load all your app's resources as well as connect the appropriate event handlers.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Your <bpt id="p1">**</bpt>main<ept id="p1">**</ept> method is in the <bpt id="p2">**</bpt>App.cpp<ept id="p2">**</ept> source file.</source>
          <target state="new">Your <bpt id="p1">**</bpt>main<ept id="p1">**</ept> method is in the <bpt id="p2">**</bpt>App.cpp<ept id="p2">**</ept> source file.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>It looks like this:</source>
          <target state="new">It looks like this:</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Right now, it creates an instance of the Direct3D view provider from the view provider factory (<bpt id="p1">**</bpt>Direct3DApplicationSource<ept id="p1">**</ept>, defined in <bpt id="p2">**</bpt>App.h<ept id="p2">**</ept>), and passes it to the app singleton to run (<bpt id="p3">[</bpt><bpt id="p4">**</bpt>CoreApplication::Run<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/hh700469)</ept>).</source>
          <target state="new">Right now, it creates an instance of the Direct3D view provider from the view provider factory (<bpt id="p1">**</bpt>Direct3DApplicationSource<ept id="p1">**</ept>, defined in <bpt id="p2">**</bpt>App.h<ept id="p2">**</ept>), and passes it to the app singleton to run (<bpt id="p3">[</bpt><bpt id="p4">**</bpt>CoreApplication::Run<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/hh700469)</ept>).</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This means that the starting point for your game lives in the body of the implementation of the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IFrameworkView::Run<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh700505)</ept> method, in this case, <bpt id="p3">**</bpt>App::Run<ept id="p3">**</ept>.</source>
          <target state="new">This means that the starting point for your game lives in the body of the implementation of the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>IFrameworkView::Run<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh700505)</ept> method, in this case, <bpt id="p3">**</bpt>App::Run<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Here's the code:</source>
          <target state="new">Here's the code:</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If the window for your game isn't closed, this dispatches all events, updates the timer, and renders and presents the results of your graphics pipeline.</source>
          <target state="new">If the window for your game isn't closed, this dispatches all events, updates the timer, and renders and presents the results of your graphics pipeline.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>We talk about this in greater detail in <bpt id="p1">[</bpt>Defining the game's UWP framework<ept id="p1">](tutorial--building-the-games-metro-style-app-framework.md)</ept> and <bpt id="p2">[</bpt>Assembling the rendering pipeline<ept id="p2">](tutorial--assembling-the-rendering-pipeline.md)</ept>.</source>
          <target state="new">We talk about this in greater detail in <bpt id="p1">[</bpt>Defining the game's UWP framework<ept id="p1">](tutorial--building-the-games-metro-style-app-framework.md)</ept> and <bpt id="p2">[</bpt>Assembling the rendering pipeline<ept id="p2">](tutorial--assembling-the-rendering-pipeline.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>At this point, you should have a sense of the basic code structure of a UWP DirectX game.</source>
          <target state="new">At this point, you should have a sense of the basic code structure of a UWP DirectX game.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>2. Review and update the package.appxmanifest file</source>
          <target state="new">2. Review and update the package.appxmanifest file</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The code files aren't all there is to the template.</source>
          <target state="new">The code files aren't all there is to the template.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>package.appxmanifest<ept id="p1">**</ept> file contains metadata about your project that are used for packaging and launching your game and for submission to the Windows Store.</source>
          <target state="new">The <bpt id="p1">**</bpt>package.appxmanifest<ept id="p1">**</ept> file contains metadata about your project that are used for packaging and launching your game and for submission to the Windows Store.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>It also contains important info the player's system uses to provide access to the system resources the game needs to run.</source>
          <target state="new">It also contains important info the player's system uses to provide access to the system resources the game needs to run.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Launch the <bpt id="p1">**</bpt>Manifest Designer<ept id="p1">**</ept> by double-clicking the <bpt id="p2">**</bpt>package.appxmanifest<ept id="p2">**</ept> file in <bpt id="p3">**</bpt>Solution Explorer<ept id="p3">**</ept>.</source>
          <target state="new">Launch the <bpt id="p1">**</bpt>Manifest Designer<ept id="p1">**</ept> by double-clicking the <bpt id="p2">**</bpt>package.appxmanifest<ept id="p2">**</ept> file in <bpt id="p3">**</bpt>Solution Explorer<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>You see this view:</source>
          <target state="new">You see this view:</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>the package.appx manifest editor.</source>
          <target state="new">the package.appx manifest editor.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>For more info about the <bpt id="p1">**</bpt>package.appxmanifest<ept id="p1">**</ept> file and packaging, see <bpt id="p2">[</bpt>Manifest Designer<ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br230259.aspx)</ept>.</source>
          <target state="new">For more info about the <bpt id="p1">**</bpt>package.appxmanifest<ept id="p1">**</ept> file and packaging, see <bpt id="p2">[</bpt>Manifest Designer<ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br230259.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>For now, take a look at the <bpt id="p1">**</bpt>Capabilities<ept id="p1">**</ept> tab and look at the options provided.</source>
          <target state="new">For now, take a look at the <bpt id="p1">**</bpt>Capabilities<ept id="p1">**</ept> tab and look at the options provided.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>the default capabilities of a direct3d app.</source>
          <target state="new">the default capabilities of a direct3d app.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>If you don't select the capabilities that your game uses, such as access to the <bpt id="p1">**</bpt>Internet<ept id="p1">**</ept> for global high score board, you won't be able to access the corresponding resources or features.</source>
          <target state="new">If you don't select the capabilities that your game uses, such as access to the <bpt id="p1">**</bpt>Internet<ept id="p1">**</ept> for global high score board, you won't be able to access the corresponding resources or features.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>When you create a new game, make sure that you select the capabilities that your game needs to run!</source>
          <target state="new">When you create a new game, make sure that you select the capabilities that your game needs to run!</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Now, let's look at the rest of the files that come with the <bpt id="p1">**</bpt>DirectX 11 App (Universal Windows)<ept id="p1">**</ept> template.</source>
          <target state="new">Now, let's look at the rest of the files that come with the <bpt id="p1">**</bpt>DirectX 11 App (Universal Windows)<ept id="p1">**</ept> template.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>3. Review the included libraries and headers</source>
          <target state="new">3. Review the included libraries and headers</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>There are a few files we haven't looked at yet.</source>
          <target state="new">There are a few files we haven't looked at yet.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>These files provide additional tools and support common to Direct3D game development scenarios.</source>
          <target state="new">These files provide additional tools and support common to Direct3D game development scenarios.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Template Source File</source>
          <target state="new">Template Source File</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="new">Description</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>StepTimer.h</source>
          <target state="new">StepTimer.h</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Defines a high-resolution timer useful for gaming or interactive rendering apps.</source>
          <target state="new">Defines a high-resolution timer useful for gaming or interactive rendering apps.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Sample3DSceneRenderer.h/.cpp</source>
          <target state="new">Sample3DSceneRenderer.h/.cpp</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Defines a basic renderer implementation that connects a Direct3D swap chain and graphics adapter to your UWP using DirectX.</source>
          <target state="new">Defines a basic renderer implementation that connects a Direct3D swap chain and graphics adapter to your UWP using DirectX.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>DirectXHelper.h</source>
          <target state="new">DirectXHelper.h</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Implements a single method, <bpt id="p1">**</bpt>DX::ThrowIfFailed<ept id="p1">**</ept>, that converts the error HRESULT values returned by DirectX APIs into Windows Runtime exceptions.</source>
          <target state="new">Implements a single method, <bpt id="p1">**</bpt>DX::ThrowIfFailed<ept id="p1">**</ept>, that converts the error HRESULT values returned by DirectX APIs into Windows Runtime exceptions.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Use this method to put a break point for debugging DirectX errors.</source>
          <target state="new">Use this method to put a break point for debugging DirectX errors.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>pch.h/.cpp</source>
          <target state="new">pch.h/.cpp</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Contains all the Windows system includes for the APIs used by a Direct3D app, including the DirectX 11 APIs.</source>
          <target state="new">Contains all the Windows system includes for the APIs used by a Direct3D app, including the DirectX 11 APIs.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>SamplePixelShader.hlsl</source>
          <target state="new">SamplePixelShader.hlsl</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Contains the high-level shader language (HLSL) code for a very basic pixel shader.</source>
          <target state="new">Contains the high-level shader language (HLSL) code for a very basic pixel shader.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>SampleVertexShader.hlsl</source>
          <target state="new">SampleVertexShader.hlsl</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Contains the high-level shader language (HLSL) code for a very basic vertex shader.</source>
          <target state="new">Contains the high-level shader language (HLSL) code for a very basic vertex shader.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Next steps</source>
          <target state="new">Next steps</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>At this point, you can create a UWP with DirectX game project and identify the components and files provided by the DirectX 11 App (Universal Windows) template.</source>
          <target state="new">At this point, you can create a UWP with DirectX game project and identify the components and files provided by the DirectX 11 App (Universal Windows) template.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>In the next tutorial, <bpt id="p1">[</bpt>Defining the game's UWP framework<ept id="p1">](tutorial--building-the-games-metro-style-app-framework.md)</ept>, we work with a completed game and examine how it uses and extends many of the concepts and components that the template provides.</source>
          <target state="new">In the next tutorial, <bpt id="p1">[</bpt>Defining the game's UWP framework<ept id="p1">](tutorial--building-the-games-metro-style-app-framework.md)</ept>, we work with a completed game and examine how it uses and extends many of the concepts and components that the template provides.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>