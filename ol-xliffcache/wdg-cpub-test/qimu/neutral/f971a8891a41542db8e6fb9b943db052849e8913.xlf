<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci1\xaml-platform\move-draw-commands-syntax.md</xliffext:olfilepath>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f971a8891a41542db8e6fb9b943db052849e8913</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-e58fd48" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Learn about the move and draw commands (a mini-language) that you can use to specify path geometries as a XAML attribute value.</source>
          <target state="new">Learn about the move and draw commands (a mini-language) that you can use to specify path geometries as a XAML attribute value.</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Move and draw commands syntax</source>
          <target state="new">Move and draw commands syntax</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Move and draw commands syntax</source>
          <target state="new">Move and draw commands syntax</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Updated for UWP apps on Windows 10.</source>
          <target state="new">Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept></source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept></target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Learn about the move and draw commands (a mini-language) that you can use to specify path geometries as a XAML attribute value.</source>
          <target state="new">Learn about the move and draw commands (a mini-language) that you can use to specify path geometries as a XAML attribute value.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Move and draw commands are used by many design and graphics tools that can output a vector graphic or shape, as a serialization and interchange format.</source>
          <target state="new">Move and draw commands are used by many design and graphics tools that can output a vector graphic or shape, as a serialization and interchange format.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Properties that use move and draw command strings</source>
          <target state="new">Properties that use move and draw command strings</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The move and draw command syntax is supported by an internal type converter for XAML, which parses the commands and produces a run-time graphics representation.</source>
          <target state="new">The move and draw command syntax is supported by an internal type converter for XAML, which parses the commands and produces a run-time graphics representation.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This representation is basically a finished set of vectors that is ready for presentation.</source>
          <target state="new">This representation is basically a finished set of vectors that is ready for presentation.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The vectors themselves don't complete the presentation details; you'll still need to set other values on the elements.</source>
          <target state="new">The vectors themselves don't complete the presentation details; you'll still need to set other values on the elements.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Path<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br243355)</ept> object you also need values for <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Fill<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br243378)</ept>, <bpt id="p5">[</bpt><bpt id="p6">**</bpt>Stroke<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/br243383)</ept>, and other properties, and then that <bpt id="p7">**</bpt>Path<ept id="p7">**</ept> must be connected to the visual tree somehow.</source>
          <target state="new">For a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Path<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br243355)</ept> object you also need values for <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Fill<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br243378)</ept>, <bpt id="p5">[</bpt><bpt id="p6">**</bpt>Stroke<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/br243383)</ept>, and other properties, and then that <bpt id="p7">**</bpt>Path<ept id="p7">**</ept> must be connected to the visual tree somehow.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PathIcon<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn252722)</ept> object, set the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Foreground<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn251974)</ept> property.</source>
          <target state="new">For a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PathIcon<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn252722)</ept> object, set the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Foreground<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn251974)</ept> property.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>There are two properties in the Windows Runtime that can use a string representing move and draw commands: <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Path.Data<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br243356)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>PathIcon.Data<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn252723)</ept>.</source>
          <target state="new">There are two properties in the Windows Runtime that can use a string representing move and draw commands: <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Path.Data<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br243356)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>PathIcon.Data<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn252723)</ept>.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If you set one of these properties by specifying move and draw commands, you typically set it as a XAML attribute value along with other required attributes of that element.</source>
          <target state="new">If you set one of these properties by specifying move and draw commands, you typically set it as a XAML attribute value along with other required attributes of that element.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Without getting into the specifics, here's what that looks like:</source>
          <target state="new">Without getting into the specifics, here's what that looks like:</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>PathGeometry.Figures<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br210169)</ept> can also use move and draw commands.</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>PathGeometry.Figures<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br210169)</ept> can also use move and draw commands.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You might combine a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PathGeometry<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br210168)</ept> object that uses move and draw commands with other <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Geometry<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br210041)</ept> types in a <bpt id="p5">[</bpt><bpt id="p6">**</bpt>GeometryGroup<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/br210057)</ept> object, which you'd then use as the value for <bpt id="p7">[</bpt><bpt id="p8">**</bpt>Path.Data<ept id="p8">**</ept><ept id="p7">](https://msdn.microsoft.com/library/windows/apps/br243356)</ept>.</source>
          <target state="new">You might combine a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PathGeometry<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br210168)</ept> object that uses move and draw commands with other <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Geometry<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br210041)</ept> types in a <bpt id="p5">[</bpt><bpt id="p6">**</bpt>GeometryGroup<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/br210057)</ept> object, which you'd then use as the value for <bpt id="p7">[</bpt><bpt id="p8">**</bpt>Path.Data<ept id="p8">**</ept><ept id="p7">](https://msdn.microsoft.com/library/windows/apps/br243356)</ept>.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>But that isn't nearly as common as using move and draw commands for attribute-defined data.</source>
          <target state="new">But that isn't nearly as common as using move and draw commands for attribute-defined data.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Using move and draw commands versus using a <bpt id="p1">**</bpt>PathGeometry<ept id="p1">**</ept></source>
          <target state="new">Using move and draw commands versus using a <bpt id="p1">**</bpt>PathGeometry<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For Windows Runtime XAML, the move and draw commands produce a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PathGeometry<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br210168)</ept> with a single <bpt id="p3">[</bpt><bpt id="p4">**</bpt>PathFigure<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br210143)</ept> object with a <bpt id="p5">[</bpt><bpt id="p6">**</bpt>Figures<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/br210169)</ept> property value.</source>
          <target state="new">For Windows Runtime XAML, the move and draw commands produce a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PathGeometry<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br210168)</ept> with a single <bpt id="p3">[</bpt><bpt id="p4">**</bpt>PathFigure<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br210143)</ept> object with a <bpt id="p5">[</bpt><bpt id="p6">**</bpt>Figures<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/br210169)</ept> property value.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Each draw command produces a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PathSegment<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br210174)</ept> derived class in that single <bpt id="p3">**</bpt>PathFigure<ept id="p3">**</ept>'s <bpt id="p4">[</bpt><bpt id="p5">**</bpt>Segments<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/br210164)</ept> collection, the move command changes the <bpt id="p6">[</bpt><bpt id="p7">**</bpt>StartPoint<ept id="p7">**</ept><ept id="p6">](https://msdn.microsoft.com/library/windows/apps/br210166)</ept>, and existence of a close command sets <bpt id="p8">[</bpt><bpt id="p9">**</bpt>IsClosed<ept id="p9">**</ept><ept id="p8">](https://msdn.microsoft.com/library/windows/apps/br210159)</ept> to <bpt id="p10">**</bpt>true<ept id="p10">**</ept>.</source>
          <target state="new">Each draw command produces a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PathSegment<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br210174)</ept> derived class in that single <bpt id="p3">**</bpt>PathFigure<ept id="p3">**</ept>'s <bpt id="p4">[</bpt><bpt id="p5">**</bpt>Segments<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/br210164)</ept> collection, the move command changes the <bpt id="p6">[</bpt><bpt id="p7">**</bpt>StartPoint<ept id="p7">**</ept><ept id="p6">](https://msdn.microsoft.com/library/windows/apps/br210166)</ept>, and existence of a close command sets <bpt id="p8">[</bpt><bpt id="p9">**</bpt>IsClosed<ept id="p9">**</ept><ept id="p8">](https://msdn.microsoft.com/library/windows/apps/br210159)</ept> to <bpt id="p10">**</bpt>true<ept id="p10">**</ept>.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You can navigate this structure as an object model if you examine the <bpt id="p1">**</bpt>Data<ept id="p1">**</ept> values at run time.</source>
          <target state="new">You can navigate this structure as an object model if you examine the <bpt id="p1">**</bpt>Data<ept id="p1">**</ept> values at run time.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The basic syntax</source>
          <target state="new">The basic syntax</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The syntax for move and draw commands can be summarized like this:</source>
          <target state="new">The syntax for move and draw commands can be summarized like this:</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Start with an optional fill rule.</source>
          <target state="new">Start with an optional fill rule.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Typically you specify this only if you don't want the <bpt id="p1">**</bpt>EvenOdd<ept id="p1">**</ept> default.</source>
          <target state="new">Typically you specify this only if you don't want the <bpt id="p1">**</bpt>EvenOdd<ept id="p1">**</ept> default.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>(More about <bpt id="p1">**</bpt>EvenOdd<ept id="p1">**</ept> later.)</source>
          <target state="new">(More about <bpt id="p1">**</bpt>EvenOdd<ept id="p1">**</ept> later.)</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Specify exactly one move command.</source>
          <target state="new">Specify exactly one move command.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Specify one or more draw commands.</source>
          <target state="new">Specify one or more draw commands.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Specify a close command.</source>
          <target state="new">Specify a close command.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>You can omit a close command , but that would leave your figure open (that's uncommon).</source>
          <target state="new">You can omit a close command , but that would leave your figure open (that's uncommon).</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>General rules of this syntax are:</source>
          <target state="new">General rules of this syntax are:</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Each command is represented by exactly one letter.</source>
          <target state="new">Each command is represented by exactly one letter.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>That letter can be upper-case or lower-case.</source>
          <target state="new">That letter can be upper-case or lower-case.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Case matters, as we'll describe.</source>
          <target state="new">Case matters, as we'll describe.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Each command except the close command is typically followed by one or more numbers.</source>
          <target state="new">Each command except the close command is typically followed by one or more numbers.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>If more than one number for a command, separate with a comma or space.</source>
          <target state="new">If more than one number for a command, separate with a comma or space.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt><ph id="ph1">\[</ph><ept id="p1">**</ept><bpt id="p2">_</bpt>fillRule<ept id="p2">_</ept><bpt id="p3">**</bpt><ph id="ph2">\]</ph><ept id="p3">**</ept> <bpt id="p4">_</bpt>moveCommand<ept id="p4">_</ept> <bpt id="p5">_</bpt>drawCommand<ept id="p5">_</ept> <bpt id="p6">**</bpt><ph id="ph3">\[</ph><ept id="p6">**</ept><bpt id="p7">_</bpt>drawCommand<ept id="p7">_</ept><bpt id="p8">**</bpt><ph id="ph4">\*\]</ph><ept id="p8">**</ept> <bpt id="p9">**</bpt><ph id="ph5">\[</ph><ept id="p9">**</ept><bpt id="p10">_</bpt>closeCommand<ept id="p10">_</ept><bpt id="p11">**</bpt><ph id="ph6">\]</ph><ept id="p11">**</ept></source>
          <target state="new"><bpt id="p1">**</bpt><ph id="ph1">\[</ph><ept id="p1">**</ept><bpt id="p2">_</bpt>fillRule<ept id="p2">_</ept><bpt id="p3">**</bpt><ph id="ph2">\]</ph><ept id="p3">**</ept> <bpt id="p4">_</bpt>moveCommand<ept id="p4">_</ept> <bpt id="p5">_</bpt>drawCommand<ept id="p5">_</ept> <bpt id="p6">**</bpt><ph id="ph3">\[</ph><ept id="p6">**</ept><bpt id="p7">_</bpt>drawCommand<ept id="p7">_</ept><bpt id="p8">**</bpt><ph id="ph4">\*\]</ph><ept id="p8">**</ept> <bpt id="p9">**</bpt><ph id="ph5">\[</ph><ept id="p9">**</ept><bpt id="p10">_</bpt>closeCommand<ept id="p10">_</ept><bpt id="p11">**</bpt><ph id="ph6">\]</ph><ept id="p11">**</ept></target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Many of the draw commands use points, where you provide an <bpt id="p1">_</bpt>x,y<ept id="p1">_</ept> value.</source>
          <target state="new">Many of the draw commands use points, where you provide an <bpt id="p1">_</bpt>x,y<ept id="p1">_</ept> value.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Whenever you see a <ph id="ph1">\*</ph><bpt id="p1">_</bpt>points<ept id="p1">_</ept> placeholder you can assume you're giving two decimal values for the <bpt id="p2">_</bpt>x,y<ept id="p2">_</ept> value of a point.</source>
          <target state="new">Whenever you see a <ph id="ph1">\*</ph><bpt id="p1">_</bpt>points<ept id="p1">_</ept> placeholder you can assume you're giving two decimal values for the <bpt id="p2">_</bpt>x,y<ept id="p2">_</ept> value of a point.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>White space can often be omitted when the result is not ambiguous.</source>
          <target state="new">White space can often be omitted when the result is not ambiguous.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>You can in fact omit all white space if you use commas as your separator for all number sets (points and size).</source>
          <target state="new">You can in fact omit all white space if you use commas as your separator for all number sets (points and size).</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>For example, this usage is legal: <ph id="ph1">`F1M0,58L2,56L6,60L13,51L15,53L6,64z`</ph>.</source>
          <target state="new">For example, this usage is legal: <ph id="ph1">`F1M0,58L2,56L6,60L13,51L15,53L6,64z`</ph>.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>But it's more typical to include white space between commands for clarity.</source>
          <target state="new">But it's more typical to include white space between commands for clarity.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Don't use commas as the decimal point for decimal numbers; the command string is interpreted by XAML and doesn't account for culture-specific number-formatting conventions that differ from those used in the <bpt id="p1">**</bpt>en-us<ept id="p1">**</ept> locale.</source>
          <target state="new">Don't use commas as the decimal point for decimal numbers; the command string is interpreted by XAML and doesn't account for culture-specific number-formatting conventions that differ from those used in the <bpt id="p1">**</bpt>en-us<ept id="p1">**</ept> locale.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Syntax specifics</source>
          <target state="new">Syntax specifics</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Fill rule</source>
          <target state="new">Fill rule</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>There are two possible values for the optional fill rule: <bpt id="p1">**</bpt>F0<ept id="p1">**</ept> or <bpt id="p2">**</bpt>F1<ept id="p2">**</ept>.</source>
          <target state="new">There are two possible values for the optional fill rule: <bpt id="p1">**</bpt>F0<ept id="p1">**</ept> or <bpt id="p2">**</bpt>F1<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>(The <bpt id="p1">**</bpt>F<ept id="p1">**</ept> is always uppercase.) <bpt id="p2">**</bpt>F0<ept id="p2">**</ept> is the default value; it produces <bpt id="p3">**</bpt>EvenOdd<ept id="p3">**</ept> fill behavior, so you don't typically specify it.</source>
          <target state="new">(The <bpt id="p1">**</bpt>F<ept id="p1">**</ept> is always uppercase.) <bpt id="p2">**</bpt>F0<ept id="p2">**</ept> is the default value; it produces <bpt id="p3">**</bpt>EvenOdd<ept id="p3">**</ept> fill behavior, so you don't typically specify it.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Use <bpt id="p1">**</bpt>F1<ept id="p1">**</ept> to get the <bpt id="p2">**</bpt>Nonzero<ept id="p2">**</ept> fill behavior.</source>
          <target state="new">Use <bpt id="p1">**</bpt>F1<ept id="p1">**</ept> to get the <bpt id="p2">**</bpt>Nonzero<ept id="p2">**</ept> fill behavior.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>These fill values align with the values of the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>FillRule<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br210030)</ept> enumeration.</source>
          <target state="new">These fill values align with the values of the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>FillRule<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br210030)</ept> enumeration.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Move command</source>
          <target state="new">Move command</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Specifies the start point of a new figure.</source>
          <target state="new">Specifies the start point of a new figure.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="new">Syntax</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>startPoint</source>
          <target state="new">startPoint</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>- or -</source>
          <target state="new">- or -</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>startPoint</source>
          <target state="new">startPoint</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Term</source>
          <target state="new">Term</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="new">Description</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>startPoint</source>
          <target state="new">startPoint</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Point</source>
          <target state="new">Point</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The start point of a new figure.</source>
          <target state="new">The start point of a new figure.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>An uppercase <bpt id="p1">**</bpt>M<ept id="p1">**</ept> indicates that <bpt id="p2">*</bpt>startPoint<ept id="p2">*</ept> is an absolute coordinate; a lowercase <bpt id="p3">**</bpt>m<ept id="p3">**</ept> indicates that <bpt id="p4">*</bpt>startPoint<ept id="p4">*</ept> is an offset to the previous point, or (0,0) if there was no previous point.</source>
          <target state="new">An uppercase <bpt id="p1">**</bpt>M<ept id="p1">**</ept> indicates that <bpt id="p2">*</bpt>startPoint<ept id="p2">*</ept> is an absolute coordinate; a lowercase <bpt id="p3">**</bpt>m<ept id="p3">**</ept> indicates that <bpt id="p4">*</bpt>startPoint<ept id="p4">*</ept> is an offset to the previous point, or (0,0) if there was no previous point.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  It's legal to specify multiple points after the move command.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  It's legal to specify multiple points after the move command.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>A line is drawn to those points as if you specified the line command.</source>
          <target state="new">A line is drawn to those points as if you specified the line command.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>However that's not a recommended style; use the dedicated line command instead.</source>
          <target state="new">However that's not a recommended style; use the dedicated line command instead.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Draw commands</source>
          <target state="new">Draw commands</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>A draw command can consist of several shape commands: line, horizontal line, vertical line, cubic Bezier curve, quadratic Bezier curve, smooth cubic Bezier curve, smooth quadratic Bezier curve, and elliptical arc.</source>
          <target state="new">A draw command can consist of several shape commands: line, horizontal line, vertical line, cubic Bezier curve, quadratic Bezier curve, smooth cubic Bezier curve, smooth quadratic Bezier curve, and elliptical arc.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>For all draw commands, case matters.</source>
          <target state="new">For all draw commands, case matters.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Uppercase letters denote absolute coordinates and lowercase letters denote coordinates relative to the previous command.</source>
          <target state="new">Uppercase letters denote absolute coordinates and lowercase letters denote coordinates relative to the previous command.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The control points for a segment are relative to the end point of the preceding segment.</source>
          <target state="new">The control points for a segment are relative to the end point of the preceding segment.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>When sequentially entering more than one command of the same type, you can omit the duplicate command entry.</source>
          <target state="new">When sequentially entering more than one command of the same type, you can omit the duplicate command entry.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>For example, <ph id="ph1">`L 100,200 300,400`</ph> is equivalent to <ph id="ph2">`L 100,200 L 300,400`</ph>.</source>
          <target state="new">For example, <ph id="ph1">`L 100,200 300,400`</ph> is equivalent to <ph id="ph2">`L 100,200 L 300,400`</ph>.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Line command</source>
          <target state="new">Line command</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Creates a straight line between the current point and the specified end point.</source>
          <target state="new">Creates a straight line between the current point and the specified end point.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>and <ph id="ph1">`L 20,30`</ph> are examples of valid line commands.</source>
          <target state="new">and <ph id="ph1">`L 20,30`</ph> are examples of valid line commands.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Defines the equivalent of a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>LineGeometry<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br210117)</ept> object.</source>
          <target state="new">Defines the equivalent of a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>LineGeometry<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br210117)</ept> object.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="new">Syntax</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>endPoint</source>
          <target state="new">endPoint</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>- or -</source>
          <target state="new">- or -</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>endPoint</source>
          <target state="new">endPoint</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Term</source>
          <target state="new">Term</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="new">Description</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>endPoint</source>
          <target state="new">endPoint</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Point</source>
          <target state="new">Point</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The end point of the line.</source>
          <target state="new">The end point of the line.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Horizontal line command</source>
          <target state="new">Horizontal line command</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Creates a horizontal line between the current point and the specified x-coordinate.</source>
          <target state="new">Creates a horizontal line between the current point and the specified x-coordinate.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>is an example of a valid horizontal line command.</source>
          <target state="new">is an example of a valid horizontal line command.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="new">Syntax</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>x</source>
          <target state="new">x</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>- or -</source>
          <target state="new">- or -</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>x</source>
          <target state="new">x</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Term</source>
          <target state="new">Term</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="new">Description</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>x</source>
          <target state="new">x</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Double</source>
          <target state="new">Double</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The x-coordinate of the end point of the line.</source>
          <target state="new">The x-coordinate of the end point of the line.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Vertical line command</source>
          <target state="new">Vertical line command</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Creates a vertical line between the current point and the specified y-coordinate.</source>
          <target state="new">Creates a vertical line between the current point and the specified y-coordinate.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>is an example of a valid vertical line command.</source>
          <target state="new">is an example of a valid vertical line command.</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="new">Syntax</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>y</source>
          <target state="new">y</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>- or -</source>
          <target state="new">- or -</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>y</source>
          <target state="new">y</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Term</source>
          <target state="new">Term</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="new">Description</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>y</source>
          <target state="new">y</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Double</source>
          <target state="new">Double</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The y-coordinate of the end point of the line.</source>
          <target state="new">The y-coordinate of the end point of the line.</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Cubic Bézier curve command</source>
          <target state="new">Cubic Bézier curve command</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Creates a cubic Bézier curve between the current point and the specified end point by using the two specified control points (<bpt id="p1">*</bpt>controlPoint1<ept id="p1">*</ept> and <bpt id="p2">*</bpt>controlPoint2<ept id="p2">*</ept>).</source>
          <target state="new">Creates a cubic Bézier curve between the current point and the specified end point by using the two specified control points (<bpt id="p1">*</bpt>controlPoint1<ept id="p1">*</ept> and <bpt id="p2">*</bpt>controlPoint2<ept id="p2">*</ept>).</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>is an example of a valid curve command.</source>
          <target state="new">is an example of a valid curve command.</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Defines the equivalent of a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PathGeometry<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br210168)</ept> object with a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>BezierSegment<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br228068)</ept> object.</source>
          <target state="new">Defines the equivalent of a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PathGeometry<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br210168)</ept> object with a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>BezierSegment<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br228068)</ept> object.</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="new">Syntax</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>controlPoint1<ept id="p1">*</ept> <bpt id="p2">*</bpt>controlPoint2<ept id="p2">*</ept> <bpt id="p3">*</bpt>endPoint<ept id="p3">*</ept></source>
          <target state="new"><bpt id="p1">*</bpt>controlPoint1<ept id="p1">*</ept> <bpt id="p2">*</bpt>controlPoint2<ept id="p2">*</ept> <bpt id="p3">*</bpt>endPoint<ept id="p3">*</ept></target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>- or -</source>
          <target state="new">- or -</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>controlPoint1<ept id="p1">*</ept> <bpt id="p2">*</bpt>controlPoint2<ept id="p2">*</ept> <bpt id="p3">*</bpt>endPoint<ept id="p3">*</ept></source>
          <target state="new"><bpt id="p1">*</bpt>controlPoint1<ept id="p1">*</ept> <bpt id="p2">*</bpt>controlPoint2<ept id="p2">*</ept> <bpt id="p3">*</bpt>endPoint<ept id="p3">*</ept></target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Term</source>
          <target state="new">Term</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="new">Description</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>controlPoint1</source>
          <target state="new">controlPoint1</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Point</source>
          <target state="new">Point</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The first control point of the curve, which determines the starting tangent of the curve.</source>
          <target state="new">The first control point of the curve, which determines the starting tangent of the curve.</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>controlPoint2</source>
          <target state="new">controlPoint2</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Point</source>
          <target state="new">Point</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The second control point of the curve, which determines the ending tangent of the curve.</source>
          <target state="new">The second control point of the curve, which determines the ending tangent of the curve.</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>endPoint</source>
          <target state="new">endPoint</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Point</source>
          <target state="new">Point</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The point to which the curve is drawn.</source>
          <target state="new">The point to which the curve is drawn.</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Quadratic Bézier curve command</source>
          <target state="new">Quadratic Bézier curve command</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Creates a quadratic Bézier curve between the current point and the specified end point by using the specified control point (<bpt id="p1">*</bpt>controlPoint<ept id="p1">*</ept>).</source>
          <target state="new">Creates a quadratic Bézier curve between the current point and the specified end point by using the specified control point (<bpt id="p1">*</bpt>controlPoint<ept id="p1">*</ept>).</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>is an example of a valid quadratic Bézier curve command.</source>
          <target state="new">is an example of a valid quadratic Bézier curve command.</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Defines the equivalent of a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PathGeometry<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br210168)</ept> with a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>QuadraticBezierSegment<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br210249)</ept>.</source>
          <target state="new">Defines the equivalent of a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PathGeometry<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br210168)</ept> with a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>QuadraticBezierSegment<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br210249)</ept>.</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="new">Syntax</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>controlPoint endPoint</source>
          <target state="new">controlPoint endPoint</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>- or -</source>
          <target state="new">- or -</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>controlPoint endPoint</source>
          <target state="new">controlPoint endPoint</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Term</source>
          <target state="new">Term</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="new">Description</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>controlPoint</source>
          <target state="new">controlPoint</target>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Point</source>
          <target state="new">Point</target>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The control point of the curve, which determines the starting and ending tangents of the curve.</source>
          <target state="new">The control point of the curve, which determines the starting and ending tangents of the curve.</target>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>endPoint</source>
          <target state="new">endPoint</target>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Point</source>
          <target state="new">Point</target>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The point to which the curve is drawn.</source>
          <target state="new">The point to which the curve is drawn.</target>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Smooth cubic Bézier curve command</source>
          <target state="new">Smooth cubic Bézier curve command</target>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Creates a cubic Bézier curve between the current point and the specified end point.</source>
          <target state="new">Creates a cubic Bézier curve between the current point and the specified end point.</target>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>The first control point is assumed to be the reflection of the second control point of the previous command relative to the current point.</source>
          <target state="new">The first control point is assumed to be the reflection of the second control point of the previous command relative to the current point.</target>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>If there is no previous command or if the previous command was not a cubic Bézier curve command or a smooth cubic Bézier curve command, assume the first control point is coincident with the current point.</source>
          <target state="new">If there is no previous command or if the previous command was not a cubic Bézier curve command or a smooth cubic Bézier curve command, assume the first control point is coincident with the current point.</target>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The second control point—the control point for the end of the curve—is specified by <bpt id="p1">*</bpt>controlPoint2<ept id="p1">*</ept>.</source>
          <target state="new">The second control point—the control point for the end of the curve—is specified by <bpt id="p1">*</bpt>controlPoint2<ept id="p1">*</ept>.</target>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>For example, <ph id="ph1">`S 100,200 200,300`</ph> is a valid smooth cubic Bézier curve command.</source>
          <target state="new">For example, <ph id="ph1">`S 100,200 200,300`</ph> is a valid smooth cubic Bézier curve command.</target>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>This command defines the equivalent of a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PathGeometry<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br210168)</ept> with a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>BezierSegment<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br228068)</ept> where there was preceding curve segment.</source>
          <target state="new">This command defines the equivalent of a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PathGeometry<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br210168)</ept> with a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>BezierSegment<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br228068)</ept> where there was preceding curve segment.</target>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="new">Syntax</target>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>controlPoint2<ept id="p1">*</ept> <bpt id="p2">*</bpt>endPoint<ept id="p2">*</ept></source>
          <target state="new"><bpt id="p1">*</bpt>controlPoint2<ept id="p1">*</ept> <bpt id="p2">*</bpt>endPoint<ept id="p2">*</ept></target>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>- or -</source>
          <target state="new">- or -</target>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>controlPoint2 endPoint</source>
          <target state="new">controlPoint2 endPoint</target>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Term</source>
          <target state="new">Term</target>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="new">Description</target>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>controlPoint2</source>
          <target state="new">controlPoint2</target>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Point</source>
          <target state="new">Point</target>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The control point of the curve, which determines the ending tangent of the curve.</source>
          <target state="new">The control point of the curve, which determines the ending tangent of the curve.</target>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>endPoint</source>
          <target state="new">endPoint</target>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Point</source>
          <target state="new">Point</target>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>The point to which the curve is drawn.</source>
          <target state="new">The point to which the curve is drawn.</target>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Smooth quadratic Bézier curve command</source>
          <target state="new">Smooth quadratic Bézier curve command</target>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Creates a quadratic Bézier curve between the current point and the specified end point.</source>
          <target state="new">Creates a quadratic Bézier curve between the current point and the specified end point.</target>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The control point is assumed to be the reflection of the control point of the previous command relative to the current point.</source>
          <target state="new">The control point is assumed to be the reflection of the control point of the previous command relative to the current point.</target>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>If there is no previous command or if the previous command was not a quadratic Bézier curve command or a smooth quadratic Bézier curve command, the control point is coincident with the current point.</source>
          <target state="new">If there is no previous command or if the previous command was not a quadratic Bézier curve command or a smooth quadratic Bézier curve command, the control point is coincident with the current point.</target>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>This command defines the equivalent of a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PathGeometry<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br210168)</ept> with a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>QuadraticBezierSegment<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br210249)</ept> where there was preceding curve segment.</source>
          <target state="new">This command defines the equivalent of a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PathGeometry<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br210168)</ept> with a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>QuadraticBezierSegment<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br210249)</ept> where there was preceding curve segment.</target>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="new">Syntax</target>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>controlPoint<ept id="p1">*</ept> <bpt id="p2">*</bpt>endPoint<ept id="p2">*</ept></source>
          <target state="new"><bpt id="p1">*</bpt>controlPoint<ept id="p1">*</ept> <bpt id="p2">*</bpt>endPoint<ept id="p2">*</ept></target>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>- or -</source>
          <target state="new">- or -</target>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>controlPoint<ept id="p1">*</ept> <bpt id="p2">*</bpt>endPoint<ept id="p2">*</ept></source>
          <target state="new"><bpt id="p1">*</bpt>controlPoint<ept id="p1">*</ept> <bpt id="p2">*</bpt>endPoint<ept id="p2">*</ept></target>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Term</source>
          <target state="new">Term</target>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="new">Description</target>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>controlPoint</source>
          <target state="new">controlPoint</target>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Point</source>
          <target state="new">Point</target>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>The control point of the curve, which determines the starting and tangent of the curve.</source>
          <target state="new">The control point of the curve, which determines the starting and tangent of the curve.</target>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>endPoint</source>
          <target state="new">endPoint</target>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Point</source>
          <target state="new">Point</target>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>The point to which the curve is drawn.</source>
          <target state="new">The point to which the curve is drawn.</target>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Elliptical arc command</source>
          <target state="new">Elliptical arc command</target>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Creates an elliptical arc between the current point and the specified end point.</source>
          <target state="new">Creates an elliptical arc between the current point and the specified end point.</target>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>Defines the equivalent of a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PathGeometry<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br210168)</ept> with an <bpt id="p3">[</bpt><bpt id="p4">**</bpt>ArcSegment<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br228054)</ept>.</source>
          <target state="new">Defines the equivalent of a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PathGeometry<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br210168)</ept> with an <bpt id="p3">[</bpt><bpt id="p4">**</bpt>ArcSegment<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br228054)</ept>.</target>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="new">Syntax</target>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>size<ept id="p1">*</ept> <bpt id="p2">*</bpt>rotationAngle<ept id="p2">*</ept> <bpt id="p3">*</bpt>isLargeArcFlag<ept id="p3">*</ept> <bpt id="p4">*</bpt>sweepDirectionFlag<ept id="p4">*</ept> <bpt id="p5">*</bpt>endPoint<ept id="p5">*</ept></source>
          <target state="new"><bpt id="p1">*</bpt>size<ept id="p1">*</ept> <bpt id="p2">*</bpt>rotationAngle<ept id="p2">*</ept> <bpt id="p3">*</bpt>isLargeArcFlag<ept id="p3">*</ept> <bpt id="p4">*</bpt>sweepDirectionFlag<ept id="p4">*</ept> <bpt id="p5">*</bpt>endPoint<ept id="p5">*</ept></target>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>- or -</source>
          <target state="new">- or -</target>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>sizerotationAngleisLargeArcFlagsweepDirectionFlagendPoint</source>
          <target state="new">sizerotationAngleisLargeArcFlagsweepDirectionFlagendPoint</target>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Term</source>
          <target state="new">Term</target>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="new">Description</target>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>size</source>
          <target state="new">size</target>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Size</source>
          <target state="new">Size</target>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>The x-radius and y-radius of the arc.</source>
          <target state="new">The x-radius and y-radius of the arc.</target>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>rotationAngle</source>
          <target state="new">rotationAngle</target>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Double</source>
          <target state="new">Double</target>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>The rotation of the ellipse, in degrees.</source>
          <target state="new">The rotation of the ellipse, in degrees.</target>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>isLargeArcFlag</source>
          <target state="new">isLargeArcFlag</target>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Set to 1 if the angle of the arc should be 180 degrees or greater; otherwise, set to 0.</source>
          <target state="new">Set to 1 if the angle of the arc should be 180 degrees or greater; otherwise, set to 0.</target>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>sweepDirectionFlag</source>
          <target state="new">sweepDirectionFlag</target>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>Set to 1 if the arc is drawn in a positive-angle direction; otherwise, set to 0.</source>
          <target state="new">Set to 1 if the arc is drawn in a positive-angle direction; otherwise, set to 0.</target>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>endPoint</source>
          <target state="new">endPoint</target>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>Point</source>
          <target state="new">Point</target>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>The point to which the arc is drawn.</source>
          <target state="new">The point to which the arc is drawn.</target>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Close command</source>
          <target state="new">Close command</target>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>Ends the current figure and creates a line that connects the current point to the starting point of the figure.</source>
          <target state="new">Ends the current figure and creates a line that connects the current point to the starting point of the figure.</target>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>This command creates a line-join (corner) between the last segment and the first segment of the figure.</source>
          <target state="new">This command creates a line-join (corner) between the last segment and the first segment of the figure.</target>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="new">Syntax</target>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>- or -</source>
          <target state="new">- or -</target>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>Point syntax</source>
          <target state="new">Point syntax</target>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Describes the x-coordinate and y-coordinate of a point.</source>
          <target state="new">Describes the x-coordinate and y-coordinate of a point.</target>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>See also <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Point<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br225870)</ept>.</source>
          <target state="new">See also <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Point<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br225870)</ept>.</target>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="new">Syntax</target>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>x<ept id="p1">*</ept>,<bpt id="p2">*</bpt>y<ept id="p2">*</ept></source>
          <target state="new"><bpt id="p1">*</bpt>x<ept id="p1">*</ept>,<bpt id="p2">*</bpt>y<ept id="p2">*</ept></target>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>- or -</source>
          <target state="new">- or -</target>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>x<ept id="p1">*</ept> <bpt id="p2">*</bpt>y<ept id="p2">*</ept></source>
          <target state="new"><bpt id="p1">*</bpt>x<ept id="p1">*</ept> <bpt id="p2">*</bpt>y<ept id="p2">*</ept></target>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Term</source>
          <target state="new">Term</target>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="new">Description</target>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>x</source>
          <target state="new">x</target>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>Double</source>
          <target state="new">Double</target>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>The x-coordinate of the point.</source>
          <target state="new">The x-coordinate of the point.</target>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>y</source>
          <target state="new">y</target>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>Double</source>
          <target state="new">Double</target>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>The y-coordinate of the point.</source>
          <target state="new">The y-coordinate of the point.</target>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Additional notes</source>
          <target state="new">Additional notes</target>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>Instead of a standard numerical value, you can also use the following special values.</source>
          <target state="new">Instead of a standard numerical value, you can also use the following special values.</target>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>These values are case sensitive.</source>
          <target state="new">These values are case sensitive.</target>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Infinity<ept id="p1">**</ept>: Represents <bpt id="p2">**</bpt>PositiveInfinity<ept id="p2">**</ept>.</source>
          <target state="new"><bpt id="p1">**</bpt>Infinity<ept id="p1">**</ept>: Represents <bpt id="p2">**</bpt>PositiveInfinity<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt><ph id="ph1">\-</ph>Infinity<ept id="p1">**</ept>: Represents <bpt id="p2">**</bpt>NegativeInfinity<ept id="p2">**</ept>.</source>
          <target state="new"><bpt id="p1">**</bpt><ph id="ph1">\-</ph>Infinity<ept id="p1">**</ept>: Represents <bpt id="p2">**</bpt>NegativeInfinity<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>NaN<ept id="p1">**</ept>: Represents <bpt id="p2">**</bpt>NaN<ept id="p2">**</ept>.</source>
          <target state="new"><bpt id="p1">**</bpt>NaN<ept id="p1">**</ept>: Represents <bpt id="p2">**</bpt>NaN<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>Instead of using decimals or integers, you can use scientific notation.</source>
          <target state="new">Instead of using decimals or integers, you can use scientific notation.</target>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>For example, <ph id="ph1">`+1.e17`</ph> is a valid value.</source>
          <target state="new">For example, <ph id="ph1">`+1.e17`</ph> is a valid value.</target>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>Design tools that produce move and draw commands</source>
          <target state="new">Design tools that produce move and draw commands</target>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>Using the <bpt id="p1">**</bpt>Pen<ept id="p1">**</ept> tool and other drawing tools in Blend for Microsoft Visual Studio 2013 will usually produce a <bpt id="p2">[</bpt><bpt id="p3">**</bpt>Path<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br243355)</ept> object, with move and draw commands.</source>
          <target state="new">Using the <bpt id="p1">**</bpt>Pen<ept id="p1">**</ept> tool and other drawing tools in Blend for Microsoft Visual Studio 2013 will usually produce a <bpt id="p2">[</bpt><bpt id="p3">**</bpt>Path<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br243355)</ept> object, with move and draw commands.</target>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>You might see existing move and draw command data in some of the control parts defined in the Windows Runtime XAML default templates for controls.</source>
          <target state="new">You might see existing move and draw command data in some of the control parts defined in the Windows Runtime XAML default templates for controls.</target>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>For example, some controls use a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PathIcon<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn252722)</ept> that has the data defined as move and draw commands.</source>
          <target state="new">For example, some controls use a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PathIcon<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn252722)</ept> that has the data defined as move and draw commands.</target>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>There are exporters or plug-ins available for other commonly used vector-graphics design tools that can output the vector in XAML form.</source>
          <target state="new">There are exporters or plug-ins available for other commonly used vector-graphics design tools that can output the vector in XAML form.</target>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>These usually create <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Path<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br243355)</ept> objects in a layout container, with move and draw commands for <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Path.Data<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br243356)</ept>.</source>
          <target state="new">These usually create <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Path<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br243355)</ept> objects in a layout container, with move and draw commands for <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Path.Data<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br243356)</ept>.</target>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>There may be multiple <bpt id="p1">**</bpt>Path<ept id="p1">**</ept> elements in the XAML so that different brushes can be applied.</source>
          <target state="new">There may be multiple <bpt id="p1">**</bpt>Path<ept id="p1">**</ept> elements in the XAML so that different brushes can be applied.</target>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>These exporters or plug-ins were originally written for Windows Presentation Foundation (WPF)  XAML, but that aspect of XAML syntax is identical with Windows Runtime XAML.</source>
          <target state="new">These exporters or plug-ins were originally written for Windows Presentation Foundation (WPF)  XAML, but that aspect of XAML syntax is identical with Windows Runtime XAML.</target>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>You can probably use chunks of XAML from an exporter and paste them right into a Windows Runtime XAML page.</source>
          <target state="new">You can probably use chunks of XAML from an exporter and paste them right into a Windows Runtime XAML page.</target>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>(However, you won't be able to use a <bpt id="p1">**</bpt>RadialGradientBrush<ept id="p1">**</ept>, if that was part of the converted XAML, because Windows Runtime XAML doesn't support that brush.)</source>
          <target state="new">(However, you won't be able to use a <bpt id="p1">**</bpt>RadialGradientBrush<ept id="p1">**</ept>, if that was part of the converted XAML, because Windows Runtime XAML doesn't support that brush.)</target>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>Related topics</source>
          <target state="new">Related topics</target>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>Draw shapes</source>
          <target state="new">Draw shapes</target>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>Use brushes</source>
          <target state="new">Use brushes</target>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>Path.Data</source>
          <target state="new">Path.Data</target>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>PathIcon</source>
          <target state="new">PathIcon</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>