<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="de-de" original="foo.file" tool-id="680d63e7-a1cb-4e7f-9d9f-e684cbd86535" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="680d63e7-a1cb-4e7f-9d9f-e684cbd86535" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
      <olfilehash xmlns="">4cdd040089bfeadcaeee02bf9a61f19722616f62</olfilehash>
    </header>
    <body>
      <group id="5fe18e8e-a6f4-41d0-b5e7-6817b2001faa">
        <trans-unit id="d9db3aae-ee7a-4fc9-9f59-33f245d936ff" xml:space="preserve">
          <source>What is "managed code"?</source>
          <target state="new">What is "managed code"?</target>
        </trans-unit>
        <trans-unit id="2f7a10dd-4c8d-49a4-8128-365af6434cad" xml:space="preserve">
          <source>When working with .NET Framework, you will often encounter the term
"managed code".</source>
          <target state="new">When working with .NET Framework, you will often encounter the term
"managed code".</target>
        </trans-unit>
        <trans-unit id="326bf898-ded4-497c-a311-1a2052a5d286" xml:space="preserve">
          <source>This document will explain what this term means and
additional information around it.</source>
          <target state="new">This document will explain what this term means and
additional information around it.</target>
        </trans-unit>
        <trans-unit id="5afeeacf-9054-426d-8f21-41002b98aefc" xml:space="preserve">
          <source>To put it very simply, managed code is just that: code whose execution
is managed by a runtime.</source>
          <target state="new">To put it very simply, managed code is just that: code whose execution
is managed by a runtime.</target>
        </trans-unit>
        <trans-unit id="0e6c13ad-40c0-4a4f-a347-e4d07013b702" xml:space="preserve">
          <source>In this case, the runtime in question is called
the <bpt id="ce2f5ade-e072-4777-b4b5-707f61a29de1">&lt;strong&gt;</bpt>Common Language Runtime<ept id="ce2f5ade-e072-4777-b4b5-707f61a29de1">&lt;/strong&gt;</ept> or CLR, regardless of the implementation
(<bpt id="a1fa5918-5b76-4578-baaa-48e5b84a0cadCapsExtId1">&lt;linkText&gt;</bpt>Mono<ept id="a1fa5918-5b76-4578-baaa-48e5b84a0cadCapsExtId1">&lt;/linkText&gt;</ept><bpt id="a1fa5918-5b76-4578-baaa-48e5b84a0cadCapsExtId2">&lt;title&gt;</bpt><ept id="a1fa5918-5b76-4578-baaa-48e5b84a0cadCapsExtId2">&lt;/title&gt;</ept> or .NET Framework or .NET Core).</source>
          <target state="new">In this case, the runtime in question is called
the <bpt id="ce2f5ade-e072-4777-b4b5-707f61a29de1">&lt;strong&gt;</bpt>Common Language Runtime<ept id="ce2f5ade-e072-4777-b4b5-707f61a29de1">&lt;/strong&gt;</ept> or CLR, regardless of the implementation
(<bpt id="a1fa5918-5b76-4578-baaa-48e5b84a0cadCapsExtId1">&lt;linkText&gt;</bpt>Mono<ept id="a1fa5918-5b76-4578-baaa-48e5b84a0cadCapsExtId1">&lt;/linkText&gt;</ept><bpt id="a1fa5918-5b76-4578-baaa-48e5b84a0cadCapsExtId2">&lt;title&gt;</bpt><ept id="a1fa5918-5b76-4578-baaa-48e5b84a0cadCapsExtId2">&lt;/title&gt;</ept> or .NET Framework or .NET Core).</target>
        </trans-unit>
        <trans-unit id="eb66bd69-5fe6-4f5d-9519-8c6618a27e8f" xml:space="preserve">
          <source>CLR is in charge of taking the managed code, compiling it into machine
code and then executing it.</source>
          <target state="new">CLR is in charge of taking the managed code, compiling it into machine
code and then executing it.</target>
        </trans-unit>
        <trans-unit id="c96f5683-afa1-41ee-ac4c-98699a326bf9" xml:space="preserve">
          <source>On top of that, runtime provides several
important services such as automatic memory management, security
boundaries, type safety etc.</source>
          <target state="new">On top of that, runtime provides several
important services such as automatic memory management, security
boundaries, type safety etc.</target>
        </trans-unit>
        <trans-unit id="9ddbbab7-7449-4d62-adb1-ca106255a23e" xml:space="preserve">
          <source>Contrast this to the way you would run a C/C++ program, also called
"unmanaged code".</source>
          <target state="new">Contrast this to the way you would run a C/C++ program, also called
"unmanaged code".</target>
        </trans-unit>
        <trans-unit id="c1f7346a-4159-4e4b-a40d-80d1b5e1a7ce" xml:space="preserve">
          <source>In the unmanaged world, the programmer is in charge of
pretty much everything.</source>
          <target state="new">In the unmanaged world, the programmer is in charge of
pretty much everything.</target>
        </trans-unit>
        <trans-unit id="1a8e8ea8-c0da-4b52-bd87-949285385b99" xml:space="preserve">
          <source>The actual program is, essentially, a binary
that the operating system (OS) loads into memory and starts.</source>
          <target state="new">The actual program is, essentially, a binary
that the operating system (OS) loads into memory and starts.</target>
        </trans-unit>
        <trans-unit id="961d9b73-c75c-4e4b-b077-3e01b486e87d" xml:space="preserve">
          <source>Everything
else, from memory management to security considerations are a burden of
the programmer.</source>
          <target state="new">Everything
else, from memory management to security considerations are a burden of
the programmer.</target>
        </trans-unit>
        <trans-unit id="f3b8f6b0-db04-4c8a-b6b6-b2e3a763e729" xml:space="preserve">
          <source>Managed code is written in one of the high-level languages that can be
run on top of the .NET platform, such as C\#, Visual Basic, F\# and
others.</source>
          <target state="new">Managed code is written in one of the high-level languages that can be
run on top of the .NET platform, such as C\#, Visual Basic, F\# and
others.</target>
        </trans-unit>
        <trans-unit id="9a1e1191-f575-47d7-b1dc-ba9be8f16505" xml:space="preserve">
          <source>When you compile code written in those languages with their
respective compiler, you don't get machine code.</source>
          <target state="new">When you compile code written in those languages with their
respective compiler, you don't get machine code.</target>
        </trans-unit>
        <trans-unit id="63f28747-9522-4bea-a407-750cfbb5b231" xml:space="preserve">
          <source>You get <bpt id="c5fb1b47-017a-40b8-9b89-1719c1736022">&lt;strong&gt;</bpt>Intermmidiate
Language<ept id="c5fb1b47-017a-40b8-9b89-1719c1736022">&lt;/strong&gt;</ept> code which the runtime then compiles and executes.</source>
          <target state="new">You get <bpt id="c5fb1b47-017a-40b8-9b89-1719c1736022">&lt;strong&gt;</bpt>Intermmidiate
Language<ept id="c5fb1b47-017a-40b8-9b89-1719c1736022">&lt;/strong&gt;</ept> code which the runtime then compiles and executes.</target>
        </trans-unit>
        <trans-unit id="aaa5337c-307b-42e3-ae97-e053b32e8e14" xml:space="preserve">
          <source>C++ is the
one exception to this rule, as it can also produce native, unmanaged
binaries that run on Windows.</source>
          <target state="new">C++ is the
one exception to this rule, as it can also produce native, unmanaged
binaries that run on Windows.</target>
        </trans-unit>
        <trans-unit id="83b89fd9-11d1-4b1a-a8b0-34046385e837" xml:space="preserve">
          <source>Intermediate Language &amp; Execution</source>
          <target state="new">Intermediate Language &amp; Execution</target>
        </trans-unit>
        <trans-unit id="36c4267b-5036-4125-a65b-d0e4ae833a00" xml:space="preserve">
          <source>What is "Intermediate Language" (or IL for short)?</source>
          <target state="new">What is "Intermediate Language" (or IL for short)?</target>
        </trans-unit>
        <trans-unit id="4de52f3e-45d3-47a7-9bc6-c3feabf6fcc5" xml:space="preserve">
          <source>It is a product of
compilation of code written in high-level .NET languages.</source>
          <target state="new">It is a product of
compilation of code written in high-level .NET languages.</target>
        </trans-unit>
        <trans-unit id="2766e59e-30b2-4823-9fb8-db96032de6df" xml:space="preserve">
          <source>Once you
compile your code written in one of these languages, you will get a
binary that is made out of IL.</source>
          <target state="new">Once you
compile your code written in one of these languages, you will get a
binary that is made out of IL.</target>
        </trans-unit>
        <trans-unit id="8003b3dd-6b8c-4ee0-a205-cfe9f4e1a6b4" xml:space="preserve">
          <source>It is important to note that the IL is
independent from any specific language that runs on top of the runtime;
there is even a separate specification for it that you can read if
you're so inclined.</source>
          <target state="new">It is important to note that the IL is
independent from any specific language that runs on top of the runtime;
there is even a separate specification for it that you can read if
you're so inclined.</target>
        </trans-unit>
        <trans-unit id="8a5c031f-5397-4551-a1e1-c47fb324bcf4" xml:space="preserve">
          <source>Once you produce IL from your high-level code, you will most likely want
to run it.</source>
          <target state="new">Once you produce IL from your high-level code, you will most likely want
to run it.</target>
        </trans-unit>
        <trans-unit id="4a56f2f4-9595-4987-a6d8-76a31d203459" xml:space="preserve">
          <source>This is where the CLR takes over and starts the process of
<bpt id="4c4db1ea-a8df-4ba6-8178-1acdca3e0500">&lt;strong&gt;</bpt>Just-In-Time<ept id="4c4db1ea-a8df-4ba6-8178-1acdca3e0500">&lt;/strong&gt;</ept> compiling, or <bpt id="c65f9396-4c36-4501-8f58-6d25fe8fbe05">&lt;strong&gt;</bpt>JIT-ing<ept id="c65f9396-4c36-4501-8f58-6d25fe8fbe05">&lt;/strong&gt;</ept> your code from IL to machine
code that can actually be ran on a CPU.</source>
          <target state="new">This is where the CLR takes over and starts the process of
<bpt id="4c4db1ea-a8df-4ba6-8178-1acdca3e0500">&lt;strong&gt;</bpt>Just-In-Time<ept id="4c4db1ea-a8df-4ba6-8178-1acdca3e0500">&lt;/strong&gt;</ept> compiling, or <bpt id="c65f9396-4c36-4501-8f58-6d25fe8fbe05">&lt;strong&gt;</bpt>JIT-ing<ept id="c65f9396-4c36-4501-8f58-6d25fe8fbe05">&lt;/strong&gt;</ept> your code from IL to machine
code that can actually be ran on a CPU.</target>
        </trans-unit>
        <trans-unit id="9549c2e9-0ba6-488a-ac71-f97ee9c7dcb2" xml:space="preserve">
          <source>In this way, the CLR knows
exactly what your code is doing and can effectivelly <bpt id="60589e55-507f-495a-9a21-30d4e9fa4638">&lt;em&gt;</bpt>manage<ept id="60589e55-507f-495a-9a21-30d4e9fa4638">&lt;/em&gt;</ept> it.</source>
          <target state="new">In this way, the CLR knows
exactly what your code is doing and can effectivelly <bpt id="60589e55-507f-495a-9a21-30d4e9fa4638">&lt;em&gt;</bpt>manage<ept id="60589e55-507f-495a-9a21-30d4e9fa4638">&lt;/em&gt;</ept> it.</target>
        </trans-unit>
        <trans-unit id="9eef5ceb-9d1e-4174-8a0c-509826e03a60" xml:space="preserve">
          <source>Umanaged code interoperability</source>
          <target state="new">Umanaged code interoperability</target>
        </trans-unit>
        <trans-unit id="d77c3caa-9ce2-4eaf-8f3b-a351445d778a" xml:space="preserve">
          <source>Of course, the CLR allows passing the boundaries between managed and
unmanaged world, and there is a lot of code that does that, even in the
Base Class Libraries &amp;lt;framework-libraries&amp;gt;.</source>
          <target state="new">Of course, the CLR allows passing the boundaries between managed and
unmanaged world, and there is a lot of code that does that, even in the
Base Class Libraries &amp;lt;framework-libraries&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="1e67cd37-7fcd-4273-aa4b-96d7a5ebfe1a" xml:space="preserve">
          <source>This is called
<bpt id="bb0e188d-a8e8-4d28-b470-3ce2a157c65e">&lt;strong&gt;</bpt>interoperability<ept id="bb0e188d-a8e8-4d28-b470-3ce2a157c65e">&lt;/strong&gt;</ept> or just <bpt id="de0c5a95-5dd5-4bcb-a7dc-065e257e5192">&lt;strong&gt;</bpt>interop<ept id="de0c5a95-5dd5-4bcb-a7dc-065e257e5192">&lt;/strong&gt;</ept> for short.</source>
          <target state="new">This is called
<bpt id="bb0e188d-a8e8-4d28-b470-3ce2a157c65e">&lt;strong&gt;</bpt>interoperability<ept id="bb0e188d-a8e8-4d28-b470-3ce2a157c65e">&lt;/strong&gt;</ept> or just <bpt id="de0c5a95-5dd5-4bcb-a7dc-065e257e5192">&lt;strong&gt;</bpt>interop<ept id="de0c5a95-5dd5-4bcb-a7dc-065e257e5192">&lt;/strong&gt;</ept> for short.</target>
        </trans-unit>
        <trans-unit id="47e97cb9-9fa9-436d-b9d7-4eb3501b025f" xml:space="preserve">
          <source>These provisions
would allow you to, for example, wrap up an unmanaged library and call
into it.</source>
          <target state="new">These provisions
would allow you to, for example, wrap up an unmanaged library and call
into it.</target>
        </trans-unit>
        <trans-unit id="90e18459-9e4f-417a-9ab7-68043f945593" xml:space="preserve">
          <source>However, it is important to note that once you do this, when
the code passes the boundaries of the runtime, the actual management of
the execution is again in the hand of unmanged code, and thus falls
under the same restrictions.</source>
          <target state="new">However, it is important to note that once you do this, when
the code passes the boundaries of the runtime, the actual management of
the execution is again in the hand of unmanged code, and thus falls
under the same restrictions.</target>
        </trans-unit>
        <trans-unit id="69280db6-437e-4e00-a251-a0be858612b1" xml:space="preserve">
          <source>Similar to this, C\# is one language that allows you to use unmanaged
constructs such as pointers directly in code by utilizing what is known
as <bpt id="6bd38df3-cfd0-45c1-951b-410d44cb7843">&lt;strong&gt;</bpt>unsafe context<ept id="6bd38df3-cfd0-45c1-951b-410d44cb7843">&lt;/strong&gt;</ept> which designates a piece of code for which the
execution is not managed by the CLR.</source>
          <target state="new">Similar to this, C\# is one language that allows you to use unmanaged
constructs such as pointers directly in code by utilizing what is known
as <bpt id="6bd38df3-cfd0-45c1-951b-410d44cb7843">&lt;strong&gt;</bpt>unsafe context<ept id="6bd38df3-cfd0-45c1-951b-410d44cb7843">&lt;/strong&gt;</ept> which designates a piece of code for which the
execution is not managed by the CLR.</target>
        </trans-unit>
        <trans-unit id="481aef1e-6bb0-45af-a60b-a15b2f7b8db2" xml:space="preserve">
          <source>More resources</source>
          <target state="new">More resources</target>
        </trans-unit>
        <trans-unit id="ed2e60a5-7fb3-4f72-ae84-1178ac0ffbb7" xml:space="preserve">
          <source><bpt id="98233f31-c5c6-4cbe-9d82-2e308eb18b50CapsExtId1">&lt;linkText&gt;</bpt>.NET Framework Conceptual Overview<ept id="98233f31-c5c6-4cbe-9d82-2e308eb18b50CapsExtId1">&lt;/linkText&gt;</ept><bpt id="98233f31-c5c6-4cbe-9d82-2e308eb18b50CapsExtId2">&lt;title&gt;</bpt><ept id="98233f31-c5c6-4cbe-9d82-2e308eb18b50CapsExtId2">&lt;/title&gt;</ept></source>
          <target state="new"><bpt id="98233f31-c5c6-4cbe-9d82-2e308eb18b50CapsExtId1">&lt;linkText&gt;</bpt>.NET Framework Conceptual Overview<ept id="98233f31-c5c6-4cbe-9d82-2e308eb18b50CapsExtId1">&lt;/linkText&gt;</ept><bpt id="98233f31-c5c6-4cbe-9d82-2e308eb18b50CapsExtId2">&lt;title&gt;</bpt><ept id="98233f31-c5c6-4cbe-9d82-2e308eb18b50CapsExtId2">&lt;/title&gt;</ept></target>
        </trans-unit>
        <trans-unit id="7671833d-5090-444b-a5f0-40ddfd21ad0d" xml:space="preserve">
          <source><bpt id="315acc69-c181-4e09-abfc-7dfc332853a1CapsExtId1">&lt;linkText&gt;</bpt>Unsafe Code and Pointers<ept id="315acc69-c181-4e09-abfc-7dfc332853a1CapsExtId1">&lt;/linkText&gt;</ept><bpt id="315acc69-c181-4e09-abfc-7dfc332853a1CapsExtId2">&lt;title&gt;</bpt><ept id="315acc69-c181-4e09-abfc-7dfc332853a1CapsExtId2">&lt;/title&gt;</ept></source>
          <target state="new"><bpt id="315acc69-c181-4e09-abfc-7dfc332853a1CapsExtId1">&lt;linkText&gt;</bpt>Unsafe Code and Pointers<ept id="315acc69-c181-4e09-abfc-7dfc332853a1CapsExtId1">&lt;/linkText&gt;</ept><bpt id="315acc69-c181-4e09-abfc-7dfc332853a1CapsExtId2">&lt;title&gt;</bpt><ept id="315acc69-c181-4e09-abfc-7dfc332853a1CapsExtId2">&lt;/title&gt;</ept></target>
        </trans-unit>
        <trans-unit id="34b09b44-9f70-46eb-80e8-7cfbac95fc28" xml:space="preserve">
          <source><bpt id="f88a3bc3-9469-4f11-8488-96c04ffa67c6CapsExtId1">&lt;linkText&gt;</bpt>Interoperability (C\# Programming guide)<ept id="f88a3bc3-9469-4f11-8488-96c04ffa67c6CapsExtId1">&lt;/linkText&gt;</ept><bpt id="f88a3bc3-9469-4f11-8488-96c04ffa67c6CapsExtId2">&lt;title&gt;</bpt><ept id="f88a3bc3-9469-4f11-8488-96c04ffa67c6CapsExtId2">&lt;/title&gt;</ept></source>
          <target state="new"><bpt id="f88a3bc3-9469-4f11-8488-96c04ffa67c6CapsExtId1">&lt;linkText&gt;</bpt>Interoperability (C\# Programming guide)<ept id="f88a3bc3-9469-4f11-8488-96c04ffa67c6CapsExtId1">&lt;/linkText&gt;</ept><bpt id="f88a3bc3-9469-4f11-8488-96c04ffa67c6CapsExtId2">&lt;title&gt;</bpt><ept id="f88a3bc3-9469-4f11-8488-96c04ffa67c6CapsExtId2">&lt;/title&gt;</ept></target>
        </trans-unit>
        <trans-unit id="64a4ee84-ebdb-4fb3-87b2-a67cc7c62f9a" xml:space="preserve">
          <source>Comments</source>
          <target state="new">Comments</target>
        </trans-unit>
        <trans-unit id="50f1c886-9371-4581-b44b-55029ec7771f" xml:space="preserve">
          <source>
  // CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE
  var disqus<bpt id="2fb72f95-b527-493c-adf1-b0dcd03b687a">&lt;em&gt;</bpt>shortname = 'devdivcn'; // required: replace example with your forum shortname
  // DON'T EDIT BELOW THIS LINE
  (function() {
    var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
    dsq.src = '//' + disqus<ept id="2fb72f95-b527-493c-adf1-b0dcd03b687a">&lt;/em&gt;</ept>shortname + '.disqus.com/embed.js';
    (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
  })();
  </source>
          <target state="new">
  // CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE
  var disqus<bpt id="2fb72f95-b527-493c-adf1-b0dcd03b687a">&lt;em&gt;</bpt>shortname = 'devdivcn'; // required: replace example with your forum shortname
  // DON'T EDIT BELOW THIS LINE
  (function() {
    var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
    dsq.src = '//' + disqus<ept id="2fb72f95-b527-493c-adf1-b0dcd03b687a">&lt;/em&gt;</ept>shortname + '.disqus.com/embed.js';
    (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
  })();
  </target>
        </trans-unit>
        <trans-unit id="e6a557d3-d55c-4c86-bb9c-7508bc70816b" xml:space="preserve">
          <source>Please enable JavaScript to view the </source>
          <target state="new">Please enable JavaScript to view the </target>
        </trans-unit>
        <trans-unit id="999973a6-b3e2-4c0f-81a2-c5e0fd7b190e" xml:space="preserve">
          <source>comments powered by Disqus.</source>
          <target state="new">comments powered by Disqus.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>