<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="de-de" original="foo.file" tool-id="7eda20da-7802-4930-bc6a-ee6433e9677f" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="7eda20da-7802-4930-bc6a-ee6433e9677f" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
      <olfilehash xmlns="">bcf7532d43ea83ecd9e14c33f94b7b22246b6e4d</olfilehash>
    </header>
    <body>
      <group id="15137735-89d8-4f6b-84aa-4f6d1b62a6d9">
        <trans-unit id="d16b69f6-1302-4ee1-8b34-eae965109f58" xml:space="preserve">
          <source>.NET Assembly File Format</source>
          <target state="new">.NET Assembly File Format</target>
        </trans-unit>
        <trans-unit id="bfd4fdbc-86b3-496b-99d5-36434fe0089f" xml:space="preserve">
          <source>The .NET platform defines a binary file format - "assembly" - that is used to fully-describe and contain .NET programs.</source>
          <target state="new">The .NET platform defines a binary file format - "assembly" - that is used to fully-describe and contain .NET programs.</target>
        </trans-unit>
        <trans-unit id="d3ec7bd4-94d3-4a2e-8dda-9c116827a5a2" xml:space="preserve">
          <source>Assemblies are used for the programs themselves as well as any dependent libraries.</source>
          <target state="new">Assemblies are used for the programs themselves as well as any dependent libraries.</target>
        </trans-unit>
        <trans-unit id="c5f5d2dc-3a25-47f8-adbb-e4b1a9c35b94" xml:space="preserve">
          <source>A .NET program can be executed as one of more assemblies, with no other required artifacts, beyond the appropriate .NET runtime.</source>
          <target state="new">A .NET program can be executed as one of more assemblies, with no other required artifacts, beyond the appropriate .NET runtime.</target>
        </trans-unit>
        <trans-unit id="03db8543-7558-4da1-a8e3-9d1552c84f03" xml:space="preserve">
          <source>Native dependencies, including operating system APIs, are a separate concern and are not contained within the .NET assembly format, although are sometimes described with this format (e.g. WinRT).</source>
          <target state="new">Native dependencies, including operating system APIs, are a separate concern and are not contained within the .NET assembly format, although are sometimes described with this format (e.g. WinRT).</target>
        </trans-unit>
        <trans-unit id="b74e1de0-e615-483a-a91e-d9fc51c90759" xml:space="preserve">
          <source>Each CLI component carries the metadata for declarations, implementations, and references specific to that component.</source>
          <target state="new">Each CLI component carries the metadata for declarations, implementations, and references specific to that component.</target>
        </trans-unit>
        <trans-unit id="359fd70a-a7b3-4ac1-9dae-c221f9d1f298" xml:space="preserve">
          <source>Therefore, the component-specific metadata is referred to as component metadata, and the resulting component is said to be self-describing -- from ECMA 335 I.9.1, Components and assemblies.</source>
          <target state="new">Therefore, the component-specific metadata is referred to as component metadata, and the resulting component is said to be self-describing -- from ECMA 335 I.9.1, Components and assemblies.</target>
        </trans-unit>
        <trans-unit id="6d9ca6e2-e9da-4e83-8fe8-bc16789c72f1" xml:space="preserve">
          <source>The format is fully specified and standardized as <bpt id="29f02d01-c0bf-4859-9f98-12771e6e48ccCapsExtId1">&lt;linkText&gt;</bpt>ECMA 335<ept id="29f02d01-c0bf-4859-9f98-12771e6e48ccCapsExtId1">&lt;/linkText&gt;</ept><bpt id="29f02d01-c0bf-4859-9f98-12771e6e48ccCapsExtId2">&lt;title&gt;</bpt><ept id="29f02d01-c0bf-4859-9f98-12771e6e48ccCapsExtId2">&lt;/title&gt;</ept>.</source>
          <target state="new">The format is fully specified and standardized as <bpt id="29f02d01-c0bf-4859-9f98-12771e6e48ccCapsExtId1">&lt;linkText&gt;</bpt>ECMA 335<ept id="29f02d01-c0bf-4859-9f98-12771e6e48ccCapsExtId1">&lt;/linkText&gt;</ept><bpt id="29f02d01-c0bf-4859-9f98-12771e6e48ccCapsExtId2">&lt;title&gt;</bpt><ept id="29f02d01-c0bf-4859-9f98-12771e6e48ccCapsExtId2">&lt;/title&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="dc02b281-591d-489e-b8fe-ba89405cce16" xml:space="preserve">
          <source>All .NET compilers and runtimes use this format.</source>
          <target state="new">All .NET compilers and runtimes use this format.</target>
        </trans-unit>
        <trans-unit id="73470658-20d6-40c3-a8fd-f1590ebfd638" xml:space="preserve">
          <source>The presense of a documented and infrequently updated binary format has been a major benefit (arguably a requirement) for interoperatibility.</source>
          <target state="new">The presense of a documented and infrequently updated binary format has been a major benefit (arguably a requirement) for interoperatibility.</target>
        </trans-unit>
        <trans-unit id="7fb46f26-384d-4927-8144-c34829efdd93" xml:space="preserve">
          <source>The format was last updated in a substantive way in 2005 (.NET 2.0) to accomodate generics and processor architecture.</source>
          <target state="new">The format was last updated in a substantive way in 2005 (.NET 2.0) to accomodate generics and processor architecture.</target>
        </trans-unit>
        <trans-unit id="698c34ea-7fc8-4bd2-8920-751f7de3ada9" xml:space="preserve">
          <source>The format is CPU- and OS-agnostic.</source>
          <target state="new">The format is CPU- and OS-agnostic.</target>
        </trans-unit>
        <trans-unit id="42310aa0-6287-48b8-8c9d-45f724254bbb" xml:space="preserve">
          <source>It has been used as part of .NET runtimes that target many chips and CPUs.</source>
          <target state="new">It has been used as part of .NET runtimes that target many chips and CPUs.</target>
        </trans-unit>
        <trans-unit id="3253f8c5-f58f-4ec8-8c41-8b9e7a0580d0" xml:space="preserve">
          <source>While the format itself has Windows heritage, it is implementable on any operating system.</source>
          <target state="new">While the format itself has Windows heritage, it is implementable on any operating system.</target>
        </trans-unit>
        <trans-unit id="52039f39-eae7-4b1f-9965-33318a5170a3" xml:space="preserve">
          <source>It's arguably most significant choice for OS interopertability is that most values are stored in little-endian format.</source>
          <target state="new">It's arguably most significant choice for OS interopertability is that most values are stored in little-endian format.</target>
        </trans-unit>
        <trans-unit id="a26c1937-d1d0-418c-8340-425675ce7b4c" xml:space="preserve">
          <source>It doesn't have a specific affinity to machine pointer size (e.g. 32-bit, 64-bit).</source>
          <target state="new">It doesn't have a specific affinity to machine pointer size (e.g. 32-bit, 64-bit).</target>
        </trans-unit>
        <trans-unit id="08557c2d-bdb9-413e-9b75-d0611ec45f25" xml:space="preserve">
          <source>The .NET assembly format is also very descriptive about the structure of a given program or library.</source>
          <target state="new">The .NET assembly format is also very descriptive about the structure of a given program or library.</target>
        </trans-unit>
        <trans-unit id="291935bc-f5bd-427b-90f5-287add811ff8" xml:space="preserve">
          <source>It describes the internal components of an assembly, specifically: assembly references and types defined and their internal structure.</source>
          <target state="new">It describes the internal components of an assembly, specifically: assembly references and types defined and their internal structure.</target>
        </trans-unit>
        <trans-unit id="eb47df46-0cda-4057-a05b-cb0726ecfc20" xml:space="preserve">
          <source>Tools or APIs can read and process this information for display or to make programmatic decisions.</source>
          <target state="new">Tools or APIs can read and process this information for display or to make programmatic decisions.</target>
        </trans-unit>
        <trans-unit id="d4bf0d1a-9fa3-4f1c-808b-1847baaf5643" xml:space="preserve">
          <source>Format</source>
          <target state="new">Format</target>
        </trans-unit>
        <trans-unit id="4743cfdc-ccf0-454b-ad5d-bedb0df81eda" xml:space="preserve">
          <source>The .NET binary format is based on the Windows <bpt id="30ae8d5a-01a4-4669-b87b-2636ea0db719CapsExtId1">&lt;linkText&gt;</bpt>PE file<ept id="30ae8d5a-01a4-4669-b87b-2636ea0db719CapsExtId1">&lt;/linkText&gt;</ept><bpt id="30ae8d5a-01a4-4669-b87b-2636ea0db719CapsExtId2">&lt;title&gt;</bpt><ept id="30ae8d5a-01a4-4669-b87b-2636ea0db719CapsExtId2">&lt;/title&gt;</ept> format.</source>
          <target state="new">The .NET binary format is based on the Windows <bpt id="30ae8d5a-01a4-4669-b87b-2636ea0db719CapsExtId1">&lt;linkText&gt;</bpt>PE file<ept id="30ae8d5a-01a4-4669-b87b-2636ea0db719CapsExtId1">&lt;/linkText&gt;</ept><bpt id="30ae8d5a-01a4-4669-b87b-2636ea0db719CapsExtId2">&lt;title&gt;</bpt><ept id="30ae8d5a-01a4-4669-b87b-2636ea0db719CapsExtId2">&lt;/title&gt;</ept> format.</target>
        </trans-unit>
        <trans-unit id="8e25e129-8633-4822-8774-6f1e1fb93cb3" xml:space="preserve">
          <source>In fact, .NET class libraries are conformant Windows PEs, and appear on first glance to be Windows dynamic link libraries (DLLs) or application executables (EXEs).</source>
          <target state="new">In fact, .NET class libraries are conformant Windows PEs, and appear on first glance to be Windows dynamic link libraries (DLLs) or application executables (EXEs).</target>
        </trans-unit>
        <trans-unit id="f79fb882-0ecd-4261-94cf-ef2565849d85" xml:space="preserve">
          <source>This is a very useful characteristic on Windows, where they can masquerade as native executable binaries and get some of the same treatment (e.g. OS load, PE tools).</source>
          <target state="new">This is a very useful characteristic on Windows, where they can masquerade as native executable binaries and get some of the same treatment (e.g. OS load, PE tools).</target>
        </trans-unit>
        <trans-unit id="c0223723-d1fe-45de-8175-9cdabac2b3db" xml:space="preserve">
          <source>Assembly Headers Assemblies headers from ECMA 335 II.25.1, Structure of the runtime file format.</source>
          <target state="new">Assembly Headers Assemblies headers from ECMA 335 II.25.1, Structure of the runtime file format.</target>
        </trans-unit>
        <trans-unit id="355447a2-e8b2-4027-b0c9-47f9918d0a26" xml:space="preserve">
          <source>Processing the Assemblies</source>
          <target state="new">Processing the Assemblies</target>
        </trans-unit>
        <trans-unit id="b9ee2189-2224-4797-aca6-e4eb5c416b49" xml:space="preserve">
          <source>It is possible to write tools or APIs to process assemblies.</source>
          <target state="new">It is possible to write tools or APIs to process assemblies.</target>
        </trans-unit>
        <trans-unit id="f01956ae-a743-42e6-9859-229c4dd4a33e" xml:space="preserve">
          <source>Assembly information enables making programmatic decisions at runtime, re-writing assemblies, providing API intellisense in an editor and generating documentation.</source>
          <target state="new">Assembly information enables making programmatic decisions at runtime, re-writing assemblies, providing API intellisense in an editor and generating documentation.</target>
        </trans-unit>
        <trans-unit id="b37ec5fc-a148-48cb-aba7-e51ca7ff70b1" xml:space="preserve">
          <source><bpt id="cd48357e-02ec-4c86-ab72-924c91abbfc2CapsExtId1">&lt;linkText&gt;</bpt>System.Reflection<ept id="cd48357e-02ec-4c86-ab72-924c91abbfc2CapsExtId1">&lt;/linkText&gt;</ept><bpt id="cd48357e-02ec-4c86-ab72-924c91abbfc2CapsExtId2">&lt;title&gt;</bpt><ept id="cd48357e-02ec-4c86-ab72-924c91abbfc2CapsExtId2">&lt;/title&gt;</ept> and <bpt id="a2a6ffc7-bcbd-4a19-9b8e-104df337a2daCapsExtId1">&lt;linkText&gt;</bpt>Mono.Cecil<ept id="a2a6ffc7-bcbd-4a19-9b8e-104df337a2daCapsExtId1">&lt;/linkText&gt;</ept><bpt id="a2a6ffc7-bcbd-4a19-9b8e-104df337a2daCapsExtId2">&lt;title&gt;</bpt><ept id="a2a6ffc7-bcbd-4a19-9b8e-104df337a2daCapsExtId2">&lt;/title&gt;</ept> are good examples of tools that are frequently used for this purpose.</source>
          <target state="new"><bpt id="cd48357e-02ec-4c86-ab72-924c91abbfc2CapsExtId1">&lt;linkText&gt;</bpt>System.Reflection<ept id="cd48357e-02ec-4c86-ab72-924c91abbfc2CapsExtId1">&lt;/linkText&gt;</ept><bpt id="cd48357e-02ec-4c86-ab72-924c91abbfc2CapsExtId2">&lt;title&gt;</bpt><ept id="cd48357e-02ec-4c86-ab72-924c91abbfc2CapsExtId2">&lt;/title&gt;</ept> and <bpt id="a2a6ffc7-bcbd-4a19-9b8e-104df337a2daCapsExtId1">&lt;linkText&gt;</bpt>Mono.Cecil<ept id="a2a6ffc7-bcbd-4a19-9b8e-104df337a2daCapsExtId1">&lt;/linkText&gt;</ept><bpt id="a2a6ffc7-bcbd-4a19-9b8e-104df337a2daCapsExtId2">&lt;title&gt;</bpt><ept id="a2a6ffc7-bcbd-4a19-9b8e-104df337a2daCapsExtId2">&lt;/title&gt;</ept> are good examples of tools that are frequently used for this purpose.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>