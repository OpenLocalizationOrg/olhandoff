<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-cn" original="foo.file" tool-id="73842a06-a7c2-48cc-a742-b1875366bdd3" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="73842a06-a7c2-48cc-a742-b1875366bdd3" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
      <olfilehash xmlns="">bcf7532d43ea83ecd9e14c33f94b7b22246b6e4d</olfilehash>
    </header>
    <body>
      <group id="97588e03-5082-4af0-8056-ea919bb32844">
        <trans-unit id="5fde32c6-baf4-4976-bef8-6e5715e6b3e3" xml:space="preserve">
          <source>.NET Assembly File Format</source>
          <target state="new">.NET Assembly File Format</target>
        </trans-unit>
        <trans-unit id="10466b2a-499f-45f7-89be-502fc1b27d5d" xml:space="preserve">
          <source>The .NET platform defines a binary file format - "assembly" - that is used to fully-describe and contain .NET programs.</source>
          <target state="new">The .NET platform defines a binary file format - "assembly" - that is used to fully-describe and contain .NET programs.</target>
        </trans-unit>
        <trans-unit id="17d1afb6-3853-4c28-aeaa-37168d3db0c8" xml:space="preserve">
          <source>Assemblies are used for the programs themselves as well as any dependent libraries.</source>
          <target state="new">Assemblies are used for the programs themselves as well as any dependent libraries.</target>
        </trans-unit>
        <trans-unit id="e9cecef8-9325-46f4-9e47-2dd4b984577e" xml:space="preserve">
          <source>A .NET program can be executed as one of more assemblies, with no other required artifacts, beyond the appropriate .NET runtime.</source>
          <target state="new">A .NET program can be executed as one of more assemblies, with no other required artifacts, beyond the appropriate .NET runtime.</target>
        </trans-unit>
        <trans-unit id="81d20fea-f1b3-4969-99fe-64859ededd11" xml:space="preserve">
          <source>Native dependencies, including operating system APIs, are a separate concern and are not contained within the .NET assembly format, although are sometimes described with this format (e.g. WinRT).</source>
          <target state="new">Native dependencies, including operating system APIs, are a separate concern and are not contained within the .NET assembly format, although are sometimes described with this format (e.g. WinRT).</target>
        </trans-unit>
        <trans-unit id="aaafaafc-c7e9-44e6-89ac-c81051841996" xml:space="preserve">
          <source>Each CLI component carries the metadata for declarations, implementations, and references specific to that component.</source>
          <target state="new">Each CLI component carries the metadata for declarations, implementations, and references specific to that component.</target>
        </trans-unit>
        <trans-unit id="1bb14136-e1fb-45d8-9236-6ee77d514e2b" xml:space="preserve">
          <source>Therefore, the component-specific metadata is referred to as component metadata, and the resulting component is said to be self-describing -- from ECMA 335 I.9.1, Components and assemblies.</source>
          <target state="new">Therefore, the component-specific metadata is referred to as component metadata, and the resulting component is said to be self-describing -- from ECMA 335 I.9.1, Components and assemblies.</target>
        </trans-unit>
        <trans-unit id="10ac8777-9f58-4e99-91cf-d7bb49fa37ee" xml:space="preserve">
          <source>The format is fully specified and standardized as <bpt id="40e840cc-0745-428c-8e7f-42a6f69752b6CapsExtId1">&lt;linkText&gt;</bpt>ECMA 335<ept id="40e840cc-0745-428c-8e7f-42a6f69752b6CapsExtId1">&lt;/linkText&gt;</ept><bpt id="40e840cc-0745-428c-8e7f-42a6f69752b6CapsExtId2">&lt;title&gt;</bpt><ept id="40e840cc-0745-428c-8e7f-42a6f69752b6CapsExtId2">&lt;/title&gt;</ept>.</source>
          <target state="new">The format is fully specified and standardized as <bpt id="40e840cc-0745-428c-8e7f-42a6f69752b6CapsExtId1">&lt;linkText&gt;</bpt>ECMA 335<ept id="40e840cc-0745-428c-8e7f-42a6f69752b6CapsExtId1">&lt;/linkText&gt;</ept><bpt id="40e840cc-0745-428c-8e7f-42a6f69752b6CapsExtId2">&lt;title&gt;</bpt><ept id="40e840cc-0745-428c-8e7f-42a6f69752b6CapsExtId2">&lt;/title&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="f81b01f5-7158-4971-89e8-3a067dd2a7ef" xml:space="preserve">
          <source>All .NET compilers and runtimes use this format.</source>
          <target state="new">All .NET compilers and runtimes use this format.</target>
        </trans-unit>
        <trans-unit id="bfcc34e5-5b0e-4f1a-ace3-7231129b4662" xml:space="preserve">
          <source>The presense of a documented and infrequently updated binary format has been a major benefit (arguably a requirement) for interoperatibility.</source>
          <target state="new">The presense of a documented and infrequently updated binary format has been a major benefit (arguably a requirement) for interoperatibility.</target>
        </trans-unit>
        <trans-unit id="73b73b6b-ecfd-4012-9d2e-5cb0ebb057b8" xml:space="preserve">
          <source>The format was last updated in a substantive way in 2005 (.NET 2.0) to accomodate generics and processor architecture.</source>
          <target state="new">The format was last updated in a substantive way in 2005 (.NET 2.0) to accomodate generics and processor architecture.</target>
        </trans-unit>
        <trans-unit id="e73edf2a-c2ab-4cb0-b4b6-c6faef8fdc9f" xml:space="preserve">
          <source>The format is CPU- and OS-agnostic.</source>
          <target state="new">The format is CPU- and OS-agnostic.</target>
        </trans-unit>
        <trans-unit id="eddffbaa-d40e-43aa-a326-1eea504b88c2" xml:space="preserve">
          <source>It has been used as part of .NET runtimes that target many chips and CPUs.</source>
          <target state="new">It has been used as part of .NET runtimes that target many chips and CPUs.</target>
        </trans-unit>
        <trans-unit id="d311acd4-94b6-4a67-837d-63648fa19d48" xml:space="preserve">
          <source>While the format itself has Windows heritage, it is implementable on any operating system.</source>
          <target state="new">While the format itself has Windows heritage, it is implementable on any operating system.</target>
        </trans-unit>
        <trans-unit id="611f9117-2812-4578-af1d-a0fb0d6f121e" xml:space="preserve">
          <source>It's arguably most significant choice for OS interopertability is that most values are stored in little-endian format.</source>
          <target state="new">It's arguably most significant choice for OS interopertability is that most values are stored in little-endian format.</target>
        </trans-unit>
        <trans-unit id="e0e19ddb-76e4-41dd-8192-3635d012f1ad" xml:space="preserve">
          <source>It doesn't have a specific affinity to machine pointer size (e.g. 32-bit, 64-bit).</source>
          <target state="new">It doesn't have a specific affinity to machine pointer size (e.g. 32-bit, 64-bit).</target>
        </trans-unit>
        <trans-unit id="5b65a338-bcc6-4614-9945-86d844b094e0" xml:space="preserve">
          <source>The .NET assembly format is also very descriptive about the structure of a given program or library.</source>
          <target state="new">The .NET assembly format is also very descriptive about the structure of a given program or library.</target>
        </trans-unit>
        <trans-unit id="7ecc8459-2edb-4b61-810e-c2376d71af15" xml:space="preserve">
          <source>It describes the internal components of an assembly, specifically: assembly references and types defined and their internal structure.</source>
          <target state="new">It describes the internal components of an assembly, specifically: assembly references and types defined and their internal structure.</target>
        </trans-unit>
        <trans-unit id="8ff87197-1131-429e-91eb-d6492f59dd11" xml:space="preserve">
          <source>Tools or APIs can read and process this information for display or to make programmatic decisions.</source>
          <target state="new">Tools or APIs can read and process this information for display or to make programmatic decisions.</target>
        </trans-unit>
        <trans-unit id="0327518a-156c-495e-983e-d22eebb28a07" xml:space="preserve">
          <source>Format</source>
          <target state="new">Format</target>
        </trans-unit>
        <trans-unit id="ec1b9ca1-f67f-44f3-8215-4e63e002a0fa" xml:space="preserve">
          <source>The .NET binary format is based on the Windows <bpt id="ee8e44ba-8515-4dc2-9afd-5d124bf3bad4CapsExtId1">&lt;linkText&gt;</bpt>PE file<ept id="ee8e44ba-8515-4dc2-9afd-5d124bf3bad4CapsExtId1">&lt;/linkText&gt;</ept><bpt id="ee8e44ba-8515-4dc2-9afd-5d124bf3bad4CapsExtId2">&lt;title&gt;</bpt><ept id="ee8e44ba-8515-4dc2-9afd-5d124bf3bad4CapsExtId2">&lt;/title&gt;</ept> format.</source>
          <target state="new">The .NET binary format is based on the Windows <bpt id="ee8e44ba-8515-4dc2-9afd-5d124bf3bad4CapsExtId1">&lt;linkText&gt;</bpt>PE file<ept id="ee8e44ba-8515-4dc2-9afd-5d124bf3bad4CapsExtId1">&lt;/linkText&gt;</ept><bpt id="ee8e44ba-8515-4dc2-9afd-5d124bf3bad4CapsExtId2">&lt;title&gt;</bpt><ept id="ee8e44ba-8515-4dc2-9afd-5d124bf3bad4CapsExtId2">&lt;/title&gt;</ept> format.</target>
        </trans-unit>
        <trans-unit id="2f668dce-6b7a-4614-8dd0-7c035eeaf895" xml:space="preserve">
          <source>In fact, .NET class libraries are conformant Windows PEs, and appear on first glance to be Windows dynamic link libraries (DLLs) or application executables (EXEs).</source>
          <target state="new">In fact, .NET class libraries are conformant Windows PEs, and appear on first glance to be Windows dynamic link libraries (DLLs) or application executables (EXEs).</target>
        </trans-unit>
        <trans-unit id="ff5b26d5-58b4-4ef7-b431-c70109c32dc1" xml:space="preserve">
          <source>This is a very useful characteristic on Windows, where they can masquerade as native executable binaries and get some of the same treatment (e.g. OS load, PE tools).</source>
          <target state="new">This is a very useful characteristic on Windows, where they can masquerade as native executable binaries and get some of the same treatment (e.g. OS load, PE tools).</target>
        </trans-unit>
        <trans-unit id="3d86c09b-730d-4661-9ae5-eee06c41e789" xml:space="preserve">
          <source>Assembly Headers Assemblies headers from ECMA 335 II.25.1, Structure of the runtime file format.</source>
          <target state="new">Assembly Headers Assemblies headers from ECMA 335 II.25.1, Structure of the runtime file format.</target>
        </trans-unit>
        <trans-unit id="c6841fb7-db47-466e-bcb8-5f92b0e38c90" xml:space="preserve">
          <source>Processing the Assemblies</source>
          <target state="new">Processing the Assemblies</target>
        </trans-unit>
        <trans-unit id="3b602258-d6c9-4baa-9d3c-8a15ec1ff0db" xml:space="preserve">
          <source>It is possible to write tools or APIs to process assemblies.</source>
          <target state="new">It is possible to write tools or APIs to process assemblies.</target>
        </trans-unit>
        <trans-unit id="0957aaf3-d3e5-458d-a052-eeb25b6ad2b2" xml:space="preserve">
          <source>Assembly information enables making programmatic decisions at runtime, re-writing assemblies, providing API intellisense in an editor and generating documentation.</source>
          <target state="new">Assembly information enables making programmatic decisions at runtime, re-writing assemblies, providing API intellisense in an editor and generating documentation.</target>
        </trans-unit>
        <trans-unit id="f02a1ab3-57c8-4de2-9951-e2d66a56bf94" xml:space="preserve">
          <source><bpt id="254e357f-8861-4c99-a1cf-b3a8c0d11a69CapsExtId1">&lt;linkText&gt;</bpt>System.Reflection<ept id="254e357f-8861-4c99-a1cf-b3a8c0d11a69CapsExtId1">&lt;/linkText&gt;</ept><bpt id="254e357f-8861-4c99-a1cf-b3a8c0d11a69CapsExtId2">&lt;title&gt;</bpt><ept id="254e357f-8861-4c99-a1cf-b3a8c0d11a69CapsExtId2">&lt;/title&gt;</ept> and <bpt id="469713af-1269-4180-90d1-db13d4275a5dCapsExtId1">&lt;linkText&gt;</bpt>Mono.Cecil<ept id="469713af-1269-4180-90d1-db13d4275a5dCapsExtId1">&lt;/linkText&gt;</ept><bpt id="469713af-1269-4180-90d1-db13d4275a5dCapsExtId2">&lt;title&gt;</bpt><ept id="469713af-1269-4180-90d1-db13d4275a5dCapsExtId2">&lt;/title&gt;</ept> are good examples of tools that are frequently used for this purpose.</source>
          <target state="new"><bpt id="254e357f-8861-4c99-a1cf-b3a8c0d11a69CapsExtId1">&lt;linkText&gt;</bpt>System.Reflection<ept id="254e357f-8861-4c99-a1cf-b3a8c0d11a69CapsExtId1">&lt;/linkText&gt;</ept><bpt id="254e357f-8861-4c99-a1cf-b3a8c0d11a69CapsExtId2">&lt;title&gt;</bpt><ept id="254e357f-8861-4c99-a1cf-b3a8c0d11a69CapsExtId2">&lt;/title&gt;</ept> and <bpt id="469713af-1269-4180-90d1-db13d4275a5dCapsExtId1">&lt;linkText&gt;</bpt>Mono.Cecil<ept id="469713af-1269-4180-90d1-db13d4275a5dCapsExtId1">&lt;/linkText&gt;</ept><bpt id="469713af-1269-4180-90d1-db13d4275a5dCapsExtId2">&lt;title&gt;</bpt><ept id="469713af-1269-4180-90d1-db13d4275a5dCapsExtId2">&lt;/title&gt;</ept> are good examples of tools that are frequently used for this purpose.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>