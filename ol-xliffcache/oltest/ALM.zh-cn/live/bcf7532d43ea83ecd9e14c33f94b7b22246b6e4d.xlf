<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-cn" original="foo.file" tool-id="74afc278-059d-4129-ba4d-91e1fd1208c5" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="74afc278-059d-4129-ba4d-91e1fd1208c5" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
      <olfilehash xmlns="">bcf7532d43ea83ecd9e14c33f94b7b22246b6e4d</olfilehash>
    </header>
    <body>
      <group id="3d0ad325-092c-4859-879b-03d53c1ce4aa">
        <trans-unit id="bdef245e-976a-41ca-872d-c63a8c63a1fc" xml:space="preserve">
          <source>.NET Assembly File Format</source>
          <target state="new">.NET Assembly File Format</target>
        </trans-unit>
        <trans-unit id="a0cfe43d-c807-4faa-8c80-d1c6c628c754" xml:space="preserve">
          <source>The .NET platform defines a binary file format - "assembly" - that is used to fully-describe and contain .NET programs.</source>
          <target state="new">The .NET platform defines a binary file format - "assembly" - that is used to fully-describe and contain .NET programs.</target>
        </trans-unit>
        <trans-unit id="e8caa42d-47dc-41ee-827a-662dd3a6dfdd" xml:space="preserve">
          <source>Assemblies are used for the programs themselves as well as any dependent libraries.</source>
          <target state="new">Assemblies are used for the programs themselves as well as any dependent libraries.</target>
        </trans-unit>
        <trans-unit id="d882be7a-cf02-4e21-9d50-bca0e967bc68" xml:space="preserve">
          <source>A .NET program can be executed as one of more assemblies, with no other required artifacts, beyond the appropriate .NET runtime.</source>
          <target state="new">A .NET program can be executed as one of more assemblies, with no other required artifacts, beyond the appropriate .NET runtime.</target>
        </trans-unit>
        <trans-unit id="c5adf2bb-80df-4fd2-900c-86dbda06c30a" xml:space="preserve">
          <source>Native dependencies, including operating system APIs, are a separate concern and are not contained within the .NET assembly format, although are sometimes described with this format (e.g. WinRT).</source>
          <target state="new">Native dependencies, including operating system APIs, are a separate concern and are not contained within the .NET assembly format, although are sometimes described with this format (e.g. WinRT).</target>
        </trans-unit>
        <trans-unit id="a5dc574f-144f-4eb4-bde6-2d494a61a3c8" xml:space="preserve">
          <source>Each CLI component carries the metadata for declarations, implementations, and references specific to that component.</source>
          <target state="new">Each CLI component carries the metadata for declarations, implementations, and references specific to that component.</target>
        </trans-unit>
        <trans-unit id="0b864b22-720b-4bc8-9307-dacc91ee59d5" xml:space="preserve">
          <source>Therefore, the component-specific metadata is referred to as component metadata, and the resulting component is said to be self-describing -- from ECMA 335 I.9.1, Components and assemblies.</source>
          <target state="new">Therefore, the component-specific metadata is referred to as component metadata, and the resulting component is said to be self-describing -- from ECMA 335 I.9.1, Components and assemblies.</target>
        </trans-unit>
        <trans-unit id="a6a9c25e-ac14-4315-9d1b-54d64bfae773" xml:space="preserve">
          <source>The format is fully specified and standardized as <bpt id="6bd20274-1042-464f-b86e-da285eef359cCapsExtId1">&lt;linkText&gt;</bpt>ECMA 335<ept id="6bd20274-1042-464f-b86e-da285eef359cCapsExtId1">&lt;/linkText&gt;</ept><bpt id="6bd20274-1042-464f-b86e-da285eef359cCapsExtId2">&lt;title&gt;</bpt><ept id="6bd20274-1042-464f-b86e-da285eef359cCapsExtId2">&lt;/title&gt;</ept>.</source>
          <target state="new">The format is fully specified and standardized as <bpt id="6bd20274-1042-464f-b86e-da285eef359cCapsExtId1">&lt;linkText&gt;</bpt>ECMA 335<ept id="6bd20274-1042-464f-b86e-da285eef359cCapsExtId1">&lt;/linkText&gt;</ept><bpt id="6bd20274-1042-464f-b86e-da285eef359cCapsExtId2">&lt;title&gt;</bpt><ept id="6bd20274-1042-464f-b86e-da285eef359cCapsExtId2">&lt;/title&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="9e8ab6e1-41a1-4731-a302-b99847f5f33e" xml:space="preserve">
          <source>All .NET compilers and runtimes use this format.</source>
          <target state="new">All .NET compilers and runtimes use this format.</target>
        </trans-unit>
        <trans-unit id="2a82eba3-2e54-4b53-9560-2412f10769df" xml:space="preserve">
          <source>The presense of a documented and infrequently updated binary format has been a major benefit (arguably a requirement) for interoperatibility.</source>
          <target state="new">The presense of a documented and infrequently updated binary format has been a major benefit (arguably a requirement) for interoperatibility.</target>
        </trans-unit>
        <trans-unit id="98a628dc-0a19-4c0a-8c0f-cde5a1988a23" xml:space="preserve">
          <source>The format was last updated in a substantive way in 2005 (.NET 2.0) to accomodate generics and processor architecture.</source>
          <target state="new">The format was last updated in a substantive way in 2005 (.NET 2.0) to accomodate generics and processor architecture.</target>
        </trans-unit>
        <trans-unit id="e024eea8-a12d-4986-b313-33ed023f2069" xml:space="preserve">
          <source>The format is CPU- and OS-agnostic.</source>
          <target state="new">The format is CPU- and OS-agnostic.</target>
        </trans-unit>
        <trans-unit id="94828f00-e298-437f-8930-83190a94756c" xml:space="preserve">
          <source>It has been used as part of .NET runtimes that target many chips and CPUs.</source>
          <target state="new">It has been used as part of .NET runtimes that target many chips and CPUs.</target>
        </trans-unit>
        <trans-unit id="5ee02160-61fa-4649-86f7-8650f08cc62c" xml:space="preserve">
          <source>While the format itself has Windows heritage, it is implementable on any operating system.</source>
          <target state="new">While the format itself has Windows heritage, it is implementable on any operating system.</target>
        </trans-unit>
        <trans-unit id="ec53ccab-eb60-460e-9fae-617104ff0953" xml:space="preserve">
          <source>It's arguably most significant choice for OS interopertability is that most values are stored in little-endian format.</source>
          <target state="new">It's arguably most significant choice for OS interopertability is that most values are stored in little-endian format.</target>
        </trans-unit>
        <trans-unit id="ecb47025-1d99-4a36-b3a0-dbe311796824" xml:space="preserve">
          <source>It doesn't have a specific affinity to machine pointer size (e.g. 32-bit, 64-bit).</source>
          <target state="new">It doesn't have a specific affinity to machine pointer size (e.g. 32-bit, 64-bit).</target>
        </trans-unit>
        <trans-unit id="1a443095-4783-4d6b-a6ab-074228031173" xml:space="preserve">
          <source>The .NET assembly format is also very descriptive about the structure of a given program or library.</source>
          <target state="new">The .NET assembly format is also very descriptive about the structure of a given program or library.</target>
        </trans-unit>
        <trans-unit id="66171e59-c3ec-47cc-a471-3a4c2fe1c558" xml:space="preserve">
          <source>It describes the internal components of an assembly, specifically: assembly references and types defined and their internal structure.</source>
          <target state="new">It describes the internal components of an assembly, specifically: assembly references and types defined and their internal structure.</target>
        </trans-unit>
        <trans-unit id="be39e9a8-c1d9-4d61-8ca4-c7d1c1deccfe" xml:space="preserve">
          <source>Tools or APIs can read and process this information for display or to make programmatic decisions.</source>
          <target state="new">Tools or APIs can read and process this information for display or to make programmatic decisions.</target>
        </trans-unit>
        <trans-unit id="d9420c04-b3ba-4bef-bc75-11021d687f02" xml:space="preserve">
          <source>Format</source>
          <target state="new">Format</target>
        </trans-unit>
        <trans-unit id="17e693c6-ae5f-42eb-84d2-d5e125e08721" xml:space="preserve">
          <source>The .NET binary format is based on the Windows <bpt id="bf39f0d9-7259-49ff-b8c2-3ffff549c856CapsExtId1">&lt;linkText&gt;</bpt>PE file<ept id="bf39f0d9-7259-49ff-b8c2-3ffff549c856CapsExtId1">&lt;/linkText&gt;</ept><bpt id="bf39f0d9-7259-49ff-b8c2-3ffff549c856CapsExtId2">&lt;title&gt;</bpt><ept id="bf39f0d9-7259-49ff-b8c2-3ffff549c856CapsExtId2">&lt;/title&gt;</ept> format.</source>
          <target state="new">The .NET binary format is based on the Windows <bpt id="bf39f0d9-7259-49ff-b8c2-3ffff549c856CapsExtId1">&lt;linkText&gt;</bpt>PE file<ept id="bf39f0d9-7259-49ff-b8c2-3ffff549c856CapsExtId1">&lt;/linkText&gt;</ept><bpt id="bf39f0d9-7259-49ff-b8c2-3ffff549c856CapsExtId2">&lt;title&gt;</bpt><ept id="bf39f0d9-7259-49ff-b8c2-3ffff549c856CapsExtId2">&lt;/title&gt;</ept> format.</target>
        </trans-unit>
        <trans-unit id="cad326fe-6516-4048-a6d0-00cdc2bed47e" xml:space="preserve">
          <source>In fact, .NET class libraries are conformant Windows PEs, and appear on first glance to be Windows dynamic link libraries (DLLs) or application executables (EXEs).</source>
          <target state="new">In fact, .NET class libraries are conformant Windows PEs, and appear on first glance to be Windows dynamic link libraries (DLLs) or application executables (EXEs).</target>
        </trans-unit>
        <trans-unit id="a4980890-c958-4f9d-b0ff-a10fcc79cfbe" xml:space="preserve">
          <source>This is a very useful characteristic on Windows, where they can masquerade as native executable binaries and get some of the same treatment (e.g. OS load, PE tools).</source>
          <target state="new">This is a very useful characteristic on Windows, where they can masquerade as native executable binaries and get some of the same treatment (e.g. OS load, PE tools).</target>
        </trans-unit>
        <trans-unit id="187c9807-6259-402a-b5ef-2e78efa34942" xml:space="preserve">
          <source>Assembly Headers Assemblies headers from ECMA 335 II.25.1, Structure of the runtime file format.</source>
          <target state="new">Assembly Headers Assemblies headers from ECMA 335 II.25.1, Structure of the runtime file format.</target>
        </trans-unit>
        <trans-unit id="902763aa-1603-4f48-ab48-b6010b25cb18" xml:space="preserve">
          <source>Processing the Assemblies</source>
          <target state="new">Processing the Assemblies</target>
        </trans-unit>
        <trans-unit id="41a2a8a3-3638-4856-98c4-e3d7cc1832ec" xml:space="preserve">
          <source>It is possible to write tools or APIs to process assemblies.</source>
          <target state="new">It is possible to write tools or APIs to process assemblies.</target>
        </trans-unit>
        <trans-unit id="e6cf60fc-64a3-469f-a37a-cb08ef9a4b6e" xml:space="preserve">
          <source>Assembly information enables making programmatic decisions at runtime, re-writing assemblies, providing API intellisense in an editor and generating documentation.</source>
          <target state="new">Assembly information enables making programmatic decisions at runtime, re-writing assemblies, providing API intellisense in an editor and generating documentation.</target>
        </trans-unit>
        <trans-unit id="17b59f54-8fd4-42a9-9500-3ca15c5f1771" xml:space="preserve">
          <source><bpt id="bfdf3484-bde0-484f-8bf0-c7a165bd87c2CapsExtId1">&lt;linkText&gt;</bpt>System.Reflection<ept id="bfdf3484-bde0-484f-8bf0-c7a165bd87c2CapsExtId1">&lt;/linkText&gt;</ept><bpt id="bfdf3484-bde0-484f-8bf0-c7a165bd87c2CapsExtId2">&lt;title&gt;</bpt><ept id="bfdf3484-bde0-484f-8bf0-c7a165bd87c2CapsExtId2">&lt;/title&gt;</ept> and <bpt id="165fce74-2c57-4e93-a071-fff6c06693cbCapsExtId1">&lt;linkText&gt;</bpt>Mono.Cecil<ept id="165fce74-2c57-4e93-a071-fff6c06693cbCapsExtId1">&lt;/linkText&gt;</ept><bpt id="165fce74-2c57-4e93-a071-fff6c06693cbCapsExtId2">&lt;title&gt;</bpt><ept id="165fce74-2c57-4e93-a071-fff6c06693cbCapsExtId2">&lt;/title&gt;</ept> are good examples of tools that are frequently used for this purpose.</source>
          <target state="new"><bpt id="bfdf3484-bde0-484f-8bf0-c7a165bd87c2CapsExtId1">&lt;linkText&gt;</bpt>System.Reflection<ept id="bfdf3484-bde0-484f-8bf0-c7a165bd87c2CapsExtId1">&lt;/linkText&gt;</ept><bpt id="bfdf3484-bde0-484f-8bf0-c7a165bd87c2CapsExtId2">&lt;title&gt;</bpt><ept id="bfdf3484-bde0-484f-8bf0-c7a165bd87c2CapsExtId2">&lt;/title&gt;</ept> and <bpt id="165fce74-2c57-4e93-a071-fff6c06693cbCapsExtId1">&lt;linkText&gt;</bpt>Mono.Cecil<ept id="165fce74-2c57-4e93-a071-fff6c06693cbCapsExtId1">&lt;/linkText&gt;</ept><bpt id="165fce74-2c57-4e93-a071-fff6c06693cbCapsExtId2">&lt;title&gt;</bpt><ept id="165fce74-2c57-4e93-a071-fff6c06693cbCapsExtId2">&lt;/title&gt;</ept> are good examples of tools that are frequently used for this purpose.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>