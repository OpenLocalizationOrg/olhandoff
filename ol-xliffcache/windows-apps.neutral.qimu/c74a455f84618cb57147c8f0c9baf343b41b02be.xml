{"nodes":[{"content":"Developing Marble Maze, a UWP game in C++ and DirectX","pos":[27,80]},{"content":"This section of the documentation describes how to use DirectX and Visual C++ to create a 3-D Universal Windows Platform (UWP) game.","pos":[94,226]},{"content":"Developing Marble Maze, a UWP game in C++ and DirectX","pos":[283,336]},{"content":"Updated for UWP apps on Windows 10.","pos":[342,377]},{"content":"For Windows 8.x articles, see the <bpt id=\"p1\">[</bpt>archive<ept id=\"p1\">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept>","pos":[378,470]},{"content":"This section of the documentation describes how to use DirectX and Visual C++ to create a 3-D Universal Windows Platform (UWP) game.","pos":[476,608]},{"content":"This documentation shows how to create a 3-D game named Marble Maze that embraces new form factors such as tablets and also works on traditional desktop and laptop PCs.","pos":[609,777]},{"pos":[781,918],"content":"<bpt id=\"p1\">**</bpt>Note<ept id=\"p1\">**</ept>   To download the Marble Maze source code, see <bpt id=\"p2\">[</bpt>DirectX Marble Maze game sample<ept id=\"p2\">](http://go.microsoft.com/fwlink/?LinkId=624011)</ept>."},{"content":"<bpt id=\"p1\">**</bpt>Important<ept id=\"p1\">**</ept>  Marble Maze illustrates design patterns that we consider to be best practices for creating UWP games.","pos":[925,1041]},{"content":"You can adapt many of the implementation details to fit your own practices and the unique requirements of the game you are developing.","pos":[1042,1176]},{"content":"Feel free to use different techniques or libraries when those better suit your needs.","pos":[1177,1262]},{"content":"(However, always ensure that your code passes the Windows App Certification Kit.) When we consider a Marble Maze implementation to be essential for successful game development, we emphasize it in this documentation.","pos":[1263,1478]},{"content":"Introducing Marble Maze","pos":[1486,1509]},{"content":"We chose Marble Maze because it is relatively basic, but still demonstrates the breadth of features that are found in most games.","pos":[1512,1641]},{"content":"It shows how to use graphics, input handling, and audio.","pos":[1642,1698]},{"content":"It also demonstrates game mechanics such as rules and goals.","pos":[1699,1759]},{"content":"Marble Maze resembles the table-top labyrinth game that is typically constructed from a box that contains holes and a steel or glass marble.","pos":[1761,1901]},{"content":"The goal of Marble Maze is the same as the table-top version: tilt the maze to guide the marble from the start to the end of the maze in as little time as possible, without letting the marble fall into any of the holes.","pos":[1902,2121]},{"content":"Marble Maze adds the concept of checkpoints.","pos":[2122,2166]},{"content":"If the marble falls into a hole, the game is restarted at the last checkpoint location that the marble passed over.","pos":[2167,2282]},{"content":"Marble Maze offers multiple ways for a user to interact with the game board.","pos":[2284,2360]},{"content":"If you have a touch-enabled or accelerometer-enabled device, you can use those devices to move the game board.","pos":[2361,2471]},{"content":"You can also use an Xbox 360 controller or a mouse to control game play.","pos":[2472,2544]},{"content":"screen shot of the marble maze game.","pos":[2548,2584]},{"content":"Prerequisites","pos":[2613,2626]},{"content":"Windows 10","pos":[2633,2643]},{"content":"Microsoft Visual Studio 2015","pos":[2648,2676]},{"content":"C++ programming knowledge","pos":[2681,2706]},{"content":"Familiarity with DirectX and DirectX terminology","pos":[2711,2759]},{"content":"Basic knowledge of COM","pos":[2764,2786]},{"content":"Who should read this?","pos":[2791,2812]},{"content":"If youâ€™re interested in creating 3-D games or other graphics-intensive applications for Windows 10, this is for you.","pos":[2815,2931]},{"content":"We hope you use the principles and practices that this documentation outlines to create your own UWP game.","pos":[2932,3038]},{"content":"A background or strong interest in C++ and DirectX programming will help you get the most out of this documentation.","pos":[3039,3155]},{"content":"If you don't have experience with DirectX, you can still benefit if you have experience with similar 3-D graphics programming environments.","pos":[3156,3295]},{"pos":[3297,3512],"content":"The document <bpt id=\"p1\">[</bpt>Walkthrough: create a simple UWP game with DirectX<ept id=\"p1\">](tutorial--create-your-first-metro-style-directx-game.md)</ept> describes another sample that implements a basic 3-D shooting game by using DirectX and C++."},{"content":"What this documentation covers","pos":[3517,3547]},{"content":"This documentation teaches how to:","pos":[3550,3584]},{"content":"Use the Windows Runtime API and DirectX to create a UWP game.","pos":[3590,3651]},{"pos":[3656,3905],"content":"Use <bpt id=\"p1\">[</bpt>Direct3D<ept id=\"p1\">](https://msdn.microsoft.com/library/windows/desktop/ff476080)</ept> and <bpt id=\"p2\">[</bpt>Direct2D<ept id=\"p2\">](https://msdn.microsoft.com/library/windows/desktop/dd370990)</ept> to work with visual content such as models, textures, vertex and pixel shaders, and 2-D overlays."},{"content":"Integrate input mechanisms such as touch, accelerometer, and the Xbox 360 controller.","pos":[3910,3995]},{"pos":[4000,4114],"content":"Use <bpt id=\"p1\">[</bpt>XAudio2<ept id=\"p1\">](https://msdn.microsoft.com/library/windows/desktop/hh405049)</ept> to incorporate music and sound effects."},{"content":"What this documentation does not cover","pos":[4119,4157]},{"content":"This documentation does not cover the following aspects of game development.","pos":[4160,4236]},{"content":"These aspects are followed by additional resources that cover them.","pos":[4237,4304]},{"content":"3-D game design principles.","pos":[4310,4337]},{"content":"C++ or DirectX programming basics.","pos":[4342,4376]},{"content":"How to design resources such as textures, models, or audio.","pos":[4381,4440]},{"content":"How to troubleshoot behavior or performance issues in your game.","pos":[4445,4509]},{"content":"How to prepare your game for use in other parts of the world.","pos":[4514,4575]},{"content":"How to certify and publish your game to the Windows Store.","pos":[4580,4638]},{"content":"Marble Maze also uses the <bpt id=\"p1\">[</bpt>DirectXMath<ept id=\"p1\">](https://msdn.microsoft.com/library/windows/desktop/hh437833)</ept> library to work with 3-D geometry and perform physics calculations, such as collisions.","pos":[4640,4828]},{"content":"DirectXMath is not covered in-depth in this section.","pos":[4829,4881]},{"content":"For more info about DirectXMath, see <bpt id=\"p1\">[</bpt>DirectXMath Programming Guide<ept id=\"p1\">](https://msdn.microsoft.com/library/windows/desktop/hh437833)</ept>.","pos":[4882,5012]},{"content":"For details about how Marble Maze uses DirectXMath, refer to the source code.","pos":[5013,5090]},{"content":"Although Marble Maze provides many reusable components, it is not a complete game development framework.","pos":[5092,5196]},{"content":"When we consider a Marble Maze component to be reusable in your game, we emphasize it in the documentation.","pos":[5197,5304]},{"content":"Next steps","pos":[5309,5319]},{"content":"We recommend that you start with Marble Maze sample fundamentals to learn about the Marble Maze structure and some of the coding and style guidelines that the Marble Maze source code follows.","pos":[5322,5513]},{"content":"The following table outlines the documents in this section so that you can more easily refer to them.","pos":[5514,5615]},{"content":"Related Topics","pos":[5620,5634]},{"content":"Title","pos":[5639,5644]},{"content":"Description","pos":[5762,5773]},{"content":"Marble Maze sample fundamentals","pos":[6380,6411]},{"content":"Provides an overview of the game structure and some of the code and style guidelines that the source code follows.","pos":[6501,6615]},{"content":"Marble Maze application structure","pos":[6749,6782]},{"content":"Describes how the Marble Maze application code is structured and how the structure of a DirectX UWP app differs from that of a traditional desktop application.","pos":[6870,7029]},{"content":"Adding visual content to the Marble Maze sample","pos":[7118,7165]},{"content":"Describes some of the key practices to keep in mind when you work with Direct3D and Direct2D.","pos":[7239,7332]},{"content":"Also describes how Marble Maze applies these practices for visual content.","pos":[7333,7407]},{"content":"Adding input and interactivity to the Marble Maze sample","pos":[7487,7543]},{"content":"Describes how Marble Maze works with accelerometer, touch, and Xbox 360 controller devices to enable users to navigate menus and interact with the game board.","pos":[7608,7766]},{"content":"Also describes some of the best practices to keep in mind when you work with input.","pos":[7767,7850]},{"content":"Adding audio to the Marble Maze sample","pos":[7856,7894]},{"content":"Describes how Marble Maze works with audio to add music and sound effects to the game experience.","pos":[7977,8074]}],"content":"---\nauthor: mtoepke\ntitle: Developing Marble Maze, a UWP game in C++ and DirectX\ndescription: This section of the documentation describes how to use DirectX and Visual C++ to create a 3-D Universal Windows Platform (UWP) game.\nms.assetid: 43f1977a-7e1d-614c-696e-7669dd8a9cc7\n---\n\n# Developing Marble Maze, a UWP game in C++ and DirectX\n\n\n\\[ Updated for UWP apps on Windows 10. For Windows 8.x articles, see the [archive](http://go.microsoft.com/fwlink/p/?linkid=619132) \\]\n\n\nThis section of the documentation describes how to use DirectX and Visual C++ to create a 3-D Universal Windows Platform (UWP) game. This documentation shows how to create a 3-D game named Marble Maze that embraces new form factors such as tablets and also works on traditional desktop and laptop PCs.\n\n> **Note**   To download the Marble Maze source code, see [DirectX Marble Maze game sample](http://go.microsoft.com/fwlink/?LinkId=624011).\n\n \n\n> **Important**  Marble Maze illustrates design patterns that we consider to be best practices for creating UWP games. You can adapt many of the implementation details to fit your own practices and the unique requirements of the game you are developing. Feel free to use different techniques or libraries when those better suit your needs. (However, always ensure that your code passes the Windows App Certification Kit.) When we consider a Marble Maze implementation to be essential for successful game development, we emphasize it in this documentation.\n\n \n\n## Introducing Marble Maze\n\n\nWe chose Marble Maze because it is relatively basic, but still demonstrates the breadth of features that are found in most games. It shows how to use graphics, input handling, and audio. It also demonstrates game mechanics such as rules and goals.\n\nMarble Maze resembles the table-top labyrinth game that is typically constructed from a box that contains holes and a steel or glass marble. The goal of Marble Maze is the same as the table-top version: tilt the maze to guide the marble from the start to the end of the maze in as little time as possible, without letting the marble fall into any of the holes. Marble Maze adds the concept of checkpoints. If the marble falls into a hole, the game is restarted at the last checkpoint location that the marble passed over.\n\nMarble Maze offers multiple ways for a user to interact with the game board. If you have a touch-enabled or accelerometer-enabled device, you can use those devices to move the game board. You can also use an Xbox 360 controller or a mouse to control game play.\n\n![screen shot of the marble maze game.](images/marblemaze.png)\n\n## Prerequisites\n\n\n-   Windows 10\n-   Microsoft Visual Studio 2015\n-   C++ programming knowledge\n-   Familiarity with DirectX and DirectX terminology\n-   Basic knowledge of COM\n\n## Who should read this?\n\n\nIf youâ€™re interested in creating 3-D games or other graphics-intensive applications for Windows 10, this is for you. We hope you use the principles and practices that this documentation outlines to create your own UWP game. A background or strong interest in C++ and DirectX programming will help you get the most out of this documentation. If you don't have experience with DirectX, you can still benefit if you have experience with similar 3-D graphics programming environments.\n\nThe document [Walkthrough: create a simple UWP game with DirectX](tutorial--create-your-first-metro-style-directx-game.md) describes another sample that implements a basic 3-D shooting game by using DirectX and C++.\n\n## What this documentation covers\n\n\nThis documentation teaches how to:\n\n-   Use the Windows Runtime API and DirectX to create a UWP game.\n-   Use [Direct3D](https://msdn.microsoft.com/library/windows/desktop/ff476080) and [Direct2D](https://msdn.microsoft.com/library/windows/desktop/dd370990) to work with visual content such as models, textures, vertex and pixel shaders, and 2-D overlays.\n-   Integrate input mechanisms such as touch, accelerometer, and the Xbox 360 controller.\n-   Use [XAudio2](https://msdn.microsoft.com/library/windows/desktop/hh405049) to incorporate music and sound effects.\n\n## What this documentation does not cover\n\n\nThis documentation does not cover the following aspects of game development. These aspects are followed by additional resources that cover them.\n\n-   3-D game design principles.\n-   C++ or DirectX programming basics.\n-   How to design resources such as textures, models, or audio.\n-   How to troubleshoot behavior or performance issues in your game.\n-   How to prepare your game for use in other parts of the world.\n-   How to certify and publish your game to the Windows Store.\n\nMarble Maze also uses the [DirectXMath](https://msdn.microsoft.com/library/windows/desktop/hh437833) library to work with 3-D geometry and perform physics calculations, such as collisions. DirectXMath is not covered in-depth in this section. For more info about DirectXMath, see [DirectXMath Programming Guide](https://msdn.microsoft.com/library/windows/desktop/hh437833). For details about how Marble Maze uses DirectXMath, refer to the source code.\n\nAlthough Marble Maze provides many reusable components, it is not a complete game development framework. When we consider a Marble Maze component to be reusable in your game, we emphasize it in the documentation.\n\n## Next steps\n\n\nWe recommend that you start with Marble Maze sample fundamentals to learn about the Marble Maze structure and some of the coding and style guidelines that the Marble Maze source code follows. The following table outlines the documents in this section so that you can more easily refer to them.\n\n## Related Topics\n\n\n| Title                                                                                                                    | Description                                                                                                                                                                                                                                        |\n|--------------------------------------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [Marble Maze sample fundamentals](marble-maze-sample-fundamentals.md)                                                   | Provides an overview of the game structure and some of the code and style guidelines that the source code follows.                                                                                                                                 |\n| [Marble Maze application structure](marble-maze-application-structure.md)                                               | Describes how the Marble Maze application code is structured and how the structure of a DirectX UWP app differs from that of a traditional desktop application.                                                                                    |\n| [Adding visual content to the Marble Maze sample](adding-visual-content-to-the-marble-maze-sample.md)                   | Describes some of the key practices to keep in mind when you work with Direct3D and Direct2D. Also describes how Marble Maze applies these practices for visual content.                                                                           |\n| [Adding input and interactivity to the Marble Maze sample](adding-input-and-interactivity-to-the-marble-maze-sample.md) | Describes how Marble Maze works with accelerometer, touch, and Xbox 360 controller devices to enable users to navigate menus and interact with the game board. Also describes some of the best practices to keep in mind when you work with input. |\n| [Adding audio to the Marble Maze sample](adding-audio-to-the-marble-maze-sample.md)                                     | Describes how Marble Maze works with audio to add music and sound effects to the game experience.                                                                                                                                                  |\n\n \n\n \n\n \n\n\n\n\n"}