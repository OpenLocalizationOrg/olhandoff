{"nodes":[{"content":"Learn about solutions to common development issues with the Microsoft advertising libraries in XAML apps.","pos":[86,191]},{"content":"XAML and C# troubleshooting guide","pos":[199,232]},{"content":"XAML and C# troubleshooting guide","pos":[240,273]},{"content":"Updated for UWP apps on Windows 10.","pos":[278,313]},{"content":"For Windows 8.x articles, see the <bpt id=\"p1\">[</bpt>archive<ept id=\"p1\">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept>","pos":[314,406]},{"content":"This topic contains solutions to common development issues with the Microsoft advertising libraries in XAML apps.","pos":[411,524]},{"content":"XAML","pos":[531,535]},{"content":"AdControl not appearing","pos":[554,577]},{"content":"Black box blinks and disappears","pos":[609,640]},{"content":"Ads not refreshing","pos":[684,702]},{"content":"C","pos":[734,735]},{"content":"AdControl not appearing","pos":[757,780]},{"content":"Black box blinks and disappears","pos":[823,854]},{"content":"Ads bot refreshing","pos":[900,918]},{"content":"XAML","pos":[968,972]},{"content":"AdControl not appearing","pos":[1009,1032]},{"pos":[1038,1123],"content":"Ensure that the <bpt id=\"p1\">**</bpt>Internet (Client)<ept id=\"p1\">**</ept> capability is selected in Package.appxmanifest."},{"content":"Check the application ID and ad unit ID.","pos":[1129,1169]},{"content":"These IDs must match the application ID and ad unit ID that you obtained in Windows Dev Center.","pos":[1170,1265]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Set up ad units in your app<ept id=\"p1\">](set-up-ad-units-in-your-app.md)</ept>.","pos":[1266,1354]},{"content":"Check the <bpt id=\"p1\">**</bpt>Height<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>Width<ept id=\"p2\">**</ept> properties.","pos":[1501,1547]},{"content":"These must be set to one of the <bpt id=\"p1\">[</bpt>Supported ad sizes for banner ads<ept id=\"p1\">](supported-ad-sizes-for-banner-ads.md)</ept>.","pos":[1548,1654]},{"content":"Check the element position.","pos":[1819,1846]},{"content":"The <bpt id=\"p1\">[</bpt>AdControl<ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/microsoft.advertising.winrt.ui.adcontrol.aspx)</ept> must be inside the viewable area.","pos":[1847,1991]},{"content":"Check the <bpt id=\"p1\">**</bpt>Visibility<ept id=\"p1\">**</ept> property.","pos":[1997,2031]},{"content":"The optional <bpt id=\"p1\">**</bpt>Visibility<ept id=\"p1\">**</ept> property must not be set to collapsed or hidden.","pos":[2032,2108]},{"content":"This property can be set inline (as shown below) or in an external style sheet.","pos":[2109,2188]},{"content":"Check the <bpt id=\"p1\">**</bpt>IsEnabled<ept id=\"p1\">**</ept> property.","pos":[2392,2425]},{"content":"The optional <ph id=\"ph1\">`IsEnabled`</ph> property must be set to <ph id=\"ph2\">`True`</ph>.","pos":[2426,2482]},{"content":"Check the parent of the <bpt id=\"p1\">**</bpt>AdControl<ept id=\"p1\">**</ept>.","pos":[2682,2720]},{"content":"If the <bpt id=\"p1\">**</bpt>AdControl<ept id=\"p1\">**</ept> element resides in a parent element, the parent must be active and visible.","pos":[2721,2817]},{"content":"Ensure the <bpt id=\"p1\">**</bpt>AdControl<ept id=\"p1\">**</ept> is not hidden from the viewport.","pos":[3029,3086]},{"content":"The <bpt id=\"p1\">**</bpt>AdControl<ept id=\"p1\">**</ept> must be visible for ads to display properly.","pos":[3087,3149]},{"content":"Live values for <bpt id=\"p1\">**</bpt>ApplicationId<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>AdUnitId<ept id=\"p2\">**</ept> should not be tested in the emulator.","pos":[3155,3243]},{"content":"To ensure the <bpt id=\"p1\">**</bpt>AdControl<ept id=\"p1\">**</ept> is functioning as expected, use the test IDs for both <bpt id=\"p2\">**</bpt>ApplicationId<ept id=\"p2\">**</ept> and <bpt id=\"p3\">**</bpt>AdUnitId<ept id=\"p3\">**</ept> found in <bpt id=\"p4\">[</bpt>Test mode values<ept id=\"p4\">](test-mode-values.md)</ept>.","pos":[3244,3410]},{"content":"Black box blinks and disappears","pos":[3459,3490]},{"pos":[3496,3589],"content":"Double-check all steps in the previous <bpt id=\"p1\">[</bpt>AdControl not appearing<ept id=\"p1\">](#xaml-notappearing)</ept> section."},{"content":"Handle the <bpt id=\"p1\">**</bpt>ErrorOccurred<ept id=\"p1\">**</ept> event, and use the message that is passed to the event handler to determine whether an error occurred and what type of error was thrown.","pos":[3595,3760]},{"content":"See <bpt id=\"p1\">[</bpt>Error handling in XAML/C# walkthrough<ept id=\"p1\">](error-handling-in-xamlc-walkthrough.md)</ept> for more information.","pos":[3761,3866]},{"content":"This example demonstrates an <bpt id=\"p1\">**</bpt>ErrorOccurred<ept id=\"p1\">**</ept> event handler.","pos":[3872,3933]},{"content":"The first snippet is the XAML UI markup.","pos":[3934,3974]},{"content":"This example demonstrates of the the corresponding code.","pos":[4281,4337]},{"content":"The most common error that causes a black box is “No ad available.”","pos":[4552,4619]},{"content":"This error means there is no ad available to return from the request.","pos":[4620,4689]},{"pos":[4695,4827],"content":"The <bpt id=\"p1\">[</bpt>AdControl<ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/microsoft.advertising.winrt.ui.adcontrol.aspx)</ept> is behaving normally."},{"content":"By default, the <bpt id=\"p1\">**</bpt>AdControl<ept id=\"p1\">**</ept> will collapse when it cannot display an ad.","pos":[4833,4906]},{"content":"If other elements are children of the same parent they may move to fill the gap of the collapsed <bpt id=\"p1\">**</bpt>AdControl<ept id=\"p1\">**</ept> and expand when the next request is made.","pos":[4907,5059]},{"content":"Ads not refreshing","pos":[5100,5118]},{"content":"Check the <bpt id=\"p1\">[</bpt>IsAutoRefreshEnabled<ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/microsoft.advertising.winrt.ui.adcontrol.isautorefreshenabled.aspx)</ept> property.","pos":[5124,5282]},{"content":"By default, this optional property is set to <bpt id=\"p1\">**</bpt>True<ept id=\"p1\">**</ept>.","pos":[5283,5337]},{"content":"When set to <bpt id=\"p1\">**</bpt>False<ept id=\"p1\">**</ept>, the <bpt id=\"p2\">[</bpt>Refresh<ept id=\"p2\">](https://msdn.microsoft.com/library/windows/apps/microsoft.advertising.winrt.ui.adcontrol.refresh.aspx)</ept> method must be used to retrieve another ad.","pos":[5338,5521]},{"content":"Check calls to the <bpt id=\"p1\">**</bpt>Refresh<ept id=\"p1\">**</ept> method.","pos":[5732,5770]},{"content":"When using automatic refresh, <bpt id=\"p1\">**</bpt>Refresh<ept id=\"p1\">**</ept> cannot be used to retrieve another ad.","pos":[5771,5851]},{"content":"When using manual refresh, <bpt id=\"p1\">**</bpt>Refresh<ept id=\"p1\">**</ept> should be called only after a minimum of 30 to 60 seconds depending on the device’s current data connection.","pos":[5852,5999]},{"content":"The following code snippets show an example of how to use the <bpt id=\"p1\">**</bpt>Refresh<ept id=\"p1\">**</ept> method.","pos":[6005,6086]},{"content":"The first snippet is the XAML UI markup.","pos":[6087,6127]},{"content":"This code snippet shows an example of the C# code behind the UI markup.","pos":[6378,6449]},{"content":"The <bpt id=\"p1\">**</bpt>AdControl<ept id=\"p1\">**</ept> is behaving normally.","pos":[6668,6707]},{"content":"Sometimes the same ad will appear more than once in a row giving the appearance that ads are not refreshing.","pos":[6708,6816]},{"content":"C","pos":[6841,6842]},{"content":"AdControl not appearing","pos":[6894,6917]},{"pos":[6923,7008],"content":"Ensure that the <bpt id=\"p1\">**</bpt>Internet (Client)<ept id=\"p1\">**</ept> capability is selected in Package.appxmanifest."},{"content":"Ensure the <bpt id=\"p1\">**</bpt>AdControl<ept id=\"p1\">**</ept> is instantiated.","pos":[7014,7055]},{"content":"If the <bpt id=\"p1\">**</bpt>AdControl<ept id=\"p1\">**</ept> is not instantiated it will not be available.","pos":[7056,7122]},{"content":"Check the application ID and ad unit ID.","pos":[7681,7721]},{"content":"These IDs must match the application ID and ad unit ID that you obtained in Windows Dev Center.","pos":[7722,7817]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Set up ad units in your app<ept id=\"p1\">](set-up-ad-units-in-your-app.md)</ept>.","pos":[7818,7906]},{"content":"Check the <bpt id=\"p1\">**</bpt>Height<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>Width<ept id=\"p2\">**</ept> parameters.","pos":[8106,8152]},{"content":"These must be set to one of the <bpt id=\"p1\">[</bpt>supported ad sizes for banner ads<ept id=\"p1\">](supported-ad-sizes-for-banner-ads.md)</ept>.","pos":[8153,8259]},{"content":"Ensure the <bpt id=\"p1\">**</bpt>AdControl<ept id=\"p1\">**</ept> is added to a parent element.","pos":[8459,8513]},{"content":"To display, the <bpt id=\"p1\">**</bpt>AdControl<ept id=\"p1\">**</ept> must be added as a child to a parent control (for example, a <bpt id=\"p2\">**</bpt>StackPanel<ept id=\"p2\">**</ept> or <bpt id=\"p3\">**</bpt>Grid<ept id=\"p3\">**</ept>).","pos":[8514,8633]},{"content":"Check the <bpt id=\"p1\">**</bpt>Margin<ept id=\"p1\">**</ept> parameter.","pos":[8705,8736]},{"content":"The <bpt id=\"p1\">**</bpt>AdControl<ept id=\"p1\">**</ept> must be inside the viewable area.","pos":[8737,8788]},{"content":"Check the <bpt id=\"p1\">**</bpt>Visibility<ept id=\"p1\">**</ept> property.","pos":[8794,8828]},{"content":"The optional <bpt id=\"p1\">**</bpt>Visibility<ept id=\"p1\">**</ept> property must be set to <bpt id=\"p2\">**</bpt>Visible<ept id=\"p2\">**</ept>.","pos":[8829,8893]},{"content":"Check the <bpt id=\"p1\">**</bpt>IsEnabled<ept id=\"p1\">**</ept> property.","pos":[9160,9193]},{"content":"The optional <bpt id=\"p1\">**</bpt>IsEnabled<ept id=\"p1\">**</ept> property must be set to <bpt id=\"p2\">**</bpt>True<ept id=\"p2\">**</ept>.","pos":[9194,9254]},{"content":"Check the parent of the <bpt id=\"p1\">**</bpt>AdControl<ept id=\"p1\">**</ept>.","pos":[9491,9529]},{"content":"The parent must be active and visible.","pos":[9530,9568]},{"content":"Live values for <bpt id=\"p1\">**</bpt>ApplicationId<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>AdUnitId<ept id=\"p2\">**</ept> should not be tested in the emulator.","pos":[9574,9662]},{"content":"To ensure the <bpt id=\"p1\">**</bpt>AdControl<ept id=\"p1\">**</ept> is functioning as expected, use the test IDs for both <bpt id=\"p2\">**</bpt>ApplicationId<ept id=\"p2\">**</ept> and <bpt id=\"p3\">**</bpt>AdUnitId<ept id=\"p3\">**</ept> found in <bpt id=\"p4\">[</bpt>Test mode values<ept id=\"p4\">](test-mode-values.md)</ept>.","pos":[9663,9829]},{"content":"Black box blinks and disappears","pos":[9880,9911]},{"pos":[9917,10018],"content":"Double-check all steps in the <bpt id=\"p1\">[</bpt>AdControl not appearing<ept id=\"p1\">](#csharp-adcontrolnotappearing)</ept> section above."},{"content":"Handle the <bpt id=\"p1\">**</bpt>ErrorOccurred<ept id=\"p1\">**</ept> event, and use the message that is passed to the event handler to determine whether an error occurred and what type of error was thrown.","pos":[10024,10189]},{"content":"See <bpt id=\"p1\">[</bpt>Error handling in XAML/C# walkthrough<ept id=\"p1\">](error-handling-in-xamlc-walkthrough.md)</ept> for more information.","pos":[10190,10295]},{"content":"The following examples show the basic code needed to implement an error call.","pos":[10301,10378]},{"content":"This XAML code defines a <bpt id=\"p1\">**</bpt>TextBlock<ept id=\"p1\">**</ept> that is used to display the error message.","pos":[10379,10460]},{"pos":[10573,10651],"content":"This C# code retrieves the error message and displays it in the <bpt id=\"p1\">**</bpt>TextBlock<ept id=\"p1\">**</ept>."},{"content":"The most common error that causes a black box is “No ad available.”","pos":[11336,11403]},{"content":"This error means there is no ad available to return from the request.","pos":[11404,11473]},{"content":"<bpt id=\"p1\">**</bpt>AdControl<ept id=\"p1\">**</ept> is behaving normally.","pos":[11479,11514]},{"content":"Sometimes the same ad will appear more than once in a row giving the appearance that ads are not refreshing.","pos":[11515,11623]},{"content":"Ads not refreshing","pos":[11666,11684]},{"content":"Check the <bpt id=\"p1\">**</bpt>IsAutoRefreshEnabled<ept id=\"p1\">**</ept> property.","pos":[11690,11734]},{"content":"By default, this optional property is set to <bpt id=\"p1\">**</bpt>True<ept id=\"p1\">**</ept>.","pos":[11735,11789]},{"content":"When set to <bpt id=\"p1\">**</bpt>False<ept id=\"p1\">**</ept>, the <bpt id=\"p2\">**</bpt>Refresh<ept id=\"p2\">**</ept> method must be used to retrieve another ad.","pos":[11790,11872]},{"pos":[11878,11962],"content":"The following example demonstrates how to use the <bpt id=\"p1\">**</bpt>IsAutoRefreshEnabled<ept id=\"p1\">**</ept> property."},{"content":"Check calls to the <bpt id=\"p1\">**</bpt>Refresh<ept id=\"p1\">**</ept> method.","pos":[12210,12248]},{"content":"When using automatic refresh, <bpt id=\"p1\">**</bpt>Refresh<ept id=\"p1\">**</ept> cannot be used to retrieve another ad.","pos":[12249,12329]},{"content":"When using manual refresh, <bpt id=\"p1\">**</bpt>Refresh<ept id=\"p1\">**</ept> should be called only after a minimum of 30 to 60 seconds depending on the device’s current data connection.","pos":[12330,12477]},{"pos":[12483,12553],"content":"The following example demonstrates how to call the <bpt id=\"p1\">**</bpt>Refresh<ept id=\"p1\">**</ept> method."},{"content":"The <bpt id=\"p1\">**</bpt>AdControl<ept id=\"p1\">**</ept> is behaving normally.","pos":[13099,13138]},{"content":"Sometimes the same ad will appear more than once in a row giving the appearance that ads are not refreshing.","pos":[13139,13247]}],"content":"---\nauthor: mcleanbyron\nms.assetid: 141900dd-f1d3-4432-ac8b-b98eaa0b0da2\ndescription: Learn about solutions to common development issues with the Microsoft advertising libraries in XAML apps.\ntitle: XAML and C# troubleshooting guide\n---\n\n# XAML and C# troubleshooting guide\n\n\\[ Updated for UWP apps on Windows 10. For Windows 8.x articles, see the [archive](http://go.microsoft.com/fwlink/p/?linkid=619132) \\]\n\nThis topic contains solutions to common development issues with the Microsoft advertising libraries in XAML apps.\n\n-   [XAML](#xaml)\n\n    -   [AdControl not appearing](#xaml-notappearing)\n\n    -   [Black box blinks and disappears](#xaml-blackboxblinksdisappears)\n\n    -   [Ads not refreshing](#xaml-adsnotrefreshing)\n\n-   [C#](#csharp)\n\n    -   [AdControl not appearing](#csharp-adcontrolnotappearing)\n\n    -   [Black box blinks and disappears](#csharp-blackboxblinksdisappears)\n\n    -   [Ads bot refreshing](#csharp-adsnotrefreshing)\n\n<span id=\"xaml\"/>\n## XAML\n\n<span id=\"xaml-notappearing\"/>\n### AdControl not appearing\n\n1.  Ensure that the **Internet (Client)** capability is selected in Package.appxmanifest.\n\n2.  Check the application ID and ad unit ID. These IDs must match the application ID and ad unit ID that you obtained in Windows Dev Center. For more information, see [Set up ad units in your app](set-up-ad-units-in-your-app.md).\n\n    ``` syntax\n    <UI:AdControl AdUnitId=\"{AdUnitID}\" ApplicationId=\"{ApplicationID}\"\n                  Width=\"728\" Height=\"90\" />\n    ```\n\n3.  Check the **Height** and **Width** properties. These must be set to one of the [Supported ad sizes for banner ads](supported-ad-sizes-for-banner-ads.md).\n\n    ``` syntax\n    <UI:AdControl AdUnitId=\"{AdUnitID}\"\n                  ApplicationId=\"{ApplicationID}\"\n                  Width=\"728\" Height=\"90\" />\n    ```\n\n4.  Check the element position. The [AdControl](https://msdn.microsoft.com/library/windows/apps/microsoft.advertising.winrt.ui.adcontrol.aspx) must be inside the viewable area.\n\n5.  Check the **Visibility** property. The optional **Visibility** property must not be set to collapsed or hidden. This property can be set inline (as shown below) or in an external style sheet.\n\n    ``` syntax\n    <UI:AdControl AdUnitId=\"{AdUnitID}\"\n                  ApplicationId=\"{ApplicationID}\"\n                  Visibility=\"Visible\"\n                  Width=\"728\" Height=\"90\" />\n    ```\n\n6.  Check the **IsEnabled** property. The optional `IsEnabled` property must be set to `True`.\n\n    ``` syntax\n    <UI:AdControl AdUnitId=\"{AdUnitID}\"\n                  ApplicationId=\"{ApplicationID}\"\n                  IsEnabled=\"True\"\n                  Width=\"728\" Height=\"90\" />\n    ```\n\n7.  Check the parent of the **AdControl**. If the **AdControl** element resides in a parent element, the parent must be active and visible.\n\n    ``` syntax\n    <StackPanel>\n        <UI:AdControl AdUnitId=\"{AdUnitID}\"\n                      ApplicationId=\"{ApplicationID}\"\n                      Width=\"728\" Height=\"90\" />\n    </StackPanel>\n    ```\n\n8.  Ensure the **AdControl** is not hidden from the viewport. The **AdControl** must be visible for ads to display properly.\n\n9.  Live values for **ApplicationId** and **AdUnitId** should not be tested in the emulator. To ensure the **AdControl** is functioning as expected, use the test IDs for both **ApplicationId** and **AdUnitId** found in [Test mode values](test-mode-values.md).\n\n<span id=\"xaml-blackboxblinksdisappears\"/>\n### Black box blinks and disappears\n\n1.  Double-check all steps in the previous [AdControl not appearing](#xaml-notappearing) section.\n\n2.  Handle the **ErrorOccurred** event, and use the message that is passed to the event handler to determine whether an error occurred and what type of error was thrown. See [Error handling in XAML/C# walkthrough](error-handling-in-xamlc-walkthrough.md) for more information.\n\n    This example demonstrates an **ErrorOccurred** event handler. The first snippet is the XAML UI markup.\n\n    ``` syntax\n    <UI:AdControl AdUnitId=\"{AdUnitID}\"\n                  ApplicationId=\"{ApplicationID}\"\n                  Width=\"728\" Height=\"90\"\n                  ErrorOccurred=\"adControl_ErrorOccurred\" />\n\n    <TextBlock x:Name=\"TextBlock1\" TextWrapping=\"Wrap\" Width=\"500\" Height=\"250\" />\n    ```\n\n    This example demonstrates of the the corresponding code.\n\n    ``` syntax\n    private void adControl_ErrorOccurred(object sender,               \n        Microsoft.Advertising.WinRT.UI.AdErrorEventArgs e)\n    {\n        TextBlock1.Text = e.Error.Message;\n    }\n    ```\n\n    The most common error that causes a black box is “No ad available.” This error means there is no ad available to return from the request.\n\n3.  The [AdControl](https://msdn.microsoft.com/library/windows/apps/microsoft.advertising.winrt.ui.adcontrol.aspx) is behaving normally.\n\n    By default, the **AdControl** will collapse when it cannot display an ad. If other elements are children of the same parent they may move to fill the gap of the collapsed **AdControl** and expand when the next request is made.\n\n<span id=\"xaml-adsnotrefreshing\"/>\n### Ads not refreshing\n\n1.  Check the [IsAutoRefreshEnabled](https://msdn.microsoft.com/library/windows/apps/microsoft.advertising.winrt.ui.adcontrol.isautorefreshenabled.aspx) property. By default, this optional property is set to **True**. When set to **False**, the [Refresh](https://msdn.microsoft.com/library/windows/apps/microsoft.advertising.winrt.ui.adcontrol.refresh.aspx) method must be used to retrieve another ad.\n\n    ``` syntax\n    <UI:AdControl AdUnitId=\"{AdUnitID}\"\n                  ApplicationId=\"{ApplicationID}\"\n                  Width=\"728\" Height=\"90\"\n                  IsAutoRefreshEnabled=\"True\" />\n    ```\n\n2.  Check calls to the **Refresh** method. When using automatic refresh, **Refresh** cannot be used to retrieve another ad. When using manual refresh, **Refresh** should be called only after a minimum of 30 to 60 seconds depending on the device’s current data connection.\n\n    The following code snippets show an example of how to use the **Refresh** method. The first snippet is the XAML UI markup.\n\n    ``` syntax\n    <UI:AdControl x:Name=\"adControl1\"\n                  AdUnitId=\"{AdUnit_ID}\"\n                  ApplicationId=\"{ApplicationID}\"\n                  Width=\"728\" Height=\"90\"\n                  IsAutoRefreshEnabled=\"False\" />\n    ```\n\n    This code snippet shows an example of the C# code behind the UI markup.\n\n    ``` syntax\n    public Ads()\n    {\n        var timer = new DispatcherTimer() { Interval = TimeSpan.FromSeconds(60) };\n        timer.Tick += (s, e) => adControl1.Refresh();\n        timer.Start();\n    }\n    ```\n\n3.  The **AdControl** is behaving normally. Sometimes the same ad will appear more than once in a row giving the appearance that ads are not refreshing.\n\n<span id=\"csharp\"/>\n## C\\# #\n\n<span id=\"csharp-adcontrolnotappearing\"/>\n### AdControl not appearing\n\n1.  Ensure that the **Internet (Client)** capability is selected in Package.appxmanifest.\n\n2.  Ensure the **AdControl** is instantiated. If the **AdControl** is not instantiated it will not be available.\n\n    ``` syntax\n    using Microsoft.Advertising.WinRT.UI;\n\n    namespace App1\n    {\n        public sealed partial class MainPage : Page\n        {\n            AdControl adControl;\n\n            public MainPage()\n            {\n                this.InitializeComponent();\n\n                adControl = new AdControl()\n                {\n                    ApplicationId = \"{ApplicationID}\",\n                    AdUnitId = \"{AdUnitID}\",\n                    Height = 90,\n                    Width = 728\n                };\n            }\n        }\n    }\n    ```\n\n3.  Check the application ID and ad unit ID. These IDs must match the application ID and ad unit ID that you obtained in Windows Dev Center. For more information, see [Set up ad units in your app](set-up-ad-units-in-your-app.md).\n\n    ``` syntax\n    adControl = new AdControl();\n    adControl.ApplicationId = \"{ApplicationID}\";adControl.AdUnitId = \"{AdUnitID}\";\n    adControl.Height = 90;\n    adControl.Width = 728;\n    ```\n\n4.  Check the **Height** and **Width** parameters. These must be set to one of the [supported ad sizes for banner ads](supported-ad-sizes-for-banner-ads.md).\n\n    ``` syntax\n    adControl = new AdControl();\n    adControl.ApplicationId = \"{ApplicationID}\";\n    adControl.AdUnitId = \"{AdUnitID}\";\n    adControl.Height = 90;adControl.Width = 728;\n    ```\n\n5.  Ensure the **AdControl** is added to a parent element. To display, the **AdControl** must be added as a child to a parent control (for example, a **StackPanel** or **Grid**).\n\n    ``` syntax\n    ContentPanel.Children.Add(adControl);\n    ```\n\n6.  Check the **Margin** parameter. The **AdControl** must be inside the viewable area.\n\n7.  Check the **Visibility** property. The optional **Visibility** property must be set to **Visible**.\n\n    ``` syntax\n    adControl = new AdControl();\n    adControl.ApplicationId = \"{ApplicationID}\";\n    adControl.AdUnitId = \"{AdUnitID}\";\n    adControl.Height = 90;\n    adControl.Width = 728;\n    adControl.Visibility = System.Windows.Visibility.Visible;\n    ```\n\n8.  Check the **IsEnabled** property. The optional **IsEnabled** property must be set to **True**.\n\n    ``` syntax\n    adControl = new AdControl();\n    adControl.ApplicationId = \"{ApplicationID}\";\n    adControl.AdUnitId = \"{AdUnitID}\";\n    adControl.Height = 90;\n    adControl.Width = 728;\n    adControl.IsEnabled = True;\n    ```\n\n9.  Check the parent of the **AdControl**. The parent must be active and visible.\n\n10. Live values for **ApplicationId** and **AdUnitId** should not be tested in the emulator. To ensure the **AdControl** is functioning as expected, use the test IDs for both **ApplicationId** and **AdUnitId** found in [Test mode values](test-mode-values.md).\n\n<span id=\"csharp-blackboxblinksdisappears\"/>\n### Black box blinks and disappears\n\n1.  Double-check all steps in the [AdControl not appearing](#csharp-adcontrolnotappearing) section above.\n\n2.  Handle the **ErrorOccurred** event, and use the message that is passed to the event handler to determine whether an error occurred and what type of error was thrown. See [Error handling in XAML/C# walkthrough](error-handling-in-xamlc-walkthrough.md) for more information.\n\n    The following examples show the basic code needed to implement an error call. This XAML code defines a **TextBlock** that is used to display the error message.\n\n    ``` syntax\n    <TextBlock x:Name=\"TextBlock1\" TextWrapping=\"Wrap\" Width=\"500\" Height=\"250\" />\n    ```\n\n    This C# code retrieves the error message and displays it in the **TextBlock**.\n\n    ``` syntax\n    using Microsoft.Advertising.WinRT.UI;\n\n    namespace App1\n    {\n        public partial class MainPage : Page\n        {\n            AdControl adControl;\n\n            public MainPage()\n            {\n                this.InitializeComponent();\n\n                adControl = new AdControl();\n                adControl.ApplicationId = \"{ApplicationID}\";\n                adControl.AdUnitId = \"{AdUnitID}\";\n                adControl.Height = 90;\n                adControl.Width = 728;\n                adControl.ErrorOccurred += (s,e) =>\n                {\n                    TextBlock1.Text = e.Error.Message;\n                };\n            }\n        }\n    }\n    ```\n\n    The most common error that causes a black box is “No ad available.” This error means there is no ad available to return from the request.\n\n3.  **AdControl** is behaving normally. Sometimes the same ad will appear more than once in a row giving the appearance that ads are not refreshing.\n\n<span id=\"csharp-adsnotrefreshing\"/>\n### Ads not refreshing\n\n1.  Check the **IsAutoRefreshEnabled** property. By default, this optional property is set to **True**. When set to **False**, the **Refresh** method must be used to retrieve another ad.\n\n    The following example demonstrates how to use the **IsAutoRefreshEnabled** property.\n\n    ``` syntax\n    adControl = new AdControl();\n    adControl.ApplicationId = \"{ApplicationID}\";\n    adControl.AdUnitId = \"{AdUnitID}\";\n    adControl.Height = 90;\n    adControl.Width = 728;\n    adControl.IsAutoRefreshEnabled = true;\n    ```\n\n2.  Check calls to the **Refresh** method. When using automatic refresh, **Refresh** cannot be used to retrieve another ad. When using manual refresh, **Refresh** should be called only after a minimum of 30 to 60 seconds depending on the device’s current data connection.\n\n    The following example demonstrates how to call the **Refresh** method.\n\n    ``` syntax\n    public MainPage()\n    {\n        InitializeComponent();\n\n        adControl = new AdControl();\n        adControl.ApplicationId = \"{ApplicationID}\";\n        adControl.AdUnitId = \"{AdUnitID}\";\n        adControl.Height = 90;\n        adControl.Width = 728;\n        adControl.IsAutoRefreshEnabled = false;\n\n        ContentPanel.Children.Add(adControl);\n\n        var timer = new DispatcherTimer() { Interval = TimeSpan.FromSeconds(60) };\n        timer.Tick += (s, e) => adControl.Refresh();\n        timer.Start();\n    }\n    ```\n\n3.  The **AdControl** is behaving normally. Sometimes the same ad will appear more than once in a row giving the appearance that ads are not refreshing.\n\n \n\n \n"}