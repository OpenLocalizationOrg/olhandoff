{"nodes":[{"content":"Help your users be more productive by letting them view multiple independent parts of your app in separate windows.","pos":[32,147]},{"content":"Show multiple views for an app","pos":[155,185]},{"content":"Show multiple views for an app","pos":[301,331]},{"content":"You can help your users be more productive by letting them view multiple independent parts of your app in separate windows.","pos":[333,456]},{"content":"A typical example is an e-mail app where the main UI shows the list of emails and a preview of the selected e-mail.","pos":[457,572]},{"content":"But users can also open messages in separate windows and view them side-by-side.","pos":[573,653]},{"content":"Important APIs","pos":[657,671]},{"content":"ApplicationViewSwitcher","pos":[682,705]},{"content":"CreateNewView","pos":[774,787]},{"content":"When you create multiple windows for an app, each window behaves independently.","pos":[850,929]},{"content":"The taskbar shows each window separately.","pos":[930,971]},{"content":"Users can move, resize, show, and hide app windows independently and can switch between app windows as if they were separate apps.","pos":[972,1102]},{"content":"Each window operates in its own thread.","pos":[1103,1142]},{"pos":[1249,1264],"content":"What is a view?"},{"content":"An app view is the 1:1 pairing of a thread and a window that the app uses to display content.","pos":[1267,1360]},{"content":"It's represented by a <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>CoreApplicationView<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br225017)</ept> object.","pos":[1361,1474]},{"content":"Views are managed by the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>CoreApplication<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br225016)</ept> object.","pos":[1476,1588]},{"content":"You call <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>CoreApplication.CreateNewView<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn297278)</ept> to create a<bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>CoreApplicationView<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/br225017)</ept> object.","pos":[1589,1794]},{"content":"The <bpt id=\"p1\">**</bpt>CoreApplicationView<ept id=\"p1\">**</ept> brings together a <bpt id=\"p2\">[</bpt><bpt id=\"p3\">**</bpt>CoreWindow<ept id=\"p3\">**</ept><ept id=\"p2\">](https://msdn.microsoft.com/library/windows/apps/br208225)</ept> and a <bpt id=\"p4\">[</bpt><bpt id=\"p5\">**</bpt>CoreDispatcher<ept id=\"p5\">**</ept><ept id=\"p4\">](https://msdn.microsoft.com/library/windows/apps/br208211)</ept> (stored in the <bpt id=\"p6\">[</bpt><bpt id=\"p7\">**</bpt>CoreWindow<ept id=\"p7\">**</ept><ept id=\"p6\">](https://msdn.microsoft.com/library/windows/apps/br225019)</ept> and <bpt id=\"p8\">[</bpt><bpt id=\"p9\">**</bpt>Dispatcher<ept id=\"p9\">**</ept><ept id=\"p8\">](https://msdn.microsoft.com/library/windows/apps/dn433264)</ept> properties).","pos":[1795,2182]},{"content":"You can think of the <bpt id=\"p1\">**</bpt>CoreApplicationView<ept id=\"p1\">**</ept> as the object that the Windows Runtime uses to interact with the core Windows system.","pos":[2183,2313]},{"content":"You typically don’t work directly with the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>CoreApplicationView<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br225017)</ept>.","pos":[2315,2442]},{"content":"Instead, the Windows Runtime provides the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>ApplicationView<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/hh701658)</ept> class in the <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>Windows.UI.ViewManagement<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/br242295)</ept> namespace.","pos":[2443,2678]},{"content":"This class provides properties, methods, and events that you use when your app interacts with the windowing system.","pos":[2679,2794]},{"content":"To work with an <bpt id=\"p1\">**</bpt>ApplicationView<ept id=\"p1\">**</ept>, call the static <bpt id=\"p2\">[</bpt><bpt id=\"p3\">**</bpt>ApplicationView.GetForCurrentView<ept id=\"p3\">**</ept><ept id=\"p2\">](https://msdn.microsoft.com/library/windows/apps/hh701672)</ept> method, which gets an <bpt id=\"p4\">**</bpt>ApplicationView<ept id=\"p4\">**</ept> instance tied to the current <bpt id=\"p5\">**</bpt>CoreApplicationView<ept id=\"p5\">**</ept>’s thread.","pos":[2795,3050]},{"content":"Likewise, the XAML framework wraps the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>CoreWindow<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br208225)</ept> object in a <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>Windows.UI.XAML.Window<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/br209041)</ept> object.","pos":[3052,3272]},{"content":"In a XAML app, you typically interact with the <bpt id=\"p1\">**</bpt>Window<ept id=\"p1\">**</ept> object rather than working directly with the <bpt id=\"p2\">**</bpt>CoreWindow<ept id=\"p2\">**</ept>.","pos":[3273,3391]},{"pos":[3498,3513],"content":"Show a new view"},{"content":"Before we go further, let's look at the steps to create a new view.","pos":[3516,3583]},{"content":"Here, the new view is launched in response to a button click.","pos":[3584,3645]},{"content":"To show a new view","pos":[4298,4316]},{"pos":[4324,4478],"content":"Call <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>CoreApplication.CreateNewView<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn297291)</ept> to create a new window and thread for the view content."},{"content":"Track the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Id<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn281120)</ept> of the new view.","pos":[4620,4713]},{"content":"You use this to show the view later.","pos":[4714,4750]},{"content":"You might want to consider building some infrastructure into your app to help with tracking the views you create.","pos":[4756,4869]},{"content":"See the <ph id=\"ph1\">`ViewLifetimeControl`</ph> class in the <bpt id=\"p1\">[</bpt>MultipleViews sample<ept id=\"p1\">](http://go.microsoft.com/fwlink/p/?LinkId=620574)</ept> for an example.","pos":[4870,5000]},{"content":"On the new thread, populate the window.","pos":[5315,5354]},{"content":"You use the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>CoreDispatcher.RunAsync<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/hh750317)</ept> method to schedule work on the UI thread for the new view.","pos":[5360,5518]},{"content":"You use a <bpt id=\"p1\">[</bpt>lambda expression<ept id=\"p1\">](http://go.microsoft.com/fwlink/p/?LinkId=389615)</ept> to pass a function as an argument to the <bpt id=\"p2\">**</bpt>RunAsync<ept id=\"p2\">**</ept> method.","pos":[5519,5659]},{"content":"The work you do in the lambda function happens on the new view's thread.","pos":[5660,5732]},{"content":"In XAML, you typically add a <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Frame<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br242682)</ept> to the <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>Window<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/br209041)</ept>'s <bpt id=\"p5\">[</bpt><bpt id=\"p6\">**</bpt>Content<ept id=\"p6\">**</ept><ept id=\"p5\">](https://msdn.microsoft.com/library/windows/apps/br209051)</ept> property, then navigate the <bpt id=\"p7\">**</bpt>Frame<ept id=\"p7\">**</ept> to a XAML <bpt id=\"p8\">[</bpt><bpt id=\"p9\">**</bpt>Page<ept id=\"p9\">**</ept><ept id=\"p8\">](https://msdn.microsoft.com/library/windows/apps/br227503)</ept> where you've defined your app content.","pos":[5738,6144]},{"content":"For more info, see <bpt id=\"p1\">[</bpt>Peer-to-peer navigation between two pages<ept id=\"p1\">](peer-to-peer-navigation-between-two-pages.md)</ept>.","pos":[6145,6254]},{"content":"After the new <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Window<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br209041)</ept> is populated, you must call the <bpt id=\"p3\">**</bpt>Window<ept id=\"p3\">**</ept>'s <bpt id=\"p4\">[</bpt><bpt id=\"p5\">**</bpt>Activate<ept id=\"p5\">**</ept><ept id=\"p4\">](https://msdn.microsoft.com/library/windows/apps/br209046)</ept> method in order to show the <bpt id=\"p6\">**</bpt>Window<ept id=\"p6\">**</ept> later.","pos":[6260,6508]},{"content":"This work happens on the new view's thread, so the new <bpt id=\"p1\">**</bpt>Window<ept id=\"p1\">**</ept> is activated.","pos":[6509,6588]},{"content":"Finally, get the new view's <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Id<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn281120)</ept> that you use to show the view later.","pos":[6594,6725]},{"content":"Again, this work is on the new view's thread, so <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>ApplicationView.GetForCurrentView<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/hh701672)</ept> gets the <bpt id=\"p3\">**</bpt>Id<ept id=\"p3\">**</ept> of the new view.","pos":[6726,6905]},{"pos":[7529,7671],"content":"Show the new view by calling <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>ApplicationViewSwitcher.TryShowAsStandaloneAsync<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn281101)</ept>."},{"content":"After you create a new view, you can show it in a new window by calling the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>ApplicationViewSwitcher.TryShowAsStandaloneAsync<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn281101)</ept> method.","pos":[7677,7873]},{"content":"The <bpt id=\"p1\">*</bpt>viewId<ept id=\"p1\">*</ept> parameter for this method is an integer that uniquely identifies each of the views in your app.","pos":[7874,7982]},{"content":"You retrieve the view <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Id<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn281120)</ept> by using either the <bpt id=\"p3\">**</bpt>ApplicationView.Id<ept id=\"p3\">**</ept> property or the <bpt id=\"p4\">[</bpt><bpt id=\"p5\">**</bpt>ApplicationView.GetApplicationViewIdForWindow<ept id=\"p5\">**</ept><ept id=\"p4\">](https://msdn.microsoft.com/library/windows/apps/dn281109)</ept> method.","pos":[7983,8248]},{"pos":[8506,8519],"content":"The main view"},{"content":"The first view that’s created when your app starts is called the <bpt id=\"p1\">*</bpt>main view<ept id=\"p1\">*</ept>.","pos":[8522,8599]},{"content":"This view is stored in the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>CoreApplication.MainView<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/hh700465)</ept> property, and its <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>IsMain<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/hh700452)</ept> property is true.","pos":[8600,8822]},{"content":"You don’t create this view; it’s created by the app.","pos":[8823,8875]},{"content":"The main view's thread serves as the manager for the app, and all app activation events are delivered on this thread.","pos":[8876,8993]},{"content":"If secondary views are open, the main view’s window can be hidden – for example, by clicking the close (x) button in the window title bar - but its thread remains active.","pos":[8995,9165]},{"content":"Calling <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Close<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br209049)</ept> on the main view’s <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>Window<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/br209041)</ept> causes an <bpt id=\"p5\">**</bpt>InvalidOperationException<ept id=\"p5\">**</ept> to occur.","pos":[9166,9383]},{"content":"(Use <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Application.Exit<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br242327)</ept> to close your app.) If the main view’s thread is terminated, the app closes.","pos":[9384,9546]},{"pos":[9653,9668],"content":"Secondary views"},{"content":"Other views, including all views that you create by calling <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>CreateNewView<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn297278)</ept> in your app code, are secondary views.","pos":[9671,9847]},{"content":"Both the main view and secondary views are stored in the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>CoreApplication.Views<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/br205861)</ept> collection.","pos":[9848,10002]},{"content":"Typically, you create secondary views in response to a user action.","pos":[10003,10070]},{"content":"In some instances, the system creates secondary views for your app.","pos":[10071,10138]},{"content":"<bpt id=\"p1\">**</bpt>Note<ept id=\"p1\">**</ept>  You can use the Windows <bpt id=\"p2\">*</bpt>assigned access<ept id=\"p2\">*</ept> feature to run an app in <bpt id=\"p3\">[</bpt>kiosk mode<ept id=\"p3\">](https://technet.microsoft.com/library/mt219050.aspx)</ept>.","pos":[10140,10283]},{"content":"When you do this, the system creates a secondary view to present your app UI above the lock screen.","pos":[10284,10383]},{"content":"App-created secondary views are not allowed, so if you try to show your own secondary view in kiosk mode, an exception is thrown.","pos":[10384,10513]},{"pos":[10671,10702],"content":"Switch from one view to another"},{"content":"You must provide a way for the user to navigate from a secondary window back to the main window.","pos":[10705,10801]},{"content":"To do this, use the <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>ApplicationViewSwitcher.SwitchAsync<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn281097)</ept> method.","pos":[10802,10929]},{"content":"You call this method from the thread of the window you're switching from and pass the view ID of the window you're switching to.","pos":[10930,11058]},{"pos":[11347,11646],"content":"When you use <bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>SwitchAsync<ept id=\"p2\">**</ept><ept id=\"p1\">](https://msdn.microsoft.com/library/windows/apps/dn281097)</ept>, you can choose if you want to close the initial window and remove it from the taskbar by specifying the value of <bpt id=\"p3\">[</bpt><bpt id=\"p4\">**</bpt>ApplicationViewSwitchingOptions<ept id=\"p4\">**</ept><ept id=\"p3\">](https://msdn.microsoft.com/library/windows/apps/dn281105)</ept>."}],"content":"---\nauthor: Jwmsft\nDescription: Help your users be more productive by letting them view multiple independent parts of your app in separate windows.\ntitle: Show multiple views for an app\nms.assetid: BAF9956F-FAAF-47FB-A7DB-8557D2548D88\nlabel: Show multiple views for an app\ntemplate: detail.hbs\n---\n\n# Show multiple views for an app\n\nYou can help your users be more productive by letting them view multiple independent parts of your app in separate windows. A typical example is an e-mail app where the main UI shows the list of emails and a preview of the selected e-mail. But users can also open messages in separate windows and view them side-by-side.\n\n**Important APIs**\n\n-   [**ApplicationViewSwitcher**](https://msdn.microsoft.com/library/windows/apps/dn281094)\n-   [**CreateNewView**](https://msdn.microsoft.com/library/windows/apps/dn297278)\n\nWhen you create multiple windows for an app, each window behaves independently. The taskbar shows each window separately. Users can move, resize, show, and hide app windows independently and can switch between app windows as if they were separate apps. Each window operates in its own thread.\n\n## <span id=\"What_is_a_view_\"></span><span id=\"what_is_a_view_\"></span><span id=\"WHAT_IS_A_VIEW_\"></span>What is a view?\n\n\nAn app view is the 1:1 pairing of a thread and a window that the app uses to display content. It's represented by a [**CoreApplicationView**](https://msdn.microsoft.com/library/windows/apps/br225017) object.\n\nViews are managed by the [**CoreApplication**](https://msdn.microsoft.com/library/windows/apps/br225016) object. You call [**CoreApplication.CreateNewView**](https://msdn.microsoft.com/library/windows/apps/dn297278) to create a[**CoreApplicationView**](https://msdn.microsoft.com/library/windows/apps/br225017) object. The **CoreApplicationView** brings together a [**CoreWindow**](https://msdn.microsoft.com/library/windows/apps/br208225) and a [**CoreDispatcher**](https://msdn.microsoft.com/library/windows/apps/br208211) (stored in the [**CoreWindow**](https://msdn.microsoft.com/library/windows/apps/br225019) and [**Dispatcher**](https://msdn.microsoft.com/library/windows/apps/dn433264) properties). You can think of the **CoreApplicationView** as the object that the Windows Runtime uses to interact with the core Windows system.\n\nYou typically don’t work directly with the [**CoreApplicationView**](https://msdn.microsoft.com/library/windows/apps/br225017). Instead, the Windows Runtime provides the [**ApplicationView**](https://msdn.microsoft.com/library/windows/apps/hh701658) class in the [**Windows.UI.ViewManagement**](https://msdn.microsoft.com/library/windows/apps/br242295) namespace. This class provides properties, methods, and events that you use when your app interacts with the windowing system. To work with an **ApplicationView**, call the static [**ApplicationView.GetForCurrentView**](https://msdn.microsoft.com/library/windows/apps/hh701672) method, which gets an **ApplicationView** instance tied to the current **CoreApplicationView**’s thread.\n\nLikewise, the XAML framework wraps the [**CoreWindow**](https://msdn.microsoft.com/library/windows/apps/br208225) object in a [**Windows.UI.XAML.Window**](https://msdn.microsoft.com/library/windows/apps/br209041) object. In a XAML app, you typically interact with the **Window** object rather than working directly with the **CoreWindow**.\n\n## <span id=\"Show_a_new_view\"></span><span id=\"show_a_new_view\"></span><span id=\"SHOW_A_NEW_VIEW\"></span>Show a new view\n\n\nBefore we go further, let's look at the steps to create a new view. Here, the new view is launched in response to a button click.\n\n```CSharp\nprivate async void Button_Click(object sender, RoutedEventArgs e)\n{\n    CoreApplicationView newView = CoreApplication.CreateNewView();\n    int newViewId = 0;\n    await newView.Dispatcher.RunAsync(CoreDispatcherPriority.Normal, () =>\n    {\n        Frame frame = new Frame();\n        frame.Navigate(typeof(SecondaryPage), null);   \n        Window.Current.Content = frame;\n        // You have to activate the window in order to show it later.\n        Window.Current.Activate();\n\n        newViewId = ApplicationView.GetForCurrentView().Id;\n    });\n    bool viewShown = await ApplicationViewSwitcher.TryShowAsStandaloneAsync(newViewId);\n}\n```\n\n**To show a new view**\n\n1.  Call [**CoreApplication.CreateNewView**](https://msdn.microsoft.com/library/windows/apps/dn297291) to create a new window and thread for the view content.\n\n```    CSharp\nCoreApplicationView newView = CoreApplication.CreateNewView();</code></pre></td>\n    </tr>\n    </tbody>\n    </table>\n```\n\n2.  Track the [**Id**](https://msdn.microsoft.com/library/windows/apps/dn281120) of the new view. You use this to show the view later.\n\n    You might want to consider building some infrastructure into your app to help with tracking the views you create. See the `ViewLifetimeControl` class in the [MultipleViews sample](http://go.microsoft.com/fwlink/p/?LinkId=620574) for an example.\n\n    <span codelanguage=\"CSharp\"></span>\n```    CSharp\n    <colgroup>\n    <col width=\"100%\" />\n    </colgroup>\n    <thead>\n    <tr class=\"header\">\n    <th align=\"left\">C#</th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr class=\"odd\">\nint newViewId = 0;</code></pre></td>\n    </tr>\n    </tbody>\n    </table>\n```\n\n3.  On the new thread, populate the window.\n\n    You use the [**CoreDispatcher.RunAsync**](https://msdn.microsoft.com/library/windows/apps/hh750317) method to schedule work on the UI thread for the new view. You use a [lambda expression](http://go.microsoft.com/fwlink/p/?LinkId=389615) to pass a function as an argument to the **RunAsync** method. The work you do in the lambda function happens on the new view's thread.\n\n    In XAML, you typically add a [**Frame**](https://msdn.microsoft.com/library/windows/apps/br242682) to the [**Window**](https://msdn.microsoft.com/library/windows/apps/br209041)'s [**Content**](https://msdn.microsoft.com/library/windows/apps/br209051) property, then navigate the **Frame** to a XAML [**Page**](https://msdn.microsoft.com/library/windows/apps/br227503) where you've defined your app content. For more info, see [Peer-to-peer navigation between two pages](peer-to-peer-navigation-between-two-pages.md).\n\n    After the new [**Window**](https://msdn.microsoft.com/library/windows/apps/br209041) is populated, you must call the **Window**'s [**Activate**](https://msdn.microsoft.com/library/windows/apps/br209046) method in order to show the **Window** later. This work happens on the new view's thread, so the new **Window** is activated.\n\n    Finally, get the new view's [**Id**](https://msdn.microsoft.com/library/windows/apps/dn281120) that you use to show the view later. Again, this work is on the new view's thread, so [**ApplicationView.GetForCurrentView**](https://msdn.microsoft.com/library/windows/apps/hh701672) gets the **Id** of the new view.\n\n    <span codelanguage=\"CSharp\"></span>\n```    CSharp\n    <colgroup>\n    <col width=\"100%\" />\n    </colgroup>\n    <thead>\n    <tr class=\"header\">\n    <th align=\"left\">C#</th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr class=\"odd\">\nawait newView.Dispatcher.RunAsync(CoreDispatcherPriority.Normal, () =>\n    {\n        Frame frame = new Frame();\n        frame.Navigate(typeof(SecondaryPage), null);   \n        Window.Current.Content = frame;\n        // You have to activate the window in order to show it later.\n        Window.Current.Activate();\n\n        newViewId = ApplicationView.GetForCurrentView().Id;\n    });\n```\n\n4.  Show the new view by calling [**ApplicationViewSwitcher.TryShowAsStandaloneAsync**](https://msdn.microsoft.com/library/windows/apps/dn281101).\n\n    After you create a new view, you can show it in a new window by calling the [**ApplicationViewSwitcher.TryShowAsStandaloneAsync**](https://msdn.microsoft.com/library/windows/apps/dn281101) method. The *viewId* parameter for this method is an integer that uniquely identifies each of the views in your app. You retrieve the view [**Id**](https://msdn.microsoft.com/library/windows/apps/dn281120) by using either the **ApplicationView.Id** property or the [**ApplicationView.GetApplicationViewIdForWindow**](https://msdn.microsoft.com/library/windows/apps/dn281109) method.\n\n```    CSharp\nbool viewShown = await ApplicationViewSwitcher.TryShowAsStandaloneAsync(newViewId);</code></pre></td>\n    </tr>\n    </tbody>\n    </table>\n```\n\n## <span id=\"The_main_view\"></span><span id=\"the_main_view\"></span><span id=\"THE_MAIN_VIEW\"></span>The main view\n\n\nThe first view that’s created when your app starts is called the *main view*. This view is stored in the [**CoreApplication.MainView**](https://msdn.microsoft.com/library/windows/apps/hh700465) property, and its [**IsMain**](https://msdn.microsoft.com/library/windows/apps/hh700452) property is true. You don’t create this view; it’s created by the app. The main view's thread serves as the manager for the app, and all app activation events are delivered on this thread.\n\nIf secondary views are open, the main view’s window can be hidden – for example, by clicking the close (x) button in the window title bar - but its thread remains active. Calling [**Close**](https://msdn.microsoft.com/library/windows/apps/br209049) on the main view’s [**Window**](https://msdn.microsoft.com/library/windows/apps/br209041) causes an **InvalidOperationException** to occur. (Use [**Application.Exit**](https://msdn.microsoft.com/library/windows/apps/br242327) to close your app.) If the main view’s thread is terminated, the app closes.\n\n## <span id=\"Secondary_views\"></span><span id=\"secondary_views\"></span><span id=\"SECONDARY_VIEWS\"></span>Secondary views\n\n\nOther views, including all views that you create by calling [**CreateNewView**](https://msdn.microsoft.com/library/windows/apps/dn297278) in your app code, are secondary views. Both the main view and secondary views are stored in the [**CoreApplication.Views**](https://msdn.microsoft.com/library/windows/apps/br205861) collection. Typically, you create secondary views in response to a user action. In some instances, the system creates secondary views for your app.\n\n**Note**  You can use the Windows *assigned access* feature to run an app in [kiosk mode](https://technet.microsoft.com/library/mt219050.aspx). When you do this, the system creates a secondary view to present your app UI above the lock screen. App-created secondary views are not allowed, so if you try to show your own secondary view in kiosk mode, an exception is thrown.\n\n \n\n## <span id=\"Switch_from_one_view_to_another\"></span><span id=\"switch_from_one_view_to_another\"></span><span id=\"SWITCH_FROM_ONE_VIEW_TO_ANOTHER\"></span>Switch from one view to another\n\n\nYou must provide a way for the user to navigate from a secondary window back to the main window. To do this, use the [**ApplicationViewSwitcher.SwitchAsync**](https://msdn.microsoft.com/library/windows/apps/dn281097) method. You call this method from the thread of the window you're switching from and pass the view ID of the window you're switching to.\n\n<span codelanguage=\"CSharp\"></span>\n```CSharp\n<colgroup>\n<col width=\"100%\" />\n</colgroup>\n<thead>\n<tr class=\"header\">\n<th align=\"left\">C#</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\nawait ApplicationViewSwitcher.SwitchAsync(viewIdToShow);</code></pre></td>\n</tr>\n</tbody>\n</table>\n```\n\nWhen you use [**SwitchAsync**](https://msdn.microsoft.com/library/windows/apps/dn281097), you can choose if you want to close the initial window and remove it from the taskbar by specifying the value of [**ApplicationViewSwitchingOptions**](https://msdn.microsoft.com/library/windows/apps/dn281105).\n\n \n\n \n\n\n\n\n"}