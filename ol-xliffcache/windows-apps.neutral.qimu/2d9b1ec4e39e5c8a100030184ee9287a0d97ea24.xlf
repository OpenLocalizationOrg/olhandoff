<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="zh-cn" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">windows-apps-src\files\protect-your-enterprise-data-with-edp.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">2d9b1ec4e39e5c8a100030184ee9287a0d97ea24</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-781aacf</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>This topic shows examples of the coding tasks needed to achieve some of the most common file-related enterprise data protection (EDP) scenarios.</source>
          <target>This topic shows examples of the coding tasks needed to achieve some of the most common file-related enterprise data protection (EDP) scenarios.</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>Use enterprise data protection (EDP) to protect files</source>
          <target>Use enterprise data protection (EDP) to protect files</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>Use enterprise data protection (EDP) to protect files</source>
          <target>Use enterprise data protection (EDP) to protect files</target>
        </segment>
      </unit>
      <unit id="104">
        <originalData>
          <data id="id1">__</data>
          <data id="id2">__</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc> Enterprise data protection (EDP) policy cannot be applied on Windows 10, Version 1511 (build 10586) or earlier.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc> Enterprise data protection (EDP) policy cannot be applied on Windows 10, Version 1511 (build 10586) or earlier.</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source>This topic shows examples of the coding tasks needed to achieve some of the most common file-related enterprise data protection (EDP) scenarios.</source>
          <target>This topic shows examples of the coding tasks needed to achieve some of the most common file-related enterprise data protection (EDP) scenarios.</target>
        </segment>
      </unit>
      <unit id="106">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](../enterprise/edp-hub.md)</data>
        </originalData>
        <segment state="initial">
          <source>For the full developer picture of how EDP relates to files, streams, the clipboard, networking, background tasks, and data protection under lock, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">enterprise data protection (EDP)</pc>.</source>
          <target>For the full developer picture of how EDP relates to files, streams, the clipboard, networking, background tasks, and data protection under lock, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">enterprise data protection (EDP)</pc>.</target>
        </segment>
      </unit>
      <unit id="107">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](http://go.microsoft.com/fwlink/p/?LinkId=620031&amp;clcid=0x409)</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  The <pc dataRefEnd="id4" dataRefStart="id3" id="p2">enterprise data protection (EDP) sample</pc> covers many of the same scenarios demonstrated in this topic.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  The <pc dataRefEnd="id4" dataRefStart="id3" id="p2">enterprise data protection (EDP) sample</pc> covers many of the same scenarios demonstrated in this topic.</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source>Prerequisites</source>
          <target>Prerequisites</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source>Get set up for EDP</source>
          <target>Get set up for EDP</target>
        </segment>
      </unit>
      <unit id="110">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](../enterprise/edp-hub.md#set-up-your-computer-for-EDP)</data>
        </originalData>
        <segment state="initial">
          <source>See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Set up your computer for EDP</pc>.</source>
          <target>See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Set up your computer for EDP</pc>.</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source>Commit to building an enterprise-enlightened app</source>
          <target>Commit to building an enterprise-enlightened app</target>
        </segment>
      </unit>
      <unit id="112">
        <segment state="initial">
          <source>An app that autonomously ensures that enterprise data stays under the managing enterprise’s control is known as an enterprise-enlightened app.</source>
          <target>An app that autonomously ensures that enterprise data stays under the managing enterprise’s control is known as an enterprise-enlightened app.</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source>An enlightened app is more powerful, smart, flexible, and trusted than an unenlightened one.</source>
          <target>An enlightened app is more powerful, smart, flexible, and trusted than an unenlightened one.</target>
        </segment>
      </unit>
      <unit id="114">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Your app announces to the system that it is enlightened by declaring the restricted <pc dataRefEnd="id2" dataRefStart="id1" id="p1">enterpriseDataPolicy</pc> capability.</source>
          <target>Your app announces to the system that it is enlightened by declaring the restricted <pc dataRefEnd="id2" dataRefStart="id1" id="p1">enterpriseDataPolicy</pc> capability.</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source>There's more to being enlightened than setting a capability, though.</source>
          <target>There's more to being enlightened than setting a capability, though.</target>
        </segment>
      </unit>
      <unit id="116">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](../enterprise/edp-hub.md#enterprise-enlightened-apps)</data>
        </originalData>
        <segment state="initial">
          <source>To learn more, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Enterprise-enlightened apps</pc>.</source>
          <target>To learn more, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Enterprise-enlightened apps</pc>.</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source>Understand async programming for Universal Windows Platform (UWP) apps</source>
          <target>Understand async programming for Universal Windows Platform (UWP) apps</target>
        </segment>
      </unit>
      <unit id="118">
        <originalData>
          <data id="id1">\#</data>
          <data id="id2">[</data>
          <data id="id3">](https://msdn.microsoft.com/library/windows/apps/mt187337)</data>
          <data id="id4">\#</data>
        </originalData>
        <segment state="initial">
          <source>To learn about how to write asynchronous apps in C<ph dataRef="id1" id="ph1" /> or Visual Basic, see <pc dataRefEnd="id3" dataRefStart="id2" id="p1">Call asynchronous APIs in C<ph dataRef="id4" id="ph2" /> or Visual Basic</pc>.</source>
          <target>To learn about how to write asynchronous apps in C<ph dataRef="id1" id="ph1" /> or Visual Basic, see <pc dataRefEnd="id3" dataRefStart="id2" id="p1">Call asynchronous APIs in C<ph dataRef="id4" id="ph2" /> or Visual Basic</pc>.</target>
        </segment>
      </unit>
      <unit id="119">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/mt187334)</data>
        </originalData>
        <segment state="initial">
          <source>To learn about how to write asynchronous apps in C++, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Asynchronous programming in C++</pc>.</source>
          <target>To learn about how to write asynchronous apps in C++, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Asynchronous programming in C++</pc>.</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source>Your local folder path, and viewing protected files in File Explorer</source>
          <target>Your local folder path, and viewing protected files in File Explorer</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source>You can create an app to host the code examples in this topic to try them out.</source>
          <target>You can create an app to host the code examples in this topic to try them out.</target>
        </segment>
      </unit>
      <unit id="122">
        <segment state="initial">
          <source>The code examples write files to your app's local folder, and the exact location of that folder on disk is unique to your app.</source>
          <target>The code examples write files to your app's local folder, and the exact location of that folder on disk is unique to your app.</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source>To determine the location of your app's local folder, you can add the following code.</source>
          <target>To determine the location of your app's local folder, you can add the following code.</target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source>Once you have the path, you'll be able to use File Explorer to easily find the files that your app creates.</source>
          <target>Once you have the path, you'll be able to use File Explorer to easily find the files that your app creates.</target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source>That way, you'll be able to confirm that they're protected, and that they're protected to the correct identity.</source>
          <target>That way, you'll be able to confirm that they're protected, and that they're protected to the correct identity.</target>
        </segment>
      </unit>
      <unit id="126">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>In File Explorer, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Change folder and search options</pc> and on the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">View</pc> tab, check <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Show encrypted files in color</pc>.</source>
          <target>In File Explorer, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Change folder and search options</pc> and on the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">View</pc> tab, check <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Show encrypted files in color</pc>.</target>
        </segment>
      </unit>
      <unit id="127">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">&amp;gt;</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">**</data>
        </originalData>
        <segment state="initial">
          <source>Also, use File Explorer's <pc dataRefEnd="id2" dataRefStart="id1" id="p1">View</pc><ph dataRef="id3" id="ph1" /><pc dataRefEnd="id5" dataRefStart="id4" id="p2">Add columns</pc> command to add the <pc dataRefEnd="id7" dataRefStart="id6" id="p3">Encrypted to</pc> column so that you can see the enterprise identity that you're protecting your files to.</source>
          <target>Also, use File Explorer's <pc dataRefEnd="id2" dataRefStart="id1" id="p1">View</pc><ph dataRef="id3" id="ph1" /><pc dataRefEnd="id5" dataRefStart="id4" id="p2">Add columns</pc> command to add the <pc dataRefEnd="id7" dataRefStart="id6" id="p3">Encrypted to</pc> column so that you can see the enterprise identity that you're protecting your files to.</target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source>Protect enterprise data in a new file (for an interactive app)</source>
          <target>Protect enterprise data in a new file (for an interactive app)</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source>There are many ways enterprise data might enter your app, including from certain network endpoints, from files, from the clipboard, or from the share contract.</source>
          <target>There are many ways enterprise data might enter your app, including from certain network endpoints, from files, from the clipboard, or from the share contract.</target>
        </segment>
      </unit>
      <unit id="130">
        <segment state="initial">
          <source>Your app might create new enterprise data, too.</source>
          <target>Your app might create new enterprise data, too.</target>
        </segment>
      </unit>
      <unit id="131">
        <segment state="initial">
          <source>Whatever the means by which your enlightened app comes by enterprise data, your app will need to be careful to protect the data to the managed enterprise identity when it persists the data to a new file.</source>
          <target>Whatever the means by which your enlightened app comes by enterprise data, your app will need to be careful to protect the data to the managed enterprise identity when it persists the data to a new file.</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source>The basic steps are to use a regular storage API to create the file, use an EDP API to protect the file to the enterprise identity, and then (again, using regular storage APIs) to write to the file.</source>
          <target>The basic steps are to use a regular storage API to create the file, use an EDP API to protect the file to the enterprise identity, and then (again, using regular storage APIs) to write to the file.</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source>Be careful to protect the file before you write to it (as shown in the example below).</source>
          <target>Be careful to protect the file before you write to it (as shown in the example below).</target>
        </segment>
      </unit>
      <unit id="134">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn705157)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>You use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FileProtectionManager.ProtectAsync</pc></pc> method to protect the file.</source>
          <target>You use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FileProtectionManager.ProtectAsync</pc></pc> method to protect the file.</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source>And, as always, it only makes sense to protect to an identity if that identity is managed.</source>
          <target>And, as always, it only makes sense to protect to an identity if that identity is managed.</target>
        </segment>
      </unit>
      <unit id="136">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](../enterprise/edp-hub.md#confirming_an_identity_is_managed)</data>
        </originalData>
        <segment state="initial">
          <source>For more info about why that's the case, and how your app can determine the identity of the enterprise it's running in, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Confirming an identity is managed</pc>.</source>
          <target>For more info about why that's the case, and how your app can determine the identity of the enterprise it's running in, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Confirming an identity is managed</pc>.</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source>Protect enterprise data in a new file (for a background task)</source>
          <target>Protect enterprise data in a new file (for a background task)</target>
        </segment>
      </unit>
      <unit id="138">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn705157)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FileProtectionManager.ProtectAsync</pc></pc> API that we used in the previous section is only appropriate for interactive apps.</source>
          <target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FileProtectionManager.ProtectAsync</pc></pc> API that we used in the previous section is only appropriate for interactive apps.</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source>For a background task, your code can execute while under the lock screen.</source>
          <target>For a background task, your code can execute while under the lock screen.</target>
        </segment>
      </unit>
      <unit id="140">
        <segment state="initial">
          <source>And the organization may be administering a secure "data protection under lock" (DPL) policy, where encryption keys required to access protected resources are temporarily removed from device memory when the device is locked.</source>
          <target>And the organization may be administering a secure "data protection under lock" (DPL) policy, where encryption keys required to access protected resources are temporarily removed from device memory when the device is locked.</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source>This prevents data leaks if the device is lost.</source>
          <target>This prevents data leaks if the device is lost.</target>
        </segment>
      </unit>
      <unit id="142">
        <segment state="initial">
          <source>The feature also removes keys associated with protected files when their handles are closed.</source>
          <target>The feature also removes keys associated with protected files when their handles are closed.</target>
        </segment>
      </unit>
      <unit id="143">
        <segment state="initial">
          <source>It is, however, possible to create new protected files during the lock window (the time between the device being locked and unlocked) and access them while keeping the file handle open.</source>
          <target>It is, however, possible to create new protected files during the lock window (the time between the device being locked and unlocked) and access them while keeping the file handle open.</target>
        </segment>
      </unit>
      <unit id="144">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">StorageFolder.CreateFileAsync</pc> closes the handle when the file is created, so this algorithm can't be used.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">StorageFolder.CreateFileAsync</pc> closes the handle when the file is created, so this algorithm can't be used.</target>
        </segment>
      </unit>
      <unit id="145">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Create a new file using <pc dataRefEnd="id2" dataRefStart="id1" id="p1">StorageFolder.CreateFileAsync</pc>.</source>
          <target>Create a new file using <pc dataRefEnd="id2" dataRefStart="id1" id="p1">StorageFolder.CreateFileAsync</pc>.</target>
        </segment>
      </unit>
      <unit id="146">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Encrypt using <pc dataRefEnd="id2" dataRefStart="id1" id="p1">FileProtectionManager.ProtectAsync</pc>.</source>
          <target>Encrypt using <pc dataRefEnd="id2" dataRefStart="id1" id="p1">FileProtectionManager.ProtectAsync</pc>.</target>
        </segment>
      </unit>
      <unit id="147">
        <segment state="initial">
          <source>Open the file and write to it.</source>
          <target>Open the file and write to it.</target>
        </segment>
      </unit>
      <unit id="148">
        <segment state="initial">
          <source>Since Step 1 involves closing the file handle (and even if Step 1 didn’t close the handle, Step 2 would), Step 3 is not possible because encryption keys to access that file are no longer available.</source>
          <target>Since Step 1 involves closing the file handle (and even if Step 1 didn’t close the handle, Step 2 would), Step 3 is not possible because encryption keys to access that file are no longer available.</target>
        </segment>
      </unit>
      <unit id="149">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn705153)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>To address this scenario, you can use <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FileProtectionManager.CreateProtectedAndOpenAsync</pc></pc> to create a protected file and return an <pc dataRefEnd="id6" dataRefStart="id5" id="p3">IRandomAccessStream</pc> to it.</source>
          <target>To address this scenario, you can use <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FileProtectionManager.CreateProtectedAndOpenAsync</pc></pc> to create a protected file and return an <pc dataRefEnd="id6" dataRefStart="id5" id="p3">IRandomAccessStream</pc> to it.</target>
        </segment>
      </unit>
      <unit id="150">
        <segment state="initial">
          <source>This allows apps to make multiple writes to a file while keeping the file handle open.</source>
          <target>This allows apps to make multiple writes to a file while keeping the file handle open.</target>
        </segment>
      </unit>
      <unit id="151">
        <segment state="initial">
          <source>The example code demonstrates a simplistic mail app writing out a new file when new mail is received.</source>
          <target>The example code demonstrates a simplistic mail app writing out a new file when new mail is received.</target>
        </segment>
      </unit>
      <unit id="152">
        <segment state="initial">
          <source>Mail apps must sync email when the device is locked.</source>
          <target>Mail apps must sync email when the device is locked.</target>
        </segment>
      </unit>
      <unit id="153">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn705153)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>When this app receives new mail, it creates a new file using <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CreateProtectedAndOpenAsync</pc></pc>, retrieves an output stream, and writes the mail body to it.</source>
          <target>When this app receives new mail, it creates a new file using <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CreateProtectedAndOpenAsync</pc></pc>, retrieves an output stream, and writes the mail body to it.</target>
        </segment>
      </unit>
      <unit id="154">
        <segment state="initial">
          <source>Protect a folder whose purpose is to contain enterprise data</source>
          <target>Protect a folder whose purpose is to contain enterprise data</target>
        </segment>
      </unit>
      <unit id="155">
        <segment state="initial">
          <source>If you want every item inside a folder to be protected, then you can do that, too.</source>
          <target>If you want every item inside a folder to be protected, then you can do that, too.</target>
        </segment>
      </unit>
      <unit id="156">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn705157)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>You can use <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FileProtectionManager.ProtectAsync</pc></pc> to protect an empty folder.</source>
          <target>You can use <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FileProtectionManager.ProtectAsync</pc></pc> to protect an empty folder.</target>
        </segment>
      </unit>
      <unit id="157">
        <segment state="initial">
          <source>Then, any file or folder subsequently created inside the folder will also be protected.</source>
          <target>Then, any file or folder subsequently created inside the folder will also be protected.</target>
        </segment>
      </unit>
      <unit id="158">
        <segment state="initial">
          <source>You can protect an existing folder, or you can create a new folder to protect (the example below creates a new folder).</source>
          <target>You can protect an existing folder, or you can create a new folder to protect (the example below creates a new folder).</target>
        </segment>
      </unit>
      <unit id="159">
        <segment state="initial">
          <source>But, in either case, for protection to succeed, the folder must be empty at the time.</source>
          <target>But, in either case, for protection to succeed, the folder must be empty at the time.</target>
        </segment>
      </unit>
      <unit id="160">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn705150)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/dn279147)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source>If it isn't, then <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FileProtectionInfo.Status</pc></pc> will contain a value of <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">FileProtectionStatus.NotProtectable</pc></pc>.</source>
          <target>If it isn't, then <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FileProtectionInfo.Status</pc></pc> will contain a value of <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">FileProtectionStatus.NotProtectable</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="161">
        <segment state="initial">
          <source>Copy protection from one file to another</source>
          <target>Copy protection from one file to another</target>
        </segment>
      </unit>
      <unit id="162">
        <segment state="initial">
          <source>In this scenario, a file already exists that you know is protected to the appropriate enterprise identity.</source>
          <target>In this scenario, a file already exists that you know is protected to the appropriate enterprise identity.</target>
        </segment>
      </unit>
      <unit id="163">
        <segment state="initial">
          <source>You can replicate that protection onto another file very conveniently.</source>
          <target>You can replicate that protection onto another file very conveniently.</target>
        </segment>
      </unit>
      <unit id="164">
        <segment state="initial">
          <source>You don't even need to know what the identity is: you only need to know that it's the right one.</source>
          <target>You don't even need to know what the identity is: you only need to know that it's the right one.</target>
        </segment>
      </unit>
      <unit id="165">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227190)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>To make a simple copy of a protected file, you can call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StorageFile.CopyAsync</pc></pc>.</source>
          <target>To make a simple copy of a protected file, you can call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StorageFile.CopyAsync</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="166">
        <segment state="initial">
          <source>The resulting copy of the file will have the same protection as the original.</source>
          <target>The resulting copy of the file will have the same protection as the original.</target>
        </segment>
      </unit>
      <unit id="167">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn705157)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/dn705152)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source>To protect an existing unprotected file before writing enterprise data to it, an alternative to calling <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FileProtectionManager.ProtectAsync</pc></pc> (which we saw in an earlier scenario, and to which you need to pass a managed identity) is to call <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">FileProtectionManager.CopyProtectionAsync</pc></pc> as shown in the code example.</source>
          <target>To protect an existing unprotected file before writing enterprise data to it, an alternative to calling <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FileProtectionManager.ProtectAsync</pc></pc> (which we saw in an earlier scenario, and to which you need to pass a managed identity) is to call <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">FileProtectionManager.CopyProtectionAsync</pc></pc> as shown in the code example.</target>
        </segment>
      </unit>
      <unit id="168">
        <segment state="initial">
          <source>Handle being denied access to a file you protected</source>
          <target>Handle being denied access to a file you protected</target>
        </segment>
      </unit>
      <unit id="169">
        <segment state="initial">
          <source>In this scenario, your app attempts to access a file—which your app previously protected—and is denied access.</source>
          <target>In this scenario, your app attempts to access a file—which your app previously protected—and is denied access.</target>
        </segment>
      </unit>
      <unit id="170">
        <segment state="initial">
          <source>You'll need to check the status of the file to see what went wrong.</source>
          <target>You'll need to check the status of the file to see what went wrong.</target>
        </segment>
      </unit>
      <unit id="171">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn705154)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>In this code example, the app calls the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FileProtectionManager.GetProtectionInfoAsync</pc></pc> API to query the status and determine whether the reason is because access to the file has now been revoked as a result of remote management.</source>
          <target>In this code example, the app calls the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FileProtectionManager.GetProtectionInfoAsync</pc></pc> API to query the status and determine whether the reason is because access to the file has now been revoked as a result of remote management.</target>
        </segment>
      </unit>
      <unit id="172">
        <segment state="initial">
          <source>Enable UI-policy enforcement based on a file’s protected identity</source>
          <target>Enable UI-policy enforcement based on a file’s protected identity</target>
        </segment>
      </unit>
      <unit id="173">
        <segment state="initial">
          <source>When your app is about to display the contents of a protected file (such as a PDF) on its UI, it must enable UI-policy enforcement based on the identity the file is protected to.</source>
          <target>When your app is about to display the contents of a protected file (such as a PDF) on its UI, it must enable UI-policy enforcement based on the identity the file is protected to.</target>
        </segment>
      </unit>
      <unit id="174">
        <segment state="initial">
          <source>You should query the protection information of the file and enable the system's UI-policy enforcement from the retrieved identity.</source>
          <target>You should query the protection information of the file and enable the system's UI-policy enforcement from the retrieved identity.</target>
        </segment>
      </unit>
      <unit id="175">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  This article is for Windows 10 developers writing Universal Windows Platform (UWP) apps.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  This article is for Windows 10 developers writing Universal Windows Platform (UWP) apps.</target>
        </segment>
      </unit>
      <unit id="176">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
        </originalData>
        <segment state="initial">
          <source>If you’re developing for Windows 8.x or Windows Phone 8.x, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archived documentation</pc>.</source>
          <target>If you’re developing for Windows 8.x or Windows Phone 8.x, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archived documentation</pc>.</target>
        </segment>
      </unit>
      <unit id="177">
        <segment state="initial">
          <source>Related topics</source>
          <target>Related topics</target>
        </segment>
      </unit>
      <unit id="178">
        <segment state="initial">
          <source>enterprise data protection (EDP) sample</source>
          <target>enterprise data protection (EDP) sample</target>
        </segment>
      </unit>
      <unit id="179">
        <segment state="initial">
          <source>Windows.Security.EnterpriseData namespace</source>
          <target>Windows.Security.EnterpriseData namespace</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>