<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="zh-cn" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">windows-apps-src\devices-sensors\index.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">ae6ab11963ed06083e581ce42f39ce483d53e0d6</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-781aacf</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>Devices, sensors, and power</source>
          <target>Devices, sensors, and power</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>In order to provide a rich experience for your users, you may find it necessary to integrate external devices or sensors into your app.</source>
          <target>In order to provide a rich experience for your users, you may find it necessary to integrate external devices or sensors into your app.</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>Devices, sensors, and power</source>
          <target>Devices, sensors, and power</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source>Updated for UWP apps on Windows 10.</source>
          <target>Updated for UWP apps on Windows 10.</target>
        </segment>
      </unit>
      <unit id="105">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
        </originalData>
        <segment state="initial">
          <source>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc></source>
          <target>For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc></target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source>In order to provide a rich experience for your users, you may find it necessary to integrate external devices or sensors into your app.</source>
          <target>In order to provide a rich experience for your users, you may find it necessary to integrate external devices or sensors into your app.</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source>Here are some examples of features that you can add to your app using the technology described in this section.</source>
          <target>Here are some examples of features that you can add to your app using the technology described in this section.</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source>Providing an enhanced print experience</source>
          <target>Providing an enhanced print experience</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source>Integrating motion and orientation sensors into your game</source>
          <target>Integrating motion and orientation sensors into your game</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source>Connecting to a device directly or through a network protocol</source>
          <target>Connecting to a device directly or through a network protocol</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source>Topic</source>
          <target>Topic</target>
        </segment>
      </unit>
      <unit id="112">
        <segment state="initial">
          <source>Description</source>
          <target>Description</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source>Enable device capabilities</source>
          <target>Enable device capabilities</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source>This tutorial describes how to declare device capabilities in Microsoft Visual Studio.</source>
          <target>This tutorial describes how to declare device capabilities in Microsoft Visual Studio.</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source>This enables your app to use cameras, microphones, location sensors, and other devices.</source>
          <target>This enables your app to use cameras, microphones, location sensors, and other devices.</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source>Enable usermode access for Windows IoT</source>
          <target>Enable usermode access for Windows IoT</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source>This tutorial describes how to enable usermode access to GPIO, I2C, SPI, and UART on Windows 10 IoT Core.</source>
          <target>This tutorial describes how to enable usermode access to GPIO, I2C, SPI, and UART on Windows 10 IoT Core.</target>
        </segment>
      </unit>
      <unit id="118">
        <segment state="initial">
          <source>Enumerate devices</source>
          <target>Enumerate devices</target>
        </segment>
      </unit>
      <unit id="119">
        <segment state="initial">
          <source>The enumeration namespace enables you to find devices that are internally connected to the system, externally connected, or detectable over wireless or networking protocols.</source>
          <target>The enumeration namespace enables you to find devices that are internally connected to the system, externally connected, or detectable over wireless or networking protocols.</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source>Pair devices</source>
          <target>Pair devices</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source>Some devices need to be paired before they can be used.</source>
          <target>Some devices need to be paired before they can be used.</target>
        </segment>
      </unit>
      <unit id="122">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/BR225459)</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />Windows.Devices.Enumeration<ph dataRef="id4" id="ph2" /></pc> namespace supports three different ways to pair devices.</source>
          <target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />Windows.Devices.Enumeration<ph dataRef="id4" id="ph2" /></pc> namespace supports three different ways to pair devices.</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source>Out-of-band pairing</source>
          <target>Out-of-band pairing</target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source>This section describes how out-of-band pairing allows apps to connect to certain devices without requiring discovery.</source>
          <target>This section describes how out-of-band pairing allows apps to connect to certain devices without requiring discovery.</target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source>Sensors</source>
          <target>Sensors</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source>Sensors let your app know the relationship between a device and the physical world around it.</source>
          <target>Sensors let your app know the relationship between a device and the physical world around it.</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source>Sensors can tell your app the direction, orientation, and movement of the device.</source>
          <target>Sensors can tell your app the direction, orientation, and movement of the device.</target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source>Bluetooth</source>
          <target>Bluetooth</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source>This section contains articles on how to integrate Bluetooth into Universal Windows Platform (UWP) apps, including how to use RFCOMM, GATT, and Low Energy (LE) Advertisements.</source>
          <target>This section contains articles on how to integrate Bluetooth into Universal Windows Platform (UWP) apps, including how to use RFCOMM, GATT, and Low Energy (LE) Advertisements.</target>
        </segment>
      </unit>
      <unit id="130">
        <segment state="initial">
          <source>Printing and scanning</source>
          <target>Printing and scanning</target>
        </segment>
      </unit>
      <unit id="131">
        <segment state="initial">
          <source>This section describes how to print and scan from your Universal Windows app.</source>
          <target>This section describes how to print and scan from your Universal Windows app.</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source>3D printing</source>
          <target>3D printing</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source>This section describes how to utilize 3D printing functionality in your Universal Windows app.</source>
          <target>This section describes how to utilize 3D printing functionality in your Universal Windows app.</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source>Create an NFC Smart Card app</source>
          <target>Create an NFC Smart Card app</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source>Windows Phone 8.1 supported NFC card emulation apps using a SIM-based secure element, but that model required secure payment apps to be tightly coupled with mobile-network operators (MNO).</source>
          <target>Windows Phone 8.1 supported NFC card emulation apps using a SIM-based secure element, but that model required secure payment apps to be tightly coupled with mobile-network operators (MNO).</target>
        </segment>
      </unit>
      <unit id="136">
        <segment state="initial">
          <source>This limited the variety of possible payment solutions by other merchants or developers that are not coupled with MNOs.</source>
          <target>This limited the variety of possible payment solutions by other merchants or developers that are not coupled with MNOs.</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source>In Windows 10 Mobile, we have introduced a new card emulation technology called, Host Card Emulation (HCE).</source>
          <target>In Windows 10 Mobile, we have introduced a new card emulation technology called, Host Card Emulation (HCE).</target>
        </segment>
      </unit>
      <unit id="138">
        <segment state="initial">
          <source>HCE technology allows your app to directly communicate with an NFC card reader.</source>
          <target>HCE technology allows your app to directly communicate with an NFC card reader.</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source>This topic illustrates how Host Card Emulation (HCE) works on Windows 10 Mobile devices and how you can develop an HCE app so that your customers can access your services through their phone instead of a physical card without collaborating with an MNO.</source>
          <target>This topic illustrates how Host Card Emulation (HCE) works on Windows 10 Mobile devices and how you can develop an HCE app so that your customers can access your services through their phone instead of a physical card without collaborating with an MNO.</target>
        </segment>
      </unit>
      <unit id="140">
        <segment state="initial">
          <source>Get battery information</source>
          <target>Get battery information</target>
        </segment>
      </unit>
      <unit id="141">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/Dn895017)</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Learn how to get detailed battery information using APIs in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />Windows.Devices.Power<ph dataRef="id4" id="ph2" /></pc> namespace.</source>
          <target>Learn how to get detailed battery information using APIs in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />Windows.Devices.Power<ph dataRef="id4" id="ph2" /></pc> namespace.</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>