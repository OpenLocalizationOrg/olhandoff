<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci1\xaml-platform\xaml-intrinsic-data-types.md</xliffext:olfilepath>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2c36a6c3b75da75567b5bcd368812c98927b4a85</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-e58fd48" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Lists language-level support in XAML for the Windows Runtime for certain data types in the common language runtime (CLR) and in other programming languages such as C++.</source>
          <target state="new">Lists language-level support in XAML for the Windows Runtime for certain data types in the common language runtime (CLR) and in other programming languages such as C++.</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>XAML intrinsic data types</source>
          <target state="new">XAML intrinsic data types</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>XAML intrinsic data types</source>
          <target state="new">XAML intrinsic data types</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Updated for UWP apps on Windows 10.</source>
          <target state="new">Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept></source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept></target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>XAML for the Windows Runtime provides language-level support for several data types that are frequently used primitives in the common language runtime (CLR) and in other programming languages such as C++.</source>
          <target state="new">XAML for the Windows Runtime provides language-level support for several data types that are frequently used primitives in the common language runtime (CLR) and in other programming languages such as C++.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The most common place you'll see XAML intrinsic data type usages is when resources are defined in a XAML resource dictionary.</source>
          <target state="new">The most common place you'll see XAML intrinsic data type usages is when resources are defined in a XAML resource dictionary.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You might define constants there, for example numbers that you use for multiple values.</source>
          <target state="new">You might define constants there, for example numbers that you use for multiple values.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Or you might use a storyboarded animation that animates using a string or Boolean value, and you'll then need a XAML object element representing the string or Boolean to fill the keyframe of your <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ObjectAnimationUsingKeyFrames<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br210320)</ept> definition.</source>
          <target state="new">Or you might use a storyboarded animation that animates using a string or Boolean value, and you'll then need a XAML object element representing the string or Boolean to fill the keyframe of your <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ObjectAnimationUsingKeyFrames<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br210320)</ept> definition.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The Windows Runtime default XAML templates use both these techniques.</source>
          <target state="new">The Windows Runtime default XAML templates use both these techniques.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>XAML for the Windows Runtime provides language-level support for these types.</source>
          <target state="new">XAML for the Windows Runtime provides language-level support for these types.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>| XAML primitive | Description | <ph id="ph1">| </ph><bpt id="p1">**</bpt>x:Boolean<ept id="p1">**</ept>  | For CLR support, corresponds to <bpt id="p2">[</bpt><bpt id="p3">**</bpt>Boolean<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/xaml/system.boolean.aspx)</ept>.</source>
          <target state="new">| XAML primitive | Description | <ph id="ph1">| </ph><bpt id="p1">**</bpt>x:Boolean<ept id="p1">**</ept>  | For CLR support, corresponds to <bpt id="p2">[</bpt><bpt id="p3">**</bpt>Boolean<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/xaml/system.boolean.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>XAML parses values for <bpt id="p1">**</bpt>x:Boolean<ept id="p1">**</ept> as case insensitive.</source>
          <target state="new">XAML parses values for <bpt id="p1">**</bpt>x:Boolean<ept id="p1">**</ept> as case insensitive.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Note that "x:Bool" is not an accepted alternative.</source>
          <target state="new">Note that "x:Bool" is not an accepted alternative.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>| <ph id="ph1">| </ph><bpt id="p1">**</bpt>x:String<ept id="p1">**</ept>   | For CLR support, corresponds to <bpt id="p2">[</bpt><bpt id="p3">**</bpt>String<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/xaml/system.string.aspx)</ept>.</source>
          <target state="new">| <ph id="ph1">| </ph><bpt id="p1">**</bpt>x:String<ept id="p1">**</ept>   | For CLR support, corresponds to <bpt id="p2">[</bpt><bpt id="p3">**</bpt>String<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/xaml/system.string.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Encoding for the string defaults to the surrounding XML encoding.</source>
          <target state="new">Encoding for the string defaults to the surrounding XML encoding.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>| <ph id="ph1">| </ph><bpt id="p1">**</bpt>x:Double<ept id="p1">**</ept>   | For CLR support, corresponds to <bpt id="p2">[</bpt><bpt id="p3">**</bpt>Double<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/xaml/system.double.aspx)</ept>.</source>
          <target state="new">| <ph id="ph1">| </ph><bpt id="p1">**</bpt>x:Double<ept id="p1">**</ept>   | For CLR support, corresponds to <bpt id="p2">[</bpt><bpt id="p3">**</bpt>Double<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/xaml/system.double.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>In addition to the numeric values, text syntax for <bpt id="p1">**</bpt>x:Double<ept id="p1">**</ept> permits the token "NaN", which is how "Auto" for layout behavior can be stored as a resource value.</source>
          <target state="new">In addition to the numeric values, text syntax for <bpt id="p1">**</bpt>x:Double<ept id="p1">**</ept> permits the token "NaN", which is how "Auto" for layout behavior can be stored as a resource value.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The tokens are treated as case sensitive.</source>
          <target state="new">The tokens are treated as case sensitive.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>You can use scientific notation, for example "1+E06" for <ph id="ph1">`1,000,000`</ph>.</source>
          <target state="new">You can use scientific notation, for example "1+E06" for <ph id="ph1">`1,000,000`</ph>.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>| <ph id="ph1">| </ph><bpt id="p1">**</bpt>x:Int32<ept id="p1">**</ept>    | For CLR support, corresponds to <bpt id="p2">[</bpt><bpt id="p3">**</bpt>Int32<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/xaml/system.int32.aspx)</ept>.</source>
          <target state="new">| <ph id="ph1">| </ph><bpt id="p1">**</bpt>x:Int32<ept id="p1">**</ept>    | For CLR support, corresponds to <bpt id="p2">[</bpt><bpt id="p3">**</bpt>Int32<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/xaml/system.int32.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>x:Int32<ept id="p1">**</ept> is treated as signed, and you can include the minus ("-") symbol for a negative integer.</source>
          <target state="new"><bpt id="p1">**</bpt>x:Int32<ept id="p1">**</ept> is treated as signed, and you can include the minus ("-") symbol for a negative integer.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>In XAML, the absence of a sign in text syntax implies a positive signed value.</source>
          <target state="new">In XAML, the absence of a sign in text syntax implies a positive signed value.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>|</source>
          <target state="new">|</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>These XAML language primitives are generally the only cases in which you define an object element that uses the <bpt id="p1">**</bpt>x:<ept id="p1">**</ept> prefix in your XAML.</source>
          <target state="new">These XAML language primitives are generally the only cases in which you define an object element that uses the <bpt id="p1">**</bpt>x:<ept id="p1">**</ept> prefix in your XAML.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>All other XAML language features are typically used in attribute form, or as a markup extension.</source>
          <target state="new">All other XAML language features are typically used in attribute form, or as a markup extension.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  By convention, the language primitives for XAML and all other XAML language elements are shown with the "x:" prefix.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  By convention, the language primitives for XAML and all other XAML language elements are shown with the "x:" prefix.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This is how XAML language elements are typically used in real-world markup.</source>
          <target state="new">This is how XAML language elements are typically used in real-world markup.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This convention is followed in the documentation for XAML and also in the XAML specification.</source>
          <target state="new">This convention is followed in the documentation for XAML and also in the XAML specification.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Other XAML primitives</source>
          <target state="new">Other XAML primitives</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The XAML 2009 specification notes other XAML language-level primitives such as <bpt id="p1">**</bpt>x:Uri<ept id="p1">**</ept> and <bpt id="p2">**</bpt>x:Single<ept id="p2">**</ept>.</source>
          <target state="new">The XAML 2009 specification notes other XAML language-level primitives such as <bpt id="p1">**</bpt>x:Uri<ept id="p1">**</ept> and <bpt id="p2">**</bpt>x:Single<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Unless listed in the table in this topic, other XAML language primitives as defined by other XAML vocabularies or by the XAML 2009 specification are not currently supported in XAML for the Windows Runtime.</source>
          <target state="new">Unless listed in the table in this topic, other XAML language primitives as defined by other XAML vocabularies or by the XAML 2009 specification are not currently supported in XAML for the Windows Runtime.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  Dates and times (properties that use <bpt id="p2">[</bpt><bpt id="p3">**</bpt>DateTime<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br206576)</ept> or <bpt id="p4">[</bpt><bpt id="p5">**</bpt>DateTimeOffset<ept id="p5">**</ept><ept id="p4">](T:System.DateTimeOffset)</ept>, <bpt id="p6">[</bpt><bpt id="p7">**</bpt>TimeSpan<ept id="p7">**</ept><ept id="p6">](https://msdn.microsoft.com/library/windows/apps/br225996)</ept> or <bpt id="p8">[</bpt><bpt id="p9">**</bpt>System.TimeSpan<ept id="p9">**</ept><ept id="p8">](https://msdn.microsoft.com/library/windows/apps/xaml/system.timespan.aspx)</ept>) aren't settable with a XAML primitive.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  Dates and times (properties that use <bpt id="p2">[</bpt><bpt id="p3">**</bpt>DateTime<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br206576)</ept> or <bpt id="p4">[</bpt><bpt id="p5">**</bpt>DateTimeOffset<ept id="p5">**</ept><ept id="p4">](T:System.DateTimeOffset)</ept>, <bpt id="p6">[</bpt><bpt id="p7">**</bpt>TimeSpan<ept id="p7">**</ept><ept id="p6">](https://msdn.microsoft.com/library/windows/apps/br225996)</ept> or <bpt id="p8">[</bpt><bpt id="p9">**</bpt>System.TimeSpan<ept id="p9">**</ept><ept id="p8">](https://msdn.microsoft.com/library/windows/apps/xaml/system.timespan.aspx)</ept>) aren't settable with a XAML primitive.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>These properties generally aren't settable in XAML at all, because there's no default from-string conversion behavior in the Windows Runtime XAML parser for dates and times.</source>
          <target state="new">These properties generally aren't settable in XAML at all, because there's no default from-string conversion behavior in the Windows Runtime XAML parser for dates and times.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>For initialization values of any date and time properties, you'll have to use code-behind that runs when a page or element loads.</source>
          <target state="new">For initialization values of any date and time properties, you'll have to use code-behind that runs when a page or element loads.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Related topics</source>
          <target state="new">Related topics</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>XAML overview</source>
          <target state="new">XAML overview</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>XAML syntax guide</source>
          <target state="new">XAML syntax guide</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Storyboarded animations</source>
          <target state="new">Storyboarded animations</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>