<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci1\data-binding\data-binding-quickstart.md</xliffext:olfilepath>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2a843ebbc528590bb4b14be27aa97878f57fb645</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-e58fd48" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Data binding overview</source>
          <target state="new">Data binding overview</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This topic shows you how to bind a control (or other UI element) to a single item or bind an items control to a collection of items in a Universal Windows Platform (UWP) app.</source>
          <target state="new">This topic shows you how to bind a control (or other UI element) to a single item or bind an items control to a collection of items in a Universal Windows Platform (UWP) app.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Data binding overview</source>
          <target state="new">Data binding overview</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Updated for UWP apps on Windows 10.</source>
          <target state="new">Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept></source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept></target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This topic shows you how to bind a control (or other UI element) to a single item or bind an items control to a collection of items in a Universal Windows Platform (UWP) app.</source>
          <target state="new">This topic shows you how to bind a control (or other UI element) to a single item or bind an items control to a collection of items in a Universal Windows Platform (UWP) app.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>In addition, we show how to control the rendering of items, implement a details view based on a selection, and convert data for display.</source>
          <target state="new">In addition, we show how to control the rendering of items, implement a details view based on a selection, and convert data for display.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For more detailed info, see <bpt id="p1">[</bpt>Data binding in depth<ept id="p1">](data-binding-in-depth.md)</ept>.</source>
          <target state="new">For more detailed info, see <bpt id="p1">[</bpt>Data binding in depth<ept id="p1">](data-binding-in-depth.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="new">Prerequisites</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This topic assumes that you know how to create a basic UWP app.</source>
          <target state="new">This topic assumes that you know how to create a basic UWP app.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For instructions on creating your first UWP app, see <bpt id="p1">[</bpt>Create your first UWP app using C# or Visual Basic<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Hh974581)</ept>.</source>
          <target state="new">For instructions on creating your first UWP app, see <bpt id="p1">[</bpt>Create your first UWP app using C# or Visual Basic<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Hh974581)</ept>.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Create the project</source>
          <target state="new">Create the project</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Create a new <bpt id="p1">**</bpt>Blank Application (Windows Universal)<ept id="p1">**</ept> project.</source>
          <target state="new">Create a new <bpt id="p1">**</bpt>Blank Application (Windows Universal)<ept id="p1">**</ept> project.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Name it "Quickstart".</source>
          <target state="new">Name it "Quickstart".</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Binding to a single item</source>
          <target state="new">Binding to a single item</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Every binding consists of a binding target and a binding source.</source>
          <target state="new">Every binding consists of a binding target and a binding source.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Typically, the target is a property of a control or other UI element, and the source is a property of a class instance (a data model, or a view model).</source>
          <target state="new">Typically, the target is a property of a control or other UI element, and the source is a property of a class instance (a data model, or a view model).</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This example shows how to bind a control to a single item.</source>
          <target state="new">This example shows how to bind a control to a single item.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The target is the <bpt id="p1">**</bpt>Text<ept id="p1">**</ept> property of a <bpt id="p2">**</bpt>TextBlock<ept id="p2">**</ept>.</source>
          <target state="new">The target is the <bpt id="p1">**</bpt>Text<ept id="p1">**</ept> property of a <bpt id="p2">**</bpt>TextBlock<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The source is an instance of a simple class named <bpt id="p1">**</bpt>Recording<ept id="p1">**</ept> that represents an audio recording.</source>
          <target state="new">The source is an instance of a simple class named <bpt id="p1">**</bpt>Recording<ept id="p1">**</ept> that represents an audio recording.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Let's look at the class first.</source>
          <target state="new">Let's look at the class first.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Add a new class to your project, name it Recording.cs (if you're using C#), and add this code to it.</source>
          <target state="new">Add a new class to your project, name it Recording.cs (if you're using C#), and add this code to it.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Next, expose the binding source class from the class that represents your page of markup.</source>
          <target state="new">Next, expose the binding source class from the class that represents your page of markup.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>We do that by adding a property of type <bpt id="p1">**</bpt>RecordingViewModel<ept id="p1">**</ept> to <bpt id="p2">**</bpt>MainPage<ept id="p2">**</ept>.</source>
          <target state="new">We do that by adding a property of type <bpt id="p1">**</bpt>RecordingViewModel<ept id="p1">**</ept> to <bpt id="p2">**</bpt>MainPage<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The last piece is to bind a <bpt id="p1">**</bpt>TextBlock<ept id="p1">**</ept> to the <bpt id="p2">**</bpt>ViewModel.DefaultRecording.OneLiner<ept id="p2">**</ept> property.</source>
          <target state="new">The last piece is to bind a <bpt id="p1">**</bpt>TextBlock<ept id="p1">**</ept> to the <bpt id="p2">**</bpt>ViewModel.DefaultRecording.OneLiner<ept id="p2">**</ept> property.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Here's the result.</source>
          <target state="new">Here's the result.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Binding a textblock</source>
          <target state="new">Binding a textblock</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Binding to a collection of items</source>
          <target state="new">Binding to a collection of items</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>A common scenario is to bind to a collection of business objects.</source>
          <target state="new">A common scenario is to bind to a collection of business objects.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>In C# and Visual Basic, the generic <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ObservableCollection<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p2">**</ept><ept id="p1">](T:System.Collections.ObjectModel.ObservableCollection%601)</ept> class is a good collection choice for data binding, because it implements the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>INotifyPropertyChanged<ept id="p4">**</ept><ept id="p3">](T:System.ComponentModel.INotifyPropertyChanged)</ept> and <bpt id="p5">[</bpt><bpt id="p6">**</bpt>INotifyCollectionChanged<ept id="p6">**</ept><ept id="p5">](T:System.Collections.Specialized.INotifyCollectionChanged)</ept> interfaces.</source>
          <target state="new">In C# and Visual Basic, the generic <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ObservableCollection<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p2">**</ept><ept id="p1">](T:System.Collections.ObjectModel.ObservableCollection%601)</ept> class is a good collection choice for data binding, because it implements the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>INotifyPropertyChanged<ept id="p4">**</ept><ept id="p3">](T:System.ComponentModel.INotifyPropertyChanged)</ept> and <bpt id="p5">[</bpt><bpt id="p6">**</bpt>INotifyCollectionChanged<ept id="p6">**</ept><ept id="p5">](T:System.Collections.Specialized.INotifyCollectionChanged)</ept> interfaces.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>These interfaces provide change notification to bindings when items are added or removed or a property of the list itself changes.</source>
          <target state="new">These interfaces provide change notification to bindings when items are added or removed or a property of the list itself changes.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>If you want your bound controls to update with changes to properties of objects in the collection, the business object should also implement <bpt id="p1">**</bpt>INotifyPropertyChanged<ept id="p1">**</ept>.</source>
          <target state="new">If you want your bound controls to update with changes to properties of objects in the collection, the business object should also implement <bpt id="p1">**</bpt>INotifyPropertyChanged<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>For more info, see <bpt id="p1">[</bpt>Data binding in depth<ept id="p1">](data-binding-in-depth.md)</ept>.</source>
          <target state="new">For more info, see <bpt id="p1">[</bpt>Data binding in depth<ept id="p1">](data-binding-in-depth.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This next example binds a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ListView<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR242878)</ept> to a collection of <ph id="ph1">`Recording`</ph> objects.</source>
          <target state="new">This next example binds a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ListView<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR242878)</ept> to a collection of <ph id="ph1">`Recording`</ph> objects.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Let's start by adding the collection to our view model.</source>
          <target state="new">Let's start by adding the collection to our view model.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Just add these new members to the <bpt id="p1">**</bpt>RecordingViewModel<ept id="p1">**</ept> class.</source>
          <target state="new">Just add these new members to the <bpt id="p1">**</bpt>RecordingViewModel<ept id="p1">**</ept> class.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>We haven't yet provided a data template for the <bpt id="p1">**</bpt>Recording<ept id="p1">**</ept> class, so the best the UI framework can do is to call <bpt id="p2">[</bpt><bpt id="p3">**</bpt>ToString<ept id="p3">**</ept><ept id="p2">](M:System.Object.ToString)</ept> for each item in the <bpt id="p4">[</bpt><bpt id="p5">**</bpt>ListView<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/BR242878)</ept>.</source>
          <target state="new">We haven't yet provided a data template for the <bpt id="p1">**</bpt>Recording<ept id="p1">**</ept> class, so the best the UI framework can do is to call <bpt id="p2">[</bpt><bpt id="p3">**</bpt>ToString<ept id="p3">**</ept><ept id="p2">](M:System.Object.ToString)</ept> for each item in the <bpt id="p4">[</bpt><bpt id="p5">**</bpt>ListView<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/BR242878)</ept>.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The default implementation of <bpt id="p1">**</bpt>ToString<ept id="p1">**</ept> is to return the type name.</source>
          <target state="new">The default implementation of <bpt id="p1">**</bpt>ToString<ept id="p1">**</ept> is to return the type name.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Binding a list view</source>
          <target state="new">Binding a list view</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>To remedy this we can either override <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ToString<ept id="p2">**</ept><ept id="p1">](M:System.Object.ToString)</ept> to return the value of <bpt id="p3">**</bpt>OneLineSummary<ept id="p3">**</ept>, or we can provide a data template.</source>
          <target state="new">To remedy this we can either override <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ToString<ept id="p2">**</ept><ept id="p1">](M:System.Object.ToString)</ept> to return the value of <bpt id="p3">**</bpt>OneLineSummary<ept id="p3">**</ept>, or we can provide a data template.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The data template option is more common and arguably more flexible.</source>
          <target state="new">The data template option is more common and arguably more flexible.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>You specify a data template by using the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ContentTemplate<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209369)</ept> property of a content control or the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>ItemTemplate<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR242830)</ept> property of an items control.</source>
          <target state="new">You specify a data template by using the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ContentTemplate<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209369)</ept> property of a content control or the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>ItemTemplate<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR242830)</ept> property of an items control.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Here are two ways we could design a data template for <bpt id="p1">**</bpt>Recording<ept id="p1">**</ept> together with an illustration of the result.</source>
          <target state="new">Here are two ways we could design a data template for <bpt id="p1">**</bpt>Recording<ept id="p1">**</ept> together with an illustration of the result.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Binding a list view</source>
          <target state="new">Binding a list view</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>For more information about XAML syntax, see <bpt id="p1">[</bpt>Create a UI with XAML<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Mt228349)</ept>.</source>
          <target state="new">For more information about XAML syntax, see <bpt id="p1">[</bpt>Create a UI with XAML<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Mt228349)</ept>.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>For more information about control layout, see <bpt id="p1">[</bpt>Define layouts with XAML<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Mt228350)</ept>.</source>
          <target state="new">For more information about control layout, see <bpt id="p1">[</bpt>Define layouts with XAML<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Mt228350)</ept>.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Adding a details view</source>
          <target state="new">Adding a details view</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>You can choose to display all the details of <bpt id="p1">**</bpt>Recording<ept id="p1">**</ept> objects in <bpt id="p2">[</bpt><bpt id="p3">**</bpt>ListView<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/BR242878)</ept> items.</source>
          <target state="new">You can choose to display all the details of <bpt id="p1">**</bpt>Recording<ept id="p1">**</ept> objects in <bpt id="p2">[</bpt><bpt id="p3">**</bpt>ListView<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/BR242878)</ept> items.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>But that takes up a lot of space.</source>
          <target state="new">But that takes up a lot of space.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Instead, you can show just enough data in the item to identify it and then, when the user makes a selection, you can display all the details of the selected item in a separate piece of UI known as the details view.</source>
          <target state="new">Instead, you can show just enough data in the item to identify it and then, when the user makes a selection, you can display all the details of the selected item in a separate piece of UI known as the details view.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>This arrangement is also known as a master/details view, or a list/details view.</source>
          <target state="new">This arrangement is also known as a master/details view, or a list/details view.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>There are two ways to go about this.</source>
          <target state="new">There are two ways to go about this.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>You can bind the details view to the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SelectedItem<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209770)</ept> property of the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>ListView<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR242878)</ept>.</source>
          <target state="new">You can bind the details view to the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SelectedItem<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209770)</ept> property of the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>ListView<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR242878)</ept>.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Or you can use a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CollectionViewSource<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209833)</ept>: bind both the <bpt id="p3">**</bpt>ListView<ept id="p3">**</ept> and the details view to the <bpt id="p4">**</bpt>CollectionViewSource<ept id="p4">**</ept> (which will take care of the currently-selected item for you).</source>
          <target state="new">Or you can use a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CollectionViewSource<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209833)</ept>: bind both the <bpt id="p3">**</bpt>ListView<ept id="p3">**</ept> and the details view to the <bpt id="p4">**</bpt>CollectionViewSource<ept id="p4">**</ept> (which will take care of the currently-selected item for you).</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Both techniques are shown below, and they both give the same results shown in the illustration.</source>
          <target state="new">Both techniques are shown below, and they both give the same results shown in the illustration.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  So far in this topic we've only used the <bpt id="p2">[</bpt>{x:Bind} markup extension<ept id="p2">](https://msdn.microsoft.com/library/windows/apps/Mt204783)</ept>, but both of the techniques we'll show below require the more flexible (but less performant) <bpt id="p3">[</bpt>{Binding} markup extension<ept id="p3">](https://msdn.microsoft.com/library/windows/apps/Mt204782)</ept>.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  So far in this topic we've only used the <bpt id="p2">[</bpt>{x:Bind} markup extension<ept id="p2">](https://msdn.microsoft.com/library/windows/apps/Mt204783)</ept>, but both of the techniques we'll show below require the more flexible (but less performant) <bpt id="p3">[</bpt>{Binding} markup extension<ept id="p3">](https://msdn.microsoft.com/library/windows/apps/Mt204782)</ept>.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>First, here's the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SelectedItem<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209770)</ept> technique.</source>
          <target state="new">First, here's the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SelectedItem<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209770)</ept> technique.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>If you're using Visual C++ component extensions (C++/CX) then, because we'll be using <bpt id="p1">[</bpt>{Binding}<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Mt204782)</ept>, you'll need to add the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>BindableAttribute<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/Hh701872)</ept> attribute to the <bpt id="p4">**</bpt>Recording<ept id="p4">**</ept> class.</source>
          <target state="new">If you're using Visual C++ component extensions (C++/CX) then, because we'll be using <bpt id="p1">[</bpt>{Binding}<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Mt204782)</ept>, you'll need to add the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>BindableAttribute<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/Hh701872)</ept> attribute to the <bpt id="p4">**</bpt>Recording<ept id="p4">**</ept> class.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The only other change necessary is to the markup.</source>
          <target state="new">The only other change necessary is to the markup.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>For the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CollectionViewSource<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209833)</ept> technique, first add a <bpt id="p3">**</bpt>CollectionViewSource<ept id="p3">**</ept> as a page resource.</source>
          <target state="new">For the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CollectionViewSource<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209833)</ept> technique, first add a <bpt id="p3">**</bpt>CollectionViewSource<ept id="p3">**</ept> as a page resource.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>And then adjust the bindings on the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ListView<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR242878)</ept> (which no longer needs to be named) and on the details view to use the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>CollectionViewSource<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR209833)</ept>.</source>
          <target state="new">And then adjust the bindings on the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ListView<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR242878)</ept> (which no longer needs to be named) and on the details view to use the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>CollectionViewSource<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR209833)</ept>.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Note that by binding the details view directly to the <bpt id="p1">**</bpt>CollectionViewSource<ept id="p1">**</ept>, you're implying that you want to bind to the current item in bindings where the path cannot be found on the collection itself.</source>
          <target state="new">Note that by binding the details view directly to the <bpt id="p1">**</bpt>CollectionViewSource<ept id="p1">**</ept>, you're implying that you want to bind to the current item in bindings where the path cannot be found on the collection itself.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>There's no need to specify the <bpt id="p1">**</bpt>CurrentItem<ept id="p1">**</ept> property as the path for the binding, although you can do that if there's any ambiguity).</source>
          <target state="new">There's no need to specify the <bpt id="p1">**</bpt>CurrentItem<ept id="p1">**</ept> property as the path for the binding, although you can do that if there's any ambiguity).</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>And here's the identical result in each case.</source>
          <target state="new">And here's the identical result in each case.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Binding a list view</source>
          <target state="new">Binding a list view</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Formatting or converting data values for display</source>
          <target state="new">Formatting or converting data values for display</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>There is one small issue with the rendering above.</source>
          <target state="new">There is one small issue with the rendering above.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>ReleaseDateTime<ept id="p1">**</ept> property is not just a date, it's a <bpt id="p2">[</bpt><bpt id="p3">**</bpt>DateTime<ept id="p3">**</ept><ept id="p2">](T:System.DateTime)</ept>, so it's being displayed with more precision than we need.</source>
          <target state="new">The <bpt id="p1">**</bpt>ReleaseDateTime<ept id="p1">**</ept> property is not just a date, it's a <bpt id="p2">[</bpt><bpt id="p3">**</bpt>DateTime<ept id="p3">**</ept><ept id="p2">](T:System.DateTime)</ept>, so it's being displayed with more precision than we need.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>One solution is to add a string property to the <bpt id="p1">**</bpt>Recording<ept id="p1">**</ept> class that returns <ph id="ph1">`this.ReleaseDateTime.ToString("d")`</ph>.</source>
          <target state="new">One solution is to add a string property to the <bpt id="p1">**</bpt>Recording<ept id="p1">**</ept> class that returns <ph id="ph1">`this.ReleaseDateTime.ToString("d")`</ph>.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Naming that property <bpt id="p1">**</bpt>ReleaseDate<ept id="p1">**</ept> would indicate that it returns a date, not a date-and-time.</source>
          <target state="new">Naming that property <bpt id="p1">**</bpt>ReleaseDate<ept id="p1">**</ept> would indicate that it returns a date, not a date-and-time.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Naming it <bpt id="p1">**</bpt>ReleaseDateAsString<ept id="p1">**</ept> would further indicate that it returns a string.</source>
          <target state="new">Naming it <bpt id="p1">**</bpt>ReleaseDateAsString<ept id="p1">**</ept> would further indicate that it returns a string.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>A more flexible solution is to use something known as a value converter.</source>
          <target state="new">A more flexible solution is to use something known as a value converter.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Here's an example of how to author your own value converter.</source>
          <target state="new">Here's an example of how to author your own value converter.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Add this code to your Recording.cs source code file.</source>
          <target state="new">Add this code to your Recording.cs source code file.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Now we can add an instance of <bpt id="p1">**</bpt>StringFormatter<ept id="p1">**</ept> as a page resource and use it in our binding.</source>
          <target state="new">Now we can add an instance of <bpt id="p1">**</bpt>StringFormatter<ept id="p1">**</ept> as a page resource and use it in our binding.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>We pass the format string into the converter from markup for ultimate formatting flexibility.</source>
          <target state="new">We pass the format string into the converter from markup for ultimate formatting flexibility.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Here's the result.</source>
          <target state="new">Here's the result.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>displaying a date with custom formatting</source>
          <target state="new">displaying a date with custom formatting</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>