<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci2\gaming\create-depth-buffer-resource--view--and-sampler-state.md</xliffext:olfilepath>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a9c19fbd385974858cb35b456f3c6a320d30bafc</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-e58fd48" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Create depth buffer device resources</source>
          <target state="new">Create depth buffer device resources</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to create the Direct3D device resources necessary to support depth testing for shadow volumes.</source>
          <target state="new">Learn how to create the Direct3D device resources necessary to support depth testing for shadow volumes.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Create depth buffer device resources</source>
          <target state="new">Create depth buffer device resources</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Updated for UWP apps on Windows 10.</source>
          <target state="new">Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept></source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept></target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Learn how to create the Direct3D device resources necessary to support depth testing for shadow volumes.</source>
          <target state="new">Learn how to create the Direct3D device resources necessary to support depth testing for shadow volumes.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Part 1 of <bpt id="p1">[</bpt>Walkthrough: Implement shadow volumes using depth buffers in Direct3D 11<ept id="p1">](implementing-depth-buffers-for-shadow-mapping.md)</ept>.</source>
          <target state="new">Part 1 of <bpt id="p1">[</bpt>Walkthrough: Implement shadow volumes using depth buffers in Direct3D 11<ept id="p1">](implementing-depth-buffers-for-shadow-mapping.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Resources you'll need</source>
          <target state="new">Resources you'll need</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Rendering a depth map for shadow volumes requires the following Direct3D device-dependent resources:</source>
          <target state="new">Rendering a depth map for shadow volumes requires the following Direct3D device-dependent resources:</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>A resource (buffer) for the depth map</source>
          <target state="new">A resource (buffer) for the depth map</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A depth stencil view and shader resource view for the resource</source>
          <target state="new">A depth stencil view and shader resource view for the resource</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A comparison sampler state object</source>
          <target state="new">A comparison sampler state object</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Constant buffers for light POV matrices</source>
          <target state="new">Constant buffers for light POV matrices</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A viewport for rendering the shadow map (typically a square viewport)</source>
          <target state="new">A viewport for rendering the shadow map (typically a square viewport)</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A rendering state object to enable front face culling</source>
          <target state="new">A rendering state object to enable front face culling</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You will also need a rendering state object to switch back to back face culling, if you don't already use one.</source>
          <target state="new">You will also need a rendering state object to switch back to back face culling, if you don't already use one.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Note that creation of these resources needs to be included in a device-dependent resource creation routine, that way your renderer can recreate them if (for example) a new device driver is installed, or the user moves your app to a monitor attached to a different graphics adapter.</source>
          <target state="new">Note that creation of these resources needs to be included in a device-dependent resource creation routine, that way your renderer can recreate them if (for example) a new device driver is installed, or the user moves your app to a monitor attached to a different graphics adapter.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Check feature support</source>
          <target state="new">Check feature support</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Before creating the depth map, call the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CheckFeatureSupport<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ff476497)</ept> method on the Direct3D device, request <bpt id="p3">**</bpt>D3D11<ph id="ph1">\_</ph>FEATURE<ph id="ph2">\_</ph>D3D9<ph id="ph3">\_</ph>SHADOW<ph id="ph4">\_</ph>SUPPORT<ept id="p3">**</ept>, and provide a <bpt id="p4">[</bpt><bpt id="p5">**</bpt>D3D11<ph id="ph5">\_</ph>FEATURE<ph id="ph6">\_</ph>DATA<ph id="ph7">\_</ph>D3D9<ph id="ph8">\_</ph>SHADOW<ph id="ph9">\_</ph>SUPPORT<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/desktop/jj247569)</ept> structure.</source>
          <target state="new">Before creating the depth map, call the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CheckFeatureSupport<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ff476497)</ept> method on the Direct3D device, request <bpt id="p3">**</bpt>D3D11<ph id="ph1">\_</ph>FEATURE<ph id="ph2">\_</ph>D3D9<ph id="ph3">\_</ph>SHADOW<ph id="ph4">\_</ph>SUPPORT<ept id="p3">**</ept>, and provide a <bpt id="p4">[</bpt><bpt id="p5">**</bpt>D3D11<ph id="ph5">\_</ph>FEATURE<ph id="ph6">\_</ph>DATA<ph id="ph7">\_</ph>D3D9<ph id="ph8">\_</ph>SHADOW<ph id="ph9">\_</ph>SUPPORT<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/desktop/jj247569)</ept> structure.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If this feature is not supported, do not try to load shaders compiled for shader model 4 level 9<ph id="ph1">\_</ph>x that call sample comparison functions.</source>
          <target state="new">If this feature is not supported, do not try to load shaders compiled for shader model 4 level 9<ph id="ph1">\_</ph>x that call sample comparison functions.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>In many cases, lack of support for this feature means that the GPU is a legacy device with a driver that isn't updated to support at least WDDM 1.2.</source>
          <target state="new">In many cases, lack of support for this feature means that the GPU is a legacy device with a driver that isn't updated to support at least WDDM 1.2.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If the device supports at least feature level 10<ph id="ph1">\_</ph>0 then you can load a sample comparison shader compiled for shader model 4<ph id="ph2">\_</ph>0 instead.</source>
          <target state="new">If the device supports at least feature level 10<ph id="ph1">\_</ph>0 then you can load a sample comparison shader compiled for shader model 4<ph id="ph2">\_</ph>0 instead.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Create depth buffer</source>
          <target state="new">Create depth buffer</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>First, try creating the depth map with a higher-precision depth format.</source>
          <target state="new">First, try creating the depth map with a higher-precision depth format.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Set up matching shader resource view properties first.</source>
          <target state="new">Set up matching shader resource view properties first.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>If the resource creation fails, for example due to low device memory or a format that the hardware doesn't support, try a lower-precision format and change properties to match.</source>
          <target state="new">If the resource creation fails, for example due to low device memory or a format that the hardware doesn't support, try a lower-precision format and change properties to match.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This step is optional if you only need a low-precision depth format, for example when rendering on medium-resolution Direct3D feature level 9<ph id="ph1">\_</ph>1 devices.</source>
          <target state="new">This step is optional if you only need a low-precision depth format, for example when rendering on medium-resolution Direct3D feature level 9<ph id="ph1">\_</ph>1 devices.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Then create the resource views.</source>
          <target state="new">Then create the resource views.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Set the mip slice to zero on the depth stencil view and set mip levels to 1 on the shader resource view.</source>
          <target state="new">Set the mip slice to zero on the depth stencil view and set mip levels to 1 on the shader resource view.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Both have a texture dimension of TEXTURE2D, and both need to use a matching <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DXGI<ph id="ph1">\_</ph>FORMAT<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/bb173059)</ept>.</source>
          <target state="new">Both have a texture dimension of TEXTURE2D, and both need to use a matching <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DXGI<ph id="ph1">\_</ph>FORMAT<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/bb173059)</ept>.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Create comparison state</source>
          <target state="new">Create comparison state</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Now create the comparison sampler state object.</source>
          <target state="new">Now create the comparison sampler state object.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Feature level 9<ph id="ph1">\_</ph>1 only supports D3D11<ph id="ph2">\_</ph>COMPARISON<ph id="ph3">\_</ph>LESS<ph id="ph4">\_</ph>EQUAL.</source>
          <target state="new">Feature level 9<ph id="ph1">\_</ph>1 only supports D3D11<ph id="ph2">\_</ph>COMPARISON<ph id="ph3">\_</ph>LESS<ph id="ph4">\_</ph>EQUAL.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Filtering choices are explained more in <bpt id="p1">[</bpt>Supporting shadow maps on a range of hardware<ept id="p1">](target-a-range-of-hardware.md)</ept> - or you can just pick point filtering for faster shadow maps.</source>
          <target state="new">Filtering choices are explained more in <bpt id="p1">[</bpt>Supporting shadow maps on a range of hardware<ept id="p1">](target-a-range-of-hardware.md)</ept> - or you can just pick point filtering for faster shadow maps.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Note that you can specify the D3D11<ph id="ph1">\_</ph>TEXTURE<ph id="ph2">\_</ph>ADDRESS<ph id="ph3">\_</ph>BORDER address mode and it will work on feature level 9<ph id="ph4">\_</ph>1 devices.</source>
          <target state="new">Note that you can specify the D3D11<ph id="ph1">\_</ph>TEXTURE<ph id="ph2">\_</ph>ADDRESS<ph id="ph3">\_</ph>BORDER address mode and it will work on feature level 9<ph id="ph4">\_</ph>1 devices.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>This applies to pixel shaders that don't test whether the pixel is in the light's view frustum before doing the depth test.</source>
          <target state="new">This applies to pixel shaders that don't test whether the pixel is in the light's view frustum before doing the depth test.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>By specifying 0 or 1 for each border, you can control whether pixels outside the light's view frustum pass or fail the depth test, and therefore whether they are lit or in shadow.</source>
          <target state="new">By specifying 0 or 1 for each border, you can control whether pixels outside the light's view frustum pass or fail the depth test, and therefore whether they are lit or in shadow.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>On feature level 9<ph id="ph1">\_</ph>1, the following required values must be set: <bpt id="p1">**</bpt>MinLOD<ept id="p1">**</ept> is set to zero, <bpt id="p2">**</bpt>MaxLOD<ept id="p2">**</ept> is set to <bpt id="p3">**</bpt>D3D11<ph id="ph2">\_</ph>FLOAT32<ph id="ph3">\_</ph>MAX<ept id="p3">**</ept>, and <bpt id="p4">**</bpt>MaxAnisotropy<ept id="p4">**</ept> is set to zero.</source>
          <target state="new">On feature level 9<ph id="ph1">\_</ph>1, the following required values must be set: <bpt id="p1">**</bpt>MinLOD<ept id="p1">**</ept> is set to zero, <bpt id="p2">**</bpt>MaxLOD<ept id="p2">**</ept> is set to <bpt id="p3">**</bpt>D3D11<ph id="ph2">\_</ph>FLOAT32<ph id="ph3">\_</ph>MAX<ept id="p3">**</ept>, and <bpt id="p4">**</bpt>MaxAnisotropy<ept id="p4">**</ept> is set to zero.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Create render states</source>
          <target state="new">Create render states</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Now create a render state you can use to enable front face culling.</source>
          <target state="new">Now create a render state you can use to enable front face culling.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Note that feature level 9<ph id="ph1">\_</ph>1 devices require <bpt id="p1">**</bpt>DepthClipEnable<ept id="p1">**</ept> set to <bpt id="p2">**</bpt>true<ept id="p2">**</ept>.</source>
          <target state="new">Note that feature level 9<ph id="ph1">\_</ph>1 devices require <bpt id="p1">**</bpt>DepthClipEnable<ept id="p1">**</ept> set to <bpt id="p2">**</bpt>true<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Create a render state you can use to enable back face culling.</source>
          <target state="new">Create a render state you can use to enable back face culling.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>If your rendering code already turns on back face culling, then you can skip this step.</source>
          <target state="new">If your rendering code already turns on back face culling, then you can skip this step.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Create constant buffers</source>
          <target state="new">Create constant buffers</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Don't forget to create a constant buffer for rendering from the light's point of view.</source>
          <target state="new">Don't forget to create a constant buffer for rendering from the light's point of view.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>You can also use this constant buffer to specify the light position to the shader.</source>
          <target state="new">You can also use this constant buffer to specify the light position to the shader.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Use a perspective matrix for point lights, and use an orthogonal matrix for directional lights (such as sunlight).</source>
          <target state="new">Use a perspective matrix for point lights, and use an orthogonal matrix for directional lights (such as sunlight).</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Fill the constant buffer data.</source>
          <target state="new">Fill the constant buffer data.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Update the constant buffers once during initialization, and again if the light values have changed since the previous frame.</source>
          <target state="new">Update the constant buffers once during initialization, and again if the light values have changed since the previous frame.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Create a viewport</source>
          <target state="new">Create a viewport</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>You need a separate viewport to render to the shadow map.</source>
          <target state="new">You need a separate viewport to render to the shadow map.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The viewport isn't a device-based resource; you're free to create it elsewhere in your code.</source>
          <target state="new">The viewport isn't a device-based resource; you're free to create it elsewhere in your code.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Creating the viewport along with the shadow map can help make it more convenient to keep the dimension of the viewport congruent with the shadow map dimension.</source>
          <target state="new">Creating the viewport along with the shadow map can help make it more convenient to keep the dimension of the viewport congruent with the shadow map dimension.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>In the next part of this walkthrough, learn how to create the shadow map by <bpt id="p1">[</bpt>rendering to the depth buffer<ept id="p1">](render-the-shadow-map-to-the-depth-buffer.md)</ept>.</source>
          <target state="new">In the next part of this walkthrough, learn how to create the shadow map by <bpt id="p1">[</bpt>rendering to the depth buffer<ept id="p1">](render-the-shadow-map-to-the-depth-buffer.md)</ept>.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>