<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-US" target-language="ja-jp">
    <body>
      <group id="main" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Execute Python machine learning scripts | Microsoft Azure</source>
          <target state="new">Execute Python machine learning scripts | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Outlines design principles underlying support for Python scripts in Azure Machine Learning and basic usage scenarios, capabilities, and limitations.</source>
          <target state="new">Outlines design principles underlying support for Python scripts in Azure Machine Learning and basic usage scenarios, capabilities, and limitations.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Execute Python machine learning scripts in Azure Machine Learning Studio</source>
          <target state="new">Execute Python machine learning scripts in Azure Machine Learning Studio</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This topic describes the design principles underlying the current support for Python scripts in Azure Machine Learning.</source>
          <target state="new">This topic describes the design principles underlying the current support for Python scripts in Azure Machine Learning.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The main capabilities are also outlined, including support for importing existing code, exporting visualizations and, finally, some of the limitations and ongoing work are discussed.</source>
          <target state="new">The main capabilities are also outlined, including support for importing existing code, exporting visualizations and, finally, some of the limitations and ongoing work are discussed.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Python<ept id="p1">](https://www.python.org/)</ept><ph id="ph2" /> is an indispensable tool in the tool chest of many data scientists.</source>
          <target state="new"><bpt id="p1">[</bpt>Python<ept id="p1">](https://www.python.org/)</ept><ph id="ph2" /> is an indispensable tool in the tool chest of many data scientists.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>It has an elegant and concise syntax, cross-platform support, a vast collection of powerful libraries, and mature development tools.</source>
          <target state="new">It has an elegant and concise syntax, cross-platform support, a vast collection of powerful libraries, and mature development tools.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Python is being used in all phases of the workflow typically used in machine learning modeling, starting from data ingest and processing, to feature construction to training, validation and deployment of models.</source>
          <target state="new">Python is being used in all phases of the workflow typically used in machine learning modeling, starting from data ingest and processing, to feature construction to training, validation and deployment of models.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Azure Machine Learning Studio supports embedding Python scripts into various parts of a machine learning experiment and also seamlessly publishing them as scalable, operationalized web services on Microsoft Azure.</source>
          <target state="new">Azure Machine Learning Studio supports embedding Python scripts into various parts of a machine learning experiment and also seamlessly publishing them as scalable, operationalized web services on Microsoft Azure.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Design principles of Python scripts in Machine Learning</source>
          <target state="new">Design principles of Python scripts in Machine Learning</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The primary interface to Python in Azure Machine Learning Studio is via the [Execute Python Script][execute-python-script] module shown in Figure 1.</source>
          <target state="new">The primary interface to Python in Azure Machine Learning Studio is via the [Execute Python Script][execute-python-script] module shown in Figure 1.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><ph id="ph4">![</ph>image1<ph id="ph5">](./media/machine-learning-execute-python-scripts/execute-machine-learning-python-scripts-module.png)</ph></source>
          <target state="new"><ph id="ph4">![</ph>image1<ph id="ph5">](./media/machine-learning-execute-python-scripts/execute-machine-learning-python-scripts-module.png)</ph></target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><ph id="ph6">![</ph>image2<ph id="ph7">](./media/machine-learning-execute-python-scripts/embedded-machine-learning-python-script.png)</ph></source>
          <target state="new"><ph id="ph6">![</ph>image2<ph id="ph7">](./media/machine-learning-execute-python-scripts/embedded-machine-learning-python-script.png)</ph></target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Figure 1.</source>
          <target state="new">Figure 1.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The <bpt id="p2">**</bpt>Execute Python Script<ept id="p2">**</ept><ph id="ph8" /> module.</source>
          <target state="new">The <bpt id="p2">**</bpt>Execute Python Script<ept id="p2">**</ept><ph id="ph8" /> module.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The [Execute Python Script][execute-python-script] module accepts up to three inputs and produces up to two outputs (discussed below), just like its R analogue, the [Execute R Script][execute-r-script] module.</source>
          <target state="new">The [Execute Python Script][execute-python-script] module accepts up to three inputs and produces up to two outputs (discussed below), just like its R analogue, the [Execute R Script][execute-r-script] module.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The Python code to be executed is entered into the parameter box as a specially-named entry-point function called <ph id="ph9">`azureml_main`</ph>.</source>
          <target state="new">The Python code to be executed is entered into the parameter box as a specially-named entry-point function called <ph id="ph9">`azureml_main`</ph>.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Here are the key design principles used to implement this module:</source>
          <target state="new">Here are the key design principles used to implement this module:</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p3">*</bpt>Must be idiomatic for Python users.<ept id="p3">*</ept><ph id="ph10" /> Most Python users factor their code as functions inside modules, so putting a lot of executable statements in a top-level module is relatively rare.</source>
          <target state="new"><bpt id="p3">*</bpt>Must be idiomatic for Python users.<ept id="p3">*</ept><ph id="ph10" /> Most Python users factor their code as functions inside modules, so putting a lot of executable statements in a top-level module is relatively rare.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>As a result, the script box also takes a specially named Python function as opposed to just a sequence of statements.</source>
          <target state="new">As a result, the script box also takes a specially named Python function as opposed to just a sequence of statements.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The objects exposed in the function are standard Python library types such as <bpt id="p4">[</bpt>Pandas<ept id="p4">](http://pandas.pydata.org/)</ept><ph id="ph11" /> data frames and <bpt id="p5">[</bpt>NumPy<ept id="p5">](http://www.numpy.org/)</ept><ph id="ph12" /> arrays.</source>
          <target state="new">The objects exposed in the function are standard Python library types such as <bpt id="p4">[</bpt>Pandas<ept id="p4">](http://pandas.pydata.org/)</ept><ph id="ph11" /> data frames and <bpt id="p5">[</bpt>NumPy<ept id="p5">](http://www.numpy.org/)</ept><ph id="ph12" /> arrays.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p6">*</bpt>Must have high-fidelity between local and cloud executions.<ept id="p6">*</ept><ph id="ph13" /> The backend used to execute the Python code is based on <bpt id="p7">[</bpt>Anaconda<ept id="p7">](https://store.continuum.io/cshop/anaconda/)</ept><ph id="ph14" /> 2.1, a widely-used cross-platform scientific Python distribution.</source>
          <target state="new"><bpt id="p6">*</bpt>Must have high-fidelity between local and cloud executions.<ept id="p6">*</ept><ph id="ph13" /> The backend used to execute the Python code is based on <bpt id="p7">[</bpt>Anaconda<ept id="p7">](https://store.continuum.io/cshop/anaconda/)</ept><ph id="ph14" /> 2.1, a widely-used cross-platform scientific Python distribution.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>It comes with close to 200 of the most common Python packages.</source>
          <target state="new">It comes with close to 200 of the most common Python packages.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Therefore, a data scientist can debug and qualify their code on his or her local Azure Machine Learning compatible Anaconda environment using existing development environments such as <bpt id="p8">[</bpt>IPython<ept id="p8">](http://ipython.org/)</ept><ph id="ph15" /> notebook or <bpt id="p9">[</bpt>Python Tools for Visual Studio<ept id="p9">](http://aka.ms/ptvs)</ept><ph id="ph16" /> and run it as part of an Azure Machine Learning experiment with high confidence.</source>
          <target state="new">Therefore, a data scientist can debug and qualify their code on his or her local Azure Machine Learning compatible Anaconda environment using existing development environments such as <bpt id="p8">[</bpt>IPython<ept id="p8">](http://ipython.org/)</ept><ph id="ph15" /> notebook or <bpt id="p9">[</bpt>Python Tools for Visual Studio<ept id="p9">](http://aka.ms/ptvs)</ept><ph id="ph16" /> and run it as part of an Azure Machine Learning experiment with high confidence.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Further, the <ph id="ph17">`azureml_main`</ph><ph id="ph18" /> entry point is a vanilla Python function and can be authored without Azure Machine Learning specific code or the SDK installed.</source>
          <target state="new">Further, the <ph id="ph17">`azureml_main`</ph><ph id="ph18" /> entry point is a vanilla Python function and can be authored without Azure Machine Learning specific code or the SDK installed.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p10">*</bpt>Must be seamlessly composable with other Azure Machine Learning modules.<ept id="p10">*</ept><ph id="ph19" /> The [Execute Python Script][execute-python-script] module accepts, as inputs and outputs, standard Azure Machine Learning datasets.</source>
          <target state="new"><bpt id="p10">*</bpt>Must be seamlessly composable with other Azure Machine Learning modules.<ept id="p10">*</ept><ph id="ph19" /> The [Execute Python Script][execute-python-script] module accepts, as inputs and outputs, standard Azure Machine Learning datasets.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The underlying framework transparently and efficiently bridges the Azure Machine Learning and Python runtimes (supporting features such as missing values).</source>
          <target state="new">The underlying framework transparently and efficiently bridges the Azure Machine Learning and Python runtimes (supporting features such as missing values).</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Python can therefore be used in conjunction with existing Azure Machine Learning workflows, including those that call into R and SQLite.</source>
          <target state="new">Python can therefore be used in conjunction with existing Azure Machine Learning workflows, including those that call into R and SQLite.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>One can therefore envisage workflows that:</source>
          <target state="new">One can therefore envisage workflows that:</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>use Python and Pandas for data pre-processing and cleaning,</source>
          <target state="new">use Python and Pandas for data pre-processing and cleaning,</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>feed the data to a SQL transformation, joining multiple datasets to form features,</source>
          <target state="new">feed the data to a SQL transformation, joining multiple datasets to form features,</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>train models using the extensive collection of algorithms in Azure Machine Learning, and</source>
          <target state="new">train models using the extensive collection of algorithms in Azure Machine Learning, and</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>evaluate and post-process the results using R.</source>
          <target state="new">evaluate and post-process the results using R.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Basic usage scenarios in Machine Learning for Python scripts</source>
          <target state="new">Basic usage scenarios in Machine Learning for Python scripts</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>In this section, we survey some of the basic uses of the [Execute Python Script][execute-python-script] module.</source>
          <target state="new">In this section, we survey some of the basic uses of the [Execute Python Script][execute-python-script] module.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>As mentioned earlier, any inputs to the Python module are exposed as Pandas data frames.</source>
          <target state="new">As mentioned earlier, any inputs to the Python module are exposed as Pandas data frames.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>More information on Python Pandas and how it can be used to manipulate data effectively and efficiently can be found in <bpt id="p11">*</bpt>Python for Data Analysis<ept id="p11">*</ept><ph id="ph20" /> (Sebastopol, CA.: O'Reilly, 2012) by W. McKinney.</source>
          <target state="new">More information on Python Pandas and how it can be used to manipulate data effectively and efficiently can be found in <bpt id="p11">*</bpt>Python for Data Analysis<ept id="p11">*</ept><ph id="ph20" /> (Sebastopol, CA.: O'Reilly, 2012) by W. McKinney.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The function must return a single Pandas data frame packaged inside of a Python <bpt id="p12">[</bpt>sequence<ept id="p12">](https://docs.python.org/2/c-api/sequence.html)</ept><ph id="ph21" /> such as a tuple, list, or NumPy array.</source>
          <target state="new">The function must return a single Pandas data frame packaged inside of a Python <bpt id="p12">[</bpt>sequence<ept id="p12">](https://docs.python.org/2/c-api/sequence.html)</ept><ph id="ph21" /> such as a tuple, list, or NumPy array.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The first element of this sequence is then returned in the first output port of the module.</source>
          <target state="new">The first element of this sequence is then returned in the first output port of the module.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This scheme is shown in Figure 2.</source>
          <target state="new">This scheme is shown in Figure 2.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><ph id="ph22">![</ph>image3<ph id="ph23">](./media/machine-learning-execute-python-scripts/map-of-python-script-inputs-outputs.png)</ph></source>
          <target state="new"><ph id="ph22">![</ph>image3<ph id="ph23">](./media/machine-learning-execute-python-scripts/map-of-python-script-inputs-outputs.png)</ph></target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Figure 2.</source>
          <target state="new">Figure 2.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Mapping of input ports to parameters and return value to output port.</source>
          <target state="new">Mapping of input ports to parameters and return value to output port.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>More detailed semantics of how the input ports get mapped to parameters of the <ph id="ph24">`azureml_main`</ph><ph id="ph25" /> function are shown in Table 1:</source>
          <target state="new">More detailed semantics of how the input ports get mapped to parameters of the <ph id="ph24">`azureml_main`</ph><ph id="ph25" /> function are shown in Table 1:</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><ph id="ph26">![</ph>image1T<ph id="ph27">](./media/machine-learning-execute-python-scripts/python-script-inputs-mapped-to-parameters.png)</ph></source>
          <target state="new"><ph id="ph26">![</ph>image1T<ph id="ph27">](./media/machine-learning-execute-python-scripts/python-script-inputs-mapped-to-parameters.png)</ph></target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Table 1.</source>
          <target state="new">Table 1.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Mapping of input ports to function parameters.</source>
          <target state="new">Mapping of input ports to function parameters.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Note that the mapping between input ports and function parameters is positional, i.e., the first connected input port is mapped to the first parameter of the function and the second input (if connected) is mapped to the second parameter of the function.</source>
          <target state="new">Note that the mapping between input ports and function parameters is positional, i.e., the first connected input port is mapped to the first parameter of the function and the second input (if connected) is mapped to the second parameter of the function.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Translation of input and output types</source>
          <target state="new">Translation of input and output types</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>As explained earlier, input datasets in Azure Machine Learning are converted to data frames in Pandas and output data frames are converted back to Azure Machine Learning datasets.</source>
          <target state="new">As explained earlier, input datasets in Azure Machine Learning are converted to data frames in Pandas and output data frames are converted back to Azure Machine Learning datasets.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The following conversions are performed:</source>
          <target state="new">The following conversions are performed:</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>String and numeric columns are converted as-is and missing values in a dataset are converted to ‘NA’ values in Pandas.</source>
          <target state="new">String and numeric columns are converted as-is and missing values in a dataset are converted to ‘NA’ values in Pandas.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The same conversion happens on the way back (NA values in Pandas are converted to missing values in Azure Machine Learning).</source>
          <target state="new">The same conversion happens on the way back (NA values in Pandas are converted to missing values in Azure Machine Learning).</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Index vectors in Pandas are not supported in Azure Machine Learning and all input data frames in the Python function will always have a 64-bit numerical index from 0 through the number of rows minus 1.</source>
          <target state="new">Index vectors in Pandas are not supported in Azure Machine Learning and all input data frames in the Python function will always have a 64-bit numerical index from 0 through the number of rows minus 1.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Azure Machine Learning datasets cannot have duplicate column names and column names that are not strings.</source>
          <target state="new">Azure Machine Learning datasets cannot have duplicate column names and column names that are not strings.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>If an output data frame contains non-numeric columns, the framework calls <ph id="ph28">`str`</ph><ph id="ph29" /> on the column names.</source>
          <target state="new">If an output data frame contains non-numeric columns, the framework calls <ph id="ph28">`str`</ph><ph id="ph29" /> on the column names.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Likewise, any duplicate column names are automatically mangled to insure the names are unique.</source>
          <target state="new">Likewise, any duplicate column names are automatically mangled to insure the names are unique.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The suffix (2) is added to the first duplicate, (3) to the second duplicate, etc.</source>
          <target state="new">The suffix (2) is added to the first duplicate, (3) to the second duplicate, etc.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Operationalizing Python scripts</source>
          <target state="new">Operationalizing Python scripts</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Any [Execute Python Script][execute-python-script] modules used in a scoring experiment are called when published as a web service.</source>
          <target state="new">Any [Execute Python Script][execute-python-script] modules used in a scoring experiment are called when published as a web service.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>For example, Figure 3 shows a scoring experiment containing the code to evaluate a single Python expression.</source>
          <target state="new">For example, Figure 3 shows a scoring experiment containing the code to evaluate a single Python expression.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><ph id="ph30">![</ph>image4<ph id="ph31">](./media/machine-learning-execute-python-scripts/figure3a.png)</ph></source>
          <target state="new"><ph id="ph30">![</ph>image4<ph id="ph31">](./media/machine-learning-execute-python-scripts/figure3a.png)</ph></target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><ph id="ph32">![</ph>image5<ph id="ph33">](./media/machine-learning-execute-python-scripts/python-script-with-python-pandas.png)</ph></source>
          <target state="new"><ph id="ph32">![</ph>image5<ph id="ph33">](./media/machine-learning-execute-python-scripts/python-script-with-python-pandas.png)</ph></target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Figure 3.</source>
          <target state="new">Figure 3.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Web service for evaluating a Python expression.</source>
          <target state="new">Web service for evaluating a Python expression.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>A web service created from this experiment takes as input a Python expression (as a string), sends it to the Python interpreter and returns a table containing both the expression and the evaluated result.</source>
          <target state="new">A web service created from this experiment takes as input a Python expression (as a string), sends it to the Python interpreter and returns a table containing both the expression and the evaluated result.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Importing existing Python script modules</source>
          <target state="new">Importing existing Python script modules</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>A common use-case for many data scientists is to incorporate existing Python scripts into Azure Machine Learning experiments.</source>
          <target state="new">A common use-case for many data scientists is to incorporate existing Python scripts into Azure Machine Learning experiments.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Instead of concatenating and pasting all the code into a single script box, the [Execute Python Script][execute-python-script] module accepts a third input port to which a zip file that contains the Python modules can be connected.</source>
          <target state="new">Instead of concatenating and pasting all the code into a single script box, the [Execute Python Script][execute-python-script] module accepts a third input port to which a zip file that contains the Python modules can be connected.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The file is then unzipped by the execution framework at runtime and the contents are added to the library path of the Python interpreter.</source>
          <target state="new">The file is then unzipped by the execution framework at runtime and the contents are added to the library path of the Python interpreter.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The <ph id="ph34">`azureml_main`</ph><ph id="ph35" /> entry point function can then import these modules directly.</source>
          <target state="new">The <ph id="ph34">`azureml_main`</ph><ph id="ph35" /> entry point function can then import these modules directly.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>As an example, consider the file Hello.py containing a simple “Hello, World” function.</source>
          <target state="new">As an example, consider the file Hello.py containing a simple “Hello, World” function.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><ph id="ph36">![</ph>image6<ph id="ph37">](./media/machine-learning-execute-python-scripts/figure4.png)</ph></source>
          <target state="new"><ph id="ph36">![</ph>image6<ph id="ph37">](./media/machine-learning-execute-python-scripts/figure4.png)</ph></target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Figure 4.</source>
          <target state="new">Figure 4.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>User-defined function.</source>
          <target state="new">User-defined function.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Next, we can create a file Hello.zip containing Hello.py:</source>
          <target state="new">Next, we can create a file Hello.zip containing Hello.py:</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><ph id="ph38">![</ph>image7<ph id="ph39">](./media/machine-learning-execute-python-scripts/figure5.png)</ph></source>
          <target state="new"><ph id="ph38">![</ph>image7<ph id="ph39">](./media/machine-learning-execute-python-scripts/figure5.png)</ph></target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Figure 5.</source>
          <target state="new">Figure 5.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Zip file containing user-defined Python code.</source>
          <target state="new">Zip file containing user-defined Python code.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Then, upload this as a dataset into Azure Machine Learning Studio.</source>
          <target state="new">Then, upload this as a dataset into Azure Machine Learning Studio.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>If we then create and run a simple experiment a uses the module:</source>
          <target state="new">If we then create and run a simple experiment a uses the module:</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source><ph id="ph40">![</ph>image8<ph id="ph41">](./media/machine-learning-execute-python-scripts/figure6a.png)</ph></source>
          <target state="new"><ph id="ph40">![</ph>image8<ph id="ph41">](./media/machine-learning-execute-python-scripts/figure6a.png)</ph></target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><ph id="ph42">![</ph>image9<ph id="ph43">](./media/machine-learning-execute-python-scripts/figure6b.png)</ph></source>
          <target state="new"><ph id="ph42">![</ph>image9<ph id="ph43">](./media/machine-learning-execute-python-scripts/figure6b.png)</ph></target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Figure 6.</source>
          <target state="new">Figure 6.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Sample experiment with user-defined Python code uploaded as a zip file.</source>
          <target state="new">Sample experiment with user-defined Python code uploaded as a zip file.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The module output shows that the zip file has been unpackaged and the function <ph id="ph44">`print_hello`</ph><ph id="ph45" /> has indeed been run.</source>
          <target state="new">The module output shows that the zip file has been unpackaged and the function <ph id="ph44">`print_hello`</ph><ph id="ph45" /> has indeed been run.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><ph id="ph46"> 
![</ph>image10<ph id="ph47">](./media/machine-learning-execute-python-scripts/figure7.png)</ph></source>
          <target state="new"><ph id="ph46"> 
![</ph>image10<ph id="ph47">](./media/machine-learning-execute-python-scripts/figure7.png)</ph></target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Figure 7.</source>
          <target state="new">Figure 7.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>User-defined function in use inside the [Execute Python Script][execute-python-script] module.</source>
          <target state="new">User-defined function in use inside the [Execute Python Script][execute-python-script] module.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Working with visualizations</source>
          <target state="new">Working with visualizations</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Plots created using MatplotLib that can be visualized on the browser can be returned by the [Execute Python Script][execute-python-script].</source>
          <target state="new">Plots created using MatplotLib that can be visualized on the browser can be returned by the [Execute Python Script][execute-python-script].</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>But the plots are not automatically redirected to images as they are when using R. So the user must explicitly save any plots to PNG files if they are to be returned back to Azure Machine Learning.</source>
          <target state="new">But the plots are not automatically redirected to images as they are when using R. So the user must explicitly save any plots to PNG files if they are to be returned back to Azure Machine Learning.</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>In order to generate images from MatplotLib, you must compete the following procedure:</source>
          <target state="new">In order to generate images from MatplotLib, you must compete the following procedure:</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>switch the backend to “AGG” from the default Qt-based renderer</source>
          <target state="new">switch the backend to “AGG” from the default Qt-based renderer</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>create a new figure object</source>
          <target state="new">create a new figure object</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>get the axis and generate all plots into it</source>
          <target state="new">get the axis and generate all plots into it</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>save the figure to a PNG file</source>
          <target state="new">save the figure to a PNG file</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>This process is illustrated in Figure 8 below that creates a scatter plot matrix using the scatter_matrix function in Pandas.</source>
          <target state="new">This process is illustrated in Figure 8 below that creates a scatter plot matrix using the scatter_matrix function in Pandas.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source><ph id="ph48">![</ph>image1v<ph id="ph49">](./media/machine-learning-execute-python-scripts/figure-v1-8.png)</ph></source>
          <target state="new"><ph id="ph48">![</ph>image1v<ph id="ph49">](./media/machine-learning-execute-python-scripts/figure-v1-8.png)</ph></target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Figure 8.</source>
          <target state="new">Figure 8.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Saving MatplotLib figures to images.</source>
          <target state="new">Saving MatplotLib figures to images.</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Figure 9 shows an experiment that uses the script shown above to return plots via the second output port.</source>
          <target state="new">Figure 9 shows an experiment that uses the script shown above to return plots via the second output port.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source><ph id="ph50">![</ph>image2v<ph id="ph51">](./media/machine-learning-execute-python-scripts/figure-v2-9a.png)</ph></source>
          <target state="new"><ph id="ph50">![</ph>image2v<ph id="ph51">](./media/machine-learning-execute-python-scripts/figure-v2-9a.png)</ph></target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source><ph id="ph52">![</ph>image2v<ph id="ph53">](./media/machine-learning-execute-python-scripts/figure-v2-9b.png)</ph></source>
          <target state="new"><ph id="ph52">![</ph>image2v<ph id="ph53">](./media/machine-learning-execute-python-scripts/figure-v2-9b.png)</ph></target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Figure 9.</source>
          <target state="new">Figure 9.</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Visualizing plots generated from Python code.</source>
          <target state="new">Visualizing plots generated from Python code.</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Note that it is possible to return multiple figures by saving them into different images, the Azure Machine Learning runtime picks up all images and concatenates them for visualization.</source>
          <target state="new">Note that it is possible to return multiple figures by saving them into different images, the Azure Machine Learning runtime picks up all images and concatenates them for visualization.</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Advanced examples</source>
          <target state="new">Advanced examples</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The Anaconda environment installed in Azure Machine Learning contains common packages such as NumPy, SciPy and Scikits-Learn and these can be effectively used for various data processing tasks in a typical machine learning pipeline.</source>
          <target state="new">The Anaconda environment installed in Azure Machine Learning contains common packages such as NumPy, SciPy and Scikits-Learn and these can be effectively used for various data processing tasks in a typical machine learning pipeline.</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>As an example, the following experiment and script illustrates the use of ensemble learners in Scikits-Learn to compute feature importance scores for a dataset.</source>
          <target state="new">As an example, the following experiment and script illustrates the use of ensemble learners in Scikits-Learn to compute feature importance scores for a dataset.</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The scores can then be used to perform supervised feature selection before feeding into another machine learning model.</source>
          <target state="new">The scores can then be used to perform supervised feature selection before feeding into another machine learning model.</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The Python function to compute the importance scores and order the features based on it is shown below:</source>
          <target state="new">The Python function to compute the importance scores and order the features based on it is shown below:</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source><ph id="ph54">![</ph>image11<ph id="ph55">](./media/machine-learning-execute-python-scripts/figure8.png)</ph></source>
          <target state="new"><ph id="ph54">![</ph>image11<ph id="ph55">](./media/machine-learning-execute-python-scripts/figure8.png)</ph></target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Figure 10.</source>
          <target state="new">Figure 10.</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Function to rank features by scores.</source>
          <target state="new">Function to rank features by scores.</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The following experiment then computes and returns the importance scores of features in the “Pima Indian Diabetes” dataset in Azure Machine Learning:</source>
          <target state="new">The following experiment then computes and returns the importance scores of features in the “Pima Indian Diabetes” dataset in Azure Machine Learning:</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source><ph id="ph56">![</ph>image12<ph id="ph57">](./media/machine-learning-execute-python-scripts/figure9a.png)
![</ph>image13<ph id="ph58">](./media/machine-learning-execute-python-scripts/figure9b.png)</ph></source>
          <target state="new"><ph id="ph56">![</ph>image12<ph id="ph57">](./media/machine-learning-execute-python-scripts/figure9a.png)
![</ph>image13<ph id="ph58">](./media/machine-learning-execute-python-scripts/figure9b.png)</ph></target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Figure 11.</source>
          <target state="new">Figure 11.</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Experiment to rank features in the Pima Indian Diabetes dataset.</source>
          <target state="new">Experiment to rank features in the Pima Indian Diabetes dataset.</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Limitations</source>
          <target state="new">Limitations</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The [Execute Python Script][execute-python-script] currently has the following limitations:</source>
          <target state="new">The [Execute Python Script][execute-python-script] currently has the following limitations:</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source><bpt id="p13">*</bpt>Sandboxed execution.<ept id="p13">*</ept><ph id="ph59" /> The Python runtime is currently sandboxed and, as a result, does not allow access to the network or to the local file system in a persistent manner.</source>
          <target state="new"><bpt id="p13">*</bpt>Sandboxed execution.<ept id="p13">*</ept><ph id="ph59" /> The Python runtime is currently sandboxed and, as a result, does not allow access to the network or to the local file system in a persistent manner.</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>All files saved locally are isolated and deleted once the module finishes.</source>
          <target state="new">All files saved locally are isolated and deleted once the module finishes.</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The Python code cannot access most directories on the machine it runs on, the exception being the current directory and its sub-directories.</source>
          <target state="new">The Python code cannot access most directories on the machine it runs on, the exception being the current directory and its sub-directories.</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source><bpt id="p14">*</bpt>Lack of sophisticated development and debugging support.<ept id="p14">*</ept><ph id="ph60" /> The Python module currently does not support IDE features such as intellisense and debugging.</source>
          <target state="new"><bpt id="p14">*</bpt>Lack of sophisticated development and debugging support.<ept id="p14">*</ept><ph id="ph60" /> The Python module currently does not support IDE features such as intellisense and debugging.</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Also, if the module fails at runtime, the full Python stack trace is available, but must be viewed in the output log for the module.</source>
          <target state="new">Also, if the module fails at runtime, the full Python stack trace is available, but must be viewed in the output log for the module.</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>We currently recommend that users develop and debug their Python scripts in an environment such as IPython and then import the code into the module.</source>
          <target state="new">We currently recommend that users develop and debug their Python scripts in an environment such as IPython and then import the code into the module.</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source><bpt id="p15">*</bpt>Single data frame output.<ept id="p15">*</ept><ph id="ph61" /> The Python entry point is only permitted to return a single data frame as output.</source>
          <target state="new"><bpt id="p15">*</bpt>Single data frame output.<ept id="p15">*</ept><ph id="ph61" /> The Python entry point is only permitted to return a single data frame as output.</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>It is not currently possible to return arbitrary Python objects such as trained models directly back to the Azure Machine Learning runtime.</source>
          <target state="new">It is not currently possible to return arbitrary Python objects such as trained models directly back to the Azure Machine Learning runtime.</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Like [Execute R Script][execute-r-script], which has the same limitation, it is however possible in many cases to pickle objects into a byte array and then return that inside of a data frame.</source>
          <target state="new">Like [Execute R Script][execute-r-script], which has the same limitation, it is however possible in many cases to pickle objects into a byte array and then return that inside of a data frame.</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source><bpt id="p16">*</bpt>Inability to customize Python installation<ept id="p16">*</ept>.</source>
          <target state="new"><bpt id="p16">*</bpt>Inability to customize Python installation<ept id="p16">*</ept>.</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Currently, the only way to add custom Python modules is via the zip file mechanism described earlier.</source>
          <target state="new">Currently, the only way to add custom Python modules is via the zip file mechanism described earlier.</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>While this is feasible for small modules, it is cumbersome for large modules (especially those with native DLLs) or a large number of modules.</source>
          <target state="new">While this is feasible for small modules, it is cumbersome for large modules (especially those with native DLLs) or a large number of modules.</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Conclusions</source>
          <target state="new">Conclusions</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The [Execute Python Script][execute-python-script] module allows a data scientist to incorporate existing Python code into cloud-hosted machine learning workflows in Azure Machine Learning and to seamlessly operationalize them as part of a web service.</source>
          <target state="new">The [Execute Python Script][execute-python-script] module allows a data scientist to incorporate existing Python code into cloud-hosted machine learning workflows in Azure Machine Learning and to seamlessly operationalize them as part of a web service.</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The Python script module interoperates naturally with other modules in Azure Machine Learning and can be used for a range of tasks from data exploration to pre-processing, to feature extraction, to evaluation and post-processing of the results.</source>
          <target state="new">The Python script module interoperates naturally with other modules in Azure Machine Learning and can be used for a range of tasks from data exploration to pre-processing, to feature extraction, to evaluation and post-processing of the results.</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The backend runtime used for execution is based on Anaconda, a well-tested and widely-used Python distribution.</source>
          <target state="new">The backend runtime used for execution is based on Anaconda, a well-tested and widely-used Python distribution.</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>This makes it simple for users to onboard existing code assets into the cloud.</source>
          <target state="new">This makes it simple for users to onboard existing code assets into the cloud.</target>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Over the coming months, we expect to provide additional functionality to the [Execute Python Script][execute-python-script] module such as the ability to train and operationalize models in Python and to add better support for the development and debugging code in Azure Machine Learning Studio.</source>
          <target state="new">Over the coming months, we expect to provide additional functionality to the [Execute Python Script][execute-python-script] module such as the ability to train and operationalize models in Python and to add better support for the development and debugging code in Azure Machine Learning Studio.</target>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Next steps</source>
          <target state="new">Next steps</target>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p17">[</bpt>Python Developer Center<ept id="p17">](/develop/python/)</ept>.</source>
          <target state="new">For more information, see the <bpt id="p17">[</bpt>Python Developer Center<ept id="p17">](/develop/python/)</ept>.</target>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>[execute-python-script]: https://msdn.microsoft.com/library/azure/cdb56f95-7f4c-404d-bde7-5bb972e6f232/
[execute-r-script]: https://msdn.microsoft.com/library/azure/30806023-392b-42e0-94d6-6b775a6e0fd5/</source>
          <target state="new">[execute-python-script]: https://msdn.microsoft.com/library/azure/cdb56f95-7f4c-404d-bde7-5bb972e6f232/
[execute-r-script]: https://msdn.microsoft.com/library/azure/30806023-392b-42e0-94d6-6b775a6e0fd5/</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8bc6c5731b3dc18171776556d0f0d6266b35eb33</xliffext:olfilehash>
  </header>
</xliff>