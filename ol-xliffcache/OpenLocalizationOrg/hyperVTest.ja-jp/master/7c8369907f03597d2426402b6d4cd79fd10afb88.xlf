<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="ja-jp" original="foo.file" tool-id="ef391f96-3502-4df7-adda-447d641a88ba" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="ef391f96-3502-4df7-adda-447d641a88ba" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
      <olfilehash xmlns="">7c8369907f03597d2426402b6d4cd79fd10afb88</olfilehash>
    </header>
    <body>
      <group id="b3e607d2-345f-4ad0-ac40-bfa198104609">
        <trans-unit id="213ef15e-252c-4f39-abe7-a4c2ca96cd33" xml:space="preserve">
          <source>ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9</source>
          <target state="new">ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9</target>
        </trans-unit>
        <trans-unit id="c3249057-8a84-4d20-b7af-a3e5b3f4068e" xml:space="preserve">
          <source>title: PowerShell Snippets</source>
          <target state="new">title: PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="848a88ff-2a78-48b3-a14b-459de86d4dc1" xml:space="preserve">
          <source>PowerShell Snippets</source>
          <target state="new">PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="8b7cfacd-63aa-45b2-afcc-c7295a329c09" xml:space="preserve">
          <source>12-Nov update.Adding this sentence to validate the bug 451132 result.</source>
          <target state="new">12-Nov update.Adding this sentence to validate the bug 451132 result.</target>
        </trans-unit>
        <trans-unit id="a1b230fb-0488-41e1-a23a-4dd1c130782f" xml:space="preserve">
          <source>PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</source>
          <target state="new">PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</target>
        </trans-unit>
        <trans-unit id="ddd53a08-c1df-40a6-bdac-42d6d4479a29" xml:space="preserve">
          <source>All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</source>
          <target state="new">All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</target>
        </trans-unit>
        <trans-unit id="61410c51-9fe4-49b4-97e9-e13e4e3e21c0" xml:space="preserve">
          <source>If you aren't sure if you have the right permissions, type <bpt id="c2bb8388-a4f0-4e09-9ebd-cf9280a5a847">&lt;code&gt;</bpt>Get-VM<ept id="c2bb8388-a4f0-4e09-9ebd-cf9280a5a847">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</source>
          <target state="new">If you aren't sure if you have the right permissions, type <bpt id="c2bb8388-a4f0-4e09-9ebd-cf9280a5a847">&lt;code&gt;</bpt>Get-VM<ept id="c2bb8388-a4f0-4e09-9ebd-cf9280a5a847">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</target>
        </trans-unit>
        <trans-unit id="8987eda1-d7d6-4ffa-b7b6-6ad71cc0dfc3" xml:space="preserve">
          <source>PowerShell Direct tools</source>
          <target state="new">PowerShell Direct tools</target>
        </trans-unit>
        <trans-unit id="ee00cfa4-dd61-436c-8a71-abb4c9261022" xml:space="preserve">
          <source>All of the scripts and snippets in this section will rely on the following basics.</source>
          <target state="new">All of the scripts and snippets in this section will rely on the following basics.</target>
        </trans-unit>
        <trans-unit id="ba80240d-4706-4c1b-ab0e-d79642070e14" xml:space="preserve">
          <source><bpt id="c0443a63-2e98-4c33-9a1b-0ea64eccce3e">&lt;strong&gt;</bpt>Requirements<ept id="c0443a63-2e98-4c33-9a1b-0ea64eccce3e">&lt;/strong&gt;</ept> :</source>
          <target state="new"><bpt id="c0443a63-2e98-4c33-9a1b-0ea64eccce3e">&lt;strong&gt;</bpt>Requirements<ept id="c0443a63-2e98-4c33-9a1b-0ea64eccce3e">&lt;/strong&gt;</ept> :</target>
        </trans-unit>
        <trans-unit id="bd744ebe-71a9-4480-9f30-892e346e54df" xml:space="preserve">
          <source>PowerShell Direct.</source>
          <target state="new">PowerShell Direct.</target>
        </trans-unit>
        <trans-unit id="c41ba286-da7e-4389-a736-b03603cd9101" xml:space="preserve">
          <source>Windows 10 guest and host OS.</source>
          <target state="new">Windows 10 guest and host OS.</target>
        </trans-unit>
        <trans-unit id="5391ef3d-d699-495e-b312-f39c7fb5a855" xml:space="preserve">
          <source><bpt id="2d6ebb1f-cc55-418c-a61f-173208af8f90">&lt;strong&gt;</bpt>Common Variables<ept id="2d6ebb1f-cc55-418c-a61f-173208af8f90">&lt;/strong&gt;</ept> :</source>
          <target state="new"><bpt id="2d6ebb1f-cc55-418c-a61f-173208af8f90">&lt;strong&gt;</bpt>Common Variables<ept id="2d6ebb1f-cc55-418c-a61f-173208af8f90">&lt;/strong&gt;</ept> :</target>
        </trans-unit>
        <trans-unit id="1806e626-e569-4b28-990d-000d2408abbf" xml:space="preserve">
          <source><bpt id="334910ab-e7e2-4771-8700-f051128d6151">&lt;code&gt;</bpt>$VMName<ept id="334910ab-e7e2-4771-8700-f051128d6151">&lt;/code&gt;</ept> -- this is a string with the VMName.</source>
          <target state="new"><bpt id="334910ab-e7e2-4771-8700-f051128d6151">&lt;code&gt;</bpt>$VMName<ept id="334910ab-e7e2-4771-8700-f051128d6151">&lt;/code&gt;</ept> -- this is a string with the VMName.</target>
        </trans-unit>
        <trans-unit id="0f28b372-8264-4352-80dd-18f8f09560e0" xml:space="preserve">
          <source>See a list of available VMs with <bpt id="69fd3b5f-61a5-4db0-b08c-1a0ef21b4d4a">&lt;code&gt;</bpt>Get-VM<ept id="69fd3b5f-61a5-4db0-b08c-1a0ef21b4d4a">&lt;/code&gt;</ept></source>
          <target state="new">See a list of available VMs with <bpt id="69fd3b5f-61a5-4db0-b08c-1a0ef21b4d4a">&lt;code&gt;</bpt>Get-VM<ept id="69fd3b5f-61a5-4db0-b08c-1a0ef21b4d4a">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="cd9f3c7f-2140-4bea-89b5-5fc47bc0bc49" xml:space="preserve">
          <source><bpt id="0ade784f-9f25-4056-9fe2-71822c7cd024">&lt;code&gt;</bpt>$cred<ept id="0ade784f-9f25-4056-9fe2-71822c7cd024">&lt;/code&gt;</ept> -- Credential for the guest OS.</source>
          <target state="new"><bpt id="0ade784f-9f25-4056-9fe2-71822c7cd024">&lt;code&gt;</bpt>$cred<ept id="0ade784f-9f25-4056-9fe2-71822c7cd024">&lt;/code&gt;</ept> -- Credential for the guest OS.</target>
        </trans-unit>
        <trans-unit id="0bf323a2-ce04-4696-b363-a0c6fa06d249" xml:space="preserve">
          <source>Can be populated using <bpt id="74f0b860-88c6-40cb-a7a7-7986f4a81c22">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="74f0b860-88c6-40cb-a7a7-7986f4a81c22">&lt;/code&gt;</ept></source>
          <target state="new">Can be populated using <bpt id="74f0b860-88c6-40cb-a7a7-7986f4a81c22">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="74f0b860-88c6-40cb-a7a7-7986f4a81c22">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="e94db755-455a-4836-847c-019d2f21b046" xml:space="preserve">
          <source>Check if the guest has booted</source>
          <target state="new">Check if the guest has booted</target>
        </trans-unit>
        <trans-unit id="0f0a59bc-7864-462f-a847-2d78d41e4301" xml:space="preserve">
          <source>Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</source>
          <target state="new">Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</target>
        </trans-unit>
        <trans-unit id="60c36a09-0ad6-4ef0-9b78-d9443efb280b" xml:space="preserve">
          <source>Use this command to check whether the guest has booted.</source>
          <target state="new">Use this command to check whether the guest has booted.</target>
        </trans-unit>
        <trans-unit id="5915b1d5-1ae3-4b94-b1b4-fe71c3712b61" xml:space="preserve">
          <source><bpt id="35068031-c013-4d07-95ce-2e44bd163e90">&lt;strong&gt;</bpt>Outcome<ept id="35068031-c013-4d07-95ce-2e44bd163e90">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="35068031-c013-4d07-95ce-2e44bd163e90">&lt;strong&gt;</bpt>Outcome<ept id="35068031-c013-4d07-95ce-2e44bd163e90">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="e4bfb55b-296c-426d-b4ee-2f7292307722" xml:space="preserve">
          <source>Prints a friendly message declaring the state of the guest OS.</source>
          <target state="new">Prints a friendly message declaring the state of the guest OS.</target>
        </trans-unit>
        <trans-unit id="c34063a8-a187-4f0d-93e9-0c8298dd4126" xml:space="preserve">
          <source>Script locking until the guest has booted</source>
          <target state="new">Script locking until the guest has booted</target>
        </trans-unit>
        <trans-unit id="b6ce4196-6468-462d-9bea-8832b87a91f9" xml:space="preserve">
          <source>The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</source>
          <target state="new">The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</target>
        </trans-unit>
        <trans-unit id="de496493-19c3-4986-9572-d38e80b6d452" xml:space="preserve">
          <source><bpt id="fa801034-1a87-4cbc-84a9-b7831428c11d">&lt;strong&gt;</bpt>Outcome<ept id="fa801034-1a87-4cbc-84a9-b7831428c11d">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="fa801034-1a87-4cbc-84a9-b7831428c11d">&lt;strong&gt;</bpt>Outcome<ept id="fa801034-1a87-4cbc-84a9-b7831428c11d">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="56ba0e76-00e1-43d0-9b97-5fe5f6f7db5d" xml:space="preserve">
          <source>Prints a friendly message and locks until the connection to the VM succeeds.</source>
          <target state="new">Prints a friendly message and locks until the connection to the VM succeeds.</target>
        </trans-unit>
        <trans-unit id="d983fc0a-b3b3-4140-aa82-def394a72612" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="1f79027a-75b0-4aeb-a958-831ef8dd20ce" xml:space="preserve">
          <source>Script locking until the guest has a network</source>
          <target state="new">Script locking until the guest has a network</target>
        </trans-unit>
        <trans-unit id="8bb93d78-75ea-4303-85ca-cc693f85ee47" xml:space="preserve">
          <source>With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</source>
          <target state="new">With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</target>
        </trans-unit>
        <trans-unit id="5f22d886-b019-4772-8820-15252fb05020" xml:space="preserve">
          <source><bpt id="97c6ce90-19eb-42a4-8899-1a3ed3a6b71e">&lt;em&gt;</bpt>* Outcome *<ept id="97c6ce90-19eb-42a4-8899-1a3ed3a6b71e">&lt;/em&gt;</ept></source>
          <target state="new"><bpt id="97c6ce90-19eb-42a4-8899-1a3ed3a6b71e">&lt;em&gt;</bpt>* Outcome *<ept id="97c6ce90-19eb-42a4-8899-1a3ed3a6b71e">&lt;/em&gt;</ept></target>
        </trans-unit>
        <trans-unit id="e63d36fe-6ae1-4ecf-95be-fc40b1bd97bd" xml:space="preserve">
          <source>Locks until a DHCP lease is recieved.</source>
          <target state="new">Locks until a DHCP lease is recieved.</target>
        </trans-unit>
        <trans-unit id="af0d7e58-10c8-4412-90c4-95a1edbffe27" xml:space="preserve">
          <source>Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</source>
          <target state="new">Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</target>
        </trans-unit>
        <trans-unit id="b60d180a-ad25-499f-a35f-7fab4ecd2245" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="fb3972be-3328-460f-96ea-944e0b9cc63d" xml:space="preserve">
          <source>Managing credentials with PowerShell</source>
          <target state="new">Managing credentials with PowerShell</target>
        </trans-unit>
        <trans-unit id="30005e61-6c40-4eee-a2f3-4b9ec3d31613" xml:space="preserve">
          <source>Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</source>
          <target state="new">Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</target>
        </trans-unit>
        <trans-unit id="c80b2e80-4040-4269-93f4-551c86aa1539" xml:space="preserve">
          <source>There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</source>
          <target state="new">There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</target>
        </trans-unit>
        <trans-unit id="416e6add-55bb-4e84-9b70-3ff467700947" xml:space="preserve">
          <source>The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</source>
          <target state="new">The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</target>
        </trans-unit>
        <trans-unit id="fa0b8082-09ca-4475-842d-eedb3deb7f7f" xml:space="preserve">
          <source>This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</source>
          <target state="new">This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</target>
        </trans-unit>
        <trans-unit id="485e7a9f-37e9-43a2-86d2-08f3be2aafec" xml:space="preserve">
          <source>In this scenario you can just run <bpt id="6b4d66a9-597f-4e13-8e5b-870120a7e885">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="6b4d66a9-597f-4e13-8e5b-870120a7e885">&lt;/code&gt;</ept>.</source>
          <target state="new">In this scenario you can just run <bpt id="6b4d66a9-597f-4e13-8e5b-870120a7e885">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="6b4d66a9-597f-4e13-8e5b-870120a7e885">&lt;/code&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="221ee14a-3239-499d-9da5-c545d235218c" xml:space="preserve">
          <source>Let PowerShell prompt you for credentials</source>
          <target state="new">Let PowerShell prompt you for credentials</target>
        </trans-unit>
        <trans-unit id="a46d9dca-920c-4248-ac68-aee4d0f53ccc" xml:space="preserve">
          <source>If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</source>
          <target state="new">If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</target>
        </trans-unit>
        <trans-unit id="b4a6886d-07b4-4d12-aa72-02966b5ee9dc" xml:space="preserve">
          <source>Store credentials in a variable for reuse.</source>
          <target state="new">Store credentials in a variable for reuse.</target>
        </trans-unit>
        <trans-unit id="4c55d698-b611-4f29-87b4-7fa622bfb535" xml:space="preserve">
          <source>Running a simple command like this:</source>
          <target state="new">Running a simple command like this:</target>
        </trans-unit>
        <trans-unit id="e862bcff-cb73-4d3b-be28-6202a27a5aef" xml:space="preserve">
          <source>And then running something like this:</source>
          <target state="new">And then running something like this:</target>
        </trans-unit>
        <trans-unit id="9e6f3443-3baf-4d43-beed-e823e54b4b06" xml:space="preserve">
          <source>Will mean that you only get prompted once per script/PowerShell session for your credentials.</source>
          <target state="new">Will mean that you only get prompted once per script/PowerShell session for your credentials.</target>
        </trans-unit>
        <trans-unit id="b08aff56-70bd-45c3-a25c-5ab7fb0a305e" xml:space="preserve">
          <source>Code your credentials into your scripts.</source>
          <target state="new">Code your credentials into your scripts.</target>
        </trans-unit>
        <trans-unit id="99988649-4e47-4efb-afb1-22df4400da6f" xml:space="preserve">
          <source><bpt id="e36e22c2-0e10-47d8-b497-32c4a9bc7932">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="e36e22c2-0e10-47d8-b497-32c4a9bc7932">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="e36e22c2-0e10-47d8-b497-32c4a9bc7932">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="e36e22c2-0e10-47d8-b497-32c4a9bc7932">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="88575b25-20a0-43f2-86de-1cc795ff7228" xml:space="preserve">
          <source>Warning:  _Do not do this in a production system.</source>
          <target state="new">Warning:  _Do not do this in a production system.</target>
        </trans-unit>
        <trans-unit id="27e1d104-18ed-4e86-a4ff-8c04f19563c0" xml:space="preserve">
          <source>Do not do this with real passwords._</source>
          <target state="new">Do not do this with real passwords._</target>
        </trans-unit>
        <trans-unit id="fc4aefab-5659-4d1c-8c12-1b1d5f316ae7" xml:space="preserve">
          <source>You can hand craft a PSCredential object with some code like this:</source>
          <target state="new">You can hand craft a PSCredential object with some code like this:</target>
        </trans-unit>
        <trans-unit id="b6fc4b76-e2ed-4f93-9eb7-95994ea4efa8" xml:space="preserve">
          <source>Grossly insecure - but useful for testing.</source>
          <target state="new">Grossly insecure - but useful for testing.</target>
        </trans-unit>
        <trans-unit id="cc2005cb-b5f6-413b-af04-577186dbba9a" xml:space="preserve">
          <source>Now you get no prompts at all in this session.</source>
          <target state="new">Now you get no prompts at all in this session.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>