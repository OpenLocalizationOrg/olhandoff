{
  "nodes": [
    {
      "pos": [
        28,
        99
      ],
      "content": "Move Data to and from Azure Blob Storage using Python | Microsoft Azure"
    },
    {
      "pos": [
        119,
        172
      ],
      "content": "Move Data to and from Azure Blob Storage using Python"
    },
    {
      "pos": [
        517,
        570
      ],
      "content": "Move Data to and from Azure Blob Storage using Python"
    },
    {
      "pos": [
        575,
        587
      ],
      "content": "Introduction"
    },
    {
      "pos": [
        588,
        669
      ],
      "content": "This topic describes how to list, upload and download blobs using the Python API."
    },
    {
      "pos": [
        672,
        722
      ],
      "content": "With the Python API provided in Azure SDK, you can"
    },
    {
      "pos": [
        726,
        744
      ],
      "content": "Create a container"
    },
    {
      "pos": [
        747,
        777
      ],
      "content": "Upload a blob into a container"
    },
    {
      "pos": [
        780,
        794
      ],
      "content": "Download blobs"
    },
    {
      "pos": [
        797,
        826
      ],
      "content": "List the blobs in a container"
    },
    {
      "pos": [
        829,
        842
      ],
      "content": "Delete a blob"
    },
    {
      "pos": [
        844,
        993
      ],
      "content": "For more information about using the Python API, see <bpt id=\"p1\">[</bpt>How to Use the Blob Storage Service from Python<ept id=\"p1\">](../storage-python-how-to-use-blob-storage.md)</ept>."
    },
    {
      "pos": [
        995,
        1088
      ],
      "content": "Guidance on technologies used to move data to and/or from Azure Blob storage are linked here:"
    },
    {
      "pos": [
        1202,
        1416
      ],
      "content": "<ph id=\"ph3\">[AZURE.NOTE]</ph><ph id=\"ph4\"/> If you are using VM that was set up with the scripts provided by <bpt id=\"p2\">[</bpt>Data Science Virtual machines in Azure<ept id=\"p2\">](machine-learning-data-science-virtual-machines.md)</ept>, then AzCopy is already installed on the VM."
    },
    {
      "pos": [
        1420,
        1641
      ],
      "content": "<ph id=\"ph5\">[AZURE.NOTE]</ph><ph id=\"ph6\"/> For a complete introduction to Azure blob storage, please refer to <bpt id=\"p3\">[</bpt>Azure Blob Basics<ept id=\"p3\">](../storage-dotnet-how-to-use-blobs.md)</ept><ph id=\"ph7\"/> and  <bpt id=\"p4\">[</bpt>Azure Blob Service<ept id=\"p4\">](https://msdn.microsoft.com/library/azure/dd179376.aspx)</ept>."
    },
    {
      "pos": [
        1647,
        1660
      ],
      "content": "Prerequisites"
    },
    {
      "pos": [
        1662,
        1888
      ],
      "content": "This document assumes that you have an Azure subscription, a storage account and the corresponding storage key for that account. Before uploading/downloading data, you must know your Azure storage account name and account key.",
      "nodes": [
        {
          "content": "This document assumes that you have an Azure subscription, a storage account and the corresponding storage key for that account.",
          "pos": [
            0,
            128
          ]
        },
        {
          "content": "Before uploading/downloading data, you must know your Azure storage account name and account key.",
          "pos": [
            129,
            226
          ]
        }
      ]
    },
    {
      "pos": [
        1893,
        2002
      ],
      "content": "To set up an Azure subscription, see <bpt id=\"p5\">[</bpt>Free one-month trial<ept id=\"p5\">](https://azure.microsoft.com/pricing/free-trial/)</ept>."
    },
    {
      "pos": [
        2005,
        2170
      ],
      "content": "For instructions on creating a storage account and for getting account and key information, see <bpt id=\"p6\">[</bpt>About Azure storage accounts<ept id=\"p6\">](../storage-create-storage-account.md)</ept>."
    },
    {
      "pos": [
        2175,
        2194
      ],
      "content": "Upload Data to Blob"
    },
    {
      "pos": [
        2196,
        2313
      ],
      "content": "Add the following snippet near the top of any Python code in which you wish to programmatically access Azure Storage:"
    },
    {
      "pos": [
        2358,
        2590
      ],
      "content": "The <bpt id=\"p7\">**</bpt>BlobService<ept id=\"p7\">**</ept><ph id=\"ph8\"/> object lets you work with containers and blobs. The following code creates a BlobService object using the storage account name and account key. Replace account name and account key with your real account and key.",
      "nodes": [
        {
          "content": "The <bpt id=\"p7\">**</bpt>BlobService<ept id=\"p7\">**</ept><ph id=\"ph8\"/> object lets you work with containers and blobs.",
          "pos": [
            0,
            119
          ]
        },
        {
          "content": "The following code creates a BlobService object using the storage account name and account key.",
          "pos": [
            120,
            215
          ]
        },
        {
          "content": "Replace account name and account key with your real account and key.",
          "pos": [
            216,
            284
          ]
        }
      ]
    },
    {
      "pos": [
        2698,
        2749
      ],
      "content": "Use the following methods to upload data to a blob:"
    },
    {
      "pos": [
        2755,
        2840
      ],
      "content": "put\\_block\\_blob\\_from\\_path (uploads the contents of a file from the specified path)"
    },
    {
      "pos": [
        2844,
        2929
      ],
      "content": "put\\_block_blob\\_from\\_file (uploads the contents from an already opened file/stream)"
    },
    {
      "pos": [
        2933,
        2990
      ],
      "content": "put\\_block\\_blob\\_from\\_bytes (uploads an array of bytes)"
    },
    {
      "pos": [
        2994,
        3086
      ],
      "content": "put\\_block\\_blob\\_from\\_text (uploads the specified text value using the specified encoding)"
    },
    {
      "pos": [
        3089,
        3151
      ],
      "content": "The following sample code uploads a local file to a container:"
    },
    {
      "pos": [
        3271,
        3380
      ],
      "content": "The following sample code uploads all the files (excluding directories) in a local directory to blob storage:"
    },
    {
      "pos": [
        4308,
        4331
      ],
      "content": "Download Data from Blob"
    },
    {
      "pos": [
        4333,
        4388
      ],
      "content": "Use the following methods to download data from a blob:"
    },
    {
      "pos": [
        4392,
        4411
      ],
      "content": "get\\_blob\\_to\\_path"
    },
    {
      "pos": [
        4415,
        4434
      ],
      "content": "get\\_blob\\_to\\_file"
    },
    {
      "pos": [
        4438,
        4458
      ],
      "content": "get\\_blob\\_to\\_bytes"
    },
    {
      "pos": [
        4462,
        4481
      ],
      "content": "get\\_blob\\_to\\_text"
    },
    {
      "pos": [
        4484,
        4574
      ],
      "content": "These methods that perform the necessary chunking when the size of the data exceeds 64 MB."
    },
    {
      "pos": [
        4577,
        4667
      ],
      "content": "The following sample code downloads the contents of a blob in a container to a local file:"
    },
    {
      "pos": [
        4776,
        4952
      ],
      "content": "The following sample code downloads all blobs from a container. It uses list\\_blobs to get the list of available blobs in the container and downloads them to a local directory.",
      "nodes": [
        {
          "content": "The following sample code downloads all blobs from a container.",
          "pos": [
            0,
            63
          ]
        },
        {
          "content": "It uses list\\_blobs to get the list of available blobs in the container and downloads them to a local directory.",
          "pos": [
            64,
            176
          ]
        }
      ]
    }
  ],
  "content": "<properties \n    pageTitle=\"Move Data to and from Azure Blob Storage using Python | Microsoft Azure\" \n    description=\"Move Data to and from Azure Blob Storage using Python\" \n    services=\"machine-learning,storage\" \n    documentationCenter=\"\" \n    authors=\"bradsev\" \n    manager=\"paulettm\" \n    editor=\"cgronlun\" />\n\n<tags \n    ms.service=\"machine-learning\" \n    ms.workload=\"data-services\" \n    ms.tgt_pltfrm=\"na\" \n    ms.devlang=\"na\" \n    ms.topic=\"article\" \n    ms.date=\"02/08/2016\" \n    ms.author=\"bradsev\" />\n\n# Move Data to and from Azure Blob Storage using Python\n\n## Introduction\nThis topic describes how to list, upload and download blobs using the Python API. \n\nWith the Python API provided in Azure SDK, you can\n\n- Create a container\n- Upload a blob into a container\n- Download blobs\n- List the blobs in a container\n- Delete a blob\n\nFor more information about using the Python API, see [How to Use the Blob Storage Service from Python](../storage-python-how-to-use-blob-storage.md).\n\nGuidance on technologies used to move data to and/or from Azure Blob storage are linked here:\n\n[AZURE.INCLUDE [blob-storage-tool-selector](../../includes/machine-learning-blob-storage-tool-selector.md)]\n\n\n> [AZURE.NOTE] If you are using VM that was set up with the scripts provided by [Data Science Virtual machines in Azure](machine-learning-data-science-virtual-machines.md), then AzCopy is already installed on the VM.\n\n> [AZURE.NOTE] For a complete introduction to Azure blob storage, please refer to [Azure Blob Basics](../storage-dotnet-how-to-use-blobs.md) and  [Azure Blob Service](https://msdn.microsoft.com/library/azure/dd179376.aspx). \n\n## Prerequisites\n\nThis document assumes that you have an Azure subscription, a storage account and the corresponding storage key for that account. Before uploading/downloading data, you must know your Azure storage account name and account key. \n\n- To set up an Azure subscription, see [Free one-month trial](https://azure.microsoft.com/pricing/free-trial/).\n- For instructions on creating a storage account and for getting account and key information, see [About Azure storage accounts](../storage-create-storage-account.md).\n\n## Upload Data to Blob\n\nAdd the following snippet near the top of any Python code in which you wish to programmatically access Azure Storage:\n\n    from azure.storage import BlobService\n\nThe **BlobService** object lets you work with containers and blobs. The following code creates a BlobService object using the storage account name and account key. Replace account name and account key with your real account and key.\n    \n    blob_service = BlobService(account_name=\"<your_account_name>\", account_key=\"<your_account_key>\")\n\nUse the following methods to upload data to a blob:\n \n1. put\\_block\\_blob\\_from\\_path (uploads the contents of a file from the specified path)\n2. put\\_block_blob\\_from\\_file (uploads the contents from an already opened file/stream)\n3. put\\_block\\_blob\\_from\\_bytes (uploads an array of bytes)\n4. put\\_block\\_blob\\_from\\_text (uploads the specified text value using the specified encoding)\n \nThe following sample code uploads a local file to a container:\n    \n    blob_service.put_block_blob_from_path(\"<your_container_name>\", \"<your_blob_name>\", \"<your_local_file_name>\")\n\nThe following sample code uploads all the files (excluding directories) in a local directory to blob storage:\n\n    from azure.storage import BlobService\n    from os import listdir\n    from os.path import isfile, join\n    \n    # Set parameters here\n    ACCOUNT_NAME = \"<your_account_name>\"\n    ACCOUNT_KEY = \"<your_account_key>\"\n    CONTAINER_NAME = \"<your_container_name>\"\n    LOCAL_DIRECT = \"<your_local_directory>\"     \n    \n    blob_service = BlobService(account_name=ACCOUNT_NAME, account_key=ACCOUNT_KEY)\n    # find all files in the LOCAL_DIRECT (excluding directory)\n    local_file_list = [f for f in listdir(LOCAL_DIRECT) if isfile(join(LOCAL_DIRECT, f))]\n    \n    file_num = len(local_file_list)\n    for i in range(file_num):\n        local_file = join(LOCAL_DIRECT, local_file_list[i])\n        blob_name = local_file_list[i]\n        try:\n            blob_service.put_block_blob_from_path(CONTAINER_NAME, blob_name, local_file)\n        except:\n            print \"something wrong happened when uploading the data %s\"%blob_name\n\n## Download Data from Blob\n\nUse the following methods to download data from a blob:\n1. get\\_blob\\_to\\_path\n2. get\\_blob\\_to\\_file\n3. get\\_blob\\_to\\_bytes\n4. get\\_blob\\_to\\_text \n\nThese methods that perform the necessary chunking when the size of the data exceeds 64 MB. \n\nThe following sample code downloads the contents of a blob in a container to a local file: \n\n    blob_service.get_blob_to_path(\"<your_container_name>\", \"<your_blob_name>\", \"<your_local_file_name>\")\n\nThe following sample code downloads all blobs from a container. It uses list\\_blobs to get the list of available blobs in the container and downloads them to a local directory. \n\n    from azure.storage import BlobService\n    from os.path import join\n    \n    # Set parameters here\n    ACCOUNT_NAME = \"<your_account_name>\"\n    ACCOUNT_KEY = \"<your_account_key>\"\n    CONTAINER_NAME = \"<your_container_name>\"\n    LOCAL_DIRECT = \"<your_local_directory>\"     \n    \n    blob_service = BlobService(account_name=ACCOUNT_NAME, account_key=ACCOUNT_KEY)\n    \n    # List all blobs and download them one by one\n    blobs = blob_service.list_blobs(CONTAINER_NAME)\n    for blob in blobs:\n        local_file = join(LOCAL_DIRECT, blob.name)\n        try:\n            blob_service.get_blob_to_path(CONTAINER_NAME, blob.name, local_file)\n        except:\n            print \"something wrong happened when downloading the data %s\"%blob.name\n\n"
}