<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="ja-jp" original="foo.file" tool-id="6329be41-b607-4f2f-9834-dcf69d8145fd" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="6329be41-b607-4f2f-9834-dcf69d8145fd" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group id="ecbc58a3-fa88-46b2-934d-88428daac94c">
        <trans-unit id="650149c8-35fe-46dd-a052-3db4dfacced5" xml:space="preserve">
          <source>ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9
title: PowerShell Snippets</source>
          <target state="new">ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9
title: PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="1b9d7551-4791-495b-85b2-031d6a537a85" xml:space="preserve">
          <source>PowerShell Snippets</source>
          <target state="new">PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="e9a9c1f8-6939-485a-91f4-45aa958993ae" xml:space="preserve">
          <source>Adding this sentence for testing HO-HB process.</source>
          <target state="new">Adding this sentence for testing HO-HB process.</target>
        </trans-unit>
        <trans-unit id="d07e2162-bb9b-461f-bd90-1c830df3d9c6" xml:space="preserve">
          <source>PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</source>
          <target state="new">PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</target>
        </trans-unit>
        <trans-unit id="eb117cac-7542-476f-bc56-cfb0c1187b90" xml:space="preserve">
          <source>All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</source>
          <target state="new">All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</target>
        </trans-unit>
        <trans-unit id="1cfe300b-3823-441b-8449-63c7efb024ba" xml:space="preserve">
          <source>If you aren't sure if you have the right permissions, type <bpt id="0f186e89-2510-41e1-91cf-0c12e50739b2">&lt;code&gt;</bpt>Get-VM<ept id="0f186e89-2510-41e1-91cf-0c12e50739b2">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</source>
          <target state="new">If you aren't sure if you have the right permissions, type <bpt id="0f186e89-2510-41e1-91cf-0c12e50739b2">&lt;code&gt;</bpt>Get-VM<ept id="0f186e89-2510-41e1-91cf-0c12e50739b2">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</target>
        </trans-unit>
        <trans-unit id="9b864574-2b09-4a35-950c-5087f156aa86" xml:space="preserve">
          <source>PowerShell Direct tools</source>
          <target state="new">PowerShell Direct tools</target>
        </trans-unit>
        <trans-unit id="1491f018-f8bd-4c58-95b5-81545bb428c0" xml:space="preserve">
          <source>All of the scripts and snippets in this section will rely on the following basics.</source>
          <target state="new">All of the scripts and snippets in this section will rely on the following basics.</target>
        </trans-unit>
        <trans-unit id="daa18f1f-5923-46fc-9673-4c7229b11852" xml:space="preserve">
          <source><bpt id="9178c550-f5ea-460c-b3bd-9cd28129d781">&lt;strong&gt;</bpt>Requirements<ept id="9178c550-f5ea-460c-b3bd-9cd28129d781">&lt;/strong&gt;</ept> :</source>
          <target state="new"><bpt id="9178c550-f5ea-460c-b3bd-9cd28129d781">&lt;strong&gt;</bpt>Requirements<ept id="9178c550-f5ea-460c-b3bd-9cd28129d781">&lt;/strong&gt;</ept> :</target>
        </trans-unit>
        <trans-unit id="d0faf5a9-8784-4c37-a4d3-ca297bb1ddc7" xml:space="preserve">
          <source>PowerShell Direct.</source>
          <target state="new">PowerShell Direct.</target>
        </trans-unit>
        <trans-unit id="5d146e0d-8a29-4cc2-b4c8-d0776a78d8c1" xml:space="preserve">
          <source>Windows 10 guest and host OS.</source>
          <target state="new">Windows 10 guest and host OS.</target>
        </trans-unit>
        <trans-unit id="8781b857-91b7-4a2e-a1c8-5ea9f4742944" xml:space="preserve">
          <source><bpt id="2dfa1d0c-2ec0-4cf9-a01f-1d6ff2e14e9c">&lt;strong&gt;</bpt>Common Variables<ept id="2dfa1d0c-2ec0-4cf9-a01f-1d6ff2e14e9c">&lt;/strong&gt;</ept> :  
<bpt id="16840f46-c26d-4bfe-b262-7efefd1aeae6">&lt;code&gt;</bpt>$VMName<ept id="16840f46-c26d-4bfe-b262-7efefd1aeae6">&lt;/code&gt;</ept> -- this is a string with the VMName.</source>
          <target state="new"><bpt id="2dfa1d0c-2ec0-4cf9-a01f-1d6ff2e14e9c">&lt;strong&gt;</bpt>Common Variables<ept id="2dfa1d0c-2ec0-4cf9-a01f-1d6ff2e14e9c">&lt;/strong&gt;</ept> :  
<bpt id="16840f46-c26d-4bfe-b262-7efefd1aeae6">&lt;code&gt;</bpt>$VMName<ept id="16840f46-c26d-4bfe-b262-7efefd1aeae6">&lt;/code&gt;</ept> -- this is a string with the VMName.</target>
        </trans-unit>
        <trans-unit id="a8955cf9-a5e0-45d0-8c07-e52a8d6338aa" xml:space="preserve">
          <source>See a list of available VMs with <bpt id="278824a4-5e82-4aa9-a0c8-6db42de2ad73">&lt;code&gt;</bpt>Get-VM<ept id="278824a4-5e82-4aa9-a0c8-6db42de2ad73">&lt;/code&gt;</ept>  
<bpt id="e3caaa20-2cbb-4b90-b325-61463af9e7e3">&lt;code&gt;</bpt>$cred<ept id="e3caaa20-2cbb-4b90-b325-61463af9e7e3">&lt;/code&gt;</ept> -- Credential for the guest OS.</source>
          <target state="new">See a list of available VMs with <bpt id="278824a4-5e82-4aa9-a0c8-6db42de2ad73">&lt;code&gt;</bpt>Get-VM<ept id="278824a4-5e82-4aa9-a0c8-6db42de2ad73">&lt;/code&gt;</ept>  
<bpt id="e3caaa20-2cbb-4b90-b325-61463af9e7e3">&lt;code&gt;</bpt>$cred<ept id="e3caaa20-2cbb-4b90-b325-61463af9e7e3">&lt;/code&gt;</ept> -- Credential for the guest OS.</target>
        </trans-unit>
        <trans-unit id="e689c192-6241-4d46-af6d-47772431257c" xml:space="preserve">
          <source>Can be populated using <bpt id="ed59fa7f-83f3-4f1a-b965-95a3a3b80205">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="ed59fa7f-83f3-4f1a-b965-95a3a3b80205">&lt;/code&gt;</ept></source>
          <target state="new">Can be populated using <bpt id="ed59fa7f-83f3-4f1a-b965-95a3a3b80205">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="ed59fa7f-83f3-4f1a-b965-95a3a3b80205">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="a54d04aa-a9fa-4d23-9aa9-196e6616cd5d" xml:space="preserve">
          <source>Check if the guest has booted</source>
          <target state="new">Check if the guest has booted</target>
        </trans-unit>
        <trans-unit id="6686e9aa-ae14-4740-acad-42c37a9a6e66" xml:space="preserve">
          <source>Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</source>
          <target state="new">Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</target>
        </trans-unit>
        <trans-unit id="11a10750-2794-4a02-88bb-b2ee03df9aaa" xml:space="preserve">
          <source>Use this command to check whether the guest has booted.</source>
          <target state="new">Use this command to check whether the guest has booted.</target>
        </trans-unit>
        <trans-unit id="c593ced5-e428-4e38-adb3-31be6772cab6" xml:space="preserve">
          <source><bpt id="98f12ac2-3f0d-43d4-96df-d16f9f828267">&lt;strong&gt;</bpt>Outcome<ept id="98f12ac2-3f0d-43d4-96df-d16f9f828267">&lt;/strong&gt;</ept>  
Prints a friendly message declaring the state of the guest OS.</source>
          <target state="new"><bpt id="98f12ac2-3f0d-43d4-96df-d16f9f828267">&lt;strong&gt;</bpt>Outcome<ept id="98f12ac2-3f0d-43d4-96df-d16f9f828267">&lt;/strong&gt;</ept>  
Prints a friendly message declaring the state of the guest OS.</target>
        </trans-unit>
        <trans-unit id="3800f53b-ab0e-4f5c-8df7-f03f4685126c" xml:space="preserve">
          <source>Script locking until the guest has booted</source>
          <target state="new">Script locking until the guest has booted</target>
        </trans-unit>
        <trans-unit id="903c6045-19ba-4464-ad0f-6307fcfe565b" xml:space="preserve">
          <source>The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</source>
          <target state="new">The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</target>
        </trans-unit>
        <trans-unit id="825ea995-ce6b-47a3-8db8-ed66a7162a99" xml:space="preserve">
          <source><bpt id="fa80590e-8126-4613-8d59-028490fbf292">&lt;strong&gt;</bpt>Outcome<ept id="fa80590e-8126-4613-8d59-028490fbf292">&lt;/strong&gt;</ept>  
Prints a friendly message and locks until the connection to the VM succeeds.</source>
          <target state="new"><bpt id="fa80590e-8126-4613-8d59-028490fbf292">&lt;strong&gt;</bpt>Outcome<ept id="fa80590e-8126-4613-8d59-028490fbf292">&lt;/strong&gt;</ept>  
Prints a friendly message and locks until the connection to the VM succeeds.</target>
        </trans-unit>
        <trans-unit id="ac1a75dd-0bde-464d-ab04-1a2a54da46b9" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="6b886b66-c89c-4fc8-afde-4fb173d234d1" xml:space="preserve">
          <source>Script locking until the guest has a network</source>
          <target state="new">Script locking until the guest has a network</target>
        </trans-unit>
        <trans-unit id="7392bfb8-3116-4ae7-8c9a-e61cac4c4790" xml:space="preserve">
          <source>With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</source>
          <target state="new">With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</target>
        </trans-unit>
        <trans-unit id="a14c3de4-44d8-4d6c-8f0f-d2e66c91e07e" xml:space="preserve">
          <source><bpt id="224cfc3e-0547-418a-bba2-73ef5bdf1df5">&lt;em&gt;</bpt>* Outcome *<ept id="224cfc3e-0547-418a-bba2-73ef5bdf1df5">&lt;/em&gt;</ept>
Locks until a DHCP lease is recieved.</source>
          <target state="new"><bpt id="224cfc3e-0547-418a-bba2-73ef5bdf1df5">&lt;em&gt;</bpt>* Outcome *<ept id="224cfc3e-0547-418a-bba2-73ef5bdf1df5">&lt;/em&gt;</ept>
Locks until a DHCP lease is recieved.</target>
        </trans-unit>
        <trans-unit id="9294fd98-6ea7-41df-8ff7-0ef629065138" xml:space="preserve">
          <source>Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</source>
          <target state="new">Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</target>
        </trans-unit>
        <trans-unit id="5a456793-594b-4918-b831-dab4974b76dc" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="792ebbb4-59d0-49bc-81e5-8fb9dc321f8b" xml:space="preserve">
          <source>Managing credentials with PowerShell</source>
          <target state="new">Managing credentials with PowerShell</target>
        </trans-unit>
        <trans-unit id="bd43027e-1fb4-40f9-aadc-9ed01bb0d77f" xml:space="preserve">
          <source>Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</source>
          <target state="new">Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</target>
        </trans-unit>
        <trans-unit id="12a98f96-15a9-4bea-952d-2759422a3b02" xml:space="preserve">
          <source>There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</source>
          <target state="new">There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</target>
        </trans-unit>
        <trans-unit id="7fad54ba-1bfb-4a07-a602-de68755a2084" xml:space="preserve">
          <source>The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</source>
          <target state="new">The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</target>
        </trans-unit>
        <trans-unit id="cba35483-0235-4d67-9ed9-49efa85ca3f4" xml:space="preserve">
          <source>This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</source>
          <target state="new">This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</target>
        </trans-unit>
        <trans-unit id="2778f11f-0dc7-41d9-8226-d96bf4ebedf4" xml:space="preserve">
          <source>In this scenario you can just run <bpt id="064b77a6-cc37-4ffb-8c4e-452e3270a97d">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="064b77a6-cc37-4ffb-8c4e-452e3270a97d">&lt;/code&gt;</ept>.</source>
          <target state="new">In this scenario you can just run <bpt id="064b77a6-cc37-4ffb-8c4e-452e3270a97d">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="064b77a6-cc37-4ffb-8c4e-452e3270a97d">&lt;/code&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="10bfc860-86e4-48bc-a0ef-2bda507b0f51" xml:space="preserve">
          <source>Let PowerShell prompt you for credentials  
If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</source>
          <target state="new">Let PowerShell prompt you for credentials  
If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</target>
        </trans-unit>
        <trans-unit id="270a1d25-8d99-430c-bf87-aab46a977700" xml:space="preserve">
          <source>Store credentials in a variable for reuse.</source>
          <target state="new">Store credentials in a variable for reuse.</target>
        </trans-unit>
        <trans-unit id="00ef00ed-f620-47a5-8019-46b6a83ddae8" xml:space="preserve">
          <source>Running a simple command like this:</source>
          <target state="new">Running a simple command like this:</target>
        </trans-unit>
        <trans-unit id="e7e2fc16-d3e8-4ac7-b1b5-2b0ecc56fcac" xml:space="preserve">
          <source>  Will mean that you only get prompted once per script/PowerShell session for your credentials.</source>
          <target state="new">  Will mean that you only get prompted once per script/PowerShell session for your credentials.</target>
        </trans-unit>
        <trans-unit id="dbc9887e-8c5d-46d2-addd-342ea4d55b21" xml:space="preserve">
          <source>Code your credentials into your scripts.</source>
          <target state="new">Code your credentials into your scripts.</target>
        </trans-unit>
        <trans-unit id="0fde05b3-8411-40f0-8c76-17fd5cfac443" xml:space="preserve">
          <source><bpt id="a7edb7d7-01e7-4d74-bbdb-423792c82809">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="a7edb7d7-01e7-4d74-bbdb-423792c82809">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="a7edb7d7-01e7-4d74-bbdb-423792c82809">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="a7edb7d7-01e7-4d74-bbdb-423792c82809">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="c2e7522a-7014-42ec-abe3-0aca4cc5ace1" xml:space="preserve">
          <source>Warning:  _Do not do this in a production system.</source>
          <target state="new">Warning:  _Do not do this in a production system.</target>
        </trans-unit>
        <trans-unit id="6e2d73a0-7238-4426-8f64-8862ecc96d4e" xml:space="preserve">
          <source>Do not do this with real passwords._</source>
          <target state="new">Do not do this with real passwords._</target>
        </trans-unit>
        <trans-unit id="8df5e5a0-1e71-4c98-9a50-a16bb28e9c18" xml:space="preserve">
          <source>You can hand craft a PSCredential object with some code like this:</source>
          <target state="new">You can hand craft a PSCredential object with some code like this:</target>
        </trans-unit>
        <trans-unit id="3c6e0c01-3a57-4441-9447-c444644c7b07" xml:space="preserve">
          <source>Grossly insecure - but useful for testing.</source>
          <target state="new">Grossly insecure - but useful for testing.</target>
        </trans-unit>
        <trans-unit id="710ee4fe-4dd9-4b8b-a8e0-7b77410ba6f4" xml:space="preserve">
          <source>Now you get no prompts at all in this session.</source>
          <target state="new">Now you get no prompts at all in this session.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>