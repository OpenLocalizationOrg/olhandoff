<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="ko-kr" original="1/5/2016 3:30:09 PM" tool-id="MarkdownTransformer" product-name="N/A" product-version="N/A" build-num="1">
    <header>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">565d71def9c15b19f10ec144ff29e82b9e205e31</xliffext:olfilehash>
      <tool tool-id="MarkdownTransformer" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group extype="content">
        <group id="101">
          <trans-unit id="101" xml:space="preserve">
            <source>Writing a custom DSC resource with PowerShell classes</source>
            <target state="new">Writing a custom DSC resource with PowerShell classes</target>
          </trans-unit>
          <trans-unit id="102" xml:space="preserve">
            <source>Applies To: Windows Windows PowerShell 5.0</source>
            <target state="new">Applies To: Windows Windows PowerShell 5.0</target>
          </trans-unit>
          <trans-unit id="103" xml:space="preserve">
            <source>With the introduction of PowerShell classes in Windows PowerShell 5.0, you can now define a DSC resource by creating a class.</source>
            <target state="new">With the introduction of PowerShell classes in Windows PowerShell 5.0, you can now define a DSC resource by creating a class.</target>
          </trans-unit>
          <trans-unit id="104" xml:space="preserve">
            <source>The class defines both the schema and the implementation of the resource, so there is no need to create a separate MOF file.</source>
            <target state="new">The class defines both the schema and the implementation of the resource, so there is no need to create a separate MOF file.</target>
          </trans-unit>
          <trans-unit id="105" xml:space="preserve">
            <source>The folder structure for a class-based resource is also simpler, because a <bpt id="2">&lt;strong&gt;</bpt>DSCResources<ept id="2">&lt;/strong&gt;</ept> folder is not necessary.</source>
            <target state="new">The folder structure for a class-based resource is also simpler, because a <bpt id="2">&lt;strong&gt;</bpt>DSCResources<ept id="2">&lt;/strong&gt;</ept> folder is not necessary.</target>
          </trans-unit>
          <trans-unit id="106" xml:space="preserve">
            <source>In a class-based DSC resource, the schema is defined as properties of the class which can be modified with attributes to specify the property type..</source>
            <target state="new">In a class-based DSC resource, the schema is defined as properties of the class which can be modified with attributes to specify the property type..</target>
          </trans-unit>
          <trans-unit id="107" xml:space="preserve">
            <source>The resource is implemented by <bpt id="2">&lt;strong&gt;</bpt>Get()<ept id="2">&lt;/strong&gt;</ept>, <bpt id="4">&lt;strong&gt;</bpt>Set()<ept id="4">&lt;/strong&gt;</ept>, and <bpt id="6">&lt;strong&gt;</bpt>Test()<ept id="6">&lt;/strong&gt;</ept> methods (equivalent to the <bpt id="8">&lt;strong&gt;</bpt>Get-TargetResource<ept id="8">&lt;/strong&gt;</ept>, <bpt id="10">&lt;strong&gt;</bpt>Set-TargetResource<ept id="10">&lt;/strong&gt;</ept>, and <bpt id="12">&lt;strong&gt;</bpt>Test-TargetResource<ept id="12">&lt;/strong&gt;</ept> functions in a script resource.</source>
            <target state="new">The resource is implemented by <bpt id="2">&lt;strong&gt;</bpt>Get()<ept id="2">&lt;/strong&gt;</ept>, <bpt id="4">&lt;strong&gt;</bpt>Set()<ept id="4">&lt;/strong&gt;</ept>, and <bpt id="6">&lt;strong&gt;</bpt>Test()<ept id="6">&lt;/strong&gt;</ept> methods (equivalent to the <bpt id="8">&lt;strong&gt;</bpt>Get-TargetResource<ept id="8">&lt;/strong&gt;</ept>, <bpt id="10">&lt;strong&gt;</bpt>Set-TargetResource<ept id="10">&lt;/strong&gt;</ept>, and <bpt id="12">&lt;strong&gt;</bpt>Test-TargetResource<ept id="12">&lt;/strong&gt;</ept> functions in a script resource.</target>
          </trans-unit>
          <trans-unit id="108" xml:space="preserve">
            <source>In this topic, we will create a simple resource named <bpt id="2">&lt;strong&gt;</bpt>FileResource<ept id="2">&lt;/strong&gt;</ept> that manages a file in a specified path.</source>
            <target state="new">In this topic, we will create a simple resource named <bpt id="2">&lt;strong&gt;</bpt>FileResource<ept id="2">&lt;/strong&gt;</ept> that manages a file in a specified path.</target>
          </trans-unit>
          <trans-unit id="109" xml:space="preserve">
            <source>For more information about DSC resources, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Build Custom Windows PowerShell Desired State Configuration Resources<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new">For more information about DSC resources, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Build Custom Windows PowerShell Desired State Configuration Resources<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
          <trans-unit id="110" xml:space="preserve">
            <source>Folder structure for a class resource</source>
            <target state="new">Folder structure for a class resource</target>
          </trans-unit>
          <trans-unit id="111" xml:space="preserve">
            <source>To implement a DSC custom resource with a PowerShell class, create the following folder structure.</source>
            <target state="new">To implement a DSC custom resource with a PowerShell class, create the following folder structure.</target>
          </trans-unit>
          <trans-unit id="112" xml:space="preserve">
            <source>The class is defined in <bpt id="2">&lt;strong&gt;</bpt>MyDscResource.psm1<ept id="2">&lt;/strong&gt;</ept> and the module manifest is defined in <bpt id="4">&lt;strong&gt;</bpt>MyDscResource.psd1<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">The class is defined in <bpt id="2">&lt;strong&gt;</bpt>MyDscResource.psm1<ept id="2">&lt;/strong&gt;</ept> and the module manifest is defined in <bpt id="4">&lt;strong&gt;</bpt>MyDscResource.psd1<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="113" xml:space="preserve">
            <source>Create the class</source>
            <target state="new">Create the class</target>
          </trans-unit>
          <trans-unit id="114" xml:space="preserve">
            <source>You use the class keyword to create a PowerShell class.</source>
            <target state="new">You use the class keyword to create a PowerShell class.</target>
          </trans-unit>
          <trans-unit id="115" xml:space="preserve">
            <source>To specify that a class is a DSC resource, use the <bpt id="2">&lt;strong&gt;</bpt>DscResource()<ept id="2">&lt;/strong&gt;</ept> attribute.</source>
            <target state="new">To specify that a class is a DSC resource, use the <bpt id="2">&lt;strong&gt;</bpt>DscResource()<ept id="2">&lt;/strong&gt;</ept> attribute.</target>
          </trans-unit>
          <trans-unit id="116" xml:space="preserve">
            <source>The name of the class is the name of the DSC resource.</source>
            <target state="new">The name of the class is the name of the DSC resource.</target>
          </trans-unit>
          <trans-unit id="117" xml:space="preserve">
            <source>Declare properties</source>
            <target state="new">Declare properties</target>
          </trans-unit>
          <trans-unit id="118" xml:space="preserve">
            <source>The DSC resource schema is defined as properties of the class.</source>
            <target state="new">The DSC resource schema is defined as properties of the class.</target>
          </trans-unit>
          <trans-unit id="119" xml:space="preserve">
            <source>We declare three properties as follows.</source>
            <target state="new">We declare three properties as follows.</target>
          </trans-unit>
          <trans-unit id="120" xml:space="preserve">
            <source>Notice that the properties are modified by attributes.</source>
            <target state="new">Notice that the properties are modified by attributes.</target>
          </trans-unit>
          <trans-unit id="121" xml:space="preserve">
            <source>The attribues map to equivalent attributes used in MOF classes as follows.</source>
            <target state="new">The attribues map to equivalent attributes used in MOF classes as follows.</target>
          </trans-unit>
          <trans-unit id="122" xml:space="preserve">
            <source>Property attribute in class MOF attribute   Description</source>
            <target state="new">Property attribute in class MOF attribute   Description</target>
          </trans-unit>
          <trans-unit id="123" xml:space="preserve">
            <source>DscProperty(Key)</source>
            <target state="new">DscProperty(Key)</target>
          </trans-unit>
          <trans-unit id="124" xml:space="preserve">
            <source>Key</source>
            <target state="new">Key</target>
          </trans-unit>
          <trans-unit id="125" xml:space="preserve">
            <source>The property is required.</source>
            <target state="new">The property is required.</target>
          </trans-unit>
          <trans-unit id="126" xml:space="preserve">
            <source>The property is a key.</source>
            <target state="new">The property is a key.</target>
          </trans-unit>
          <trans-unit id="127" xml:space="preserve">
            <source>The values of all properties marked as keys must combine to uniquely identify a resource instance within a configuration.</source>
            <target state="new">The values of all properties marked as keys must combine to uniquely identify a resource instance within a configuration.</target>
          </trans-unit>
          <trans-unit id="128" xml:space="preserve">
            <source>DscProperty(Mandatory)</source>
            <target state="new">DscProperty(Mandatory)</target>
          </trans-unit>
          <trans-unit id="129" xml:space="preserve">
            <source>Required</source>
            <target state="new">Required</target>
          </trans-unit>
          <trans-unit id="130" xml:space="preserve">
            <source>The property is required.</source>
            <target state="new">The property is required.</target>
          </trans-unit>
          <trans-unit id="131" xml:space="preserve">
            <source>DscProperty(NotConfigurable)</source>
            <target state="new">DscProperty(NotConfigurable)</target>
          </trans-unit>
          <trans-unit id="132" xml:space="preserve">
            <source>read</source>
            <target state="new">read</target>
          </trans-unit>
          <trans-unit id="133" xml:space="preserve">
            <source>The property is read-only.</source>
            <target state="new">The property is read-only.</target>
          </trans-unit>
          <trans-unit id="134" xml:space="preserve">
            <source>Properties marked with this attribute cannot be set by a configuration, but are populated by the Get() method when present.</source>
            <target state="new">Properties marked with this attribute cannot be set by a configuration, but are populated by the Get() method when present.</target>
          </trans-unit>
          <trans-unit id="135" xml:space="preserve">
            <source>DscProperty()</source>
            <target state="new">DscProperty()</target>
          </trans-unit>
          <trans-unit id="136" xml:space="preserve">
            <source>Write</source>
            <target state="new">Write</target>
          </trans-unit>
          <trans-unit id="137" xml:space="preserve">
            <source>The property is configurable, but it is not required.</source>
            <target state="new">The property is configurable, but it is not required.</target>
          </trans-unit>
          <trans-unit id="138" xml:space="preserve">
            <source>The <bpt id="2">&lt;strong&gt;</bpt>$Path<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>$SourcePath<ept id="4">&lt;/strong&gt;</ept> properties are both strings.</source>
            <target state="new">The <bpt id="2">&lt;strong&gt;</bpt>$Path<ept id="2">&lt;/strong&gt;</ept> and <bpt id="4">&lt;strong&gt;</bpt>$SourcePath<ept id="4">&lt;/strong&gt;</ept> properties are both strings.</target>
          </trans-unit>
          <trans-unit id="139" xml:space="preserve">
            <source>The <bpt id="2">&lt;strong&gt;</bpt>$CreationTime<ept id="2">&lt;/strong&gt;</ept> is a <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>DateTime<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept> property.</source>
            <target state="new">The <bpt id="2">&lt;strong&gt;</bpt>$CreationTime<ept id="2">&lt;/strong&gt;</ept> is a <bpt id="4CapsExtId1">&lt;link&gt;</bpt><bpt id="4CapsExtId2">&lt;linkText&gt;</bpt>DateTime<ept id="4CapsExtId2">&lt;/linkText&gt;</ept><bpt id="4CapsExtId3">&lt;title&gt;</bpt><ept id="4CapsExtId3">&lt;/title&gt;</ept><ept id="4CapsExtId1">&lt;/link&gt;</ept> property.</target>
          </trans-unit>
          <trans-unit id="140" xml:space="preserve">
            <source>The <bpt id="2">&lt;strong&gt;</bpt>$Ensure<ept id="2">&lt;/strong&gt;</ept> property is an enumeration type, defined as follows.</source>
            <target state="new">The <bpt id="2">&lt;strong&gt;</bpt>$Ensure<ept id="2">&lt;/strong&gt;</ept> property is an enumeration type, defined as follows.</target>
          </trans-unit>
          <trans-unit id="141" xml:space="preserve">
            <source>Implementing the methods</source>
            <target state="new">Implementing the methods</target>
          </trans-unit>
          <trans-unit id="142" xml:space="preserve">
            <source>The <bpt id="2">&lt;strong&gt;</bpt>Get()<ept id="2">&lt;/strong&gt;</ept>, <bpt id="4">&lt;strong&gt;</bpt>Set()<ept id="4">&lt;/strong&gt;</ept>, and <bpt id="6">&lt;strong&gt;</bpt>Test()<ept id="6">&lt;/strong&gt;</ept> methods are analogous to the <bpt id="8">&lt;strong&gt;</bpt>Get-TargetResource<ept id="8">&lt;/strong&gt;</ept>, <bpt id="10">&lt;strong&gt;</bpt>Set-TargetResource<ept id="10">&lt;/strong&gt;</ept>, and <bpt id="12">&lt;strong&gt;</bpt>Test-TargetResource<ept id="12">&lt;/strong&gt;</ept> functions in a script resource.</source>
            <target state="new">The <bpt id="2">&lt;strong&gt;</bpt>Get()<ept id="2">&lt;/strong&gt;</ept>, <bpt id="4">&lt;strong&gt;</bpt>Set()<ept id="4">&lt;/strong&gt;</ept>, and <bpt id="6">&lt;strong&gt;</bpt>Test()<ept id="6">&lt;/strong&gt;</ept> methods are analogous to the <bpt id="8">&lt;strong&gt;</bpt>Get-TargetResource<ept id="8">&lt;/strong&gt;</ept>, <bpt id="10">&lt;strong&gt;</bpt>Set-TargetResource<ept id="10">&lt;/strong&gt;</ept>, and <bpt id="12">&lt;strong&gt;</bpt>Test-TargetResource<ept id="12">&lt;/strong&gt;</ept> functions in a script resource.</target>
          </trans-unit>
          <trans-unit id="143" xml:space="preserve">
            <source>This code also includes the CopyFile() function, a helper function that copies the file from <bpt id="2">&lt;strong&gt;</bpt>$SourcePath<ept id="2">&lt;/strong&gt;</ept> to <bpt id="4">&lt;strong&gt;</bpt>$Path<ept id="4">&lt;/strong&gt;</ept>.</source>
            <target state="new">This code also includes the CopyFile() function, a helper function that copies the file from <bpt id="2">&lt;strong&gt;</bpt>$SourcePath<ept id="2">&lt;/strong&gt;</ept> to <bpt id="4">&lt;strong&gt;</bpt>$Path<ept id="4">&lt;/strong&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="144" xml:space="preserve">
            <source>The complete file</source>
            <target state="new">The complete file</target>
          </trans-unit>
          <trans-unit id="145" xml:space="preserve">
            <source>The complete class file follows.</source>
            <target state="new">The complete class file follows.</target>
          </trans-unit>
          <trans-unit id="146" xml:space="preserve">
            <source>Create a manifest</source>
            <target state="new">Create a manifest</target>
          </trans-unit>
          <trans-unit id="147" xml:space="preserve">
            <source>To make a class-based resource available to the DSC engine, you must include a <bpt id="2">&lt;strong&gt;</bpt>DscResourcesToExport<ept id="2">&lt;/strong&gt;</ept> statement in the manifest file that instructs the module to export the resource.</source>
            <target state="new">To make a class-based resource available to the DSC engine, you must include a <bpt id="2">&lt;strong&gt;</bpt>DscResourcesToExport<ept id="2">&lt;/strong&gt;</ept> statement in the manifest file that instructs the module to export the resource.</target>
          </trans-unit>
          <trans-unit id="148" xml:space="preserve">
            <source>Our manifest looks like this:</source>
            <target state="new">Our manifest looks like this:</target>
          </trans-unit>
          <trans-unit id="149" xml:space="preserve">
            <source>Test the resource</source>
            <target state="new">Test the resource</target>
          </trans-unit>
          <trans-unit id="150" xml:space="preserve">
            <source>After saving the class and manifest files in the folder structure as described earlier, you can create a configuration that uses the new resource.</source>
            <target state="new">After saving the class and manifest files in the folder structure as described earlier, you can create a configuration that uses the new resource.</target>
          </trans-unit>
          <trans-unit id="151" xml:space="preserve">
            <source>For information about how to run a DSC configuration, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Enacting configurations<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</source>
            <target state="new">For information about how to run a DSC configuration, see <bpt id="2CapsExtId1">&lt;link&gt;</bpt><bpt id="2CapsExtId2">&lt;linkText&gt;</bpt>Enacting configurations<ept id="2CapsExtId2">&lt;/linkText&gt;</ept><bpt id="2CapsExtId3">&lt;title&gt;</bpt><ept id="2CapsExtId3">&lt;/title&gt;</ept><ept id="2CapsExtId1">&lt;/link&gt;</ept>.</target>
          </trans-unit>
          <trans-unit id="152" xml:space="preserve">
            <source>The following configuration will check to see whether the file at <bpt id="2">&lt;code&gt;</bpt>c:\test\test.txt<ept id="2">&lt;/code&gt;</ept> exists, and, if not, copies the file from <bpt id="4">&lt;code&gt;</bpt>c:\test.txt<ept id="4">&lt;/code&gt;</ept> (you should create <bpt id="6">&lt;code&gt;</bpt>c:\test.txt<ept id="6">&lt;/code&gt;</ept> before you run the configuration).</source>
            <target state="new">The following configuration will check to see whether the file at <bpt id="2">&lt;code&gt;</bpt>c:\test\test.txt<ept id="2">&lt;/code&gt;</ept> exists, and, if not, copies the file from <bpt id="4">&lt;code&gt;</bpt>c:\test.txt<ept id="4">&lt;/code&gt;</ept> (you should create <bpt id="6">&lt;code&gt;</bpt>c:\test.txt<ept id="6">&lt;/code&gt;</ept> before you run the configuration).</target>
          </trans-unit>
          <trans-unit id="153" xml:space="preserve">
            <source>See Also</source>
            <target state="new">See Also</target>
          </trans-unit>
          <trans-unit id="154" xml:space="preserve">
            <source>Concepts</source>
            <target state="new">Concepts</target>
          </trans-unit>
          <trans-unit id="155" xml:space="preserve">
            <source><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Build Custom Windows PowerShell Desired State Configuration Resources<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></source>
            <target state="new"><bpt id="1CapsExtId1">&lt;link&gt;</bpt><bpt id="1CapsExtId2">&lt;linkText&gt;</bpt>Build Custom Windows PowerShell Desired State Configuration Resources<ept id="1CapsExtId2">&lt;/linkText&gt;</ept><bpt id="1CapsExtId3">&lt;title&gt;</bpt><ept id="1CapsExtId3">&lt;/title&gt;</ept><ept id="1CapsExtId1">&lt;/link&gt;</ept></target>
          </trans-unit>
        </group>
      </group>
    </body>
  </file>
</xliff>