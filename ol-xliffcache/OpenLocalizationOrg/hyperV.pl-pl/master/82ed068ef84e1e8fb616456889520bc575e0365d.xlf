<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="pl-pl">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">acomdc_nonhi</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">82ed068ef84e1e8fb616456889520bc575e0365d</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1457980" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Create a simulated device app</source>
          <target state="new">Create a simulated device app</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>In this section, you'll create a Windows console app that simulates a device that sends device-to-cloud messages to an IoT hub.</source>
          <target state="new">In this section, you'll create a Windows console app that simulates a device that sends device-to-cloud messages to an IoT hub.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>In Visual Studio, add a new Visual C# Windows Classic Desktop project to the current solution using the <bpt id="p1">**</bpt>Console  Application<ept id="p1">**</ept> project template.</source>
          <target state="new">In Visual Studio, add a new Visual C# Windows Classic Desktop project to the current solution using the <bpt id="p1">**</bpt>Console  Application<ept id="p1">**</ept> project template.</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Name the project <bpt id="p1">**</bpt>SimulatedDevice<ept id="p1">**</ept>.</source>
          <target state="new">Name the project <bpt id="p1">**</bpt>SimulatedDevice<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>In Solution Explorer, right-click the <bpt id="p1">**</bpt>SimulatedDevice<ept id="p1">**</ept> project, and then click <bpt id="p2">**</bpt>Manage NuGet Packages<ept id="p2">**</ept>.</source>
          <target state="new">In Solution Explorer, right-click the <bpt id="p1">**</bpt>SimulatedDevice<ept id="p1">**</ept> project, and then click <bpt id="p2">**</bpt>Manage NuGet Packages<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>NuGet Package Manager<ept id="p1">**</ept> window, select <bpt id="p2">**</bpt>Browse<ept id="p2">**</ept>, search for <bpt id="p3">**</bpt>Microsoft.Azure.Devices.Client<ept id="p3">**</ept>, click <bpt id="p4">**</bpt>Install<ept id="p4">**</ept> to install the <bpt id="p5">**</bpt>Microsoft.Azure.Devices.Client<ept id="p5">**</ept> package, and accept the terms of use.</source>
          <target state="new">In the <bpt id="p1">**</bpt>NuGet Package Manager<ept id="p1">**</ept> window, select <bpt id="p2">**</bpt>Browse<ept id="p2">**</ept>, search for <bpt id="p3">**</bpt>Microsoft.Azure.Devices.Client<ept id="p3">**</ept>, click <bpt id="p4">**</bpt>Install<ept id="p4">**</ept> to install the <bpt id="p5">**</bpt>Microsoft.Azure.Devices.Client<ept id="p5">**</ept> package, and accept the terms of use.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This downloads, installs, and adds a reference to the <bpt id="p1">[</bpt>Azure IoT - Device SDK NuGet package<ept id="p1">][lnk-device-nuget]</ept>.</source>
          <target state="new">This downloads, installs, and adds a reference to the <bpt id="p1">[</bpt>Azure IoT - Device SDK NuGet package<ept id="p1">][lnk-device-nuget]</ept>.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Add the following <ph id="ph1">`using`</ph> statement at the top of the <bpt id="p1">**</bpt>Program.cs<ept id="p1">**</ept> file:</source>
          <target state="new">Add the following <ph id="ph1">`using`</ph> statement at the top of the <bpt id="p1">**</bpt>Program.cs<ept id="p1">**</ept> file:</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Add the following fields to the <bpt id="p1">**</bpt>Program<ept id="p1">**</ept> class, substituting the placeholder values with the IoT hub hostname you retrieved in the <bpt id="p2">*</bpt>Create an IoT hub<ept id="p2">*</ept> section and the device key retrieved in the <bpt id="p3">*</bpt>Create a device identity<ept id="p3">*</ept> section:</source>
          <target state="new">Add the following fields to the <bpt id="p1">**</bpt>Program<ept id="p1">**</ept> class, substituting the placeholder values with the IoT hub hostname you retrieved in the <bpt id="p2">*</bpt>Create an IoT hub<ept id="p2">*</ept> section and the device key retrieved in the <bpt id="p3">*</bpt>Create a device identity<ept id="p3">*</ept> section:</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Add the following method to the <bpt id="p1">**</bpt>Program<ept id="p1">**</ept> class:</source>
          <target state="new">Add the following method to the <bpt id="p1">**</bpt>Program<ept id="p1">**</ept> class:</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This method sends a new device-to-cloud message every second.</source>
          <target state="new">This method sends a new device-to-cloud message every second.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The message contains a JSON-serialized object with the deviceId and a randomly generated number to simulate a wind speed sensor.</source>
          <target state="new">The message contains a JSON-serialized object with the deviceId and a randomly generated number to simulate a wind speed sensor.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Finally, add the following lines to the <bpt id="p1">**</bpt>Main<ept id="p1">**</ept> method:</source>
          <target state="new">Finally, add the following lines to the <bpt id="p1">**</bpt>Main<ept id="p1">**</ept> method:</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>By default, the <bpt id="p1">**</bpt>Create<ept id="p1">**</ept> method creates a <bpt id="p2">**</bpt>DeviceClient<ept id="p2">**</ept> that uses the AMQP protocol to communicate with IoT Hub.</source>
          <target state="new">By default, the <bpt id="p1">**</bpt>Create<ept id="p1">**</ept> method creates a <bpt id="p2">**</bpt>DeviceClient<ept id="p2">**</ept> that uses the AMQP protocol to communicate with IoT Hub.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>To use the HTTPS protocol, use the override of the <bpt id="p1">**</bpt>Create<ept id="p1">**</ept> method that enables you to specify the protocol.</source>
          <target state="new">To use the HTTPS protocol, use the override of the <bpt id="p1">**</bpt>Create<ept id="p1">**</ept> method that enables you to specify the protocol.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If you choose to use the HTTPS protocol, you should also add the <bpt id="p1">**</bpt>Microsoft.AspNet.WebApi.Client<ept id="p1">**</ept> NuGet package to your project to include the <bpt id="p2">**</bpt>System.Net.Http.Formatting<ept id="p2">**</ept> namespace.</source>
          <target state="new">If you choose to use the HTTPS protocol, you should also add the <bpt id="p1">**</bpt>Microsoft.AspNet.WebApi.Client<ept id="p1">**</ept> NuGet package to your project to include the <bpt id="p2">**</bpt>System.Net.Http.Formatting<ept id="p2">**</ept> namespace.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> To keep things simple, this tutorial does not implement any retry policy.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> To keep things simple, this tutorial does not implement any retry policy.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>In production code, you should implement retry policies (such as an exponential backoff), as suggested in the MSDN article <bpt id="p1">[</bpt>Transient Fault Handling<ept id="p1">][lnk-transient-faults]</ept>.</source>
          <target state="new">In production code, you should implement retry policies (such as an exponential backoff), as suggested in the MSDN article <bpt id="p1">[</bpt>Transient Fault Handling<ept id="p1">][lnk-transient-faults]</ept>.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>