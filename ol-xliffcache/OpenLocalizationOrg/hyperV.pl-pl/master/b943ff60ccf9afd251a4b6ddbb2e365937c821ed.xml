{
  "nodes": [
    {
      "content": "Call custom API from iOS app",
      "pos": [
        5,
        33
      ]
    },
    {
      "content": "To call this custom API from an iOS client, use the <ph id=\"ph1\">`MSClient invokeAPI`</ph> method.",
      "pos": [
        35,
        115
      ]
    },
    {
      "content": "There are two versions of this method, one for JSON-formatted requests, and one for any data type:",
      "pos": [
        116,
        214
      ]
    },
    {
      "pos": [
        988,
        1109
      ],
      "content": "For example, to send a JSON request to a custom API named \"sendEmail\", pass an <ph id=\"ph1\">`NSDictionary`</ph> for the request parameters:"
    },
    {
      "content": "If you need the data returned then you can use something like this:",
      "pos": [
        1381,
        1448
      ]
    }
  ],
  "content": "\n### Call custom API from iOS app\n\nTo call this custom API from an iOS client, use the `MSClient invokeAPI` method. There are two versions of this method, one for JSON-formatted requests, and one for any data type:\n\n    /// Invokes a user-defined API of the Mobile Service.  The HTTP request and\n    /// response content will be treated as JSON.\n    -(void)invokeAPI:(NSString *)APIName\n                body:(id)body\n          HTTPMethod:(NSString *)method\n          parameters:(NSDictionary *)parameters\n             headers:(NSDictionary *)headers\n          completion:(MSAPIBlock)completion;\n\n    /// Invokes a user-defined API of the Mobile Service.  The HTTP request and\n    /// response content can be of any media type.\n    -(void)invokeAPI:(NSString *)APIName\n                data:(NSData *)data\n          HTTPMethod:(NSString *)method\n          parameters:(NSDictionary *)parameters\n             headers:(NSDictionary *)headers\n          completion:(MSAPIDataBlock)completion;\n\n\nFor example, to send a JSON request to a custom API named \"sendEmail\", pass an `NSDictionary` for the request parameters:\n\n    NSDictionary *emailHeader = @{ @\"to\": @\"email.com\", @\"subject\" : @\"value\" };\n\n    [self.client invokeAPI:@\"sendEmail\"\n         body:emailBody\n         HTTPMethod:@\"POST\"\n         parameters:emailHeader\n         headers:nil\n         completion:completion ];\n        \nIf you need the data returned then you can use something like this:\n\n    [self.client invokeAPI:apiName\n                 body:yourBody\n           HTTPMethod:httpMethod\n           parameters:parameters\n              headers:headers\n           completion:  ^(NSData *result,\n                          NSHTTPURLResponse *response,\n                          NSError *error){\n               // error is nil if no error occured\n               if(error) { \n                   NSLog(@\"ERROR %@\", error);\n               } else {\n                   \n        // do something with the result\n               }\n               \n               \n           }];\n\n        \n\n"
}