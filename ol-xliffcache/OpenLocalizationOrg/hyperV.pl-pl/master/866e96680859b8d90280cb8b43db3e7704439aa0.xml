{
  "nodes": [
    {
      "content": "How to Use the JavaScript SDK for Azure Mobile Apps",
      "pos": [
        27,
        78
      ]
    },
    {
      "content": "How to Use v for Azure Mobile Apps",
      "pos": [
        97,
        131
      ]
    },
    {
      "content": "How to Use the JavaScript Client Library for Azure Mobile Apps",
      "pos": [
        465,
        527
      ]
    },
    {
      "content": "This guide teaches you to perform common scenarios using the latest [JavaScript SDK for Azure Mobile Apps].",
      "pos": [
        653,
        760
      ]
    },
    {
      "content": "If you are new to Azure Mobile",
      "pos": [
        761,
        791
      ]
    },
    {
      "content": "Apps, first complete <bpt id=\"p1\">[</bpt><ept id=\"p1\">Azure Mobile Apps Quick Start]</ept> to create a backend and create a table.",
      "pos": [
        792,
        884
      ]
    },
    {
      "content": "In this guide, we focus on using the mobile",
      "pos": [
        885,
        928
      ]
    },
    {
      "content": "backend in HTML/JavaScript Web applications.",
      "pos": [
        929,
        973
      ]
    },
    {
      "pos": [
        977,
        1020
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"Setup\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>Setup and Prerequisites"
    },
    {
      "content": "This guide assumes that you have created a backend with a table.",
      "pos": [
        1022,
        1086
      ]
    },
    {
      "content": "This guide assumes that the table has the same schema as the tables in those",
      "pos": [
        1087,
        1163
      ]
    },
    {
      "content": "tutorials.",
      "pos": [
        1164,
        1174
      ]
    },
    {
      "pos": [
        1176,
        1258
      ],
      "content": "Installing the Azure Mobile Apps JavaScript SDK can be done via the <ph id=\"ph1\">`npm`</ph> command:"
    },
    {
      "content": "Once installed, the library is located in <ph id=\"ph1\">`node_modules/azure-mobile-apps-client/dist/MobileServices.Web.min.js`</ph>.",
      "pos": [
        1313,
        1426
      ]
    },
    {
      "content": "Copy this file to your web area.",
      "pos": [
        1428,
        1460
      ]
    },
    {
      "content": "The library can also be used as an ES2015 module, within CommonJS environments such as Browserify and",
      "pos": [
        1529,
        1630
      ]
    },
    {
      "content": "Webpack and as an AMD library.",
      "pos": [
        1631,
        1661
      ]
    },
    {
      "content": "For example:",
      "pos": [
        1663,
        1675
      ]
    },
    {
      "pos": [
        1961,
        2006
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"auth\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>How to: Authenticate Users"
    },
    {
      "content": "Azure App Service supports authenticating and authorizing app users using a variety of external identity",
      "pos": [
        2008,
        2112
      ]
    },
    {
      "content": "providers: Facebook, Google, Microsoft Account, and Twitter.",
      "pos": [
        2113,
        2173
      ]
    },
    {
      "content": "You can set permissions on tables to restrict",
      "pos": [
        2176,
        2221
      ]
    },
    {
      "content": "access for specific operations to only authenticated users.",
      "pos": [
        2222,
        2281
      ]
    },
    {
      "content": "You can also use the identity of authenticated",
      "pos": [
        2282,
        2328
      ]
    },
    {
      "content": "users to implement authorization rules in server scripts.",
      "pos": [
        2329,
        2386
      ]
    },
    {
      "content": "For more information, see the <bpt id=\"p1\">[</bpt><ept id=\"p1\">Get started with authentication]</ept> tutorial.",
      "pos": [
        2387,
        2460
      ]
    },
    {
      "content": "Two authentication flows are supported: a server flow and a client flow.",
      "pos": [
        2462,
        2534
      ]
    },
    {
      "content": "The server flow provides the simplest",
      "pos": [
        2536,
        2573
      ]
    },
    {
      "content": "authentication experience, as it relies on the provider's web authentication interface.",
      "pos": [
        2574,
        2661
      ]
    },
    {
      "content": "The client flow allows for",
      "pos": [
        2662,
        2688
      ]
    },
    {
      "content": "deeper integration with device-specific capabilities such as single-sign-on as it relies on provider-specific SDKs.",
      "pos": [
        2689,
        2804
      ]
    },
    {
      "pos": [
        2926,
        2997
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"register-for-push\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>How to: Register for Push Notifications"
    },
    {
      "content": "Install the <bpt id=\"p1\">[</bpt><ept id=\"p1\">phonegap-plugin-push]</ept> to handle push notifications.",
      "pos": [
        2999,
        3063
      ]
    },
    {
      "content": "This can be easily added using the <ph id=\"ph1\">`cordova plugin add`</ph>",
      "pos": [
        3065,
        3120
      ]
    },
    {
      "content": "command on the command line, or via the Git plugin installer within Visual Studio.",
      "pos": [
        3121,
        3203
      ]
    },
    {
      "content": "The following code in your Apache",
      "pos": [
        3205,
        3238
      ]
    },
    {
      "content": "Cordova app will register your device for push notifications:",
      "pos": [
        3239,
        3300
      ]
    },
    {
      "content": "Use the Notification Hubs SDK to send push notifications from the server.",
      "pos": [
        4248,
        4321
      ]
    },
    {
      "content": "You should never",
      "pos": [
        4323,
        4339
      ]
    },
    {
      "content": "send push notifications directly from clients as that could be used to trigger a denial of",
      "pos": [
        4340,
        4430
      ]
    },
    {
      "content": "service attack against Notification Hubs or the PNS.",
      "pos": [
        4431,
        4483
      ]
    }
  ],
  "content": "<properties\n    pageTitle=\"How to Use the JavaScript SDK for Azure Mobile Apps\"\n    description=\"How to Use v for Azure Mobile Apps\"\n    services=\"app-service\\mobile\"\n    documentationCenter=\"javascript\"\n    authors=\"adrianhall\"\n    manager=\"dwrede\"\n    editor=\"\"/>\n\n<tags\n    ms.service=\"app-service-mobile\"\n    ms.workload=\"mobile\"\n    ms.tgt_pltfrm=\"html\"\n    ms.devlang=\"javascript\"\n    ms.topic=\"article\"\n    ms.date=\"03/07/2016\"\n    ms.author=\"adrianha\"/>\n\n# How to Use the JavaScript Client Library for Azure Mobile Apps\n\n[AZURE.INCLUDE [app-service-mobile-selector-client-library](../../includes/app-service-mobile-selector-client-library.md)]\n\nThis guide teaches you to perform common scenarios using the latest [JavaScript SDK for Azure Mobile Apps]. If you are new to Azure Mobile\nApps, first complete [Azure Mobile Apps Quick Start] to create a backend and create a table. In this guide, we focus on using the mobile\nbackend in HTML/JavaScript Web applications.\n\n##<a name=\"Setup\"></a>Setup and Prerequisites\n\nThis guide assumes that you have created a backend with a table. This guide assumes that the table has the same schema as the tables in those\ntutorials.\n\nInstalling the Azure Mobile Apps JavaScript SDK can be done via the `npm` command:\n\n```\nnpm install azure-mobile-apps-client --save\n```\n\nOnce installed, the library is located in `node_modules/azure-mobile-apps-client/dist/MobileServices.Web.min.js`.  Copy this file to your web area.\n\n```\n<script src=\"path/to/MobileServices.Web.min.js\"></script>\n```\n\nThe library can also be used as an ES2015 module, within CommonJS environments such as Browserify and\nWebpack and as an AMD library.  For example:\n\n```\n# For ECMAScript 5.1 CommonJS\nvar WindowsAzure = require('azure-mobile-apps-client');\n# For ES2015 modules\nimport * as WindowsAzure from 'azure-mobile-apps-client';\n```\n\n[AZURE.INCLUDE [app-service-mobile-html-js-library](../../includes/app-service-mobile-html-js-library.md)]\n\n##<a name=\"auth\"></a>How to: Authenticate Users\n\nAzure App Service supports authenticating and authorizing app users using a variety of external identity\nproviders: Facebook, Google, Microsoft Account, and Twitter.   You can set permissions on tables to restrict\naccess for specific operations to only authenticated users. You can also use the identity of authenticated\nusers to implement authorization rules in server scripts. For more information, see the [Get started with authentication] tutorial.\n\nTwo authentication flows are supported: a server flow and a client flow.  The server flow provides the simplest\nauthentication experience, as it relies on the provider's web authentication interface. The client flow allows for\ndeeper integration with device-specific capabilities such as single-sign-on as it relies on provider-specific SDKs.\n\n[AZURE.INCLUDE [app-service-mobile-html-js-auth-library](../../includes/app-service-mobile-html-js-auth-library.md)]\n\n##<a name=\"register-for-push\"></a>How to: Register for Push Notifications\n\nInstall the [phonegap-plugin-push] to handle push notifications.  This can be easily added using the `cordova plugin add`\ncommand on the command line, or via the Git plugin installer within Visual Studio.  The following code in your Apache\nCordova app will register your device for push notifications:\n\n```\nvar pushOptions = {\n    android: {\n        senderId: '<from-gcm-console>'\n    },\n    ios: {\n        alert: true,\n        badge: true,\n        sound: true\n    },\n    windows: {\n    }\n};\npushHandler = PushNotification.init(pushOptions);\n\npushHandler.on('registration', function (data) {\n    registrationId = data.registrationId;\n    // For cross-platform, you can use the device plugin to determine the device\n    // Best is to use device.platform\n    var name = 'gcm'; // For android - default\n    if (device.platform.toLowerCase() === 'ios')\n        name = 'apns';\n    if (device.platform.toLowerCase().substring(0, 3) === 'win')\n        name = 'wns';\n    client.push.register(name, registrationId);\n});\n\npushHandler.on('notification', function (data) {\n    // data is an object and is whatever is sent by the PNS - check the format\n    // for your particular PNS\n});\n\npushHandler.on('error', function (error) {\n    // Handle errors\n});\n```\n\nUse the Notification Hubs SDK to send push notifications from the server.  You should never\nsend push notifications directly from clients as that could be used to trigger a denial of\nservice attack against Notification Hubs or the PNS.\n\n<!-- URLs. -->\n[Azure Mobile Apps Quick Start]: app-service-mobile-cordova-get-started.md\n[Get started with authentication]: app-service-mobile-cordova-get-started-users.md\n[Add authentication to your app]: app-service-mobile-cordova-get-started-users.md\n\n[Apache Cordova Plugin for Azure Mobile Apps]: https://www.npmjs.com/package/cordova-plugin-ms-azure-mobile-apps\n[your first Apache Cordova app]: http://cordova.apache.org/#getstarted\n[phonegap-facebook-plugin]: https://github.com/wizcorp/phonegap-facebook-plugin\n[phonegap-plugin-push]: https://www.npmjs.com/package/phonegap-plugin-push\n[cordova-plugin-device]: https://www.npmjs.com/package/cordova-plugin-device\n[cordova-plugin-inappbrowser]: https://www.npmjs.com/package/cordova-plugin-inappbrowser\n[Query object documentation]: https://msdn.microsoft.com/en-us/library/azure/jj613353.aspx\n\n"
}