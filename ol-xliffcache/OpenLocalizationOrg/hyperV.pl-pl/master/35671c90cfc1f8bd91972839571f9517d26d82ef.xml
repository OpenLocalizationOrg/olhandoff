{
  "nodes": [
    {
      "content": "The Azure CLI and API Apps | Microsoft Azure",
      "pos": [
        27,
        71
      ]
    },
    {
      "content": "How to use the Microsoft Azure Command-line Interface (CLI) for Mac, Linux, and Windows with Azure API Apps.",
      "pos": [
        90,
        198
      ]
    },
    {
      "content": "The Azure Command-line Interface (CLI) and API apps",
      "pos": [
        528,
        579
      ]
    },
    {
      "content": "This article shows how to create, manage, and delete API apps in Azure App Service, using the Azure Command-Line Interface (CLI) for Mac, Linux, and Windows.",
      "pos": [
        581,
        738
      ]
    },
    {
      "content": "Prerequisites",
      "pos": [
        744,
        757
      ]
    },
    {
      "content": "This article assumes you have installed the Azure CLI and know how to perform basic tasks.",
      "pos": [
        759,
        849
      ]
    },
    {
      "content": "For an introduction to the CLI, see <bpt id=\"p1\">[</bpt>Install and Configure the Azure CLI<ept id=\"p1\">](../xplat-cli-install.md)</ept>.",
      "pos": [
        850,
        949
      ]
    },
    {
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> The instructions for <bpt id=\"p1\">[</bpt>connecting to an Azure subscription <ept id=\"p1\">](../xplat-cli-connect.md)</ept> offer two alternatives:  log in using a work or school account, and download a <bpt id=\"p2\">*</bpt>.publishsettings<ept id=\"p2\">*</ept> file.",
      "pos": [
        954,
        1155
      ]
    },
    {
      "content": "For API apps, the <bpt id=\"p1\">*</bpt>.publishsettings<ept id=\"p1\">*</ept> file authentication method will not work.",
      "pos": [
        1156,
        1234
      ]
    },
    {
      "content": "This is because you have to use Resource Management mode (introduced in the next section) to work with API apps, and the <bpt id=\"p1\">*</bpt>.publishsettings<ept id=\"p1\">*</ept> file authentication method doesn't work with Resource Manager.",
      "pos": [
        1235,
        1437
      ]
    },
    {
      "content": "Enable Resource Management mode",
      "pos": [
        1443,
        1474
      ]
    },
    {
      "content": "The CLI can be used in <bpt id=\"p1\">[</bpt>Service Management (asm)<ept id=\"p1\">](../virtual-machines/virtual-machines-command-line-tools.md)</ept> mode or <bpt id=\"p2\">[</bpt>Resource Management (arm)<ept id=\"p2\">](../xplat-cli-azure-resource-manager.md)</ept> mode.",
      "pos": [
        1476,
        1667
      ]
    },
    {
      "content": "For API apps you have to use Resource Management mode.",
      "pos": [
        1668,
        1722
      ]
    },
    {
      "content": "Because <ph id=\"ph1\">`arm`</ph> mode is not enabled by default, use the <ph id=\"ph2\">`config mode arm`</ph> command to enable it.",
      "pos": [
        1724,
        1817
      ]
    },
    {
      "content": "List commands available for working with API apps",
      "pos": [
        1849,
        1898
      ]
    },
    {
      "pos": [
        1900,
        1996
      ],
      "content": "To see all the commands currently available for working with API apps, run the <ph id=\"ph1\">`apiapp`</ph> command."
    },
    {
      "content": "List all API apps in a subscription or resource group",
      "pos": [
        2019,
        2072
      ]
    },
    {
      "pos": [
        2074,
        2179
      ],
      "content": "To list all the API apps you have in your subscription, run the <ph id=\"ph1\">`apiapp list`</ph> command with no parameters."
    },
    {
      "content": "The list shows the resource group, API app name, package ID, and URL of each API app.",
      "pos": [
        2204,
        2289
      ]
    },
    {
      "pos": [
        2806,
        2886
      ],
      "content": "To limit the list to a specified resource group, add the group (<ph id=\"ph1\">`-g`</ph>) parameter."
    },
    {
      "content": "For example:",
      "pos": [
        2936,
        2948
      ]
    },
    {
      "pos": [
        2984,
        3082
      ],
      "content": "To add API app version and access level information to the list, add the details (<ph id=\"ph1\">`-d`</ph>) parameter."
    },
    {
      "pos": [
        3110,
        3179
      ],
      "content": "The <ph id=\"ph1\">`list`</ph> output with the additional fields looks like this example:"
    },
    {
      "content": "List details about an API app",
      "pos": [
        3780,
        3809
      ]
    },
    {
      "pos": [
        3811,
        3931
      ],
      "content": "To list details for one API app, use the <ph id=\"ph1\">`apiapp show`</ph> command with the group (<ph id=\"ph2\">`-g`</ph>) and API app name (<ph id=\"ph3\">`-n`</ph>) parameters."
    },
    {
      "content": "For example:",
      "pos": [
        3999,
        4011
      ]
    },
    {
      "content": "The output looks like this:",
      "pos": [
        4064,
        4091
      ]
    },
    {
      "content": "Create an API app",
      "pos": [
        4648,
        4665
      ]
    },
    {
      "content": "There are two ways to create an API app.",
      "pos": [
        4667,
        4707
      ]
    },
    {
      "content": "You can use imperative CLI commands to create Azure resources individually, or you can use declarative syntax in a template to define all of the required resources together and deploy that template with a CLI command.",
      "pos": [
        4708,
        4925
      ]
    },
    {
      "content": "For the declarative approach, see <bpt id=\"p1\">[</bpt>Next steps<ept id=\"p1\">](#next-steps)</ept>.",
      "pos": [
        4926,
        4986
      ]
    },
    {
      "content": "To create an API app using the imperative approach, perform the following steps:",
      "pos": [
        4988,
        5068
      ]
    },
    {
      "content": "Choose a valid location",
      "pos": [
        5073,
        5096
      ]
    },
    {
      "content": "Create or find a resource group to use",
      "pos": [
        5100,
        5138
      ]
    },
    {
      "content": "Create or find an App Service plan to use",
      "pos": [
        5142,
        5183
      ]
    },
    {
      "content": "Create the API app",
      "pos": [
        5187,
        5205
      ]
    },
    {
      "content": "Choose a valid location",
      "pos": [
        5211,
        5234
      ]
    },
    {
      "content": "When you create a resource group, you need to specify a location.",
      "pos": [
        5236,
        5301
      ]
    },
    {
      "content": "Here are some of the locations that are valid for API apps.",
      "pos": [
        5302,
        5361
      ]
    },
    {
      "content": "East US",
      "pos": [
        5365,
        5372
      ]
    },
    {
      "content": "West US",
      "pos": [
        5375,
        5382
      ]
    },
    {
      "content": "South Central US",
      "pos": [
        5385,
        5401
      ]
    },
    {
      "content": "North Europe",
      "pos": [
        5404,
        5416
      ]
    },
    {
      "content": "East Asia",
      "pos": [
        5419,
        5428
      ]
    },
    {
      "content": "Japan East",
      "pos": [
        5431,
        5441
      ]
    },
    {
      "content": "West Europe",
      "pos": [
        5444,
        5455
      ]
    },
    {
      "content": "Southeast Asia",
      "pos": [
        5458,
        5472
      ]
    },
    {
      "content": "Japan West",
      "pos": [
        5475,
        5485
      ]
    },
    {
      "content": "North Central US",
      "pos": [
        5488,
        5504
      ]
    },
    {
      "content": "Central US",
      "pos": [
        5507,
        5517
      ]
    },
    {
      "content": "Brazil South",
      "pos": [
        5520,
        5532
      ]
    },
    {
      "content": "East US 2",
      "pos": [
        5535,
        5544
      ]
    },
    {
      "pos": [
        5546,
        5697
      ],
      "content": "To get a complete and up-to-date list of locations, use the <ph id=\"ph1\">`location list`</ph> command, and see the <ph id=\"ph2\">`Microsoft.AppService/apiapps`</ph> resource provider line."
    },
    {
      "pos": [
        5724,
        5779
      ],
      "content": "Here is sample output from the <ph id=\"ph1\">`location list`</ph> command."
    },
    {
      "content": "Create or find a resource group to use",
      "pos": [
        7094,
        7132
      ]
    },
    {
      "pos": [
        7134,
        7242
      ],
      "content": "To create a resource group use the <ph id=\"ph1\">`group create`</ph> command with the name (<ph id=\"ph2\">`n`</ph>) and location (<ph id=\"ph3\">`l`</ph>) parameters."
    },
    {
      "content": "For example:",
      "pos": [
        7292,
        7304
      ]
    },
    {
      "pos": [
        7356,
        7483
      ],
      "content": "To find an existing resource group, use the <ph id=\"ph1\">`group list`</ph> command, and choose a resource group in a location valid for API apps."
    },
    {
      "content": "Create or find an App Service plan to use",
      "pos": [
        7511,
        7552
      ]
    },
    {
      "pos": [
        7554,
        7741
      ],
      "content": "To create an App Service plan, use the <ph id=\"ph1\">`resource create`</ph> command and use the resource type parameter (<ph id=\"ph2\">`-r`</ph>) to specify that the type of resource you want to create is an App Service plan."
    },
    {
      "content": "For example:",
      "pos": [
        8008,
        8020
      ]
    },
    {
      "pos": [
        8223,
        8383
      ],
      "content": "The JSON string for the <ph id=\"ph1\">`properties`</ph> (<ph id=\"ph2\">`-p`</ph>) parameter is required due to some recent changes in the REST API; in the future the <ph id=\"ph3\">`-p`</ph> parameter will be optional."
    },
    {
      "content": "The sample command specifies the latest API version as of the date this article was written.",
      "pos": [
        8385,
        8477
      ]
    },
    {
      "content": "To check if a later version is available, use the <ph id=\"ph1\">`provider show`</ph> command and see the <ph id=\"ph2\">`apiVersions`</ph> array for the <ph id=\"ph3\">`sites`</ph> object in the <ph id=\"ph4\">`resourceTypes`</ph> array.",
      "pos": [
        8478,
        8636
      ]
    },
    {
      "pos": [
        8690,
        8751
      ],
      "content": "Here is a sample of the <ph id=\"ph1\">`sites`</ph> object in the command output."
    },
    {
      "pos": [
        9298,
        9444
      ],
      "content": "To list existing App Service plans, use the <ph id=\"ph1\">`resource list`</ph> command and specify App Service plan as the resource type by using the <ph id=\"ph2\">`-r`</ph> parameter."
    },
    {
      "content": "The output looks like this:",
      "pos": [
        9500,
        9527
      ]
    },
    {
      "content": "Create an empty (custom) API app",
      "pos": [
        10383,
        10415
      ]
    },
    {
      "pos": [
        10417,
        10591
      ],
      "content": "To create an empty API app (one that you will write the code for yourself), use the <ph id=\"ph1\">`apiapp create`</ph> command and specify the <ph id=\"ph2\">`Microsoft.ApiApp`</ph> Nuget package (<ph id=\"ph3\">`-u`</ph> parameter)."
    },
    {
      "content": "For example:",
      "pos": [
        10708,
        10720
      ]
    },
    {
      "content": "The output reports progress as the API app is created.",
      "pos": [
        10801,
        10855
      ]
    },
    {
      "content": "Create an API app from the Marketplace",
      "pos": [
        12936,
        12974
      ]
    },
    {
      "pos": [
        12976,
        13138
      ],
      "content": "To get a list of API app packages available in the Marketplace, use the <ph id=\"ph1\">`group template list`</ph> command and specify API apps by using the category (<ph id=\"ph2\">`-c`</ph>) parameter."
    },
    {
      "content": "The output looks like this example:",
      "pos": [
        13182,
        13217
      ]
    },
    {
      "pos": [
        13784,
        13958
      ],
      "content": "To create an API app from the Marketplace use the <ph id=\"ph1\">`apiapap create`</ph> command and specify the name of the API app you want to create by using the NuGet package (<ph id=\"ph2\">`-u`</ph>) parameter."
    },
    {
      "content": "The value to use for the <ph id=\"ph1\">`-u`</ph> parameter is the middle section of the marketplace name.",
      "pos": [
        14078,
        14164
      ]
    },
    {
      "content": "For example, for microsoft_com.MicrosoftSqlConnector.0.2.2, the command looks like this:",
      "pos": [
        14165,
        14253
      ]
    },
    {
      "content": "If any API app template parameters are required, such as server names and connection strings for a SQL connector, you'll be prompted for the required data.",
      "pos": [
        14348,
        14503
      ]
    },
    {
      "content": "You have the option to use the <ph id=\"ph1\">`--parameters`</ph> or <ph id=\"ph2\">`--parameters-file`</ph> to pass in the parameter values.",
      "pos": [
        14504,
        14605
      ]
    },
    {
      "content": "For more information about parameters files, see <bpt id=\"p1\">[</bpt>Provision an API app with a new gateway<ept id=\"p1\">](app-service-api-arm-new-gateway-provision.md)</ept>.",
      "pos": [
        14606,
        14743
      ]
    },
    {
      "content": "Next steps",
      "pos": [
        14748,
        14758
      ]
    },
    {
      "content": "This article has shown how to use individual Azure CLI commands to work with custom API apps or API apps that you create from Marketplace templates.",
      "pos": [
        14760,
        14908
      ]
    },
    {
      "content": "For information about how to use custom templates to automate API app creation, see these resources:",
      "pos": [
        14909,
        15009
      ]
    },
    {
      "content": "Provision an API app with an existing gateway",
      "pos": [
        15014,
        15059
      ]
    },
    {
      "content": "Provision an API app with a new gateway",
      "pos": [
        15115,
        15154
      ]
    },
    {
      "content": "For more information about how to use Azure command line utilities with Azure Resource Manager, see these resources:",
      "pos": [
        15203,
        15319
      ]
    },
    {
      "pos": [
        15324,
        15445
      ],
      "content": "<bpt id=\"p1\">[</bpt>Using the Azure CLI for Mac, Linux, and Windows with Azure Resource Management<ept id=\"p1\">](../xplat-cli-azure-resource-manager.md)</ept>."
    },
    {
      "content": "Using Azure PowerShell with Azure Resource Manager",
      "pos": [
        15449,
        15499
      ]
    }
  ],
  "content": "<properties\n    pageTitle=\"The Azure CLI and API Apps | Microsoft Azure\"\n    description=\"How to use the Microsoft Azure Command-line Interface (CLI) for Mac, Linux, and Windows with Azure API Apps.\"\n    editor=\"jimbe\"\n    manager=\"wpickett\"\n    documentationCenter=\"\"\n    authors=\"tdykstra\"\n    services=\"app-service\\api\"/>\n\n<tags\n    ms.service=\"app-service-api\"\n    ms.workload=\"web\"\n    ms.tgt_pltfrm=\"command-line-interface\"\n    ms.devlang=\"na\"\n    ms.topic=\"article\"\n    ms.date=\"10/13/2015\"\n    ms.author=\"tdykstra\"/>\n\n# The Azure Command-line Interface (CLI) and API apps\n\nThis article shows how to create, manage, and delete API apps in Azure App Service, using the Azure Command-Line Interface (CLI) for Mac, Linux, and Windows. \n\n## Prerequisites\n\nThis article assumes you have installed the Azure CLI and know how to perform basic tasks. For an introduction to the CLI, see [Install and Configure the Azure CLI](../xplat-cli-install.md). \n\n> [AZURE.NOTE] The instructions for [connecting to an Azure subscription ](../xplat-cli-connect.md) offer two alternatives:  log in using a work or school account, and download a *.publishsettings* file. For API apps, the *.publishsettings* file authentication method will not work. This is because you have to use Resource Management mode (introduced in the next section) to work with API apps, and the *.publishsettings* file authentication method doesn't work with Resource Manager. \n\n## Enable Resource Management mode\n\nThe CLI can be used in [Service Management (asm)](../virtual-machines/virtual-machines-command-line-tools.md) mode or [Resource Management (arm)](../xplat-cli-azure-resource-manager.md) mode. For API apps you have to use Resource Management mode.  Because `arm` mode is not enabled by default, use the `config mode arm` command to enable it.\n\n    azure config mode arm\n\n## List commands available for working with API apps\n\nTo see all the commands currently available for working with API apps, run the `apiapp` command.\n\n    azure apiapp\n\n## List all API apps in a subscription or resource group\n\nTo list all the API apps you have in your subscription, run the `apiapp list` command with no parameters.\n\n    azure apiapp list\n\nThe list shows the resource group, API app name, package ID, and URL of each API app.\n\n    info:    Executing command apiapp list\n    info:    Listing ApiApps\n    data:    Resource Group  Name           Package Id        Url                                                                       \n    data:    --------------  -------------  ----------------  --------------------------------------------------------------------------\n    data:    mygroup         SimpleDropbox  Microsoft.ApiApp  https://microsoft-apiappf1bbba377c6d4aa1f03146cadd6.azurewebsites.net\n    info:    apiapp list command OK\n\nTo limit the list to a specified resource group, add the group (`-g`) parameter.\n\n    azure apiapp list -g <resource group name>\n\nFor example:\n\n    azure apiapp list -g mygroup\n\nTo add API app version and access level information to the list, add the details (`-d`) parameter.\n\n    azure apiapp list -d\n\nThe `list` output with the additional fields looks like this example:\n\n    info:    Executing command apiapp list\n    info:    Listing ApiApps\n    data:    Resource Group  Name           Package Id     Version  Auth                 Url                                                                       \n    data:    --------------  -------------  -------------  -------  -------------------  --------------------------------------------------------------------------\n    data:    mygroup         SimpleDropbox  SimpleDropbox  1.0.0    PublicAuthenticated  https://microsoft-apiappf1bbba377cbd2a3aa1f03146c6.azurewebsites.net\n    info:    apiapp list command OK\n\n### List details about an API app\n\nTo list details for one API app, use the `apiapp show` command with the group (`-g`) and API app name (`-n`) parameters.\n\n    azure apiapp show -g <resource group name> -n <API app name>\n\nFor example:\n\n    azure apiapp show -g mygroup -n SimpleDropbox\n\nThe output looks like this:\n\n    info:    Executing command apiapp show\n    info:    Getting ApiApp\n    data:    Name:              SimpleDropbox\n    data:    Location:          West US\n    data:    Resource Group:    mygroup\n    data:    Package Id:        SimpleDropbox\n    data:    Package Version:   1.0.0\n    data:    Update Policy:     Disabled\n    data:    Access Level:      PublicAuthenticated\n    data:    Hosting site name: microsoft-apiappf1bbba377c6d4bd2a36cadd6\n    data:    Gateway name:      SD1aeb4ae60b7cb4f3d966dfa43b6607f30\n    info:    apiapp show command OK\n\n## Create an API app\n\nThere are two ways to create an API app. You can use imperative CLI commands to create Azure resources individually, or you can use declarative syntax in a template to define all of the required resources together and deploy that template with a CLI command. For the declarative approach, see [Next steps](#next-steps).\n\nTo create an API app using the imperative approach, perform the following steps:\n\n1. Choose a valid location\n1. Create or find a resource group to use\n2. Create or find an App Service plan to use\n4. Create the API app\n\n### Choose a valid location\n\nWhen you create a resource group, you need to specify a location. Here are some of the locations that are valid for API apps.\n\n* East US\n* West US\n* South Central US\n* North Europe\n* East Asia\n* Japan East\n* West Europe\n* Southeast Asia\n* Japan West\n* North Central US\n* Central US\n* Brazil South\n* East US 2\n\nTo get a complete and up-to-date list of locations, use the `location list` command, and see the `Microsoft.AppService/apiapps` resource provider line.\n\n    azure location list\n\nHere is sample output from the `location list` command.\n\n    info:    Executing command location list\n    info:    Getting Resource Providers\n    data:    Name                                                                Location                                                                                                                                                   \n    data:    ------------------------------------------------------------------  -----------------------------------------------------------------------------------------------------------------------------------------------------------\n    data:    Microsoft.ApiManagement/service                                     East US,North Central US,South Central US,West US,North Europe,West Europe,East Asia,Southeast Asia,Japan East,Japan West,Brazil South                     \n    data:    Microsoft.AppService/apiapps                                        East US,West US,South Central US,North Europe,East Asia,Japan East,West Europe,Southeast Asia,Japan West,North Central US,Central US,Brazil South,East US 2\n    data:    Microsoft.AppService/appIdentities                                  East US,West US,South Central US,North Europe,East Asia,Japan East,West Europe,Southeast Asia,Japan West,North Central US,Central US,Brazil South,East US 2\n    info:    location list command OK\n\n### Create or find a resource group to use\n\nTo create a resource group use the `group create` command with the name (`n`) and location (`l`) parameters.\n\n    azure group create -n <name> -l <location>\n\nFor example:\n\n    azure group create -n \"mygroup\" -l \"West US\"\n\nTo find an existing resource group, use the `group list` command, and choose a resource group in a location valid for API apps.\n\n    azure group list\n\n### Create or find an App Service plan to use\n\nTo create an App Service plan, use the `resource create` command and use the resource type parameter (`-r`) to specify that the type of resource you want to create is an App Service plan.\n\n    azure resource create -g <resource group> -n <app service plan name> -r \"Microsoft.Web/serverfarms\" -l <location> -o <api version> -p \"{\\\"sku\\\": {\\\"tier\\\": \\\"<pricing tier>\\\"}, \\\"numberOfWorkers\\\" : <number of workers>, \\\"workerSize\\\": \\\"<worker size>\\\"}\"\n    \nFor example:\n\n    azure resource create -g mygroup -n myplan -r \"Microsoft.Web/serverfarms\" -l \"West US\" -o \"2015-06-01\" -p \"{\\\"sku\\\": {\\\"tier\\\": \\\"Standard\\\"}, \\\"numberOfWorkers\\\" : 1, \\\"workerSize\\\": \\\"Small\\\"}\"\n\nThe JSON string for the `properties` (`-p`) parameter is required due to some recent changes in the REST API; in the future the `-p` parameter will be optional.\n\nThe sample command specifies the latest API version as of the date this article was written. To check if a later version is available, use the `provider show` command and see the `apiVersions` array for the `sites` object in the `resourceTypes` array.\n\n    azure provider show -n Microsoft.Web --json\n   \nHere is a sample of the `sites` object in the command output.\n\n    {\n      \"resourceTypes\": [\n        {\n          \"apiVersions\": [\n            \"2015-06-01\",\n            \"2015-05-01\",\n            \"2015-04-01\",\n            \"2014-04-01\"\n          ],\n          \"locations\": [\n            \"East Asia\",\n            \"East US\",\n            \"Japan East\",\n            \"Japan West\",\n            \"North Europe\",\n            \"West Europe\",\n            \"West US\",\n            \"Southeast Asia\",\n            \"Central US\",\n            \"East US 2\"\n          ],\n          \"properties\": {},\n          \"name\": \"sites\"\n        }\n\nTo list existing App Service plans, use the `resource list` command and specify App Service plan as the resource type by using the `-r` parameter.\n\n    azure resource list -r Microsoft.Web/serverfarms\n\nThe output looks like this:\n\n    info:    Executing command resource list\n    info:    Listing resources\n    data:    Id                                                                                                                                           Name             Resource Group          Type                       Parent  Location  Tags\n    data:    -------------------------------------------------------------------------------------------------------------------------------------------  ---------------  ----------------------  -------------------------  ------  --------  ----\n    data:    /subscriptions/aeb4ae60-b7cb-4f3d-966d-fa43b6607f30/resourceGroups/ContosoAdsGroup/providers/Microsoft.Web/serverFarms/ContosoAdsPlan        ContosoAdsPlan   ContosoAdsGroup         Microsoft.Web/serverFarms          westus    null\n    info:    resource list command OK\n\n### Create an empty (custom) API app\n\nTo create an empty API app (one that you will write the code for yourself), use the `apiapp create` command and specify the `Microsoft.ApiApp` Nuget package (`-u` parameter).\n\n    azure apiapp create -g <resource group name> -n <API app name> -p <app service plan name> -u Microsoft.ApiApp\n\nFor example:\n\n    azure apiapp create -g mygroup -n newapiapp -p myplan -u Microsoft.ApiApp\n\nThe output reports progress as the API app is created.\n\n    info:    Executing command apiapp create\n    info:    Checking resource group and app service plan\n    info:    Getting package metadata\n    info:    Creating deployment\n    info:    Waiting for deployment completion\n    info:    Deployment started:\n    data:    Subscription Id: aeb4ae60-b7cb-4f3d-966d-fa43b6607f30\n    data:    Resource Group:  mygroup\n    data:    Deployment Name: AppServiceDeployment_f67fa710-d565-43cf-8c9c-\n                              d515dd2eb903\n    data:    Correlation Id:  a7894287-c585-46d5-96a4-feac4b2f48c6\n    data:    Timestamp:       2015-07-21T23:20:12.8858274Z\n    data:    \n    data:    Operation           State         Status        Resource                                          \n    data:    ------------------- ------------- ------------- --------------------------------------------------\n    data:    E8D88DA720375394    Succeeded     OK            /subscriptions/aeb4ae60-b7cb-4f3d-aeb4ae60-b6607f30/resourceGroups/mygroup/providers/Microsoft.Web/sites/Microsoft-ApiApp33056917d6e34238b2606d71caf73b6a\n    data:    FC31834D2E73D10E    Succeeded     Created       /subscriptions/aeb4ae60-b7cb-4f3d-aeb4ae60-b6607f30/resourceGroups/mygroup/providers/Microsoft.Web/sites/Microsoft-ApiApp33056917d6e34238b2606d71caf73b6a/providers/Microsoft.Resources/links/apiApp\n    data:    C5B48DAF91306BB4    Succeeded     OK            /subscriptions/aeb4ae60-b7cb-4f3d-aeb4ae60-b6607f30/resourceGroups/mygroup/providers/Microsoft.Web/sites/Microsoft-ApiApp33056917d6e34238b2606d71caf73b6a/siteextensions/Microsoft.ApiApp\n    data:    F4B943428026A1B2    Succeeded     Created       /subscriptions/aeb4ae60-b7cb-4f3d-aeb4ae60-b6607f30/resourceGroups/mygroup/providers/Microsoft.AppService/apiapps/newapiapp\n    data:    4B3A935892415369    Succeeded     Created       /subscriptions/aeb4ae60-b7cb-4f3d-aeb4ae60-b6607f30/resourceGroups/mygroup/providers/Microsoft.AppService/apiapps/newapiapp/providers/Microsoft.Resources/links/apiAppSite\n    info:    Deployment complete with status: Succeeded\n    info:    apiapp create command OK\n\n#### Create an API app from the Marketplace\n\nTo get a list of API app packages available in the Marketplace, use the `group template list` command and specify API apps by using the category (`-c`) parameter.\n\n    azure group template list -c apiapps\n\nThe output looks like this example:\n\n    info:    Executing command group template list\n    info:    Listing gallery resource group templates\n    data:    Publisher      Name                                                  \n    data:    -------------  ------------------------------------------------------\n    data:    Microsoft      Microsoft.Template.1.0.1                              \n    data:    microsoft_com  microsoft_com.MicrosoftSharePointConnector.0.2.2      \n    data:    microsoft_com  microsoft_com.FTPConnector.0.2.2                      \n    info:    group template list command OK\n\nTo create an API app from the Marketplace use the `apiapap create` command and specify the name of the API app you want to create by using the NuGet package (`-u`) parameter. \n\n    azure apiapp create -g <resource group name> -n <API app name> -p <app service plan name> -u <marketplace name>\n\nThe value to use for the `-u` parameter is the middle section of the marketplace name. For example, for microsoft_com.MicrosoftSqlConnector.0.2.2, the command looks like this:\n\n    azure apiapp create -g mygroup -n mysqlconnector -p myplan -u MicrosoftSqlConnector\n    \nIf any API app template parameters are required, such as server names and connection strings for a SQL connector, you'll be prompted for the required data. You have the option to use the `--parameters` or `--parameters-file` to pass in the parameter values. For more information about parameters files, see [Provision an API app with a new gateway](app-service-api-arm-new-gateway-provision.md).\n\n## Next steps\n\nThis article has shown how to use individual Azure CLI commands to work with custom API apps or API apps that you create from Marketplace templates. For information about how to use custom templates to automate API app creation, see these resources:\n\n* [Provision an API app with an existing gateway](app-service-api-arm-existing-gateway-provision.md)\n* [Provision an API app with a new gateway](app-service-api-arm-new-gateway-provision.md)\n\nFor more information about how to use Azure command line utilities with Azure Resource Manager, see these resources:\n \n* [Using the Azure CLI for Mac, Linux, and Windows with Azure Resource Management](../xplat-cli-azure-resource-manager.md).\n* [Using Azure PowerShell with Azure Resource Manager](../powershell-azure-resource-manager.md)\n \n\n\n"
}