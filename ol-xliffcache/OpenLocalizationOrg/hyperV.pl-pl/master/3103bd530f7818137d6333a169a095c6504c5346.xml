{
  "nodes": [
    {
      "pos": [
        3,
        70
      ],
      "content": "In <bpt id=\"p1\">**</bpt>QSAppDelegate.m<ept id=\"p1\">**</ept>, import the iOS SDK and <bpt id=\"p2\">**</bpt>QSTodoService.h<ept id=\"p2\">**</ept>:"
    },
    {
      "pos": [
        179,
        292
      ],
      "content": "In <ph id=\"ph1\">`didFinishLaunchingWithOptions`</ph> in <bpt id=\"p1\">**</bpt>QSAppDelegate.m<ept id=\"p1\">**</ept>, insert the following lines right before <ph id=\"ph2\">`return YES;`</ph>:"
    },
    {
      "content": "In <bpt id=\"p1\">**</bpt>QSAppDelegate.m<ept id=\"p1\">**</ept>, add the following handler methods.",
      "pos": [
        689,
        747
      ]
    },
    {
      "content": "Your app is now updated to support push notifications.",
      "pos": [
        748,
        802
      ]
    },
    {
      "content": "Note that UIAlertView is deprecated in iOS9 and the following targets iOS9.",
      "pos": [
        803,
        878
      ]
    }
  ],
  "content": "\n* In **QSAppDelegate.m**, import the iOS SDK and **QSTodoService.h**:\n\n```\n        #import <MicrosoftAzureMobile/MicrosoftAzureMobile.h>\n        #import \"QSTodoService.h\"\n```\n\n* In `didFinishLaunchingWithOptions` in **QSAppDelegate.m**, insert the following lines right before `return YES;`:\n\n```\n        UIUserNotificationSettings* notificationSettings = [UIUserNotificationSettings settingsForTypes:UIUserNotificationTypeAlert | UIUserNotificationTypeBadge | UIUserNotificationTypeSound categories:nil];\n        [[UIApplication sharedApplication] registerUserNotificationSettings:notificationSettings];\n        [[UIApplication sharedApplication] registerForRemoteNotifications];\n```\n\n* In **QSAppDelegate.m**, add the following handler methods. Your app is now updated to support push notifications. Note that UIAlertView is deprecated in iOS9 and the following targets iOS9.\n\n```\n        // Registration with APNs is successful\n        - (void)application:(UIApplication *)application\n        didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)deviceToken {\n\n            QSTodoService *todoService = [QSTodoService defaultService];\n            MSClient *client = todoService.client;\n\n            [client.push registerDeviceToken:deviceToken completion:^(NSError *error) {\n                if (error != nil) {\n                    NSLog(@\"Error registering for notifications: %@\", error);\n                }\n            }];\n        }\n\n        // Handle any failure to register\n        - (void)application:(UIApplication *)application didFailToRegisterForRemoteNotificationsWithError:\n        (NSError *)error {\n            NSLog(@\"Failed to register for remote notifications: %@\", error);\n        }\n\n        // Use userInfo in the payload to display an alert.\n        - (void)application:(UIApplication *)application\n              didReceiveRemoteNotification:(NSDictionary *)userInfo {\n            NSLog(@\"%@\", userInfo);\n\n            NSDictionary *apsPayload = userInfo[@\"aps\"];\n            NSString *alertString = apsPayload[@\"alert\"];\n\n            // Create alert with notification content.\n            UIAlertController *alertController = [UIAlertController\n                                          alertControllerWithTitle:@\"Notification\"\n                                          message:alertString\n                                          preferredStyle:UIAlertControllerStyleAlert];\n    \n            UIAlertAction *cancelAction = [UIAlertAction\n                                           actionWithTitle:NSLocalizedString(@\"Cancel\", @\"Cancel\")\n                                           style:UIAlertActionStyleCancel\n                                           handler:^(UIAlertAction *action)\n                                           {\n                                               NSLog(@\"Cancel\");\n                                           }];\n            \n            UIAlertAction *okAction = [UIAlertAction\n                                       actionWithTitle:NSLocalizedString(@\"OK\", @\"OK\")\n                                       style:UIAlertActionStyleDefault\n                                       handler:^(UIAlertAction *action)\n                                       {\n                                           NSLog(@\"OK\");\n                                       }];\n            \n            [alertController addAction:cancelAction];\n            [alertController addAction:okAction];\n            \n            // Get current view controller.\n            UIViewController *currentViewController = [[[[UIApplication sharedApplication] delegate] window] rootViewController];\n            while (currentViewController.presentedViewController)\n            {\n                currentViewController = currentViewController.presentedViewController;\n            }\n            \n            // Display alert.\n            [currentViewController presentViewController:alertController animated:YES completion:nil];\n\n        }\n```\n\n\n"
}