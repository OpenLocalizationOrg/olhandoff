<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="pl-pl">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">459ac0f7e144b92141b25783a98d335725555577</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Upload a file from a simulated device</source>
          <target state="new">Upload a file from a simulated device</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>In this section, you'll modify the simulated device application you created in [Send Cloud-to-Device messages with IoT Hub] to receive cloud-to-device messages from the IoT hub.</source>
          <target state="new">In this section, you'll modify the simulated device application you created in [Send Cloud-to-Device messages with IoT Hub] to receive cloud-to-device messages from the IoT hub.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>In Visual Studio, right-click the <bpt id="p1">**</bpt>SimulatedDevice<ept id="p1">**</ept> project, and then click <bpt id="p2">**</bpt>Manage NuGet Packages...<ept id="p2">**</ept>.</source>
          <target state="new">In Visual Studio, right-click the <bpt id="p1">**</bpt>SimulatedDevice<ept id="p1">**</ept> project, and then click <bpt id="p2">**</bpt>Manage NuGet Packages...<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This displays the Manage NuGet Packages window.</source>
          <target state="new">This displays the Manage NuGet Packages window.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Search for <ph id="ph1">`WindowsAzure.Storage`</ph>, click <bpt id="p1">**</bpt>Install<ept id="p1">**</ept>, and accept the terms of use.</source>
          <target state="new">Search for <ph id="ph1">`WindowsAzure.Storage`</ph>, click <bpt id="p1">**</bpt>Install<ept id="p1">**</ept>, and accept the terms of use.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This downloads, installs, and adds a reference to the <bpt id="p1">[</bpt>Microsoft Azure Storage SDK<ept id="p1">](https://www.nuget.org/packages/WindowsAzure.Storage/)</ept>.</source>
          <target state="new">This downloads, installs, and adds a reference to the <bpt id="p1">[</bpt>Microsoft Azure Storage SDK<ept id="p1">](https://www.nuget.org/packages/WindowsAzure.Storage/)</ept>.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Program.cs<ept id="p1">**</ept> file, add the following statements at the top of the file:</source>
          <target state="new">In the <bpt id="p1">**</bpt>Program.cs<ept id="p1">**</ept> file, add the following statements at the top of the file:</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Program<ept id="p1">**</ept> class, change the <bpt id="p2">**</bpt>ReceiveC2dAsync<ept id="p2">**</ept> method in the following way:</source>
          <target state="new">In the <bpt id="p1">**</bpt>Program<ept id="p1">**</ept> class, change the <bpt id="p2">**</bpt>ReceiveC2dAsync<ept id="p2">**</ept> method in the following way:</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This makes the <bpt id="p1">**</bpt>ReceiveC2dAsync<ept id="p1">**</ept> differentiate messages with the <ph id="ph1">`command`</ph> property set to <ph id="ph2">`FileUpload`</ph>, which will be handled by the <bpt id="p2">**</bpt>UploadFileToBlobAsync<ept id="p2">**</ept> method.</source>
          <target state="new">This makes the <bpt id="p1">**</bpt>ReceiveC2dAsync<ept id="p1">**</ept> differentiate messages with the <ph id="ph1">`command`</ph> property set to <ph id="ph2">`FileUpload`</ph>, which will be handled by the <bpt id="p2">**</bpt>UploadFileToBlobAsync<ept id="p2">**</ept> method.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Add the method below to handle the file upload commands.</source>
          <target state="new">Add the method below to handle the file upload commands.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This method uses the Azure Storage SDK to upload a randomly generated 10Mb blob to the specified URI.</source>
          <target state="new">This method uses the Azure Storage SDK to upload a randomly generated 10Mb blob to the specified URI.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Refer to <bpt id="p1">[</bpt><ept id="p1">Azure Storage - How to use blobs]</ept> for more information on how to upload blobs.</source>
          <target state="new">Refer to <bpt id="p1">[</bpt><ept id="p1">Azure Storage - How to use blobs]</ept> for more information on how to upload blobs.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> Note how this implementation of the simulated device completes the cloud-to-device message only after the blob has been uploaded.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> Note how this implementation of the simulated device completes the cloud-to-device message only after the blob has been uploaded.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This approach simplifies the processing of the uploaded files in the back end because the delivery acknowledgment represents the availability of the uploaded file for processing.</source>
          <target state="new">This approach simplifies the processing of the uploaded files in the back end because the delivery acknowledgment represents the availability of the uploaded file for processing.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>As explained in the <bpt id="p1">[</bpt>IoT Hub Developer Guide<ept id="p1">][IoT Hub Developer Guide - C2D]</ept>, however, a message that is not completed before the <bpt id="p2">*</bpt>visibility timeout<ept id="p2">*</ept> (usually 1 minute) is put back in the device queue, and the <bpt id="p3">**</bpt>ReceiveAsync()<ept id="p3">**</ept> method will receive it again.</source>
          <target state="new">As explained in the <bpt id="p1">[</bpt>IoT Hub Developer Guide<ept id="p1">][IoT Hub Developer Guide - C2D]</ept>, however, a message that is not completed before the <bpt id="p2">*</bpt>visibility timeout<ept id="p2">*</ept> (usually 1 minute) is put back in the device queue, and the <bpt id="p3">**</bpt>ReceiveAsync()<ept id="p3">**</ept> method will receive it again.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For scenarios where the file upload can take longer, it might be preferable for the simulated device to keep a durable store of current upload jobs.</source>
          <target state="new">For scenarios where the file upload can take longer, it might be preferable for the simulated device to keep a durable store of current upload jobs.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This allows the simulated device to complete the cloud-to-device message before the file upload is complete, and then send a device-to-cloud message notifying the back end of completion.</source>
          <target state="new">This allows the simulated device to complete the cloud-to-device message before the file upload is complete, and then send a device-to-cloud message notifying the back end of completion.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>