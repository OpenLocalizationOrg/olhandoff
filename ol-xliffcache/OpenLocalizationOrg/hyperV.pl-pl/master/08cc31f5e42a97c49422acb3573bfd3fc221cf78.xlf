<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="pl-pl">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">acomdc_nonhi</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">08cc31f5e42a97c49422acb3573bfd3fc221cf78</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1457980" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to Use iOS SDK for Azure Mobile Apps</source>
          <target state="new">How to Use iOS SDK for Azure Mobile Apps</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to Use iOS SDK for Azure Mobile Apps</source>
          <target state="new">How to Use iOS SDK for Azure Mobile Apps</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>How to Use iOS Client Library for Azure Mobile Apps</source>
          <target state="new">How to Use iOS Client Library for Azure Mobile Apps</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This guide teaches you to perform common scenarios using the latest <bpt id="p1">[</bpt>Azure Mobile Apps iOS SDK<ept id="p1">](https://go.microsoft.com/fwLink/?LinkID=266533&amp;clcid=0x409)</ept>.</source>
          <target state="new">This guide teaches you to perform common scenarios using the latest <bpt id="p1">[</bpt>Azure Mobile Apps iOS SDK<ept id="p1">](https://go.microsoft.com/fwLink/?LinkID=266533&amp;clcid=0x409)</ept>.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>If you are new to Azure Mobile Apps, first complete <bpt id="p1">[</bpt><ept id="p1">Azure Mobile Apps Quick Start]</ept> to create a backend, create a table, and download a pre-built iOS Xcode project.</source>
          <target state="new">If you are new to Azure Mobile Apps, first complete <bpt id="p1">[</bpt><ept id="p1">Azure Mobile Apps Quick Start]</ept> to create a backend, create a table, and download a pre-built iOS Xcode project.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>In this guide, we focus on the client-side iOS SDK.</source>
          <target state="new">In this guide, we focus on the client-side iOS SDK.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>To learn more about the .NET server-side SDK for the backend, see <bpt id="p1">[</bpt>Work with .NET Backend<ept id="p1">](app-service-mobile-dotnet-backend-how-to-use-server-sdk.md)</ept></source>
          <target state="new">To learn more about the .NET server-side SDK for the backend, see <bpt id="p1">[</bpt>Work with .NET Backend<ept id="p1">](app-service-mobile-dotnet-backend-how-to-use-server-sdk.md)</ept></target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Reference documentation</source>
          <target state="new">Reference documentation</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The reference documentation for the iOS client SDK is located here: <bpt id="p1">[</bpt>Azure Mobile Apps iOS Client Reference<ept id="p1">](http://azure.github.io/azure-mobile-services/iOS/v3/)</ept>.</source>
          <target state="new">The reference documentation for the iOS client SDK is located here: <bpt id="p1">[</bpt>Azure Mobile Apps iOS Client Reference<ept id="p1">](http://azure.github.io/azure-mobile-services/iOS/v3/)</ept>.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="Setup"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Setup and Prerequisites</source>
          <target state="new"><ph id="ph1">&lt;a name="Setup"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Setup and Prerequisites</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This guide assumes that you have created a backend with a table.</source>
          <target state="new">This guide assumes that you have created a backend with a table.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This guide assumes that the table has the same schema as the tables in those tutorials.</source>
          <target state="new">This guide assumes that the table has the same schema as the tables in those tutorials.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This guide also assumes that in your code, you reference <ph id="ph1">`MicrosoftAzureMobile.framework`</ph> and import <ph id="ph2">`MicrosoftAzureMobile/MicrosoftAzureMobile.h`</ph>.</source>
          <target state="new">This guide also assumes that in your code, you reference <ph id="ph1">`MicrosoftAzureMobile.framework`</ph> and import <ph id="ph2">`MicrosoftAzureMobile/MicrosoftAzureMobile.h`</ph>.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="create-client"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Create Client</source>
          <target state="new"><ph id="ph1">&lt;a name="create-client"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Create Client</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>To access an Azure Mobile Apps backend in your project, create an <ph id="ph1">`MSClient`</ph>.</source>
          <target state="new">To access an Azure Mobile Apps backend in your project, create an <ph id="ph1">`MSClient`</ph>.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Replace <ph id="ph1">`AppUrl`</ph> with the app URL.</source>
          <target state="new">Replace <ph id="ph1">`AppUrl`</ph> with the app URL.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You may leave <ph id="ph1">`gatewayURLString`</ph> and <ph id="ph2">`applicationKey`</ph> empty.</source>
          <target state="new">You may leave <ph id="ph1">`gatewayURLString`</ph> and <ph id="ph2">`applicationKey`</ph> empty.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If you set up a gateway for authentication, populate <ph id="ph1">`gatewayURLString`</ph> with the gateway URL.</source>
          <target state="new">If you set up a gateway for authentication, populate <ph id="ph1">`gatewayURLString`</ph> with the gateway URL.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Objective-C<ept id="p1">**</ept>:</source>
          <target state="new"><bpt id="p1">**</bpt>Objective-C<ept id="p1">**</ept>:</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Swift<ept id="p1">**</ept>:</source>
          <target state="new"><bpt id="p1">**</bpt>Swift<ept id="p1">**</ept>:</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="table-reference"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Create Table Reference</source>
          <target state="new"><ph id="ph1">&lt;a name="table-reference"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Create Table Reference</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>To access or update data, create a reference to the backend table.</source>
          <target state="new">To access or update data, create a reference to the backend table.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Replace <ph id="ph1">`TodoItem`</ph> with the name of your table</source>
          <target state="new">Replace <ph id="ph1">`TodoItem`</ph> with the name of your table</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Objective-C<ept id="p1">**</ept>:</source>
          <target state="new"><bpt id="p1">**</bpt>Objective-C<ept id="p1">**</ept>:</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Swift<ept id="p1">**</ept>:</source>
          <target state="new"><bpt id="p1">**</bpt>Swift<ept id="p1">**</ept>:</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="querying"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Query Data</source>
          <target state="new"><ph id="ph1">&lt;a name="querying"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Query Data</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>To create a database query, query the <ph id="ph1">`MSTable`</ph> object.</source>
          <target state="new">To create a database query, query the <ph id="ph1">`MSTable`</ph> object.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The following query gets all the items in <ph id="ph1">`TodoItem`</ph> and logs the text of each item.</source>
          <target state="new">The following query gets all the items in <ph id="ph1">`TodoItem`</ph> and logs the text of each item.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Objective-C<ept id="p1">**</ept>:</source>
          <target state="new"><bpt id="p1">**</bpt>Objective-C<ept id="p1">**</ept>:</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Swift<ept id="p1">**</ept>:</source>
          <target state="new"><bpt id="p1">**</bpt>Swift<ept id="p1">**</ept>:</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="filtering"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Filter Returned Data</source>
          <target state="new"><ph id="ph1">&lt;a name="filtering"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Filter Returned Data</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>To filter results, there are many available options.</source>
          <target state="new">To filter results, there are many available options.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>To filter using a predicate, use an <ph id="ph1">`NSPredicate`</ph> and <ph id="ph2">`readWithPredicate`</ph>.</source>
          <target state="new">To filter using a predicate, use an <ph id="ph1">`NSPredicate`</ph> and <ph id="ph2">`readWithPredicate`</ph>.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The following filters returned data to find only incomplete Todo items.</source>
          <target state="new">The following filters returned data to find only incomplete Todo items.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Objective-C<ept id="p1">**</ept>:</source>
          <target state="new"><bpt id="p1">**</bpt>Objective-C<ept id="p1">**</ept>:</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Swift<ept id="p1">**</ept>:</source>
          <target state="new"><bpt id="p1">**</bpt>Swift<ept id="p1">**</ept>:</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="query-object"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Use MSQuery</source>
          <target state="new"><ph id="ph1">&lt;a name="query-object"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Use MSQuery</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>To perform a complex query (including sorting and paging), create an <ph id="ph1">`MSQuery`</ph> object, directly or by using a predicate:</source>
          <target state="new">To perform a complex query (including sorting and paging), create an <ph id="ph1">`MSQuery`</ph> object, directly or by using a predicate:</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Objective-C<ept id="p1">**</ept>:</source>
          <target state="new"><bpt id="p1">**</bpt>Objective-C<ept id="p1">**</ept>:</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Swift<ept id="p1">**</ept>:</source>
          <target state="new"><bpt id="p1">**</bpt>Swift<ept id="p1">**</ept>:</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`MSQuery`</ph> lets you control several query behaviors, including the following.</source>
          <target state="new"><ph id="ph1">`MSQuery`</ph> lets you control several query behaviors, including the following.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Execute an <ph id="ph1">`MSQuery`</ph> query by calling <ph id="ph2">`readWithCompletion`</ph> on it, as shown in the next example.</source>
          <target state="new">Execute an <ph id="ph1">`MSQuery`</ph> query by calling <ph id="ph2">`readWithCompletion`</ph> on it, as shown in the next example.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Specify order of results</source>
          <target state="new">Specify order of results</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Limit which fields to return</source>
          <target state="new">Limit which fields to return</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Limit how many records to return</source>
          <target state="new">Limit how many records to return</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Specify total count in response</source>
          <target state="new">Specify total count in response</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Specify custom query string parameters in request</source>
          <target state="new">Specify custom query string parameters in request</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Apply additional functions</source>
          <target state="new">Apply additional functions</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="sorting"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Sort Data with MSQuery</source>
          <target state="new"><ph id="ph1">&lt;a name="sorting"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Sort Data with MSQuery</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>To sort results, let's look at an example.</source>
          <target state="new">To sort results, let's look at an example.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>To first ascendingly by field <ph id="ph1">`text`</ph> and then descendingly by field <ph id="ph2">`completion`</ph>, invoke <ph id="ph3">`MSQuery`</ph> like so:</source>
          <target state="new">To first ascendingly by field <ph id="ph1">`text`</ph> and then descendingly by field <ph id="ph2">`completion`</ph>, invoke <ph id="ph3">`MSQuery`</ph> like so:</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Objective-C<ept id="p1">**</ept>:</source>
          <target state="new"><bpt id="p1">**</bpt>Objective-C<ept id="p1">**</ept>:</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Swift<ept id="p1">**</ept>:</source>
          <target state="new"><bpt id="p1">**</bpt>Swift<ept id="p1">**</ept>:</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="selecting"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph><ph id="ph3">&lt;a name="parameters"&gt;</ph><ph id="ph4">&lt;/a&gt;</ph>How to: Limit Fields and Expand Query String Parameters with MSQuery</source>
          <target state="new"><ph id="ph1">&lt;a name="selecting"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph><ph id="ph3">&lt;a name="parameters"&gt;</ph><ph id="ph4">&lt;/a&gt;</ph>How to: Limit Fields and Expand Query String Parameters with MSQuery</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>To limit fields to be returned in a query, specify the names of the fields in the <bpt id="p1">**</bpt>selectFields<ept id="p1">**</ept> property.</source>
          <target state="new">To limit fields to be returned in a query, specify the names of the fields in the <bpt id="p1">**</bpt>selectFields<ept id="p1">**</ept> property.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>This returns only the text and completed fields:</source>
          <target state="new">This returns only the text and completed fields:</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Objective-C<ept id="p1">**</ept>:</source>
          <target state="new"><bpt id="p1">**</bpt>Objective-C<ept id="p1">**</ept>:</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Swift<ept id="p1">**</ept>:</source>
          <target state="new"><bpt id="p1">**</bpt>Swift<ept id="p1">**</ept>:</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>To include additional query string parameters in the server request (for example, because a custom server-side script uses them), populate <ph id="ph1">`query.parameters`</ph> like so:</source>
          <target state="new">To include additional query string parameters in the server request (for example, because a custom server-side script uses them), populate <ph id="ph1">`query.parameters`</ph> like so:</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Objective-C<ept id="p1">**</ept>:</source>
          <target state="new"><bpt id="p1">**</bpt>Objective-C<ept id="p1">**</ept>:</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Swift<ept id="p1">**</ept>:</source>
          <target state="new"><bpt id="p1">**</bpt>Swift<ept id="p1">**</ept>:</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="inserting"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Insert Data</source>
          <target state="new"><ph id="ph1">&lt;a name="inserting"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Insert Data</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>To insert a new table row, create a new <ph id="ph1">`NSDictionary`</ph> and invoke <ph id="ph2">`table insert`</ph>.</source>
          <target state="new">To insert a new table row, create a new <ph id="ph1">`NSDictionary`</ph> and invoke <ph id="ph2">`table insert`</ph>.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Mobile Services automatically generates new columns based on the <ph id="ph1">`NSDictionary`</ph> if <bpt id="p1">[</bpt><ept id="p1">Dynamic Schema]</ept> is not disabled.</source>
          <target state="new">Mobile Services automatically generates new columns based on the <ph id="ph1">`NSDictionary`</ph> if <bpt id="p1">[</bpt><ept id="p1">Dynamic Schema]</ept> is not disabled.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`id`</ph> is not provided, the backend automatically generates a new unique ID.</source>
          <target state="new">If <ph id="ph1">`id`</ph> is not provided, the backend automatically generates a new unique ID.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Provide your own <ph id="ph1">`id`</ph> to use email addresses, usernames, or your own custom values as ID.</source>
          <target state="new">Provide your own <ph id="ph1">`id`</ph> to use email addresses, usernames, or your own custom values as ID.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Providing your own ID may ease joins and business-oriented database logic.</source>
          <target state="new">Providing your own ID may ease joins and business-oriented database logic.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`result`</ph> contains the new item that was inserted; depending on your server logic, it may have additional or modified data compared to what was passed to the server.</source>
          <target state="new">The <ph id="ph1">`result`</ph> contains the new item that was inserted; depending on your server logic, it may have additional or modified data compared to what was passed to the server.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Objective-C<ept id="p1">**</ept>:</source>
          <target state="new"><bpt id="p1">**</bpt>Objective-C<ept id="p1">**</ept>:</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Swift<ept id="p1">**</ept>:</source>
          <target state="new"><bpt id="p1">**</bpt>Swift<ept id="p1">**</ept>:</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="modifying"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Modify Data</source>
          <target state="new"><ph id="ph1">&lt;a name="modifying"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Modify Data</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>To update an existing row, modify an item and call <ph id="ph1">`update`</ph>:</source>
          <target state="new">To update an existing row, modify an item and call <ph id="ph1">`update`</ph>:</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Objective-C<ept id="p1">**</ept>:</source>
          <target state="new"><bpt id="p1">**</bpt>Objective-C<ept id="p1">**</ept>:</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Swift<ept id="p1">**</ept>:</source>
          <target state="new"><bpt id="p1">**</bpt>Swift<ept id="p1">**</ept>:</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Alternatively, supply the row ID and the updated field:</source>
          <target state="new">Alternatively, supply the row ID and the updated field:</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Objective-C<ept id="p1">**</ept>:</source>
          <target state="new"><bpt id="p1">**</bpt>Objective-C<ept id="p1">**</ept>:</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Swift<ept id="p1">**</ept>:</source>
          <target state="new"><bpt id="p1">**</bpt>Swift<ept id="p1">**</ept>:</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>At minimum, the <ph id="ph1">`id`</ph> attribute must be set when making updates.</source>
          <target state="new">At minimum, the <ph id="ph1">`id`</ph> attribute must be set when making updates.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="deleting"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Delete Data</source>
          <target state="new"><ph id="ph1">&lt;a name="deleting"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Delete Data</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>To delete an item, invoke <ph id="ph1">`delete`</ph> with the item:</source>
          <target state="new">To delete an item, invoke <ph id="ph1">`delete`</ph> with the item:</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Objective-C<ept id="p1">**</ept>:</source>
          <target state="new"><bpt id="p1">**</bpt>Objective-C<ept id="p1">**</ept>:</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Swift<ept id="p1">**</ept>:</source>
          <target state="new"><bpt id="p1">**</bpt>Swift<ept id="p1">**</ept>:</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Alternatively, delete by providing a row ID:</source>
          <target state="new">Alternatively, delete by providing a row ID:</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Objective-C<ept id="p1">**</ept>:</source>
          <target state="new"><bpt id="p1">**</bpt>Objective-C<ept id="p1">**</ept>:</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Swift<ept id="p1">**</ept>:</source>
          <target state="new"><bpt id="p1">**</bpt>Swift<ept id="p1">**</ept>:</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>At minimum, the <ph id="ph1">`id`</ph> attribute must be set when making deletes.</source>
          <target state="new">At minimum, the <ph id="ph1">`id`</ph> attribute must be set when making deletes.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="customapi"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Call Custom API</source>
          <target state="new"><ph id="ph1">&lt;a name="customapi"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Call Custom API</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>With a custom API, you can expose any backend functionality.</source>
          <target state="new">With a custom API, you can expose any backend functionality.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>It doesn't have to map to a table operation.</source>
          <target state="new">It doesn't have to map to a table operation.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Not only do you gain more control over messaging, you can even read/set headers and change the response body format.</source>
          <target state="new">Not only do you gain more control over messaging, you can even read/set headers and change the response body format.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>To learn how to create a custom API on the backend, read <bpt id="p1">[</bpt>Custom APIs<ept id="p1">](app-service-mobile-node-backend-how-to-use-server-sdk.md#work-easy-apis)</ept></source>
          <target state="new">To learn how to create a custom API on the backend, read <bpt id="p1">[</bpt>Custom APIs<ept id="p1">](app-service-mobile-node-backend-how-to-use-server-sdk.md#work-easy-apis)</ept></target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>To call a custom API, call <ph id="ph1">`MSClient.invokeAPI`</ph> as shown below.</source>
          <target state="new">To call a custom API, call <ph id="ph1">`MSClient.invokeAPI`</ph> as shown below.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The request and response content are treated as JSON.</source>
          <target state="new">The request and response content are treated as JSON.</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>To use other media types, <bpt id="p1">[</bpt>use the other overload of <ph id="ph1">`invokeAPI`</ph><ept id="p1">](http://azure.github.io/azure-mobile-services/iOS/v3/Classes/MSClient.html#//api/name/invokeAPI:data:HTTPMethod:parameters:headers:completion:)</ept></source>
          <target state="new">To use other media types, <bpt id="p1">[</bpt>use the other overload of <ph id="ph1">`invokeAPI`</ph><ept id="p1">](http://azure.github.io/azure-mobile-services/iOS/v3/Classes/MSClient.html#//api/name/invokeAPI:data:HTTPMethod:parameters:headers:completion:)</ept></target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>To make a <ph id="ph1">`GET`</ph> request instead of a <ph id="ph2">`POST`</ph> request, set parameter <ph id="ph3">`HTTPMethod`</ph> to <ph id="ph4">`"GET"`</ph> and parameter <ph id="ph5">`body`</ph> to <ph id="ph6">`nil`</ph> (since GET requests do not have message bodies.) If your custom API supports other HTTP verbs, change <ph id="ph7">`HTTPMethod`</ph> appropriately.</source>
          <target state="new">To make a <ph id="ph1">`GET`</ph> request instead of a <ph id="ph2">`POST`</ph> request, set parameter <ph id="ph3">`HTTPMethod`</ph> to <ph id="ph4">`"GET"`</ph> and parameter <ph id="ph5">`body`</ph> to <ph id="ph6">`nil`</ph> (since GET requests do not have message bodies.) If your custom API supports other HTTP verbs, change <ph id="ph7">`HTTPMethod`</ph> appropriately.</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Objective-C<ept id="p1">**</ept>:</source>
          <target state="new"><bpt id="p1">**</bpt>Objective-C<ept id="p1">**</ept>:</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Swift<ept id="p1">**</ept>:</source>
          <target state="new"><bpt id="p1">**</bpt>Swift<ept id="p1">**</ept>:</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="templates"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Register push templates to send cross-platform notifications</source>
          <target state="new"><ph id="ph1">&lt;a name="templates"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Register push templates to send cross-platform notifications</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>To register templates, simply pass along templates with your <bpt id="p1">**</bpt>client.push registerDeviceToken<ept id="p1">**</ept> method in your client app.</source>
          <target state="new">To register templates, simply pass along templates with your <bpt id="p1">**</bpt>client.push registerDeviceToken<ept id="p1">**</ept> method in your client app.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Objective-C<ept id="p1">**</ept>:</source>
          <target state="new"><bpt id="p1">**</bpt>Objective-C<ept id="p1">**</ept>:</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Swift<ept id="p1">**</ept>:</source>
          <target state="new"><bpt id="p1">**</bpt>Swift<ept id="p1">**</ept>:</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Your templates will be of type NSDictionary and can contain multiple templates in the following format:</source>
          <target state="new">Your templates will be of type NSDictionary and can contain multiple templates in the following format:</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Objective-C<ept id="p1">**</ept>:</source>
          <target state="new"><bpt id="p1">**</bpt>Objective-C<ept id="p1">**</ept>:</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Swift<ept id="p1">**</ept>:</source>
          <target state="new"><bpt id="p1">**</bpt>Swift<ept id="p1">**</ept>:</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Note that all tags will be stripped away for security.</source>
          <target state="new">Note that all tags will be stripped away for security.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>To add tags to installations or templates within installations, see <bpt id="p1">[</bpt>Work with the .NET backend server SDK for Azure Mobile Apps<ept id="p1">](app-service-mobile-dotnet-backend-how-to-use-server-sdk.md#tags)</ept>.</source>
          <target state="new">To add tags to installations or templates within installations, see <bpt id="p1">[</bpt>Work with the .NET backend server SDK for Azure Mobile Apps<ept id="p1">](app-service-mobile-dotnet-backend-how-to-use-server-sdk.md#tags)</ept>.</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>To send notifications utilizing these registered templates, work with <bpt id="p1">[</bpt>Notification Hubs APIs<ept id="p1">](https://msdn.microsoft.com/library/azure/dn495101.aspx)</ept></source>
          <target state="new">To send notifications utilizing these registered templates, work with <bpt id="p1">[</bpt>Notification Hubs APIs<ept id="p1">](https://msdn.microsoft.com/library/azure/dn495101.aspx)</ept></target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="errors"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Handle Errors</source>
          <target state="new"><ph id="ph1">&lt;a name="errors"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Handle Errors</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>When you call a mobile service, the completion block contains an <ph id="ph1">`NSError`</ph> parameter.</source>
          <target state="new">When you call a mobile service, the completion block contains an <ph id="ph1">`NSError`</ph> parameter.</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>When an error occurs, this parameter is non-nil.</source>
          <target state="new">When an error occurs, this parameter is non-nil.</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>In your code, you should check this parameter and handle the error as needed, as demonstrated in the code snippets above.</source>
          <target state="new">In your code, you should check this parameter and handle the error as needed, as demonstrated in the code snippets above.</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The file <bpt id="p1">[</bpt><ph id="ph1">`&lt;WindowsAzureMobileServices/MSError.h&gt;`</ph><ept id="p1">](https://github.com/Azure/azure-mobile-services/blob/master/sdk/iOS/src/MSError.h)</ept> defines the constants <ph id="ph2">`MSErrorResponseKey`</ph>, <ph id="ph3">`MSErrorRequestKey`</ph>, and <ph id="ph4">`MSErrorServerItemKey`</ph> to get more data related to the error, obtainable as follows:</source>
          <target state="new">The file <bpt id="p1">[</bpt><ph id="ph1">`&lt;WindowsAzureMobileServices/MSError.h&gt;`</ph><ept id="p1">](https://github.com/Azure/azure-mobile-services/blob/master/sdk/iOS/src/MSError.h)</ept> defines the constants <ph id="ph2">`MSErrorResponseKey`</ph>, <ph id="ph3">`MSErrorRequestKey`</ph>, and <ph id="ph4">`MSErrorServerItemKey`</ph> to get more data related to the error, obtainable as follows:</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Objective-C<ept id="p1">**</ept>:</source>
          <target state="new"><bpt id="p1">**</bpt>Objective-C<ept id="p1">**</ept>:</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Swift<ept id="p1">**</ept>:</source>
          <target state="new"><bpt id="p1">**</bpt>Swift<ept id="p1">**</ept>:</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>In addition, the file defines constants for each error code, which may be used as shown below:</source>
          <target state="new">In addition, the file defines constants for each error code, which may be used as shown below:</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Objective-C<ept id="p1">**</ept>:</source>
          <target state="new"><bpt id="p1">**</bpt>Objective-C<ept id="p1">**</ept>:</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Swift<ept id="p1">**</ept>:</source>
          <target state="new"><bpt id="p1">**</bpt>Swift<ept id="p1">**</ept>:</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="adal"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Authenticate users with the Active Directory Authentication Library</source>
          <target state="new"><ph id="ph1">&lt;a name="adal"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Authenticate users with the Active Directory Authentication Library</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>You can use the Active Directory Authentication Library (ADAL) to sign users into your application using Azure Active Directory.</source>
          <target state="new">You can use the Active Directory Authentication Library (ADAL) to sign users into your application using Azure Active Directory.</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>This is often preferable to using the <ph id="ph1">`loginAsync()`</ph> methods, as it provides a more native UX feel and allows for additional customization.</source>
          <target state="new">This is often preferable to using the <ph id="ph1">`loginAsync()`</ph> methods, as it provides a more native UX feel and allows for additional customization.</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Configure your mobile app backend for AAD sign-in by followin the <bpt id="p1">[</bpt>How to configure App Service for Active Directory login<ept id="p1">](app-service-mobile-how-to-configure-active-directory-authentication.md)</ept> tutorial.</source>
          <target state="new">Configure your mobile app backend for AAD sign-in by followin the <bpt id="p1">[</bpt>How to configure App Service for Active Directory login<ept id="p1">](app-service-mobile-how-to-configure-active-directory-authentication.md)</ept> tutorial.</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Make sure to complete the optional step of registering a native client application.</source>
          <target state="new">Make sure to complete the optional step of registering a native client application.</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>For iOS, it is recommended (but not required) that the redirect URI is of the form <ph id="ph1">`&lt;app-scheme&gt;://&lt;bundle-id&gt;`</ph>.</source>
          <target state="new">For iOS, it is recommended (but not required) that the redirect URI is of the form <ph id="ph1">`&lt;app-scheme&gt;://&lt;bundle-id&gt;`</ph>.</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Please see the <bpt id="p1">[</bpt>ADAL iOS quickstart<ept id="p1">](active-directory-devquickstarts-ios.md#em1-determine-what-your-redirect-uri-will-be-for-iosem)</ept> for more details.</source>
          <target state="new">Please see the <bpt id="p1">[</bpt>ADAL iOS quickstart<ept id="p1">](active-directory-devquickstarts-ios.md#em1-determine-what-your-redirect-uri-will-be-for-iosem)</ept> for more details.</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Install ADAL using Cocoapods.</source>
          <target state="new">Install ADAL using Cocoapods.</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Edit your Podfile to include the following, replacing <bpt id="p1">**</bpt>YOUR-PROJECT<ept id="p1">**</ept> with the name of your Xcode project:</source>
          <target state="new">Edit your Podfile to include the following, replacing <bpt id="p1">**</bpt>YOUR-PROJECT<ept id="p1">**</ept> with the name of your Xcode project:</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>and the Pod:</source>
          <target state="new">and the Pod:</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Using the Terminal, run <ph id="ph1">`pod install`</ph> from the directory containing your project, and then open the generated Xcode workspace (not the project).</source>
          <target state="new">Using the Terminal, run <ph id="ph1">`pod install`</ph> from the directory containing your project, and then open the generated Xcode workspace (not the project).</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Add the below code to your application, according to the language you are using.</source>
          <target state="new">Add the below code to your application, according to the language you are using.</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>In each, make the following replacements:</source>
          <target state="new">In each, make the following replacements:</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Replace <bpt id="p1">**</bpt>INSERT-AUTHORITY-HERE<ept id="p1">**</ept> ith the name of the tenant in which you provisioned your application.</source>
          <target state="new">Replace <bpt id="p1">**</bpt>INSERT-AUTHORITY-HERE<ept id="p1">**</ept> ith the name of the tenant in which you provisioned your application.</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The format should be https://login.windows.net/contoso.onmicrosoft.com.</source>
          <target state="new">The format should be https://login.windows.net/contoso.onmicrosoft.com.</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>This value can be copied out of the Domain tab in your Azure Active Directory in the [Azure classic portal].</source>
          <target state="new">This value can be copied out of the Domain tab in your Azure Active Directory in the [Azure classic portal].</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Replace <bpt id="p1">**</bpt>INSERT-RESOURCE-ID-HERE<ept id="p1">**</ept> with the client ID for your mobile app backend.</source>
          <target state="new">Replace <bpt id="p1">**</bpt>INSERT-RESOURCE-ID-HERE<ept id="p1">**</ept> with the client ID for your mobile app backend.</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>You can obtain this from the <bpt id="p1">**</bpt>Advanced<ept id="p1">**</ept> tab under <bpt id="p2">**</bpt>Azure Active Directory Settings<ept id="p2">**</ept> in the portal.</source>
          <target state="new">You can obtain this from the <bpt id="p1">**</bpt>Advanced<ept id="p1">**</ept> tab under <bpt id="p2">**</bpt>Azure Active Directory Settings<ept id="p2">**</ept> in the portal.</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Replace <bpt id="p1">**</bpt>INSERT-CLIENT-ID-HERE<ept id="p1">**</ept> with the client ID you copied from the native client application.</source>
          <target state="new">Replace <bpt id="p1">**</bpt>INSERT-CLIENT-ID-HERE<ept id="p1">**</ept> with the client ID you copied from the native client application.</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Replace <bpt id="p1">**</bpt>INSERT-REDIRECT-URI-HERE<ept id="p1">**</ept> with your site's <bpt id="p2">_</bpt>/.auth/login/done<ept id="p2">_</ept> endpoint, using the HTTPS scheme.</source>
          <target state="new">Replace <bpt id="p1">**</bpt>INSERT-REDIRECT-URI-HERE<ept id="p1">**</ept> with your site's <bpt id="p2">_</bpt>/.auth/login/done<ept id="p2">_</ept> endpoint, using the HTTPS scheme.</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>This value should be similar to <bpt id="p1">_</bpt>https://contoso.azurewebsites.net/.auth/login/done<ept id="p1">_</ept>.</source>
          <target state="new">This value should be similar to <bpt id="p1">_</bpt>https://contoso.azurewebsites.net/.auth/login/done<ept id="p1">_</ept>.</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Objective-C<ept id="p1">**</ept>:</source>
          <target state="new"><bpt id="p1">**</bpt>Objective-C<ept id="p1">**</ept>:</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Swift<ept id="p1">**</ept>:</source>
          <target state="new"><bpt id="p1">**</bpt>Swift<ept id="p1">**</ept>:</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>