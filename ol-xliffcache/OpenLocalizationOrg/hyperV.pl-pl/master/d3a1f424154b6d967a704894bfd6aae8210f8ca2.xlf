<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="pl-pl">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d3a1f424154b6d967a704894bfd6aae8210f8ca2</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Build and deploy a Java API app in Azure App Service</source>
          <target state="new">Build and deploy a Java API app in Azure App Service</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to create a Java API app package and deploy it to Azure App Service.</source>
          <target state="new">Learn how to create a Java API app package and deploy it to Azure App Service.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Build and deploy a Java API app in Azure App Service</source>
          <target state="new">Build and deploy a Java API app in Azure App Service</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This tutorial shows how to create a Java application and deploy it to Azure App Service API Apps using <bpt id="p1">[</bpt>Git<ept id="p1">](http://git-scm.com)</ept>.</source>
          <target state="new">This tutorial shows how to create a Java application and deploy it to Azure App Service API Apps using <bpt id="p1">[</bpt>Git<ept id="p1">](http://git-scm.com)</ept>.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The instructions in this tutorial can be followed on any operating system that is capable of running Java.</source>
          <target state="new">The instructions in this tutorial can be followed on any operating system that is capable of running Java.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The code in this tutorial is built using <bpt id="p1">[</bpt>Maven<ept id="p1">](https://maven.apache.org/)</ept>.</source>
          <target state="new">The code in this tutorial is built using <bpt id="p1">[</bpt>Maven<ept id="p1">](https://maven.apache.org/)</ept>.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Jax-RS<ept id="p1">](https://jax-rs-spec.java.net/)</ept> is used to create the RESTful Service, and is generated based on <bpt id="p2">[</bpt>Swagger<ept id="p2">](http://swagger.io)</ept> metadata specification using the <bpt id="p3">[</bpt>Swagger Editor<ept id="p3">](http://editor.swagger.io/)</ept>.</source>
          <target state="new"><bpt id="p1">[</bpt>Jax-RS<ept id="p1">](https://jax-rs-spec.java.net/)</ept> is used to create the RESTful Service, and is generated based on <bpt id="p2">[</bpt>Swagger<ept id="p2">](http://swagger.io)</ept> metadata specification using the <bpt id="p3">[</bpt>Swagger Editor<ept id="p3">](http://editor.swagger.io/)</ept>.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="new">Prerequisites</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Java Developer's Kit 8<ept id="p1">](http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html)</ept> (or later)</source>
          <target state="new"><bpt id="p1">[</bpt>Java Developer's Kit 8<ept id="p1">](http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html)</ept> (or later)</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>A paid or <bpt id="p1">[</bpt>free trial<ept id="p1">](https://azure.microsoft.com/pricing/free-trial/)</ept> subscription to <bpt id="p2">[</bpt>Microsoft Azure<ept id="p2">](https://azure.microsoft.com)</ept></source>
          <target state="new">A paid or <bpt id="p1">[</bpt>free trial<ept id="p1">](https://azure.microsoft.com/pricing/free-trial/)</ept> subscription to <bpt id="p2">[</bpt>Microsoft Azure<ept id="p2">](https://azure.microsoft.com)</ept></target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Maven<ept id="p1">](https://maven.apache.org/)</ept> installed on your development machine</source>
          <target state="new"><bpt id="p1">[</bpt>Maven<ept id="p1">](https://maven.apache.org/)</ept> installed on your development machine</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Git installed on your development machine.</source>
          <target state="new">Git installed on your development machine.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Scaffold the API using Swagger.IO</source>
          <target state="new">Scaffold the API using Swagger.IO</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Using the swagger.io online editor, you can enter in Swagger JSON or YAML code representing the structure of your API.</source>
          <target state="new">Using the swagger.io online editor, you can enter in Swagger JSON or YAML code representing the structure of your API.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Once you've got the API surface area designed, you can export code in a variety of platforms and frameworks.</source>
          <target state="new">Once you've got the API surface area designed, you can export code in a variety of platforms and frameworks.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>In the next section the scaffolded code will be modified to include mock functionality.</source>
          <target state="new">In the next section the scaffolded code will be modified to include mock functionality.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This demonstration will begin with a Swagger JSON body that will be pasted into the swagger.io editor, which will then be used to generate code making use of JAX-RS to access a REST API endpoint.</source>
          <target state="new">This demonstration will begin with a Swagger JSON body that will be pasted into the swagger.io editor, which will then be used to generate code making use of JAX-RS to access a REST API endpoint.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Then, you'll edit the scaffolded code to return mock data, simulating a REST API built atop a data persistence mechanism.</source>
          <target state="new">Then, you'll edit the scaffolded code to return mock data, simulating a REST API built atop a data persistence mechanism.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Copy the Swagger JSON code below to your clipboard</source>
          <target state="new">Copy the Swagger JSON code below to your clipboard</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Navigate to the <bpt id="p1">[</bpt>Online Swagger editor<ept id="p1">](http://editor.swagger.io/)</ept>.</source>
          <target state="new">Navigate to the <bpt id="p1">[</bpt>Online Swagger editor<ept id="p1">](http://editor.swagger.io/)</ept>.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Once there, click the <bpt id="p1">**</bpt>File -&gt; Paste JSON<ept id="p1">**</ept> menu item.</source>
          <target state="new">Once there, click the <bpt id="p1">**</bpt>File -&gt; Paste JSON<ept id="p1">**</ept> menu item.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Paste Json</source>
          <target state="new">Paste Json</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Paste in the Contacts List API Swagger JSON you copied earlier.</source>
          <target state="new">Paste in the Contacts List API Swagger JSON you copied earlier.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Pasted Swagger</source>
          <target state="new">Pasted Swagger</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>View the documentation pages and API summary rendered in the editor.</source>
          <target state="new">View the documentation pages and API summary rendered in the editor.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>View Swagger Generated Docs</source>
          <target state="new">View Swagger Generated Docs</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Select the <bpt id="p1">**</bpt>Generate Server -&gt; JAX-RS<ept id="p1">**</ept> menu option to scaffold the server-side code you'll edit later to add mock implementation.</source>
          <target state="new">Select the <bpt id="p1">**</bpt>Generate Server -&gt; JAX-RS<ept id="p1">**</ept> menu option to scaffold the server-side code you'll edit later to add mock implementation.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Generate Code Menu Item</source>
          <target state="new">Generate Code Menu Item</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Once the code is generated you'll be provided a ZIP file to download.</source>
          <target state="new">Once the code is generated you'll be provided a ZIP file to download.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This file contains the code scaffolded by the Swagger code generator and all of the associated build scripts.</source>
          <target state="new">This file contains the code scaffolded by the Swagger code generator and all of the associated build scripts.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Unzip the entire library to a directory on your development workstation.</source>
          <target state="new">Unzip the entire library to a directory on your development workstation.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Edit the Code to add API Implementation</source>
          <target state="new">Edit the Code to add API Implementation</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>In this section you'll replace the generated code's server-side implementation with your custom code.</source>
          <target state="new">In this section you'll replace the generated code's server-side implementation with your custom code.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The new code will return an ArrayList of Contact entities to the calling client.</source>
          <target state="new">The new code will return an ArrayList of Contact entities to the calling client.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Open the <bpt id="p1">*</bpt>Contact.java<ept id="p1">*</ept> model file, located in the <bpt id="p2">*</bpt>src/gen/java/swagger/model<ept id="p2">*</ept> folder, using <bpt id="p3">[</bpt>Visual Studio Code<ept id="p3">](https://code.visualstudio.com)</ept> or in your favorite text editor.</source>
          <target state="new">Open the <bpt id="p1">*</bpt>Contact.java<ept id="p1">*</ept> model file, located in the <bpt id="p2">*</bpt>src/gen/java/swagger/model<ept id="p2">*</ept> folder, using <bpt id="p3">[</bpt>Visual Studio Code<ept id="p3">](https://code.visualstudio.com)</ept> or in your favorite text editor.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Open Contact Model File</source>
          <target state="new">Open Contact Model File</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Add the following constructor to the <bpt id="p1">**</bpt>Contact<ept id="p1">**</ept> class.</source>
          <target state="new">Add the following constructor to the <bpt id="p1">**</bpt>Contact<ept id="p1">**</ept> class.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Open the <bpt id="p1">*</bpt>ContactsApiServiceImpl.java<ept id="p1">*</ept> service implementation file, located in the <bpt id="p2">*</bpt>src/main/java/swagger/api/impl<ept id="p2">*</ept> folder, using <bpt id="p3">[</bpt>Visual Studio Code<ept id="p3">](https://code.visualstudio.com)</ept> or in your favorite text editor.</source>
          <target state="new">Open the <bpt id="p1">*</bpt>ContactsApiServiceImpl.java<ept id="p1">*</ept> service implementation file, located in the <bpt id="p2">*</bpt>src/main/java/swagger/api/impl<ept id="p2">*</ept> folder, using <bpt id="p3">[</bpt>Visual Studio Code<ept id="p3">](https://code.visualstudio.com)</ept> or in your favorite text editor.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Open Contact Service Code File</source>
          <target state="new">Open Contact Service Code File</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Overwrite the code in the file with this new code to add a mock implementation to the service code.</source>
          <target state="new">Overwrite the code in the file with this new code to add a mock implementation to the service code.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Open a command prompt.</source>
          <target state="new">Open a command prompt.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Execute the following Maven command to build the code and run it using the Jetty app server locally.</source>
          <target state="new">Execute the following Maven command to build the code and run it using the Jetty app server locally.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>You should see the command window reflect that Jetty has started your code on port 8080.</source>
          <target state="new">You should see the command window reflect that Jetty has started your code on port 8080.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Open Contact Service Code File</source>
          <target state="new">Open Contact Service Code File</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Use <bpt id="p1">[</bpt>Postman<ept id="p1">](https://www.getpostman.com/)</ept> to make a request to the "get all contacts" API method located at http://localhost:8080/api/contacts.</source>
          <target state="new">Use <bpt id="p1">[</bpt>Postman<ept id="p1">](https://www.getpostman.com/)</ept> to make a request to the "get all contacts" API method located at http://localhost:8080/api/contacts.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Call the Contacts API</source>
          <target state="new">Call the Contacts API</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Use <bpt id="p1">[</bpt>Postman<ept id="p1">](https://www.getpostman.com/)</ept> to make a request to the "get specific contact" API method located at http://localhost:8080/api/contacts/2.</source>
          <target state="new">Use <bpt id="p1">[</bpt>Postman<ept id="p1">](https://www.getpostman.com/)</ept> to make a request to the "get specific contact" API method located at http://localhost:8080/api/contacts/2.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Call the Contacts API</source>
          <target state="new">Call the Contacts API</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Finally, build the Java WAR (Web ARchive) file by executing the following Maven command in your console.</source>
          <target state="new">Finally, build the Java WAR (Web ARchive) file by executing the following Maven command in your console.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Once the WAR file is built, it will be placed into the <bpt id="p1">**</bpt>target<ept id="p1">**</ept> folder.</source>
          <target state="new">Once the WAR file is built, it will be placed into the <bpt id="p1">**</bpt>target<ept id="p1">**</ept> folder.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Navigate into the <bpt id="p1">**</bpt>target<ept id="p1">**</ept> folder and rename the WAR file <bpt id="p2">**</bpt>ROOT.war<ept id="p2">**</ept> (make sure the capitalization matches this format).</source>
          <target state="new">Navigate into the <bpt id="p1">**</bpt>target<ept id="p1">**</ept> folder and rename the WAR file <bpt id="p2">**</bpt>ROOT.war<ept id="p2">**</ept> (make sure the capitalization matches this format).</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Finally, execute the following commands to create a <bpt id="p1">**</bpt>deploy<ept id="p1">**</ept> folder to use to deploy the WAR file to Azure.</source>
          <target state="new">Finally, execute the following commands to create a <bpt id="p1">**</bpt>deploy<ept id="p1">**</ept> folder to use to deploy the WAR file to Azure.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Publish the output to Azure App Service</source>
          <target state="new">Publish the output to Azure App Service</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>In this section you'll learn how to create a new API App using the Azure Portal, prepare that API App for hosting Java applications, and deploy the newly-created WAR file to Azure App Service to run your new API App.</source>
          <target state="new">In this section you'll learn how to create a new API App using the Azure Portal, prepare that API App for hosting Java applications, and deploy the newly-created WAR file to Azure App Service to run your new API App.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Create a new API app in the <bpt id="p1">[</bpt>Azure portal<ept id="p1">](http://portal.azure.com)</ept>, by clicking on the <bpt id="p2">**</bpt>New -&gt; Web + Mobile -&gt; API app<ept id="p2">**</ept> menu item.</source>
          <target state="new">Create a new API app in the <bpt id="p1">[</bpt>Azure portal<ept id="p1">](http://portal.azure.com)</ept>, by clicking on the <bpt id="p2">**</bpt>New -&gt; Web + Mobile -&gt; API app<ept id="p2">**</ept> menu item.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Create a new API App</source>
          <target state="new">Create a new API App</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>Application settings<ept id="p1">**</ept> option in the API App's settings blade.</source>
          <target state="new">Click the <bpt id="p1">**</bpt>Application settings<ept id="p1">**</ept> option in the API App's settings blade.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Then, select the latest Java versions from the Java version menus, and select the latest Tomcat from the Web container menu.</source>
          <target state="new">Then, select the latest Java versions from the Java version menus, and select the latest Tomcat from the Web container menu.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Set up Java in the API App blade</source>
          <target state="new">Set up Java in the API App blade</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>Deployment credentials<ept id="p1">**</ept> settings menu item, and provide a username and passowrd you wish to use for publishing files to your API App.</source>
          <target state="new">Click the <bpt id="p1">**</bpt>Deployment credentials<ept id="p1">**</ept> settings menu item, and provide a username and passowrd you wish to use for publishing files to your API App.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Set deployment credentials</source>
          <target state="new">Set deployment credentials</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>Continuous Deployment<ept id="p1">**</ept> settings menu item.</source>
          <target state="new">Click the <bpt id="p1">**</bpt>Continuous Deployment<ept id="p1">**</ept> settings menu item.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Once there, click the <bpt id="p1">**</bpt>Choose source<ept id="p1">**</ept> button and select the <bpt id="p2">**</bpt>Local Git Repository<ept id="p2">**</ept> option.</source>
          <target state="new">Once there, click the <bpt id="p1">**</bpt>Choose source<ept id="p1">**</ept> button and select the <bpt id="p2">**</bpt>Local Git Repository<ept id="p2">**</ept> option.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>This will create a Git repository running in Azure, that has an association with your API App.</source>
          <target state="new">This will create a Git repository running in Azure, that has an association with your API App.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Each time you commit code to the <bpt id="p1">*</bpt>master<ept id="p1">*</ept> branch of your Git repository, your code will be published into your live running API App instance.</source>
          <target state="new">Each time you commit code to the <bpt id="p1">*</bpt>master<ept id="p1">*</ept> branch of your Git repository, your code will be published into your live running API App instance.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Set up a new local Git repository</source>
          <target state="new">Set up a new local Git repository</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Copy the new Git repository's URL to your clipboard.</source>
          <target state="new">Copy the new Git repository's URL to your clipboard.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Save this as it will be important in a moment.</source>
          <target state="new">Save this as it will be important in a moment.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Set up a new Git reposutory for your app</source>
          <target state="new">Set up a new Git reposutory for your app</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Git push the WAR file to the online repository.</source>
          <target state="new">Git push the WAR file to the online repository.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>To do this, navigate into the <bpt id="p1">**</bpt>deploy<ept id="p1">**</ept> folder you created earlier so that you can easily commit the code up to the repository running in your App Service.</source>
          <target state="new">To do this, navigate into the <bpt id="p1">**</bpt>deploy<ept id="p1">**</ept> folder you created earlier so that you can easily commit the code up to the repository running in your App Service.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Once you're in the console window and navigated into the folder where the webapps folder is located, issue the following Git commands to launch the process and fire off a deployment.</source>
          <target state="new">Once you're in the console window and navigated into the folder where the webapps folder is located, issue the following Git commands to launch the process and fire off a deployment.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Once you issue the <bpt id="p1">**</bpt>push<ept id="p1">**</ept> request, you'll be asked for the password you created for the deployment credential earlier.</source>
          <target state="new">Once you issue the <bpt id="p1">**</bpt>push<ept id="p1">**</ept> request, you'll be asked for the password you created for the deployment credential earlier.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>If you enter it in you should see your portal display the update has arrived and was deployed.</source>
          <target state="new">If you enter it in you should see your portal display the update has arrived and was deployed.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>If you once again use Postman to hit the newly-deployed API App running in Azure App Service, you'll see that the behavior is consistent and that now it is returning contact data as expected, and using simple code changes to the Swagger.io scaffolded Java code.</source>
          <target state="new">If you once again use Postman to hit the newly-deployed API App running in Azure App Service, you'll see that the behavior is consistent and that now it is returning contact data as expected, and using simple code changes to the Swagger.io scaffolded Java code.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Using your Java Contacts REST API live in Azure</source>
          <target state="new">Using your Java Contacts REST API live in Azure</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Next steps</source>
          <target state="new">Next steps</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>In this article you were able to start with a Swagger JSON file and some scaffolded Java code obtained from the Swagger.io editor.</source>
          <target state="new">In this article you were able to start with a Swagger JSON file and some scaffolded Java code obtained from the Swagger.io editor.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>From there, your simple changes and a Git deploy process resulted in having a functional API app written in Java.</source>
          <target state="new">From there, your simple changes and a Git deploy process resulted in having a functional API app written in Java.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The next tutorial in the API Apps getting started series shows how to <bpt id="p1">[</bpt>consume API apps from JavaScript clients, using CORS<ept id="p1">](app-service-api-cors-consume-javascript.md)</ept>.</source>
          <target state="new">The next tutorial in the API Apps getting started series shows how to <bpt id="p1">[</bpt>consume API apps from JavaScript clients, using CORS<ept id="p1">](app-service-api-cors-consume-javascript.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>To build on this sample, you can learn more about the <bpt id="p1">[</bpt>Storage SDK for Java<ept id="p1">](../storage/storage-java-how-to-use-blob-storage.md)</ept> to persist the JSON blobs.</source>
          <target state="new">To build on this sample, you can learn more about the <bpt id="p1">[</bpt>Storage SDK for Java<ept id="p1">](../storage/storage-java-how-to-use-blob-storage.md)</ept> to persist the JSON blobs.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Or, you could use the <bpt id="p1">[</bpt>Document DB Java SDK<ept id="p1">](../documentdb/documentdb-java-application.md)</ept> to save your Contact data to Azure Document DB.</source>
          <target state="new">Or, you could use the <bpt id="p1">[</bpt>Document DB Java SDK<ept id="p1">](../documentdb/documentdb-java-application.md)</ept> to save your Contact data to Azure Document DB.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>For more information about using Java in Azure, see the <bpt id="p1">[</bpt>Java Developer Center<ept id="p1">](/develop/java/)</ept>.</source>
          <target state="new">For more information about using Java in Azure, see the <bpt id="p1">[</bpt>Java Developer Center<ept id="p1">](/develop/java/)</ept>.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>