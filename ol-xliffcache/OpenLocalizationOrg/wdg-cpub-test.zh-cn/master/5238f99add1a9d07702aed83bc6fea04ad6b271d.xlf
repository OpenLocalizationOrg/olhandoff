<?xml version="1.0" encoding="utf-8"?>
<xliff srcLang="en-US" trgLang="zh-cn" version="2.0" xmlns="urn:oasis:names:tc:xliff:document:2.0" xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">5238f99add1a9d07702aed83bc6fea04ad6b271d</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source xml:space="preserve">Description: Learn how to store and retrieve local, roaming, and temporary app data.</source>
          <target xml:space="preserve">Description: Learn how to store and retrieve local, roaming, and temporary app data.</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source xml:space="preserve">title: Store and retrieve settings and other app data</source>
          <target xml:space="preserve">title: Store and retrieve settings and other app data</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source xml:space="preserve">ms.assetid: 41676A02-325A-455E-8565-C9EC0BC3A8FE</source>
          <target xml:space="preserve">ms.assetid: 41676A02-325A-455E-8565-C9EC0BC3A8FE</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source xml:space="preserve">label: App settings and data</source>
          <target xml:space="preserve">label: App settings and data</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source xml:space="preserve">template: detail.hbs</source>
          <target xml:space="preserve">template: detail.hbs</target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source xml:space="preserve">Store and retrieve settings and other app data</source>
          <target xml:space="preserve">Store and retrieve settings and other app data</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source xml:space="preserve">\[ Updated for UWP apps on Windows 10.</source>
          <target xml:space="preserve">\[ Updated for UWP apps on Windows 10.</target>
        </segment>
      </unit>
      <unit id="108">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
          <target xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
        </segment>
      </unit>
      <unit id="109">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">App data</pc> is mutable data that is specific to a particular app.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">App data</pc> is mutable data that is specific to a particular app.</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source xml:space="preserve">It includes runtime state, user preferences, and other settings.</source>
          <target xml:space="preserve">It includes runtime state, user preferences, and other settings.</target>
        </segment>
      </unit>
      <unit id="111">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">App data is different from <pc dataRefEnd="id2" dataRefStart="id1" id="p1">user data</pc>, data that the user creates and manages when using an app.</source>
          <target xml:space="preserve">App data is different from <pc dataRefEnd="id2" dataRefStart="id1" id="p1">user data</pc>, data that the user creates and manages when using an app.</target>
        </segment>
      </unit>
      <unit id="112">
        <segment state="initial">
          <source xml:space="preserve">User data includes document or media files, email or communication transcripts, or database records holding content created by the user.</source>
          <target xml:space="preserve">User data includes document or media files, email or communication transcripts, or database records holding content created by the user.</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source xml:space="preserve">User data may be useful or meaningful to more than one app.</source>
          <target xml:space="preserve">User data may be useful or meaningful to more than one app.</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source xml:space="preserve">Often, this is data that the user wants to manipulate or transmit as an entity independent of the app itself, such as a document.</source>
          <target xml:space="preserve">Often, this is data that the user wants to manipulate or transmit as an entity independent of the app itself, such as a document.</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source xml:space="preserve">**Important note about app data:  **The lifetime of the app data is tied to the lifetime of the app.</source>
          <target xml:space="preserve">**Important note about app data:  **The lifetime of the app data is tied to the lifetime of the app.</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source xml:space="preserve">If the app is removed, all of the app data will be lost as a consequence.</source>
          <target xml:space="preserve">If the app is removed, all of the app data will be lost as a consequence.</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source xml:space="preserve">Don't use app data to store user data or anything that users might perceive as valuable and irreplaceable.</source>
          <target xml:space="preserve">Don't use app data to store user data or anything that users might perceive as valuable and irreplaceable.</target>
        </segment>
      </unit>
      <unit id="118">
        <segment state="initial">
          <source xml:space="preserve">We recommend that the user's libraries and Microsoft OneDrive be used to store this sort of information.</source>
          <target xml:space="preserve">We recommend that the user's libraries and Microsoft OneDrive be used to store this sort of information.</target>
        </segment>
      </unit>
      <unit id="119">
        <segment state="initial">
          <source xml:space="preserve">App data is ideal for storing app-specific user preferences, settings, and favorites.</source>
          <target xml:space="preserve">App data is ideal for storing app-specific user preferences, settings, and favorites.</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source xml:space="preserve">Types of app data</source>
          <target xml:space="preserve">Types of app data</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source xml:space="preserve">There are two types of app data: settings and files.</source>
          <target xml:space="preserve">There are two types of app data: settings and files.</target>
        </segment>
      </unit>
      <unit id="122">
        <segment state="initial">
          <source xml:space="preserve">Settings</source>
          <target xml:space="preserve">Settings</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source xml:space="preserve">Use settings to store user preferences and application state info.</source>
          <target xml:space="preserve">Use settings to store user preferences and application state info.</target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source xml:space="preserve">The app data API enables you to easily create and retrieve settings (we'll show you some examples later in this article).</source>
          <target xml:space="preserve">The app data API enables you to easily create and retrieve settings (we'll show you some examples later in this article).</target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source xml:space="preserve">Here are data types you can use for app settings:</source>
          <target xml:space="preserve">Here are data types you can use for app settings:</target>
        </segment>
      </unit>
      <unit id="126">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
          <data id="id9">**</data>
          <data id="id10">**</data>
          <data id="id11">**</data>
          <data id="id12">**</data>
          <data id="id13">**</data>
          <data id="id14">**</data>
          <data id="id15">**</data>
          <data id="id16">**</data>
          <data id="id17">**</data>
          <data id="id18">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">UInt8</pc>, <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Int16</pc>, <pc dataRefEnd="id6" dataRefStart="id5" id="p3">UInt16</pc>, <pc dataRefEnd="id8" dataRefStart="id7" id="p4">Int32</pc>, <pc dataRefEnd="id10" dataRefStart="id9" id="p5">UInt32</pc>, <pc dataRefEnd="id12" dataRefStart="id11" id="p6">Int64</pc>, <pc dataRefEnd="id14" dataRefStart="id13" id="p7">UInt64</pc>, <pc dataRefEnd="id16" dataRefStart="id15" id="p8">Single</pc>, <pc dataRefEnd="id18" dataRefStart="id17" id="p9">Double</pc></source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">UInt8</pc>, <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Int16</pc>, <pc dataRefEnd="id6" dataRefStart="id5" id="p3">UInt16</pc>, <pc dataRefEnd="id8" dataRefStart="id7" id="p4">Int32</pc>, <pc dataRefEnd="id10" dataRefStart="id9" id="p5">UInt32</pc>, <pc dataRefEnd="id12" dataRefStart="id11" id="p6">Int64</pc>, <pc dataRefEnd="id14" dataRefStart="id13" id="p7">UInt64</pc>, <pc dataRefEnd="id16" dataRefStart="id15" id="p8">Single</pc>, <pc dataRefEnd="id18" dataRefStart="id17" id="p9">Double</pc></target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source xml:space="preserve">Boolean</source>
          <target xml:space="preserve">Boolean</target>
        </segment>
      </unit>
      <unit id="128">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Char16</pc>, <pc dataRefEnd="id4" dataRefStart="id3" id="p2">String</pc></source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Char16</pc>, <pc dataRefEnd="id4" dataRefStart="id3" id="p2">String</pc></target>
        </segment>
      </unit>
      <unit id="129">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br206576)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/br225996)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">
							<pc dataRefEnd="id4" dataRefStart="id3" id="p2">DateTime</pc>
						</pc>, <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">TimeSpan</pc></pc></source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">
							<pc dataRefEnd="id4" dataRefStart="id3" id="p2">DateTime</pc>
						</pc>, <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">TimeSpan</pc></pc></target>
        </segment>
      </unit>
      <unit id="130">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/br225870)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">[</data>
          <data id="id8">](https://msdn.microsoft.com/library/windows/apps/br225995)</data>
          <data id="id9">**</data>
          <data id="id10">**</data>
          <data id="id11">[</data>
          <data id="id12">](https://msdn.microsoft.com/library/windows/apps/br225994)</data>
          <data id="id13">**</data>
          <data id="id14">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">GUID</pc>, <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">Point</pc></pc>, <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">Size</pc></pc>, <pc dataRefEnd="id12" dataRefStart="id11" id="p6"><pc dataRefEnd="id14" dataRefStart="id13" id="p7">Rect</pc></pc></source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">GUID</pc>, <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">Point</pc></pc>, <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">Size</pc></pc>, <pc dataRefEnd="id12" dataRefStart="id11" id="p6"><pc dataRefEnd="id14" dataRefStart="id13" id="p7">Rect</pc></pc></target>
        </segment>
      </unit>
      <unit id="131">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br241588)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">
							<pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationDataCompositeValue</pc>
						</pc>: A set of related app settings that must be serialized and deserialized atomically.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">
							<pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationDataCompositeValue</pc>
						</pc>: A set of related app settings that must be serialized and deserialized atomically.</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source xml:space="preserve">Use composite settings to easily handle atomic updates of interdependent settings.</source>
          <target xml:space="preserve">Use composite settings to easily handle atomic updates of interdependent settings.</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source xml:space="preserve">The system ensures the integrity of composite settings during concurrent access and roaming.</source>
          <target xml:space="preserve">The system ensures the integrity of composite settings during concurrent access and roaming.</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source xml:space="preserve">Composite settings are optimized for small amounts of data, and performance can be poor if you use them for large data sets.</source>
          <target xml:space="preserve">Composite settings are optimized for small amounts of data, and performance can be poor if you use them for large data sets.</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source xml:space="preserve">Files</source>
          <target xml:space="preserve">Files</target>
        </segment>
      </unit>
      <unit id="136">
        <segment state="initial">
          <source xml:space="preserve">Use files to store binary data or to enable your own, customized serialized types.</source>
          <target xml:space="preserve">Use files to store binary data or to enable your own, customized serialized types.</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source xml:space="preserve">Storing app data in the app data stores</source>
          <target xml:space="preserve">Storing app data in the app data stores</target>
        </segment>
      </unit>
      <unit id="138">
        <segment state="initial">
          <source xml:space="preserve">When an app is installed, the system gives it its own per-user data stores for settings and files.</source>
          <target xml:space="preserve">When an app is installed, the system gives it its own per-user data stores for settings and files.</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source xml:space="preserve">You don't need to know where or how this data exists, because the system is responsible for managing the physical storage, ensuring that the data is kept isolated from other apps and other users.</source>
          <target xml:space="preserve">You don't need to know where or how this data exists, because the system is responsible for managing the physical storage, ensuring that the data is kept isolated from other apps and other users.</target>
        </segment>
      </unit>
      <unit id="140">
        <segment state="initial">
          <source xml:space="preserve">The system also preserves the contents of these data stores when the user installs an update to your app and removes the contents of these data stores completely and cleanly when your app is uninstalled.</source>
          <target xml:space="preserve">The system also preserves the contents of these data stores when the user installs an update to your app and removes the contents of these data stores completely and cleanly when your app is uninstalled.</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source xml:space="preserve">Within its app data store, each app has system-defined root directories: one for local files, one for roaming files, and one for temporary files.</source>
          <target xml:space="preserve">Within its app data store, each app has system-defined root directories: one for local files, one for roaming files, and one for temporary files.</target>
        </segment>
      </unit>
      <unit id="142">
        <segment state="initial">
          <source xml:space="preserve">Your app can add new files and new containers to each of these root directories.</source>
          <target xml:space="preserve">Your app can add new files and new containers to each of these root directories.</target>
        </segment>
      </unit>
      <unit id="143">
        <segment state="initial">
          <source xml:space="preserve">Local app data</source>
          <target xml:space="preserve">Local app data</target>
        </segment>
      </unit>
      <unit id="144">
        <segment state="initial">
          <source xml:space="preserve">Local app data should be used for any information that needs to be preserved between app sessions and is not suitable for roaming app data.</source>
          <target xml:space="preserve">Local app data should be used for any information that needs to be preserved between app sessions and is not suitable for roaming app data.</target>
        </segment>
      </unit>
      <unit id="145">
        <segment state="initial">
          <source xml:space="preserve">Data that is not applicable on other devices should be stored here as well.</source>
          <target xml:space="preserve">Data that is not applicable on other devices should be stored here as well.</target>
        </segment>
      </unit>
      <unit id="146">
        <segment state="initial">
          <source xml:space="preserve">There is no general size restriction on local data stored.</source>
          <target xml:space="preserve">There is no general size restriction on local data stored.</target>
        </segment>
      </unit>
      <unit id="147">
        <segment state="initial">
          <source xml:space="preserve">Use the local app data store for data that it does not make sense to roam and for large data sets.</source>
          <target xml:space="preserve">Use the local app data store for data that it does not make sense to roam and for large data sets.</target>
        </segment>
      </unit>
      <unit id="148">
        <segment state="initial">
          <source xml:space="preserve">Retrieve the local app data store</source>
          <target xml:space="preserve">Retrieve the local app data store</target>
        </segment>
      </unit>
      <unit id="149">
        <segment state="initial">
          <source xml:space="preserve">Before you can read or write local app data, you must retrieve the local app data store.</source>
          <target xml:space="preserve">Before you can read or write local app data, you must retrieve the local app data store.</target>
        </segment>
      </unit>
      <unit id="150">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br241622)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/br241599)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To retrieve the local app data store, use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationData.LocalSettings</pc></pc> property to get the app's local settings as an <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">ApplicationDataContainer</pc></pc> object.</source>
          <target xml:space="preserve">To retrieve the local app data store, use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationData.LocalSettings</pc></pc> property to get the app's local settings as an <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">ApplicationDataContainer</pc></pc> object.</target>
        </segment>
      </unit>
      <unit id="151">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br241621)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/br227230)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationData.LocalFolder</pc></pc> property to get the files in a <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">StorageFolder</pc></pc> object.</source>
          <target xml:space="preserve">Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationData.LocalFolder</pc></pc> property to get the files in a <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">StorageFolder</pc></pc> object.</target>
        </segment>
      </unit>
      <unit id="152">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn633825)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationData.LocalCacheFolder</pc></pc> property to get the folder in the local app data store where you can save files that are not included in backup and restore.</source>
          <target xml:space="preserve">Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationData.LocalCacheFolder</pc></pc> property to get the folder in the local app data store where you can save files that are not included in backup and restore.</target>
        </segment>
      </unit>
      <unit id="153">
        <segment state="initial">
          <source xml:space="preserve">Create and retrieve a simple local setting</source>
          <target xml:space="preserve">Create and retrieve a simple local setting</target>
        </segment>
      </unit>
      <unit id="154">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br241615)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">`localSettings`</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To create or write a setting, use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationDataContainer.Values</pc></pc> property to access the settings in the <ph dataRef="id5" id="ph1" /> container we got in the previous step.</source>
          <target xml:space="preserve">To create or write a setting, use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationDataContainer.Values</pc></pc> property to access the settings in the <ph dataRef="id5" id="ph1" /> container we got in the previous step.</target>
        </segment>
      </unit>
      <unit id="155">
        <originalData>
          <data id="id1">`exampleSetting`</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">This example creates a setting named <ph dataRef="id1" id="ph1" />.</source>
          <target xml:space="preserve">This example creates a setting named <ph dataRef="id1" id="ph1" />.</target>
        </segment>
      </unit>
      <unit id="156">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br241615)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To retrieve the setting, you use the same <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationDataContainer.Values</pc></pc> property that you used to create the setting.</source>
          <target xml:space="preserve">To retrieve the setting, you use the same <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationDataContainer.Values</pc></pc> property that you used to create the setting.</target>
        </segment>
      </unit>
      <unit id="157">
        <segment state="initial">
          <source xml:space="preserve">This example shows how to retrieve the setting we just created.</source>
          <target xml:space="preserve">This example shows how to retrieve the setting we just created.</target>
        </segment>
      </unit>
      <unit id="158">
        <segment state="initial">
          <source xml:space="preserve">Create and retrieve a local composite value</source>
          <target xml:space="preserve">Create and retrieve a local composite value</target>
        </segment>
      </unit>
      <unit id="159">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br241588)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To create or write a composite value, create an <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationDataCompositeValue</pc></pc> object.</source>
          <target xml:space="preserve">To create or write a composite value, create an <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationDataCompositeValue</pc></pc> object.</target>
        </segment>
      </unit>
      <unit id="160">
        <originalData>
          <data id="id1">`exampleCompositeSetting`</data>
          <data id="id2">`localSettings`</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">This example creates a composite setting named <ph dataRef="id1" id="ph1" /> and adds it to the <ph dataRef="id2" id="ph2" /> container.</source>
          <target xml:space="preserve">This example creates a composite setting named <ph dataRef="id1" id="ph1" /> and adds it to the <ph dataRef="id2" id="ph2" /> container.</target>
        </segment>
      </unit>
      <unit id="161">
        <segment state="initial">
          <source xml:space="preserve">This example shows how to retrieve the composite value we just created.</source>
          <target xml:space="preserve">This example shows how to retrieve the composite value we just created.</target>
        </segment>
      </unit>
      <unit id="162">
        <segment state="initial">
          <source xml:space="preserve">Create and read a local file</source>
          <target xml:space="preserve">Create and read a local file</target>
        </segment>
      </unit>
      <unit id="163">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227249)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/hh701505)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To create and update a file in the local app data store, use the file APIs, such as <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Storage.StorageFolder.CreateFileAsync</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Windows.Storage.FileIO.WriteTextAsync</pc></pc>.</source>
          <target xml:space="preserve">To create and update a file in the local app data store, use the file APIs, such as <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Storage.StorageFolder.CreateFileAsync</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Windows.Storage.FileIO.WriteTextAsync</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="164">
        <originalData>
          <data id="id1">`dataFile.txt`</data>
          <data id="id2">`localFolder`</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">This example creates a file named <ph dataRef="id1" id="ph1" /> in the <ph dataRef="id2" id="ph2" /> container and writes the current date and time to the file.</source>
          <target xml:space="preserve">This example creates a file named <ph dataRef="id1" id="ph1" /> in the <ph dataRef="id2" id="ph2" /> container and writes the current date and time to the file.</target>
        </segment>
      </unit>
      <unit id="165">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/br241631)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ReplaceExisting</pc> value from the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">CreationCollisionOption</pc></pc> enumeration indicates to replace the file if it already exists.</source>
          <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ReplaceExisting</pc> value from the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">CreationCollisionOption</pc></pc> enumeration indicates to replace the file if it already exists.</target>
        </segment>
      </unit>
      <unit id="166">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227272)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/hh701741)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
          <data id="id9">[</data>
          <data id="id10">](https://msdn.microsoft.com/library/windows/apps/hh701482)</data>
          <data id="id11">**</data>
          <data id="id12">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To open and read a file in the local app data store, use the file APIs, such as <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Storage.StorageFolder.GetFileAsync</pc></pc>, <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Windows.Storage.StorageFile.GetFileFromApplicationUriAsync</pc></pc>, and <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">Windows.Storage.FileIO.ReadTextAsync</pc></pc>.</source>
          <target xml:space="preserve">To open and read a file in the local app data store, use the file APIs, such as <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Storage.StorageFolder.GetFileAsync</pc></pc>, <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Windows.Storage.StorageFile.GetFileFromApplicationUriAsync</pc></pc>, and <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">Windows.Storage.FileIO.ReadTextAsync</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="167">
        <originalData>
          <data id="id1">`dataFile.txt`</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">This example opens the <ph dataRef="id1" id="ph1" /> file created in the previous step and reads the date from the file.</source>
          <target xml:space="preserve">This example opens the <ph dataRef="id1" id="ph1" /> file created in the previous step and reads the date from the file.</target>
        </segment>
      </unit>
      <unit id="168">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/xaml/hh965322)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For details on loading file resources from various locations, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">How to load file resources</pc>.</source>
          <target xml:space="preserve">For details on loading file resources from various locations, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">How to load file resources</pc>.</target>
        </segment>
      </unit>
      <unit id="169">
        <segment state="initial">
          <source xml:space="preserve">Roaming data</source>
          <target xml:space="preserve">Roaming data</target>
        </segment>
      </unit>
      <unit id="170">
        <segment state="initial">
          <source xml:space="preserve">If you use roaming data in your app, your users can easily keep your app's app data in sync across multiple devices.</source>
          <target xml:space="preserve">If you use roaming data in your app, your users can easily keep your app's app data in sync across multiple devices.</target>
        </segment>
      </unit>
      <unit id="171">
        <segment state="initial">
          <source xml:space="preserve">If a user installs your app on multiple devices, the OS keeps the app data in sync, reducing the amount of setup work that the user needs to do for your app on their second device.</source>
          <target xml:space="preserve">If a user installs your app on multiple devices, the OS keeps the app data in sync, reducing the amount of setup work that the user needs to do for your app on their second device.</target>
        </segment>
      </unit>
      <unit id="172">
        <segment state="initial">
          <source xml:space="preserve">Roaming also enables your users to continue a task, such as composing a list, right where they left off even on a different device.</source>
          <target xml:space="preserve">Roaming also enables your users to continue a task, such as composing a list, right where they left off even on a different device.</target>
        </segment>
      </unit>
      <unit id="173">
        <segment state="initial">
          <source xml:space="preserve">The OS replicates roaming data to the cloud when it is updated, and synchronizes the data to the other devices on which the app is installed.</source>
          <target xml:space="preserve">The OS replicates roaming data to the cloud when it is updated, and synchronizes the data to the other devices on which the app is installed.</target>
        </segment>
      </unit>
      <unit id="174">
        <segment state="initial">
          <source xml:space="preserve">The OS limits the size of the app data that each app may roam.</source>
          <target xml:space="preserve">The OS limits the size of the app data that each app may roam.</target>
        </segment>
      </unit>
      <unit id="175">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br241625)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">See <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationData.RoamingStorageQuota</pc></pc>.</source>
          <target xml:space="preserve">See <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationData.RoamingStorageQuota</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="176">
        <segment state="initial">
          <source xml:space="preserve">If the app hits this limit, none of the app's app data will be replicated to the cloud until the app's total roamed app data is less than the limit again.</source>
          <target xml:space="preserve">If the app hits this limit, none of the app's app data will be replicated to the cloud until the app's total roamed app data is less than the limit again.</target>
        </segment>
      </unit>
      <unit id="177">
        <segment state="initial">
          <source xml:space="preserve">For this reason, it is a best practice to use roaming data only for user preferences, links, and small data files.</source>
          <target xml:space="preserve">For this reason, it is a best practice to use roaming data only for user preferences, links, and small data files.</target>
        </segment>
      </unit>
      <unit id="178">
        <segment state="initial">
          <source xml:space="preserve">Roaming data for an app is available in the cloud as long as it is accessed by the user from some device within the required time interval.</source>
          <target xml:space="preserve">Roaming data for an app is available in the cloud as long as it is accessed by the user from some device within the required time interval.</target>
        </segment>
      </unit>
      <unit id="179">
        <segment state="initial">
          <source xml:space="preserve">If the user does not run an app for longer than this time interval, its roaming data is removed from the cloud.</source>
          <target xml:space="preserve">If the user does not run an app for longer than this time interval, its roaming data is removed from the cloud.</target>
        </segment>
      </unit>
      <unit id="180">
        <segment state="initial">
          <source xml:space="preserve">If a user uninstalls an app, its roaming data isn't automatically removed from the cloud, it's preserved.</source>
          <target xml:space="preserve">If a user uninstalls an app, its roaming data isn't automatically removed from the cloud, it's preserved.</target>
        </segment>
      </unit>
      <unit id="181">
        <segment state="initial">
          <source xml:space="preserve">If the user reinstalls the app within the time interval, the roaming data is synchronized from the cloud.</source>
          <target xml:space="preserve">If the user reinstalls the app within the time interval, the roaming data is synchronized from the cloud.</target>
        </segment>
      </unit>
      <unit id="182">
        <segment state="initial">
          <source xml:space="preserve">Register to receive notification when roaming data changes</source>
          <target xml:space="preserve">Register to receive notification when roaming data changes</target>
        </segment>
      </unit>
      <unit id="183">
        <segment state="initial">
          <source xml:space="preserve">To use roaming app data, you need to register for roaming data changes and retrieve the roaming data containers so you can read and write settings.</source>
          <target xml:space="preserve">To use roaming app data, you need to register for roaming data changes and retrieve the roaming data containers so you can read and write settings.</target>
        </segment>
      </unit>
      <unit id="184">
        <segment state="initial">
          <source xml:space="preserve">Register to receive notification when roaming data changes.</source>
          <target xml:space="preserve">Register to receive notification when roaming data changes.</target>
        </segment>
      </unit>
      <unit id="185">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br241620)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DataChanged</pc></pc> event notifies you when roaming data changes.</source>
          <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">DataChanged</pc></pc> event notifies you when roaming data changes.</target>
        </segment>
      </unit>
      <unit id="186">
        <originalData>
          <data id="id1">`DataChangeHandler`</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">This example sets <ph dataRef="id1" id="ph1" /> as the handler for roaming data changes.</source>
          <target xml:space="preserve">This example sets <ph dataRef="id1" id="ph1" /> as the handler for roaming data changes.</target>
        </segment>
      </unit>
      <unit id="187">
        <segment state="initial">
          <source xml:space="preserve">Get the containers for the app's settings and files.</source>
          <target xml:space="preserve">Get the containers for the app's settings and files.</target>
        </segment>
      </unit>
      <unit id="188">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br241624)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/br241623)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationData.RoamingSettings</pc></pc> property to get the settings and the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">ApplicationData.RoamingFolder</pc></pc> property to get the files.</source>
          <target xml:space="preserve">Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationData.RoamingSettings</pc></pc> property to get the settings and the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">ApplicationData.RoamingFolder</pc></pc> property to get the files.</target>
        </segment>
      </unit>
      <unit id="189">
        <segment state="initial">
          <source xml:space="preserve">Create and retrieve roaming settings</source>
          <target xml:space="preserve">Create and retrieve roaming settings</target>
        </segment>
      </unit>
      <unit id="190">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br241615)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">`roamingSettings`</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationDataContainer.Values</pc></pc> property to access the settings in the <ph dataRef="id5" id="ph1" /> container we got in the previous section.</source>
          <target xml:space="preserve">Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationDataContainer.Values</pc></pc> property to access the settings in the <ph dataRef="id5" id="ph1" /> container we got in the previous section.</target>
        </segment>
      </unit>
      <unit id="191">
        <originalData>
          <data id="id1">`exampleSetting`</data>
          <data id="id2">`composite`</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">This example creates a simple setting named <ph dataRef="id1" id="ph1" /> and a composite value named <ph dataRef="id2" id="ph2" />.</source>
          <target xml:space="preserve">This example creates a simple setting named <ph dataRef="id1" id="ph1" /> and a composite value named <ph dataRef="id2" id="ph2" />.</target>
        </segment>
      </unit>
      <unit id="192">
        <segment state="initial">
          <source xml:space="preserve">This example retrieves the settings we just created.</source>
          <target xml:space="preserve">This example retrieves the settings we just created.</target>
        </segment>
      </unit>
      <unit id="193">
        <segment state="initial">
          <source xml:space="preserve">Create and retrieve roaming files</source>
          <target xml:space="preserve">Create and retrieve roaming files</target>
        </segment>
      </unit>
      <unit id="194">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227249)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/hh701505)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To create and update a file in the roaming app data store, use the file APIs, such as <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Storage.StorageFolder.CreateFileAsync</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Windows.Storage.FileIO.WriteTextAsync</pc></pc>.</source>
          <target xml:space="preserve">To create and update a file in the roaming app data store, use the file APIs, such as <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Storage.StorageFolder.CreateFileAsync</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Windows.Storage.FileIO.WriteTextAsync</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="195">
        <originalData>
          <data id="id1">`dataFile.txt`</data>
          <data id="id2">`roamingFolder`</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">This example creates a file named <ph dataRef="id1" id="ph1" /> in the <ph dataRef="id2" id="ph2" /> container and writes the current date and time to the file.</source>
          <target xml:space="preserve">This example creates a file named <ph dataRef="id1" id="ph1" /> in the <ph dataRef="id2" id="ph2" /> container and writes the current date and time to the file.</target>
        </segment>
      </unit>
      <unit id="196">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/br241631)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ReplaceExisting</pc> value from the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">CreationCollisionOption</pc></pc> enumeration indicates to replace the file if it already exists.</source>
          <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ReplaceExisting</pc> value from the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">CreationCollisionOption</pc></pc> enumeration indicates to replace the file if it already exists.</target>
        </segment>
      </unit>
      <unit id="197">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227272)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/hh701741)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
          <data id="id9">[</data>
          <data id="id10">](https://msdn.microsoft.com/library/windows/apps/hh701482)</data>
          <data id="id11">**</data>
          <data id="id12">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To open and read a file in the roaming app data store, use the file APIs, such as <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Storage.StorageFolder.GetFileAsync</pc></pc>, <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Windows.Storage.StorageFile.GetFileFromApplicationUriAsync</pc></pc>, and <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">Windows.Storage.FileIO.ReadTextAsync</pc></pc>.</source>
          <target xml:space="preserve">To open and read a file in the roaming app data store, use the file APIs, such as <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Storage.StorageFolder.GetFileAsync</pc></pc>, <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Windows.Storage.StorageFile.GetFileFromApplicationUriAsync</pc></pc>, and <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">Windows.Storage.FileIO.ReadTextAsync</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="198">
        <originalData>
          <data id="id1">`dataFile.txt`</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">This example opens the <ph dataRef="id1" id="ph1" /> file created in the previous section and reads the date from the file.</source>
          <target xml:space="preserve">This example opens the <ph dataRef="id1" id="ph1" /> file created in the previous section and reads the date from the file.</target>
        </segment>
      </unit>
      <unit id="199">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/xaml/hh965322)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For details on loading file resources from various locations, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">How to load file resources</pc>.</source>
          <target xml:space="preserve">For details on loading file resources from various locations, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">How to load file resources</pc>.</target>
        </segment>
      </unit>
      <unit id="200">
        <segment state="initial">
          <source xml:space="preserve">Temporary app data</source>
          <target xml:space="preserve">Temporary app data</target>
        </segment>
      </unit>
      <unit id="201">
        <segment state="initial">
          <source xml:space="preserve">The temporary app data store works like a cache.</source>
          <target xml:space="preserve">The temporary app data store works like a cache.</target>
        </segment>
      </unit>
      <unit id="202">
        <segment state="initial">
          <source xml:space="preserve">Its files do not roam and could be removed at any time.</source>
          <target xml:space="preserve">Its files do not roam and could be removed at any time.</target>
        </segment>
      </unit>
      <unit id="203">
        <segment state="initial">
          <source xml:space="preserve">The System Maintenance task can automatically delete data stored at this location at any time.</source>
          <target xml:space="preserve">The System Maintenance task can automatically delete data stored at this location at any time.</target>
        </segment>
      </unit>
      <unit id="204">
        <segment state="initial">
          <source xml:space="preserve">The user can also clear files from the temporary data store using Disk Cleanup.</source>
          <target xml:space="preserve">The user can also clear files from the temporary data store using Disk Cleanup.</target>
        </segment>
      </unit>
      <unit id="205">
        <segment state="initial">
          <source xml:space="preserve">Temporary app data can be used for storing temporary information during an app session.</source>
          <target xml:space="preserve">Temporary app data can be used for storing temporary information during an app session.</target>
        </segment>
      </unit>
      <unit id="206">
        <segment state="initial">
          <source xml:space="preserve">There is no guarantee that this data will persist beyond the end of the app session as the system might reclaim the used space if needed.</source>
          <target xml:space="preserve">There is no guarantee that this data will persist beyond the end of the app session as the system might reclaim the used space if needed.</target>
        </segment>
      </unit>
      <unit id="207">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br241629)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The location is available via the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">temporaryFolder</pc></pc> property.</source>
          <target xml:space="preserve">The location is available via the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">temporaryFolder</pc></pc> property.</target>
        </segment>
      </unit>
      <unit id="208">
        <segment state="initial">
          <source xml:space="preserve">Retrieve the temporary data container</source>
          <target xml:space="preserve">Retrieve the temporary data container</target>
        </segment>
      </unit>
      <unit id="209">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br241629)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationData.TemporaryFolder</pc></pc> property to get the files.</source>
          <target xml:space="preserve">Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationData.TemporaryFolder</pc></pc> property to get the files.</target>
        </segment>
      </unit>
      <unit id="210">
        <originalData>
          <data id="id1">`temporaryFolder`</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The next steps use the <ph dataRef="id1" id="ph1" /> variable from this step.</source>
          <target xml:space="preserve">The next steps use the <ph dataRef="id1" id="ph1" /> variable from this step.</target>
        </segment>
      </unit>
      <unit id="211">
        <segment state="initial">
          <source xml:space="preserve">Create and read temporary files</source>
          <target xml:space="preserve">Create and read temporary files</target>
        </segment>
      </unit>
      <unit id="212">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227249)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/hh701505)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To create and update a file in the temporary app data store, use the file APIs, such as <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Storage.StorageFolder.CreateFileAsync</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Windows.Storage.FileIO.WriteTextAsync</pc></pc>.</source>
          <target xml:space="preserve">To create and update a file in the temporary app data store, use the file APIs, such as <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Storage.StorageFolder.CreateFileAsync</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Windows.Storage.FileIO.WriteTextAsync</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="213">
        <originalData>
          <data id="id1">`dataFile.txt`</data>
          <data id="id2">`temporaryFolder`</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">This example creates a file named <ph dataRef="id1" id="ph1" /> in the <ph dataRef="id2" id="ph2" /> container and writes the current date and time to the file.</source>
          <target xml:space="preserve">This example creates a file named <ph dataRef="id1" id="ph1" /> in the <ph dataRef="id2" id="ph2" /> container and writes the current date and time to the file.</target>
        </segment>
      </unit>
      <unit id="214">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/br241631)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ReplaceExisting</pc> value from the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">CreationCollisionOption</pc></pc> enumeration indicates to replace the file if it already exists.</source>
          <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ReplaceExisting</pc> value from the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">CreationCollisionOption</pc></pc> enumeration indicates to replace the file if it already exists.</target>
        </segment>
      </unit>
      <unit id="215">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227272)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/hh701741)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
          <data id="id9">[</data>
          <data id="id10">](https://msdn.microsoft.com/library/windows/apps/hh701482)</data>
          <data id="id11">**</data>
          <data id="id12">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To open and read a file in the temporary app data store, use the file APIs, such as <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Storage.StorageFolder.GetFileAsync</pc></pc>, <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Windows.Storage.StorageFile.GetFileFromApplicationUriAsync</pc></pc>, and <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">Windows.Storage.FileIO.ReadTextAsync</pc></pc>.</source>
          <target xml:space="preserve">To open and read a file in the temporary app data store, use the file APIs, such as <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Storage.StorageFolder.GetFileAsync</pc></pc>, <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">Windows.Storage.StorageFile.GetFileFromApplicationUriAsync</pc></pc>, and <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">Windows.Storage.FileIO.ReadTextAsync</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="216">
        <originalData>
          <data id="id1">`dataFile.txt`</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">This example opens the <ph dataRef="id1" id="ph1" /> file created in the previous step and reads the date from the file.</source>
          <target xml:space="preserve">This example opens the <ph dataRef="id1" id="ph1" /> file created in the previous step and reads the date from the file.</target>
        </segment>
      </unit>
      <unit id="217">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/xaml/hh965322)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For details on loading file resources from various locations, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">How to load file resources</pc>.</source>
          <target xml:space="preserve">For details on loading file resources from various locations, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">How to load file resources</pc>.</target>
        </segment>
      </unit>
      <unit id="218">
        <segment state="initial">
          <source xml:space="preserve">Organize app data with containers</source>
          <target xml:space="preserve">Organize app data with containers</target>
        </segment>
      </unit>
      <unit id="219">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br241599)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To help you organize your app data settings and files, you create containers (represented by <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationDataContainer</pc></pc> objects) instead of working directly with directories.</source>
          <target xml:space="preserve">To help you organize your app data settings and files, you create containers (represented by <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationDataContainer</pc></pc> objects) instead of working directly with directories.</target>
        </segment>
      </unit>
      <unit id="220">
        <segment state="initial">
          <source xml:space="preserve">You can add containers to the local, roaming, and temporary app data stores.</source>
          <target xml:space="preserve">You can add containers to the local, roaming, and temporary app data stores.</target>
        </segment>
      </unit>
      <unit id="221">
        <segment state="initial">
          <source xml:space="preserve">Containers can be nested up to 32 levels deep.</source>
          <target xml:space="preserve">Containers can be nested up to 32 levels deep.</target>
        </segment>
      </unit>
      <unit id="222">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br241611)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To create a settings container, call the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationDataContainer.CreateContainer</pc></pc> method.</source>
          <target xml:space="preserve">To create a settings container, call the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationDataContainer.CreateContainer</pc></pc> method.</target>
        </segment>
      </unit>
      <unit id="223">
        <originalData>
          <data id="id1">`exampleContainer`</data>
          <data id="id2">`exampleSetting`</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">This example creates a local settings container named <ph dataRef="id1" id="ph1" /> and adds a setting named <ph dataRef="id2" id="ph2" />.</source>
          <target xml:space="preserve">This example creates a local settings container named <ph dataRef="id1" id="ph1" /> and adds a setting named <ph dataRef="id2" id="ph2" />.</target>
        </segment>
      </unit>
      <unit id="224">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/br241616)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Always</pc> value from the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">ApplicationDataCreateDisposition</pc></pc> enumeration indicates that the container is created if it doesn't already exist.</source>
          <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Always</pc> value from the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">ApplicationDataCreateDisposition</pc></pc> enumeration indicates that the container is created if it doesn't already exist.</target>
        </segment>
      </unit>
      <unit id="225">
        <segment state="initial">
          <source xml:space="preserve">Delete app settings and containers</source>
          <target xml:space="preserve">Delete app settings and containers</target>
        </segment>
      </unit>
      <unit id="226">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br241608)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To delete a simple setting that your app no longer needs, use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationDataContainerSettings.Remove</pc></pc> method.</source>
          <target xml:space="preserve">To delete a simple setting that your app no longer needs, use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationDataContainerSettings.Remove</pc></pc> method.</target>
        </segment>
      </unit>
      <unit id="227">
        <originalData>
          <data id="id1">`exampleSetting`</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">This example deletesthe <ph dataRef="id1" id="ph1" /> local setting that we created earlier.</source>
          <target xml:space="preserve">This example deletesthe <ph dataRef="id1" id="ph1" /> local setting that we created earlier.</target>
        </segment>
      </unit>
      <unit id="228">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br241597)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To delete a composite setting, use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationDataCompositeValue.Remove</pc></pc> method.</source>
          <target xml:space="preserve">To delete a composite setting, use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationDataCompositeValue.Remove</pc></pc> method.</target>
        </segment>
      </unit>
      <unit id="229">
        <originalData>
          <data id="id1">`exampleCompositeSetting`</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">This example deletes the local <ph dataRef="id1" id="ph1" /> composite setting we created in an earlier example.</source>
          <target xml:space="preserve">This example deletes the local <ph dataRef="id1" id="ph1" /> composite setting we created in an earlier example.</target>
        </segment>
      </unit>
      <unit id="230">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br241612)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To delete a container, call the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationDataContainer.DeleteContainer</pc></pc> method.</source>
          <target xml:space="preserve">To delete a container, call the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ApplicationDataContainer.DeleteContainer</pc></pc> method.</target>
        </segment>
      </unit>
      <unit id="231">
        <originalData>
          <data id="id1">`exampleContainer`</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">This example deletes the local <ph dataRef="id1" id="ph1" /> settings container we created earlier.</source>
          <target xml:space="preserve">This example deletes the local <ph dataRef="id1" id="ph1" /> settings container we created earlier.</target>
        </segment>
      </unit>
      <unit id="232">
        <segment state="initial">
          <source xml:space="preserve">Versioning your app data</source>
          <target xml:space="preserve">Versioning your app data</target>
        </segment>
      </unit>
      <unit id="233">
        <segment state="initial">
          <source xml:space="preserve">You can optionally version the app data for your app.</source>
          <target xml:space="preserve">You can optionally version the app data for your app.</target>
        </segment>
      </unit>
      <unit id="234">
        <segment state="initial">
          <source xml:space="preserve">This would enable you to create a future version of your app that changes the format of its app data without causing compatibility problems with the previous version of your app.</source>
          <target xml:space="preserve">This would enable you to create a future version of your app that changes the format of its app data without causing compatibility problems with the previous version of your app.</target>
        </segment>
      </unit>
      <unit id="235">
        <segment state="initial">
          <source xml:space="preserve">The app checks the version of the app data in the data store, and if the version is less than the version the app expects, the app should update the app data to the new format and update the version.</source>
          <target xml:space="preserve">The app checks the version of the app data in the data store, and if the version is less than the version the app expects, the app should update the app data to the new format and update the version.</target>
        </segment>
      </unit>
      <unit id="236">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br241630)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/hh701429)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For more info, see the<pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Application.Version</pc></pc> property and the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">ApplicationData.SetVersionAsync</pc></pc> method.</source>
          <target xml:space="preserve">For more info, see the<pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Application.Version</pc></pc> property and the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">ApplicationData.SetVersionAsync</pc></pc> method.</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>