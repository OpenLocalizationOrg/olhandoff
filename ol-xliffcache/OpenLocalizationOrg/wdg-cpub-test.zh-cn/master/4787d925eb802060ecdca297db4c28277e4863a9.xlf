<?xml version="1.0" encoding="utf-8"?>
<xliff srcLang="en-US" trgLang="zh-cn" version="2.0" xmlns="urn:oasis:names:tc:xliff:document:2.0" xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">4787d925eb802060ecdca297db4c28277e4863a9</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source xml:space="preserve">ms.assetid: C4DB495D-1F91-40EF-A55C-5CABBF3269A2</source>
          <target xml:space="preserve">ms.assetid: C4DB495D-1F91-40EF-A55C-5CABBF3269A2</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source xml:space="preserve">description: The APIs in the Windows.Media.Editing namespace allow you to quickly develop apps that enable the users to create media compositions from audio and video source files.</source>
          <target xml:space="preserve">description: The APIs in the Windows.Media.Editing namespace allow you to quickly develop apps that enable the users to create media compositions from audio and video source files.</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source xml:space="preserve">title: Media compositions and editing</source>
          <target xml:space="preserve">title: Media compositions and editing</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source xml:space="preserve">Media compositions and editing</source>
          <target xml:space="preserve">Media compositions and editing</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source xml:space="preserve">\[ Updated for UWP apps on Windows 10.</source>
          <target xml:space="preserve">\[ Updated for UWP apps on Windows 10.</target>
        </segment>
      </unit>
      <unit id="106">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
          <target xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
        </segment>
      </unit>
      <unit id="107">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn640565)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The APIs in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Media.Editing</pc></pc> namespace allow you to quickly develop apps that enable the users to create media compositions from audio and video source files.</source>
          <target xml:space="preserve">The APIs in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Media.Editing</pc></pc> namespace allow you to quickly develop apps that enable the users to create media compositions from audio and video source files.</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source xml:space="preserve">Features of the framework include the ability to programmatically append multiple video clips together, add video and image overlays, add background audio, and apply both audio and video effects.</source>
          <target xml:space="preserve">Features of the framework include the ability to programmatically append multiple video clips together, add video and image overlays, add background audio, and apply both audio and video effects.</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source xml:space="preserve">Once created, media compositions can be rendered into a flat media file for playback or sharing, but compositions can also be serialized to and deserialized from disk, allowing the user to load and modify compositions that they have previously created.</source>
          <target xml:space="preserve">Once created, media compositions can be rendered into a flat media file for playback or sharing, but compositions can also be serialized to and deserialized from disk, allowing the user to load and modify compositions that they have previously created.</target>
        </segment>
      </unit>
      <unit id="110">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/desktop/ms694197)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">All of this functionality is provided in an easy-to-use Windows Runtime interface that dramatically reduces the amount and complexity of code required to perform these tasks when compared to the low-level <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Microsoft Media Foundation</pc> API.</source>
          <target xml:space="preserve">All of this functionality is provided in an easy-to-use Windows Runtime interface that dramatically reduces the amount and complexity of code required to perform these tasks when compared to the low-level <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Microsoft Media Foundation</pc> API.</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source xml:space="preserve">Create a new media composition</source>
          <target xml:space="preserve">Create a new media composition</target>
        </segment>
      </unit>
      <unit id="112">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn652646)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaComposition</pc></pc> class is the container for all of the media clips that make up the composition and is responsible for rendering the final composition, loading and saving compositions to disc, and providing a preview stream of the composition so that the user can view it in the UI.</source>
          <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaComposition</pc></pc> class is the container for all of the media clips that make up the composition and is responsible for rendering the final composition, loading and saving compositions to disc, and providing a preview stream of the composition so that the user can view it in the UI.</target>
        </segment>
      </unit>
      <unit id="113">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/dn640565)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">[</data>
          <data id="id8">](https://msdn.microsoft.com/library/windows/apps/dn278962)</data>
          <data id="id9">**</data>
          <data id="id10">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To use <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaComposition</pc> in your app, include the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">Windows.Media.Editing</pc></pc> namespace as well as the <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">Windows.Media.Core</pc></pc> namespace that provides related APIs that you will need.</source>
          <target xml:space="preserve">To use <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaComposition</pc> in your app, include the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">Windows.Media.Editing</pc></pc> namespace as well as the <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">Windows.Media.Core</pc></pc> namespace that provides related APIs that you will need.</target>
        </segment>
      </unit>
      <unit id="114">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/MediaEditing/cs/MainPage.xaml.cs#SnippetNamespace1)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Namespace1</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Namespace1</pc>]</target>
        </segment>
      </unit>
      <unit id="115">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaComposition</pc> object will be accessed from multiple points in your code, so typically you will declare a member variable in which to store it.</source>
          <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaComposition</pc> object will be accessed from multiple points in your code, so typically you will declare a member variable in which to store it.</target>
        </segment>
      </unit>
      <unit id="116">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/MediaEditing/cs/MainPage.xaml.cs#SnippetDeclareMediaComposition)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">DeclareMediaComposition</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">DeclareMediaComposition</pc>]</target>
        </segment>
      </unit>
      <unit id="117">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The constructor for <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaComposition</pc> takes no arguments.</source>
          <target xml:space="preserve">The constructor for <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaComposition</pc> takes no arguments.</target>
        </segment>
      </unit>
      <unit id="118">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/MediaEditing/cs/MainPage.xaml.cs#SnippetMediaCompositionConstructor)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaCompositionConstructor</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaCompositionConstructor</pc>]</target>
        </segment>
      </unit>
      <unit id="119">
        <segment state="initial">
          <source xml:space="preserve">Add media clips to a composition</source>
          <target xml:space="preserve">Add media clips to a composition</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source xml:space="preserve">Media compositions typically contain one or more video clips.</source>
          <target xml:space="preserve">Media compositions typically contain one or more video clips.</target>
        </segment>
      </unit>
      <unit id="121">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh738369)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">You can use a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FileOpenPicker</pc></pc> to allow the user to select a video file.</source>
          <target xml:space="preserve">You can use a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FileOpenPicker</pc></pc> to allow the user to select a video file.</target>
        </segment>
      </unit>
      <unit id="122">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn652596)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/dn652607)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Once the file has been selected, create a new <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaClip</pc></pc> object to contain the video clip by calling <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">MediaClip.CreateFromFileAsync</pc></pc>.</source>
          <target xml:space="preserve">Once the file has been selected, create a new <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaClip</pc></pc> object to contain the video clip by calling <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">MediaClip.CreateFromFileAsync</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="123">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/dn652648)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Then you add the clip to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaComposition</pc> object's <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">Clips</pc></pc> list.</source>
          <target xml:space="preserve">Then you add the clip to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaComposition</pc> object's <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">Clips</pc></pc> list.</target>
        </segment>
      </unit>
      <unit id="124">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/MediaEditing/cs/MainPage.xaml.cs#SnippetPickFileAndAddClip)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">PickFileAndAddClip</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">PickFileAndAddClip</pc>]</target>
        </segment>
      </unit>
      <unit id="125">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/dn652648)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Media clips appear in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaComposition</pc> in the same order as they appear in <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">Clips</pc></pc> list.</source>
          <target xml:space="preserve">Media clips appear in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaComposition</pc> in the same order as they appear in <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">Clips</pc></pc> list.</target>
        </segment>
      </unit>
      <unit id="126">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">A <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaClip</pc> can only be included in a composition once.</source>
          <target xml:space="preserve">A <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaClip</pc> can only be included in a composition once.</target>
        </segment>
      </unit>
      <unit id="127">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Attempting to add a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaClip</pc> that is already being used by the composition will result in an error.</source>
          <target xml:space="preserve">Attempting to add a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaClip</pc> that is already being used by the composition will result in an error.</target>
        </segment>
      </unit>
      <unit id="128">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn652599)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To reuse a video clip multiple times in a composition, call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Clone</pc></pc> to create new <pc dataRefEnd="id6" dataRefStart="id5" id="p3">MediaClip</pc> objects which can then be added to the composition.</source>
          <target xml:space="preserve">To reuse a video clip multiple times in a composition, call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Clone</pc></pc> to create new <pc dataRefEnd="id6" dataRefStart="id5" id="p3">MediaClip</pc> objects which can then be added to the composition.</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source xml:space="preserve">Universal Windows apps do not have permission to access the entire file system.</source>
          <target xml:space="preserve">Universal Windows apps do not have permission to access the entire file system.</target>
        </segment>
      </unit>
      <unit id="130">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br207457)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/br207456)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FutureAccessList</pc></pc> property of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">StorageApplicationPermissions</pc></pc> class allows your app to store a record of a file that has been selected by the user so that you can retain permissions to access the file.</source>
          <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FutureAccessList</pc></pc> property of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">StorageApplicationPermissions</pc></pc> class allows your app to store a record of a file that has been selected by the user so that you can retain permissions to access the file.</target>
        </segment>
      </unit>
      <unit id="131">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">FutureAccessList</pc> has a maxium of 1000 entries, so your app needs to manage the list to make sure it does not become full.</source>
          <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">FutureAccessList</pc> has a maxium of 1000 entries, so your app needs to manage the list to make sure it does not become full.</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source xml:space="preserve">This is especially important if you plan to support loading and modifying previously created compositions.</source>
          <target xml:space="preserve">This is especially important if you plan to support loading and modifying previously created compositions.</target>
        </segment>
      </unit>
      <unit id="133">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">A <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaComposition</pc> supports video clips in MP4 format.</source>
          <target xml:space="preserve">A <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaComposition</pc> supports video clips in MP4 format.</target>
        </segment>
      </unit>
      <unit id="134">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn652627)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">If a video file contains multiple embedded audio tracks, you can select which audio track is used in the composition by setting the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SelectedEmbeddedAudioTrackIndex</pc></pc> property.</source>
          <target xml:space="preserve">If a video file contains multiple embedded audio tracks, you can select which audio track is used in the composition by setting the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">SelectedEmbeddedAudioTrackIndex</pc></pc> property.</target>
        </segment>
      </unit>
      <unit id="135">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/dn652605)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Create a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaClip</pc> with a single color filling the entire frame by calling <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">CreateFromColor</pc></pc> and specifying a color and a duration for the clip.</source>
          <target xml:space="preserve">Create a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaClip</pc> with a single color filling the entire frame by calling <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">CreateFromColor</pc></pc> and specifying a color and a duration for the clip.</target>
        </segment>
      </unit>
      <unit id="136">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/dn652610)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Create a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaClip</pc> from an image file by calling <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">CreateFromImageFileAsync</pc></pc> and specifying an image file and a duration for the clip.</source>
          <target xml:space="preserve">Create a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaClip</pc> from an image file by calling <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">CreateFromImageFileAsync</pc></pc> and specifying an image file and a duration for the clip.</target>
        </segment>
      </unit>
      <unit id="137">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/dn965505)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">[</data>
          <data id="id8">](https://msdn.microsoft.com/library/dn764774)</data>
          <data id="id9">**</data>
          <data id="id10">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Create a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaClip</pc> from a <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">IDirect3DSurface</pc></pc> by calling <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">CreateFromSurface</pc></pc> and specifying a surface and a duration from the clip.</source>
          <target xml:space="preserve">Create a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaClip</pc> from a <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">IDirect3DSurface</pc></pc> by calling <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">CreateFromSurface</pc></pc> and specifying a surface and a duration from the clip.</target>
        </segment>
      </unit>
      <unit id="138">
        <segment state="initial">
          <source xml:space="preserve">Preview the composition in a MediaElement</source>
          <target xml:space="preserve">Preview the composition in a MediaElement</target>
        </segment>
      </unit>
      <unit id="139">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br242926)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To enable the user to view the media composition, add a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaElement</pc></pc> to the XAML file that defines your UI.</source>
          <target xml:space="preserve">To enable the user to view the media composition, add a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaElement</pc></pc> to the XAML file that defines your UI.</target>
        </segment>
      </unit>
      <unit id="140">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/MediaEditing/cs/MainPage.xaml#SnippetMediaElement)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-xml<pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaElement</pc>]</source>
          <target xml:space="preserve">[!code-xml<pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaElement</pc>]</target>
        </segment>
      </unit>
      <unit id="141">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn282716)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Declare a member variable of type <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaStreamSource</pc></pc>.</source>
          <target xml:space="preserve">Declare a member variable of type <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaStreamSource</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="142">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/MediaEditing/cs/MainPage.xaml.cs#SnippetDeclareMediaStreamSource)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">DeclareMediaStreamSource</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">DeclareMediaStreamSource</pc>]</target>
        </segment>
      </unit>
      <unit id="143">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/dn652674)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
          <data id="id9">[</data>
          <data id="id10">](https://msdn.microsoft.com/library/windows/apps/dn299029)</data>
          <data id="id11">**</data>
          <data id="id12">**</data>
          <data id="id13">**</data>
          <data id="id14">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Call the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaComposition</pc> object's <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">GeneratePreviewMediaStreamSource</pc></pc> method to create a <pc dataRefEnd="id8" dataRefStart="id7" id="p4">MediaStreamSource</pc> for the composition and then call the <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">SetMediaStreamSource</pc></pc> method of the <pc dataRefEnd="id14" dataRefStart="id13" id="p7">MediaElement</pc>.</source>
          <target xml:space="preserve">Call the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaComposition</pc> object's <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">GeneratePreviewMediaStreamSource</pc></pc> method to create a <pc dataRefEnd="id8" dataRefStart="id7" id="p4">MediaStreamSource</pc> for the composition and then call the <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">SetMediaStreamSource</pc></pc> method of the <pc dataRefEnd="id14" dataRefStart="id13" id="p7">MediaElement</pc>.</target>
        </segment>
      </unit>
      <unit id="144">
        <segment state="initial">
          <source xml:space="preserve">Now the composition can be viewed in the UI.</source>
          <target xml:space="preserve">Now the composition can be viewed in the UI.</target>
        </segment>
      </unit>
      <unit id="145">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/MediaEditing/cs/MainPage.xaml.cs#SnippetUpdateMediaElementSource)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">UpdateMediaElementSource</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">UpdateMediaElementSource</pc>]</target>
        </segment>
      </unit>
      <unit id="146">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/dn652674)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaComposition</pc> must contain at least one media clip before calling <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">GeneratePreviewMediaStreamSource</pc></pc>, or the returned object will be null.</source>
          <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaComposition</pc> must contain at least one media clip before calling <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">GeneratePreviewMediaStreamSource</pc></pc>, or the returned object will be null.</target>
        </segment>
      </unit>
      <unit id="147">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaElement</pc> timeline is not automatically updated to reflect changes in the composition.</source>
          <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaElement</pc> timeline is not automatically updated to reflect changes in the composition.</target>
        </segment>
      </unit>
      <unit id="148">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">It is recommended that you call both <pc dataRefEnd="id2" dataRefStart="id1" id="p1">GeneratePreviewMediaStreamSource</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">SetMediaStreamSource</pc> every time you make a set of changes to the composition and want to update the UI.</source>
          <target xml:space="preserve">It is recommended that you call both <pc dataRefEnd="id2" dataRefStart="id1" id="p1">GeneratePreviewMediaStreamSource</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">SetMediaStreamSource</pc> every time you make a set of changes to the composition and want to update the UI.</target>
        </segment>
      </unit>
      <unit id="149">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/br227419)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">It is recommended that you set the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaStreamSource</pc> object and the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">Source</pc></pc> property of the <pc dataRefEnd="id8" dataRefStart="id7" id="p4">MediaElement</pc> to null when the user navigates away from the page in order to release associated resources.</source>
          <target xml:space="preserve">It is recommended that you set the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaStreamSource</pc> object and the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">Source</pc></pc> property of the <pc dataRefEnd="id8" dataRefStart="id7" id="p4">MediaElement</pc> to null when the user navigates away from the page in order to release associated resources.</target>
        </segment>
      </unit>
      <unit id="150">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/MediaEditing/cs/MainPage.xaml.cs#SnippetOnNavigatedFrom)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">OnNavigatedFrom</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">OnNavigatedFrom</pc>]</target>
        </segment>
      </unit>
      <unit id="151">
        <segment state="initial">
          <source xml:space="preserve">Render the composition to a video file</source>
          <target xml:space="preserve">Render the composition to a video file</target>
        </segment>
      </unit>
      <unit id="152">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br207105)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To render a media composition to a flat video file so that it can be shared and viewed on other devices, you will need to use APIs from the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Media.Transcoding</pc></pc> namespace.</source>
          <target xml:space="preserve">To render a media composition to a flat video file so that it can be shared and viewed on other devices, you will need to use APIs from the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.Media.Transcoding</pc></pc> namespace.</target>
        </segment>
      </unit>
      <unit id="153">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br208383)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To update the UI on the progress of the async operation, you will also need APIs from the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.UI.Core</pc></pc> namespace.</source>
          <target xml:space="preserve">To update the UI on the progress of the async operation, you will also need APIs from the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows.UI.Core</pc></pc> namespace.</target>
        </segment>
      </unit>
      <unit id="154">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/MediaEditing/cs/MainPage.xaml.cs#SnippetNamespace2)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Namespace2</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Namespace2</pc>]</target>
        </segment>
      </unit>
      <unit id="155">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br207871)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">[</data>
          <data id="id8">](https://msdn.microsoft.com/library/windows/apps/dn652690)</data>
          <data id="id9">**</data>
          <data id="id10">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">After allowing the user to select an output file with a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FileSavePicker</pc></pc>, render the composition to the selected file by calling the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">MediaComposition</pc> object's <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">RenderToFileAsync</pc></pc>.</source>
          <target xml:space="preserve">After allowing the user to select an output file with a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FileSavePicker</pc></pc>, render the composition to the selected file by calling the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">MediaComposition</pc> object's <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">RenderToFileAsync</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="156">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/desktop/br205807)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The rest of the code in the following example simply follows the pattern of handling an <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">AsyncOperationWithProgress</pc></pc>.</source>
          <target xml:space="preserve">The rest of the code in the following example simply follows the pattern of handling an <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">AsyncOperationWithProgress</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="157">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/MediaEditing/cs/MainPage.xaml.cs#SnippetRenderCompositionToFile)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">RenderCompositionToFile</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">RenderCompositionToFile</pc>]</target>
        </segment>
      </unit>
      <unit id="158">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn640561)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaTrimmingPreference</pc></pc> allows you to prioritize speed of the transcoding operation versus the precision of trimming of adjacent media clips.</source>
          <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaTrimmingPreference</pc></pc> allows you to prioritize speed of the transcoding operation versus the precision of trimming of adjacent media clips.</target>
        </segment>
      </unit>
      <unit id="159">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Fast</pc> causes transcoding to be faster with lower-precision trimming, <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Precise</pc> causes transcoding to be slower but with more precise trimming.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Fast</pc> causes transcoding to be faster with lower-precision trimming, <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Precise</pc> causes transcoding to be slower but with more precise trimming.</target>
        </segment>
      </unit>
      <unit id="160">
        <segment state="initial">
          <source xml:space="preserve">Trim a video clip</source>
          <target xml:space="preserve">Trim a video clip</target>
        </segment>
      </unit>
      <unit id="161">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn652596)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/dn652637)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
          <data id="id9">[</data>
          <data id="id10">](https://msdn.microsoft.com/library/windows/apps/dn652634)</data>
          <data id="id11">**</data>
          <data id="id12">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Trim the duration of a video clip in a composition by setting the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaClip</pc></pc> objects <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">TrimTimeFromStart</pc></pc> property, the <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">TrimTimeFromEnd</pc></pc> property, or both.</source>
          <target xml:space="preserve">Trim the duration of a video clip in a composition by setting the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaClip</pc></pc> objects <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">TrimTimeFromStart</pc></pc> property, the <pc dataRefEnd="id10" dataRefStart="id9" id="p5"><pc dataRefEnd="id12" dataRefStart="id11" id="p6">TrimTimeFromEnd</pc></pc> property, or both.</target>
        </segment>
      </unit>
      <unit id="162">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/MediaEditing/cs/MainPage.xaml.cs#SnippetTrimClipBeforeCurrentPosition)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">TrimClipBeforeCurrentPosition</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">TrimClipBeforeCurrentPosition</pc>]</target>
        </segment>
      </unit>
      <unit id="163">
        <segment state="initial">
          <source xml:space="preserve">Your can use any UI that you want to let the user specify the start and end trim values.</source>
          <target xml:space="preserve">Your can use any UI that you want to let the user specify the start and end trim values.</target>
        </segment>
      </unit>
      <unit id="164">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br227407)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">[</data>
          <data id="id8">](https://msdn.microsoft.com/library/windows/apps/dn652629)</data>
          <data id="id9">**</data>
          <data id="id10">**</data>
          <data id="id11">[</data>
          <data id="id12">](https://msdn.microsoft.com/library/windows/apps/dn652618)</data>
          <data id="id13">**</data>
          <data id="id14">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The example above uses the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Position</pc></pc> property of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">MediaElement</pc> to first determine which MediaClip is playing back at the current position in the composition by checking the <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">StartTimeInComposition</pc></pc> and <pc dataRefEnd="id12" dataRefStart="id11" id="p6"><pc dataRefEnd="id14" dataRefStart="id13" id="p7">EndTimeInComposition</pc></pc>.</source>
          <target xml:space="preserve">The example above uses the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Position</pc></pc> property of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">MediaElement</pc> to first determine which MediaClip is playing back at the current position in the composition by checking the <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">StartTimeInComposition</pc></pc> and <pc dataRefEnd="id12" dataRefStart="id11" id="p6"><pc dataRefEnd="id14" dataRefStart="id13" id="p7">EndTimeInComposition</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="165">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Then the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Position</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">StartTimeInComposition</pc> properties are used again to calculate the amount of time to trim from the beginning of the clip.</source>
          <target xml:space="preserve">Then the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Position</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">StartTimeInComposition</pc> properties are used again to calculate the amount of time to trim from the beginning of the clip.</target>
        </segment>
      </unit>
      <unit id="166">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">FirstOrDefault</pc> method is an extension method from the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">System.Linq</pc> namespace that simplifies the code for selecting items from a list.</source>
          <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">FirstOrDefault</pc> method is an extension method from the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">System.Linq</pc> namespace that simplifies the code for selecting items from a list.</target>
        </segment>
      </unit>
      <unit id="167">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn652625)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">OriginalDuration</pc></pc> property of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">MediaClip</pc> object lets you know the duration of the media clip without any clipping applied.</source>
          <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">OriginalDuration</pc></pc> property of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">MediaClip</pc> object lets you know the duration of the media clip without any clipping applied.</target>
        </segment>
      </unit>
      <unit id="168">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn652631)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">TrimmedDuration</pc></pc> property lets you know the duration of the media clip after trimming is applied.</source>
          <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">TrimmedDuration</pc></pc> property lets you know the duration of the media clip after trimming is applied.</target>
        </segment>
      </unit>
      <unit id="169">
        <segment state="initial">
          <source xml:space="preserve">Specifying a trimming value that is larger than the original duration of the clip does not throw an error.</source>
          <target xml:space="preserve">Specifying a trimming value that is larger than the original duration of the clip does not throw an error.</target>
        </segment>
      </unit>
      <unit id="170">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn652674)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">However, if a composition contains only a single clip and that is trimmed to zero length by specifying a large trimming value, a subsequent call to <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GeneratePreviewMediaStreamSource</pc></pc> will return null, as if the composition has no clips.</source>
          <target xml:space="preserve">However, if a composition contains only a single clip and that is trimmed to zero length by specifying a large trimming value, a subsequent call to <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">GeneratePreviewMediaStreamSource</pc></pc> will return null, as if the composition has no clips.</target>
        </segment>
      </unit>
      <unit id="171">
        <segment state="initial">
          <source xml:space="preserve">Add a background audio track to a composition</source>
          <target xml:space="preserve">Add a background audio track to a composition</target>
        </segment>
      </unit>
      <unit id="172">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn652544)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/dn652561)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To add a background track to a composition, load an audio file and then create a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">BackgroundAudioTrack</pc></pc> object by calling the factory method <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">BackgroundAudioTrack.CreateFromFileAsync</pc></pc>.</source>
          <target xml:space="preserve">To add a background track to a composition, load an audio file and then create a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">BackgroundAudioTrack</pc></pc> object by calling the factory method <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">BackgroundAudioTrack.CreateFromFileAsync</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="173">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/dn652647)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Then, add the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">BackgroundAudioTrack</pc> to the composition's <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">BackgroundAudioTracks</pc></pc> property.</source>
          <target xml:space="preserve">Then, add the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">BackgroundAudioTrack</pc> to the composition's <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">BackgroundAudioTracks</pc></pc> property.</target>
        </segment>
      </unit>
      <unit id="174">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/MediaEditing/cs/MainPage.xaml.cs#SnippetAddBackgroundAudioTrack)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">AddBackgroundAudioTrack</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">AddBackgroundAudioTrack</pc>]</target>
        </segment>
      </unit>
      <unit id="175">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">A <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaComposition</pc> supports background audio tracks in the following formats: MP3, WAV, FLAC</source>
          <target xml:space="preserve">A <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaComposition</pc> supports background audio tracks in the following formats: MP3, WAV, FLAC</target>
        </segment>
      </unit>
      <unit id="176">
        <segment state="initial">
          <source xml:space="preserve">A background audio track</source>
          <target xml:space="preserve">A background audio track</target>
        </segment>
      </unit>
      <unit id="177">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br207456)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">As with video files, you should use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StorageApplicationPermissions</pc></pc> class to preserve access to files in the composition.</source>
          <target xml:space="preserve">As with video files, you should use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">StorageApplicationPermissions</pc></pc> class to preserve access to files in the composition.</target>
        </segment>
      </unit>
      <unit id="178">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">As with <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaClip</pc>, a <pc dataRefEnd="id4" dataRefStart="id3" id="p2">BackgroundAudioTrack</pc> can only be included in a composition once.</source>
          <target xml:space="preserve">As with <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaClip</pc>, a <pc dataRefEnd="id4" dataRefStart="id3" id="p2">BackgroundAudioTrack</pc> can only be included in a composition once.</target>
        </segment>
      </unit>
      <unit id="179">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Attempting to add a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">BackgroundAudioTrack</pc> that is already being used by the composition will result in an error.</source>
          <target xml:space="preserve">Attempting to add a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">BackgroundAudioTrack</pc> that is already being used by the composition will result in an error.</target>
        </segment>
      </unit>
      <unit id="180">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn652599)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To reuse an audio track multiple times in a composition, call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Clone</pc></pc> to create new <pc dataRefEnd="id6" dataRefStart="id5" id="p3">MediaClip</pc> objects which can then be added to the composition.</source>
          <target xml:space="preserve">To reuse an audio track multiple times in a composition, call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Clone</pc></pc> to create new <pc dataRefEnd="id6" dataRefStart="id5" id="p3">MediaClip</pc> objects which can then be added to the composition.</target>
        </segment>
      </unit>
      <unit id="181">
        <segment state="initial">
          <source xml:space="preserve">By default, background audio tracks begin playing at the start of the composition.</source>
          <target xml:space="preserve">By default, background audio tracks begin playing at the start of the composition.</target>
        </segment>
      </unit>
      <unit id="182">
        <segment state="initial">
          <source xml:space="preserve">If multiple background tracks are present, all of the tracks will begin playing at the start of the composition.</source>
          <target xml:space="preserve">If multiple background tracks are present, all of the tracks will begin playing at the start of the composition.</target>
        </segment>
      </unit>
      <unit id="183">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn652563)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To cause a background audio track to be begin playback at another time, set the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Delay</pc></pc> property to the desired time offset.</source>
          <target xml:space="preserve">To cause a background audio track to be begin playback at another time, set the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Delay</pc></pc> property to the desired time offset.</target>
        </segment>
      </unit>
      <unit id="184">
        <segment state="initial">
          <source xml:space="preserve">Add an overlay to a composition</source>
          <target xml:space="preserve">Add an overlay to a composition</target>
        </segment>
      </unit>
      <unit id="185">
        <segment state="initial">
          <source xml:space="preserve">Overlays allow you to stack multiple layers of video on top of each other in a composition.</source>
          <target xml:space="preserve">Overlays allow you to stack multiple layers of video on top of each other in a composition.</target>
        </segment>
      </unit>
      <unit id="186">
        <segment state="initial">
          <source xml:space="preserve">A composition can contain multiple overlay layers, each of which can include multiple overlays.</source>
          <target xml:space="preserve">A composition can contain multiple overlay layers, each of which can include multiple overlays.</target>
        </segment>
      </unit>
      <unit id="187">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn764793)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Create a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaOverlay</pc></pc> object by passing a <pc dataRefEnd="id6" dataRefStart="id5" id="p3">MediaClip</pc> into its constructor.</source>
          <target xml:space="preserve">Create a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaOverlay</pc></pc> object by passing a <pc dataRefEnd="id6" dataRefStart="id5" id="p3">MediaClip</pc> into its constructor.</target>
        </segment>
      </unit>
      <unit id="188">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn764795)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">[</data>
          <data id="id8">](https://msdn.microsoft.com/library/windows/desktop/dn280411)</data>
          <data id="id9">**</data>
          <data id="id10">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Set the position and opacity of the overlay, then create a new <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaOverlayLayer</pc></pc> and add the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">MediaOverlay</pc> to its <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">Overlays</pc></pc> list.</source>
          <target xml:space="preserve">Set the position and opacity of the overlay, then create a new <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaOverlayLayer</pc></pc> and add the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">MediaOverlay</pc> to its <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">Overlays</pc></pc> list.</target>
        </segment>
      </unit>
      <unit id="189">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/dn764791)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Finally, add the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaOverlayLayer</pc> to the composition's <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">OverlayLayers</pc></pc> list.</source>
          <target xml:space="preserve">Finally, add the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaOverlayLayer</pc> to the composition's <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">OverlayLayers</pc></pc> list.</target>
        </segment>
      </unit>
      <unit id="190">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/MediaEditing/cs/MainPage.xaml.cs#SnippetAddOverlay)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">AddOverlay</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">AddOverlay</pc>]</target>
        </segment>
      </unit>
      <unit id="191">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Overlays within a layer are z-ordered based on their order in their containing layer's <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Overlays</pc> list.</source>
          <target xml:space="preserve">Overlays within a layer are z-ordered based on their order in their containing layer's <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Overlays</pc> list.</target>
        </segment>
      </unit>
      <unit id="192">
        <segment state="initial">
          <source xml:space="preserve">Higher indices within the list are rendered on top of lower indices.</source>
          <target xml:space="preserve">Higher indices within the list are rendered on top of lower indices.</target>
        </segment>
      </unit>
      <unit id="193">
        <segment state="initial">
          <source xml:space="preserve">The same is true of overlay layers within a composition.</source>
          <target xml:space="preserve">The same is true of overlay layers within a composition.</target>
        </segment>
      </unit>
      <unit id="194">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">A layer with higher index in the composition's <pc dataRefEnd="id2" dataRefStart="id1" id="p1">OverlayLayers</pc> list will be rendered on top of lower indices.</source>
          <target xml:space="preserve">A layer with higher index in the composition's <pc dataRefEnd="id2" dataRefStart="id1" id="p1">OverlayLayers</pc> list will be rendered on top of lower indices.</target>
        </segment>
      </unit>
      <unit id="195">
        <segment state="initial">
          <source xml:space="preserve">Because overlays are stacked on top of each other instead of being played sequentially, all overlays start playback at the beginning of the composition by default.</source>
          <target xml:space="preserve">Because overlays are stacked on top of each other instead of being played sequentially, all overlays start playback at the beginning of the composition by default.</target>
        </segment>
      </unit>
      <unit id="196">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn764810)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To cause an overlay to be begin playback at another time, set the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Delay</pc></pc> property to the desired time offset.</source>
          <target xml:space="preserve">To cause an overlay to be begin playback at another time, set the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">Delay</pc></pc> property to the desired time offset.</target>
        </segment>
      </unit>
      <unit id="197">
        <segment state="initial">
          <source xml:space="preserve">Add effects to a media clip</source>
          <target xml:space="preserve">Add effects to a media clip</target>
        </segment>
      </unit>
      <unit id="198">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Each <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaClip</pc> in a composition has a list of audio and video effects to which multiple effects can be added.</source>
          <target xml:space="preserve">Each <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaClip</pc> in a composition has a list of audio and video effects to which multiple effects can be added.</target>
        </segment>
      </unit>
      <unit id="199">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn608044)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/dn608047)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The effects must implement <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IAudioEffectDefinition</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">IVideoEffectDefinition</pc></pc> respectively.</source>
          <target xml:space="preserve">The effects must implement <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IAudioEffectDefinition</pc></pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">IVideoEffectDefinition</pc></pc> respectively.</target>
        </segment>
      </unit>
      <unit id="200">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/dn926762)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">[</data>
          <data id="id8">](https://msdn.microsoft.com/library/windows/apps/dn652643)</data>
          <data id="id9">**</data>
          <data id="id10">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The following example uses the current media element position to choose the currently viewed <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaClip</pc> and then creates a new instance of the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">VideoStabilizationEffectDefinition</pc></pc> and appends it to the media clip's <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">VideoEffectDefinitions</pc></pc> list.</source>
          <target xml:space="preserve">The following example uses the current media element position to choose the currently viewed <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaClip</pc> and then creates a new instance of the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">VideoStabilizationEffectDefinition</pc></pc> and appends it to the media clip's <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">VideoEffectDefinitions</pc></pc> list.</target>
        </segment>
      </unit>
      <unit id="201">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/MediaEditing/cs/MainPage.xaml.cs#SnippetAddVideoEffect)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">AddVideoEffect</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">AddVideoEffect</pc>]</target>
        </segment>
      </unit>
      <unit id="202">
        <segment state="initial">
          <source xml:space="preserve">Save a composition to a file</source>
          <target xml:space="preserve">Save a composition to a file</target>
        </segment>
      </unit>
      <unit id="203">
        <segment state="initial">
          <source xml:space="preserve">Media compositions can be serialized to a file to be modified at a later time.</source>
          <target xml:space="preserve">Media compositions can be serialized to a file to be modified at a later time.</target>
        </segment>
      </unit>
      <unit id="204">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn652646)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/dn640554)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Pick an output file and then call the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaComposition</pc></pc> method <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">SaveAsync</pc></pc> to save the composition.</source>
          <target xml:space="preserve">Pick an output file and then call the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaComposition</pc></pc> method <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">SaveAsync</pc></pc> to save the composition.</target>
        </segment>
      </unit>
      <unit id="205">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/MediaEditing/cs/MainPage.xaml.cs#SnippetSaveComposition)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">SaveComposition</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">SaveComposition</pc>]</target>
        </segment>
      </unit>
      <unit id="206">
        <segment state="initial">
          <source xml:space="preserve">Load a composition from a file</source>
          <target xml:space="preserve">Load a composition from a file</target>
        </segment>
      </unit>
      <unit id="207">
        <segment state="initial">
          <source xml:space="preserve">Media compositions can be deserialized from a file to allow the user to view and modify the composition.</source>
          <target xml:space="preserve">Media compositions can be deserialized from a file to allow the user to view and modify the composition.</target>
        </segment>
      </unit>
      <unit id="208">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn652646)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/dn652684)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Pick a composition file and then call the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaComposition</pc></pc> method <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">LoadAsync</pc></pc> to load the composition.</source>
          <target xml:space="preserve">Pick a composition file and then call the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaComposition</pc></pc> method <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">LoadAsync</pc></pc> to load the composition.</target>
        </segment>
      </unit>
      <unit id="209">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](./code/MediaEditing/cs/MainPage.xaml.cs#SnippetOpenComposition)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">OpenComposition</pc>]</source>
          <target xml:space="preserve">[!code-cs<pc dataRefEnd="id2" dataRefStart="id1" id="p1">OpenComposition</pc>]</target>
        </segment>
      </unit>
      <unit id="210">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br207457)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/br207456)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">If a media file in the composition is not in a location that can be accessed by your app and is not in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FutureAccessList</pc></pc> property of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">StorageApplicationPermissions</pc></pc> class for your app, an error will be thrown when loading the composition.</source>
          <target xml:space="preserve">If a media file in the composition is not in a location that can be accessed by your app and is not in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">FutureAccessList</pc></pc> property of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">StorageApplicationPermissions</pc></pc> class for your app, an error will be thrown when loading the composition.</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>