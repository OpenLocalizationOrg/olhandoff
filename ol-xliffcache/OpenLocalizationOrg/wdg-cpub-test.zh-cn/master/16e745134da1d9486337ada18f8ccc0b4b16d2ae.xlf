<?xml version="1.0" encoding="utf-8"?>
<xliff srcLang="en-US" trgLang="zh-cn" version="2.0" xmlns="urn:oasis:names:tc:xliff:document:2.0" xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">16e745134da1d9486337ada18f8ccc0b4b16d2ae</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source xml:space="preserve">ms.assetid: BF877F23-1238-4586-9C16-246F3F25AE35</source>
          <target xml:space="preserve">ms.assetid: BF877F23-1238-4586-9C16-246F3F25AE35</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source xml:space="preserve">description: This article describes how to add adaptive streaming of multimedia content with Microsoft PlayReady content protection to a Universal Windows Platform (UWP) app.</source>
          <target xml:space="preserve">description: This article describes how to add adaptive streaming of multimedia content with Microsoft PlayReady content protection to a Universal Windows Platform (UWP) app.</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source xml:space="preserve">title: Adaptive Streaming with PlayReady</source>
          <target xml:space="preserve">title: Adaptive Streaming with PlayReady</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source xml:space="preserve">Adaptive Streaming with PlayReady</source>
          <target xml:space="preserve">Adaptive Streaming with PlayReady</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source xml:space="preserve">\[ Updated for UWP apps on Windows 10.</source>
          <target xml:space="preserve">\[ Updated for UWP apps on Windows 10.</target>
        </segment>
      </unit>
      <unit id="106">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
          <target xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source xml:space="preserve">\[Some information relates to pre-released product which may be substantially modified before it's commercially released.</source>
          <target xml:space="preserve">\[Some information relates to pre-released product which may be substantially modified before it's commercially released.</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source xml:space="preserve">Microsoft makes no warranties, express or implied, with respect to the information provided here.\]</source>
          <target xml:space="preserve">Microsoft makes no warranties, express or implied, with respect to the information provided here.\]</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source xml:space="preserve">This article describes how to add adaptive streaming of multimedia content with Microsoft PlayReady content protection to a Universal Windows Platform (UWP) app.</source>
          <target xml:space="preserve">This article describes how to add adaptive streaming of multimedia content with Microsoft PlayReady content protection to a Universal Windows Platform (UWP) app.</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source xml:space="preserve">This feature currently supports playback of Http Live Streaming (HLS) and Dynamic Streaming over HTTP (DASH) content.</source>
          <target xml:space="preserve">This feature currently supports playback of Http Live Streaming (HLS) and Dynamic Streaming over HTTP (DASH) content.</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source xml:space="preserve">This article only deals with the aspects of adaptive streaming specific to PlayReady.</source>
          <target xml:space="preserve">This article only deals with the aspects of adaptive streaming specific to PlayReady.</target>
        </segment>
      </unit>
      <unit id="112">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](adaptive-streaming.md)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For information about implementing adaptive streaming in general, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Adaptive Streaming</pc>.</source>
          <target xml:space="preserve">For information about implementing adaptive streaming in general, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Adaptive Streaming</pc>.</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source xml:space="preserve">You will need the following using statements:</source>
          <target xml:space="preserve">You will need the following using statements:</target>
        </segment>
      </unit>
      <unit id="114">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">LicenseRequest</pc> namespace is from <pc dataRefEnd="id4" dataRefStart="id3" id="p2">CommonLicenseRequest.cs</pc>, a PlayReady file provided by Microsoft to licensees.</source>
          <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">LicenseRequest</pc> namespace is from <pc dataRefEnd="id4" dataRefStart="id3" id="p2">CommonLicenseRequest.cs</pc>, a PlayReady file provided by Microsoft to licensees.</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source xml:space="preserve">You will need to declare a few global variables:</source>
          <target xml:space="preserve">You will need to declare a few global variables:</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source xml:space="preserve">You will also want to declare the following constant:</source>
          <target xml:space="preserve">You will also want to declare the following constant:</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source xml:space="preserve">Setting up the MediaProtectionManager</source>
          <target xml:space="preserve">Setting up the MediaProtectionManager</target>
        </segment>
      </unit>
      <unit id="118">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br207040)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To add PlayReady content protection to your UWP app, you will need to set up a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaProtectionManager</pc> object.</source>
          <target xml:space="preserve">To add PlayReady content protection to your UWP app, you will need to set up a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaProtectionManager</pc> object.</target>
        </segment>
      </unit>
      <unit id="119">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn946912)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">You do this when initializing your <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">AdaptiveMediaSource</pc></pc> object.</source>
          <target xml:space="preserve">You do this when initializing your <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">AdaptiveMediaSource</pc></pc> object.</target>
        </segment>
      </unit>
      <unit id="120">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br207040)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The following code sets up a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaProtectionManager</pc>:</source>
          <target xml:space="preserve">The following code sets up a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MediaProtectionManager</pc>:</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source xml:space="preserve">This code can simply be copied to your app, since it is mandatory for setting up content protection.</source>
          <target xml:space="preserve">This code can simply be copied to your app, since it is mandatory for setting up content protection.</target>
        </segment>
      </unit>
      <unit id="122">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br207041)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ComponentLoadFailed</pc> event is fired when the load of binary data fails.</source>
          <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ComponentLoadFailed</pc> event is fired when the load of binary data fails.</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source xml:space="preserve">We need to add an event handler to handle this, signaling that the load did not complete:</source>
          <target xml:space="preserve">We need to add an event handler to handle this, signaling that the load did not complete:</target>
        </segment>
      </unit>
      <unit id="124">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br207045)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Similarly, we need to add an event handler for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ServiceRequested</pc> event, which fires when a service is requested.</source>
          <target xml:space="preserve">Similarly, we need to add an event handler for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ServiceRequested</pc> event, which fires when a service is requested.</target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source xml:space="preserve">This code checks what kind of request it is, and responds appropriately:</source>
          <target xml:space="preserve">This code checks what kind of request it is, and responds appropriately:</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source xml:space="preserve">Individualization service requests</source>
          <target xml:space="preserve">Individualization service requests</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source xml:space="preserve">The following code reactively makes a PlayReady individualization service request.</source>
          <target xml:space="preserve">The following code reactively makes a PlayReady individualization service request.</target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source xml:space="preserve">We pass in the request as a parameter to the function.</source>
          <target xml:space="preserve">We pass in the request as a parameter to the function.</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source xml:space="preserve">We surround the call in a try/catch block, and if there are no exceptions, we say the request completed successfully:</source>
          <target xml:space="preserve">We surround the call in a try/catch block, and if there are no exceptions, we say the request completed successfully:</target>
        </segment>
      </unit>
      <unit id="130">
        <originalData>
          <data id="id1">`ReactiveIndivRequest`</data>
          <data id="id2">`ProtectionManager_ServiceRequested`</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Alternatively, we may want to proactively make an individualization service request, in which case we call the function below in place of the code calling <ph dataRef="id1" id="ph1" /> in <ph dataRef="id2" id="ph2" />:</source>
          <target xml:space="preserve">Alternatively, we may want to proactively make an individualization service request, in which case we call the function below in place of the code calling <ph dataRef="id1" id="ph1" /> in <ph dataRef="id2" id="ph2" />:</target>
        </segment>
      </unit>
      <unit id="131">
        <segment state="initial">
          <source xml:space="preserve">License acquisition service requests</source>
          <target xml:space="preserve">License acquisition service requests</target>
        </segment>
      </unit>
      <unit id="132">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn986285)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">If instead the request was a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">PlayReadyLicenseAcquisitionServiceRequest</pc>, we call the below function to request and acquire the PlayReady license.</source>
          <target xml:space="preserve">If instead the request was a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">PlayReadyLicenseAcquisitionServiceRequest</pc>, we call the below function to request and acquire the PlayReady license.</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source xml:space="preserve">We tell the MediaProtectionServiceCompletion object that we passed in whether the request was successful or not, and we complete the request:</source>
          <target xml:space="preserve">We tell the MediaProtectionServiceCompletion object that we passed in whether the request was successful or not, and we complete the request:</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source xml:space="preserve">Initializing the AdaptiveMediaSource</source>
          <target xml:space="preserve">Initializing the AdaptiveMediaSource</target>
        </segment>
      </unit>
      <unit id="135">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn946912)</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/xaml/system.uri.aspx)</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/br242926)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Finally, you will need a function to initialize the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdaptiveMediaSource</pc>, created from a given <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Uri</pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3">MediaElement</pc>.</source>
          <target xml:space="preserve">Finally, you will need a function to initialize the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AdaptiveMediaSource</pc>, created from a given <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Uri</pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3">MediaElement</pc>.</target>
        </segment>
      </unit>
      <unit id="136">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Uri</pc> should be the link to the media file (HLS or DASH); the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaElement</pc> should be defined in your XAML.</source>
          <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Uri</pc> should be the link to the media file (HLS or DASH); the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">MediaElement</pc> should be defined in your XAML.</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source xml:space="preserve">You can call this function in whichever event handles the start of adaptive streaming—for instance, in a button click event.</source>
          <target xml:space="preserve">You can call this function in whichever event handles the start of adaptive streaming—for instance, in a button click event.</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>