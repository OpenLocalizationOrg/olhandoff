<?xml version="1.0" encoding="utf-8"?>
<xliff srcLang="en-US" trgLang="zh-cn" version="2.0" xmlns="urn:oasis:names:tc:xliff:document:2.0" xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">ccd7c243bded015a888a2e0630819bcb860e9529</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source xml:space="preserve">ms.assetid: 5E722AFF-539D-456E-8C4A-ADE90CF7674A</source>
          <target xml:space="preserve">ms.assetid: 5E722AFF-539D-456E-8C4A-ADE90CF7674A</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source xml:space="preserve">description: If your app offers a large in-app product catalog, you can optionally follow the process described in this topic to help manage your catalog.</source>
          <target xml:space="preserve">description: If your app offers a large in-app product catalog, you can optionally follow the process described in this topic to help manage your catalog.</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source xml:space="preserve">title: Manage a large catalog of in-app products</source>
          <target xml:space="preserve">title: Manage a large catalog of in-app products</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source xml:space="preserve">Manage a large catalog of in-app products</source>
          <target xml:space="preserve">Manage a large catalog of in-app products</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source xml:space="preserve">\[ Updated for UWP apps on Windows 10.</source>
          <target xml:space="preserve">\[ Updated for UWP apps on Windows 10.</target>
        </segment>
      </unit>
      <unit id="106">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
          <target xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source xml:space="preserve">If your app offers a large in-app product catalog, you can optionally follow the process described in this topic to help manage your catalog.</source>
          <target xml:space="preserve">If your app offers a large in-app product catalog, you can optionally follow the process described in this topic to help manage your catalog.</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source xml:space="preserve">You will create a handful of product entries for specific price tiers, with each one able to represent hundreds of products within a catalog.</source>
          <target xml:space="preserve">You will create a handful of product entries for specific price tiers, with each one able to represent hundreds of products within a catalog.</target>
        </segment>
      </unit>
      <unit id="109">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn263382)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">To enable this capability, use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">RequestProductPurchaseAsync</pc></pc> method overload that specifies an app-defined offer associated with an in-app product listed in the Store.</source>
          <target xml:space="preserve">To enable this capability, use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">RequestProductPurchaseAsync</pc></pc> method overload that specifies an app-defined offer associated with an in-app product listed in the Store.</target>
        </segment>
      </unit>
      <unit id="110">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn263384)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">In addition to specifying an offer and product association during the call, your app should also pass a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ProductPurchaseDisplayProperties</pc></pc> object that contains the large catalog offer details.</source>
          <target xml:space="preserve">In addition to specifying an offer and product association during the call, your app should also pass a <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ProductPurchaseDisplayProperties</pc></pc> object that contains the large catalog offer details.</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source xml:space="preserve">If these details are not provided, the details for the listed product will be used instead.</source>
          <target xml:space="preserve">If these details are not provided, the details for the listed product will be used instead.</target>
        </segment>
      </unit>
      <unit id="112">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/dn263392)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The Store will only use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">offerId</pc> from the purchase request in the resulting <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">PurchaseResults</pc></pc>.</source>
          <target xml:space="preserve">The Store will only use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">offerId</pc> from the purchase request in the resulting <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">PurchaseResults</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="113">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/mt148551)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">This process does not directly modify the information originally provided when <pc dataRefEnd="id2" dataRefStart="id1" id="p1">listing the in-app product in the Store</pc>.</source>
          <target xml:space="preserve">This process does not directly modify the information originally provided when <pc dataRefEnd="id2" dataRefStart="id1" id="p1">listing the in-app product in the Store</pc>.</target>
        </segment>
      </unit>
      <unit id="114">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  Starting with Windows 10, the Store has no limit to the number of product listings per developer account.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  Starting with Windows 10, the Store has no limit to the number of product listings per developer account.</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source xml:space="preserve">In previous releases, the Store has a limit of 200 product listings per developer account, and the process described in this topic can be used to work around that limitation.</source>
          <target xml:space="preserve">In previous releases, the Store has a limit of 200 product listings per developer account, and the process described in this topic can be used to work around that limitation.</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source xml:space="preserve">Prerequisites</source>
          <target xml:space="preserve">Prerequisites</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source xml:space="preserve">This topic covers Store support for the representation of multiple in-app offers using a single in-app product listed in the Store.</source>
          <target xml:space="preserve">This topic covers Store support for the representation of multiple in-app offers using a single in-app product listed in the Store.</target>
        </segment>
      </unit>
      <unit id="118">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](enable-in-app-product-purchases.md)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">If you are unfamiliar with in-app purchases please review <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Enable in-app product purchases</pc> to learn about license information, and how to properly list your in-app purchase in the Store.</source>
          <target xml:space="preserve">If you are unfamiliar with in-app purchases please review <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Enable in-app product purchases</pc> to learn about license information, and how to properly list your in-app purchase in the Store.</target>
        </segment>
      </unit>
      <unit id="119">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/hh779766)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/library/windows/apps/hh779765)</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">When you code and test new in-app offers for the first time, you must use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CurrentAppSimulator</pc></pc> object instead of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">CurrentApp</pc></pc> object.</source>
          <target xml:space="preserve">When you code and test new in-app offers for the first time, you must use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">CurrentAppSimulator</pc></pc> object instead of the <pc dataRefEnd="id6" dataRefStart="id5" id="p3"><pc dataRefEnd="id8" dataRefStart="id7" id="p4">CurrentApp</pc></pc> object.</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source xml:space="preserve">This way you can verify your license logic using simulated calls to the license server instead of calling the live server.</source>
          <target xml:space="preserve">This way you can verify your license logic using simulated calls to the license server instead of calling the live server.</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source xml:space="preserve">To do this, you need to customize the file named "WindowsStoreProxy.xml" in %userprofile%\\AppData\\local\\packages\\&amp;lt;package name&amp;gt;\\LocalState\\Microsoft\\Windows Store\\ApiData.</source>
          <target xml:space="preserve">To do this, you need to customize the file named "WindowsStoreProxy.xml" in %userprofile%\\AppData\\local\\packages\\&amp;lt;package name&amp;gt;\\LocalState\\Microsoft\\Windows Store\\ApiData.</target>
        </segment>
      </unit>
      <unit id="122">
        <segment state="initial">
          <source xml:space="preserve">The Microsoft Visual Studio simulator creates this file when you run your app for the first time—or you can also load a custom one at runtime.</source>
          <target xml:space="preserve">The Microsoft Visual Studio simulator creates this file when you run your app for the first time—or you can also load a custom one at runtime.</target>
        </segment>
      </unit>
      <unit id="123">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">CurrentAppSimulator</pc>.</source>
          <target xml:space="preserve">For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">CurrentAppSimulator</pc>.</target>
        </segment>
      </unit>
      <unit id="124">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?LinkID=627610)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">This topic also references code examples provided in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Store sample</pc>.</source>
          <target xml:space="preserve">This topic also references code examples provided in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Store sample</pc>.</target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source xml:space="preserve">This sample is a great way to get hands-on experience with the different monetization options provided for Universal Windows Platform (UWP) apps.</source>
          <target xml:space="preserve">This sample is a great way to get hands-on experience with the different monetization options provided for Universal Windows Platform (UWP) apps.</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source xml:space="preserve">Make the purchase request for the in-app product</source>
          <target xml:space="preserve">Make the purchase request for the in-app product</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source xml:space="preserve">The purchase request for a specific product within a large catalog is handled in much the same way as any other purchase request within an app.</source>
          <target xml:space="preserve">The purchase request for a specific product within a large catalog is handled in much the same way as any other purchase request within an app.</target>
        </segment>
      </unit>
      <unit id="128">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn263382)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">*</data>
          <data id="id6">*</data>
          <data id="id7">[</data>
          <data id="id8">](https://msdn.microsoft.com/library/windows/apps/dn263390)</data>
          <data id="id9">**</data>
          <data id="id10">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">When your app calls the new <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">RequestProductPurchaseAsync</pc></pc> method overload, your app provides both an <pc dataRefEnd="id6" dataRefStart="id5" id="p3">OfferId</pc> and a <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">ProductPurchaseDisplayProperties</pc></pc> object populated with the name of the in-app product.</source>
          <target xml:space="preserve">When your app calls the new <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">RequestProductPurchaseAsync</pc></pc> method overload, your app provides both an <pc dataRefEnd="id6" dataRefStart="id5" id="p3">OfferId</pc> and a <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">ProductPurchaseDisplayProperties</pc></pc> object populated with the name of the in-app product.</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source xml:space="preserve">Report fulfillment of the in-app offer</source>
          <target xml:space="preserve">Report fulfillment of the in-app offer</target>
        </segment>
      </unit>
      <unit id="130">
        <segment state="initial">
          <source xml:space="preserve">Your app will need to report product fulfillment to the Store as soon as the offer has been fulfilled locally.</source>
          <target xml:space="preserve">Your app will need to report product fulfillment to the Store as soon as the offer has been fulfilled locally.</target>
        </segment>
      </unit>
      <unit id="131">
        <segment state="initial">
          <source xml:space="preserve">In a large catalog scenario, if your app does not report offer fulfillment, the user will be unable to purchase any in-app offers using that same Store product listing.</source>
          <target xml:space="preserve">In a large catalog scenario, if your app does not report offer fulfillment, the user will be unable to purchase any in-app offers using that same Store product listing.</target>
        </segment>
      </unit>
      <unit id="132">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn263392)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">As mentioned earlier, the Store only uses provided offer info to populate the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PurchaseResults</pc></pc>, and does not create a persistent association between a large catalog offer and Store product listing.</source>
          <target xml:space="preserve">As mentioned earlier, the Store only uses provided offer info to populate the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">PurchaseResults</pc></pc>, and does not create a persistent association between a large catalog offer and Store product listing.</target>
        </segment>
      </unit>
      <unit id="133">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/dn263382)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">As a result you need to track user entitlement for products, and provide product-specific context (such as the name of the item being purchased or details about it) to the user outside of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">RequestProductPurchaseAsync</pc></pc> operation.</source>
          <target xml:space="preserve">As a result you need to track user entitlement for products, and provide product-specific context (such as the name of the item being purchased or details about it) to the user outside of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">RequestProductPurchaseAsync</pc></pc> operation.</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source xml:space="preserve">The following code demonstrates the fulfillment call, and a UI messaging pattern in which the specific offer info is inserted.</source>
          <target xml:space="preserve">The following code demonstrates the fulfillment call, and a UI messaging pattern in which the specific offer info is inserted.</target>
        </segment>
      </unit>
      <unit id="135">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/apps/br225163)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">In the absence of that specific product info, the example uses info from the product <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ListingInformation</pc></pc>.</source>
          <target xml:space="preserve">In the absence of that specific product info, the example uses info from the product <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">ListingInformation</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="136">
        <segment state="initial">
          <source xml:space="preserve">Related topics</source>
          <target xml:space="preserve">Related topics</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source xml:space="preserve">Enable in-app product purchases</source>
          <target xml:space="preserve">Enable in-app product purchases</target>
        </segment>
      </unit>
      <unit id="138">
        <segment state="initial">
          <source xml:space="preserve">Enable consumable in-app product purchases</source>
          <target xml:space="preserve">Enable consumable in-app product purchases</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source xml:space="preserve">Store sample (demonstrates trials and in-app purchases)</source>
          <target xml:space="preserve">Store sample (demonstrates trials and in-app purchases)</target>
        </segment>
      </unit>
      <unit id="140">
        <segment state="initial">
          <source xml:space="preserve">RequestProductPurchaseAsync</source>
          <target xml:space="preserve">RequestProductPurchaseAsync</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source xml:space="preserve">ProductPurchaseDisplayProperties</source>
          <target xml:space="preserve">ProductPurchaseDisplayProperties</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>