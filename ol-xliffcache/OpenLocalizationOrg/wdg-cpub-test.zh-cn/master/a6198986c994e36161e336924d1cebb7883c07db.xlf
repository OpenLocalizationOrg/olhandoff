<?xml version="1.0" encoding="utf-8"?>
<xliff srcLang="en-US" trgLang="zh-cn" version="2.0" xmlns="urn:oasis:names:tc:xliff:document:2.0" xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">a6198986c994e36161e336924d1cebb7883c07db</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source xml:space="preserve">ms.assetid: E322DFFE-8EEC-499D-87BC-EDA5CFC27551</source>
          <target xml:space="preserve">ms.assetid: E322DFFE-8EEC-499D-87BC-EDA5CFC27551</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source xml:space="preserve">description: Each Windows Store transaction that results in a successful product purchase can optionally return a transaction receipt.</source>
          <target xml:space="preserve">description: Each Windows Store transaction that results in a successful product purchase can optionally return a transaction receipt.</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source xml:space="preserve">title: Use receipts to verify product purchases</source>
          <target xml:space="preserve">title: Use receipts to verify product purchases</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source xml:space="preserve">Use receipts to verify product purchases</source>
          <target xml:space="preserve">Use receipts to verify product purchases</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source xml:space="preserve">\[ Updated for UWP apps on Windows 10.</source>
          <target xml:space="preserve">\[ Updated for UWP apps on Windows 10.</target>
        </segment>
      </unit>
      <unit id="106">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=619132)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</source>
          <target xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">archive</pc> \]</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source xml:space="preserve">Important APIs</source>
          <target xml:space="preserve">Important APIs</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source xml:space="preserve">CurrentApp</source>
          <target xml:space="preserve">CurrentApp</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source xml:space="preserve">CurrentAppSimulator</source>
          <target xml:space="preserve">CurrentAppSimulator</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source xml:space="preserve">Each Windows Store transaction that results in a successful product purchase can optionally return a transaction receipt.</source>
          <target xml:space="preserve">Each Windows Store transaction that results in a successful product purchase can optionally return a transaction receipt.</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source xml:space="preserve">This receipts provides information about the listed product and monetary cost to the customer.</source>
          <target xml:space="preserve">This receipts provides information about the listed product and monetary cost to the customer.</target>
        </segment>
      </unit>
      <unit id="112">
        <segment state="initial">
          <source xml:space="preserve">Having access to this information supports scenarios where your app needs to verify that a user purchased your app, or has made in-app product purchases from the Windows Store.</source>
          <target xml:space="preserve">Having access to this information supports scenarios where your app needs to verify that a user purchased your app, or has made in-app product purchases from the Windows Store.</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source xml:space="preserve">For example, imagine a game that offers downloaded content.</source>
          <target xml:space="preserve">For example, imagine a game that offers downloaded content.</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source xml:space="preserve">If the user who purchased the game content wants to play it on a different device, you need to verify that the user already owns the content.</source>
          <target xml:space="preserve">If the user who purchased the game content wants to play it on a different device, you need to verify that the user already owns the content.</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source xml:space="preserve">Here's how.</source>
          <target xml:space="preserve">Here's how.</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source xml:space="preserve">Requesting a receipt</source>
          <target xml:space="preserve">Requesting a receipt</target>
        </segment>
      </unit>
      <unit id="117">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](https://msdn.microsoft.com/library/windows/apps/dn263381)</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">[</data>
          <data id="id8">](https://msdn.microsoft.com/library/windows/apps/hh967813)</data>
          <data id="id9">**</data>
          <data id="id10">**</data>
          <data id="id11">*</data>
          <data id="id12">*</data>
          <data id="id13">[</data>
          <data id="id14">](https://msdn.microsoft.com/library/windows/apps/hh967811)</data>
          <data id="id15">**</data>
          <data id="id16">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows.ApplicationModel.Store</pc> namespace supports two ways of getting a receipt: by using the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">CurrentApp.RequestProductPurchaseAsync | requestProductPurchaseAsync</pc></pc> or <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">CurrentApp.RequestAppPurchaseAsync | requestAppPurchaseAsync</pc></pc> method and using the <pc dataRefEnd="id12" dataRefStart="id11" id="p6">includeReceipt</pc> parameter, or by calling the <pc dataRefEnd="id14" dataRefStart="id13" id="p7"><pc dataRefEnd="id16" dataRefStart="id15" id="p8">CurrentApp.GetAppReceiptAsync | getAppReceiptAsync</pc></pc> method.</source>
          <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows.ApplicationModel.Store</pc> namespace supports two ways of getting a receipt: by using the <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><pc dataRefEnd="id6" dataRefStart="id5" id="p3">CurrentApp.RequestProductPurchaseAsync | requestProductPurchaseAsync</pc></pc> or <pc dataRefEnd="id8" dataRefStart="id7" id="p4"><pc dataRefEnd="id10" dataRefStart="id9" id="p5">CurrentApp.RequestAppPurchaseAsync | requestAppPurchaseAsync</pc></pc> method and using the <pc dataRefEnd="id12" dataRefStart="id11" id="p6">includeReceipt</pc> parameter, or by calling the <pc dataRefEnd="id14" dataRefStart="id13" id="p7"><pc dataRefEnd="id16" dataRefStart="id15" id="p8">CurrentApp.GetAppReceiptAsync | getAppReceiptAsync</pc></pc> method.</target>
        </segment>
      </unit>
      <unit id="118">
        <segment state="initial">
          <source xml:space="preserve">An app receipt looks something like this.</source>
          <target xml:space="preserve">An app receipt looks something like this.</target>
        </segment>
      </unit>
      <unit id="119">
        <segment state="initial">
          <source xml:space="preserve">A product receipt looks like this.</source>
          <target xml:space="preserve">A product receipt looks like this.</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source xml:space="preserve">You can use either of these receipt examples to test your validation code.</source>
          <target xml:space="preserve">You can use either of these receipt examples to test your validation code.</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source xml:space="preserve">Validating a receipt</source>
          <target xml:space="preserve">Validating a receipt</target>
        </segment>
      </unit>
      <unit id="122">
        <segment state="initial">
          <source xml:space="preserve">After you get a receipt, you need your back-end system (a web service or something similar) to validate it.</source>
          <target xml:space="preserve">After you get a receipt, you need your back-end system (a web service or something similar) to validate it.</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source xml:space="preserve">Here's a .NET Framework example of that validation process.</source>
          <target xml:space="preserve">Here's a .NET Framework example of that validation process.</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>