<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="nl-nl">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">acomdc_nonhi</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">affabae9c06ccc05f130db877da8dabbc97df0d7</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1457980" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Authentication and Authorization in Azure Mobile Apps | Microsoft Azure</source>
          <target state="new">Authentication and Authorization in Azure Mobile Apps | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Conceptual reference and overview of the Authentication / Authorization feature for Azure Mobile Apps</source>
          <target state="new">Conceptual reference and overview of the Authentication / Authorization feature for Azure Mobile Apps</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Authentication and Authorization in Azure Mobile Apps</source>
          <target state="new">Authentication and Authorization in Azure Mobile Apps</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>What is App Service Authentication / Authorization?</source>
          <target state="new">What is App Service Authentication / Authorization?</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>App Service Authentication / Authorization is a feature which allows your application to log in users with no code changes required on the app backend.</source>
          <target state="new">App Service Authentication / Authorization is a feature which allows your application to log in users with no code changes required on the app backend.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>It provides an easy way to protect your application and work with per-user data.</source>
          <target state="new">It provides an easy way to protect your application and work with per-user data.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>App Service uses federated identity, in which a 3rd-party <bpt id="p1">**</bpt>identity provider<ept id="p1">**</ept> ("IDP") stores accounts and authenticates users, and the application uses this identity instead of its own.</source>
          <target state="new">App Service uses federated identity, in which a 3rd-party <bpt id="p1">**</bpt>identity provider<ept id="p1">**</ept> ("IDP") stores accounts and authenticates users, and the application uses this identity instead of its own.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>App Service supports five identity providers out of the box: <bpt id="p1">_</bpt>Azure Active Directory<ept id="p1">_</ept>, <bpt id="p2">_</bpt>Facebook<ept id="p2">_</ept>, <bpt id="p3">_</bpt>Google<ept id="p3">_</ept>, <bpt id="p4">_</bpt>Microsoft Account<ept id="p4">_</ept>, and <bpt id="p5">_</bpt>Twitter<ept id="p5">_</ept>.</source>
          <target state="new">App Service supports five identity providers out of the box: <bpt id="p1">_</bpt>Azure Active Directory<ept id="p1">_</ept>, <bpt id="p2">_</bpt>Facebook<ept id="p2">_</ept>, <bpt id="p3">_</bpt>Google<ept id="p3">_</ept>, <bpt id="p4">_</bpt>Microsoft Account<ept id="p4">_</ept>, and <bpt id="p5">_</bpt>Twitter<ept id="p5">_</ept>.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You can also expand this support for your apps by integrating another identity provider or your own custom identity solution.</source>
          <target state="new">You can also expand this support for your apps by integrating another identity provider or your own custom identity solution.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Your app can leverage any number of these identity providers, so you can provide your end users with options for how they login.</source>
          <target state="new">Your app can leverage any number of these identity providers, so you can provide your end users with options for how they login.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>If you wish to get started right away, please see one of the following tutorials:</source>
          <target state="new">If you wish to get started right away, please see one of the following tutorials:</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Add authentication to your iOS app</source>
          <target state="new">Add authentication to your iOS app</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Add authentication to your Xamarin.iOS app</source>
          <target state="new">Add authentication to your Xamarin.iOS app</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Add authentication to your Xamarin.Android app</source>
          <target state="new">Add authentication to your Xamarin.Android app</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Add Authentication to your Windows app</source>
          <target state="new">Add Authentication to your Windows app</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>How authentication works</source>
          <target state="new">How authentication works</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>In order to authenticate using one of the identity providers, you first need to configure the identity provider to know about your application.</source>
          <target state="new">In order to authenticate using one of the identity providers, you first need to configure the identity provider to know about your application.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The identity provider will then provide you with IDs and secrets that you provide back to the application.</source>
          <target state="new">The identity provider will then provide you with IDs and secrets that you provide back to the application.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This completes the trust relationship and allows App Service to validate identities provided to it.</source>
          <target state="new">This completes the trust relationship and allows App Service to validate identities provided to it.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>These steps are detailed in the following topics:</source>
          <target state="new">These steps are detailed in the following topics:</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>How to configure your app to use Azure Active Directory login</source>
          <target state="new">How to configure your app to use Azure Active Directory login</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>How to configure your app to use Facebook login</source>
          <target state="new">How to configure your app to use Facebook login</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>How to configure your app to use Google login</source>
          <target state="new">How to configure your app to use Google login</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>How to configure your app to use Microsoft Account login</source>
          <target state="new">How to configure your app to use Microsoft Account login</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>How to configure your app to use Twitter login</source>
          <target state="new">How to configure your app to use Twitter login</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Once everything is configured on the backend, you can modify your client to log in.</source>
          <target state="new">Once everything is configured on the backend, you can modify your client to log in.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>There are two approaches here:</source>
          <target state="new">There are two approaches here:</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Using a single line of code, let the Mobile Apps client SDK sign in users.</source>
          <target state="new">Using a single line of code, let the Mobile Apps client SDK sign in users.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Leverage an SDK published by a given identity provider to establish identity and then gain access to App Service.</source>
          <target state="new">Leverage an SDK published by a given identity provider to establish identity and then gain access to App Service.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.TIP]</ph> Most applications should use a provider SDK to get a more native-feeling login experience and to leverage refresh support and other provider-specific benefits.</source>
          <target state="new"><ph id="ph1">[AZURE.TIP]</ph> Most applications should use a provider SDK to get a more native-feeling login experience and to leverage refresh support and other provider-specific benefits.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>How authentication without a provider SDK works</source>
          <target state="new">How authentication without a provider SDK works</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>If you do not wish to set up a provider SDK, you can allow Mobile Apps to perform the login for you.</source>
          <target state="new">If you do not wish to set up a provider SDK, you can allow Mobile Apps to perform the login for you.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The Mobile Apps client SDK will open a web view to the provider of your choosing and complete the signin.</source>
          <target state="new">The Mobile Apps client SDK will open a web view to the provider of your choosing and complete the signin.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Occasionally on blogs and forums you will see this referred to as the "server flow" or "server-directed flow" since the server is managing the login, and the client SDK never recieves the provider token.</source>
          <target state="new">Occasionally on blogs and forums you will see this referred to as the "server flow" or "server-directed flow" since the server is managing the login, and the client SDK never recieves the provider token.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The code needed to start this flow is covered in the authentication tutorial for each platform.</source>
          <target state="new">The code needed to start this flow is covered in the authentication tutorial for each platform.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>At the end of the flow, the client SDK has an App Service token, and the token is automatically attached to all requests to the backend.</source>
          <target state="new">At the end of the flow, the client SDK has an App Service token, and the token is automatically attached to all requests to the backend.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>How authentication with a provider SDK works</source>
          <target state="new">How authentication with a provider SDK works</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Working with a provider SDK allows the login experience to interact more tightly with the platform OS the app is running on.</source>
          <target state="new">Working with a provider SDK allows the login experience to interact more tightly with the platform OS the app is running on.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>This also gives you a provider token and some user information on the client, which makes it much easier to consume graph APIs and customize the user experience.</source>
          <target state="new">This also gives you a provider token and some user information on the client, which makes it much easier to consume graph APIs and customize the user experience.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Occasionally on blogs and forums you will see this referred to as the "client flow" or "client-directed flow" since code on the client is handling the login, and the client code has access to a provider token.</source>
          <target state="new">Occasionally on blogs and forums you will see this referred to as the "client flow" or "client-directed flow" since code on the client is handling the login, and the client code has access to a provider token.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Once a provider token is obtained, it needs to be sent to App Service for validation.</source>
          <target state="new">Once a provider token is obtained, it needs to be sent to App Service for validation.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>At the end of the flow, the client SDK has an App Service token, and the token is automatically attached to all requests to the backend.</source>
          <target state="new">At the end of the flow, the client SDK has an App Service token, and the token is automatically attached to all requests to the backend.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The developer can also keep a reference to the provider token if they so choose.</source>
          <target state="new">The developer can also keep a reference to the provider token if they so choose.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>How authorization works</source>
          <target state="new">How authorization works</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>App Service Authentication / Authorization exposes several choices for <bpt id="p1">**</bpt>Action to take when request is not authenticated<ept id="p1">**</ept>.</source>
          <target state="new">App Service Authentication / Authorization exposes several choices for <bpt id="p1">**</bpt>Action to take when request is not authenticated<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Before your code receives a given request, you can have App Service check to see if the request is authenticated and if not, reject it and attempt to have the user log in before trying again.</source>
          <target state="new">Before your code receives a given request, you can have App Service check to see if the request is authenticated and if not, reject it and attempt to have the user log in before trying again.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>One option is to have unauthenticated requests redirect to one of the identity providers.</source>
          <target state="new">One option is to have unauthenticated requests redirect to one of the identity providers.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>In a web browser, this would actually take the user to a new page.</source>
          <target state="new">In a web browser, this would actually take the user to a new page.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>However, your mobile client cannot be redirected in this way, and unauthenticated responses will receive an HTTP <bpt id="p1">_</bpt>401 Unauthorized<ept id="p1">_</ept> response.</source>
          <target state="new">However, your mobile client cannot be redirected in this way, and unauthenticated responses will receive an HTTP <bpt id="p1">_</bpt>401 Unauthorized<ept id="p1">_</ept> response.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Given this, the first request your client makes should always be to the login endpoint, and then you can make calls to any other APIs.</source>
          <target state="new">Given this, the first request your client makes should always be to the login endpoint, and then you can make calls to any other APIs.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>If you attempt to call another API before logging in, your client will receive an error.</source>
          <target state="new">If you attempt to call another API before logging in, your client will receive an error.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>If you wish to have more granular control over which endpoints require authentication, you can also pick "No action (allow request)" for unauthenticated requests.</source>
          <target state="new">If you wish to have more granular control over which endpoints require authentication, you can also pick "No action (allow request)" for unauthenticated requests.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>In this case, all authentication decisions are deferred to your application code.</source>
          <target state="new">In this case, all authentication decisions are deferred to your application code.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>This also allows you to allow access to specific users based on custom authorization rules.</source>
          <target state="new">This also allows you to allow access to specific users based on custom authorization rules.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Documentation</source>
          <target state="new">Documentation</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The following tutorials show how to add authentication to your mobile clients using App Service:</source>
          <target state="new">The following tutorials show how to add authentication to your mobile clients using App Service:</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Add authentication to your iOS app</source>
          <target state="new">Add authentication to your iOS app</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Add authentication to your Xamarin.iOS app</source>
          <target state="new">Add authentication to your Xamarin.iOS app</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Add authentication to your Xamarin.Android app</source>
          <target state="new">Add authentication to your Xamarin.Android app</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Add Authentication to your Windows app</source>
          <target state="new">Add Authentication to your Windows app</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The following tutorials show how to configure App Service to leverage different authentication providers:</source>
          <target state="new">The following tutorials show how to configure App Service to leverage different authentication providers:</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>How to configure your app to use Azure Active Directory login</source>
          <target state="new">How to configure your app to use Azure Active Directory login</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>How to configure your app to use Facebook login</source>
          <target state="new">How to configure your app to use Facebook login</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>How to configure your app to use Google login</source>
          <target state="new">How to configure your app to use Google login</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>How to configure your app to use Microsoft Account login</source>
          <target state="new">How to configure your app to use Microsoft Account login</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>How to configure your app to use Twitter login</source>
          <target state="new">How to configure your app to use Twitter login</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>If you wish to use an identity system other than the ones provided here, you can also leverage the <bpt id="p1">[</bpt>preview custom authentication support in the .NET server SDK<ept id="p1">](app-service-mobile-dotnet-backend-how-to-use-server-sdk.md#custom-auth)</ept>.</source>
          <target state="new">If you wish to use an identity system other than the ones provided here, you can also leverage the <bpt id="p1">[</bpt>preview custom authentication support in the .NET server SDK<ept id="p1">](app-service-mobile-dotnet-backend-how-to-use-server-sdk.md#custom-auth)</ept>.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>You can also find some more detail on the above flows in the <bpt id="p1">[</bpt>App Service authentication overview<ept id="p1">](app-service-authentication-overview.md)</ept>.</source>
          <target state="new">You can also find some more detail on the above flows in the <bpt id="p1">[</bpt>App Service authentication overview<ept id="p1">](app-service-authentication-overview.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>This topic also includes information about the App Service Gateway, which is no longer used in Mobile Apps, but the conceptual content still applies.</source>
          <target state="new">This topic also includes information about the App Service Gateway, which is no longer used in Mobile Apps, but the conceptual content still applies.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>