<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="nl-nl">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5a1ccb0c1af3c432fed444b0d756049922dd3936</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>App Model v2.0 Implicit Flow | Microsoft Azure</source>
          <target state="new">App Model v2.0 Implicit Flow | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Building web applications using Azure AD's implementation of the implicit flow for single page apps.</source>
          <target state="new">Building web applications using Azure AD's implementation of the implicit flow for single page apps.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>App model v2.0 preview: Protocols - Implicit Flow</source>
          <target state="new">App model v2.0 preview: Protocols - Implicit Flow</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>With the Azure AD app model v2.0, you can sign users into your single page apps with both personal and work/school accounts from Microsoft.</source>
          <target state="new">With the Azure AD app model v2.0, you can sign users into your single page apps with both personal and work/school accounts from Microsoft.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Single page and other JavaScript apps that run primarily in a browser face a few interesting challenges when it comes to authentication:</source>
          <target state="new">Single page and other JavaScript apps that run primarily in a browser face a few interesting challenges when it comes to authentication:</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The security characteristics of these apps are significantly different from traditional server based web applications.</source>
          <target state="new">The security characteristics of these apps are significantly different from traditional server based web applications.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Many authorization servers &amp; identity providers do not support CORS requests for well-documented security reasons.</source>
          <target state="new">Many authorization servers &amp; identity providers do not support CORS requests for well-documented security reasons.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Full page browser redirects away from the app become particularly invasive to the user experience.</source>
          <target state="new">Full page browser redirects away from the app become particularly invasive to the user experience.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For these applications (think: AngularJS, Ember.js, React.js, etc) Azure AD support the OAuth 2.0 Implicit Grant flow.</source>
          <target state="new">For these applications (think: AngularJS, Ember.js, React.js, etc) Azure AD support the OAuth 2.0 Implicit Grant flow.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The implicit flow is described in the <bpt id="p1">[</bpt>OAuth 2.0 Specification<ept id="p1">](http://tools.ietf.org/html/rfc6749#section-4.2)</ept>.</source>
          <target state="new">The implicit flow is described in the <bpt id="p1">[</bpt>OAuth 2.0 Specification<ept id="p1">](http://tools.ietf.org/html/rfc6749#section-4.2)</ept>.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Its primary benefit is that it allows the app to get tokens from Azure AD without performing a backend server credential exchange.</source>
          <target state="new">Its primary benefit is that it allows the app to get tokens from Azure AD without performing a backend server credential exchange.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This allows the app to sign in the user, maintain session, and get tokens to other web APIs all within the client JavaScript code.</source>
          <target state="new">This allows the app to sign in the user, maintain session, and get tokens to other web APIs all within the client JavaScript code.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>There are a few important security considerations to take into account when using the implicit flow - specifically around <bpt id="p1">[</bpt>client<ept id="p1">](http://tools.ietf.org/html/rfc6749#section-10.3)</ept> and <bpt id="p2">[</bpt>user impersonation<ept id="p2">](http://tools.ietf.org/html/rfc6749#section-10.3)</ept>.</source>
          <target state="new">There are a few important security considerations to take into account when using the implicit flow - specifically around <bpt id="p1">[</bpt>client<ept id="p1">](http://tools.ietf.org/html/rfc6749#section-10.3)</ept> and <bpt id="p2">[</bpt>user impersonation<ept id="p2">](http://tools.ietf.org/html/rfc6749#section-10.3)</ept>.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If you want to use the implicit flow and Azure AD to add authentication to your JavaScript app, we recommend you use our open source JavaScript library, <bpt id="p1">[</bpt>adal.js<ept id="p1">](https://github.com/AzureAD/azure-activedirectory-library-for-js)</ept>.</source>
          <target state="new">If you want to use the implicit flow and Azure AD to add authentication to your JavaScript app, we recommend you use our open source JavaScript library, <bpt id="p1">[</bpt>adal.js<ept id="p1">](https://github.com/AzureAD/azure-activedirectory-library-for-js)</ept>.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>There are few AngularJS tutorials available <bpt id="p1">[</bpt>here<ept id="p1">](active-directory-appmodel-v2-overview.md#getting-started)</ept> to help you get started.</source>
          <target state="new">There are few AngularJS tutorials available <bpt id="p1">[</bpt>here<ept id="p1">](active-directory-appmodel-v2-overview.md#getting-started)</ept> to help you get started.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>However, if you would prefer not to use a library in your single page app and send protocol messages yourself, follow the general steps below.</source>
          <target state="new">However, if you would prefer not to use a library in your single page app and send protocol messages yourself, follow the general steps below.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This information applies to the v2.0 app model public preview.</source>
          <target state="new">This information applies to the v2.0 app model public preview.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For instructions on how to integrate with the generally available Azure AD service, please refer to the <bpt id="p1">[</bpt>Azure Active Directory Developer Guide<ept id="p1">](active-directory-developers-guide.md)</ept>.</source>
          <target state="new">For instructions on how to integrate with the generally available Azure AD service, please refer to the <bpt id="p1">[</bpt>Azure Active Directory Developer Guide<ept id="p1">](active-directory-developers-guide.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Send the Sign-In Request</source>
          <target state="new">Send the Sign-In Request</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>To initially sign the user into your app, you can send an <bpt id="p1">[</bpt>OpenID Connect<ept id="p1">](active-directory-v2-protocols-oidc.md)</ept> authorization request and get an <ph id="ph1">`id_token`</ph> from the v2.0 endpoint:</source>
          <target state="new">To initially sign the user into your app, you can send an <bpt id="p1">[</bpt>OpenID Connect<ept id="p1">](active-directory-v2-protocols-oidc.md)</ept> authorization request and get an <ph id="ph1">`id_token`</ph> from the v2.0 endpoint:</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Parameter</source>
          <target state="new">Parameter</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="new">Description</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>client_id</source>
          <target state="new">client_id</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>required</source>
          <target state="new">required</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The Application Id that the registration portal (<bpt id="p1">[</bpt>apps.dev.microsoft.com<ept id="p1">](https://apps.dev.microsoft.com)</ept>) assigned your app.</source>
          <target state="new">The Application Id that the registration portal (<bpt id="p1">[</bpt>apps.dev.microsoft.com<ept id="p1">](https://apps.dev.microsoft.com)</ept>) assigned your app.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>response_type</source>
          <target state="new">response_type</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>required</source>
          <target state="new">required</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Must include <ph id="ph1">`id_token`</ph> for OpenID Connect sign-in.</source>
          <target state="new">Must include <ph id="ph1">`id_token`</ph> for OpenID Connect sign-in.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>It may also include other response_types, such as <ph id="ph1">`code`</ph>.</source>
          <target state="new">It may also include other response_types, such as <ph id="ph1">`code`</ph>.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>redirect_uri</source>
          <target state="new">redirect_uri</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>required</source>
          <target state="new">required</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The redirect_uri of your app, where authentication responses can be sent and received by your app.</source>
          <target state="new">The redirect_uri of your app, where authentication responses can be sent and received by your app.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>It must exactly match one of the redirect_uris you registered in the portal, except it must be url encoded.</source>
          <target state="new">It must exactly match one of the redirect_uris you registered in the portal, except it must be url encoded.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>scope</source>
          <target state="new">scope</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>required</source>
          <target state="new">required</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>A space-separated list of scopes.</source>
          <target state="new">A space-separated list of scopes.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>For OpenID Connect, it must include the scope <ph id="ph1">`openid`</ph>, which translates to the "Sign in &amp; Read Your Profile" permission in the consent UI.</source>
          <target state="new">For OpenID Connect, it must include the scope <ph id="ph1">`openid`</ph>, which translates to the "Sign in &amp; Read Your Profile" permission in the consent UI.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>You may also include other scopes in this request for requesting consent.</source>
          <target state="new">You may also include other scopes in this request for requesting consent.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>nonce</source>
          <target state="new">nonce</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>required</source>
          <target state="new">required</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A value included in the request, generated by the app, that will be included in the resulting id_token as a claim.</source>
          <target state="new">A value included in the request, generated by the app, that will be included in the resulting id_token as a claim.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The app can then verify this value to mitigate token replay attacks.</source>
          <target state="new">The app can then verify this value to mitigate token replay attacks.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The value is typically a randomized, unique string that can be used to identify the origin of the request.</source>
          <target state="new">The value is typically a randomized, unique string that can be used to identify the origin of the request.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>response_mode</source>
          <target state="new">response_mode</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>recommended</source>
          <target state="new">recommended</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Specifies the method that should be used to send the resulting authorization_code back to your app.</source>
          <target state="new">Specifies the method that should be used to send the resulting authorization_code back to your app.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Can be one of 'query', 'form_post', or 'fragment'.</source>
          <target state="new">Can be one of 'query', 'form_post', or 'fragment'.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>state</source>
          <target state="new">state</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>recommended</source>
          <target state="new">recommended</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>A value included in the request that will also be returned in the token response.</source>
          <target state="new">A value included in the request that will also be returned in the token response.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>It can be a string of any content that you wish.</source>
          <target state="new">It can be a string of any content that you wish.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>A randomly generated unique value is typically used for preventing cross-site request forgery attacks.</source>
          <target state="new">A randomly generated unique value is typically used for preventing cross-site request forgery attacks.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The state is also used to encode information about the user's state in the app before the authentication request occurred, such as the page or view they were on.</source>
          <target state="new">The state is also used to encode information about the user's state in the app before the authentication request occurred, such as the page or view they were on.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>prompt</source>
          <target state="new">prompt</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>optional</source>
          <target state="new">optional</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Indicates the type of user interaction that is required.</source>
          <target state="new">Indicates the type of user interaction that is required.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The only valid values at this time are 'login', 'none', and 'consent'.</source>
          <target state="new">The only valid values at this time are 'login', 'none', and 'consent'.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`prompt=login`</ph> will force the user to enter their credentials on that request, negating single-sign on.</source>
          <target state="new"><ph id="ph1">`prompt=login`</ph> will force the user to enter their credentials on that request, negating single-sign on.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`prompt=none`</ph> is the opposite - it will ensure that the user is not presented with any interactive prompt whatsoever.</source>
          <target state="new"><ph id="ph1">`prompt=none`</ph> is the opposite - it will ensure that the user is not presented with any interactive prompt whatsoever.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>If the request cannot be completed silently via single-sign on, the v2.0 endpoint will return an error.</source>
          <target state="new">If the request cannot be completed silently via single-sign on, the v2.0 endpoint will return an error.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`prompt=consent`</ph> will trigger the OAuth consent dialog after the user signs in, asking the user to grant permissions to the app.</source>
          <target state="new"><ph id="ph1">`prompt=consent`</ph> will trigger the OAuth consent dialog after the user signs in, asking the user to grant permissions to the app.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>login_hint</source>
          <target state="new">login_hint</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>optional</source>
          <target state="new">optional</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Can be used to pre-fill the username/email address field of the sign in page for the user.</source>
          <target state="new">Can be used to pre-fill the username/email address field of the sign in page for the user.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>At this point, the user will be asked to enter their credentials and complete the authentication.</source>
          <target state="new">At this point, the user will be asked to enter their credentials and complete the authentication.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The v2.0 endpoint will also ensure that the user has consented to the permissions indicated in the <ph id="ph1">`scope`</ph> query parameter.</source>
          <target state="new">The v2.0 endpoint will also ensure that the user has consented to the permissions indicated in the <ph id="ph1">`scope`</ph> query parameter.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>If the user has not consented to any of those permissions, it will ask the user to consent to the required permissions.</source>
          <target state="new">If the user has not consented to any of those permissions, it will ask the user to consent to the required permissions.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Details of <bpt id="p1">[</bpt>permissions, consent, and multi-tenant apps are provided here<ept id="p1">](active-directory-v2-scopes.md)</ept>.</source>
          <target state="new">Details of <bpt id="p1">[</bpt>permissions, consent, and multi-tenant apps are provided here<ept id="p1">](active-directory-v2-scopes.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Once the user authenticates and grants consent, the v2.0 endpoint will return a response to your app at the indicated <ph id="ph1">`redirect_uri`</ph>, using the method specified in the <ph id="ph2">`response_mode`</ph> parameter.</source>
          <target state="new">Once the user authenticates and grants consent, the v2.0 endpoint will return a response to your app at the indicated <ph id="ph1">`redirect_uri`</ph>, using the method specified in the <ph id="ph2">`response_mode`</ph> parameter.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>A successful response using <ph id="ph1">`response_mode=fragment`</ph> looks like:</source>
          <target state="new">A successful response using <ph id="ph1">`response_mode=fragment`</ph> looks like:</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Parameter</source>
          <target state="new">Parameter</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="new">Description</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>id_token</source>
          <target state="new">id_token</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The id_token that the  app requested.</source>
          <target state="new">The id_token that the  app requested.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>You can use the id_token to verify the user's identity and begin a session with the user.</source>
          <target state="new">You can use the id_token to verify the user's identity and begin a session with the user.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>More details on id_tokens and their contents is included in the <bpt id="p1">[</bpt>v2.0 endpoint token reference<ept id="p1">](active-directory-v2-tokens.md)</ept>.</source>
          <target state="new">More details on id_tokens and their contents is included in the <bpt id="p1">[</bpt>v2.0 endpoint token reference<ept id="p1">](active-directory-v2-tokens.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>session_state</source>
          <target state="new">session_state</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>A unique value that identifies the current user session.</source>
          <target state="new">A unique value that identifies the current user session.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>This value is a GUID, but should be treated as an opaque value that is passed without examination.</source>
          <target state="new">This value is a GUID, but should be treated as an opaque value that is passed without examination.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>state</source>
          <target state="new">state</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>If a state parameter is included in the request, the same value should appear in the response.</source>
          <target state="new">If a state parameter is included in the request, the same value should appear in the response.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The  app should verify that the state values in the request and response are identical.</source>
          <target state="new">The  app should verify that the state values in the request and response are identical.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>id_token_expires_in</source>
          <target state="new">id_token_expires_in</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>How long the id token is valid (in seconds).</source>
          <target state="new">How long the id token is valid (in seconds).</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Error responses may also be sent to the <ph id="ph1">`redirect_uri`</ph> so the app can handle them appropriately:</source>
          <target state="new">Error responses may also be sent to the <ph id="ph1">`redirect_uri`</ph> so the app can handle them appropriately:</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Parameter</source>
          <target state="new">Parameter</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="new">Description</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>error</source>
          <target state="new">error</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>An error code string that can be used to classify types of errors that occur, and can be used to react to errors.</source>
          <target state="new">An error code string that can be used to classify types of errors that occur, and can be used to react to errors.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>error_description</source>
          <target state="new">error_description</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>A specific error message that can help a developer identify the root cause of an authentication error.</source>
          <target state="new">A specific error message that can help a developer identify the root cause of an authentication error.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Validate the id_token</source>
          <target state="new">Validate the id_token</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Just receiving an id_token is not sufficient to authenticate the user; you must validate the id_token's signature and verify the claims in the token per your app's requirements.</source>
          <target state="new">Just receiving an id_token is not sufficient to authenticate the user; you must validate the id_token's signature and verify the claims in the token per your app's requirements.</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The v2.0 endpoint uses <bpt id="p1">[</bpt>JSON Web Tokens (JWTs)<ept id="p1">](http://self-issued.info/docs/draft-ietf-oauth-json-web-token.html)</ept> and public key cryptography to sign tokens and verify that they are valid.</source>
          <target state="new">The v2.0 endpoint uses <bpt id="p1">[</bpt>JSON Web Tokens (JWTs)<ept id="p1">](http://self-issued.info/docs/draft-ietf-oauth-json-web-token.html)</ept> and public key cryptography to sign tokens and verify that they are valid.</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The v2.0 app model has an OpenID Connect metadata endpoint, which allows an app to fetch information about the v2.0 app model at runtime.</source>
          <target state="new">The v2.0 app model has an OpenID Connect metadata endpoint, which allows an app to fetch information about the v2.0 app model at runtime.</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>This information includes endpoints, token contents, and token signing keys.</source>
          <target state="new">This information includes endpoints, token contents, and token signing keys.</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The metadata endpoint contains a JSON document located at:</source>
          <target state="new">The metadata endpoint contains a JSON document located at:</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>One of the properties of this configuration document is the <ph id="ph1">`jwks_uri`</ph>, whose value for the v2.0 app model will be:</source>
          <target state="new">One of the properties of this configuration document is the <ph id="ph1">`jwks_uri`</ph>, whose value for the v2.0 app model will be:</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`https://login.microsoftonline.com/common/discovery/v2.0/keys`</ph>.</source>
          <target state="new"><ph id="ph1">`https://login.microsoftonline.com/common/discovery/v2.0/keys`</ph>.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>You can use the RSA256 public keys located at this endpoint to validate the signature of the id_token.</source>
          <target state="new">You can use the RSA256 public keys located at this endpoint to validate the signature of the id_token.</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>There are multiple keys listed at this endpoint at any given point in time, each identified by a <ph id="ph1">`kid`</ph>.</source>
          <target state="new">There are multiple keys listed at this endpoint at any given point in time, each identified by a <ph id="ph1">`kid`</ph>.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The header of the id_token also contains a <ph id="ph1">`kid`</ph> claim, which indicates which of these keys was used to sign the id_token.</source>
          <target state="new">The header of the id_token also contains a <ph id="ph1">`kid`</ph> claim, which indicates which of these keys was used to sign the id_token.</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>See the <bpt id="p1">[</bpt>v2.0 app model token reference<ept id="p1">](active-directory-v2-tokens.md)</ept> for more information, including <bpt id="p2">[</bpt>Validating Tokens<ept id="p2">](active-directory-v2-tokens.md#validating-tokens)</ept> and <bpt id="p3">[</bpt>Important Information About Signing Key Rollover<ept id="p3">](active-directory-v2-tokens.md#validating-tokens)</ept>.</source>
          <target state="new">See the <bpt id="p1">[</bpt>v2.0 app model token reference<ept id="p1">](active-directory-v2-tokens.md)</ept> for more information, including <bpt id="p2">[</bpt>Validating Tokens<ept id="p2">](active-directory-v2-tokens.md#validating-tokens)</ept> and <bpt id="p3">[</bpt>Important Information About Signing Key Rollover<ept id="p3">](active-directory-v2-tokens.md#validating-tokens)</ept>.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>You can choose to validate the <ph id="ph1">`id_token`</ph> in the client code, but a common practice is to send the <ph id="ph2">`id_token`</ph> to a backend server and perform the validation there.</source>
          <target state="new">You can choose to validate the <ph id="ph1">`id_token`</ph> in the client code, but a common practice is to send the <ph id="ph2">`id_token`</ph> to a backend server and perform the validation there.</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>There are many libraries available for parsing and validating JWT tokens.</source>
          <target state="new">There are many libraries available for parsing and validating JWT tokens.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Once you've validated the signature of the id_token, there are a few claims you will need to verify:</source>
          <target state="new">Once you've validated the signature of the id_token, there are a few claims you will need to verify:</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>You should validate the <ph id="ph1">`nonce`</ph> claim to prevent token replay attacks.</source>
          <target state="new">You should validate the <ph id="ph1">`nonce`</ph> claim to prevent token replay attacks.</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Its value should be what you specified in the sign-in request.</source>
          <target state="new">Its value should be what you specified in the sign-in request.</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>You should validate the <ph id="ph1">`aud`</ph> claim to ensure the id_token was issued for your app.</source>
          <target state="new">You should validate the <ph id="ph1">`aud`</ph> claim to ensure the id_token was issued for your app.</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Its value should be the <ph id="ph1">`client_id`</ph> of your app.</source>
          <target state="new">Its value should be the <ph id="ph1">`client_id`</ph> of your app.</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>You should validate the <ph id="ph1">`iat`</ph> and <ph id="ph2">`exp`</ph> claims to ensure the id_token has not expired.</source>
          <target state="new">You should validate the <ph id="ph1">`iat`</ph> and <ph id="ph2">`exp`</ph> claims to ensure the id_token has not expired.</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>You may also wish to validate additional claims depending on your scenario.</source>
          <target state="new">You may also wish to validate additional claims depending on your scenario.</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Some common validations include:</source>
          <target state="new">Some common validations include:</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Ensuring the user/organization has signed up for the app.</source>
          <target state="new">Ensuring the user/organization has signed up for the app.</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Ensuring the user has proper authorization/privileges</source>
          <target state="new">Ensuring the user has proper authorization/privileges</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Ensuring a certain strength of authentication has occurred, such as multi-factor authentication.</source>
          <target state="new">Ensuring a certain strength of authentication has occurred, such as multi-factor authentication.</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>For more information on the claims in an id_token, see the <bpt id="p1">[</bpt>v2.0 app model token reference<ept id="p1">](active-directory-v2-tokens.md)</ept>.</source>
          <target state="new">For more information on the claims in an id_token, see the <bpt id="p1">[</bpt>v2.0 app model token reference<ept id="p1">](active-directory-v2-tokens.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Once you have completely validated the id_token, you can begin a session with the user and use the claims in the id_token to obtain information about the user in your app.</source>
          <target state="new">Once you have completely validated the id_token, you can begin a session with the user and use the claims in the id_token to obtain information about the user in your app.</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>This information can be used for display, records, authorizations, etc.</source>
          <target state="new">This information can be used for display, records, authorizations, etc.</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Get Access Tokens</source>
          <target state="new">Get Access Tokens</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Now that you've signed the user into your single page app, you can get access tokens for calling web APIs secured by Azure AD, such as the <bpt id="p1">[</bpt>Microsoft Graph<ept id="p1">](https://graph.microsoft.io)</ept>.</source>
          <target state="new">Now that you've signed the user into your single page app, you can get access tokens for calling web APIs secured by Azure AD, such as the <bpt id="p1">[</bpt>Microsoft Graph<ept id="p1">](https://graph.microsoft.io)</ept>.</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>In the normal OpenID Connect/OAuth flow, you would do this by making a request to the v2.0 <ph id="ph1">`/token`</ph> endpoint.</source>
          <target state="new">In the normal OpenID Connect/OAuth flow, you would do this by making a request to the v2.0 <ph id="ph1">`/token`</ph> endpoint.</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>However, the v2.0 endpoint does not support CORS requests, so making AJAX calls to get and refresh tokens is out of the question.</source>
          <target state="new">However, the v2.0 endpoint does not support CORS requests, so making AJAX calls to get and refresh tokens is out of the question.</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Instead, you can use the implicit flow in a hidden iframe to get new tokens for other web APIs:</source>
          <target state="new">Instead, you can use the implicit flow in a hidden iframe to get new tokens for other web APIs:</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Parameter</source>
          <target state="new">Parameter</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="new">Description</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>client_id</source>
          <target state="new">client_id</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>required</source>
          <target state="new">required</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The Application Id that the registration portal (<bpt id="p1">[</bpt>apps.dev.microsoft.com<ept id="p1">](https://apps.dev.microsoft.com)</ept>) assigned your app.</source>
          <target state="new">The Application Id that the registration portal (<bpt id="p1">[</bpt>apps.dev.microsoft.com<ept id="p1">](https://apps.dev.microsoft.com)</ept>) assigned your app.</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>response_type</source>
          <target state="new">response_type</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>required</source>
          <target state="new">required</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Must be <ph id="ph1">`token`</ph>for the implicit flow.</source>
          <target state="new">Must be <ph id="ph1">`token`</ph>for the implicit flow.</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>redirect_uri</source>
          <target state="new">redirect_uri</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>required</source>
          <target state="new">required</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The redirect_uri of your app, where authentication responses can be sent and received by your app.</source>
          <target state="new">The redirect_uri of your app, where authentication responses can be sent and received by your app.</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>It must exactly match one of the redirect_uris you registered in the portal, except it must be url encoded.</source>
          <target state="new">It must exactly match one of the redirect_uris you registered in the portal, except it must be url encoded.</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>scope</source>
          <target state="new">scope</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>required</source>
          <target state="new">required</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>A space-separated list of scopes you need in the access token.</source>
          <target state="new">A space-separated list of scopes you need in the access token.</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>response_mode</source>
          <target state="new">response_mode</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>recommended</source>
          <target state="new">recommended</target>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Specifies the method that should be used to send the resulting authorization_code back to your app.</source>
          <target state="new">Specifies the method that should be used to send the resulting authorization_code back to your app.</target>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Can be one of 'query', 'form_post', or 'fragment'.</source>
          <target state="new">Can be one of 'query', 'form_post', or 'fragment'.</target>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>state</source>
          <target state="new">state</target>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>recommended</source>
          <target state="new">recommended</target>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>A value included in the request that will also be returned in the token response.</source>
          <target state="new">A value included in the request that will also be returned in the token response.</target>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>It can be a string of any content that you wish.</source>
          <target state="new">It can be a string of any content that you wish.</target>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>A randomly generated unique value is typically used for preventing cross-site request forgery attacks.</source>
          <target state="new">A randomly generated unique value is typically used for preventing cross-site request forgery attacks.</target>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>The state is also used to encode information about the user's state in the app before the authentication request occurred, such as the page or view they were on.</source>
          <target state="new">The state is also used to encode information about the user's state in the app before the authentication request occurred, such as the page or view they were on.</target>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>prompt</source>
          <target state="new">prompt</target>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>required</source>
          <target state="new">required</target>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Here we use <ph id="ph1">`prompt=none`</ph> to specify that Azure AD should not present any UI.</source>
          <target state="new">Here we use <ph id="ph1">`prompt=none`</ph> to specify that Azure AD should not present any UI.</target>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Because this request takes place in a hidden iframe, you want to ensure that if the token cannot be silently acquired, Azure AD should return an error instead of asking the user to sign in.</source>
          <target state="new">Because this request takes place in a hidden iframe, you want to ensure that if the token cannot be silently acquired, Azure AD should return an error instead of asking the user to sign in.</target>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>login_hint</source>
          <target state="new">login_hint</target>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>required</source>
          <target state="new">required</target>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Required for silent authentication.</source>
          <target state="new">Required for silent authentication.</target>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>This hint helps Azure AD to distinguish between multiple accounts if the user has an active session with more than one account.</source>
          <target state="new">This hint helps Azure AD to distinguish between multiple accounts if the user has an active session with more than one account.</target>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>The value provided here can be the exact value that you receive in the <ph id="ph1">`preferred_uesrname`</ph> claim in the id_token.</source>
          <target state="new">The value provided here can be the exact value that you receive in the <ph id="ph1">`preferred_uesrname`</ph> claim in the id_token.</target>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>domain_hint</source>
          <target state="new">domain_hint</target>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>required</source>
          <target state="new">required</target>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Required for silent authentication.</source>
          <target state="new">Required for silent authentication.</target>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>For this flow, the domain_hint can be one of two values: <ph id="ph1">`consumers`</ph> or <ph id="ph2">`organizations`</ph>.</source>
          <target state="new">For this flow, the domain_hint can be one of two values: <ph id="ph1">`consumers`</ph> or <ph id="ph2">`organizations`</ph>.</target>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>If the value of the <ph id="ph1">`tid`</ph> claim in the <ph id="ph2">`id_token`</ph> you received was exactly '9188040d-6c67-4c5b-b112-36a304b66dad', use <ph id="ph3">`consumers`</ph> as the domain_hint.</source>
          <target state="new">If the value of the <ph id="ph1">`tid`</ph> claim in the <ph id="ph2">`id_token`</ph> you received was exactly '9188040d-6c67-4c5b-b112-36a304b66dad', use <ph id="ph3">`consumers`</ph> as the domain_hint.</target>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Otherwise, use <ph id="ph1">`organizations`</ph>.</source>
          <target state="new">Otherwise, use <ph id="ph1">`organizations`</ph>.</target>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Thanks to the <ph id="ph1">`prompt=none`</ph> parameter, this request will either succeed or fail immediately and return to your application.</source>
          <target state="new">Thanks to the <ph id="ph1">`prompt=none`</ph> parameter, this request will either succeed or fail immediately and return to your application.</target>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>A successful response will be sent to your app at the indicated <ph id="ph1">`redirect_uri`</ph>, using the method specified in the <ph id="ph2">`response_mode`</ph> parameter.</source>
          <target state="new">A successful response will be sent to your app at the indicated <ph id="ph1">`redirect_uri`</ph>, using the method specified in the <ph id="ph2">`response_mode`</ph> parameter.</target>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>A successful response using <ph id="ph1">`response_mode=fragment`</ph> looks like:</source>
          <target state="new">A successful response using <ph id="ph1">`response_mode=fragment`</ph> looks like:</target>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Parameter</source>
          <target state="new">Parameter</target>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="new">Description</target>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>access_token</source>
          <target state="new">access_token</target>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The token that the app requested.</source>
          <target state="new">The token that the app requested.</target>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>session_state</source>
          <target state="new">session_state</target>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>A unique value that identifies the current user session.</source>
          <target state="new">A unique value that identifies the current user session.</target>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>This value is a GUID, but should be treated as an opaque value that is passed without examination.</source>
          <target state="new">This value is a GUID, but should be treated as an opaque value that is passed without examination.</target>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>state</source>
          <target state="new">state</target>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>If a state parameter is included in the request, the same value should appear in the response.</source>
          <target state="new">If a state parameter is included in the request, the same value should appear in the response.</target>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>The  app should verify that the state values in the request and response are identical.</source>
          <target state="new">The  app should verify that the state values in the request and response are identical.</target>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>expires_in</source>
          <target state="new">expires_in</target>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>How long the access token is valid (in seconds).</source>
          <target state="new">How long the access token is valid (in seconds).</target>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>scope</source>
          <target state="new">scope</target>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>The scopes that the access token is valid for.</source>
          <target state="new">The scopes that the access token is valid for.</target>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Error responses may also be sent to the <ph id="ph1">`redirect_uri`</ph> so the app can handle them appropriately.</source>
          <target state="new">Error responses may also be sent to the <ph id="ph1">`redirect_uri`</ph> so the app can handle them appropriately.</target>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>In the case of <ph id="ph1">`prompt=none`</ph>, an expected error will be:</source>
          <target state="new">In the case of <ph id="ph1">`prompt=none`</ph>, an expected error will be:</target>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Parameter</source>
          <target state="new">Parameter</target>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="new">Description</target>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>error</source>
          <target state="new">error</target>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>An error code string that can be used to classify types of errors that occur, and can be used to react to errors.</source>
          <target state="new">An error code string that can be used to classify types of errors that occur, and can be used to react to errors.</target>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>error_description</source>
          <target state="new">error_description</target>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>A specific error message that can help a developer identify the root cause of an authentication error.</source>
          <target state="new">A specific error message that can help a developer identify the root cause of an authentication error.</target>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>If you receive this error in the iframe request, the user must interactively sign in again to retrieve a new token.</source>
          <target state="new">If you receive this error in the iframe request, the user must interactively sign in again to retrieve a new token.</target>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>You can choose to handle this case in whatever way makes sense for your application.</source>
          <target state="new">You can choose to handle this case in whatever way makes sense for your application.</target>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Refreshing Tokens</source>
          <target state="new">Refreshing Tokens</target>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Both <ph id="ph1">`id_token`</ph>s and <ph id="ph2">`access_token`</ph>s will expire after a short period of time, so your app must be prepared to refresh these tokens periodically.</source>
          <target state="new">Both <ph id="ph1">`id_token`</ph>s and <ph id="ph2">`access_token`</ph>s will expire after a short period of time, so your app must be prepared to refresh these tokens periodically.</target>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>To refresh either type of token, you can perform the same hidden iframe request from above using the <ph id="ph1">`prompt=none`</ph> parameter to control Azure AD's behavior.</source>
          <target state="new">To refresh either type of token, you can perform the same hidden iframe request from above using the <ph id="ph1">`prompt=none`</ph> parameter to control Azure AD's behavior.</target>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>If you want to receive a new <ph id="ph1">`id_token`</ph>, be sure to use <ph id="ph2">`response_type=id_token`</ph> and <ph id="ph3">`scope=openid`</ph>, as well as a <ph id="ph4">`nonce`</ph> parameter.</source>
          <target state="new">If you want to receive a new <ph id="ph1">`id_token`</ph>, be sure to use <ph id="ph2">`response_type=id_token`</ph> and <ph id="ph3">`scope=openid`</ph>, as well as a <ph id="ph4">`nonce`</ph> parameter.</target>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Send a Sign Out Request</source>
          <target state="new">Send a Sign Out Request</target>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>The OpenIdConnect <ph id="ph1">`end_session_endpoint`</ph> is not currently supported by the v2.0 app model preview.</source>
          <target state="new">The OpenIdConnect <ph id="ph1">`end_session_endpoint`</ph> is not currently supported by the v2.0 app model preview.</target>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>This means your app cannot send a request to the v2.0 endpoint to end a user's session and clear cookies set by the v2.0 endpoint.</source>
          <target state="new">This means your app cannot send a request to the v2.0 endpoint to end a user's session and clear cookies set by the v2.0 endpoint.</target>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>To sign a user out, your app can simply end its own session with the user, and leave the user's session with the v2.0 endpoint in-tact.</source>
          <target state="new">To sign a user out, your app can simply end its own session with the user, and leave the user's session with the v2.0 endpoint in-tact.</target>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The next time the user tries to sign in, they will see a "choose account" page, with their actively signed-in accounts listed.</source>
          <target state="new">The next time the user tries to sign in, they will see a "choose account" page, with their actively signed-in accounts listed.</target>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>On that page, the user can choose to sign out of any account, ending the session with the v2.0 endpoint.</source>
          <target state="new">On that page, the user can choose to sign out of any account, ending the session with the v2.0 endpoint.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>