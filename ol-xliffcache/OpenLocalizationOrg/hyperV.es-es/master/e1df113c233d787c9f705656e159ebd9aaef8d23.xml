{
  "nodes": [
    {
      "content": "Efficient list queries in Azure Batch | Microsoft Azure",
      "pos": [
        27,
        82
      ]
    },
    {
      "content": "Increase performance by reducing the amount of data that is returned when querying Azure Batch entities such as pools, jobs, tasks, and compute nodes.",
      "pos": [
        101,
        251
      ]
    },
    {
      "content": "Query the Azure Batch service efficiently",
      "pos": [
        564,
        605
      ]
    },
    {
      "pos": [
        607,
        819
      ],
      "content": "In this article, you will learn how to increase your Azure Batch application's performance by reducing the amount of data that is returned when you query the Batch service using the <bpt id=\"p1\">[</bpt>Batch .NET<ph id=\"ph1\">][</ph>api_net<ept id=\"p1\">]</ept> library."
    },
    {
      "content": "Azure Batch offers big-compute capabilities--and in a production environment, entities like jobs, tasks, and compute nodes can number in the thousands.",
      "pos": [
        821,
        972
      ]
    },
    {
      "content": "Obtaining information on these items can therefore generate a large amount of data that must be transferred from the service to your application on each query.",
      "pos": [
        973,
        1132
      ]
    },
    {
      "content": "By limiting the number of items and the type of information that is returned for each, you can increase the speed of your queries, and therefore the performance of your application.",
      "pos": [
        1133,
        1314
      ]
    },
    {
      "content": "Nearly every application using Azure Batch will perform some type of monitoring or other operation that queries the Batch service, often at regular intervals.",
      "pos": [
        1316,
        1474
      ]
    },
    {
      "content": "For example, to determine the capacity and status of a pool, you must query every node within the pool.",
      "pos": [
        1475,
        1578
      ]
    },
    {
      "content": "To determine whether any of a job's tasks are still queued, you must query every task within the job.",
      "pos": [
        1579,
        1680
      ]
    },
    {
      "content": "This article explains how to execute these types of queries in the most efficient way.",
      "pos": [
        1681,
        1767
      ]
    },
    {
      "pos": [
        1769,
        1907
      ],
      "content": "This <bpt id=\"p1\">[</bpt>Batch .NET<ph id=\"ph1\">][</ph>api_net<ept id=\"p1\">]</ept> API code snippet retrieves every task that is associated with a job, along with <bpt id=\"p2\">*</bpt>all<ept id=\"p2\">*</ept> of the tasks' properties:"
    },
    {
      "content": "A much more efficient list query can be performed, however.",
      "pos": [
        2085,
        2144
      ]
    },
    {
      "content": "You do this by supplying an <bpt id=\"p1\">[</bpt>ODATADetailLevel<ph id=\"ph1\">][</ph>odata<ept id=\"p1\">]</ept> object to the <bpt id=\"p2\">[</bpt>JobOperations.ListTasks<ph id=\"ph2\">][</ph>net_list_tasks<ept id=\"p2\">]</ept> method.",
      "pos": [
        2145,
        2262
      ]
    },
    {
      "content": "This snippet returns only the ID, command line, and compute node information properties of completed tasks:",
      "pos": [
        2263,
        2370
      ]
    },
    {
      "content": "In the above example scenario, if there are thousands of tasks in the job, the results from the second query will typically be returned much quicker than the first.",
      "pos": [
        2796,
        2960
      ]
    },
    {
      "content": "More information about using ODATADetailLevel when you list items with the Batch .NET API is included below.",
      "pos": [
        2961,
        3069
      ]
    },
    {
      "pos": [
        3073,
        3419
      ],
      "content": "[AZURE.IMPORTANT]\nWe highly recommend that you *always* supply an ODATADetailLevel object to your .NET API list calls to ensure maximum efficiency and performance of your application. By specifying a detail level, you can help to lower Batch service response times, improve network utilization, and minimize memory usage by client applications.",
      "leadings": [
        "",
        "> "
      ],
      "nodes": [
        {
          "content": "We highly recommend that you *always* supply an ODATADetailLevel object to your .NET API list calls to ensure maximum efficiency and performance of your application. By specifying a detail level, you can help to lower Batch service response times, improve network utilization, and minimize memory usage by client applications.",
          "pos": [
            18,
            344
          ],
          "nodes": [
            {
              "content": "We highly recommend that you <bpt id=\"p1\">*</bpt>always<ept id=\"p1\">*</ept> supply an ODATADetailLevel object to your .NET API list calls to ensure maximum efficiency and performance of your application.",
              "pos": [
                0,
                165
              ]
            },
            {
              "content": "By specifying a detail level, you can help to lower Batch service response times, improve network utilization, and minimize memory usage by client applications.",
              "pos": [
                166,
                326
              ]
            }
          ]
        }
      ]
    },
    {
      "content": "Tools for efficient querying",
      "pos": [
        3424,
        3452
      ]
    },
    {
      "content": "The <bpt id=\"p1\">[</bpt>Batch .NET<ph id=\"ph1\">][</ph>api_net<ept id=\"p1\">]</ept> and <bpt id=\"p2\">[</bpt>Batch REST<ph id=\"ph2\">][</ph>api_rest<ept id=\"p2\">]</ept> APIs provide the ability to reduce both the number of items that are returned in a list, as well as the amount of information that is returned for each.",
      "pos": [
        3454,
        3659
      ]
    },
    {
      "content": "You do so by specifying <bpt id=\"p1\">**</bpt>filter<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>select<ept id=\"p2\">**</ept>, and <bpt id=\"p3\">**</bpt>expand strings<ept id=\"p3\">**</ept> when performing list queries.",
      "pos": [
        3660,
        3760
      ]
    },
    {
      "content": "Filter",
      "pos": [
        3766,
        3772
      ]
    },
    {
      "content": "The filter string is an expression that reduces the number of items that are returned.",
      "pos": [
        3773,
        3859
      ]
    },
    {
      "content": "For example, list only the running tasks for a job, or list only compute nodes that are ready to run tasks.",
      "pos": [
        3860,
        3967
      ]
    },
    {
      "content": "The filter string consists of one or more expressions, with an expression that consists of a property name, operator, and value.",
      "pos": [
        3971,
        4099
      ]
    },
    {
      "content": "The properties that can be specified are specific to each entity type that you query, as are the operators that are supported for each property.",
      "pos": [
        4100,
        4244
      ]
    },
    {
      "pos": [
        4247,
        4330
      ],
      "content": "Multiple expressions can be combined by using the logical operators <ph id=\"ph1\">`and`</ph> and <ph id=\"ph2\">`or`</ph>."
    },
    {
      "pos": [
        4333,
        4455
      ],
      "content": "This example filter string lists only the running \"render\" tasks: <ph id=\"ph1\">`(state eq 'running') and startswith(id, 'renderTask')`</ph>."
    },
    {
      "content": "Select",
      "pos": [
        4461,
        4467
      ]
    },
    {
      "content": "The select string limits the property values that are returned for each item.",
      "pos": [
        4468,
        4545
      ]
    },
    {
      "content": "You specify a list of property names, and only those property values are returned for the items in the query results.",
      "pos": [
        4546,
        4663
      ]
    },
    {
      "content": "The select string consists of a comma-separated list of property names.",
      "pos": [
        4667,
        4738
      ]
    },
    {
      "content": "You can specify any of the properties for the entity type you are querying.",
      "pos": [
        4739,
        4814
      ]
    },
    {
      "pos": [
        4817,
        4953
      ],
      "content": "This example select string specifies that only three property values should be returned for each task: <ph id=\"ph1\">`id, state, stateTransitionTime`</ph>."
    },
    {
      "content": "Expand",
      "pos": [
        4959,
        4965
      ]
    },
    {
      "content": "The expand string reduces the number of API calls that are required to obtain certain information.",
      "pos": [
        4966,
        5064
      ]
    },
    {
      "content": "When you use an expand string, more information about each item can be obtained with a single API call.",
      "pos": [
        5065,
        5168
      ]
    },
    {
      "content": "Rather than first obtaining the list of entities, then requesting information for each item in the list, you use an expand string to obtain the same information in a single API call.",
      "pos": [
        5169,
        5351
      ]
    },
    {
      "content": "Less API calls means better performance.",
      "pos": [
        5352,
        5392
      ]
    },
    {
      "content": "Similar to the select string, the expand string controls whether certain data is included in list query results.",
      "pos": [
        5396,
        5508
      ]
    },
    {
      "content": "The expand string is only supported when it is used in listing jobs, job schedules, tasks, and pools.",
      "pos": [
        5511,
        5612
      ]
    },
    {
      "content": "Currently, it only supports statistics information.",
      "pos": [
        5613,
        5664
      ]
    },
    {
      "content": "When all properties are required and no select string is specified, the expand string <bpt id=\"p1\">*</bpt>must<ept id=\"p1\">*</ept> be used to get statistics information.",
      "pos": [
        5667,
        5798
      ]
    },
    {
      "content": "If a select string is used to obtain a subset of properties, then <ph id=\"ph1\">`stats`</ph> can be specified in the select string, and the expand string does not need to be specified.",
      "pos": [
        5799,
        5964
      ]
    },
    {
      "pos": [
        5967,
        6086
      ],
      "content": "This example expand string specifies that statistics information should be returned for each item in the list: <ph id=\"ph1\">`stats`</ph>."
    },
    {
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> When constructing any of the three query string types (filter, select, and expand), you must ensure that the property names and case match that of their REST API element counterparts.",
      "pos": [
        6090,
        6286
      ]
    },
    {
      "content": "For example, when working with the .NET <bpt id=\"p1\">[</bpt>CloudTask<ept id=\"p1\">](https://msdn.microsoft.com/library/azure/microsoft.azure.batch.cloudtask)</ept> class, you must specify <bpt id=\"p2\">**</bpt>state<ept id=\"p2\">**</ept> instead of <bpt id=\"p3\">**</bpt>State<ept id=\"p3\">**</ept>, even though the .NET property is <bpt id=\"p4\">[</bpt>CloudTask.State<ept id=\"p4\">](https://msdn.microsoft.com/library/azure/microsoft.azure.batch.cloudtask.state)</ept>.",
      "pos": [
        6287,
        6600
      ]
    },
    {
      "content": "See the tables below for property mappings between the .NET and REST APIs.",
      "pos": [
        6601,
        6675
      ]
    },
    {
      "content": "Filter, select, and expand string specifications",
      "pos": [
        6681,
        6729
      ]
    },
    {
      "pos": [
        6733,
        6923
      ],
      "content": "Properties specified in filter, select, and expand strings equate to the property names as they appear in the <bpt id=\"p1\">[</bpt>Batch REST<ph id=\"ph1\">][</ph>api_rest<ept id=\"p1\">]</ept> API--even when you use the <bpt id=\"p2\">[</bpt>Batch .NET<ph id=\"ph2\">][</ph>api_net<ept id=\"p2\">]</ept> library."
    },
    {
      "content": "All property names are case sensitive, but property values are case insensitive.",
      "pos": [
        6926,
        7006
      ]
    },
    {
      "pos": [
        7009,
        7091
      ],
      "content": "Date/time strings can be one of two formats, and must be preceded with <ph id=\"ph1\">`DateTime`</ph>."
    },
    {
      "pos": [
        7096,
        7169
      ],
      "content": "W3C-DTF format example: <ph id=\"ph1\">`creationTime gt DateTime'2011-05-08T08:49:37Z'`</ph>."
    },
    {
      "pos": [
        7174,
        7257
      ],
      "content": "RFC 1123 format example: <ph id=\"ph1\">`creationTime gt DateTime'Sun, 08 May 2011 08:49:37 GMT'`</ph>."
    },
    {
      "pos": [
        7260,
        7305
      ],
      "content": "Boolean strings are either <ph id=\"ph1\">`true`</ph> or <ph id=\"ph2\">`false`</ph>."
    },
    {
      "pos": [
        7308,
        7397
      ],
      "content": "If an invalid property or operator is specified, a <ph id=\"ph1\">`400 (Bad Request)`</ph> error will result."
    },
    {
      "content": "Efficient querying in Batch .NET",
      "pos": [
        7402,
        7434
      ]
    },
    {
      "content": "Within the <bpt id=\"p1\">[</bpt>Batch .NET<ph id=\"ph1\">][</ph>api_net<ept id=\"p1\">]</ept> API, the <bpt id=\"p2\">[</bpt>ODATADetailLevel<ph id=\"ph2\">][</ph>odata<ept id=\"p2\">]</ept> class is used for supplying filter, select, and expand strings to list operations.",
      "pos": [
        7436,
        7586
      ]
    },
    {
      "content": "The ODataDetailLevel class has three public string properties that can be specified in the constructor, or set directly on the object.",
      "pos": [
        7587,
        7721
      ]
    },
    {
      "content": "You then pass the ODataDetailLevel object as a parameter to the various list operations such as <bpt id=\"p1\">[</bpt>ListPools<ph id=\"ph1\">][</ph>net_list_pools<ept id=\"p1\">]</ept>, <bpt id=\"p2\">[</bpt>ListJobs<ph id=\"ph2\">][</ph>net_list_jobs<ept id=\"p2\">]</ept>, and <bpt id=\"p3\">[</bpt>ListTasks<ph id=\"ph3\">][</ph>net_list_tasks<ept id=\"p3\">]</ept>.",
      "pos": [
        7722,
        7906
      ]
    },
    {
      "pos": [
        7910,
        8001
      ],
      "content": "<bpt id=\"p1\">[</bpt>ODATADetailLevel.FilterClause<ph id=\"ph1\">][</ph>odata_filter<ept id=\"p1\">]</ept>: Limit the number of items that are returned."
    },
    {
      "pos": [
        8004,
        8109
      ],
      "content": "<bpt id=\"p1\">[</bpt>ODATADetailLevel.SelectClause<ph id=\"ph1\">][</ph>odata_select<ept id=\"p1\">]</ept>: Specify which property values are returned with each item."
    },
    {
      "pos": [
        8112,
        8248
      ],
      "content": "<bpt id=\"p1\">[</bpt>ODATADetailLevel.ExpandClause<ph id=\"ph1\">][</ph>odata_expand<ept id=\"p1\">]</ept>: Retrieve data for all items in a single API call instead of separate calls for each item."
    },
    {
      "content": "The following code snippet uses the Batch .NET API to efficiently query the Batch service for the statistics of a specific set of pools.",
      "pos": [
        8250,
        8386
      ]
    },
    {
      "content": "In this scenario, the Batch user has both test and production pools.",
      "pos": [
        8387,
        8455
      ]
    },
    {
      "content": "The test pool IDs are prefixed with \"test\", and the production pool IDs are prefixed with \"prod\".",
      "pos": [
        8456,
        8553
      ]
    },
    {
      "content": "In the snippet, <bpt id=\"p1\">*</bpt>myBatchClient<ept id=\"p1\">*</ept> is a properly initialized instance of the <bpt id=\"p2\">[</bpt>BatchClient<ept id=\"p2\">](https://msdn.microsoft.com/library/azure/microsoft.azure.batch.batchclient)</ept> class.",
      "pos": [
        8554,
        8724
      ]
    },
    {
      "pos": [
        9916,
        10237
      ],
      "content": "<ph id=\"ph1\">[AZURE.TIP]</ph> An instance of <bpt id=\"p1\">[</bpt>ODATADetailLevel<ph id=\"ph2\">][</ph>odata<ept id=\"p1\">]</ept> that is configured with Select and Expand clauses can also be passed to appropriate Get methods, such as <bpt id=\"p2\">[</bpt>PoolOperations.GetPool<ept id=\"p2\">](https://msdn.microsoft.com/library/azure/microsoft.azure.batch.pooloperations.getpool.aspx)</ept>, to limit the amount of data that is returned."
    },
    {
      "content": "Batch REST to .NET API mappings",
      "pos": [
        10242,
        10273
      ]
    },
    {
      "content": "Property names in filter, select, and expand strings <bpt id=\"p1\">*</bpt>must<ept id=\"p1\">*</ept> reflect their REST API counterparts, both in name and case.",
      "pos": [
        10275,
        10394
      ]
    },
    {
      "content": "The tables below provide mappings between the .NET and REST API counterparts.",
      "pos": [
        10395,
        10472
      ]
    },
    {
      "content": "Mappings for filter strings",
      "pos": [
        10478,
        10505
      ]
    },
    {
      "pos": [
        10509,
        10635
      ],
      "content": "<bpt id=\"p1\">**</bpt>.NET list methods<ept id=\"p1\">**</ept>--Each of the .NET API methods in this column accepts an <bpt id=\"p2\">[</bpt>ODATADetailLevel<ph id=\"ph1\">][</ph>odata<ept id=\"p2\">]</ept> object as a parameter."
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>REST list requests<ept id=\"p1\">**</ept>--Each REST API page linked to in this column contains a table that specifies the properties and operations that are allowed in <bpt id=\"p2\">*</bpt>filter<ept id=\"p2\">*</ept> strings.",
      "pos": [
        10638,
        10805
      ]
    },
    {
      "content": "You will use these property names and operations when you construct an <bpt id=\"p1\">[</bpt>ODATADetailLevel.FilterClause<ph id=\"ph1\">][</ph>odata_filter<ept id=\"p1\">]</ept> string.",
      "pos": [
        10806,
        10930
      ]
    },
    {
      "content": ".NET list methods",
      "pos": [
        10934,
        10951
      ]
    },
    {
      "content": "REST list requests",
      "pos": [
        10954,
        10972
      ]
    },
    {
      "pos": [
        10988,
        11042
      ],
      "content": "CertificateOperations.ListCertificates<ph id=\"ph1\">][</ph>net_list_certs"
    },
    {
      "pos": [
        11047,
        11099
      ],
      "content": "List the certificates in an account<ph id=\"ph1\">][</ph>rest_list_certs"
    },
    {
      "pos": [
        11104,
        11148
      ],
      "content": "CloudTask.ListNodeFiles<ph id=\"ph1\">][</ph>net_list_task_files"
    },
    {
      "pos": [
        11153,
        11212
      ],
      "content": "List the files associated with a task<ph id=\"ph1\">][</ph>rest_list_task_files"
    },
    {
      "pos": [
        11217,
        11294
      ],
      "content": "JobOperations.ListJobPreparationAndReleaseTaskStatus<ph id=\"ph1\">][</ph>net_list_jobprep_status"
    },
    {
      "pos": [
        11299,
        11395
      ],
      "content": "List the status of the job preparation and job release tasks for a job<ph id=\"ph1\">][</ph>rest_list_jobprep_status"
    },
    {
      "pos": [
        11400,
        11437
      ],
      "content": "JobOperations.ListJobs<ph id=\"ph1\">][</ph>net_list_jobs"
    },
    {
      "pos": [
        11442,
        11485
      ],
      "content": "List the jobs in an account<ph id=\"ph1\">][</ph>rest_list_jobs"
    },
    {
      "pos": [
        11490,
        11537
      ],
      "content": "JobOperations.ListNodeFiles<ph id=\"ph1\">][</ph>net_list_nodefiles"
    },
    {
      "pos": [
        11542,
        11587
      ],
      "content": "List the files on a node<ph id=\"ph1\">][</ph>rest_list_nodefiles"
    },
    {
      "pos": [
        11592,
        11631
      ],
      "content": "JobOperations.ListTasks<ph id=\"ph1\">][</ph>net_list_tasks"
    },
    {
      "pos": [
        11636,
        11689
      ],
      "content": "List the tasks associated with a job<ph id=\"ph1\">][</ph>rest_list_tasks"
    },
    {
      "pos": [
        11694,
        11756
      ],
      "content": "JobScheduleOperations.ListJobSchedules<ph id=\"ph1\">][</ph>net_list_job_schedules"
    },
    {
      "pos": [
        11761,
        11822
      ],
      "content": "List the job schedules in an account<ph id=\"ph1\">][</ph>rest_list_job_schedules"
    },
    {
      "pos": [
        11827,
        11881
      ],
      "content": "JobScheduleOperations.ListJobs<ph id=\"ph1\">][</ph>net_list_schedule_jobs"
    },
    {
      "pos": [
        11886,
        11955
      ],
      "content": "List the jobs associated with a job schedule<ph id=\"ph1\">][</ph>rest_list_schedule_jobs"
    },
    {
      "pos": [
        11960,
        12015
      ],
      "content": "PoolOperations.ListComputeNodes<ph id=\"ph1\">][</ph>net_list_compute_nodes"
    },
    {
      "pos": [
        12020,
        12077
      ],
      "content": "List the compute nodes in a pool<ph id=\"ph1\">][</ph>rest_list_compute_nodes"
    },
    {
      "pos": [
        12082,
        12122
      ],
      "content": "PoolOperations.ListPools<ph id=\"ph1\">][</ph>net_list_pools"
    },
    {
      "pos": [
        12127,
        12172
      ],
      "content": "List the pools in an account<ph id=\"ph1\">][</ph>rest_list_pools"
    },
    {
      "content": "Mappings for select strings",
      "pos": [
        12179,
        12206
      ]
    },
    {
      "pos": [
        12210,
        12253
      ],
      "content": "<bpt id=\"p1\">**</bpt>Batch .NET types<ept id=\"p1\">**</ept>--Batch .NET API types."
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>REST API entities<ept id=\"p1\">**</ept>--Each page in this column contains one or more tables that list the REST API property names for the type.",
      "pos": [
        12256,
        12383
      ]
    },
    {
      "content": "These property names are used when you construct <bpt id=\"p1\">*</bpt>select<ept id=\"p1\">*</ept> strings.",
      "pos": [
        12384,
        12450
      ]
    },
    {
      "content": "You will use these same property names when you construct an <bpt id=\"p1\">[</bpt>ODATADetailLevel.SelectClause<ph id=\"ph1\">][</ph>odata_select<ept id=\"p1\">]</ept> string.",
      "pos": [
        12451,
        12565
      ]
    },
    {
      "content": "Batch .NET types",
      "pos": [
        12569,
        12585
      ]
    },
    {
      "content": "REST API entities",
      "pos": [
        12588,
        12605
      ]
    },
    {
      "pos": [
        12621,
        12642
      ],
      "content": "Certificate<ph id=\"ph1\">][</ph>net_cert"
    },
    {
      "pos": [
        12647,
        12697
      ],
      "content": "Get information about a certificate<ph id=\"ph1\">][</ph>rest_get_cert"
    },
    {
      "pos": [
        12704,
        12721
      ],
      "content": "CloudJob<ph id=\"ph1\">][</ph>net_job"
    },
    {
      "pos": [
        12726,
        12767
      ],
      "content": "Get information about a job<ph id=\"ph1\">][</ph>rest_get_job"
    },
    {
      "pos": [
        12774,
        12804
      ],
      "content": "CloudJobSchedule<ph id=\"ph1\">][</ph>net_schedule"
    },
    {
      "pos": [
        12809,
        12864
      ],
      "content": "Get information about a job schedule<ph id=\"ph1\">][</ph>rest_get_schedule"
    },
    {
      "pos": [
        12871,
        12892
      ],
      "content": "ComputeNode<ph id=\"ph1\">][</ph>net_node"
    },
    {
      "pos": [
        12897,
        12940
      ],
      "content": "Get information about a node<ph id=\"ph1\">][</ph>rest_get_node"
    },
    {
      "pos": [
        12947,
        12966
      ],
      "content": "CloudPool<ph id=\"ph1\">][</ph>net_pool"
    },
    {
      "pos": [
        12971,
        13014
      ],
      "content": "Get information about a pool<ph id=\"ph1\">][</ph>rest_get_pool"
    },
    {
      "pos": [
        13021,
        13040
      ],
      "content": "CloudTask<ph id=\"ph1\">][</ph>net_task"
    },
    {
      "pos": [
        13045,
        13088
      ],
      "content": "Get information about a task<ph id=\"ph1\">][</ph>rest_get_task"
    },
    {
      "content": "Example: constructing a filter string",
      "pos": [
        13097,
        13134
      ]
    },
    {
      "content": "When you construct a filter string for <bpt id=\"p1\">[</bpt>ODATADetailLevel.FilterClause<ph id=\"ph1\">][</ph>odata_filter<ept id=\"p1\">]</ept>, consult the table above under \"Mappings for filter strings\" to find the REST API documentation page that corresponds to the list operation that you wish to perform.",
      "pos": [
        13136,
        13386
      ]
    },
    {
      "content": "You will find the filterable properties and their supported operators in the first multirow table on that page.",
      "pos": [
        13387,
        13498
      ]
    },
    {
      "content": "If you wish to retrieve all tasks whose exit code was nonzero, for example, this row on <bpt id=\"p1\">[</bpt>List the tasks associated with a job<ph id=\"ph1\">][</ph>rest_list_tasks<ept id=\"p1\">]</ept> specifies the applicable property string and allowable operators:",
      "pos": [
        13499,
        13708
      ]
    },
    {
      "content": "Property",
      "pos": [
        13712,
        13720
      ]
    },
    {
      "content": "Operations allowed",
      "pos": [
        13723,
        13741
      ]
    },
    {
      "content": "Type",
      "pos": [
        13744,
        13748
      ]
    },
    {
      "content": "Thus, the filter string for listing all tasks with a nonzero exit code would be:",
      "pos": [
        13836,
        13916
      ]
    },
    {
      "content": "Example: constructing a select string",
      "pos": [
        13988,
        14025
      ]
    },
    {
      "content": "To construct <bpt id=\"p1\">[</bpt>ODATADetailLevel.SelectClause<ph id=\"ph1\">][</ph>odata_select<ept id=\"p1\">]</ept>, consult the table above under \"Mappings for select strings\" and navigate to the REST API page that corresponds to the type of entity that you are listing.",
      "pos": [
        14027,
        14241
      ]
    },
    {
      "content": "You will find the selectable properties and their supported operators in the first multirow table on that page.",
      "pos": [
        14242,
        14353
      ]
    },
    {
      "content": "If you wish to retrieve only the ID and command line for each task in a list, for example, you will find these rows in the applicable table on <bpt id=\"p1\">[</bpt>Get information about a task<ph id=\"ph1\">][</ph>rest_get_task<ept id=\"p1\">]</ept>:",
      "pos": [
        14354,
        14543
      ]
    },
    {
      "content": "Property",
      "pos": [
        14547,
        14555
      ]
    },
    {
      "content": "Type",
      "pos": [
        14558,
        14562
      ]
    },
    {
      "content": "Notes",
      "pos": [
        14565,
        14570
      ]
    },
    {
      "content": "The select string for including only the ID and command line with each listed task would then be:",
      "pos": [
        14704,
        14801
      ]
    },
    {
      "content": "Next steps",
      "pos": [
        14825,
        14835
      ]
    },
    {
      "content": "Check out the <bpt id=\"p1\">[</bpt>EfficientListQueries<ph id=\"ph1\">][</ph>efficient_query_sample<ept id=\"p1\">]</ept> sample project on GitHub to see how efficient list querying can affect performance in an application.",
      "pos": [
        14837,
        14999
      ]
    },
    {
      "content": "This C# console application creates and adds a large number of tasks to a job.",
      "pos": [
        15000,
        15078
      ]
    },
    {
      "content": "Then, it makes multiple calls to the <bpt id=\"p1\">[</bpt>JobOperations.ListTasks<ph id=\"ph1\">][</ph>net_list_tasks<ept id=\"p1\">]</ept> method and passes <bpt id=\"p2\">[</bpt>ODATADetailLevel<ph id=\"ph2\">][</ph>odata<ept id=\"p2\">]</ept> objects that are configured with different property values to vary the amount of data to be returned.",
      "pos": [
        15079,
        15303
      ]
    },
    {
      "content": "It produces output similar to the following:",
      "pos": [
        15304,
        15348
      ]
    },
    {
      "content": "As is shown in the elapsed time information, you can greatly lower query response times by limiting the properties and the number of items that are returned.",
      "pos": [
        16240,
        16397
      ]
    },
    {
      "content": "You can find this and other sample projects in the <bpt id=\"p1\">[</bpt>azure-batch-samples<ph id=\"ph1\">][</ph>github_samples<ept id=\"p1\">]</ept> repository on GitHub.",
      "pos": [
        16398,
        16508
      ]
    },
    {
      "pos": [
        16510,
        16574
      ],
      "content": "<ph id=\"ph1\">[</ph>api_net<ph id=\"ph2\">]: http://msdn.microsoft.com/library/azure/mt348682.aspx</ph>"
    },
    {
      "pos": [
        16575,
        16685
      ],
      "content": "<ph id=\"ph1\">[</ph>api_net_listjobs<ph id=\"ph2\">]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.joboperations.listjobs.aspx</ph>"
    },
    {
      "pos": [
        16686,
        16751
      ],
      "content": "<ph id=\"ph1\">[</ph>api_rest<ph id=\"ph2\">]: http://msdn.microsoft.com/library/azure/dn820158.aspx</ph>"
    },
    {
      "pos": [
        16752,
        16878
      ],
      "content": "<ph id=\"ph1\">[</ph>efficient_query_sample<ph id=\"ph2\">]: https://github.com/Azure/azure-batch-samples/tree/master/CSharp/ArticleProjects/EfficientListQueries</ph>"
    },
    {
      "pos": [
        16879,
        16941
      ],
      "content": "<ph id=\"ph1\">[</ph>github_samples<ph id=\"ph2\">]: https://github.com/Azure/azure-batch-samples</ph>"
    },
    {
      "pos": [
        16942,
        17035
      ],
      "content": "<ph id=\"ph1\">[</ph>odata<ph id=\"ph2\">]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.odatadetaillevel.aspx</ph>"
    },
    {
      "pos": [
        17036,
        17104
      ],
      "content": "<ph id=\"ph1\">[</ph>odata_ctor<ph id=\"ph2\">]: https://msdn.microsoft.com/library/azure/dn866178.aspx</ph>"
    },
    {
      "pos": [
        17105,
        17218
      ],
      "content": "<ph id=\"ph1\">[</ph>odata_expand<ph id=\"ph2\">]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.odatadetaillevel.expandclause.aspx</ph>"
    },
    {
      "pos": [
        17219,
        17332
      ],
      "content": "<ph id=\"ph1\">[</ph>odata_filter<ph id=\"ph2\">]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.odatadetaillevel.filterclause.aspx</ph>"
    },
    {
      "pos": [
        17333,
        17446
      ],
      "content": "<ph id=\"ph1\">[</ph>odata_select<ph id=\"ph2\">]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.odatadetaillevel.selectclause.aspx</ph>"
    },
    {
      "pos": [
        17448,
        17572
      ],
      "content": "<ph id=\"ph1\">[</ph>net_list_certs<ph id=\"ph2\">]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.certificateoperations.listcertificates.aspx</ph>"
    },
    {
      "pos": [
        17573,
        17698
      ],
      "content": "<ph id=\"ph1\">[</ph>net_list_compute_nodes<ph id=\"ph2\">]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.pooloperations.listcomputenodes.aspx</ph>"
    },
    {
      "pos": [
        17699,
        17831
      ],
      "content": "<ph id=\"ph1\">[</ph>net_list_job_schedules<ph id=\"ph2\">]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.jobscheduleoperations.listjobschedules.aspx</ph>"
    },
    {
      "pos": [
        17832,
        17979
      ],
      "content": "<ph id=\"ph1\">[</ph>net_list_jobprep_status<ph id=\"ph2\">]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.joboperations.listjobpreparationandreleasetaskstatus.aspx</ph>"
    },
    {
      "pos": [
        17980,
        18087
      ],
      "content": "<ph id=\"ph1\">[</ph>net_list_jobs<ph id=\"ph2\">]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.joboperations.listjobs.aspx</ph>"
    },
    {
      "pos": [
        18088,
        18205
      ],
      "content": "<ph id=\"ph1\">[</ph>net_list_nodefiles<ph id=\"ph2\">]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.joboperations.listnodefiles.aspx</ph>"
    },
    {
      "pos": [
        18206,
        18316
      ],
      "content": "<ph id=\"ph1\">[</ph>net_list_pools<ph id=\"ph2\">]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.pooloperations.listpools.aspx</ph>"
    },
    {
      "pos": [
        18317,
        18441
      ],
      "content": "<ph id=\"ph1\">[</ph>net_list_schedule_jobs<ph id=\"ph2\">]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.jobscheduleoperations.listjobs.aspx</ph>"
    },
    {
      "pos": [
        18442,
        18556
      ],
      "content": "<ph id=\"ph1\">[</ph>net_list_task_files<ph id=\"ph2\">]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.cloudtask.listnodefiles.aspx</ph>"
    },
    {
      "pos": [
        18557,
        18666
      ],
      "content": "<ph id=\"ph1\">[</ph>net_list_tasks<ph id=\"ph2\">]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.joboperations.listtasks.aspx</ph>"
    },
    {
      "pos": [
        18668,
        18741
      ],
      "content": "<ph id=\"ph1\">[</ph>rest_list_certs<ph id=\"ph2\">]: https://msdn.microsoft.com/library/azure/dn820154.aspx</ph>"
    },
    {
      "pos": [
        18742,
        18823
      ],
      "content": "<ph id=\"ph1\">[</ph>rest_list_compute_nodes<ph id=\"ph2\">]: https://msdn.microsoft.com/library/azure/dn820159.aspx</ph>"
    },
    {
      "pos": [
        18824,
        18905
      ],
      "content": "<ph id=\"ph1\">[</ph>rest_list_job_schedules<ph id=\"ph2\">]: https://msdn.microsoft.com/library/azure/mt282174.aspx</ph>"
    },
    {
      "pos": [
        18906,
        18988
      ],
      "content": "<ph id=\"ph1\">[</ph>rest_list_jobprep_status<ph id=\"ph2\">]: https://msdn.microsoft.com/library/azure/mt282170.aspx</ph>"
    },
    {
      "pos": [
        18989,
        19061
      ],
      "content": "<ph id=\"ph1\">[</ph>rest_list_jobs<ph id=\"ph2\">]: https://msdn.microsoft.com/library/azure/dn820117.aspx</ph>"
    },
    {
      "pos": [
        19062,
        19139
      ],
      "content": "<ph id=\"ph1\">[</ph>rest_list_nodefiles<ph id=\"ph2\">]: https://msdn.microsoft.com/library/azure/dn820151.aspx</ph>"
    },
    {
      "pos": [
        19140,
        19213
      ],
      "content": "<ph id=\"ph1\">[</ph>rest_list_pools<ph id=\"ph2\">]: https://msdn.microsoft.com/library/azure/dn820101.aspx</ph>"
    },
    {
      "pos": [
        19214,
        19295
      ],
      "content": "<ph id=\"ph1\">[</ph>rest_list_schedule_jobs<ph id=\"ph2\">]: https://msdn.microsoft.com/library/azure/mt282169.aspx</ph>"
    },
    {
      "pos": [
        19296,
        19374
      ],
      "content": "<ph id=\"ph1\">[</ph>rest_list_task_files<ph id=\"ph2\">]: https://msdn.microsoft.com/library/azure/dn820142.aspx</ph>"
    },
    {
      "pos": [
        19375,
        19448
      ],
      "content": "<ph id=\"ph1\">[</ph>rest_list_tasks<ph id=\"ph2\">]: https://msdn.microsoft.com/library/azure/dn820187.aspx</ph>"
    },
    {
      "pos": [
        19450,
        19521
      ],
      "content": "<ph id=\"ph1\">[</ph>rest_get_cert<ph id=\"ph2\">]: https://msdn.microsoft.com/library/azure/dn820176.aspx</ph>"
    },
    {
      "pos": [
        19522,
        19592
      ],
      "content": "<ph id=\"ph1\">[</ph>rest_get_job<ph id=\"ph2\">]: https://msdn.microsoft.com/library/azure/dn820106.aspx</ph>"
    },
    {
      "pos": [
        19593,
        19664
      ],
      "content": "<ph id=\"ph1\">[</ph>rest_get_node<ph id=\"ph2\">]: https://msdn.microsoft.com/library/azure/dn820168.aspx</ph>"
    },
    {
      "pos": [
        19665,
        19736
      ],
      "content": "<ph id=\"ph1\">[</ph>rest_get_pool<ph id=\"ph2\">]: https://msdn.microsoft.com/library/azure/dn820165.aspx</ph>"
    },
    {
      "pos": [
        19737,
        19812
      ],
      "content": "<ph id=\"ph1\">[</ph>rest_get_schedule<ph id=\"ph2\">]: https://msdn.microsoft.com/library/azure/mt282171.aspx</ph>"
    },
    {
      "pos": [
        19813,
        19884
      ],
      "content": "<ph id=\"ph1\">[</ph>rest_get_task<ph id=\"ph2\">]: https://msdn.microsoft.com/library/azure/dn820133.aspx</ph>"
    },
    {
      "pos": [
        19886,
        19977
      ],
      "content": "<ph id=\"ph1\">[</ph>net_cert<ph id=\"ph2\">]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.certificate.aspx</ph>"
    },
    {
      "pos": [
        19978,
        20065
      ],
      "content": "<ph id=\"ph1\">[</ph>net_job<ph id=\"ph2\">]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.cloudjob.aspx</ph>"
    },
    {
      "pos": [
        20066,
        20157
      ],
      "content": "<ph id=\"ph1\">[</ph>net_node<ph id=\"ph2\">]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.computenode.aspx</ph>"
    },
    {
      "pos": [
        20158,
        20247
      ],
      "content": "<ph id=\"ph1\">[</ph>net_pool<ph id=\"ph2\">]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.cloudpool.aspx</ph>"
    },
    {
      "pos": [
        20248,
        20348
      ],
      "content": "<ph id=\"ph1\">[</ph>net_schedule<ph id=\"ph2\">]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.cloudjobschedule.aspx</ph>"
    },
    {
      "pos": [
        20349,
        20438
      ],
      "content": "<ph id=\"ph1\">[</ph>net_task<ph id=\"ph2\">]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.cloudtask.aspx</ph>"
    }
  ],
  "content": "<properties\n    pageTitle=\"Efficient list queries in Azure Batch | Microsoft Azure\"\n    description=\"Increase performance by reducing the amount of data that is returned when querying Azure Batch entities such as pools, jobs, tasks, and compute nodes.\"\n    services=\"batch\"\n    documentationCenter=\".net\"\n    authors=\"mmacy\"\n    manager=\"timlt\"\n    editor=\"\" />\n    \n<tags\n    ms.service=\"batch\"\n    ms.devlang=\"multiple\"\n    ms.topic=\"article\"\n    ms.tgt_pltfrm=\"vm-windows\"\n    ms.workload=\"big-compute\"\n    ms.date=\"01/22/2016\"\n    ms.author=\"marsma\" />\n    \n# Query the Azure Batch service efficiently\n\nIn this article, you will learn how to increase your Azure Batch application's performance by reducing the amount of data that is returned when you query the Batch service using the [Batch .NET][api_net] library.\n\nAzure Batch offers big-compute capabilities--and in a production environment, entities like jobs, tasks, and compute nodes can number in the thousands. Obtaining information on these items can therefore generate a large amount of data that must be transferred from the service to your application on each query. By limiting the number of items and the type of information that is returned for each, you can increase the speed of your queries, and therefore the performance of your application.\n\nNearly every application using Azure Batch will perform some type of monitoring or other operation that queries the Batch service, often at regular intervals. For example, to determine the capacity and status of a pool, you must query every node within the pool. To determine whether any of a job's tasks are still queued, you must query every task within the job. This article explains how to execute these types of queries in the most efficient way.\n\nThis [Batch .NET][api_net] API code snippet retrieves every task that is associated with a job, along with *all* of the tasks' properties:\n\n```\n// Get a collection of all of the tasks and all of their properties for job-001\nIPagedEnumerable<CloudTask> allTasks = batchClient.JobOperations.ListTasks(\"job-001\");\n```\n\nA much more efficient list query can be performed, however. You do this by supplying an [ODATADetailLevel][odata] object to the [JobOperations.ListTasks][net_list_tasks] method. This snippet returns only the ID, command line, and compute node information properties of completed tasks:\n\n```\n// Configure an ODATADetailLevel specifying a subset of tasks and their properties to return\nODATADetailLevel detailLevel = new ODATADetailLevel();\ndetailLevel.FilterClause = \"state eq 'completed'\";\ndetailLevel.SelectClause = \"id,commandLine,nodeInfo\";\n\n// Supply the ODATADetailLevel to the ListTasks method\nIPagedEnumerable<CloudTask> completedTasks = batchClient.JobOperations.ListTasks(\"job-001\", detailLevel);\n```\n\nIn the above example scenario, if there are thousands of tasks in the job, the results from the second query will typically be returned much quicker than the first. More information about using ODATADetailLevel when you list items with the Batch .NET API is included below.\n\n> [AZURE.IMPORTANT]\n> We highly recommend that you *always* supply an ODATADetailLevel object to your .NET API list calls to ensure maximum efficiency and performance of your application. By specifying a detail level, you can help to lower Batch service response times, improve network utilization, and minimize memory usage by client applications.\n\n## Tools for efficient querying\n\nThe [Batch .NET][api_net] and [Batch REST][api_rest] APIs provide the ability to reduce both the number of items that are returned in a list, as well as the amount of information that is returned for each. You do so by specifying **filter**, **select**, and **expand strings** when performing list queries.\n\n### Filter\nThe filter string is an expression that reduces the number of items that are returned. For example, list only the running tasks for a job, or list only compute nodes that are ready to run tasks.\n\n- The filter string consists of one or more expressions, with an expression that consists of a property name, operator, and value. The properties that can be specified are specific to each entity type that you query, as are the operators that are supported for each property.\n- Multiple expressions can be combined by using the logical operators `and` and `or`.\n- This example filter string lists only the running \"render\" tasks: `(state eq 'running') and startswith(id, 'renderTask')`.\n\n### Select\nThe select string limits the property values that are returned for each item. You specify a list of property names, and only those property values are returned for the items in the query results.\n\n- The select string consists of a comma-separated list of property names. You can specify any of the properties for the entity type you are querying.\n- This example select string specifies that only three property values should be returned for each task: `id, state, stateTransitionTime`.\n\n### Expand\nThe expand string reduces the number of API calls that are required to obtain certain information. When you use an expand string, more information about each item can be obtained with a single API call. Rather than first obtaining the list of entities, then requesting information for each item in the list, you use an expand string to obtain the same information in a single API call. Less API calls means better performance.\n\n- Similar to the select string, the expand string controls whether certain data is included in list query results.\n- The expand string is only supported when it is used in listing jobs, job schedules, tasks, and pools. Currently, it only supports statistics information.\n- When all properties are required and no select string is specified, the expand string *must* be used to get statistics information. If a select string is used to obtain a subset of properties, then `stats` can be specified in the select string, and the expand string does not need to be specified.\n- This example expand string specifies that statistics information should be returned for each item in the list: `stats`.\n\n> [AZURE.NOTE] When constructing any of the three query string types (filter, select, and expand), you must ensure that the property names and case match that of their REST API element counterparts. For example, when working with the .NET [CloudTask](https://msdn.microsoft.com/library/azure/microsoft.azure.batch.cloudtask) class, you must specify **state** instead of **State**, even though the .NET property is [CloudTask.State](https://msdn.microsoft.com/library/azure/microsoft.azure.batch.cloudtask.state). See the tables below for property mappings between the .NET and REST APIs.\n\n### Filter, select, and expand string specifications\n\n- Properties specified in filter, select, and expand strings equate to the property names as they appear in the [Batch REST][api_rest] API--even when you use the [Batch .NET][api_net] library.\n- All property names are case sensitive, but property values are case insensitive.\n- Date/time strings can be one of two formats, and must be preceded with `DateTime`.\n  - W3C-DTF format example: `creationTime gt DateTime'2011-05-08T08:49:37Z'`.\n  - RFC 1123 format example: `creationTime gt DateTime'Sun, 08 May 2011 08:49:37 GMT'`.\n- Boolean strings are either `true` or `false`.\n- If an invalid property or operator is specified, a `400 (Bad Request)` error will result.\n\n## Efficient querying in Batch .NET\n\nWithin the [Batch .NET][api_net] API, the [ODATADetailLevel][odata] class is used for supplying filter, select, and expand strings to list operations. The ODataDetailLevel class has three public string properties that can be specified in the constructor, or set directly on the object. You then pass the ODataDetailLevel object as a parameter to the various list operations such as [ListPools][net_list_pools], [ListJobs][net_list_jobs], and [ListTasks][net_list_tasks].\n\n- [ODATADetailLevel.FilterClause][odata_filter]: Limit the number of items that are returned.\n- [ODATADetailLevel.SelectClause][odata_select]: Specify which property values are returned with each item.\n- [ODATADetailLevel.ExpandClause][odata_expand]: Retrieve data for all items in a single API call instead of separate calls for each item.\n\nThe following code snippet uses the Batch .NET API to efficiently query the Batch service for the statistics of a specific set of pools. In this scenario, the Batch user has both test and production pools. The test pool IDs are prefixed with \"test\", and the production pool IDs are prefixed with \"prod\". In the snippet, *myBatchClient* is a properly initialized instance of the [BatchClient](https://msdn.microsoft.com/library/azure/microsoft.azure.batch.batchclient) class.\n\n```\n// First we need an ODATADetailLevel instance on which to set the expand, filter, and select\n// clause strings\nODATADetailLevel detailLevel = new ODATADetailLevel();\n\n// We want to pull only the \"test\" pools, so we limit the number of items returned by using a\n// FilterClause and specifying that the pool IDs must start with \"test\"\ndetailLevel.FilterClause = \"startswith(id, 'test')\";\n\n// To further limit the data that crosses the wire, configure the SelectClause to limit the\n// properties that are returned on each CloudPool object to only CloudPool.Id and CloudPool.Statistics\ndetailLevel.SelectClause = \"id, stats\";\n\n// Specify the ExpandClause so that the .NET API pulls the statistics for the CloudPools in a single\n// underlying REST API call. Note that we use the pool's REST API element name \"stats\" here as opposed\n// to \"Statistics\" as it appears in the .NET API (CloudPool.Statistics)\ndetailLevel.ExpandClause = \"stats\";\n\n// Now get our collection of pools, minimizing the amount of data that is returned by specifying the\n// detail level that we configured above\nList<CloudPool> testPools = await myBatchClient.PoolOperations.ListPools(detailLevel).ToListAsync();\n```\n\n> [AZURE.TIP] An instance of [ODATADetailLevel][odata] that is configured with Select and Expand clauses can also be passed to appropriate Get methods, such as [PoolOperations.GetPool](https://msdn.microsoft.com/library/azure/microsoft.azure.batch.pooloperations.getpool.aspx), to limit the amount of data that is returned.\n\n## Batch REST to .NET API mappings\n\nProperty names in filter, select, and expand strings *must* reflect their REST API counterparts, both in name and case. The tables below provide mappings between the .NET and REST API counterparts.\n\n### Mappings for filter strings\n\n- **.NET list methods**--Each of the .NET API methods in this column accepts an [ODATADetailLevel][odata] object as a parameter.\n- **REST list requests**--Each REST API page linked to in this column contains a table that specifies the properties and operations that are allowed in *filter* strings. You will use these property names and operations when you construct an [ODATADetailLevel.FilterClause][odata_filter] string.\n\n| .NET list methods | REST list requests |\n|---|---|\n| [CertificateOperations.ListCertificates][net_list_certs] | [List the certificates in an account][rest_list_certs]\n| [CloudTask.ListNodeFiles][net_list_task_files] | [List the files associated with a task][rest_list_task_files]\n| [JobOperations.ListJobPreparationAndReleaseTaskStatus][net_list_jobprep_status] | [List the status of the job preparation and job release tasks for a job][rest_list_jobprep_status]\n| [JobOperations.ListJobs][net_list_jobs] | [List the jobs in an account][rest_list_jobs]\n| [JobOperations.ListNodeFiles][net_list_nodefiles] | [List the files on a node][rest_list_nodefiles]\n| [JobOperations.ListTasks][net_list_tasks] | [List the tasks associated with a job][rest_list_tasks]\n| [JobScheduleOperations.ListJobSchedules][net_list_job_schedules] | [List the job schedules in an account][rest_list_job_schedules]\n| [JobScheduleOperations.ListJobs][net_list_schedule_jobs] | [List the jobs associated with a job schedule][rest_list_schedule_jobs]\n| [PoolOperations.ListComputeNodes][net_list_compute_nodes] | [List the compute nodes in a pool][rest_list_compute_nodes]\n| [PoolOperations.ListPools][net_list_pools] | [List the pools in an account][rest_list_pools]\n\n### Mappings for select strings\n\n- **Batch .NET types**--Batch .NET API types.\n- **REST API entities**--Each page in this column contains one or more tables that list the REST API property names for the type. These property names are used when you construct *select* strings. You will use these same property names when you construct an [ODATADetailLevel.SelectClause][odata_select] string.\n\n| Batch .NET types | REST API entities |\n|---|---|\n| [Certificate][net_cert] | [Get information about a certificate][rest_get_cert] |\n| [CloudJob][net_job] | [Get information about a job][rest_get_job] |\n| [CloudJobSchedule][net_schedule] | [Get information about a job schedule][rest_get_schedule] |\n| [ComputeNode][net_node] | [Get information about a node][rest_get_node] |\n| [CloudPool][net_pool] | [Get information about a pool][rest_get_pool] |\n| [CloudTask][net_task] | [Get information about a task][rest_get_task] |\n\n### Example: constructing a filter string\n\nWhen you construct a filter string for [ODATADetailLevel.FilterClause][odata_filter], consult the table above under \"Mappings for filter strings\" to find the REST API documentation page that corresponds to the list operation that you wish to perform. You will find the filterable properties and their supported operators in the first multirow table on that page. If you wish to retrieve all tasks whose exit code was nonzero, for example, this row on [List the tasks associated with a job][rest_list_tasks] specifies the applicable property string and allowable operators:\n\n| Property | Operations allowed | Type |\n| :--- | :--- | :--- |\n| `executionInfo/exitCode` | `eq, ge, gt, le , lt` | `Int` |\n\nThus, the filter string for listing all tasks with a nonzero exit code would be:\n\n`(executionInfo/exitCode lt 0) or (executionInfo/exitCode gt 0)`\n\n### Example: constructing a select string\n\nTo construct [ODATADetailLevel.SelectClause][odata_select], consult the table above under \"Mappings for select strings\" and navigate to the REST API page that corresponds to the type of entity that you are listing. You will find the selectable properties and their supported operators in the first multirow table on that page. If you wish to retrieve only the ID and command line for each task in a list, for example, you will find these rows in the applicable table on [Get information about a task][rest_get_task]:\n\n| Property | Type | Notes |\n| :--- | :--- | :--- |\n| `id` | `String` | `The ID of the task.` |\n| `commandLine` | `String` | `The command line of the task.` |\n\nThe select string for including only the ID and command line with each listed task would then be:\n\n`id, commandLine`\n\n## Next steps\n\nCheck out the [EfficientListQueries][efficient_query_sample] sample project on GitHub to see how efficient list querying can affect performance in an application. This C# console application creates and adds a large number of tasks to a job. Then, it makes multiple calls to the [JobOperations.ListTasks][net_list_tasks] method and passes [ODATADetailLevel][odata] objects that are configured with different property values to vary the amount of data to be returned. It produces output similar to the following:\n\n        Adding 5000 tasks to job jobEffQuery...\n        5000 tasks added in 00:00:47.3467587, hit ENTER to query tasks...\n\n        4943 tasks retrieved in 00:00:04.3408081 (ExpandClause:  | FilterClause: state eq 'active' | SelectClause: id,state)\n        0 tasks retrieved in 00:00:00.2662920 (ExpandClause:  | FilterClause: state eq 'running' | SelectClause: id,state)\n        59 tasks retrieved in 00:00:00.3337760 (ExpandClause:  | FilterClause: state eq 'completed' | SelectClause: id,state)\n        5000 tasks retrieved in 00:00:04.1429881 (ExpandClause:  | FilterClause:  | SelectClause: id,state)\n        5000 tasks retrieved in 00:00:15.1016127 (ExpandClause:  | FilterClause:  | SelectClause: id,state,environmentSettings)\n        5000 tasks retrieved in 00:00:17.0548145 (ExpandClause: stats | FilterClause:  | SelectClause: )\n\n        Sample complete, hit ENTER to continue...\n\nAs is shown in the elapsed time information, you can greatly lower query response times by limiting the properties and the number of items that are returned. You can find this and other sample projects in the [azure-batch-samples][github_samples] repository on GitHub.\n\n[api_net]: http://msdn.microsoft.com/library/azure/mt348682.aspx\n[api_net_listjobs]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.joboperations.listjobs.aspx\n[api_rest]: http://msdn.microsoft.com/library/azure/dn820158.aspx\n[efficient_query_sample]: https://github.com/Azure/azure-batch-samples/tree/master/CSharp/ArticleProjects/EfficientListQueries\n[github_samples]: https://github.com/Azure/azure-batch-samples\n[odata]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.odatadetaillevel.aspx\n[odata_ctor]: https://msdn.microsoft.com/library/azure/dn866178.aspx\n[odata_expand]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.odatadetaillevel.expandclause.aspx\n[odata_filter]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.odatadetaillevel.filterclause.aspx\n[odata_select]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.odatadetaillevel.selectclause.aspx\n\n[net_list_certs]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.certificateoperations.listcertificates.aspx\n[net_list_compute_nodes]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.pooloperations.listcomputenodes.aspx\n[net_list_job_schedules]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.jobscheduleoperations.listjobschedules.aspx\n[net_list_jobprep_status]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.joboperations.listjobpreparationandreleasetaskstatus.aspx\n[net_list_jobs]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.joboperations.listjobs.aspx\n[net_list_nodefiles]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.joboperations.listnodefiles.aspx\n[net_list_pools]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.pooloperations.listpools.aspx\n[net_list_schedule_jobs]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.jobscheduleoperations.listjobs.aspx\n[net_list_task_files]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.cloudtask.listnodefiles.aspx\n[net_list_tasks]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.joboperations.listtasks.aspx\n\n[rest_list_certs]: https://msdn.microsoft.com/library/azure/dn820154.aspx\n[rest_list_compute_nodes]: https://msdn.microsoft.com/library/azure/dn820159.aspx\n[rest_list_job_schedules]: https://msdn.microsoft.com/library/azure/mt282174.aspx\n[rest_list_jobprep_status]: https://msdn.microsoft.com/library/azure/mt282170.aspx\n[rest_list_jobs]: https://msdn.microsoft.com/library/azure/dn820117.aspx\n[rest_list_nodefiles]: https://msdn.microsoft.com/library/azure/dn820151.aspx\n[rest_list_pools]: https://msdn.microsoft.com/library/azure/dn820101.aspx\n[rest_list_schedule_jobs]: https://msdn.microsoft.com/library/azure/mt282169.aspx\n[rest_list_task_files]: https://msdn.microsoft.com/library/azure/dn820142.aspx\n[rest_list_tasks]: https://msdn.microsoft.com/library/azure/dn820187.aspx\n\n[rest_get_cert]: https://msdn.microsoft.com/library/azure/dn820176.aspx\n[rest_get_job]: https://msdn.microsoft.com/library/azure/dn820106.aspx\n[rest_get_node]: https://msdn.microsoft.com/library/azure/dn820168.aspx\n[rest_get_pool]: https://msdn.microsoft.com/library/azure/dn820165.aspx\n[rest_get_schedule]: https://msdn.microsoft.com/library/azure/mt282171.aspx\n[rest_get_task]: https://msdn.microsoft.com/library/azure/dn820133.aspx\n\n[net_cert]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.certificate.aspx\n[net_job]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.cloudjob.aspx\n[net_node]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.computenode.aspx\n[net_pool]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.cloudpool.aspx\n[net_schedule]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.cloudjobschedule.aspx\n[net_task]: https://msdn.microsoft.com/library/azure/microsoft.azure.batch.cloudtask.aspx\n"
}