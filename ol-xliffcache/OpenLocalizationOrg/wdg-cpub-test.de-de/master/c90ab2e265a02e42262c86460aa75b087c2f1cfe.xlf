<?xml version="1.0" encoding="utf-8"?>
<xliff srcLang="en-us" trgLang="de-de" version="2.0" xmlns="urn:oasis:names:tc:xliff:document:2.0" xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">c90ab2e265a02e42262c86460aa75b087c2f1cfe</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <group id="101">
        <unit id="101">
          <segment state="initial" id="101">
            <source>Message Compiler Properties for Driver Projects</source>
          </segment>
        </unit>
        <unit id="102">
          <originalData>
            <data id="id1">&lt;linkText&gt;</data>
            <data id="id2">&lt;/linkText&gt;</data>
            <data id="id3">&lt;title&gt;</data>
            <data id="id4">&lt;/title&gt;</data>
            <data id="id5">&lt;link&gt;</data>
            <data id="id6">&lt;/link&gt;</data>
          </originalData>
          <segment state="initial" id="102">
            <source>Sets the properties for the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId2">**Message Compiler (MC.exe)**</pc><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId3"></pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId1"></pc> tool.</source>
          </segment>
        </unit>
        <unit id="103">
          <segment state="initial" id="103">
            <source>The compiler generates the message resource files that you can add to your project.</source>
          </segment>
        </unit>
        <unit id="104">
          <originalData>
            <data id="id1">&lt;linkText&gt;</data>
            <data id="id2">&lt;/linkText&gt;</data>
            <data id="id3">&lt;title&gt;</data>
            <data id="id4">&lt;/title&gt;</data>
            <data id="id5">&lt;link&gt;</data>
            <data id="id6">&lt;/link&gt;</data>
          </originalData>
          <segment state="initial" id="104">
            <source>For example, if you are using the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId2">Event Tracing for Windows (ETW)</pc><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId3"></pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId1"></pc> kernel-mode API to add event tracing to a kernel-mode driver, you could use the message compiler to create a header file that contains definitions for the event provider, event attributes, channels, and events.</source>
          </segment>
        </unit>
        <unit id="105">
          <segment state="initial" id="105">
            <source>You must include this header file in your source code.</source>
          </segment>
        </unit>
        <unit id="106">
          <segment state="initial" id="106">
            <source>The message compiler creates a resource compiler script (\*.rc) that you add to your project file.</source>
          </segment>
        </unit>
        <unit id="107">
          <originalData>
            <data id="id1">&lt;html&gt;</data>
            <data id="id2">&lt;/html&gt;</data>
            <data id="id3">&lt;html&gt;</data>
            <data id="id4">&lt;/html&gt;</data>
            <data id="id5">&lt;html&gt;</data>
            <data id="id6">&lt;/html&gt;</data>
            <data id="id7">&lt;html&gt;</data>
            <data id="id8">&lt;/html&gt;</data>
            <data id="id9">&lt;html&gt;</data>
            <data id="id10">&lt;/html&gt;</data>
            <data id="id11">&lt;html&gt;</data>
            <data id="id12">&lt;/html&gt;</data>
          </originalData>
          <segment state="initial" id="107">
            <source>
              <pc dataRefEnd="id2" dataRefStart="id1" id="1">
              </pc>
              <pc dataRefEnd="id4" dataRefStart="id3" id="2">
              </pc>
              <pc dataRefEnd="id6" dataRefStart="id5" id="3">
              </pc>
              <pc dataRefEnd="id8" dataRefStart="id7" id="4">
              </pc>
              <pc dataRefEnd="id10" dataRefStart="id9" id="5">
              </pc>
              <pc dataRefEnd="id12" dataRefStart="id11" id="6">
              </pc>Setting Message Compiler properties for driver projects</source>
          </segment>
        </unit>
        <unit id="108">
          <segment state="initial" id="108">
            <source>Open the property pages for your driver project.</source>
          </segment>
        </unit>
        <unit id="109">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;strong&gt;</data>
            <data id="id4">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="109">
            <source>Right-click the driver project in <pc dataRefEnd="id2" dataRefStart="id1" id="2">Solution Explorer</pc> and select <pc dataRefEnd="id4" dataRefStart="id3" id="4">Properties</pc>.</source>
          </segment>
        </unit>
        <unit id="110">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;strong&gt;</data>
            <data id="id4">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="110">
            <source>In the property pages for the driver project, click <pc dataRefEnd="id2" dataRefStart="id1" id="2">Configuration Properties</pc> and then click <pc dataRefEnd="id4" dataRefStart="id3" id="4">Message Compiler</pc>.</source>
          </segment>
        </unit>
        <unit id="111">
          <segment state="initial" id="111">
            <source>Set the properties for the project.</source>
          </segment>
        </unit>
        <unit id="112">
          <segment state="initial" id="112">
            <source>This property page is available if you add a message text file (.mc) or a manifest (.man) to your solution.</source>
          </segment>
        </unit>
        <unit id="113">
          <segment state="initial" id="113">
            <source>Option</source>
          </segment>
        </unit>
        <unit id="114">
          <segment state="initial" id="114">
            <source>Description</source>
          </segment>
        </unit>
        <unit id="115">
          <segment state="initial" id="115">
            <source>Additional Options</source>
          </segment>
        </unit>
        <unit id="116">
          <segment state="initial" id="116">
            <source>Specifies additional options to pass to the </source>
          </segment>
        </unit>
        <unit id="117">
          <segment state="initial" id="117">
            <source>Message Compiler (MC.exe)</source>
          </segment>
        </unit>
        <unit id="118">
          <segment state="initial" id="118">
            <source> tool.</source>
          </segment>
        </unit>
        <unit id="119">
          <segment state="initial" id="119">
            <source>Ansi Input File</source>
          </segment>
        </unit>
        <unit id="120">
          <segment state="initial" id="120">
            <source>Specifies that the input file contains ANSI content (this is the default). (</source>
          </segment>
        </unit>
        <unit id="121">
          <segment state="initial" id="121">
            <source>-a</source>
          </segment>
        </unit>
        <unit id="122">
          <segment state="initial" id="122">
            <source>)</source>
          </segment>
        </unit>
        <unit id="123">
          <segment state="initial" id="123">
            <source>Ansi Message In Bin File</source>
          </segment>
        </unit>
        <unit id="124">
          <segment state="initial" id="124">
            <source>Specifies that the messages in the output .bin file should be ANSI. (</source>
          </segment>
        </unit>
        <unit id="125">
          <segment state="initial" id="125">
            <source>-A</source>
          </segment>
        </unit>
        <unit id="126">
          <segment state="initial" id="126">
            <source>)</source>
          </segment>
        </unit>
        <unit id="127">
          <segment state="initial" id="127">
            <source>Baseline Path</source>
          </segment>
        </unit>
        <unit id="128">
          <segment state="initial" id="128">
            <source>The path must point to the folder that contains the .BIN files that the baseline operation created. (</source>
          </segment>
        </unit>
        <unit id="129">
          <segment state="initial" id="129">
            <source>-t</source>
          </segment>
        </unit>
        <unit id="130">
          <segment state="initial" id="130">
            <source>directory</source>
          </segment>
        </unit>
        <unit id="131">
          <segment state="initial" id="131">
            <source>)</source>
          </segment>
        </unit>
        <unit id="132">
          <segment state="initial" id="132">
            <source>Baseline Resource Path</source>
          </segment>
        </unit>
        <unit id="133">
          <segment state="initial" id="133">
            <source>The folder which contains the baseline manifest files. (</source>
          </segment>
        </unit>
        <unit id="134">
          <segment state="initial" id="134">
            <source>-s</source>
          </segment>
        </unit>
        <unit id="135">
          <segment state="initial" id="135">
            <source>directory</source>
          </segment>
        </unit>
        <unit id="136">
          <segment state="initial" id="136">
            <source>)</source>
          </segment>
        </unit>
        <unit id="137">
          <segment state="initial" id="137">
            <source>Debug Output Path</source>
          </segment>
        </unit>
        <unit id="138">
          <segment state="initial" id="138">
            <source>The path in which to place the .dbg C include file. (</source>
          </segment>
        </unit>
        <unit id="139">
          <segment state="initial" id="139">
            <source>-x</source>
          </segment>
        </unit>
        <unit id="140">
          <segment state="initial" id="140">
            <source>path</source>
          </segment>
        </unit>
        <unit id="141">
          <segment state="initial" id="141">
            <source>)</source>
          </segment>
        </unit>
        <unit id="142">
          <segment state="initial" id="142">
            <source>Enable Callout Macro</source>
          </segment>
        </unit>
        <unit id="143">
          <segment state="initial" id="143">
            <source>Adds a callout macro to invoke user code at logging. Not available for C#, and ignored. (</source>
          </segment>
        </unit>
        <unit id="144">
          <segment state="initial" id="144">
            <source>-co</source>
          </segment>
        </unit>
        <unit id="145">
          <segment state="initial" id="145">
            <source>)</source>
          </segment>
        </unit>
        <unit id="146">
          <segment state="initial" id="146">
            <source>Enable Debug Output Path</source>
          </segment>
        </unit>
        <unit id="147">
          <segment state="initial" id="147">
            <source>Enables the compiler to place the .dbg C include file specified by the </source>
          </segment>
        </unit>
        <unit id="148">
          <segment state="initial" id="148">
            <source>Debug Output Path</source>
          </segment>
        </unit>
        <unit id="149">
          <segment state="initial" id="149">
            <source> property.</source>
          </segment>
        </unit>
        <unit id="150">
          <segment state="initial" id="150">
            <source>File extension for the generated header</source>
          </segment>
        </unit>
        <unit id="151">
          <segment state="initial" id="151">
            <source>Specifies the extension of the generated header file. (</source>
          </segment>
        </unit>
        <unit id="152">
          <segment state="initial" id="152">
            <source>-e</source>
          </segment>
        </unit>
        <unit id="153">
          <segment state="initial" id="153">
            <source>extension</source>
          </segment>
        </unit>
        <unit id="154">
          <segment state="initial" id="154">
            <source>)</source>
          </segment>
        </unit>
        <unit id="155">
          <segment state="initial" id="155">
            <source>Generate Baseline Resource</source>
          </segment>
        </unit>
        <unit id="156">
          <segment state="initial" id="156">
            <source>Creates a baseline of your instrumentation.</source>
          </segment>
        </unit>
        <unit id="157">
          <segment state="initial" id="157">
            <source>Generate C# (managed) logging class</source>
          </segment>
        </unit>
        <unit id="158">
          <segment state="initial" id="158">
            <source>Generates a C# (managed) logging class that includes methods that you would call to log events in your manifest. (</source>
          </segment>
        </unit>
        <unit id="159">
          <segment state="initial" id="159">
            <source>-cs</source>
          </segment>
        </unit>
        <unit id="160">
          <segment state="initial" id="160">
            <source>namespace</source>
          </segment>
        </unit>
        <unit id="161">
          <segment state="initial" id="161">
            <source>)</source>
          </segment>
        </unit>
        <unit id="162">
          <segment state="initial" id="162">
            <source>Generate header file for containing counter names and GUIDs</source>
          </segment>
        </unit>
        <unit id="163">
          <segment state="initial" id="163">
            <source>Use this option to specify the folder into which you want the compiler to place the generated header file.</source>
          </segment>
        </unit>
        <unit id="164">
          <segment state="initial" id="164">
            <source>Generate Kernel Mode Logging Macros</source>
          </segment>
        </unit>
        <unit id="165">
          <segment state="initial" id="165">
            <source>Generates kernel-mode logging macros. (</source>
          </segment>
        </unit>
        <unit id="166">
          <segment state="initial" id="166">
            <source>-km</source>
          </segment>
        </unit>
        <unit id="167">
          <segment state="initial" id="167">
            <source>)</source>
          </segment>
        </unit>
        <unit id="168">
          <segment state="initial" id="168">
            <source>Generate MOF File</source>
          </segment>
        </unit>
        <unit id="169">
          <segment state="initial" id="169">
            <source>Generate down-level support for all functions and macros generated. MOF file will be generated from the manifest. MOF file will be placed in the location specified by the </source>
          </segment>
        </unit>
        <unit id="170">
          <segment state="initial" id="170">
            <source>-h</source>
          </segment>
        </unit>
        <unit id="171">
          <segment state="initial" id="171">
            <source> option (</source>
          </segment>
        </unit>
        <unit id="172">
          <segment state="initial" id="172">
            <source>-mof</source>
          </segment>
        </unit>
        <unit id="173">
          <segment state="initial" id="173">
            <source>).</source>
          </segment>
        </unit>
        <unit id="174">
          <segment state="initial" id="174">
            <source>Generate OLE2 Header</source>
          </segment>
        </unit>
        <unit id="175">
          <segment state="initial" id="175">
            <source>Generates an OLE2 header file. (</source>
          </segment>
        </unit>
        <unit id="176">
          <segment state="initial" id="176">
            <source>-o</source>
          </segment>
        </unit>
        <unit id="177">
          <segment state="initial" id="177">
            <source>)</source>
          </segment>
        </unit>
        <unit id="178">
          <segment state="initial" id="178">
            <source>Generate static C# (managed) logging class</source>
          </segment>
        </unit>
        <unit id="179">
          <segment state="initial" id="179">
            <source>Generates a static C# (managed) logging class that includes methods that you would call to log events in your manifest. (</source>
          </segment>
        </unit>
        <unit id="180">
          <segment state="initial" id="180">
            <source>-css</source>
          </segment>
        </unit>
        <unit id="181">
          <segment state="initial" id="181">
            <source>namespace</source>
          </segment>
        </unit>
        <unit id="182">
          <segment state="initial" id="182">
            <source>)</source>
          </segment>
        </unit>
        <unit id="183">
          <segment state="initial" id="183">
            <source>Generate User Mode Logging Macros</source>
          </segment>
        </unit>
        <unit id="184">
          <segment state="initial" id="184">
            <source>Generate user-mode logging macros. (</source>
          </segment>
        </unit>
        <unit id="185">
          <segment state="initial" id="185">
            <source>-um</source>
          </segment>
        </unit>
        <unit id="186">
          <segment state="initial" id="186">
            <source>)</source>
          </segment>
        </unit>
        <unit id="187">
          <segment state="initial" id="187">
            <source>Generated Files Base Name</source>
          </segment>
        </unit>
        <unit id="188">
          <segment state="initial" id="188">
            <source>Specifies the base name of all generated files. (</source>
          </segment>
        </unit>
        <unit id="189">
          <segment state="initial" id="189">
            <source>-z</source>
          </segment>
        </unit>
        <unit id="190">
          <segment state="initial" id="190">
            <source>basename</source>
          </segment>
        </unit>
        <unit id="191">
          <segment state="initial" id="191">
            <source>)</source>
          </segment>
        </unit>
        <unit id="192">
          <segment state="initial" id="192">
            <source>Generated RC and Binary Message Files Path</source>
          </segment>
        </unit>
        <unit id="193">
          <segment state="initial" id="193">
            <source>Specifies the path to the generated the RC and binary message files.</source>
          </segment>
        </unit>
        <unit id="194">
          <segment state="initial" id="194">
            <source>Header File Path</source>
          </segment>
        </unit>
        <unit id="195">
          <segment state="initial" id="195">
            <source>Specifies the path the generated header file. (</source>
          </segment>
        </unit>
        <unit id="196">
          <segment state="initial" id="196">
            <source>-h</source>
          </segment>
        </unit>
        <unit id="197">
          <segment state="initial" id="197">
            <source>path</source>
          </segment>
        </unit>
        <unit id="198">
          <segment state="initial" id="198">
            <source>)</source>
          </segment>
        </unit>
        <unit id="199">
          <segment state="initial" id="199">
            <source>Maximum Message Length</source>
          </segment>
        </unit>
        <unit id="200">
          <segment state="initial" id="200">
            <source>Use this argument to have the compiler generate a warning if any message exceeds length characters. (</source>
          </segment>
        </unit>
        <unit id="201">
          <segment state="initial" id="201">
            <source>-m</source>
          </segment>
        </unit>
        <unit id="202">
          <segment state="initial" id="202">
            <source>length</source>
          </segment>
        </unit>
        <unit id="203">
          <segment state="initial" id="203">
            <source>)</source>
          </segment>
        </unit>
        <unit id="204">
          <segment state="initial" id="204">
            <source>Prefix Macro Name</source>
          </segment>
        </unit>
        <unit id="205">
          <segment state="initial" id="205">
            <source>Use this argument to override the default prefix that the compiler uses for the logging macro names and method names. (</source>
          </segment>
        </unit>
        <unit id="206">
          <segment state="initial" id="206">
            <source>-p</source>
          </segment>
        </unit>
        <unit id="207">
          <segment state="initial" id="207">
            <source>prefix</source>
          </segment>
        </unit>
        <unit id="208">
          <segment state="initial" id="208">
            <source>)</source>
          </segment>
        </unit>
        <unit id="209">
          <segment state="initial" id="209">
            <source>RC File Path</source>
          </segment>
        </unit>
        <unit id="210">
          <segment state="initial" id="210">
            <source>The folder into which you want the compiler to place the generated resource compiler script (.rc file) and the generated .bin files. (</source>
          </segment>
        </unit>
        <unit id="211">
          <segment state="initial" id="211">
            <source>-r</source>
          </segment>
        </unit>
        <unit id="212">
          <segment state="initial" id="212">
            <source>path</source>
          </segment>
        </unit>
        <unit id="213">
          <segment state="initial" id="213">
            <source>)</source>
          </segment>
        </unit>
        <unit id="214">
          <segment state="initial" id="214">
            <source>Remove Characters From Symbolic Name</source>
          </segment>
        </unit>
        <unit id="215">
          <segment state="initial" id="215">
            <source>Use this argument to remove characters from the beginning of the symbolic name that you specified for the event. (</source>
          </segment>
        </unit>
        <unit id="216">
          <segment state="initial" id="216">
            <source>-P</source>
          </segment>
        </unit>
        <unit id="217">
          <segment state="initial" id="217">
            <source>prefix</source>
          </segment>
        </unit>
        <unit id="218">
          <segment state="initial" id="218">
            <source>)</source>
          </segment>
        </unit>
        <unit id="219">
          <segment state="initial" id="219">
            <source>Set Customer Bit</source>
          </segment>
        </unit>
        <unit id="220">
          <segment state="initial" id="220">
            <source>Sets the Customer bit in the entire message Ids. (</source>
          </segment>
        </unit>
        <unit id="221">
          <segment state="initial" id="221">
            <source>-c</source>
          </segment>
        </unit>
        <unit id="222">
          <segment state="initial" id="222">
            <source>)</source>
          </segment>
        </unit>
        <unit id="223">
          <segment state="initial" id="223">
            <source>Terminate Message With Null</source>
          </segment>
        </unit>
        <unit id="224">
          <segment state="initial" id="224">
            <source>Terminates all strings with nulls in the message tables. (</source>
          </segment>
        </unit>
        <unit id="225">
          <segment state="initial" id="225">
            <source>-n</source>
          </segment>
        </unit>
        <unit id="226">
          <segment state="initial" id="226">
            <source>)</source>
          </segment>
        </unit>
        <unit id="227">
          <segment state="initial" id="227">
            <source>Unicode Input File</source>
          </segment>
        </unit>
        <unit id="228">
          <segment state="initial" id="228">
            <source>Specifies that the input file contains Unicode content. (</source>
          </segment>
        </unit>
        <unit id="229">
          <segment state="initial" id="229">
            <source>-u</source>
          </segment>
        </unit>
        <unit id="230">
          <segment state="initial" id="230">
            <source>)</source>
          </segment>
        </unit>
        <unit id="231">
          <segment state="initial" id="231">
            <source>The default is ANSI.</source>
          </segment>
        </unit>
        <unit id="232">
          <segment state="initial" id="232">
            <source>Unicode Message In Bin File</source>
          </segment>
        </unit>
        <unit id="233">
          <segment state="initial" id="233">
            <source>Specifies that the messages in the output .bin file are Unicode. (</source>
          </segment>
        </unit>
        <unit id="234">
          <segment state="initial" id="234">
            <source>-U</source>
          </segment>
        </unit>
        <unit id="235">
          <segment state="initial" id="235">
            <source>)</source>
          </segment>
        </unit>
        <unit id="236">
          <segment state="initial" id="236">
            <source>This is the default.</source>
          </segment>
        </unit>
        <unit id="237">
          <segment state="initial" id="237">
            <source>Use Base Name Of Input</source>
          </segment>
        </unit>
        <unit id="238">
          <segment state="initial" id="238">
            <source>Use this argument to have the compiler use the base name of the input file for the name of the output .bin files. (</source>
          </segment>
        </unit>
        <unit id="239">
          <segment state="initial" id="239">
            <source>-b</source>
          </segment>
        </unit>
        <unit id="240">
          <segment state="initial" id="240">
            <source>)</source>
          </segment>
        </unit>
        <unit id="241">
          <segment state="initial" id="241">
            <source>Use Decimal Values</source>
          </segment>
        </unit>
        <unit id="242">
          <segment state="initial" id="242">
            <source>Use this argument to use decimal values for the Severity and Facility constants in the header file instead of hexadecimal values. (</source>
          </segment>
        </unit>
        <unit id="243">
          <segment state="initial" id="243">
            <source>-d</source>
          </segment>
        </unit>
        <unit id="244">
          <segment state="initial" id="244">
            <source>)</source>
          </segment>
        </unit>
        <unit id="245">
          <segment state="initial" id="245">
            <source>Validate Against Baseline Resource</source>
          </segment>
        </unit>
        <unit id="246">
          <segment state="initial" id="246">
            <source>Use this argument when you create a new version of your manifest and want to check it for application compatibility against the baseline that you created using the </source>
          </segment>
        </unit>
        <unit id="247">
          <segment state="initial" id="247">
            <source>-s</source>
          </segment>
        </unit>
        <unit id="248">
          <segment state="initial" id="248">
            <source> option.</source>
          </segment>
        </unit>
        <unit id="249">
          <segment state="initial" id="249">
            <source>Verbose</source>
          </segment>
        </unit>
        <unit id="250">
          <segment state="initial" id="250">
            <source>Use this option to generate verbose output. (</source>
          </segment>
        </unit>
        <unit id="251">
          <segment state="initial" id="251">
            <source>-v</source>
          </segment>
        </unit>
        <unit id="252">
          <segment state="initial" id="252">
            <source>)</source>
          </segment>
        </unit>
        <unit id="253">
          <originalData>
            <data id="id1">&lt;html&gt;</data>
            <data id="id2">&lt;/html&gt;</data>
            <data id="id3">&lt;html&gt;</data>
            <data id="id4">&lt;/html&gt;</data>
          </originalData>
          <segment state="initial" id="253">
            <source>
              <pc dataRefEnd="id2" dataRefStart="id1" id="1">
              </pc>
              <pc dataRefEnd="id4" dataRefStart="id3" id="2">
              </pc>Related topics</source>
          </segment>
        </unit>
        <unit id="254">
          <originalData>
            <data id="id1">&lt;linkText&gt;</data>
            <data id="id2">&lt;/linkText&gt;</data>
            <data id="id3">&lt;title&gt;</data>
            <data id="id4">&lt;/title&gt;</data>
            <data id="id5">&lt;link&gt;</data>
            <data id="id6">&lt;/link&gt;</data>
          </originalData>
          <segment state="initial" id="254">
            <source>
              <pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId2">Message Compiler (MC.exe)</pc>
              <pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId3">
              </pc>
              <pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId1">
              </pc>
            </source>
          </segment>
        </unit>
        <unit id="255">
          <originalData>
            <data id="id1">&lt;linkText&gt;</data>
            <data id="id2">&lt;/linkText&gt;</data>
            <data id="id3">&lt;title&gt;</data>
            <data id="id4">&lt;/title&gt;</data>
            <data id="id5">&lt;link&gt;</data>
            <data id="id6">&lt;/link&gt;</data>
          </originalData>
          <segment state="initial" id="255">
            <source>
              <pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId2">WDK and Visual Studio build environment</pc>
              <pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId3">
              </pc>
              <pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId1">
              </pc>
            </source>
          </segment>
        </unit>
        <unit id="256">
          <segment state="initial" id="256">
            <source>Message compiler task</source>
          </segment>
        </unit>
        <unit id="257">
          <originalData>
            <data id="id1">&lt;linkText&gt;</data>
            <data id="id2">&lt;/linkText&gt;</data>
            <data id="id3">&lt;title&gt;</data>
            <data id="id4">&lt;/title&gt;</data>
            <data id="id5">&lt;link&gt;</data>
            <data id="id6">&lt;/link&gt;</data>
          </originalData>
          <segment state="initial" id="257">
            <source>
              <pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId2">Event Tracing for Windows (ETW)</pc>
              <pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId3">
              </pc>
              <pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId1">
              </pc>
            </source>
          </segment>
        </unit>
      </group>
    </group>
    <group id="content">
      <group id="258" />
    </group>
  </file>
</xliff>