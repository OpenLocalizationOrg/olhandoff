<?xml version="1.0" encoding="utf-8"?>
<xliff srcLang="en-us" trgLang="de-de" version="2.0" xmlns="urn:oasis:names:tc:xliff:document:2.0" xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">7e65e732b1a32b8ff503b5d95e11fef17c966977</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <group id="101">
        <unit id="101">
          <segment state="initial" id="101">
            <source xml:space="preserve">Composition effects</source>
            <target xml:space="preserve">Composition effects</target>
          </segment>
        </unit>
        <unit id="102">
          <segment state="initial" id="102">
            <source xml:space="preserve">\[ Updated for UWP apps on Windows 10.</source>
            <target xml:space="preserve">\[ Updated for UWP apps on Windows 10.</target>
          </segment>
        </unit>
        <unit id="103">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="103">
            <source xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">archive</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> \]</source>
            <target xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">archive</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> \]</target>
          </segment>
        </unit>
        <unit id="104">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="104">
            <source xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**Windows.UI.Composition**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> WinRT API allows Real-time effects to be applied to images and UI with animatable effect properties.</source>
            <target xml:space="preserve">The <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**Windows.UI.Composition**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> WinRT API allows Real-time effects to be applied to images and UI with animatable effect properties.</target>
          </segment>
        </unit>
        <unit id="105">
          <segment state="initial" id="105">
            <source xml:space="preserve">In this overview, we’ll run through the functionality available that allows effects to be applied to a composition visual.</source>
            <target xml:space="preserve">In this overview, we’ll run through the functionality available that allows effects to be applied to a composition visual.</target>
          </segment>
        </unit>
        <unit id="106">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;link&gt;</data>
            <data id="id8">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="106">
            <source xml:space="preserve">To support <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Universal Windows Platform (UWP)</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> consistency for developers describing effects in their applications, composition effects leverage Win2D’s IGraphicsEffect interface to use effect descriptions via the <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">Microsoft.Graphics.Canvas.Effects</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc> Namespace.</source>
            <target xml:space="preserve">To support <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Universal Windows Platform (UWP)</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> consistency for developers describing effects in their applications, composition effects leverage Win2D’s IGraphicsEffect interface to use effect descriptions via the <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">Microsoft.Graphics.Canvas.Effects</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc> Namespace.</target>
          </segment>
        </unit>
        <unit id="107">
          <segment state="initial" id="107">
            <source xml:space="preserve">Brush effects are used to paint areas of an application by applying effects to a set of existing images.</source>
            <target xml:space="preserve">Brush effects are used to paint areas of an application by applying effects to a set of existing images.</target>
          </segment>
        </unit>
        <unit id="108">
          <segment state="initial" id="108">
            <source xml:space="preserve">Windows 10 composition effect APIs are focused on Sprite Visuals.</source>
            <target xml:space="preserve">Windows 10 composition effect APIs are focused on Sprite Visuals.</target>
          </segment>
        </unit>
        <unit id="109">
          <segment state="initial" id="109">
            <source xml:space="preserve">The SpriteVisual allows for flexibility and interplay in color, image and effect creation.</source>
            <target xml:space="preserve">The SpriteVisual allows for flexibility and interplay in color, image and effect creation.</target>
          </segment>
        </unit>
        <unit id="110">
          <segment state="initial" id="110">
            <source xml:space="preserve">The SpriteVisual is a composition visual type that can fill a 2D rectangle with a brush.</source>
            <target xml:space="preserve">The SpriteVisual is a composition visual type that can fill a 2D rectangle with a brush.</target>
          </segment>
        </unit>
        <unit id="111">
          <segment state="initial" id="111">
            <source xml:space="preserve">The visual defines the bounds of the rectangle and the brush defines the pixels used to paint the rectangle.</source>
            <target xml:space="preserve">The visual defines the bounds of the rectangle and the brush defines the pixels used to paint the rectangle.</target>
          </segment>
        </unit>
        <unit id="112">
          <segment state="initial" id="112">
            <source xml:space="preserve">Effect brushes are used on composition tree visuals whose content comes from the output of an effect graph.</source>
            <target xml:space="preserve">Effect brushes are used on composition tree visuals whose content comes from the output of an effect graph.</target>
          </segment>
        </unit>
        <unit id="113">
          <segment state="initial" id="113">
            <source xml:space="preserve">Effects can reference existing surfaces/textures, but not the output of other composition trees.</source>
            <target xml:space="preserve">Effects can reference existing surfaces/textures, but not the output of other composition trees.</target>
          </segment>
        </unit>
        <unit id="114">
          <segment state="initial" id="114">
            <source xml:space="preserve">Effect Features</source>
            <target xml:space="preserve">Effect Features</target>
          </segment>
        </unit>
        <unit id="115">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="115">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">Effect Library</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">Effect Library</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</target>
          </segment>
        </unit>
        <unit id="116">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="116">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">Chaining Effects</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">Chaining Effects</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</target>
          </segment>
        </unit>
        <unit id="117">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="117">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">Animation Support</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">Animation Support</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</target>
          </segment>
        </unit>
        <unit id="118">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="118">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">Effect properties – Constant vs. Animated</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">Effect properties – Constant vs. Animated</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</target>
          </segment>
        </unit>
        <unit id="119">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="119">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">Multiple Effect Instances with Independent Properties</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">Multiple Effect Instances with Independent Properties</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</target>
          </segment>
        </unit>
        <unit id="120">
          <segment state="initial" id="120">
            <source xml:space="preserve">Effect Library</source>
            <target xml:space="preserve">Effect Library</target>
          </segment>
        </unit>
        <unit id="121">
          <segment state="initial" id="121">
            <source xml:space="preserve">Currently composition supports the following effects:</source>
            <target xml:space="preserve">Currently composition supports the following effects:</target>
          </segment>
        </unit>
        <unit id="122">
          <segment state="initial" id="122">
            <source xml:space="preserve">Effect</source>
            <target xml:space="preserve">Effect</target>
          </segment>
        </unit>
        <unit id="123">
          <segment state="initial" id="123">
            <source xml:space="preserve">Description</source>
            <target xml:space="preserve">Description</target>
          </segment>
        </unit>
        <unit id="124">
          <segment state="initial" id="124">
            <source xml:space="preserve">2D affine transform</source>
            <target xml:space="preserve">2D affine transform</target>
          </segment>
        </unit>
        <unit id="125">
          <segment state="initial" id="125">
            <source xml:space="preserve">Applies a 2D affine transform matrix to an image.</source>
            <target xml:space="preserve">Applies a 2D affine transform matrix to an image.</target>
          </segment>
        </unit>
        <unit id="126">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="126">
            <source xml:space="preserve">We used this effect to animate alpha mask in our effect <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">samples</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>.</source>
            <target xml:space="preserve">We used this effect to animate alpha mask in our effect <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">samples</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>.</target>
          </segment>
        </unit>
        <unit id="127">
          <segment state="initial" id="127">
            <source xml:space="preserve">Arithmetic composite</source>
            <target xml:space="preserve">Arithmetic composite</target>
          </segment>
        </unit>
        <unit id="128">
          <segment state="initial" id="128">
            <source xml:space="preserve">Combines two images using a flexible equation.</source>
            <target xml:space="preserve">Combines two images using a flexible equation.</target>
          </segment>
        </unit>
        <unit id="129">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="129">
            <source xml:space="preserve">We used arithmetic composite to create a crossfade effect in our <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">samples</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>.</source>
            <target xml:space="preserve">We used arithmetic composite to create a crossfade effect in our <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">samples</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>.</target>
          </segment>
        </unit>
        <unit id="130">
          <segment state="initial" id="130">
            <source xml:space="preserve">Blend effect</source>
            <target xml:space="preserve">Blend effect</target>
          </segment>
        </unit>
        <unit id="131">
          <segment state="initial" id="131">
            <source xml:space="preserve">Creates a blend effect that combines two images.</source>
            <target xml:space="preserve">Creates a blend effect that combines two images.</target>
          </segment>
        </unit>
        <unit id="132">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="132">
            <source xml:space="preserve">Composition provides 21 of the 26 <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">blend modes</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> supported in Win2D.</source>
            <target xml:space="preserve">Composition provides 21 of the 26 <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">blend modes</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> supported in Win2D.</target>
          </segment>
        </unit>
        <unit id="133">
          <segment state="initial" id="133">
            <source xml:space="preserve">Color source</source>
            <target xml:space="preserve">Color source</target>
          </segment>
        </unit>
        <unit id="134">
          <segment state="initial" id="134">
            <source xml:space="preserve">Generates an image containing a solid color.</source>
            <target xml:space="preserve">Generates an image containing a solid color.</target>
          </segment>
        </unit>
        <unit id="135">
          <segment state="initial" id="135">
            <source xml:space="preserve">Composite</source>
            <target xml:space="preserve">Composite</target>
          </segment>
        </unit>
        <unit id="136">
          <segment state="initial" id="136">
            <source xml:space="preserve">Combines two images.</source>
            <target xml:space="preserve">Combines two images.</target>
          </segment>
        </unit>
        <unit id="137">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="137">
            <source xml:space="preserve">Composition provides all 13 <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">composite modes</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> supported in Win2D.</source>
            <target xml:space="preserve">Composition provides all 13 <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">composite modes</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> supported in Win2D.</target>
          </segment>
        </unit>
        <unit id="138">
          <segment state="initial" id="138">
            <source xml:space="preserve">Contrast</source>
            <target xml:space="preserve">Contrast</target>
          </segment>
        </unit>
        <unit id="139">
          <segment state="initial" id="139">
            <source xml:space="preserve">Increases or decreases the contrast of an image.</source>
            <target xml:space="preserve">Increases or decreases the contrast of an image.</target>
          </segment>
        </unit>
        <unit id="140">
          <segment state="initial" id="140">
            <source xml:space="preserve">Exposure</source>
            <target xml:space="preserve">Exposure</target>
          </segment>
        </unit>
        <unit id="141">
          <segment state="initial" id="141">
            <source xml:space="preserve">Increases or decreases the exposure of an image.</source>
            <target xml:space="preserve">Increases or decreases the exposure of an image.</target>
          </segment>
        </unit>
        <unit id="142">
          <segment state="initial" id="142">
            <source xml:space="preserve">Grayscale</source>
            <target xml:space="preserve">Grayscale</target>
          </segment>
        </unit>
        <unit id="143">
          <segment state="initial" id="143">
            <source xml:space="preserve">Converts an image to monochromatic gray.</source>
            <target xml:space="preserve">Converts an image to monochromatic gray.</target>
          </segment>
        </unit>
        <unit id="144">
          <segment state="initial" id="144">
            <source xml:space="preserve">Gamma transfer</source>
            <target xml:space="preserve">Gamma transfer</target>
          </segment>
        </unit>
        <unit id="145">
          <segment state="initial" id="145">
            <source xml:space="preserve">Alters the colors of an image by applying a per-channel gamma transfer function.</source>
            <target xml:space="preserve">Alters the colors of an image by applying a per-channel gamma transfer function.</target>
          </segment>
        </unit>
        <unit id="146">
          <segment state="initial" id="146">
            <source xml:space="preserve">Hue rotate</source>
            <target xml:space="preserve">Hue rotate</target>
          </segment>
        </unit>
        <unit id="147">
          <segment state="initial" id="147">
            <source xml:space="preserve">Alters the color of an image by rotating its hue values.</source>
            <target xml:space="preserve">Alters the color of an image by rotating its hue values.</target>
          </segment>
        </unit>
        <unit id="148">
          <segment state="initial" id="148">
            <source xml:space="preserve">Invert</source>
            <target xml:space="preserve">Invert</target>
          </segment>
        </unit>
        <unit id="149">
          <segment state="initial" id="149">
            <source xml:space="preserve">Inverts the colors of an image.</source>
            <target xml:space="preserve">Inverts the colors of an image.</target>
          </segment>
        </unit>
        <unit id="150">
          <segment state="initial" id="150">
            <source xml:space="preserve">Saturate</source>
            <target xml:space="preserve">Saturate</target>
          </segment>
        </unit>
        <unit id="151">
          <segment state="initial" id="151">
            <source xml:space="preserve">Alters the saturation of an image.</source>
            <target xml:space="preserve">Alters the saturation of an image.</target>
          </segment>
        </unit>
        <unit id="152">
          <segment state="initial" id="152">
            <source xml:space="preserve">Sepia</source>
            <target xml:space="preserve">Sepia</target>
          </segment>
        </unit>
        <unit id="153">
          <segment state="initial" id="153">
            <source xml:space="preserve">Converts an image to sepia tones.</source>
            <target xml:space="preserve">Converts an image to sepia tones.</target>
          </segment>
        </unit>
        <unit id="154">
          <segment state="initial" id="154">
            <source xml:space="preserve">Temperature and tint</source>
            <target xml:space="preserve">Temperature and tint</target>
          </segment>
        </unit>
        <unit id="155">
          <segment state="initial" id="155">
            <source xml:space="preserve">Adjusts the temperature and/or tint of an image.</source>
            <target xml:space="preserve">Adjusts the temperature and/or tint of an image.</target>
          </segment>
        </unit>
        <unit id="156">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="156">
            <source xml:space="preserve">See Win2D’s <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Microsoft.Graphics.Canvas.Effects</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> Namespace for more detailed information.</source>
            <target xml:space="preserve">See Win2D’s <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Microsoft.Graphics.Canvas.Effects</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> Namespace for more detailed information.</target>
          </segment>
        </unit>
        <unit id="157">
          <segment state="initial" id="157">
            <source xml:space="preserve">Effects not supported in composition are noted as \[NoComposition\].</source>
            <target xml:space="preserve">Effects not supported in composition are noted as \[NoComposition\].</target>
          </segment>
        </unit>
        <unit id="158">
          <segment state="initial" id="158">
            <source xml:space="preserve">Chaining Effects</source>
            <target xml:space="preserve">Chaining Effects</target>
          </segment>
        </unit>
        <unit id="159">
          <segment state="initial" id="159">
            <source xml:space="preserve">Effects can be chained, allowing an application to simultaneously use multiple effects on an image.</source>
            <target xml:space="preserve">Effects can be chained, allowing an application to simultaneously use multiple effects on an image.</target>
          </segment>
        </unit>
        <unit id="160">
          <segment state="initial" id="160">
            <source xml:space="preserve">Effect graphs can support multiple effects that can refer to one and other.</source>
            <target xml:space="preserve">Effect graphs can support multiple effects that can refer to one and other.</target>
          </segment>
        </unit>
        <unit id="161">
          <segment state="initial" id="161">
            <source xml:space="preserve">When describing your effect, simply add an effect as input to your effect.</source>
            <target xml:space="preserve">When describing your effect, simply add an effect as input to your effect.</target>
          </segment>
        </unit>
        <unit id="162">
          <segment state="initial" id="162">
            <source xml:space="preserve">The example above describes an arithmetic composite effect which has two inputs.</source>
            <target xml:space="preserve">The example above describes an arithmetic composite effect which has two inputs.</target>
          </segment>
        </unit>
        <unit id="163">
          <segment state="initial" id="163">
            <source xml:space="preserve">The second input has a saturation effect with a .5 saturation property.</source>
            <target xml:space="preserve">The second input has a saturation effect with a .5 saturation property.</target>
          </segment>
        </unit>
        <unit id="164">
          <segment state="initial" id="164">
            <source xml:space="preserve">Animation Support</source>
            <target xml:space="preserve">Animation Support</target>
          </segment>
        </unit>
        <unit id="165">
          <segment state="initial" id="165">
            <source xml:space="preserve">Effect properties support animation, during effect compilation you can specify effect properties can be animated and which can be "baked in" as constants.</source>
            <target xml:space="preserve">Effect properties support animation, during effect compilation you can specify effect properties can be animated and which can be "baked in" as constants.</target>
          </segment>
        </unit>
        <unit id="166">
          <segment state="initial" id="166">
            <source xml:space="preserve">The animatable properties are specified through strings of the form “effect name.property name”.</source>
            <target xml:space="preserve">The animatable properties are specified through strings of the form “effect name.property name”.</target>
          </segment>
        </unit>
        <unit id="167">
          <segment state="initial" id="167">
            <source xml:space="preserve">These properties can be animated independently over multiple instantiations of the effect.</source>
            <target xml:space="preserve">These properties can be animated independently over multiple instantiations of the effect.</target>
          </segment>
        </unit>
        <unit id="168">
          <segment state="initial" id="168">
            <source xml:space="preserve">Effect properties – Constant vs Animated</source>
            <target xml:space="preserve">Effect properties – Constant vs Animated</target>
          </segment>
        </unit>
        <unit id="169">
          <originalData>
            <data id="id1">&lt;html&gt;</data>
            <data id="id2">&lt;/html&gt;</data>
            <data id="id3">&lt;html&gt;</data>
            <data id="id4">&lt;/html&gt;</data>
          </originalData>
          <segment state="initial" id="169">
            <source xml:space="preserve">During effect compilation you can specify effect properties as dynamic or as properties that are "baked in" as constants. The dynamic properties are specified through strings of the form “<pc dataRefEnd="id2" dataRefStart="id1" id="2"></pc>.<pc dataRefEnd="id4" dataRefStart="id3" id="4"></pc>”. The dynamic properties can be set to a specific value or can be animated using the composition animation system.</source>
            <target xml:space="preserve">During effect compilation you can specify effect properties as dynamic or as properties that are "baked in" as constants. The dynamic properties are specified through strings of the form “<pc dataRefEnd="id2" dataRefStart="id1" id="2"></pc>.<pc dataRefEnd="id4" dataRefStart="id3" id="4"></pc>”. The dynamic properties can be set to a specific value or can be animated using the composition animation system.</target>
          </segment>
        </unit>
        <unit id="170">
          <segment state="initial" id="170">
            <source xml:space="preserve">When compiling the effect description above, you have the flexibility of either baking in saturation to be equal to 0.5 or making it dynamic and setting it dynamically or animating it.</source>
            <target xml:space="preserve">When compiling the effect description above, you have the flexibility of either baking in saturation to be equal to 0.5 or making it dynamic and setting it dynamically or animating it.</target>
          </segment>
        </unit>
        <unit id="171">
          <segment state="initial" id="171">
            <source xml:space="preserve">Compiling an effect with saturation baked in:</source>
            <target xml:space="preserve">Compiling an effect with saturation baked in:</target>
          </segment>
        </unit>
        <unit id="172">
          <segment state="initial" id="172">
            <source xml:space="preserve">Compiling an effect with dynamic saturation:</source>
            <target xml:space="preserve">Compiling an effect with dynamic saturation:</target>
          </segment>
        </unit>
        <unit id="173">
          <segment state="initial" id="173">
            <source xml:space="preserve">The saturation property of the effect above can then be either set to a static value or animated using either Expression or ScalarKeyFrame animations.</source>
            <target xml:space="preserve">The saturation property of the effect above can then be either set to a static value or animated using either Expression or ScalarKeyFrame animations.</target>
          </segment>
        </unit>
        <unit id="174">
          <segment state="initial" id="174">
            <source xml:space="preserve">You can create a ScalarKeyFrame that will be used to animate the Saturation property of an effect like this:</source>
            <target xml:space="preserve">You can create a ScalarKeyFrame that will be used to animate the Saturation property of an effect like this:</target>
          </segment>
        </unit>
        <unit id="175">
          <segment state="initial" id="175">
            <source xml:space="preserve">Start the animation on the Saturation property of the effect like this:</source>
            <target xml:space="preserve">Start the animation on the Saturation property of the effect like this:</target>
          </segment>
        </unit>
        <unit id="176">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;link&gt;</data>
            <data id="id8">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="176">
            <source xml:space="preserve">See the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Desaturation - Animation sample</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> for effect properties animated with key frames and the <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">AlphaMask sample</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc> for use of effects and expressions.</source>
            <target xml:space="preserve">See the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Desaturation - Animation sample</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> for effect properties animated with key frames and the <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">AlphaMask sample</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc> for use of effects and expressions.</target>
          </segment>
        </unit>
        <unit id="177">
          <segment state="initial" id="177">
            <source xml:space="preserve">Multiple Effect Instances with Independent Properties</source>
            <target xml:space="preserve">Multiple Effect Instances with Independent Properties</target>
          </segment>
        </unit>
        <unit id="178">
          <segment state="initial" id="178">
            <source xml:space="preserve">By specifying that a parameter should be dynamic during effect compilation, the parameter can then be changed on a per-effect instance basis.</source>
            <target xml:space="preserve">By specifying that a parameter should be dynamic during effect compilation, the parameter can then be changed on a per-effect instance basis.</target>
          </segment>
        </unit>
        <unit id="179">
          <segment state="initial" id="179">
            <source xml:space="preserve">This allows two Visuals to use the same effect but be rendered with different effect properties.</source>
            <target xml:space="preserve">This allows two Visuals to use the same effect but be rendered with different effect properties.</target>
          </segment>
        </unit>
        <unit id="180">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="180">
            <source xml:space="preserve">See the ColorSource and Blend <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">sample</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> for more information.</source>
            <target xml:space="preserve">See the ColorSource and Blend <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">sample</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> for more information.</target>
          </segment>
        </unit>
        <unit id="181">
          <segment state="initial" id="181">
            <source xml:space="preserve">Getting Started with Composition Effects</source>
            <target xml:space="preserve">Getting Started with Composition Effects</target>
          </segment>
        </unit>
        <unit id="182">
          <segment state="initial" id="182">
            <source xml:space="preserve">This quick start tutorial shows you how to make use of some of the basic capabilities of effects.</source>
            <target xml:space="preserve">This quick start tutorial shows you how to make use of some of the basic capabilities of effects.</target>
          </segment>
        </unit>
        <unit id="183">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="183">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">Installing Visual Studio</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">Installing Visual Studio</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</target>
          </segment>
        </unit>
        <unit id="184">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="184">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">Creating a new project</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">Creating a new project</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</target>
          </segment>
        </unit>
        <unit id="185">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="185">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">Installing Win2D</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">Installing Win2D</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</target>
          </segment>
        </unit>
        <unit id="186">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="186">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">Setting your Composition Basics</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">Setting your Composition Basics</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</target>
          </segment>
        </unit>
        <unit id="187">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="187">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">Creating a CompositionSurface Brush</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">Creating a CompositionSurface Brush</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</target>
          </segment>
        </unit>
        <unit id="188">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="188">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">Creating, Compiling and Applying Effects</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">Creating, Compiling and Applying Effects</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</target>
          </segment>
        </unit>
        <unit id="189">
          <segment state="initial" id="189">
            <source xml:space="preserve">Installing Visual Studio</source>
            <target xml:space="preserve">Installing Visual Studio</target>
          </segment>
        </unit>
        <unit id="190">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="190">
            <source xml:space="preserve">If you don't have a supported version of Visual Studio installed, go to the Visual Studio Downloads page <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">here</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>.</source>
            <target xml:space="preserve">If you don't have a supported version of Visual Studio installed, go to the Visual Studio Downloads page <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">here</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>.</target>
          </segment>
        </unit>
        <unit id="191">
          <segment state="initial" id="191">
            <source xml:space="preserve">Creating a new project</source>
            <target xml:space="preserve">Creating a new project</target>
          </segment>
        </unit>
        <unit id="192">
          <segment state="initial" id="192">
            <source xml:space="preserve">Go to File-&gt;New-&gt;Project...</source>
            <target xml:space="preserve">Go to File-&gt;New-&gt;Project...</target>
          </segment>
        </unit>
        <unit id="193">
          <segment state="initial" id="193">
            <source xml:space="preserve">Select 'Visual C\#'</source>
            <target xml:space="preserve">Select 'Visual C\#'</target>
          </segment>
        </unit>
        <unit id="194">
          <segment state="initial" id="194">
            <source xml:space="preserve">Create a 'Blank App (Windows Universal)' (Visual Studio 2015)</source>
            <target xml:space="preserve">Create a 'Blank App (Windows Universal)' (Visual Studio 2015)</target>
          </segment>
        </unit>
        <unit id="195">
          <segment state="initial" id="195">
            <source xml:space="preserve">Enter a project name of your choosing</source>
            <target xml:space="preserve">Enter a project name of your choosing</target>
          </segment>
        </unit>
        <unit id="196">
          <segment state="initial" id="196">
            <source xml:space="preserve">Click 'OK'</source>
            <target xml:space="preserve">Click 'OK'</target>
          </segment>
        </unit>
        <unit id="197">
          <segment state="initial" id="197">
            <source xml:space="preserve">Installing Win2D</source>
            <target xml:space="preserve">Installing Win2D</target>
          </segment>
        </unit>
        <unit id="198">
          <segment state="initial" id="198">
            <source xml:space="preserve">Win2D is released as a Nuget.org package and needs to be installed before you can use effects.</source>
            <target xml:space="preserve">Win2D is released as a Nuget.org package and needs to be installed before you can use effects.</target>
          </segment>
        </unit>
        <unit id="199">
          <segment state="initial" id="199">
            <source xml:space="preserve">There are two package versions, one for Windows 10 and one for Windows 8.1.</source>
            <target xml:space="preserve">There are two package versions, one for Windows 10 and one for Windows 8.1.</target>
          </segment>
        </unit>
        <unit id="200">
          <segment state="initial" id="200">
            <source xml:space="preserve">For Composition effects you’ll use the Windows 10 version.</source>
            <target xml:space="preserve">For Composition effects you’ll use the Windows 10 version.</target>
          </segment>
        </unit>
        <unit id="201">
          <segment state="initial" id="201">
            <source xml:space="preserve">Launch the NuGet Package Manager by going to Tools → NuGet Package Manager → Manage NuGet Packages for Solution.</source>
            <target xml:space="preserve">Launch the NuGet Package Manager by going to Tools → NuGet Package Manager → Manage NuGet Packages for Solution.</target>
          </segment>
        </unit>
        <unit id="202">
          <segment state="initial" id="202">
            <source xml:space="preserve">Search for "Win2D" and select the appropriate package for your target version of Windows.</source>
            <target xml:space="preserve">Search for "Win2D" and select the appropriate package for your target version of Windows.</target>
          </segment>
        </unit>
        <unit id="203">
          <segment state="initial" id="203">
            <source xml:space="preserve">Because Windows.UI.</source>
            <target xml:space="preserve">Because Windows.UI.</target>
          </segment>
        </unit>
        <unit id="204">
          <segment state="initial" id="204">
            <source xml:space="preserve">Composition supports Windows 10 (not 8.1), select Win2D.uwp.</source>
            <target xml:space="preserve">Composition supports Windows 10 (not 8.1), select Win2D.uwp.</target>
          </segment>
        </unit>
        <unit id="205">
          <segment state="initial" id="205">
            <source xml:space="preserve">Accept the license agreement</source>
            <target xml:space="preserve">Accept the license agreement</target>
          </segment>
        </unit>
        <unit id="206">
          <segment state="initial" id="206">
            <source xml:space="preserve">Click 'Close'</source>
            <target xml:space="preserve">Click 'Close'</target>
          </segment>
        </unit>
        <unit id="207">
          <segment state="initial" id="207">
            <source xml:space="preserve">In the next few steps we will use composition API’s to apply a saturation effect to this cat image which will remove all saturation.</source>
            <target xml:space="preserve">In the next few steps we will use composition API’s to apply a saturation effect to this cat image which will remove all saturation.</target>
          </segment>
        </unit>
        <unit id="208">
          <segment state="initial" id="208">
            <source xml:space="preserve">In this model the effect is created and then applied to an image.</source>
            <target xml:space="preserve">In this model the effect is created and then applied to an image.</target>
          </segment>
        </unit>
        <unit id="209">
          <originalData>
            <data id="id1">&lt;linkText&gt;</data>
            <data id="id2">&lt;/linkText&gt;</data>
          </originalData>
          <segment state="initial" id="209">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Source image</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Source image</pc>
						</target>
          </segment>
        </unit>
        <unit id="210">
          <segment state="initial" id="210">
            <source xml:space="preserve">Setting your Composition Basics</source>
            <target xml:space="preserve">Setting your Composition Basics</target>
          </segment>
        </unit>
        <unit id="211">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="211">
            <source xml:space="preserve">See the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Composition Visual Tree Sample</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> on our GitHub for an example of how to set up Windows.UI.Composition Compositor, root ContainerVisual, and associate with the Core Window.</source>
            <target xml:space="preserve">See the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Composition Visual Tree Sample</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> on our GitHub for an example of how to set up Windows.UI.Composition Compositor, root ContainerVisual, and associate with the Core Window.</target>
          </segment>
        </unit>
        <unit id="212">
          <segment state="initial" id="212">
            <source xml:space="preserve">Creating a CompositionSurface Brush</source>
            <target xml:space="preserve">Creating a CompositionSurface Brush</target>
          </segment>
        </unit>
        <unit id="213">
          <segment state="initial" id="213">
            <source xml:space="preserve">Creating, Compiling and Applying Effects</source>
            <target xml:space="preserve">Creating, Compiling and Applying Effects</target>
          </segment>
        </unit>
        <unit id="214">
          <segment state="initial" id="214">
            <source xml:space="preserve">) Create the graphics effect</source>
            <target xml:space="preserve">) Create the graphics effect</target>
          </segment>
        </unit>
        <unit id="215">
          <segment state="initial" id="215">
            <source xml:space="preserve">) Compile the effect and create effect brush</source>
            <target xml:space="preserve">) Compile the effect and create effect brush</target>
          </segment>
        </unit>
        <unit id="216">
          <segment state="initial" id="216">
            <source xml:space="preserve">) Create a SpriteVIsual in the composition tree and apply the effect</source>
            <target xml:space="preserve">) Create a SpriteVIsual in the composition tree and apply the effect</target>
          </segment>
        </unit>
        <unit id="217">
          <segment state="initial" id="217">
            <source xml:space="preserve">) Create your image source to load.</source>
            <target xml:space="preserve">) Create your image source to load.</target>
          </segment>
        </unit>
        <unit id="218">
          <segment state="initial" id="218">
            <source xml:space="preserve">) Size and brush the surface on the SpriteVisual</source>
            <target xml:space="preserve">) Size and brush the surface on the SpriteVisual</target>
          </segment>
        </unit>
        <unit id="219">
          <segment state="initial" id="219">
            <source xml:space="preserve">) Run your app – your results should be a desaturated cat:</source>
            <target xml:space="preserve">) Run your app – your results should be a desaturated cat:</target>
          </segment>
        </unit>
        <unit id="220">
          <originalData>
            <data id="id1">&lt;linkText&gt;</data>
            <data id="id2">&lt;/linkText&gt;</data>
          </originalData>
          <segment state="initial" id="220">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Desaturated image</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Desaturated image</pc>
						</target>
          </segment>
        </unit>
        <unit id="221">
          <segment state="initial" id="221">
            <source xml:space="preserve">More Information</source>
            <target xml:space="preserve">More Information</target>
          </segment>
        </unit>
        <unit id="222">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="222">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">Microsoft – Composition GitHub</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">Microsoft – Composition GitHub</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</target>
          </segment>
        </unit>
        <unit id="223">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="223">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**Windows.UI.Composition**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**Windows.UI.Composition**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</target>
          </segment>
        </unit>
        <unit id="224">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="224">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">Windows Composition team on Twitter</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">Windows Composition team on Twitter</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</target>
          </segment>
        </unit>
        <unit id="225">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="225">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">Composition Overview</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">Composition Overview</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</target>
          </segment>
        </unit>
        <unit id="226">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="226">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">Visual Tree Basics</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">Visual Tree Basics</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</target>
          </segment>
        </unit>
        <unit id="227">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="227">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">Composition Brushes</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">Composition Brushes</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</target>
          </segment>
        </unit>
        <unit id="228">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="228">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">Animation Overview</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">Animation Overview</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</target>
          </segment>
        </unit>
        <unit id="229">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="229">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">Composition native DirectX and Direct2D interoperation with BeginDraw and EndDraw</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">Composition native DirectX and Direct2D interoperation with BeginDraw and EndDraw</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</target>
          </segment>
        </unit>
      </group>
    </group>
  </file>
</xliff>