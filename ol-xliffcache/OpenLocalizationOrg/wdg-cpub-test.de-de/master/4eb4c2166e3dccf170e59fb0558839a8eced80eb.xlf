<?xml version="1.0" encoding="utf-8"?>
<xliff srcLang="en-us" trgLang="de-de" version="2.0" xmlns="urn:oasis:names:tc:xliff:document:2.0" xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">4eb4c2166e3dccf170e59fb0558839a8eced80eb</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <group id="101">
        <unit id="101">
          <segment state="initial" id="101">
            <source>Creating a New Device Function Driver</source>
          </segment>
        </unit>
        <unit id="102">
          <segment state="initial" id="102">
            <source>In this topic we explain how to use Visual Studio to start writing a new device function driver.</source>
          </segment>
        </unit>
        <unit id="103">
          <segment state="initial" id="103">
            <source>Device function drivers are different from filter drivers, software drivers, and file system drivers, which we cover in other topics.</source>
          </segment>
        </unit>
        <unit id="104">
          <originalData>
            <data id="id1">&lt;linkText&gt;</data>
            <data id="id2">&lt;/linkText&gt;</data>
            <data id="id3">&lt;title&gt;</data>
            <data id="id4">&lt;/title&gt;</data>
            <data id="id5">&lt;link&gt;</data>
            <data id="id6">&lt;/link&gt;</data>
            <data id="id7">&lt;linkText&gt;</data>
            <data id="id8">&lt;/linkText&gt;</data>
            <data id="id9">&lt;title&gt;</data>
            <data id="id10">&lt;/title&gt;</data>
            <data id="id11">&lt;link&gt;</data>
            <data id="id12">&lt;/link&gt;</data>
            <data id="id13">&lt;linkText&gt;</data>
            <data id="id14">&lt;/linkText&gt;</data>
            <data id="id15">&lt;title&gt;</data>
            <data id="id16">&lt;/title&gt;</data>
            <data id="id17">&lt;link&gt;</data>
            <data id="id18">&lt;/link&gt;</data>
          </originalData>
          <segment state="initial" id="104">
            <source>To learn about device function drivers and how they differ from other types of drivers, see <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId2">What is a Driver?</pc><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId3"></pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId1"></pc>, <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId2">Choosing a Driver Model</pc><pc dataRefEnd="id10" dataRefStart="id9" id="4CapsExtId3"></pc><pc dataRefEnd="id12" dataRefStart="id11" id="4CapsExtId1"></pc>, and <pc dataRefEnd="id14" dataRefStart="id13" id="6CapsExtId2">Device Nodes and Device Stacks</pc><pc dataRefEnd="id16" dataRefStart="id15" id="6CapsExtId3"></pc><pc dataRefEnd="id18" dataRefStart="id17" id="6CapsExtId1"></pc>.</source>
          </segment>
        </unit>
        <unit id="105">
          <originalData>
            <data id="id1">&lt;linkText&gt;</data>
            <data id="id2">&lt;/linkText&gt;</data>
            <data id="id3">&lt;title&gt;</data>
            <data id="id4">&lt;/title&gt;</data>
            <data id="id5">&lt;link&gt;</data>
            <data id="id6">&lt;/link&gt;</data>
          </originalData>
          <segment state="initial" id="105">
            <source>To begin, first determine where your device fits in the list of technologies described in <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId2">Device and Driver Technologies</pc><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId3"></pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId1"></pc>.</source>
          </segment>
        </unit>
        <unit id="106">
          <segment state="initial" id="106">
            <source>To learn about which driver models are available for your device, see the documentation for that particular technology.</source>
          </segment>
        </unit>
        <unit id="107">
          <segment state="initial" id="107">
            <source>The recommended driver model varies from one technology to the next.</source>
          </segment>
        </unit>
        <unit id="108">
          <segment state="initial" id="108">
            <source>For some technologies, the documentation recommends using the User Mode Driver Framework (UMDF) or the Kernel Mode Driver Framework (KMDF).</source>
          </segment>
        </unit>
        <unit id="109">
          <segment state="initial" id="109">
            <source>For other technologies, the documentation explains how to create a minidriver that is part of a driver pair.</source>
          </segment>
        </unit>
        <unit id="110">
          <segment state="initial" id="110">
            <source>Minidrivers go by a variety of names, including miniport and miniclass.</source>
          </segment>
        </unit>
        <unit id="111">
          <segment state="initial" id="111">
            <source>Next, determine which of the following cases describes your driver model recommendation and follow the steps:</source>
          </segment>
        </unit>
        <unit id="112">
          <originalData>
            <data id="id1">&lt;html&gt;</data>
            <data id="id2">&lt;/html&gt;</data>
            <data id="id3">&lt;html&gt;</data>
            <data id="id4">&lt;/html&gt;</data>
            <data id="id5">&lt;html&gt;</data>
            <data id="id6">&lt;/html&gt;</data>
            <data id="id7">&lt;html&gt;</data>
            <data id="id8">&lt;/html&gt;</data>
            <data id="id9">&lt;html&gt;</data>
            <data id="id10">&lt;/html&gt;</data>
            <data id="id11">&lt;html&gt;</data>
            <data id="id12">&lt;/html&gt;</data>
          </originalData>
          <segment state="initial" id="112">
            <source>
              <pc dataRefEnd="id2" dataRefStart="id1" id="1">
              </pc>
              <pc dataRefEnd="id4" dataRefStart="id3" id="2">
              </pc>
              <pc dataRefEnd="id6" dataRefStart="id5" id="3">
              </pc>
              <pc dataRefEnd="id8" dataRefStart="id7" id="4">
              </pc>
              <pc dataRefEnd="id10" dataRefStart="id9" id="5">
              </pc>
              <pc dataRefEnd="id12" dataRefStart="id11" id="6">
              </pc>Case 1: The documentation for your technology recommends UMDF.</source>
          </segment>
        </unit>
        <unit id="113">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;strong&gt;</data>
            <data id="id4">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="113">
            <source>In Visual Studio, on the <pc dataRefEnd="id2" dataRefStart="id1" id="2">File</pc> menu, choose <pc dataRefEnd="id4" dataRefStart="id3" id="4">New | Project</pc>.</source>
          </segment>
        </unit>
        <unit id="114">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="114">
            <source>In the New Project dialog box, in the left pane, locate and select <pc dataRefEnd="id2" dataRefStart="id1" id="2">Visual C++ | Windows Driver | WDF</pc>.</source>
          </segment>
        </unit>
        <unit id="115">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="115">
            <source>In the middle pane, select <pc dataRefEnd="id2" dataRefStart="id1" id="2">User Mode Driver (UMDF)</pc>.</source>
          </segment>
        </unit>
        <unit id="116">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;strong&gt;</data>
            <data id="id4">&lt;/strong&gt;</data>
            <data id="id5">&lt;strong&gt;</data>
            <data id="id6">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="116">
            <source>Fill in the <pc dataRefEnd="id2" dataRefStart="id1" id="2">Name</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="4">Location</pc> boxes, and click <pc dataRefEnd="id6" dataRefStart="id5" id="6">OK</pc>.</source>
          </segment>
        </unit>
        <unit id="117">
          <originalData>
            <data id="id1">&lt;linkText&gt;</data>
            <data id="id2">&lt;/linkText&gt;</data>
            <data id="id3">&lt;title&gt;</data>
            <data id="id4">&lt;/title&gt;</data>
            <data id="id5">&lt;link&gt;</data>
            <data id="id6">&lt;/link&gt;</data>
          </originalData>
          <segment state="initial" id="117">
            <source>For more details, see <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId2">Writing a UMDF Driver Based on a Template</pc><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId3"></pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId1"></pc>.</source>
          </segment>
        </unit>
        <unit id="118">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="118">
            <source>
              <pc dataRefEnd="id2" dataRefStart="id1" id="1">Note</pc>  When you create a new UMDF driver, you must select a driver name that has 32 characters or less.</source>
          </segment>
        </unit>
        <unit id="119">
          <segment state="initial" id="119">
            <source>This length limit is defined in wdfglobals.h.</source>
          </segment>
        </unit>
        <unit id="120">
          <segment state="initial" id="120">
            <source>At this point, you have a driver project that implements the general code required by most UMDF drivers.</source>
          </segment>
        </unit>
        <unit id="121">
          <segment state="initial" id="121">
            <source>Now you can supply the code that is specific to your device.</source>
          </segment>
        </unit>
        <unit id="122">
          <segment state="initial" id="122">
            <source>Refer to the documentation for your technology to learn about the interfaces that you need to implement.</source>
          </segment>
        </unit>
        <unit id="123">
          <originalData>
            <data id="id1">&lt;html&gt;</data>
            <data id="id2">&lt;/html&gt;</data>
            <data id="id3">&lt;html&gt;</data>
            <data id="id4">&lt;/html&gt;</data>
            <data id="id5">&lt;html&gt;</data>
            <data id="id6">&lt;/html&gt;</data>
            <data id="id7">&lt;html&gt;</data>
            <data id="id8">&lt;/html&gt;</data>
            <data id="id9">&lt;html&gt;</data>
            <data id="id10">&lt;/html&gt;</data>
            <data id="id11">&lt;html&gt;</data>
            <data id="id12">&lt;/html&gt;</data>
          </originalData>
          <segment state="initial" id="123">
            <source>
              <pc dataRefEnd="id2" dataRefStart="id1" id="1">
              </pc>
              <pc dataRefEnd="id4" dataRefStart="id3" id="2">
              </pc>
              <pc dataRefEnd="id6" dataRefStart="id5" id="3">
              </pc>
              <pc dataRefEnd="id8" dataRefStart="id7" id="4">
              </pc>
              <pc dataRefEnd="id10" dataRefStart="id9" id="5">
              </pc>
              <pc dataRefEnd="id12" dataRefStart="id11" id="6">
              </pc>Case 2: The documentation for your technology recommends KMDF.</source>
          </segment>
        </unit>
        <unit id="124">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;strong&gt;</data>
            <data id="id4">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="124">
            <source>In Visual Studio, on the <pc dataRefEnd="id2" dataRefStart="id1" id="2">File</pc> menu, choose <pc dataRefEnd="id4" dataRefStart="id3" id="4">New | Project</pc>.</source>
          </segment>
        </unit>
        <unit id="125">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="125">
            <source>In the New Project dialog box, in the left pane, locate and select <pc dataRefEnd="id2" dataRefStart="id1" id="2">WDF</pc>.</source>
          </segment>
        </unit>
        <unit id="126">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="126">
            <source>In the middle pane, select <pc dataRefEnd="id2" dataRefStart="id1" id="2">Kernel Mode Driver (KMDF)</pc>.</source>
          </segment>
        </unit>
        <unit id="127">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;strong&gt;</data>
            <data id="id4">&lt;/strong&gt;</data>
            <data id="id5">&lt;strong&gt;</data>
            <data id="id6">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="127">
            <source>Fill in the <pc dataRefEnd="id2" dataRefStart="id1" id="2">Name</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="4">Location</pc> boxes, and click <pc dataRefEnd="id6" dataRefStart="id5" id="6">OK</pc>.</source>
          </segment>
        </unit>
        <unit id="128">
          <originalData>
            <data id="id1">&lt;linkText&gt;</data>
            <data id="id2">&lt;/linkText&gt;</data>
            <data id="id3">&lt;title&gt;</data>
            <data id="id4">&lt;/title&gt;</data>
            <data id="id5">&lt;link&gt;</data>
            <data id="id6">&lt;/link&gt;</data>
          </originalData>
          <segment state="initial" id="128">
            <source>For more details, see <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId2">Writing a KMDF Driver Based on a Template</pc><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId3"></pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId1"></pc>.</source>
          </segment>
        </unit>
        <unit id="129">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="129">
            <source>
              <pc dataRefEnd="id2" dataRefStart="id1" id="1">Note</pc>  When you create a new KMDF driver, you must select a driver name that has 32 characters or less.</source>
          </segment>
        </unit>
        <unit id="130">
          <segment state="initial" id="130">
            <source>This length limit is defined in wdfglobals.h.</source>
          </segment>
        </unit>
        <unit id="131">
          <segment state="initial" id="131">
            <source>At this point, you have a driver project that implements the general code required by most KMDF drivers.</source>
          </segment>
        </unit>
        <unit id="132">
          <segment state="initial" id="132">
            <source>Now you can supply the code that is specific to your device.</source>
          </segment>
        </unit>
        <unit id="133">
          <segment state="initial" id="133">
            <source>Refer to the documentation for your technology to learn about the methods that you need to implement.</source>
          </segment>
        </unit>
        <unit id="134">
          <originalData>
            <data id="id1">&lt;html&gt;</data>
            <data id="id2">&lt;/html&gt;</data>
            <data id="id3">&lt;html&gt;</data>
            <data id="id4">&lt;/html&gt;</data>
            <data id="id5">&lt;html&gt;</data>
            <data id="id6">&lt;/html&gt;</data>
            <data id="id7">&lt;html&gt;</data>
            <data id="id8">&lt;/html&gt;</data>
            <data id="id9">&lt;html&gt;</data>
            <data id="id10">&lt;/html&gt;</data>
            <data id="id11">&lt;html&gt;</data>
            <data id="id12">&lt;/html&gt;</data>
          </originalData>
          <segment state="initial" id="134">
            <source>
              <pc dataRefEnd="id2" dataRefStart="id1" id="1">
              </pc>
              <pc dataRefEnd="id4" dataRefStart="id3" id="2">
              </pc>
              <pc dataRefEnd="id6" dataRefStart="id5" id="3">
              </pc>
              <pc dataRefEnd="id8" dataRefStart="id7" id="4">
              </pc>
              <pc dataRefEnd="id10" dataRefStart="id9" id="5">
              </pc>
              <pc dataRefEnd="id12" dataRefStart="id11" id="6">
              </pc>Case 3: The documentation for your technology describes a minidriver model.</source>
          </segment>
        </unit>
        <unit id="135">
          <segment state="initial" id="135">
            <source>If your device technology has a miniport, miniclass, or some other kind of minidriver model, check to see if Visual Studio has a specific template for the model.</source>
          </segment>
        </unit>
        <unit id="136">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;strong&gt;</data>
            <data id="id4">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="136">
            <source>In Visual Studio, on the <pc dataRefEnd="id2" dataRefStart="id1" id="2">File</pc> menu, choose <pc dataRefEnd="id4" dataRefStart="id3" id="4">New | Project</pc>.</source>
          </segment>
        </unit>
        <unit id="137">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="137">
            <source>In the New Project dialog box, in the left pane, locate and select <pc dataRefEnd="id2" dataRefStart="id1" id="2">Templates | Visual C++ | Windows Driver</pc>.</source>
          </segment>
        </unit>
        <unit id="138">
          <segment state="initial" id="138">
            <source>Browse the list of installed templates to find a template for the type of minidriver you need to write.</source>
          </segment>
        </unit>
        <unit id="139">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;strong&gt;</data>
            <data id="id4">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="139">
            <source>If there is no template for your type of minidriver under <pc dataRefEnd="id2" dataRefStart="id1" id="2">Windows Driver</pc>, click <pc dataRefEnd="id4" dataRefStart="id3" id="4">Online</pc> and browse the templates that are available online.</source>
          </segment>
        </unit>
        <unit id="140">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;strong&gt;</data>
            <data id="id4">&lt;/strong&gt;</data>
            <data id="id5">&lt;strong&gt;</data>
            <data id="id6">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="140">
            <source>If you find a template for your type of minidriver, select the template, fill in the <pc dataRefEnd="id2" dataRefStart="id1" id="2">Name</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="4">Location</pc> boxes, and click <pc dataRefEnd="id6" dataRefStart="id5" id="6">OK</pc>.</source>
          </segment>
        </unit>
        <unit id="141">
          <segment state="initial" id="141">
            <source>At this point, you have a driver project that implements the general code required by your minidriver.</source>
          </segment>
        </unit>
        <unit id="142">
          <segment state="initial" id="142">
            <source>Now you can supply the code that is specific to your device.</source>
          </segment>
        </unit>
        <unit id="143">
          <segment state="initial" id="143">
            <source>Refer to the documentation for your technology to learn about the functions that you need to implement.</source>
          </segment>
        </unit>
        <unit id="144">
          <segment state="initial" id="144">
            <source>If your device technology has a minidriver model, and you are not able to find a specific template for your type of minidriver, the Windows Driver Model (WDM) template is most likely going to be your starting point.</source>
          </segment>
        </unit>
        <unit id="145">
          <segment state="initial" id="145">
            <source>Refer to your technology-specific documentation for guidance.</source>
          </segment>
        </unit>
        <unit id="146">
          <segment state="initial" id="146">
            <source>In rare cases, you can use KMDF to write a minidriver, but usually the starting point is WDM.</source>
          </segment>
        </unit>
        <unit id="147">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;strong&gt;</data>
            <data id="id4">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="147">
            <source>In Visual Studio, on the <pc dataRefEnd="id2" dataRefStart="id1" id="2">File</pc> menu, choose <pc dataRefEnd="id4" dataRefStart="id3" id="4">New | Project</pc>.</source>
          </segment>
        </unit>
        <unit id="148">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;strong&gt;</data>
            <data id="id4">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="148">
            <source>In Visual Studio, in the New Project dialog box, under <pc dataRefEnd="id2" dataRefStart="id1" id="2">Windows Driver</pc>, select <pc dataRefEnd="id4" dataRefStart="id3" id="4">WDM.</pc></source>
          </segment>
        </unit>
        <unit id="149">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;strong&gt;</data>
            <data id="id4">&lt;/strong&gt;</data>
            <data id="id5">&lt;strong&gt;</data>
            <data id="id6">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="149">
            <source>Fill in the <pc dataRefEnd="id2" dataRefStart="id1" id="2">Name</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="4">Location</pc> boxes, and click <pc dataRefEnd="id6" dataRefStart="id5" id="6">OK</pc>.</source>
          </segment>
        </unit>
        <unit id="150">
          <segment state="initial" id="150">
            <source>At this point, you have an empty WDM driver project.</source>
          </segment>
        </unit>
        <unit id="151">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="151">
            <source>In the Solution Explorer window, right-click your driver project, and choose <pc dataRefEnd="id2" dataRefStart="id1" id="2">Add | New Item</pc>.</source>
          </segment>
        </unit>
        <unit id="152">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;strong&gt;</data>
            <data id="id4">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="152">
            <source>In the Add New Item dialog box, select <pc dataRefEnd="id2" dataRefStart="id1" id="2">C++ File (.cpp)</pc>, enter a name for your file, and click <pc dataRefEnd="id4" dataRefStart="id3" id="4">OK</pc>.</source>
          </segment>
        </unit>
        <unit id="153">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;strong&gt;</data>
            <data id="id4">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="153">
            <source>
              <pc dataRefEnd="id2" dataRefStart="id1" id="1">Note</pc>  If you want to create a .c file instead of a .cpp file, enter a name that has the <pc dataRefEnd="id4" dataRefStart="id3" id="3">.c</pc> extension.</source>
          </segment>
        </unit>
        <unit id="154">
          <segment state="initial" id="154">
            <source>Refer to the documentation for your technology to learn about the functions that you need to implement.</source>
          </segment>
        </unit>
        <unit id="155">
          <segment state="initial" id="155">
            <source>As you implement and organize your functions, you might decide to add additional .cpp or .c files.</source>
          </segment>
        </unit>
      </group>
    </group>
    <group id="content">
      <group id="156" />
    </group>
  </file>
</xliff>