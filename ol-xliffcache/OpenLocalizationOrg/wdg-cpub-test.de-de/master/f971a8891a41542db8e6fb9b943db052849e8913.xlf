<?xml version="1.0" encoding="utf-8"?>
<xliff srcLang="en-us" trgLang="de-de" version="2.0" xmlns="urn:oasis:names:tc:xliff:document:2.0" xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">f971a8891a41542db8e6fb9b943db052849e8913</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <group id="101">
        <unit id="101">
          <segment state="initial" id="101">
            <source xml:space="preserve">Move and draw commands syntax</source>
            <target xml:space="preserve">Move and draw commands syntax</target>
          </segment>
        </unit>
        <unit id="102">
          <segment state="initial" id="102">
            <source xml:space="preserve">\[ Updated for UWP apps on Windows 10.</source>
            <target xml:space="preserve">\[ Updated for UWP apps on Windows 10.</target>
          </segment>
        </unit>
        <unit id="103">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="103">
            <source xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">archive</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> \]</source>
            <target xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">archive</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> \]</target>
          </segment>
        </unit>
        <unit id="104">
          <segment state="initial" id="104">
            <source xml:space="preserve">Learn about the move and draw commands (a mini-language) that you can use to specify path geometries as a XAML attribute value.</source>
            <target xml:space="preserve">Learn about the move and draw commands (a mini-language) that you can use to specify path geometries as a XAML attribute value.</target>
          </segment>
        </unit>
        <unit id="105">
          <segment state="initial" id="105">
            <source xml:space="preserve">Move and draw commands are used by many design and graphics tools that can output a vector graphic or shape, as a serialization and interchange format.</source>
            <target xml:space="preserve">Move and draw commands are used by many design and graphics tools that can output a vector graphic or shape, as a serialization and interchange format.</target>
          </segment>
        </unit>
        <unit id="106">
          <segment state="initial" id="106">
            <source xml:space="preserve">Properties that use move and draw command strings</source>
            <target xml:space="preserve">Properties that use move and draw command strings</target>
          </segment>
        </unit>
        <unit id="107">
          <segment state="initial" id="107">
            <source xml:space="preserve">The move and draw command syntax is supported by an internal type converter for XAML, which parses the commands and produces a run-time graphics representation.</source>
            <target xml:space="preserve">The move and draw command syntax is supported by an internal type converter for XAML, which parses the commands and produces a run-time graphics representation.</target>
          </segment>
        </unit>
        <unit id="108">
          <segment state="initial" id="108">
            <source xml:space="preserve">This representation is basically a finished set of vectors that is ready for presentation.</source>
            <target xml:space="preserve">This representation is basically a finished set of vectors that is ready for presentation.</target>
          </segment>
        </unit>
        <unit id="109">
          <segment state="initial" id="109">
            <source xml:space="preserve">The vectors themselves don't complete the presentation details; you'll still need to set other values on the elements.</source>
            <target xml:space="preserve">The vectors themselves don't complete the presentation details; you'll still need to set other values on the elements.</target>
          </segment>
        </unit>
        <unit id="110">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;link&gt;</data>
            <data id="id8">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id13">&lt;link&gt;</data>
            <data id="id14">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id19">&lt;strong&gt;</data>
            <data id="id20">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="110">
            <source xml:space="preserve">For a <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**Path**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> object you also need values for <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**Fill**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc>, <pc dataRefEnd="id14" dataRefStart="id13" id="6CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="6CapsExtId2">**Stroke**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="6CapsExtId3"></pc></pc>, and other properties, and then that <pc dataRefEnd="id20" dataRefStart="id19" id="8">Path</pc> must be connected to the visual tree somehow.</source>
            <target xml:space="preserve">For a <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**Path**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> object you also need values for <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**Fill**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc>, <pc dataRefEnd="id14" dataRefStart="id13" id="6CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="6CapsExtId2">**Stroke**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="6CapsExtId3"></pc></pc>, and other properties, and then that <pc dataRefEnd="id20" dataRefStart="id19" id="8">Path</pc> must be connected to the visual tree somehow.</target>
          </segment>
        </unit>
        <unit id="111">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;link&gt;</data>
            <data id="id8">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="111">
            <source xml:space="preserve">For a <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**PathIcon**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> object, set the <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**Foreground**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc> property.</source>
            <target xml:space="preserve">For a <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**PathIcon**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> object, set the <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**Foreground**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc> property.</target>
          </segment>
        </unit>
        <unit id="112">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;link&gt;</data>
            <data id="id8">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="112">
            <source xml:space="preserve">There are two properties in the Windows Runtime that can use a string representing move and draw commands: <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**Path.Data**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> and <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**PathIcon.Data**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc>.</source>
            <target xml:space="preserve">There are two properties in the Windows Runtime that can use a string representing move and draw commands: <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**Path.Data**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> and <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**PathIcon.Data**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc>.</target>
          </segment>
        </unit>
        <unit id="113">
          <segment state="initial" id="113">
            <source xml:space="preserve">If you set one of these properties by specifying move and draw commands, you typically set it as a XAML attribute value along with other required attributes of that element.</source>
            <target xml:space="preserve">If you set one of these properties by specifying move and draw commands, you typically set it as a XAML attribute value along with other required attributes of that element.</target>
          </segment>
        </unit>
        <unit id="114">
          <segment state="initial" id="114">
            <source xml:space="preserve">Without getting into the specifics, here's what that looks like:</source>
            <target xml:space="preserve">Without getting into the specifics, here's what that looks like:</target>
          </segment>
        </unit>
        <unit id="115">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="115">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**PathGeometry.Figures**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc> can also use move and draw commands.</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**PathGeometry.Figures**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc> can also use move and draw commands.</target>
          </segment>
        </unit>
        <unit id="116">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;link&gt;</data>
            <data id="id8">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id13">&lt;link&gt;</data>
            <data id="id14">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id19">&lt;link&gt;</data>
            <data id="id20">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="116">
            <source xml:space="preserve">You might combine a <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**PathGeometry**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> object that uses move and draw commands with other <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**Geometry**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc> types in a <pc dataRefEnd="id14" dataRefStart="id13" id="6CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="6CapsExtId2">**GeometryGroup**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="6CapsExtId3"></pc></pc> object, which you'd then use as the value for <pc dataRefEnd="id20" dataRefStart="id19" id="8CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="8CapsExtId2">**Path.Data**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="8CapsExtId3"></pc></pc>.</source>
            <target xml:space="preserve">You might combine a <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**PathGeometry**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> object that uses move and draw commands with other <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**Geometry**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc> types in a <pc dataRefEnd="id14" dataRefStart="id13" id="6CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="6CapsExtId2">**GeometryGroup**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="6CapsExtId3"></pc></pc> object, which you'd then use as the value for <pc dataRefEnd="id20" dataRefStart="id19" id="8CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="8CapsExtId2">**Path.Data**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="8CapsExtId3"></pc></pc>.</target>
          </segment>
        </unit>
        <unit id="117">
          <segment state="initial" id="117">
            <source xml:space="preserve">But that isn't nearly as common as using move and draw commands for attribute-defined data.</source>
            <target xml:space="preserve">But that isn't nearly as common as using move and draw commands for attribute-defined data.</target>
          </segment>
        </unit>
        <unit id="118">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="118">
            <source xml:space="preserve">Using move and draw commands versus using a <pc dataRefEnd="id2" dataRefStart="id1" id="2">PathGeometry</pc></source>
            <target xml:space="preserve">Using move and draw commands versus using a <pc dataRefEnd="id2" dataRefStart="id1" id="2">PathGeometry</pc></target>
          </segment>
        </unit>
        <unit id="119">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;link&gt;</data>
            <data id="id8">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id13">&lt;link&gt;</data>
            <data id="id14">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="119">
            <source xml:space="preserve">For Windows Runtime XAML, the move and draw commands produce a <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**PathGeometry**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> with a single <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**PathFigure**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc> object with a <pc dataRefEnd="id14" dataRefStart="id13" id="6CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="6CapsExtId2">**Figures**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="6CapsExtId3"></pc></pc> property value.</source>
            <target xml:space="preserve">For Windows Runtime XAML, the move and draw commands produce a <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**PathGeometry**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> with a single <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**PathFigure**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc> object with a <pc dataRefEnd="id14" dataRefStart="id13" id="6CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="6CapsExtId2">**Figures**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="6CapsExtId3"></pc></pc> property value.</target>
          </segment>
        </unit>
        <unit id="120">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;strong&gt;</data>
            <data id="id8">&lt;/strong&gt;</data>
            <data id="id9">&lt;link&gt;</data>
            <data id="id10">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id15">&lt;link&gt;</data>
            <data id="id16">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id21">&lt;link&gt;</data>
            <data id="id22">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id27">&lt;strong&gt;</data>
            <data id="id28">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="120">
            <source xml:space="preserve">Each draw command produces a <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**PathSegment**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> derived class in that single <pc dataRefEnd="id8" dataRefStart="id7" id="4">PathFigure</pc>'s <pc dataRefEnd="id10" dataRefStart="id9" id="6CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="6CapsExtId2">**Segments**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="6CapsExtId3"></pc></pc> collection, the move command changes the <pc dataRefEnd="id16" dataRefStart="id15" id="8CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="8CapsExtId2">**StartPoint**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="8CapsExtId3"></pc></pc>, and existence of a close command sets <pc dataRefEnd="id22" dataRefStart="id21" id="10CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="10CapsExtId2">**IsClosed**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="10CapsExtId3"></pc></pc> to <pc dataRefEnd="id28" dataRefStart="id27" id="12">true</pc>.</source>
            <target xml:space="preserve">Each draw command produces a <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**PathSegment**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> derived class in that single <pc dataRefEnd="id8" dataRefStart="id7" id="4">PathFigure</pc>'s <pc dataRefEnd="id10" dataRefStart="id9" id="6CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="6CapsExtId2">**Segments**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="6CapsExtId3"></pc></pc> collection, the move command changes the <pc dataRefEnd="id16" dataRefStart="id15" id="8CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="8CapsExtId2">**StartPoint**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="8CapsExtId3"></pc></pc>, and existence of a close command sets <pc dataRefEnd="id22" dataRefStart="id21" id="10CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="10CapsExtId2">**IsClosed**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="10CapsExtId3"></pc></pc> to <pc dataRefEnd="id28" dataRefStart="id27" id="12">true</pc>.</target>
          </segment>
        </unit>
        <unit id="121">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="121">
            <source xml:space="preserve">You can navigate this structure as an object model if you examine the <pc dataRefEnd="id2" dataRefStart="id1" id="2">Data</pc> values at run time.</source>
            <target xml:space="preserve">You can navigate this structure as an object model if you examine the <pc dataRefEnd="id2" dataRefStart="id1" id="2">Data</pc> values at run time.</target>
          </segment>
        </unit>
        <unit id="122">
          <segment state="initial" id="122">
            <source xml:space="preserve">The basic syntax</source>
            <target xml:space="preserve">The basic syntax</target>
          </segment>
        </unit>
        <unit id="123">
          <segment state="initial" id="123">
            <source xml:space="preserve">The syntax for move and draw commands can be summarized like this:</source>
            <target xml:space="preserve">The syntax for move and draw commands can be summarized like this:</target>
          </segment>
        </unit>
        <unit id="124">
          <segment state="initial" id="124">
            <source xml:space="preserve">Start with an optional fill rule.</source>
            <target xml:space="preserve">Start with an optional fill rule.</target>
          </segment>
        </unit>
        <unit id="125">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="125">
            <source xml:space="preserve">Typically you specify this only if you don't want the <pc dataRefEnd="id2" dataRefStart="id1" id="2">EvenOdd</pc> default.</source>
            <target xml:space="preserve">Typically you specify this only if you don't want the <pc dataRefEnd="id2" dataRefStart="id1" id="2">EvenOdd</pc> default.</target>
          </segment>
        </unit>
        <unit id="126">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="126">
            <source xml:space="preserve">(More about <pc dataRefEnd="id2" dataRefStart="id1" id="2">EvenOdd</pc> later.)</source>
            <target xml:space="preserve">(More about <pc dataRefEnd="id2" dataRefStart="id1" id="2">EvenOdd</pc> later.)</target>
          </segment>
        </unit>
        <unit id="127">
          <segment state="initial" id="127">
            <source xml:space="preserve">Specify exactly one move command.</source>
            <target xml:space="preserve">Specify exactly one move command.</target>
          </segment>
        </unit>
        <unit id="128">
          <segment state="initial" id="128">
            <source xml:space="preserve">Specify one or more draw commands.</source>
            <target xml:space="preserve">Specify one or more draw commands.</target>
          </segment>
        </unit>
        <unit id="129">
          <segment state="initial" id="129">
            <source xml:space="preserve">Specify a close command.</source>
            <target xml:space="preserve">Specify a close command.</target>
          </segment>
        </unit>
        <unit id="130">
          <segment state="initial" id="130">
            <source xml:space="preserve">You can omit a close command , but that would leave your figure open (that's uncommon).</source>
            <target xml:space="preserve">You can omit a close command , but that would leave your figure open (that's uncommon).</target>
          </segment>
        </unit>
        <unit id="131">
          <segment state="initial" id="131">
            <source xml:space="preserve">General rules of this syntax are:</source>
            <target xml:space="preserve">General rules of this syntax are:</target>
          </segment>
        </unit>
        <unit id="132">
          <segment state="initial" id="132">
            <source xml:space="preserve">Each command is represented by exactly one letter.</source>
            <target xml:space="preserve">Each command is represented by exactly one letter.</target>
          </segment>
        </unit>
        <unit id="133">
          <segment state="initial" id="133">
            <source xml:space="preserve">That letter can be upper-case or lower-case.</source>
            <target xml:space="preserve">That letter can be upper-case or lower-case.</target>
          </segment>
        </unit>
        <unit id="134">
          <segment state="initial" id="134">
            <source xml:space="preserve">Case matters, as we'll describe.</source>
            <target xml:space="preserve">Case matters, as we'll describe.</target>
          </segment>
        </unit>
        <unit id="135">
          <segment state="initial" id="135">
            <source xml:space="preserve">Each command except the close command is typically followed by one or more numbers.</source>
            <target xml:space="preserve">Each command except the close command is typically followed by one or more numbers.</target>
          </segment>
        </unit>
        <unit id="136">
          <segment state="initial" id="136">
            <source xml:space="preserve">If more than one number for a command, separate with a comma or space.</source>
            <target xml:space="preserve">If more than one number for a command, separate with a comma or space.</target>
          </segment>
        </unit>
        <unit id="137">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;em&gt;</data>
            <data id="id4">&lt;/em&gt;</data>
            <data id="id5">&lt;strong&gt;</data>
            <data id="id6">&lt;/strong&gt;</data>
            <data id="id7">&lt;em&gt;</data>
            <data id="id8">&lt;/em&gt;</data>
            <data id="id9">&lt;em&gt;</data>
            <data id="id10">&lt;/em&gt;</data>
            <data id="id11">&lt;strong&gt;</data>
            <data id="id12">&lt;/strong&gt;</data>
            <data id="id13">&lt;em&gt;</data>
            <data id="id14">&lt;/em&gt;</data>
            <data id="id15">&lt;strong&gt;</data>
            <data id="id16">&lt;/strong&gt;</data>
            <data id="id17">&lt;strong&gt;</data>
            <data id="id18">&lt;/strong&gt;</data>
            <data id="id19">&lt;em&gt;</data>
            <data id="id20">&lt;/em&gt;</data>
            <data id="id21">&lt;strong&gt;</data>
            <data id="id22">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="137">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">\[</pc>
							<pc dataRefEnd="id4" dataRefStart="id3" id="2">fillRule</pc>
							<pc dataRefEnd="id6" dataRefStart="id5" id="3">\]</pc> <pc dataRefEnd="id8" dataRefStart="id7" id="5">moveCommand</pc> <pc dataRefEnd="id10" dataRefStart="id9" id="7">drawCommand</pc> <pc dataRefEnd="id12" dataRefStart="id11" id="9">\[</pc><pc dataRefEnd="id14" dataRefStart="id13" id="10">drawCommand</pc><pc dataRefEnd="id16" dataRefStart="id15" id="11">\*\]</pc> <pc dataRefEnd="id18" dataRefStart="id17" id="13">\[</pc><pc dataRefEnd="id20" dataRefStart="id19" id="14">closeCommand</pc><pc dataRefEnd="id22" dataRefStart="id21" id="15">\]</pc></source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">\[</pc>
							<pc dataRefEnd="id4" dataRefStart="id3" id="2">fillRule</pc>
							<pc dataRefEnd="id6" dataRefStart="id5" id="3">\]</pc> <pc dataRefEnd="id8" dataRefStart="id7" id="5">moveCommand</pc> <pc dataRefEnd="id10" dataRefStart="id9" id="7">drawCommand</pc> <pc dataRefEnd="id12" dataRefStart="id11" id="9">\[</pc><pc dataRefEnd="id14" dataRefStart="id13" id="10">drawCommand</pc><pc dataRefEnd="id16" dataRefStart="id15" id="11">\*\]</pc> <pc dataRefEnd="id18" dataRefStart="id17" id="13">\[</pc><pc dataRefEnd="id20" dataRefStart="id19" id="14">closeCommand</pc><pc dataRefEnd="id22" dataRefStart="id21" id="15">\]</pc></target>
          </segment>
        </unit>
        <unit id="138">
          <originalData>
            <data id="id1">&lt;em&gt;</data>
            <data id="id2">&lt;/em&gt;</data>
          </originalData>
          <segment state="initial" id="138">
            <source xml:space="preserve">Many of the draw commands use points, where you provide an <pc dataRefEnd="id2" dataRefStart="id1" id="2">x,y</pc> value.</source>
            <target xml:space="preserve">Many of the draw commands use points, where you provide an <pc dataRefEnd="id2" dataRefStart="id1" id="2">x,y</pc> value.</target>
          </segment>
        </unit>
        <unit id="139">
          <originalData>
            <data id="id1">&lt;em&gt;</data>
            <data id="id2">&lt;/em&gt;</data>
            <data id="id3">&lt;em&gt;</data>
            <data id="id4">&lt;/em&gt;</data>
          </originalData>
          <segment state="initial" id="139">
            <source xml:space="preserve">Whenever you see a \*<pc dataRefEnd="id2" dataRefStart="id1" id="2">points</pc> placeholder you can assume you're giving two decimal values for the <pc dataRefEnd="id4" dataRefStart="id3" id="4">x,y</pc> value of a point.</source>
            <target xml:space="preserve">Whenever you see a \*<pc dataRefEnd="id2" dataRefStart="id1" id="2">points</pc> placeholder you can assume you're giving two decimal values for the <pc dataRefEnd="id4" dataRefStart="id3" id="4">x,y</pc> value of a point.</target>
          </segment>
        </unit>
        <unit id="140">
          <segment state="initial" id="140">
            <source xml:space="preserve">White space can often be omitted when the result is not ambiguous.</source>
            <target xml:space="preserve">White space can often be omitted when the result is not ambiguous.</target>
          </segment>
        </unit>
        <unit id="141">
          <segment state="initial" id="141">
            <source xml:space="preserve">You can in fact omit all white space if you use commas as your separator for all number sets (points and size).</source>
            <target xml:space="preserve">You can in fact omit all white space if you use commas as your separator for all number sets (points and size).</target>
          </segment>
        </unit>
        <unit id="142">
          <originalData>
            <data id="id1">&lt;code&gt;</data>
            <data id="id2">&lt;/code&gt;</data>
          </originalData>
          <segment state="initial" id="142">
            <source xml:space="preserve">For example, this usage is legal: <pc dataRefEnd="id2" dataRefStart="id1" id="2">F1M0,58L2,56L6,60L13,51L15,53L6,64z</pc>.</source>
            <target xml:space="preserve">For example, this usage is legal: <pc dataRefEnd="id2" dataRefStart="id1" id="2">F1M0,58L2,56L6,60L13,51L15,53L6,64z</pc>.</target>
          </segment>
        </unit>
        <unit id="143">
          <segment state="initial" id="143">
            <source xml:space="preserve">But it's more typical to include white space between commands for clarity.</source>
            <target xml:space="preserve">But it's more typical to include white space between commands for clarity.</target>
          </segment>
        </unit>
        <unit id="144">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="144">
            <source xml:space="preserve">Don't use commas as the decimal point for decimal numbers; the command string is interpreted by XAML and doesn't account for culture-specific number-formatting conventions that differ from those used in the <pc dataRefEnd="id2" dataRefStart="id1" id="2">en-us</pc> locale.</source>
            <target xml:space="preserve">Don't use commas as the decimal point for decimal numbers; the command string is interpreted by XAML and doesn't account for culture-specific number-formatting conventions that differ from those used in the <pc dataRefEnd="id2" dataRefStart="id1" id="2">en-us</pc> locale.</target>
          </segment>
        </unit>
        <unit id="145">
          <segment state="initial" id="145">
            <source xml:space="preserve">Syntax specifics</source>
            <target xml:space="preserve">Syntax specifics</target>
          </segment>
        </unit>
        <unit id="146">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="146">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Fill rule</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Fill rule</pc>
						</target>
          </segment>
        </unit>
        <unit id="147">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;strong&gt;</data>
            <data id="id4">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="147">
            <source xml:space="preserve">There are two possible values for the optional fill rule: <pc dataRefEnd="id2" dataRefStart="id1" id="2">F0</pc> or <pc dataRefEnd="id4" dataRefStart="id3" id="4">F1</pc>.</source>
            <target xml:space="preserve">There are two possible values for the optional fill rule: <pc dataRefEnd="id2" dataRefStart="id1" id="2">F0</pc> or <pc dataRefEnd="id4" dataRefStart="id3" id="4">F1</pc>.</target>
          </segment>
        </unit>
        <unit id="148">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="148">
            <source xml:space="preserve">(The <pc dataRefEnd="id2" dataRefStart="id1" id="2">F</pc> is always uppercase.)</source>
            <target xml:space="preserve">(The <pc dataRefEnd="id2" dataRefStart="id1" id="2">F</pc> is always uppercase.)</target>
          </segment>
        </unit>
        <unit id="149">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;strong&gt;</data>
            <data id="id4">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="149">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">F0</pc> is the default value; it produces <pc dataRefEnd="id4" dataRefStart="id3" id="3">EvenOdd</pc> fill behavior, so you don't typically specify it.</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">F0</pc> is the default value; it produces <pc dataRefEnd="id4" dataRefStart="id3" id="3">EvenOdd</pc> fill behavior, so you don't typically specify it.</target>
          </segment>
        </unit>
        <unit id="150">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;strong&gt;</data>
            <data id="id4">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="150">
            <source xml:space="preserve">Use <pc dataRefEnd="id2" dataRefStart="id1" id="2">F1</pc> to get the <pc dataRefEnd="id4" dataRefStart="id3" id="4">Nonzero</pc> fill behavior.</source>
            <target xml:space="preserve">Use <pc dataRefEnd="id2" dataRefStart="id1" id="2">F1</pc> to get the <pc dataRefEnd="id4" dataRefStart="id3" id="4">Nonzero</pc> fill behavior.</target>
          </segment>
        </unit>
        <unit id="151">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="151">
            <source xml:space="preserve">These fill values align with the values of the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**FillRule**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> enumeration.</source>
            <target xml:space="preserve">These fill values align with the values of the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**FillRule**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> enumeration.</target>
          </segment>
        </unit>
        <unit id="152">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="152">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Move command</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Move command</pc>
						</target>
          </segment>
        </unit>
        <unit id="153">
          <segment state="initial" id="153">
            <source xml:space="preserve">Specifies the start point of a new figure.</source>
            <target xml:space="preserve">Specifies the start point of a new figure.</target>
          </segment>
        </unit>
        <unit id="154">
          <segment state="initial" id="154">
            <source xml:space="preserve">Syntax</source>
            <target xml:space="preserve">Syntax</target>
          </segment>
        </unit>
        <unit id="155">
          <originalData>
            <data id="id1">&lt;code&gt;</data>
            <data id="id2">&lt;/code&gt;</data>
            <data id="id3">&lt;em&gt;</data>
            <data id="id4">&lt;/em&gt;</data>
            <data id="id5">&lt;html&gt;</data>
            <data id="id6">&lt;/html&gt;</data>
            <data id="id7">&lt;html&gt;</data>
            <data id="id8">&lt;/html&gt;</data>
            <data id="id9">&lt;code&gt;</data>
            <data id="id10">&lt;/code&gt;</data>
            <data id="id11">&lt;em&gt;</data>
            <data id="id12">&lt;/em&gt;</data>
          </originalData>
          <segment state="initial" id="155">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">M </pc> <pc dataRefEnd="id4" dataRefStart="id3" id="3">startPoint</pc> <pc dataRefEnd="id6" dataRefStart="id5" id="5"></pc>- or -<pc dataRefEnd="id8" dataRefStart="id7" id="7"></pc><pc dataRefEnd="id10" dataRefStart="id9" id="8">m</pc> <pc dataRefEnd="id12" dataRefStart="id11" id="10">startPoint</pc></source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">M </pc> <pc dataRefEnd="id4" dataRefStart="id3" id="3">startPoint</pc> <pc dataRefEnd="id6" dataRefStart="id5" id="5"></pc>- or -<pc dataRefEnd="id8" dataRefStart="id7" id="7"></pc><pc dataRefEnd="id10" dataRefStart="id9" id="8">m</pc> <pc dataRefEnd="id12" dataRefStart="id11" id="10">startPoint</pc></target>
          </segment>
        </unit>
        <unit id="156">
          <segment state="initial" id="156">
            <source xml:space="preserve">Term</source>
            <target xml:space="preserve">Term</target>
          </segment>
        </unit>
        <unit id="157">
          <segment state="initial" id="157">
            <source xml:space="preserve">Description</source>
            <target xml:space="preserve">Description</target>
          </segment>
        </unit>
        <unit id="158">
          <originalData>
            <data id="id1">&lt;em&gt;</data>
            <data id="id2">&lt;/em&gt;</data>
          </originalData>
          <segment state="initial" id="158">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">startPoint</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">startPoint</pc>
						</target>
          </segment>
        </unit>
        <unit id="159">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;html&gt;</data>
            <data id="id8">&lt;/html&gt;</data>
          </originalData>
          <segment state="initial" id="159">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**Point**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc> <pc dataRefEnd="id8" dataRefStart="id7" id="3"></pc>The start point of a new figure.</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**Point**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc> <pc dataRefEnd="id8" dataRefStart="id7" id="3"></pc>The start point of a new figure.</target>
          </segment>
        </unit>
        <unit id="160">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;em&gt;</data>
            <data id="id4">&lt;/em&gt;</data>
            <data id="id5">&lt;strong&gt;</data>
            <data id="id6">&lt;/strong&gt;</data>
            <data id="id7">&lt;em&gt;</data>
            <data id="id8">&lt;/em&gt;</data>
          </originalData>
          <segment state="initial" id="160">
            <source xml:space="preserve">An uppercase <pc dataRefEnd="id2" dataRefStart="id1" id="2">M</pc> indicates that <pc dataRefEnd="id4" dataRefStart="id3" id="4">startPoint</pc> is an absolute coordinate; a lowercase <pc dataRefEnd="id6" dataRefStart="id5" id="6">m</pc> indicates that <pc dataRefEnd="id8" dataRefStart="id7" id="8">startPoint</pc> is an offset to the previous point, or (0,0) if there was no previous point.</source>
            <target xml:space="preserve">An uppercase <pc dataRefEnd="id2" dataRefStart="id1" id="2">M</pc> indicates that <pc dataRefEnd="id4" dataRefStart="id3" id="4">startPoint</pc> is an absolute coordinate; a lowercase <pc dataRefEnd="id6" dataRefStart="id5" id="6">m</pc> indicates that <pc dataRefEnd="id8" dataRefStart="id7" id="8">startPoint</pc> is an offset to the previous point, or (0,0) if there was no previous point.</target>
          </segment>
        </unit>
        <unit id="161">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="161">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Note</pc>  It's legal to specify multiple points after the move command.</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Note</pc>  It's legal to specify multiple points after the move command.</target>
          </segment>
        </unit>
        <unit id="162">
          <segment state="initial" id="162">
            <source xml:space="preserve">A line is drawn to those points as if you specified the line command.</source>
            <target xml:space="preserve">A line is drawn to those points as if you specified the line command.</target>
          </segment>
        </unit>
        <unit id="163">
          <segment state="initial" id="163">
            <source xml:space="preserve">However that's not a recommended style; use the dedicated line command instead.</source>
            <target xml:space="preserve">However that's not a recommended style; use the dedicated line command instead.</target>
          </segment>
        </unit>
        <unit id="164">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="164">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Draw commands</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Draw commands</pc>
						</target>
          </segment>
        </unit>
        <unit id="165">
          <segment state="initial" id="165">
            <source xml:space="preserve">A draw command can consist of several shape commands: line, horizontal line, vertical line, cubic Bezier curve, quadratic Bezier curve, smooth cubic Bezier curve, smooth quadratic Bezier curve, and elliptical arc.</source>
            <target xml:space="preserve">A draw command can consist of several shape commands: line, horizontal line, vertical line, cubic Bezier curve, quadratic Bezier curve, smooth cubic Bezier curve, smooth quadratic Bezier curve, and elliptical arc.</target>
          </segment>
        </unit>
        <unit id="166">
          <segment state="initial" id="166">
            <source xml:space="preserve">For all draw commands, case matters.</source>
            <target xml:space="preserve">For all draw commands, case matters.</target>
          </segment>
        </unit>
        <unit id="167">
          <segment state="initial" id="167">
            <source xml:space="preserve">Uppercase letters denote absolute coordinates and lowercase letters denote coordinates relative to the previous command.</source>
            <target xml:space="preserve">Uppercase letters denote absolute coordinates and lowercase letters denote coordinates relative to the previous command.</target>
          </segment>
        </unit>
        <unit id="168">
          <segment state="initial" id="168">
            <source xml:space="preserve">The control points for a segment are relative to the end point of the preceding segment.</source>
            <target xml:space="preserve">The control points for a segment are relative to the end point of the preceding segment.</target>
          </segment>
        </unit>
        <unit id="169">
          <segment state="initial" id="169">
            <source xml:space="preserve">When sequentially entering more than one command of the same type, you can omit the duplicate command entry.</source>
            <target xml:space="preserve">When sequentially entering more than one command of the same type, you can omit the duplicate command entry.</target>
          </segment>
        </unit>
        <unit id="170">
          <originalData>
            <data id="id1">&lt;code&gt;</data>
            <data id="id2">&lt;/code&gt;</data>
            <data id="id3">&lt;code&gt;</data>
            <data id="id4">&lt;/code&gt;</data>
          </originalData>
          <segment state="initial" id="170">
            <source xml:space="preserve">For example, <pc dataRefEnd="id2" dataRefStart="id1" id="2">L 100,200 300,400</pc> is equivalent to <pc dataRefEnd="id4" dataRefStart="id3" id="4">L 100,200 L 300,400</pc>.</source>
            <target xml:space="preserve">For example, <pc dataRefEnd="id2" dataRefStart="id1" id="2">L 100,200 300,400</pc> is equivalent to <pc dataRefEnd="id4" dataRefStart="id3" id="4">L 100,200 L 300,400</pc>.</target>
          </segment>
        </unit>
        <unit id="171">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="171">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Line command</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Line command</pc>
						</target>
          </segment>
        </unit>
        <unit id="172">
          <segment state="initial" id="172">
            <source xml:space="preserve">Creates a straight line between the current point and the specified end point.</source>
            <target xml:space="preserve">Creates a straight line between the current point and the specified end point.</target>
          </segment>
        </unit>
        <unit id="173">
          <originalData>
            <data id="id1">&lt;code&gt;</data>
            <data id="id2">&lt;/code&gt;</data>
            <data id="id3">&lt;code&gt;</data>
            <data id="id4">&lt;/code&gt;</data>
          </originalData>
          <segment state="initial" id="173">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">l 20 30</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="3">L 20,30</pc> are examples of valid line commands.</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">l 20 30</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="3">L 20,30</pc> are examples of valid line commands.</target>
          </segment>
        </unit>
        <unit id="174">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="174">
            <source xml:space="preserve">Defines the equivalent of a <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**LineGeometry**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> object.</source>
            <target xml:space="preserve">Defines the equivalent of a <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**LineGeometry**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> object.</target>
          </segment>
        </unit>
        <unit id="175">
          <segment state="initial" id="175">
            <source xml:space="preserve">Syntax</source>
            <target xml:space="preserve">Syntax</target>
          </segment>
        </unit>
        <unit id="176">
          <originalData>
            <data id="id1">&lt;code&gt;</data>
            <data id="id2">&lt;/code&gt;</data>
            <data id="id3">&lt;em&gt;</data>
            <data id="id4">&lt;/em&gt;</data>
            <data id="id5">&lt;html&gt;</data>
            <data id="id6">&lt;/html&gt;</data>
            <data id="id7">&lt;html&gt;</data>
            <data id="id8">&lt;/html&gt;</data>
            <data id="id9">&lt;code&gt;</data>
            <data id="id10">&lt;/code&gt;</data>
            <data id="id11">&lt;em&gt;</data>
            <data id="id12">&lt;/em&gt;</data>
          </originalData>
          <segment state="initial" id="176">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">L</pc> <pc dataRefEnd="id4" dataRefStart="id3" id="3">endPoint</pc> <pc dataRefEnd="id6" dataRefStart="id5" id="5"></pc>- or -<pc dataRefEnd="id8" dataRefStart="id7" id="7"></pc><pc dataRefEnd="id10" dataRefStart="id9" id="8">l</pc> <pc dataRefEnd="id12" dataRefStart="id11" id="10">endPoint</pc></source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">L</pc> <pc dataRefEnd="id4" dataRefStart="id3" id="3">endPoint</pc> <pc dataRefEnd="id6" dataRefStart="id5" id="5"></pc>- or -<pc dataRefEnd="id8" dataRefStart="id7" id="7"></pc><pc dataRefEnd="id10" dataRefStart="id9" id="8">l</pc> <pc dataRefEnd="id12" dataRefStart="id11" id="10">endPoint</pc></target>
          </segment>
        </unit>
        <unit id="177">
          <segment state="initial" id="177">
            <source xml:space="preserve">Term</source>
            <target xml:space="preserve">Term</target>
          </segment>
        </unit>
        <unit id="178">
          <segment state="initial" id="178">
            <source xml:space="preserve">Description</source>
            <target xml:space="preserve">Description</target>
          </segment>
        </unit>
        <unit id="179">
          <segment state="initial" id="179">
            <source xml:space="preserve">endPoint</source>
            <target xml:space="preserve">endPoint</target>
          </segment>
        </unit>
        <unit id="180">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;html&gt;</data>
            <data id="id8">&lt;/html&gt;</data>
          </originalData>
          <segment state="initial" id="180">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**Point**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
							<pc dataRefEnd="id8" dataRefStart="id7" id="2"></pc>The end point of the line.</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**Point**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
							<pc dataRefEnd="id8" dataRefStart="id7" id="2"></pc>The end point of the line.</target>
          </segment>
        </unit>
        <unit id="181">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="181">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Horizontal line command</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Horizontal line command</pc>
						</target>
          </segment>
        </unit>
        <unit id="182">
          <segment state="initial" id="182">
            <source xml:space="preserve">Creates a horizontal line between the current point and the specified x-coordinate.</source>
            <target xml:space="preserve">Creates a horizontal line between the current point and the specified x-coordinate.</target>
          </segment>
        </unit>
        <unit id="183">
          <originalData>
            <data id="id1">&lt;code&gt;</data>
            <data id="id2">&lt;/code&gt;</data>
          </originalData>
          <segment state="initial" id="183">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">H 90</pc> is an example of a valid horizontal line command.</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">H 90</pc> is an example of a valid horizontal line command.</target>
          </segment>
        </unit>
        <unit id="184">
          <segment state="initial" id="184">
            <source xml:space="preserve">Syntax</source>
            <target xml:space="preserve">Syntax</target>
          </segment>
        </unit>
        <unit id="185">
          <originalData>
            <data id="id1">&lt;code&gt;</data>
            <data id="id2">&lt;/code&gt;</data>
            <data id="id3">&lt;em&gt;</data>
            <data id="id4">&lt;/em&gt;</data>
            <data id="id5">&lt;html&gt;</data>
            <data id="id6">&lt;/html&gt;</data>
            <data id="id7">&lt;html&gt;</data>
            <data id="id8">&lt;/html&gt;</data>
            <data id="id9">&lt;code&gt;</data>
            <data id="id10">&lt;/code&gt;</data>
            <data id="id11">&lt;em&gt;</data>
            <data id="id12">&lt;/em&gt;</data>
          </originalData>
          <segment state="initial" id="185">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">H </pc> <pc dataRefEnd="id4" dataRefStart="id3" id="3">x</pc> <pc dataRefEnd="id6" dataRefStart="id5" id="5"></pc> - or - <pc dataRefEnd="id8" dataRefStart="id7" id="7"></pc><pc dataRefEnd="id10" dataRefStart="id9" id="8">h </pc> <pc dataRefEnd="id12" dataRefStart="id11" id="10">x</pc></source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">H </pc> <pc dataRefEnd="id4" dataRefStart="id3" id="3">x</pc> <pc dataRefEnd="id6" dataRefStart="id5" id="5"></pc> - or - <pc dataRefEnd="id8" dataRefStart="id7" id="7"></pc><pc dataRefEnd="id10" dataRefStart="id9" id="8">h </pc> <pc dataRefEnd="id12" dataRefStart="id11" id="10">x</pc></target>
          </segment>
        </unit>
        <unit id="186">
          <segment state="initial" id="186">
            <source xml:space="preserve">Term</source>
            <target xml:space="preserve">Term</target>
          </segment>
        </unit>
        <unit id="187">
          <segment state="initial" id="187">
            <source xml:space="preserve">Description</source>
            <target xml:space="preserve">Description</target>
          </segment>
        </unit>
        <unit id="188">
          <segment state="initial" id="188">
            <source xml:space="preserve">x</source>
            <target xml:space="preserve">x</target>
          </segment>
        </unit>
        <unit id="189">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;html&gt;</data>
            <data id="id8">&lt;/html&gt;</data>
          </originalData>
          <segment state="initial" id="189">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**Double**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc> <pc dataRefEnd="id8" dataRefStart="id7" id="3"></pc> The x-coordinate of the end point of the line.</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**Double**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc> <pc dataRefEnd="id8" dataRefStart="id7" id="3"></pc> The x-coordinate of the end point of the line.</target>
          </segment>
        </unit>
        <unit id="190">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="190">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Vertical line command</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Vertical line command</pc>
						</target>
          </segment>
        </unit>
        <unit id="191">
          <segment state="initial" id="191">
            <source xml:space="preserve">Creates a vertical line between the current point and the specified y-coordinate.</source>
            <target xml:space="preserve">Creates a vertical line between the current point and the specified y-coordinate.</target>
          </segment>
        </unit>
        <unit id="192">
          <originalData>
            <data id="id1">&lt;code&gt;</data>
            <data id="id2">&lt;/code&gt;</data>
          </originalData>
          <segment state="initial" id="192">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">v 90</pc> is an example of a valid vertical line command.</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">v 90</pc> is an example of a valid vertical line command.</target>
          </segment>
        </unit>
        <unit id="193">
          <segment state="initial" id="193">
            <source xml:space="preserve">Syntax</source>
            <target xml:space="preserve">Syntax</target>
          </segment>
        </unit>
        <unit id="194">
          <originalData>
            <data id="id1">&lt;code&gt;</data>
            <data id="id2">&lt;/code&gt;</data>
            <data id="id3">&lt;em&gt;</data>
            <data id="id4">&lt;/em&gt;</data>
            <data id="id5">&lt;html&gt;</data>
            <data id="id6">&lt;/html&gt;</data>
            <data id="id7">&lt;html&gt;</data>
            <data id="id8">&lt;/html&gt;</data>
            <data id="id9">&lt;code&gt;</data>
            <data id="id10">&lt;/code&gt;</data>
            <data id="id11">&lt;em&gt;</data>
            <data id="id12">&lt;/em&gt;</data>
          </originalData>
          <segment state="initial" id="194">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">V </pc> <pc dataRefEnd="id4" dataRefStart="id3" id="3">y</pc> <pc dataRefEnd="id6" dataRefStart="id5" id="5"></pc> - or - <pc dataRefEnd="id8" dataRefStart="id7" id="7"></pc> <pc dataRefEnd="id10" dataRefStart="id9" id="9">v </pc> <pc dataRefEnd="id12" dataRefStart="id11" id="11">y</pc></source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">V </pc> <pc dataRefEnd="id4" dataRefStart="id3" id="3">y</pc> <pc dataRefEnd="id6" dataRefStart="id5" id="5"></pc> - or - <pc dataRefEnd="id8" dataRefStart="id7" id="7"></pc> <pc dataRefEnd="id10" dataRefStart="id9" id="9">v </pc> <pc dataRefEnd="id12" dataRefStart="id11" id="11">y</pc></target>
          </segment>
        </unit>
        <unit id="195">
          <segment state="initial" id="195">
            <source xml:space="preserve">Term</source>
            <target xml:space="preserve">Term</target>
          </segment>
        </unit>
        <unit id="196">
          <segment state="initial" id="196">
            <source xml:space="preserve">Description</source>
            <target xml:space="preserve">Description</target>
          </segment>
        </unit>
        <unit id="197">
          <originalData>
            <data id="id1">&lt;em&gt;</data>
            <data id="id2">&lt;/em&gt;</data>
          </originalData>
          <segment state="initial" id="197">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">y</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">y</pc>
						</target>
          </segment>
        </unit>
        <unit id="198">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;html&gt;</data>
            <data id="id8">&lt;/html&gt;</data>
          </originalData>
          <segment state="initial" id="198">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**Double**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc> <pc dataRefEnd="id8" dataRefStart="id7" id="3"></pc> The y-coordinate of the end point of the line.</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**Double**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc> <pc dataRefEnd="id8" dataRefStart="id7" id="3"></pc> The y-coordinate of the end point of the line.</target>
          </segment>
        </unit>
        <unit id="199">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="199">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Cubic Bézier curve command</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Cubic Bézier curve command</pc>
						</target>
          </segment>
        </unit>
        <unit id="200">
          <originalData>
            <data id="id1">&lt;em&gt;</data>
            <data id="id2">&lt;/em&gt;</data>
            <data id="id3">&lt;em&gt;</data>
            <data id="id4">&lt;/em&gt;</data>
          </originalData>
          <segment state="initial" id="200">
            <source xml:space="preserve">Creates a cubic Bézier curve between the current point and the specified end point by using the two specified control points (<pc dataRefEnd="id2" dataRefStart="id1" id="2">controlPoint1</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="4">controlPoint2</pc>).</source>
            <target xml:space="preserve">Creates a cubic Bézier curve between the current point and the specified end point by using the two specified control points (<pc dataRefEnd="id2" dataRefStart="id1" id="2">controlPoint1</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="4">controlPoint2</pc>).</target>
          </segment>
        </unit>
        <unit id="201">
          <originalData>
            <data id="id1">&lt;code&gt;</data>
            <data id="id2">&lt;/code&gt;</data>
          </originalData>
          <segment state="initial" id="201">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">C 100,200 200,400 300,200</pc> is an example of a valid curve command.</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">C 100,200 200,400 300,200</pc> is an example of a valid curve command.</target>
          </segment>
        </unit>
        <unit id="202">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;link&gt;</data>
            <data id="id8">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="202">
            <source xml:space="preserve">Defines the equivalent of a <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**PathGeometry**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> object with a <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**BezierSegment**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc> object.</source>
            <target xml:space="preserve">Defines the equivalent of a <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**PathGeometry**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> object with a <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**BezierSegment**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc> object.</target>
          </segment>
        </unit>
        <unit id="203">
          <segment state="initial" id="203">
            <source xml:space="preserve">Syntax</source>
            <target xml:space="preserve">Syntax</target>
          </segment>
        </unit>
        <unit id="204">
          <originalData>
            <data id="id1">&lt;code&gt;</data>
            <data id="id2">&lt;/code&gt;</data>
            <data id="id3">&lt;em&gt;</data>
            <data id="id4">&lt;/em&gt;</data>
            <data id="id5">&lt;em&gt;</data>
            <data id="id6">&lt;/em&gt;</data>
            <data id="id7">&lt;em&gt;</data>
            <data id="id8">&lt;/em&gt;</data>
            <data id="id9">&lt;html&gt;</data>
            <data id="id10">&lt;/html&gt;</data>
            <data id="id11">&lt;html&gt;</data>
            <data id="id12">&lt;/html&gt;</data>
            <data id="id13">&lt;code&gt;</data>
            <data id="id14">&lt;/code&gt;</data>
            <data id="id15">&lt;em&gt;</data>
            <data id="id16">&lt;/em&gt;</data>
            <data id="id17">&lt;em&gt;</data>
            <data id="id18">&lt;/em&gt;</data>
            <data id="id19">&lt;em&gt;</data>
            <data id="id20">&lt;/em&gt;</data>
          </originalData>
          <segment state="initial" id="204">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">C </pc> <pc dataRefEnd="id4" dataRefStart="id3" id="3">controlPoint1</pc> <pc dataRefEnd="id6" dataRefStart="id5" id="5">controlPoint2</pc> <pc dataRefEnd="id8" dataRefStart="id7" id="7">endPoint</pc> <pc dataRefEnd="id10" dataRefStart="id9" id="9"></pc> - or - <pc dataRefEnd="id12" dataRefStart="id11" id="11"></pc> <pc dataRefEnd="id14" dataRefStart="id13" id="13">c </pc> <pc dataRefEnd="id16" dataRefStart="id15" id="15">controlPoint1</pc> <pc dataRefEnd="id18" dataRefStart="id17" id="17">controlPoint2</pc> <pc dataRefEnd="id20" dataRefStart="id19" id="19">endPoint</pc></source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">C </pc> <pc dataRefEnd="id4" dataRefStart="id3" id="3">controlPoint1</pc> <pc dataRefEnd="id6" dataRefStart="id5" id="5">controlPoint2</pc> <pc dataRefEnd="id8" dataRefStart="id7" id="7">endPoint</pc> <pc dataRefEnd="id10" dataRefStart="id9" id="9"></pc> - or - <pc dataRefEnd="id12" dataRefStart="id11" id="11"></pc> <pc dataRefEnd="id14" dataRefStart="id13" id="13">c </pc> <pc dataRefEnd="id16" dataRefStart="id15" id="15">controlPoint1</pc> <pc dataRefEnd="id18" dataRefStart="id17" id="17">controlPoint2</pc> <pc dataRefEnd="id20" dataRefStart="id19" id="19">endPoint</pc></target>
          </segment>
        </unit>
        <unit id="205">
          <segment state="initial" id="205">
            <source xml:space="preserve">Term</source>
            <target xml:space="preserve">Term</target>
          </segment>
        </unit>
        <unit id="206">
          <segment state="initial" id="206">
            <source xml:space="preserve">Description</source>
            <target xml:space="preserve">Description</target>
          </segment>
        </unit>
        <unit id="207">
          <originalData>
            <data id="id1">&lt;em&gt;</data>
            <data id="id2">&lt;/em&gt;</data>
          </originalData>
          <segment state="initial" id="207">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">controlPoint1</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">controlPoint1</pc>
						</target>
          </segment>
        </unit>
        <unit id="208">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;html&gt;</data>
            <data id="id8">&lt;/html&gt;</data>
          </originalData>
          <segment state="initial" id="208">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**Point**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc> <pc dataRefEnd="id8" dataRefStart="id7" id="3"></pc> The first control point of the curve, which determines the starting tangent of the curve.</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**Point**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc> <pc dataRefEnd="id8" dataRefStart="id7" id="3"></pc> The first control point of the curve, which determines the starting tangent of the curve.</target>
          </segment>
        </unit>
        <unit id="209">
          <originalData>
            <data id="id1">&lt;em&gt;</data>
            <data id="id2">&lt;/em&gt;</data>
          </originalData>
          <segment state="initial" id="209">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">controlPoint2</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">controlPoint2</pc>
						</target>
          </segment>
        </unit>
        <unit id="210">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;html&gt;</data>
            <data id="id8">&lt;/html&gt;</data>
          </originalData>
          <segment state="initial" id="210">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**Point**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc> <pc dataRefEnd="id8" dataRefStart="id7" id="3"></pc> The second control point of the curve, which determines the ending tangent of the curve.</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**Point**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc> <pc dataRefEnd="id8" dataRefStart="id7" id="3"></pc> The second control point of the curve, which determines the ending tangent of the curve.</target>
          </segment>
        </unit>
        <unit id="211">
          <originalData>
            <data id="id1">&lt;em&gt;</data>
            <data id="id2">&lt;/em&gt;</data>
          </originalData>
          <segment state="initial" id="211">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">endPoint</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">endPoint</pc>
						</target>
          </segment>
        </unit>
        <unit id="212">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;html&gt;</data>
            <data id="id8">&lt;/html&gt;</data>
          </originalData>
          <segment state="initial" id="212">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**Point**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc> <pc dataRefEnd="id8" dataRefStart="id7" id="3"></pc> The point to which the curve is drawn.</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**Point**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc> <pc dataRefEnd="id8" dataRefStart="id7" id="3"></pc> The point to which the curve is drawn.</target>
          </segment>
        </unit>
        <unit id="213">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="213">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Quadratic Bézier curve command</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Quadratic Bézier curve command</pc>
						</target>
          </segment>
        </unit>
        <unit id="214">
          <originalData>
            <data id="id1">&lt;em&gt;</data>
            <data id="id2">&lt;/em&gt;</data>
          </originalData>
          <segment state="initial" id="214">
            <source xml:space="preserve">Creates a quadratic Bézier curve between the current point and the specified end point by using the specified control point (<pc dataRefEnd="id2" dataRefStart="id1" id="2">controlPoint</pc>).</source>
            <target xml:space="preserve">Creates a quadratic Bézier curve between the current point and the specified end point by using the specified control point (<pc dataRefEnd="id2" dataRefStart="id1" id="2">controlPoint</pc>).</target>
          </segment>
        </unit>
        <unit id="215">
          <originalData>
            <data id="id1">&lt;code&gt;</data>
            <data id="id2">&lt;/code&gt;</data>
          </originalData>
          <segment state="initial" id="215">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">q 100,200 300,200</pc> is an example of a valid quadratic Bézier curve command.</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">q 100,200 300,200</pc> is an example of a valid quadratic Bézier curve command.</target>
          </segment>
        </unit>
        <unit id="216">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;link&gt;</data>
            <data id="id8">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="216">
            <source xml:space="preserve">Defines the equivalent of a <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**PathGeometry**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> with a <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**QuadraticBezierSegment**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc>.</source>
            <target xml:space="preserve">Defines the equivalent of a <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**PathGeometry**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> with a <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**QuadraticBezierSegment**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc>.</target>
          </segment>
        </unit>
        <unit id="217">
          <segment state="initial" id="217">
            <source xml:space="preserve">Syntax</source>
            <target xml:space="preserve">Syntax</target>
          </segment>
        </unit>
        <unit id="218">
          <originalData>
            <data id="id1">&lt;code&gt;</data>
            <data id="id2">&lt;/code&gt;</data>
            <data id="id3">&lt;em&gt;</data>
            <data id="id4">&lt;/em&gt;</data>
            <data id="id5">&lt;html&gt;</data>
            <data id="id6">&lt;/html&gt;</data>
            <data id="id7">&lt;html&gt;</data>
            <data id="id8">&lt;/html&gt;</data>
            <data id="id9">&lt;code&gt;</data>
            <data id="id10">&lt;/code&gt;</data>
            <data id="id11">&lt;em&gt;</data>
            <data id="id12">&lt;/em&gt;</data>
          </originalData>
          <segment state="initial" id="218">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Q </pc> <pc dataRefEnd="id4" dataRefStart="id3" id="3">controlPoint endPoint</pc> <pc dataRefEnd="id6" dataRefStart="id5" id="5"></pc> - or - <pc dataRefEnd="id8" dataRefStart="id7" id="7"></pc> <pc dataRefEnd="id10" dataRefStart="id9" id="9">q </pc> <pc dataRefEnd="id12" dataRefStart="id11" id="11">controlPoint endPoint</pc></source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Q </pc> <pc dataRefEnd="id4" dataRefStart="id3" id="3">controlPoint endPoint</pc> <pc dataRefEnd="id6" dataRefStart="id5" id="5"></pc> - or - <pc dataRefEnd="id8" dataRefStart="id7" id="7"></pc> <pc dataRefEnd="id10" dataRefStart="id9" id="9">q </pc> <pc dataRefEnd="id12" dataRefStart="id11" id="11">controlPoint endPoint</pc></target>
          </segment>
        </unit>
        <unit id="219">
          <segment state="initial" id="219">
            <source xml:space="preserve">Term</source>
            <target xml:space="preserve">Term</target>
          </segment>
        </unit>
        <unit id="220">
          <segment state="initial" id="220">
            <source xml:space="preserve">Description</source>
            <target xml:space="preserve">Description</target>
          </segment>
        </unit>
        <unit id="221">
          <originalData>
            <data id="id1">&lt;em&gt;</data>
            <data id="id2">&lt;/em&gt;</data>
          </originalData>
          <segment state="initial" id="221">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">controlPoint</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">controlPoint</pc>
						</target>
          </segment>
        </unit>
        <unit id="222">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;html&gt;</data>
            <data id="id8">&lt;/html&gt;</data>
          </originalData>
          <segment state="initial" id="222">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**Point**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc> <pc dataRefEnd="id8" dataRefStart="id7" id="3"></pc> The control point of the curve, which determines the starting and ending tangents of the curve.</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**Point**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc> <pc dataRefEnd="id8" dataRefStart="id7" id="3"></pc> The control point of the curve, which determines the starting and ending tangents of the curve.</target>
          </segment>
        </unit>
        <unit id="223">
          <originalData>
            <data id="id1">&lt;em&gt;</data>
            <data id="id2">&lt;/em&gt;</data>
          </originalData>
          <segment state="initial" id="223">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">endPoint</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">endPoint</pc>
						</target>
          </segment>
        </unit>
        <unit id="224">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;html&gt;</data>
            <data id="id8">&lt;/html&gt;</data>
          </originalData>
          <segment state="initial" id="224">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**Point**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
							<pc dataRefEnd="id8" dataRefStart="id7" id="2"></pc> The point to which the curve is drawn.</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**Point**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
							<pc dataRefEnd="id8" dataRefStart="id7" id="2"></pc> The point to which the curve is drawn.</target>
          </segment>
        </unit>
        <unit id="225">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="225">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Smooth cubic Bézier curve command</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Smooth cubic Bézier curve command</pc>
						</target>
          </segment>
        </unit>
        <unit id="226">
          <segment state="initial" id="226">
            <source xml:space="preserve">Creates a cubic Bézier curve between the current point and the specified end point.</source>
            <target xml:space="preserve">Creates a cubic Bézier curve between the current point and the specified end point.</target>
          </segment>
        </unit>
        <unit id="227">
          <segment state="initial" id="227">
            <source xml:space="preserve">The first control point is assumed to be the reflection of the second control point of the previous command relative to the current point.</source>
            <target xml:space="preserve">The first control point is assumed to be the reflection of the second control point of the previous command relative to the current point.</target>
          </segment>
        </unit>
        <unit id="228">
          <segment state="initial" id="228">
            <source xml:space="preserve">If there is no previous command or if the previous command was not a cubic Bézier curve command or a smooth cubic Bézier curve command, assume the first control point is coincident with the current point.</source>
            <target xml:space="preserve">If there is no previous command or if the previous command was not a cubic Bézier curve command or a smooth cubic Bézier curve command, assume the first control point is coincident with the current point.</target>
          </segment>
        </unit>
        <unit id="229">
          <originalData>
            <data id="id1">&lt;em&gt;</data>
            <data id="id2">&lt;/em&gt;</data>
          </originalData>
          <segment state="initial" id="229">
            <source xml:space="preserve">The second control point—the control point for the end of the curve—is specified by <pc dataRefEnd="id2" dataRefStart="id1" id="2">controlPoint2</pc>.</source>
            <target xml:space="preserve">The second control point—the control point for the end of the curve—is specified by <pc dataRefEnd="id2" dataRefStart="id1" id="2">controlPoint2</pc>.</target>
          </segment>
        </unit>
        <unit id="230">
          <originalData>
            <data id="id1">&lt;code&gt;</data>
            <data id="id2">&lt;/code&gt;</data>
          </originalData>
          <segment state="initial" id="230">
            <source xml:space="preserve">For example, <pc dataRefEnd="id2" dataRefStart="id1" id="2">S 100,200 200,300</pc> is a valid smooth cubic Bézier curve command.</source>
            <target xml:space="preserve">For example, <pc dataRefEnd="id2" dataRefStart="id1" id="2">S 100,200 200,300</pc> is a valid smooth cubic Bézier curve command.</target>
          </segment>
        </unit>
        <unit id="231">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;link&gt;</data>
            <data id="id8">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="231">
            <source xml:space="preserve">This command defines the equivalent of a <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**PathGeometry**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> with a <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**BezierSegment**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc> where there was preceding curve segment.</source>
            <target xml:space="preserve">This command defines the equivalent of a <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**PathGeometry**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> with a <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**BezierSegment**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc> where there was preceding curve segment.</target>
          </segment>
        </unit>
        <unit id="232">
          <segment state="initial" id="232">
            <source xml:space="preserve">Syntax</source>
            <target xml:space="preserve">Syntax</target>
          </segment>
        </unit>
        <unit id="233">
          <originalData>
            <data id="id1">&lt;code&gt;</data>
            <data id="id2">&lt;/code&gt;</data>
            <data id="id3">&lt;em&gt;</data>
            <data id="id4">&lt;/em&gt;</data>
            <data id="id5">&lt;em&gt;</data>
            <data id="id6">&lt;/em&gt;</data>
            <data id="id7">&lt;html&gt;</data>
            <data id="id8">&lt;/html&gt;</data>
            <data id="id9">&lt;html&gt;</data>
            <data id="id10">&lt;/html&gt;</data>
            <data id="id11">&lt;code&gt;</data>
            <data id="id12">&lt;/code&gt;</data>
            <data id="id13">&lt;em&gt;</data>
            <data id="id14">&lt;/em&gt;</data>
          </originalData>
          <segment state="initial" id="233">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">S</pc> <pc dataRefEnd="id4" dataRefStart="id3" id="3">controlPoint2</pc> <pc dataRefEnd="id6" dataRefStart="id5" id="5">endPoint</pc> <pc dataRefEnd="id8" dataRefStart="id7" id="7"></pc> - or - <pc dataRefEnd="id10" dataRefStart="id9" id="9"></pc><pc dataRefEnd="id12" dataRefStart="id11" id="10">s</pc> <pc dataRefEnd="id14" dataRefStart="id13" id="12">controlPoint2 endPoint</pc></source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">S</pc> <pc dataRefEnd="id4" dataRefStart="id3" id="3">controlPoint2</pc> <pc dataRefEnd="id6" dataRefStart="id5" id="5">endPoint</pc> <pc dataRefEnd="id8" dataRefStart="id7" id="7"></pc> - or - <pc dataRefEnd="id10" dataRefStart="id9" id="9"></pc><pc dataRefEnd="id12" dataRefStart="id11" id="10">s</pc> <pc dataRefEnd="id14" dataRefStart="id13" id="12">controlPoint2 endPoint</pc></target>
          </segment>
        </unit>
        <unit id="234">
          <segment state="initial" id="234">
            <source xml:space="preserve">Term</source>
            <target xml:space="preserve">Term</target>
          </segment>
        </unit>
        <unit id="235">
          <segment state="initial" id="235">
            <source xml:space="preserve">Description</source>
            <target xml:space="preserve">Description</target>
          </segment>
        </unit>
        <unit id="236">
          <originalData>
            <data id="id1">&lt;em&gt;</data>
            <data id="id2">&lt;/em&gt;</data>
          </originalData>
          <segment state="initial" id="236">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">controlPoint2</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">controlPoint2</pc>
						</target>
          </segment>
        </unit>
        <unit id="237">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;html&gt;</data>
            <data id="id8">&lt;/html&gt;</data>
          </originalData>
          <segment state="initial" id="237">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**Point**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc> <pc dataRefEnd="id8" dataRefStart="id7" id="3"></pc> The control point of the curve, which determines the ending tangent of the curve.</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**Point**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc> <pc dataRefEnd="id8" dataRefStart="id7" id="3"></pc> The control point of the curve, which determines the ending tangent of the curve.</target>
          </segment>
        </unit>
        <unit id="238">
          <originalData>
            <data id="id1">&lt;em&gt;</data>
            <data id="id2">&lt;/em&gt;</data>
          </originalData>
          <segment state="initial" id="238">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">endPoint</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">endPoint</pc>
						</target>
          </segment>
        </unit>
        <unit id="239">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;html&gt;</data>
            <data id="id8">&lt;/html&gt;</data>
          </originalData>
          <segment state="initial" id="239">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**Point**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
							<pc dataRefEnd="id8" dataRefStart="id7" id="2"></pc> The point to which the curve is drawn.</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**Point**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
							<pc dataRefEnd="id8" dataRefStart="id7" id="2"></pc> The point to which the curve is drawn.</target>
          </segment>
        </unit>
        <unit id="240">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="240">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Smooth quadratic Bézier curve command</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Smooth quadratic Bézier curve command</pc>
						</target>
          </segment>
        </unit>
        <unit id="241">
          <segment state="initial" id="241">
            <source xml:space="preserve">Creates a quadratic Bézier curve between the current point and the specified end point.</source>
            <target xml:space="preserve">Creates a quadratic Bézier curve between the current point and the specified end point.</target>
          </segment>
        </unit>
        <unit id="242">
          <segment state="initial" id="242">
            <source xml:space="preserve">The control point is assumed to be the reflection of the control point of the previous command relative to the current point.</source>
            <target xml:space="preserve">The control point is assumed to be the reflection of the control point of the previous command relative to the current point.</target>
          </segment>
        </unit>
        <unit id="243">
          <segment state="initial" id="243">
            <source xml:space="preserve">If there is no previous command or if the previous command was not a quadratic Bézier curve command or a smooth quadratic Bézier curve command, the control point is coincident with the current point.</source>
            <target xml:space="preserve">If there is no previous command or if the previous command was not a quadratic Bézier curve command or a smooth quadratic Bézier curve command, the control point is coincident with the current point.</target>
          </segment>
        </unit>
        <unit id="244">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;link&gt;</data>
            <data id="id8">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="244">
            <source xml:space="preserve">This command defines the equivalent of a <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**PathGeometry**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> with a <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**QuadraticBezierSegment**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc> where there was preceding curve segment.</source>
            <target xml:space="preserve">This command defines the equivalent of a <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**PathGeometry**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> with a <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**QuadraticBezierSegment**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc> where there was preceding curve segment.</target>
          </segment>
        </unit>
        <unit id="245">
          <segment state="initial" id="245">
            <source xml:space="preserve">Syntax</source>
            <target xml:space="preserve">Syntax</target>
          </segment>
        </unit>
        <unit id="246">
          <originalData>
            <data id="id1">&lt;code&gt;</data>
            <data id="id2">&lt;/code&gt;</data>
            <data id="id3">&lt;em&gt;</data>
            <data id="id4">&lt;/em&gt;</data>
            <data id="id5">&lt;em&gt;</data>
            <data id="id6">&lt;/em&gt;</data>
            <data id="id7">&lt;html&gt;</data>
            <data id="id8">&lt;/html&gt;</data>
            <data id="id9">&lt;html&gt;</data>
            <data id="id10">&lt;/html&gt;</data>
            <data id="id11">&lt;code&gt;</data>
            <data id="id12">&lt;/code&gt;</data>
            <data id="id13">&lt;em&gt;</data>
            <data id="id14">&lt;/em&gt;</data>
            <data id="id15">&lt;em&gt;</data>
            <data id="id16">&lt;/em&gt;</data>
          </originalData>
          <segment state="initial" id="246">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">T</pc> <pc dataRefEnd="id4" dataRefStart="id3" id="3">controlPoint</pc> <pc dataRefEnd="id6" dataRefStart="id5" id="5">endPoint</pc> <pc dataRefEnd="id8" dataRefStart="id7" id="7"></pc> - or - <pc dataRefEnd="id10" dataRefStart="id9" id="9"></pc> <pc dataRefEnd="id12" dataRefStart="id11" id="11">t</pc> <pc dataRefEnd="id14" dataRefStart="id13" id="13">controlPoint</pc> <pc dataRefEnd="id16" dataRefStart="id15" id="15">endPoint</pc></source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">T</pc> <pc dataRefEnd="id4" dataRefStart="id3" id="3">controlPoint</pc> <pc dataRefEnd="id6" dataRefStart="id5" id="5">endPoint</pc> <pc dataRefEnd="id8" dataRefStart="id7" id="7"></pc> - or - <pc dataRefEnd="id10" dataRefStart="id9" id="9"></pc> <pc dataRefEnd="id12" dataRefStart="id11" id="11">t</pc> <pc dataRefEnd="id14" dataRefStart="id13" id="13">controlPoint</pc> <pc dataRefEnd="id16" dataRefStart="id15" id="15">endPoint</pc></target>
          </segment>
        </unit>
        <unit id="247">
          <segment state="initial" id="247">
            <source xml:space="preserve">Term</source>
            <target xml:space="preserve">Term</target>
          </segment>
        </unit>
        <unit id="248">
          <segment state="initial" id="248">
            <source xml:space="preserve">Description</source>
            <target xml:space="preserve">Description</target>
          </segment>
        </unit>
        <unit id="249">
          <originalData>
            <data id="id1">&lt;em&gt;</data>
            <data id="id2">&lt;/em&gt;</data>
          </originalData>
          <segment state="initial" id="249">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">controlPoint</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">controlPoint</pc>
						</target>
          </segment>
        </unit>
        <unit id="250">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;html&gt;</data>
            <data id="id8">&lt;/html&gt;</data>
          </originalData>
          <segment state="initial" id="250">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**Point**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
							<pc dataRefEnd="id8" dataRefStart="id7" id="2"></pc> The control point of the curve, which determines the starting and tangent of the curve.</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**Point**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
							<pc dataRefEnd="id8" dataRefStart="id7" id="2"></pc> The control point of the curve, which determines the starting and tangent of the curve.</target>
          </segment>
        </unit>
        <unit id="251">
          <originalData>
            <data id="id1">&lt;em&gt;</data>
            <data id="id2">&lt;/em&gt;</data>
          </originalData>
          <segment state="initial" id="251">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">endPoint</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">endPoint</pc>
						</target>
          </segment>
        </unit>
        <unit id="252">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;html&gt;</data>
            <data id="id8">&lt;/html&gt;</data>
          </originalData>
          <segment state="initial" id="252">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**Point**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
							<pc dataRefEnd="id8" dataRefStart="id7" id="2"></pc> The point to which the curve is drawn.</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**Point**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
							<pc dataRefEnd="id8" dataRefStart="id7" id="2"></pc> The point to which the curve is drawn.</target>
          </segment>
        </unit>
        <unit id="253">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="253">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Elliptical arc command</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Elliptical arc command</pc>
						</target>
          </segment>
        </unit>
        <unit id="254">
          <segment state="initial" id="254">
            <source xml:space="preserve">Creates an elliptical arc between the current point and the specified end point.</source>
            <target xml:space="preserve">Creates an elliptical arc between the current point and the specified end point.</target>
          </segment>
        </unit>
        <unit id="255">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;link&gt;</data>
            <data id="id8">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="255">
            <source xml:space="preserve">Defines the equivalent of a <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**PathGeometry**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> with an <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**ArcSegment**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc>.</source>
            <target xml:space="preserve">Defines the equivalent of a <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**PathGeometry**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> with an <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**ArcSegment**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc>.</target>
          </segment>
        </unit>
        <unit id="256">
          <segment state="initial" id="256">
            <source xml:space="preserve">Syntax</source>
            <target xml:space="preserve">Syntax</target>
          </segment>
        </unit>
        <unit id="257">
          <originalData>
            <data id="id1">&lt;code&gt;</data>
            <data id="id2">&lt;/code&gt;</data>
            <data id="id3">&lt;em&gt;</data>
            <data id="id4">&lt;/em&gt;</data>
            <data id="id5">&lt;em&gt;</data>
            <data id="id6">&lt;/em&gt;</data>
            <data id="id7">&lt;em&gt;</data>
            <data id="id8">&lt;/em&gt;</data>
            <data id="id9">&lt;em&gt;</data>
            <data id="id10">&lt;/em&gt;</data>
            <data id="id11">&lt;em&gt;</data>
            <data id="id12">&lt;/em&gt;</data>
            <data id="id13">&lt;html&gt;</data>
            <data id="id14">&lt;/html&gt;</data>
            <data id="id15">&lt;html&gt;</data>
            <data id="id16">&lt;/html&gt;</data>
            <data id="id17">&lt;code&gt;</data>
            <data id="id18">&lt;/code&gt;</data>
            <data id="id19">&lt;em&gt;</data>
            <data id="id20">&lt;/em&gt;</data>
          </originalData>
          <segment state="initial" id="257">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">A </pc> <pc dataRefEnd="id4" dataRefStart="id3" id="3">size</pc> <pc dataRefEnd="id6" dataRefStart="id5" id="5">rotationAngle</pc> <pc dataRefEnd="id8" dataRefStart="id7" id="7">isLargeArcFlag</pc> <pc dataRefEnd="id10" dataRefStart="id9" id="9">sweepDirectionFlag</pc> <pc dataRefEnd="id12" dataRefStart="id11" id="11">endPoint</pc> <pc dataRefEnd="id14" dataRefStart="id13" id="13"></pc> - or - <pc dataRefEnd="id16" dataRefStart="id15" id="15"></pc><pc dataRefEnd="id18" dataRefStart="id17" id="16">a </pc> <pc dataRefEnd="id20" dataRefStart="id19" id="18">sizerotationAngleisLargeArcFlagsweepDirectionFlagendPoint</pc></source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">A </pc> <pc dataRefEnd="id4" dataRefStart="id3" id="3">size</pc> <pc dataRefEnd="id6" dataRefStart="id5" id="5">rotationAngle</pc> <pc dataRefEnd="id8" dataRefStart="id7" id="7">isLargeArcFlag</pc> <pc dataRefEnd="id10" dataRefStart="id9" id="9">sweepDirectionFlag</pc> <pc dataRefEnd="id12" dataRefStart="id11" id="11">endPoint</pc> <pc dataRefEnd="id14" dataRefStart="id13" id="13"></pc> - or - <pc dataRefEnd="id16" dataRefStart="id15" id="15"></pc><pc dataRefEnd="id18" dataRefStart="id17" id="16">a </pc> <pc dataRefEnd="id20" dataRefStart="id19" id="18">sizerotationAngleisLargeArcFlagsweepDirectionFlagendPoint</pc></target>
          </segment>
        </unit>
        <unit id="258">
          <segment state="initial" id="258">
            <source xml:space="preserve">Term</source>
            <target xml:space="preserve">Term</target>
          </segment>
        </unit>
        <unit id="259">
          <segment state="initial" id="259">
            <source xml:space="preserve">Description</source>
            <target xml:space="preserve">Description</target>
          </segment>
        </unit>
        <unit id="260">
          <originalData>
            <data id="id1">&lt;em&gt;</data>
            <data id="id2">&lt;/em&gt;</data>
          </originalData>
          <segment state="initial" id="260">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">size</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">size</pc>
						</target>
          </segment>
        </unit>
        <unit id="261">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;html&gt;</data>
            <data id="id8">&lt;/html&gt;</data>
          </originalData>
          <segment state="initial" id="261">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**Size**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
							<pc dataRefEnd="id8" dataRefStart="id7" id="2"></pc>The x-radius and y-radius of the arc.</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**Size**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
							<pc dataRefEnd="id8" dataRefStart="id7" id="2"></pc>The x-radius and y-radius of the arc.</target>
          </segment>
        </unit>
        <unit id="262">
          <originalData>
            <data id="id1">&lt;em&gt;</data>
            <data id="id2">&lt;/em&gt;</data>
          </originalData>
          <segment state="initial" id="262">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">rotationAngle</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">rotationAngle</pc>
						</target>
          </segment>
        </unit>
        <unit id="263">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;html&gt;</data>
            <data id="id8">&lt;/html&gt;</data>
          </originalData>
          <segment state="initial" id="263">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**Double**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc> <pc dataRefEnd="id8" dataRefStart="id7" id="3"></pc> The rotation of the ellipse, in degrees.</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**Double**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc> <pc dataRefEnd="id8" dataRefStart="id7" id="3"></pc> The rotation of the ellipse, in degrees.</target>
          </segment>
        </unit>
        <unit id="264">
          <originalData>
            <data id="id1">&lt;em&gt;</data>
            <data id="id2">&lt;/em&gt;</data>
          </originalData>
          <segment state="initial" id="264">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">isLargeArcFlag</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">isLargeArcFlag</pc>
						</target>
          </segment>
        </unit>
        <unit id="265">
          <segment state="initial" id="265">
            <source xml:space="preserve">Set to 1 if the angle of the arc should be 180 degrees or greater; otherwise, set to 0.</source>
            <target xml:space="preserve">Set to 1 if the angle of the arc should be 180 degrees or greater; otherwise, set to 0.</target>
          </segment>
        </unit>
        <unit id="266">
          <originalData>
            <data id="id1">&lt;em&gt;</data>
            <data id="id2">&lt;/em&gt;</data>
          </originalData>
          <segment state="initial" id="266">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">sweepDirectionFlag</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">sweepDirectionFlag</pc>
						</target>
          </segment>
        </unit>
        <unit id="267">
          <segment state="initial" id="267">
            <source xml:space="preserve">Set to 1 if the arc is drawn in a positive-angle direction; otherwise, set to 0.</source>
            <target xml:space="preserve">Set to 1 if the arc is drawn in a positive-angle direction; otherwise, set to 0.</target>
          </segment>
        </unit>
        <unit id="268">
          <originalData>
            <data id="id1">&lt;em&gt;</data>
            <data id="id2">&lt;/em&gt;</data>
          </originalData>
          <segment state="initial" id="268">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">endPoint</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">endPoint</pc>
						</target>
          </segment>
        </unit>
        <unit id="269">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;html&gt;</data>
            <data id="id8">&lt;/html&gt;</data>
          </originalData>
          <segment state="initial" id="269">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**Point**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc> <pc dataRefEnd="id8" dataRefStart="id7" id="3"></pc> The point to which the arc is drawn.</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**Point**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc> <pc dataRefEnd="id8" dataRefStart="id7" id="3"></pc> The point to which the arc is drawn.</target>
          </segment>
        </unit>
        <unit id="270">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="270">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Close command</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Close command</pc>
						</target>
          </segment>
        </unit>
        <unit id="271">
          <segment state="initial" id="271">
            <source xml:space="preserve">Ends the current figure and creates a line that connects the current point to the starting point of the figure.</source>
            <target xml:space="preserve">Ends the current figure and creates a line that connects the current point to the starting point of the figure.</target>
          </segment>
        </unit>
        <unit id="272">
          <segment state="initial" id="272">
            <source xml:space="preserve">This command creates a line-join (corner) between the last segment and the first segment of the figure.</source>
            <target xml:space="preserve">This command creates a line-join (corner) between the last segment and the first segment of the figure.</target>
          </segment>
        </unit>
        <unit id="273">
          <segment state="initial" id="273">
            <source xml:space="preserve">Syntax</source>
            <target xml:space="preserve">Syntax</target>
          </segment>
        </unit>
        <unit id="274">
          <originalData>
            <data id="id1">&lt;code&gt;</data>
            <data id="id2">&lt;/code&gt;</data>
            <data id="id3">&lt;html&gt;</data>
            <data id="id4">&lt;/html&gt;</data>
            <data id="id5">&lt;html&gt;</data>
            <data id="id6">&lt;/html&gt;</data>
            <data id="id7">&lt;code&gt;</data>
            <data id="id8">&lt;/code&gt;</data>
          </originalData>
          <segment state="initial" id="274">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Z</pc> <pc dataRefEnd="id4" dataRefStart="id3" id="3"></pc> - or - <pc dataRefEnd="id6" dataRefStart="id5" id="5"></pc> <pc dataRefEnd="id8" dataRefStart="id7" id="7">z </pc></source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Z</pc> <pc dataRefEnd="id4" dataRefStart="id3" id="3"></pc> - or - <pc dataRefEnd="id6" dataRefStart="id5" id="5"></pc> <pc dataRefEnd="id8" dataRefStart="id7" id="7">z </pc></target>
          </segment>
        </unit>
        <unit id="275">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="275">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Point syntax</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Point syntax</pc>
						</target>
          </segment>
        </unit>
        <unit id="276">
          <segment state="initial" id="276">
            <source xml:space="preserve">Describes the x-coordinate and y-coordinate of a point.</source>
            <target xml:space="preserve">Describes the x-coordinate and y-coordinate of a point.</target>
          </segment>
        </unit>
        <unit id="277">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="277">
            <source xml:space="preserve">See also <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**Point**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>.</source>
            <target xml:space="preserve">See also <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**Point**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>.</target>
          </segment>
        </unit>
        <unit id="278">
          <segment state="initial" id="278">
            <source xml:space="preserve">Syntax</source>
            <target xml:space="preserve">Syntax</target>
          </segment>
        </unit>
        <unit id="279">
          <originalData>
            <data id="id1">&lt;em&gt;</data>
            <data id="id2">&lt;/em&gt;</data>
            <data id="id3">&lt;em&gt;</data>
            <data id="id4">&lt;/em&gt;</data>
            <data id="id5">&lt;html&gt;</data>
            <data id="id6">&lt;/html&gt;</data>
            <data id="id7">&lt;html&gt;</data>
            <data id="id8">&lt;/html&gt;</data>
            <data id="id9">&lt;em&gt;</data>
            <data id="id10">&lt;/em&gt;</data>
            <data id="id11">&lt;em&gt;</data>
            <data id="id12">&lt;/em&gt;</data>
          </originalData>
          <segment state="initial" id="279">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">x</pc>,<pc dataRefEnd="id4" dataRefStart="id3" id="3">y</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4"></pc> - or - <pc dataRefEnd="id8" dataRefStart="id7" id="6"></pc><pc dataRefEnd="id10" dataRefStart="id9" id="7">x</pc> <pc dataRefEnd="id12" dataRefStart="id11" id="9">y</pc></source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">x</pc>,<pc dataRefEnd="id4" dataRefStart="id3" id="3">y</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4"></pc> - or - <pc dataRefEnd="id8" dataRefStart="id7" id="6"></pc><pc dataRefEnd="id10" dataRefStart="id9" id="7">x</pc> <pc dataRefEnd="id12" dataRefStart="id11" id="9">y</pc></target>
          </segment>
        </unit>
        <unit id="280">
          <segment state="initial" id="280">
            <source xml:space="preserve">Term</source>
            <target xml:space="preserve">Term</target>
          </segment>
        </unit>
        <unit id="281">
          <segment state="initial" id="281">
            <source xml:space="preserve">Description</source>
            <target xml:space="preserve">Description</target>
          </segment>
        </unit>
        <unit id="282">
          <originalData>
            <data id="id1">&lt;em&gt;</data>
            <data id="id2">&lt;/em&gt;</data>
          </originalData>
          <segment state="initial" id="282">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">x</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">x</pc>
						</target>
          </segment>
        </unit>
        <unit id="283">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;html&gt;</data>
            <data id="id8">&lt;/html&gt;</data>
          </originalData>
          <segment state="initial" id="283">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**Double**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc> <pc dataRefEnd="id8" dataRefStart="id7" id="3"></pc> The x-coordinate of the point.</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**Double**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc> <pc dataRefEnd="id8" dataRefStart="id7" id="3"></pc> The x-coordinate of the point.</target>
          </segment>
        </unit>
        <unit id="284">
          <originalData>
            <data id="id1">&lt;em&gt;</data>
            <data id="id2">&lt;/em&gt;</data>
          </originalData>
          <segment state="initial" id="284">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">y</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">y</pc>
						</target>
          </segment>
        </unit>
        <unit id="285">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;html&gt;</data>
            <data id="id8">&lt;/html&gt;</data>
          </originalData>
          <segment state="initial" id="285">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**Double**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc> <pc dataRefEnd="id8" dataRefStart="id7" id="3"></pc> The y-coordinate of the point.</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**Double**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc> <pc dataRefEnd="id8" dataRefStart="id7" id="3"></pc> The y-coordinate of the point.</target>
          </segment>
        </unit>
        <unit id="286">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="286">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Additional notes</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Additional notes</pc>
						</target>
          </segment>
        </unit>
        <unit id="287">
          <segment state="initial" id="287">
            <source xml:space="preserve">Instead of a standard numerical value, you can also use the following special values.</source>
            <target xml:space="preserve">Instead of a standard numerical value, you can also use the following special values.</target>
          </segment>
        </unit>
        <unit id="288">
          <segment state="initial" id="288">
            <source xml:space="preserve">These values are case sensitive.</source>
            <target xml:space="preserve">These values are case sensitive.</target>
          </segment>
        </unit>
        <unit id="289">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;strong&gt;</data>
            <data id="id4">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="289">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Infinity</pc>: Represents <pc dataRefEnd="id4" dataRefStart="id3" id="3">PositiveInfinity</pc>.</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Infinity</pc>: Represents <pc dataRefEnd="id4" dataRefStart="id3" id="3">PositiveInfinity</pc>.</target>
          </segment>
        </unit>
        <unit id="290">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;strong&gt;</data>
            <data id="id4">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="290">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">\-Infinity</pc>: Represents <pc dataRefEnd="id4" dataRefStart="id3" id="3">NegativeInfinity</pc>.</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">\-Infinity</pc>: Represents <pc dataRefEnd="id4" dataRefStart="id3" id="3">NegativeInfinity</pc>.</target>
          </segment>
        </unit>
        <unit id="291">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;strong&gt;</data>
            <data id="id4">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="291">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">NaN</pc>: Represents <pc dataRefEnd="id4" dataRefStart="id3" id="3">NaN</pc>.</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">NaN</pc>: Represents <pc dataRefEnd="id4" dataRefStart="id3" id="3">NaN</pc>.</target>
          </segment>
        </unit>
        <unit id="292">
          <segment state="initial" id="292">
            <source xml:space="preserve">Instead of using decimals or integers, you can use scientific notation.</source>
            <target xml:space="preserve">Instead of using decimals or integers, you can use scientific notation.</target>
          </segment>
        </unit>
        <unit id="293">
          <originalData>
            <data id="id1">&lt;code&gt;</data>
            <data id="id2">&lt;/code&gt;</data>
          </originalData>
          <segment state="initial" id="293">
            <source xml:space="preserve">For example, <pc dataRefEnd="id2" dataRefStart="id1" id="2">+1.e17</pc> is a valid value.</source>
            <target xml:space="preserve">For example, <pc dataRefEnd="id2" dataRefStart="id1" id="2">+1.e17</pc> is a valid value.</target>
          </segment>
        </unit>
        <unit id="294">
          <segment state="initial" id="294">
            <source xml:space="preserve">Design tools that produce move and draw commands</source>
            <target xml:space="preserve">Design tools that produce move and draw commands</target>
          </segment>
        </unit>
        <unit id="295">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;link&gt;</data>
            <data id="id4">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="295">
            <source xml:space="preserve">Using the <pc dataRefEnd="id2" dataRefStart="id1" id="2">Pen</pc> tool and other drawing tools in Blend for Microsoft Visual Studio 2013 will usually produce a <pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**Path**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc> object, with move and draw commands.</source>
            <target xml:space="preserve">Using the <pc dataRefEnd="id2" dataRefStart="id1" id="2">Pen</pc> tool and other drawing tools in Blend for Microsoft Visual Studio 2013 will usually produce a <pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**Path**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc> object, with move and draw commands.</target>
          </segment>
        </unit>
        <unit id="296">
          <segment state="initial" id="296">
            <source xml:space="preserve">You might see existing move and draw command data in some of the control parts defined in the Windows Runtime XAML default templates for controls.</source>
            <target xml:space="preserve">You might see existing move and draw command data in some of the control parts defined in the Windows Runtime XAML default templates for controls.</target>
          </segment>
        </unit>
        <unit id="297">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="297">
            <source xml:space="preserve">For example, some controls use a <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**PathIcon**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> that has the data defined as move and draw commands.</source>
            <target xml:space="preserve">For example, some controls use a <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**PathIcon**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> that has the data defined as move and draw commands.</target>
          </segment>
        </unit>
        <unit id="298">
          <segment state="initial" id="298">
            <source xml:space="preserve">There are exporters or plug-ins available for other commonly used vector-graphics design tools that can output the vector in XAML form.</source>
            <target xml:space="preserve">There are exporters or plug-ins available for other commonly used vector-graphics design tools that can output the vector in XAML form.</target>
          </segment>
        </unit>
        <unit id="299">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;link&gt;</data>
            <data id="id8">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="299">
            <source xml:space="preserve">These usually create <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**Path**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> objects in a layout container, with move and draw commands for <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**Path.Data**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc>.</source>
            <target xml:space="preserve">These usually create <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**Path**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> objects in a layout container, with move and draw commands for <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**Path.Data**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc>.</target>
          </segment>
        </unit>
        <unit id="300">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="300">
            <source xml:space="preserve">There may be multiple <pc dataRefEnd="id2" dataRefStart="id1" id="2">Path</pc> elements in the XAML so that different brushes can be applied.</source>
            <target xml:space="preserve">There may be multiple <pc dataRefEnd="id2" dataRefStart="id1" id="2">Path</pc> elements in the XAML so that different brushes can be applied.</target>
          </segment>
        </unit>
        <unit id="301">
          <segment state="initial" id="301">
            <source xml:space="preserve">These exporters or plug-ins were originally written for Windows Presentation Foundation (WPF)  XAML, but that aspect of XAML syntax is identical with Windows Runtime XAML.</source>
            <target xml:space="preserve">These exporters or plug-ins were originally written for Windows Presentation Foundation (WPF)  XAML, but that aspect of XAML syntax is identical with Windows Runtime XAML.</target>
          </segment>
        </unit>
        <unit id="302">
          <segment state="initial" id="302">
            <source xml:space="preserve">You can probably use chunks of XAML from an exporter and paste them right into a Windows Runtime XAML page.</source>
            <target xml:space="preserve">You can probably use chunks of XAML from an exporter and paste them right into a Windows Runtime XAML page.</target>
          </segment>
        </unit>
        <unit id="303">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="303">
            <source xml:space="preserve">(However, you won't be able to use a <pc dataRefEnd="id2" dataRefStart="id1" id="2">RadialGradientBrush</pc>, if that was part of the converted XAML, because Windows Runtime XAML doesn't support that brush.)</source>
            <target xml:space="preserve">(However, you won't be able to use a <pc dataRefEnd="id2" dataRefStart="id1" id="2">RadialGradientBrush</pc>, if that was part of the converted XAML, because Windows Runtime XAML doesn't support that brush.)</target>
          </segment>
        </unit>
        <unit id="304">
          <segment state="initial" id="304">
            <source xml:space="preserve">Related topics</source>
            <target xml:space="preserve">Related topics</target>
          </segment>
        </unit>
        <unit id="305">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="305">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">Draw shapes</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">Draw shapes</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</target>
          </segment>
        </unit>
        <unit id="306">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="306">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">Use brushes</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">Use brushes</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</target>
          </segment>
        </unit>
        <unit id="307">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="307">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**Path.Data**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**Path.Data**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</target>
          </segment>
        </unit>
        <unit id="308">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="308">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**PathIcon**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**PathIcon**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</target>
          </segment>
        </unit>
      </group>
    </group>
  </file>
</xliff>