<?xml version="1.0" encoding="utf-8"?>
<xliff srcLang="en-us" trgLang="de-de" version="2.0" xmlns="urn:oasis:names:tc:xliff:document:2.0" xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">11243e70d4592565b217b82c049164ce36e515de</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <group id="101">
        <unit id="101">
          <segment state="initial" id="101">
            <source xml:space="preserve">Files and folders in the Music, Pictures, and Videos libraries</source>
            <target xml:space="preserve">Files and folders in the Music, Pictures, and Videos libraries</target>
          </segment>
        </unit>
        <unit id="102">
          <segment state="initial" id="102">
            <source xml:space="preserve">\[ Updated for UWP apps on Windows 10.</source>
            <target xml:space="preserve">\[ Updated for UWP apps on Windows 10.</target>
          </segment>
        </unit>
        <unit id="103">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="103">
            <source xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">archive</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> \]</source>
            <target xml:space="preserve">For Windows 8.x articles, see the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">archive</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> \]</target>
          </segment>
        </unit>
        <unit id="104">
          <segment state="initial" id="104">
            <source xml:space="preserve">Add existing folders of music, pictures, or videos to the corresponding libraries.</source>
            <target xml:space="preserve">Add existing folders of music, pictures, or videos to the corresponding libraries.</target>
          </segment>
        </unit>
        <unit id="105">
          <segment state="initial" id="105">
            <source xml:space="preserve">You can also remove folders from libraries, get the list of folders in a library, and discover stored photos, music, and videos.</source>
            <target xml:space="preserve">You can also remove folders from libraries, get the list of folders in a library, and discover stored photos, music, and videos.</target>
          </segment>
        </unit>
        <unit id="106">
          <segment state="initial" id="106">
            <source xml:space="preserve">A library is a virtual collection of folders, which includes a known folder by default plus any other folders the user has added to the library by using your app or one of the built-in apps.</source>
            <target xml:space="preserve">A library is a virtual collection of folders, which includes a known folder by default plus any other folders the user has added to the library by using your app or one of the built-in apps.</target>
          </segment>
        </unit>
        <unit id="107">
          <segment state="initial" id="107">
            <source xml:space="preserve">For example, the Pictures library includes the Pictures known folder by default.</source>
            <target xml:space="preserve">For example, the Pictures library includes the Pictures known folder by default.</target>
          </segment>
        </unit>
        <unit id="108">
          <segment state="initial" id="108">
            <source xml:space="preserve">The user can add folders to, or remove them from, the Pictures library by using your app or the built-in Photos app.</source>
            <target xml:space="preserve">The user can add folders to, or remove them from, the Pictures library by using your app or the built-in Photos app.</target>
          </segment>
        </unit>
        <unit id="109">
          <segment state="initial" id="109">
            <source xml:space="preserve">Prerequisites</source>
            <target xml:space="preserve">Prerequisites</target>
          </segment>
        </unit>
        <unit id="110">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="110">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Understand async programming for Universal Windows Platform (UWP) apps</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Understand async programming for Universal Windows Platform (UWP) apps</pc>
						</target>
          </segment>
        </unit>
        <unit id="111">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="111">
            <source xml:space="preserve">You can learn how to write asynchronous apps in C\# or Visual Basic, see <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Call asynchronous APIs in C\# or Visual Basic</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>.</source>
            <target xml:space="preserve">You can learn how to write asynchronous apps in C\# or Visual Basic, see <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Call asynchronous APIs in C\# or Visual Basic</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>.</target>
          </segment>
        </unit>
        <unit id="112">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="112">
            <source xml:space="preserve">To learn how to write asynchronous apps in C++, see <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Asynchronous programming in C++</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>.</source>
            <target xml:space="preserve">To learn how to write asynchronous apps in C++, see <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Asynchronous programming in C++</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>.</target>
          </segment>
        </unit>
        <unit id="113">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="113">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Access permissions to the location</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Access permissions to the location</pc>
						</target>
          </segment>
        </unit>
        <unit id="114">
          <segment state="initial" id="114">
            <source xml:space="preserve">In Visual Studio, open the app manifest file in Manifest Designer.</source>
            <target xml:space="preserve">In Visual Studio, open the app manifest file in Manifest Designer.</target>
          </segment>
        </unit>
        <unit id="115">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="115">
            <source xml:space="preserve">On the <pc dataRefEnd="id2" dataRefStart="id1" id="2">Capabilities</pc> page, select the libraries that your app manages.</source>
            <target xml:space="preserve">On the <pc dataRefEnd="id2" dataRefStart="id1" id="2">Capabilities</pc> page, select the libraries that your app manages.</target>
          </segment>
        </unit>
        <unit id="116">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="116">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Music Library</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Music Library</pc>
						</target>
          </segment>
        </unit>
        <unit id="117">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="117">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Pictures Library</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Pictures Library</pc>
						</target>
          </segment>
        </unit>
        <unit id="118">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="118">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Videos Library</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Videos Library</pc>
						</target>
          </segment>
        </unit>
        <unit id="119">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="119">
            <source xml:space="preserve">To learn more, see <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">File access permissions</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>.</source>
            <target xml:space="preserve">To learn more, see <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">File access permissions</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>.</target>
          </segment>
        </unit>
        <unit id="120">
          <segment state="initial" id="120">
            <source xml:space="preserve">Get a reference to a library</source>
            <target xml:space="preserve">Get a reference to a library</target>
          </segment>
        </unit>
        <unit id="121">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="121">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Note</pc>  Remember to declare the appropriate capability.</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Note</pc>  Remember to declare the appropriate capability.</target>
          </segment>
        </unit>
        <unit id="122">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="122">
            <source xml:space="preserve">To get a reference to the user's Music, Pictures, or Video library, call the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**StorageLibrary.GetLibraryAsync**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> method.</source>
            <target xml:space="preserve">To get a reference to the user's Music, Pictures, or Video library, call the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**StorageLibrary.GetLibraryAsync**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> method.</target>
          </segment>
        </unit>
        <unit id="123">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="123">
            <source xml:space="preserve">Provide the corresponding value from the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**KnownLibraryId**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> enumeration.</source>
            <target xml:space="preserve">Provide the corresponding value from the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**KnownLibraryId**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> enumeration.</target>
          </segment>
        </unit>
        <unit id="124">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="124">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**KnownLibraryId.Music**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**KnownLibraryId.Music**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</target>
          </segment>
        </unit>
        <unit id="125">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="125">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**KnownLibraryId.Pictures**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**KnownLibraryId.Pictures**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</target>
          </segment>
        </unit>
        <unit id="126">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="126">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**KnownLibraryId.Videos**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1CapsExtId1">
								<pc dataRefEnd="id4" dataRefStart="id3" id="1CapsExtId2">**KnownLibraryId.Videos**</pc>
								<pc dataRefEnd="id6" dataRefStart="id5" id="1CapsExtId3"></pc>
							</pc>
						</target>
          </segment>
        </unit>
        <unit id="127">
          <segment state="initial" id="127">
            <source xml:space="preserve">Get the list of folders in a library</source>
            <target xml:space="preserve">Get the list of folders in a library</target>
          </segment>
        </unit>
        <unit id="128">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="128">
            <source xml:space="preserve">To get the list of folders in a library, get the value of the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**StorageLibrary.Folders**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> property.</source>
            <target xml:space="preserve">To get the list of folders in a library, get the value of the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**StorageLibrary.Folders**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> property.</target>
          </segment>
        </unit>
        <unit id="129">
          <segment state="initial" id="129">
            <source xml:space="preserve">Get the folder in a library where new files are saved by default</source>
            <target xml:space="preserve">Get the folder in a library where new files are saved by default</target>
          </segment>
        </unit>
        <unit id="130">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="130">
            <source xml:space="preserve">To get the folder in a library where new files are saved by default, get the value of the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**StorageLibrary.SaveFolder**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> property.</source>
            <target xml:space="preserve">To get the folder in a library where new files are saved by default, get the value of the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**StorageLibrary.SaveFolder**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> property.</target>
          </segment>
        </unit>
        <unit id="131">
          <segment state="initial" id="131">
            <source xml:space="preserve">Add an existing folder to a library</source>
            <target xml:space="preserve">Add an existing folder to a library</target>
          </segment>
        </unit>
        <unit id="132">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="132">
            <source xml:space="preserve">To add a folder to a library, you call the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**StorageLibrary.RequestAddFolderAsync**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>.</source>
            <target xml:space="preserve">To add a folder to a library, you call the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**StorageLibrary.RequestAddFolderAsync**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>.</target>
          </segment>
        </unit>
        <unit id="133">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="133">
            <source xml:space="preserve">Taking the Pictures Library as an example, calling this method causes a folder picker to be shown to the user with an <pc dataRefEnd="id2" dataRefStart="id1" id="2">Add this folder to Pictures</pc> button.</source>
            <target xml:space="preserve">Taking the Pictures Library as an example, calling this method causes a folder picker to be shown to the user with an <pc dataRefEnd="id2" dataRefStart="id1" id="2">Add this folder to Pictures</pc> button.</target>
          </segment>
        </unit>
        <unit id="134">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="134">
            <source xml:space="preserve">If the user picks a folder then the folder remains in its original location on disk and it becomes an item in the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**StorageLibrary.Folders**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> property (and in the built-in Photos app), but the folder does not appear as a child of the Pictures folder in File Explorer.</source>
            <target xml:space="preserve">If the user picks a folder then the folder remains in its original location on disk and it becomes an item in the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**StorageLibrary.Folders**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> property (and in the built-in Photos app), but the folder does not appear as a child of the Pictures folder in File Explorer.</target>
          </segment>
        </unit>
        <unit id="135">
          <segment state="initial" id="135">
            <source xml:space="preserve">Remove a folder from a library</source>
            <target xml:space="preserve">Remove a folder from a library</target>
          </segment>
        </unit>
        <unit id="136">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="136">
            <source xml:space="preserve">To remove a folder from a library, call the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**StorageLibrary.RequestRemoveFolderAsync**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> method and specify the folder to be removed.</source>
            <target xml:space="preserve">To remove a folder from a library, call the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**StorageLibrary.RequestRemoveFolderAsync**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> method and specify the folder to be removed.</target>
          </segment>
        </unit>
        <unit id="137">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;link&gt;</data>
            <data id="id8">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="137">
            <source xml:space="preserve">You could use <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**StorageLibrary.Folders**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> and a <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**ListView**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc> control (or similar) for the user to select a folder to remove.</source>
            <target xml:space="preserve">You could use <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**StorageLibrary.Folders**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> and a <pc dataRefEnd="id8" dataRefStart="id7" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**ListView**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc> control (or similar) for the user to select a folder to remove.</target>
          </segment>
        </unit>
        <unit id="138">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="138">
            <source xml:space="preserve">When you call <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**StorageLibrary.RequestRemoveFolderAsync**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>, the user sees a confirmation dialog saying that the folder "won't appear in Pictures anymore, but won't be deleted."</source>
            <target xml:space="preserve">When you call <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**StorageLibrary.RequestRemoveFolderAsync**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>, the user sees a confirmation dialog saying that the folder "won't appear in Pictures anymore, but won't be deleted."</target>
          </segment>
        </unit>
        <unit id="139">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="139">
            <source xml:space="preserve">What this means is that the folder remains in its original location on disk, is removed from the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**StorageLibrary.Folders**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> property, and will no longer included in the built-in Photos app.</source>
            <target xml:space="preserve">What this means is that the folder remains in its original location on disk, is removed from the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**StorageLibrary.Folders**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> property, and will no longer included in the built-in Photos app.</target>
          </segment>
        </unit>
        <unit id="140">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
            <data id="id7">&lt;strong&gt;</data>
            <data id="id8">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="140">
            <source xml:space="preserve">The following example assumes that the user has selected the folder to remove from a <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**ListView**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> control named <pc dataRefEnd="id8" dataRefStart="id7" id="4">lvPictureFolders</pc>.</source>
            <target xml:space="preserve">The following example assumes that the user has selected the folder to remove from a <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**ListView**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> control named <pc dataRefEnd="id8" dataRefStart="id7" id="4">lvPictureFolders</pc>.</target>
          </segment>
        </unit>
        <unit id="141">
          <segment state="initial" id="141">
            <source xml:space="preserve">Get notified of changes to the list of folders in a library</source>
            <target xml:space="preserve">Get notified of changes to the list of folders in a library</target>
          </segment>
        </unit>
        <unit id="142">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="142">
            <source xml:space="preserve">To get notified about changes to the list of folders in a library, register a handler for the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**StorageLibrary.DefinitionChanged**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> event of the library.</source>
            <target xml:space="preserve">To get notified about changes to the list of folders in a library, register a handler for the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**StorageLibrary.DefinitionChanged**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> event of the library.</target>
          </segment>
        </unit>
        <unit id="143">
          <segment state="initial" id="143">
            <source xml:space="preserve">Media library folders</source>
            <target xml:space="preserve">Media library folders</target>
          </segment>
        </unit>
        <unit id="144">
          <segment state="initial" id="144">
            <source xml:space="preserve">A device provides five predefined locations for users and apps to store media files.</source>
            <target xml:space="preserve">A device provides five predefined locations for users and apps to store media files.</target>
          </segment>
        </unit>
        <unit id="145">
          <segment state="initial" id="145">
            <source xml:space="preserve">Built-in apps store both user-created media and downloaded media in these locations.</source>
            <target xml:space="preserve">Built-in apps store both user-created media and downloaded media in these locations.</target>
          </segment>
        </unit>
        <unit id="146">
          <segment state="initial" id="146">
            <source xml:space="preserve">The locations are:</source>
            <target xml:space="preserve">The locations are:</target>
          </segment>
        </unit>
        <unit id="147">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="147">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Pictures</pc> folder.</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Pictures</pc> folder.</target>
          </segment>
        </unit>
        <unit id="148">
          <segment state="initial" id="148">
            <source xml:space="preserve">Contains pictures.</source>
            <target xml:space="preserve">Contains pictures.</target>
          </segment>
        </unit>
        <unit id="149">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="149">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Camera Roll</pc> folder.</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Camera Roll</pc> folder.</target>
          </segment>
        </unit>
        <unit id="150">
          <segment state="initial" id="150">
            <source xml:space="preserve">Contains photos and video from the built-in camera.</source>
            <target xml:space="preserve">Contains photos and video from the built-in camera.</target>
          </segment>
        </unit>
        <unit id="151">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="151">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Saved Pictures</pc> folder.</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Saved Pictures</pc> folder.</target>
          </segment>
        </unit>
        <unit id="152">
          <segment state="initial" id="152">
            <source xml:space="preserve">Contains pictures that the user has saved from other apps.</source>
            <target xml:space="preserve">Contains pictures that the user has saved from other apps.</target>
          </segment>
        </unit>
        <unit id="153">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="153">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Music</pc> folder.</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Music</pc> folder.</target>
          </segment>
        </unit>
        <unit id="154">
          <segment state="initial" id="154">
            <source xml:space="preserve">Contains songs, podcasts, and audio books.</source>
            <target xml:space="preserve">Contains songs, podcasts, and audio books.</target>
          </segment>
        </unit>
        <unit id="155">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="155">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Video</pc> folder.</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Video</pc> folder.</target>
          </segment>
        </unit>
        <unit id="156">
          <segment state="initial" id="156">
            <source xml:space="preserve">Contains videos.</source>
            <target xml:space="preserve">Contains videos.</target>
          </segment>
        </unit>
        <unit id="157">
          <segment state="initial" id="157">
            <source xml:space="preserve">Users or apps may also store media files outside the media library folders on the SD card.</source>
            <target xml:space="preserve">Users or apps may also store media files outside the media library folders on the SD card.</target>
          </segment>
        </unit>
        <unit id="158">
          <segment state="initial" id="158">
            <source xml:space="preserve">To find a media file reliably on the SD card, scan the contents of the SD card, or ask the user to locate the file by using a file picker.</source>
            <target xml:space="preserve">To find a media file reliably on the SD card, scan the contents of the SD card, or ask the user to locate the file by using a file picker.</target>
          </segment>
        </unit>
        <unit id="159">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="159">
            <source xml:space="preserve">For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Access the SD card</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>.</source>
            <target xml:space="preserve">For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">Access the SD card</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc>.</target>
          </segment>
        </unit>
        <unit id="160">
          <segment state="initial" id="160">
            <source xml:space="preserve">Querying the media libraries</source>
            <target xml:space="preserve">Querying the media libraries</target>
          </segment>
        </unit>
        <unit id="161">
          <segment state="initial" id="161">
            <source xml:space="preserve">Query results include both internal and removable storage</source>
            <target xml:space="preserve">Query results include both internal and removable storage</target>
          </segment>
        </unit>
        <unit id="162">
          <segment state="initial" id="162">
            <source xml:space="preserve">Users can choose to store files by default on the optional SD card.</source>
            <target xml:space="preserve">Users can choose to store files by default on the optional SD card.</target>
          </segment>
        </unit>
        <unit id="163">
          <segment state="initial" id="163">
            <source xml:space="preserve">Apps, however, can opt out of allowing files to be stored on the SD card.</source>
            <target xml:space="preserve">Apps, however, can opt out of allowing files to be stored on the SD card.</target>
          </segment>
        </unit>
        <unit id="164">
          <segment state="initial" id="164">
            <source xml:space="preserve">As a result, the media libraries can be split across the device's internal storage and the SD card.</source>
            <target xml:space="preserve">As a result, the media libraries can be split across the device's internal storage and the SD card.</target>
          </segment>
        </unit>
        <unit id="165">
          <segment state="initial" id="165">
            <source xml:space="preserve">You don't have to write additional code to handle this possibility.</source>
            <target xml:space="preserve">You don't have to write additional code to handle this possibility.</target>
          </segment>
        </unit>
        <unit id="166">
          <originalData>
            <data id="id1">&lt;link&gt;</data>
            <data id="id2">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="166">
            <source xml:space="preserve">The methods in the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**Windows.Storage**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> namespace that query known folders transparently combine the query results from both locations.</source>
            <target xml:space="preserve">The methods in the <pc dataRefEnd="id2" dataRefStart="id1" id="2CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="2CapsExtId2">**Windows.Storage**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="2CapsExtId3"></pc></pc> namespace that query known folders transparently combine the query results from both locations.</target>
          </segment>
        </unit>
        <unit id="167">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="167">
            <source xml:space="preserve">You don't have to specify the <pc dataRefEnd="id2" dataRefStart="id1" id="2">removableStorage</pc> capability in the app manifest file to get these combined results, either.</source>
            <target xml:space="preserve">You don't have to specify the <pc dataRefEnd="id2" dataRefStart="id1" id="2">removableStorage</pc> capability in the app manifest file to get these combined results, either.</target>
          </segment>
        </unit>
        <unit id="168">
          <segment state="initial" id="168">
            <source xml:space="preserve">Consider the state of the device's storage shown in the following image:</source>
            <target xml:space="preserve">Consider the state of the device's storage shown in the following image:</target>
          </segment>
        </unit>
        <unit id="169">
          <originalData>
            <data id="id1">&lt;linkText&gt;</data>
            <data id="id2">&lt;/linkText&gt;</data>
          </originalData>
          <segment state="initial" id="169">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">images on the phone and sd card</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">images on the phone and sd card</pc>
						</target>
          </segment>
        </unit>
        <unit id="170">
          <originalData>
            <data id="id1">&lt;code&gt;</data>
            <data id="id2">&lt;/code&gt;</data>
          </originalData>
          <segment state="initial" id="170">
            <source xml:space="preserve">If you query the contents of the Pictures Library by calling <pc dataRefEnd="id2" dataRefStart="id1" id="2">await KnownFolders.PicturesLibrary.GetFilesAsync()</pc>, the results include both internalPic.jpg and SDPic.jpg.</source>
            <target xml:space="preserve">If you query the contents of the Pictures Library by calling <pc dataRefEnd="id2" dataRefStart="id1" id="2">await KnownFolders.PicturesLibrary.GetFilesAsync()</pc>, the results include both internalPic.jpg and SDPic.jpg.</target>
          </segment>
        </unit>
        <unit id="171">
          <segment state="initial" id="171">
            <source xml:space="preserve">Deep queries</source>
            <target xml:space="preserve">Deep queries</target>
          </segment>
        </unit>
        <unit id="172">
          <segment state="initial" id="172">
            <source xml:space="preserve">Use the deep queries to enumerate the entire contents of a media library quickly.</source>
            <target xml:space="preserve">Use the deep queries to enumerate the entire contents of a media library quickly.</target>
          </segment>
        </unit>
        <unit id="173">
          <segment state="initial" id="173">
            <source xml:space="preserve">The deep queries return only files of the specified media type.</source>
            <target xml:space="preserve">The deep queries return only files of the specified media type.</target>
          </segment>
        </unit>
        <unit id="174">
          <segment state="initial" id="174">
            <source xml:space="preserve">For example, if you query the Music Library with a deep query, the query results do not include any picture files found in the Music folder.</source>
            <target xml:space="preserve">For example, if you query the Music Library with a deep query, the query results do not include any picture files found in the Music folder.</target>
          </segment>
        </unit>
        <unit id="175">
          <segment state="initial" id="175">
            <source xml:space="preserve">On devices where the camera saves both a low-resolution image and a high-resolution image of every picture, the deep queries return only the low-resolution image.</source>
            <target xml:space="preserve">On devices where the camera saves both a low-resolution image and a high-resolution image of every picture, the deep queries return only the low-resolution image.</target>
          </segment>
        </unit>
        <unit id="176">
          <segment state="initial" id="176">
            <source xml:space="preserve">The Camera Roll and the Saved Pictures folder do not support the deep queries.</source>
            <target xml:space="preserve">The Camera Roll and the Saved Pictures folder do not support the deep queries.</target>
          </segment>
        </unit>
        <unit id="177">
          <segment state="initial" id="177">
            <source xml:space="preserve">The following deep queries are available:</source>
            <target xml:space="preserve">The following deep queries are available:</target>
          </segment>
        </unit>
        <unit id="178">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="178">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Pictures library</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Pictures library</pc>
						</target>
          </segment>
        </unit>
        <unit id="179">
          <originalData>
            <data id="id1">&lt;code&gt;</data>
            <data id="id2">&lt;/code&gt;</data>
          </originalData>
          <segment state="initial" id="179">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">GetFilesAsync(CommonFileQuery.OrderByDate)</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">GetFilesAsync(CommonFileQuery.OrderByDate)</pc>
						</target>
          </segment>
        </unit>
        <unit id="180">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="180">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Music library</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Music library</pc>
						</target>
          </segment>
        </unit>
        <unit id="181">
          <originalData>
            <data id="id1">&lt;code&gt;</data>
            <data id="id2">&lt;/code&gt;</data>
          </originalData>
          <segment state="initial" id="181">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">GetFilesAsync(CommonFileQuery.OrderByName)</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">GetFilesAsync(CommonFileQuery.OrderByName)</pc>
						</target>
          </segment>
        </unit>
        <unit id="182">
          <originalData>
            <data id="id1">&lt;code&gt;</data>
            <data id="id2">&lt;/code&gt;</data>
          </originalData>
          <segment state="initial" id="182">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">GetFoldersAsync(CommonFolderQuery.GroupByArtist)</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">GetFoldersAsync(CommonFolderQuery.GroupByArtist)</pc>
						</target>
          </segment>
        </unit>
        <unit id="183">
          <originalData>
            <data id="id1">&lt;code&gt;</data>
            <data id="id2">&lt;/code&gt;</data>
          </originalData>
          <segment state="initial" id="183">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">GetFoldersAysnc(CommonFolderQuery.GroupByAlbum)</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">GetFoldersAysnc(CommonFolderQuery.GroupByAlbum)</pc>
						</target>
          </segment>
        </unit>
        <unit id="184">
          <originalData>
            <data id="id1">&lt;code&gt;</data>
            <data id="id2">&lt;/code&gt;</data>
          </originalData>
          <segment state="initial" id="184">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">GetFoldersAysnc(CommonFolderQuery.GroupByAlbumArtist)</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">GetFoldersAysnc(CommonFolderQuery.GroupByAlbumArtist)</pc>
						</target>
          </segment>
        </unit>
        <unit id="185">
          <originalData>
            <data id="id1">&lt;code&gt;</data>
            <data id="id2">&lt;/code&gt;</data>
          </originalData>
          <segment state="initial" id="185">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">GetFoldersAsync(CommonFolderQuery.GroupByGenre)</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">GetFoldersAsync(CommonFolderQuery.GroupByGenre)</pc>
						</target>
          </segment>
        </unit>
        <unit id="186">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="186">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Video library</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Video library</pc>
						</target>
          </segment>
        </unit>
        <unit id="187">
          <originalData>
            <data id="id1">&lt;code&gt;</data>
            <data id="id2">&lt;/code&gt;</data>
          </originalData>
          <segment state="initial" id="187">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">GetFilesAsync(CommonFileQuery.OrderByDate)</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">GetFilesAsync(CommonFileQuery.OrderByDate)</pc>
						</target>
          </segment>
        </unit>
        <unit id="188">
          <segment state="initial" id="188">
            <source xml:space="preserve">Flat queries</source>
            <target xml:space="preserve">Flat queries</target>
          </segment>
        </unit>
        <unit id="189">
          <originalData>
            <data id="id1">&lt;code&gt;</data>
            <data id="id2">&lt;/code&gt;</data>
          </originalData>
          <segment state="initial" id="189">
            <source xml:space="preserve">To get a complete listing of all the files and folders in a library, call <pc dataRefEnd="id2" dataRefStart="id1" id="2">GetFilesAsync(CommonFileQuery.DefaultQuery)</pc>.</source>
            <target xml:space="preserve">To get a complete listing of all the files and folders in a library, call <pc dataRefEnd="id2" dataRefStart="id1" id="2">GetFilesAsync(CommonFileQuery.DefaultQuery)</pc>.</target>
          </segment>
        </unit>
        <unit id="190">
          <segment state="initial" id="190">
            <source xml:space="preserve">This method returns all files in the library, regardless of their type.</source>
            <target xml:space="preserve">This method returns all files in the library, regardless of their type.</target>
          </segment>
        </unit>
        <unit id="191">
          <segment state="initial" id="191">
            <source xml:space="preserve">This is a shallow query, so you have to enumerate the contents of subfolders recursively if the user has created subfolders in the library.</source>
            <target xml:space="preserve">This is a shallow query, so you have to enumerate the contents of subfolders recursively if the user has created subfolders in the library.</target>
          </segment>
        </unit>
        <unit id="192">
          <segment state="initial" id="192">
            <source xml:space="preserve">Use flat queries to return media files of types that are not recognized by the built-in queries, or to return all the files in a library, including files that are not of the specified type.</source>
            <target xml:space="preserve">Use flat queries to return media files of types that are not recognized by the built-in queries, or to return all the files in a library, including files that are not of the specified type.</target>
          </segment>
        </unit>
        <unit id="193">
          <segment state="initial" id="193">
            <source xml:space="preserve">For example, if you query the Music Library with a flat query, the query results include any picture files found by the query in the Music folder.</source>
            <target xml:space="preserve">For example, if you query the Music Library with a flat query, the query results include any picture files found by the query in the Music folder.</target>
          </segment>
        </unit>
        <unit id="194">
          <segment state="initial" id="194">
            <source xml:space="preserve">Sample queries</source>
            <target xml:space="preserve">Sample queries</target>
          </segment>
        </unit>
        <unit id="195">
          <segment state="initial" id="195">
            <source xml:space="preserve">Assume that the device and its optional SD card contain the folders and files shown in the following image:</source>
            <target xml:space="preserve">Assume that the device and its optional SD card contain the folders and files shown in the following image:</target>
          </segment>
        </unit>
        <unit id="196">
          <originalData>
            <data id="id1">&lt;linkText&gt;</data>
            <data id="id2">&lt;/linkText&gt;</data>
          </originalData>
          <segment state="initial" id="196">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">files on </pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">files on </pc>
						</target>
          </segment>
        </unit>
        <unit id="197">
          <segment state="initial" id="197">
            <source xml:space="preserve">Here are a few examples of queries and the results that they return.</source>
            <target xml:space="preserve">Here are a few examples of queries and the results that they return.</target>
          </segment>
        </unit>
        <unit id="198">
          <segment state="initial" id="198">
            <source xml:space="preserve">Query</source>
            <target xml:space="preserve">Query</target>
          </segment>
        </unit>
        <unit id="199">
          <segment state="initial" id="199">
            <source xml:space="preserve">Results</source>
            <target xml:space="preserve">Results</target>
          </segment>
        </unit>
        <unit id="200">
          <segment state="initial" id="200">
            <source xml:space="preserve">KnownFolders.PicturesLibrary.GetItemsAsync();</source>
            <target xml:space="preserve">KnownFolders.PicturesLibrary.GetItemsAsync();</target>
          </segment>
        </unit>
        <unit id="201">
          <originalData>
            <data id="id1">&lt;html&gt;</data>
            <data id="id2">&lt;/html&gt;</data>
            <data id="id3">&lt;html&gt;</data>
            <data id="id4">&lt;/html&gt;</data>
            <data id="id5">&lt;html&gt;</data>
            <data id="id6">&lt;/html&gt;</data>
            <data id="id7">&lt;html&gt;</data>
            <data id="id8">&lt;/html&gt;</data>
            <data id="id9">&lt;html&gt;</data>
            <data id="id10">&lt;/html&gt;</data>
          </originalData>
          <segment state="initial" id="201">
            <source xml:space="preserve">- Camera Roll folder from internal storage <pc dataRefEnd="id2" dataRefStart="id1" id="2"></pc>- Camera Roll folder from the SD card <pc dataRefEnd="id4" dataRefStart="id3" id="4"></pc>- Saved Pictures folder from internal storage <pc dataRefEnd="id6" dataRefStart="id5" id="6"></pc>- Saved Pictures folder from the SD card <pc dataRefEnd="id8" dataRefStart="id7" id="8"></pc><pc dataRefEnd="id10" dataRefStart="id9" id="9"></pc>This is a flat query, so only immediate children of the Pictures folder   are returned.</source>
            <target xml:space="preserve">- Camera Roll folder from internal storage <pc dataRefEnd="id2" dataRefStart="id1" id="2"></pc>- Camera Roll folder from the SD card <pc dataRefEnd="id4" dataRefStart="id3" id="4"></pc>- Saved Pictures folder from internal storage <pc dataRefEnd="id6" dataRefStart="id5" id="6"></pc>- Saved Pictures folder from the SD card <pc dataRefEnd="id8" dataRefStart="id7" id="8"></pc><pc dataRefEnd="id10" dataRefStart="id9" id="9"></pc>This is a flat query, so only immediate children of the Pictures folder   are returned.</target>
          </segment>
        </unit>
        <unit id="202">
          <segment state="initial" id="202">
            <source xml:space="preserve">KnownFolders.PicturesLibrary.GetFilesAsync();</source>
            <target xml:space="preserve">KnownFolders.PicturesLibrary.GetFilesAsync();</target>
          </segment>
        </unit>
        <unit id="203">
          <originalData>
            <data id="id1">&lt;html&gt;</data>
            <data id="id2">&lt;/html&gt;</data>
            <data id="id3">&lt;html&gt;</data>
            <data id="id4">&lt;/html&gt;</data>
          </originalData>
          <segment state="initial" id="203">
            <source xml:space="preserve">No results. <pc dataRefEnd="id2" dataRefStart="id1" id="2"></pc><pc dataRefEnd="id4" dataRefStart="id3" id="3"></pc>This is flat query, and the Pictures folder does not contain any files as its immediate children.</source>
            <target xml:space="preserve">No results. <pc dataRefEnd="id2" dataRefStart="id1" id="2"></pc><pc dataRefEnd="id4" dataRefStart="id3" id="3"></pc>This is flat query, and the Pictures folder does not contain any files as its immediate children.</target>
          </segment>
        </unit>
        <unit id="204">
          <segment state="initial" id="204">
            <source xml:space="preserve">KnownFolders.PicturesLibrary.GetFilesAsync(CommonFileQuery.OrderByDate);</source>
            <target xml:space="preserve">KnownFolders.PicturesLibrary.GetFilesAsync(CommonFileQuery.OrderByDate);</target>
          </segment>
        </unit>
        <unit id="205">
          <originalData>
            <data id="id1">&lt;html&gt;</data>
            <data id="id2">&lt;/html&gt;</data>
            <data id="id3">&lt;html&gt;</data>
            <data id="id4">&lt;/html&gt;</data>
            <data id="id5">&lt;html&gt;</data>
            <data id="id6">&lt;/html&gt;</data>
            <data id="id7">&lt;html&gt;</data>
            <data id="id8">&lt;/html&gt;</data>
            <data id="id9">&lt;html&gt;</data>
            <data id="id10">&lt;/html&gt;</data>
          </originalData>
          <segment state="initial" id="205">
            <source xml:space="preserve">- 4-3-2012.jpg file from the SD card <pc dataRefEnd="id2" dataRefStart="id1" id="2"></pc>- 1-1-2014.jpg file from internal storage <pc dataRefEnd="id4" dataRefStart="id3" id="4"></pc>- 1-2-2014.jpg file from internal storage <pc dataRefEnd="id6" dataRefStart="id5" id="6"></pc>- 1-6-2014.jpg file from the SD card <pc dataRefEnd="id8" dataRefStart="id7" id="8"></pc><pc dataRefEnd="id10" dataRefStart="id9" id="9"></pc>This is a deep query, so the contents of the Pictures folder and of its   child folders are returned.</source>
            <target xml:space="preserve">- 4-3-2012.jpg file from the SD card <pc dataRefEnd="id2" dataRefStart="id1" id="2"></pc>- 1-1-2014.jpg file from internal storage <pc dataRefEnd="id4" dataRefStart="id3" id="4"></pc>- 1-2-2014.jpg file from internal storage <pc dataRefEnd="id6" dataRefStart="id5" id="6"></pc>- 1-6-2014.jpg file from the SD card <pc dataRefEnd="id8" dataRefStart="id7" id="8"></pc><pc dataRefEnd="id10" dataRefStart="id9" id="9"></pc>This is a deep query, so the contents of the Pictures folder and of its   child folders are returned.</target>
          </segment>
        </unit>
        <unit id="206">
          <segment state="initial" id="206">
            <source xml:space="preserve">KnownFolders.CameraRoll.GetFilesAsync();</source>
            <target xml:space="preserve">KnownFolders.CameraRoll.GetFilesAsync();</target>
          </segment>
        </unit>
        <unit id="207">
          <originalData>
            <data id="id1">&lt;html&gt;</data>
            <data id="id2">&lt;/html&gt;</data>
            <data id="id3">&lt;html&gt;</data>
            <data id="id4">&lt;/html&gt;</data>
            <data id="id5">&lt;html&gt;</data>
            <data id="id6">&lt;/html&gt;</data>
          </originalData>
          <segment state="initial" id="207">
            <source xml:space="preserve">- 1-1-2014.jpg file from internal storage <pc dataRefEnd="id2" dataRefStart="id1" id="2"></pc>- 4-3-2012.jpg file from the SD card <pc dataRefEnd="id4" dataRefStart="id3" id="4"></pc><pc dataRefEnd="id6" dataRefStart="id5" id="5"></pc>This is a flat query. The ordering of the results is not guaranteed.</source>
            <target xml:space="preserve">- 1-1-2014.jpg file from internal storage <pc dataRefEnd="id2" dataRefStart="id1" id="2"></pc>- 4-3-2012.jpg file from the SD card <pc dataRefEnd="id4" dataRefStart="id3" id="4"></pc><pc dataRefEnd="id6" dataRefStart="id5" id="5"></pc>This is a flat query. The ordering of the results is not guaranteed.</target>
          </segment>
        </unit>
        <unit id="208">
          <segment state="initial" id="208">
            <source xml:space="preserve">Media library capabilities and file types</source>
            <target xml:space="preserve">Media library capabilities and file types</target>
          </segment>
        </unit>
        <unit id="209">
          <segment state="initial" id="209">
            <source xml:space="preserve">Here are the capabilities that you can specify in the app manifest file to access media files in your app.</source>
            <target xml:space="preserve">Here are the capabilities that you can specify in the app manifest file to access media files in your app.</target>
          </segment>
        </unit>
        <unit id="210">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="210">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Music</pc>.</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Music</pc>.</target>
          </segment>
        </unit>
        <unit id="211">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="211">
            <source xml:space="preserve">Specify the <pc dataRefEnd="id2" dataRefStart="id1" id="2">Music Library</pc> capability in the app manifest file to let your app see and access files of the following file types:</source>
            <target xml:space="preserve">Specify the <pc dataRefEnd="id2" dataRefStart="id1" id="2">Music Library</pc> capability in the app manifest file to let your app see and access files of the following file types:</target>
          </segment>
        </unit>
        <unit id="212">
          <segment state="initial" id="212">
            <source xml:space="preserve">.qcp</source>
            <target xml:space="preserve">.qcp</target>
          </segment>
        </unit>
        <unit id="213">
          <segment state="initial" id="213">
            <source xml:space="preserve">.wav</source>
            <target xml:space="preserve">.wav</target>
          </segment>
        </unit>
        <unit id="214">
          <segment state="initial" id="214">
            <source xml:space="preserve">.mp3</source>
            <target xml:space="preserve">.mp3</target>
          </segment>
        </unit>
        <unit id="215">
          <segment state="initial" id="215">
            <source xml:space="preserve">.m4r</source>
            <target xml:space="preserve">.m4r</target>
          </segment>
        </unit>
        <unit id="216">
          <segment state="initial" id="216">
            <source xml:space="preserve">.m4a</source>
            <target xml:space="preserve">.m4a</target>
          </segment>
        </unit>
        <unit id="217">
          <segment state="initial" id="217">
            <source xml:space="preserve">.aac</source>
            <target xml:space="preserve">.aac</target>
          </segment>
        </unit>
        <unit id="218">
          <segment state="initial" id="218">
            <source xml:space="preserve">.amr</source>
            <target xml:space="preserve">.amr</target>
          </segment>
        </unit>
        <unit id="219">
          <segment state="initial" id="219">
            <source xml:space="preserve">.wma</source>
            <target xml:space="preserve">.wma</target>
          </segment>
        </unit>
        <unit id="220">
          <segment state="initial" id="220">
            <source xml:space="preserve">.3g2</source>
            <target xml:space="preserve">.3g2</target>
          </segment>
        </unit>
        <unit id="221">
          <segment state="initial" id="221">
            <source xml:space="preserve">.3gp</source>
            <target xml:space="preserve">.3gp</target>
          </segment>
        </unit>
        <unit id="222">
          <segment state="initial" id="222">
            <source xml:space="preserve">.mp4</source>
            <target xml:space="preserve">.mp4</target>
          </segment>
        </unit>
        <unit id="223">
          <segment state="initial" id="223">
            <source xml:space="preserve">.wm</source>
            <target xml:space="preserve">.wm</target>
          </segment>
        </unit>
        <unit id="224">
          <segment state="initial" id="224">
            <source xml:space="preserve">.asf</source>
            <target xml:space="preserve">.asf</target>
          </segment>
        </unit>
        <unit id="225">
          <segment state="initial" id="225">
            <source xml:space="preserve">.3gpp</source>
            <target xml:space="preserve">.3gpp</target>
          </segment>
        </unit>
        <unit id="226">
          <segment state="initial" id="226">
            <source xml:space="preserve">.3gp2</source>
            <target xml:space="preserve">.3gp2</target>
          </segment>
        </unit>
        <unit id="227">
          <segment state="initial" id="227">
            <source xml:space="preserve">.mpa</source>
            <target xml:space="preserve">.mpa</target>
          </segment>
        </unit>
        <unit id="228">
          <segment state="initial" id="228">
            <source xml:space="preserve">.adt</source>
            <target xml:space="preserve">.adt</target>
          </segment>
        </unit>
        <unit id="229">
          <segment state="initial" id="229">
            <source xml:space="preserve">.adts</source>
            <target xml:space="preserve">.adts</target>
          </segment>
        </unit>
        <unit id="230">
          <segment state="initial" id="230">
            <source xml:space="preserve">.pya</source>
            <target xml:space="preserve">.pya</target>
          </segment>
        </unit>
        <unit id="231">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="231">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Photos</pc>.</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Photos</pc>.</target>
          </segment>
        </unit>
        <unit id="232">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="232">
            <source xml:space="preserve">Specify the <pc dataRefEnd="id2" dataRefStart="id1" id="2">Pictures Library</pc> capability in the app manifest file to let your app see and access files of the following file types:</source>
            <target xml:space="preserve">Specify the <pc dataRefEnd="id2" dataRefStart="id1" id="2">Pictures Library</pc> capability in the app manifest file to let your app see and access files of the following file types:</target>
          </segment>
        </unit>
        <unit id="233">
          <segment state="initial" id="233">
            <source xml:space="preserve">.jpeg</source>
            <target xml:space="preserve">.jpeg</target>
          </segment>
        </unit>
        <unit id="234">
          <segment state="initial" id="234">
            <source xml:space="preserve">.jpe</source>
            <target xml:space="preserve">.jpe</target>
          </segment>
        </unit>
        <unit id="235">
          <segment state="initial" id="235">
            <source xml:space="preserve">.jpg</source>
            <target xml:space="preserve">.jpg</target>
          </segment>
        </unit>
        <unit id="236">
          <segment state="initial" id="236">
            <source xml:space="preserve">.gif</source>
            <target xml:space="preserve">.gif</target>
          </segment>
        </unit>
        <unit id="237">
          <segment state="initial" id="237">
            <source xml:space="preserve">.tiff</source>
            <target xml:space="preserve">.tiff</target>
          </segment>
        </unit>
        <unit id="238">
          <segment state="initial" id="238">
            <source xml:space="preserve">.tif</source>
            <target xml:space="preserve">.tif</target>
          </segment>
        </unit>
        <unit id="239">
          <segment state="initial" id="239">
            <source xml:space="preserve">.png</source>
            <target xml:space="preserve">.png</target>
          </segment>
        </unit>
        <unit id="240">
          <segment state="initial" id="240">
            <source xml:space="preserve">.bmp</source>
            <target xml:space="preserve">.bmp</target>
          </segment>
        </unit>
        <unit id="241">
          <segment state="initial" id="241">
            <source xml:space="preserve">.wdp</source>
            <target xml:space="preserve">.wdp</target>
          </segment>
        </unit>
        <unit id="242">
          <segment state="initial" id="242">
            <source xml:space="preserve">.jxr</source>
            <target xml:space="preserve">.jxr</target>
          </segment>
        </unit>
        <unit id="243">
          <segment state="initial" id="243">
            <source xml:space="preserve">.hdp</source>
            <target xml:space="preserve">.hdp</target>
          </segment>
        </unit>
        <unit id="244">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="244">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Videos</pc>.</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Videos</pc>.</target>
          </segment>
        </unit>
        <unit id="245">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="245">
            <source xml:space="preserve">Specify the <pc dataRefEnd="id2" dataRefStart="id1" id="2">Video Library</pc> capability in the app manifest file to let your app see and access files of the following file types:</source>
            <target xml:space="preserve">Specify the <pc dataRefEnd="id2" dataRefStart="id1" id="2">Video Library</pc> capability in the app manifest file to let your app see and access files of the following file types:</target>
          </segment>
        </unit>
        <unit id="246">
          <segment state="initial" id="246">
            <source xml:space="preserve">.wm</source>
            <target xml:space="preserve">.wm</target>
          </segment>
        </unit>
        <unit id="247">
          <segment state="initial" id="247">
            <source xml:space="preserve">.m4v</source>
            <target xml:space="preserve">.m4v</target>
          </segment>
        </unit>
        <unit id="248">
          <segment state="initial" id="248">
            <source xml:space="preserve">.wmv</source>
            <target xml:space="preserve">.wmv</target>
          </segment>
        </unit>
        <unit id="249">
          <segment state="initial" id="249">
            <source xml:space="preserve">.asf</source>
            <target xml:space="preserve">.asf</target>
          </segment>
        </unit>
        <unit id="250">
          <segment state="initial" id="250">
            <source xml:space="preserve">.mov</source>
            <target xml:space="preserve">.mov</target>
          </segment>
        </unit>
        <unit id="251">
          <segment state="initial" id="251">
            <source xml:space="preserve">.mp4</source>
            <target xml:space="preserve">.mp4</target>
          </segment>
        </unit>
        <unit id="252">
          <segment state="initial" id="252">
            <source xml:space="preserve">.3g2</source>
            <target xml:space="preserve">.3g2</target>
          </segment>
        </unit>
        <unit id="253">
          <segment state="initial" id="253">
            <source xml:space="preserve">.3gp</source>
            <target xml:space="preserve">.3gp</target>
          </segment>
        </unit>
        <unit id="254">
          <segment state="initial" id="254">
            <source xml:space="preserve">.mp4v</source>
            <target xml:space="preserve">.mp4v</target>
          </segment>
        </unit>
        <unit id="255">
          <segment state="initial" id="255">
            <source xml:space="preserve">.avi</source>
            <target xml:space="preserve">.avi</target>
          </segment>
        </unit>
        <unit id="256">
          <segment state="initial" id="256">
            <source xml:space="preserve">.pyv</source>
            <target xml:space="preserve">.pyv</target>
          </segment>
        </unit>
        <unit id="257">
          <segment state="initial" id="257">
            <source xml:space="preserve">.3gpp</source>
            <target xml:space="preserve">.3gpp</target>
          </segment>
        </unit>
        <unit id="258">
          <segment state="initial" id="258">
            <source xml:space="preserve">.3gp2</source>
            <target xml:space="preserve">.3gp2</target>
          </segment>
        </unit>
        <unit id="259">
          <segment state="initial" id="259">
            <source xml:space="preserve">Working with photos</source>
            <target xml:space="preserve">Working with photos</target>
          </segment>
        </unit>
        <unit id="260">
          <segment state="initial" id="260">
            <source xml:space="preserve">On devices where the camera saves both a low-resolution image and a high-resolution image of every picture, the deep queries return only the low-resolution image.</source>
            <target xml:space="preserve">On devices where the camera saves both a low-resolution image and a high-resolution image of every picture, the deep queries return only the low-resolution image.</target>
          </segment>
        </unit>
        <unit id="261">
          <segment state="initial" id="261">
            <source xml:space="preserve">The Camera Roll and the Saved Pictures folder do not support the deep queries.</source>
            <target xml:space="preserve">The Camera Roll and the Saved Pictures folder do not support the deep queries.</target>
          </segment>
        </unit>
        <unit id="262">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="262">
            <source xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Opening a photo in the app that captured it</pc>
						</source>
            <target xml:space="preserve">
							<pc dataRefEnd="id2" dataRefStart="id1" id="1">Opening a photo in the app that captured it</pc>
						</target>
          </segment>
        </unit>
        <unit id="263">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="263">
            <source xml:space="preserve">If you want to let the user open a photo again later in the app that captured it, you can save the <pc dataRefEnd="id2" dataRefStart="id1" id="2">CreatorAppId</pc> with the photo's metadata by using code similar to the following example.</source>
            <target xml:space="preserve">If you want to let the user open a photo again later in the app that captured it, you can save the <pc dataRefEnd="id2" dataRefStart="id1" id="2">CreatorAppId</pc> with the photo's metadata by using code similar to the following example.</target>
          </segment>
        </unit>
        <unit id="264">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;link&gt;</data>
            <data id="id4">&lt;/link&gt;</data>
            <data id="id3">&lt;linkText&gt;</data>
            <data id="id4">&lt;/linkText&gt;</data>
            <data id="id5">&lt;title&gt;</data>
            <data id="id6">&lt;/title&gt;</data>
          </originalData>
          <segment state="initial" id="264">
            <source xml:space="preserve">In this example, <pc dataRefEnd="id2" dataRefStart="id1" id="2">testPhoto</pc> is a <pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**StorageFile**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc>.</source>
            <target xml:space="preserve">In this example, <pc dataRefEnd="id2" dataRefStart="id1" id="2">testPhoto</pc> is a <pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId1"><pc dataRefEnd="id4" dataRefStart="id3" id="4CapsExtId2">**StorageFile**</pc><pc dataRefEnd="id6" dataRefStart="id5" id="4CapsExtId3"></pc></pc>.</target>
          </segment>
        </unit>
        <unit id="265">
          <segment state="initial" id="265">
            <source xml:space="preserve">Using stream methods to add a file to a media library</source>
            <target xml:space="preserve">Using stream methods to add a file to a media library</target>
          </segment>
        </unit>
        <unit id="266">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="266">
            <source xml:space="preserve">When you access a media library by using a known folder such as <pc dataRefEnd="id2" dataRefStart="id1" id="2">KnownFolders.PictureLibrary</pc>, and you use stream methods to add a file to the media library, you have to make sure to close all the streams that your code opens.</source>
            <target xml:space="preserve">When you access a media library by using a known folder such as <pc dataRefEnd="id2" dataRefStart="id1" id="2">KnownFolders.PictureLibrary</pc>, and you use stream methods to add a file to the media library, you have to make sure to close all the streams that your code opens.</target>
          </segment>
        </unit>
        <unit id="267">
          <segment state="initial" id="267">
            <source xml:space="preserve">Otherwise these methods fail to add the file to the media library as expected because at least one stream still has a handle to the file.</source>
            <target xml:space="preserve">Otherwise these methods fail to add the file to the media library as expected because at least one stream still has a handle to the file.</target>
          </segment>
        </unit>
        <unit id="268">
          <segment state="initial" id="268">
            <source xml:space="preserve">For example, when you run the following code, the file is not added to the media library.</source>
            <target xml:space="preserve">For example, when you run the following code, the file is not added to the media library.</target>
          </segment>
        </unit>
        <unit id="269">
          <originalData>
            <data id="id1">&lt;code&gt;</data>
            <data id="id2">&lt;/code&gt;</data>
            <data id="id3">&lt;strong&gt;</data>
            <data id="id4">&lt;/strong&gt;</data>
            <data id="id5">&lt;strong&gt;</data>
            <data id="id6">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="269">
            <source xml:space="preserve">In the line of code, <pc dataRefEnd="id2" dataRefStart="id1" id="2">using (var destinationStream = (await destinationFile.OpenAsync(FileAccessMode.ReadWrite)).GetOutputStreamAt(0))</pc>, both the <pc dataRefEnd="id4" dataRefStart="id3" id="4">OpenAsync</pc> method and the <pc dataRefEnd="id6" dataRefStart="id5" id="6">GetOutputStreamAt</pc> method open a stream.</source>
            <target xml:space="preserve">In the line of code, <pc dataRefEnd="id2" dataRefStart="id1" id="2">using (var destinationStream = (await destinationFile.OpenAsync(FileAccessMode.ReadWrite)).GetOutputStreamAt(0))</pc>, both the <pc dataRefEnd="id4" dataRefStart="id3" id="4">OpenAsync</pc> method and the <pc dataRefEnd="id6" dataRefStart="id5" id="6">GetOutputStreamAt</pc> method open a stream.</target>
          </segment>
        </unit>
        <unit id="270">
          <originalData>
            <data id="id1">&lt;strong&gt;</data>
            <data id="id2">&lt;/strong&gt;</data>
            <data id="id3">&lt;strong&gt;</data>
            <data id="id4">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="270">
            <source xml:space="preserve">However only the stream opened by the <pc dataRefEnd="id2" dataRefStart="id1" id="2">GetOutputStreamAt</pc> method is disposed as a result of the <pc dataRefEnd="id4" dataRefStart="id3" id="4">using</pc> statement.</source>
            <target xml:space="preserve">However only the stream opened by the <pc dataRefEnd="id2" dataRefStart="id1" id="2">GetOutputStreamAt</pc> method is disposed as a result of the <pc dataRefEnd="id4" dataRefStart="id3" id="4">using</pc> statement.</target>
          </segment>
        </unit>
        <unit id="271">
          <segment state="initial" id="271">
            <source xml:space="preserve">The other stream remains open and prevents saving the file.</source>
            <target xml:space="preserve">The other stream remains open and prevents saving the file.</target>
          </segment>
        </unit>
        <unit id="272">
          <segment state="initial" id="272">
            <source xml:space="preserve">To use stream methods successfully to add a file to the media library, make sure to close all the streams that your code opens, as shown in the following example.</source>
            <target xml:space="preserve">To use stream methods successfully to add a file to the media library, make sure to close all the streams that your code opens, as shown in the following example.</target>
          </segment>
        </unit>
      </group>
    </group>
  </file>
</xliff>