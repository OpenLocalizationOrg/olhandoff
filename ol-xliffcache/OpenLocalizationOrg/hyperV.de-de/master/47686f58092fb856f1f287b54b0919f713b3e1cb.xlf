<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="de-de">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">47686f58092fb856f1f287b54b0919f713b3e1cb</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1457980" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Offline Data Sync in Azure Mobile Apps | Microsoft Azure</source>
          <target state="new">Offline Data Sync in Azure Mobile Apps | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Conceptual reference and overview of the offline data sync feature for Azure Mobile Apps</source>
          <target state="new">Conceptual reference and overview of the offline data sync feature for Azure Mobile Apps</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Offline Data Sync in Azure Mobile Apps</source>
          <target state="new">Offline Data Sync in Azure Mobile Apps</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>What is offline data sync?</source>
          <target state="new">What is offline data sync?</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Offline data sync is a client and server SDK feature of Azure Mobile Apps that makes it easy for</source>
          <target state="new">Offline data sync is a client and server SDK feature of Azure Mobile Apps that makes it easy for</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>developers to create apps that are functional without a network connection.</source>
          <target state="new">developers to create apps that are functional without a network connection.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>When your app is in offline mode, users can still create and modify data, which will be saved</source>
          <target state="new">When your app is in offline mode, users can still create and modify data, which will be saved</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>to a local store.</source>
          <target state="new">to a local store.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>When the app is back online, it can synchronize local changes with your Azure</source>
          <target state="new">When the app is back online, it can synchronize local changes with your Azure</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Mobile App backend.</source>
          <target state="new">Mobile App backend.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The feature also includes support for detecting conflicts when the same record</source>
          <target state="new">The feature also includes support for detecting conflicts when the same record</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>is changed on both the client and the backend.</source>
          <target state="new">is changed on both the client and the backend.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Conflicts can then be handled either on the server</source>
          <target state="new">Conflicts can then be handled either on the server</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>or the client.</source>
          <target state="new">or the client.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Offline sync has a number of benefits:</source>
          <target state="new">Offline sync has a number of benefits:</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Improve app responsiveness by caching server data locally on the device</source>
          <target state="new">Improve app responsiveness by caching server data locally on the device</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Create robust apps that remain useful when there are network issues</source>
          <target state="new">Create robust apps that remain useful when there are network issues</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Allow end-users to create and modify data even when there is no network access, supporting</source>
          <target state="new">Allow end-users to create and modify data even when there is no network access, supporting</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>scenarios with little or no connectivity</source>
          <target state="new">scenarios with little or no connectivity</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Sync data across multiple devices and detect conflicts when the same record is modified by two devices</source>
          <target state="new">Sync data across multiple devices and detect conflicts when the same record is modified by two devices</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Limit network use on high-latency or metered networks</source>
          <target state="new">Limit network use on high-latency or metered networks</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The following tutorials show how to add offline sync to your mobile clients using Azure Mobile Apps:</source>
          <target state="new">The following tutorials show how to add offline sync to your mobile clients using Azure Mobile Apps:</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Android: Enable offline sync</source>
          <target state="new">Android: Enable offline sync</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>iOS: Enable offline sync</source>
          <target state="new">iOS: Enable offline sync</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Xamarin iOS: Enable offline sync</source>
          <target state="new">Xamarin iOS: Enable offline sync</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Xamarin Android: Enable offline sync</source>
          <target state="new">Xamarin Android: Enable offline sync</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Windows 8.1: Enable offline sync</source>
          <target state="new">Windows 8.1: Enable offline sync</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>What is a sync table?</source>
          <target state="new">What is a sync table?</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>To access the "/tables" endpoint, the Azure Mobile client SDKs provide interfaces such as <ph id="ph1">`IMobileServiceTable`</ph></source>
          <target state="new">To access the "/tables" endpoint, the Azure Mobile client SDKs provide interfaces such as <ph id="ph1">`IMobileServiceTable`</ph></target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>(.NET client SDK) or <ph id="ph1">`MSTable`</ph> (iOS client).</source>
          <target state="new">(.NET client SDK) or <ph id="ph1">`MSTable`</ph> (iOS client).</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>These APIs connect directly to the Azure Mobile App backend and</source>
          <target state="new">These APIs connect directly to the Azure Mobile App backend and</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>will fail if the client device does not have a network connection.</source>
          <target state="new">will fail if the client device does not have a network connection.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>To support offline use, your app should instead use the <bpt id="p1">*</bpt>sync table<ept id="p1">*</ept> APIs, such as <ph id="ph1">`IMobileServiceSyncTable`</ph></source>
          <target state="new">To support offline use, your app should instead use the <bpt id="p1">*</bpt>sync table<ept id="p1">*</ept> APIs, such as <ph id="ph1">`IMobileServiceSyncTable`</ph></target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>(.NET client SDK) or <ph id="ph1">`MSSyncTable`</ph> (iOS client).</source>
          <target state="new">(.NET client SDK) or <ph id="ph1">`MSSyncTable`</ph> (iOS client).</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>All the same CRUD operations (Create, Read, Update, Delete)</source>
          <target state="new">All the same CRUD operations (Create, Read, Update, Delete)</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>work against sync table APIs, except now they will read from or write to a <bpt id="p1">*</bpt>local store<ept id="p1">*</ept>.</source>
          <target state="new">work against sync table APIs, except now they will read from or write to a <bpt id="p1">*</bpt>local store<ept id="p1">*</ept>.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Before any sync</source>
          <target state="new">Before any sync</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>table operations can be performed, the local store must be initialized.</source>
          <target state="new">table operations can be performed, the local store must be initialized.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>What is a local store?</source>
          <target state="new">What is a local store?</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>A local store is the data persistence layer on the client device.</source>
          <target state="new">A local store is the data persistence layer on the client device.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The Azure Mobile Apps client SDKs provide a</source>
          <target state="new">The Azure Mobile Apps client SDKs provide a</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>default local store implementation.</source>
          <target state="new">default local store implementation.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>On Windows, Xamarin and Android, it is based on SQLite; on iOS, it is based</source>
          <target state="new">On Windows, Xamarin and Android, it is based on SQLite; on iOS, it is based</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>on Core Data.</source>
          <target state="new">on Core Data.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>To use the SQLite-based implementation on Windows Phone or Windows Store 8.1, you need to install a SQLite</source>
          <target state="new">To use the SQLite-based implementation on Windows Phone or Windows Store 8.1, you need to install a SQLite</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>extension.</source>
          <target state="new">extension.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For more details, see <bpt id="p1">[</bpt><ept id="p1">Windows 8.1: Enable offline sync]</ept>.</source>
          <target state="new">For more details, see <bpt id="p1">[</bpt><ept id="p1">Windows 8.1: Enable offline sync]</ept>.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Android and iOS ship with a version of</source>
          <target state="new">Android and iOS ship with a version of</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>SQLite in the device operating system itself, so it is not necessary to reference your own version of SQLite.</source>
          <target state="new">SQLite in the device operating system itself, so it is not necessary to reference your own version of SQLite.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Developers can also implement their own local store.</source>
          <target state="new">Developers can also implement their own local store.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>For instance, if you wish to store data in an encrypted</source>
          <target state="new">For instance, if you wish to store data in an encrypted</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>format on the mobile client, you can define a local store that uses SQLCipher for encryption.</source>
          <target state="new">format on the mobile client, you can define a local store that uses SQLCipher for encryption.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>What is a sync context?</source>
          <target state="new">What is a sync context?</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">*</bpt>sync context<ept id="p1">*</ept> is associated with a mobile client object (such as <ph id="ph1">`IMobileServiceClient`</ph> or <ph id="ph2">`MSClient`</ph>)</source>
          <target state="new">A <bpt id="p1">*</bpt>sync context<ept id="p1">*</ept> is associated with a mobile client object (such as <ph id="ph1">`IMobileServiceClient`</ph> or <ph id="ph2">`MSClient`</ph>)</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>and tracks changes that are made with sync tables.</source>
          <target state="new">and tracks changes that are made with sync tables.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The sync context maintains an <bpt id="p1">*</bpt>operation queue<ept id="p1">*</ept> which</source>
          <target state="new">The sync context maintains an <bpt id="p1">*</bpt>operation queue<ept id="p1">*</ept> which</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>keeps an ordered list of CUD operations (Create, Update, Delete)  that will later be sent to the server.</source>
          <target state="new">keeps an ordered list of CUD operations (Create, Update, Delete)  that will later be sent to the server.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>A local store is associated with the sync context using an initialize method such as</source>
          <target state="new">A local store is associated with the sync context using an initialize method such as</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`IMobileServicesSyncContext.InitializeAsync(localstore)`</ph> in the <bpt id="p1">[</bpt><ept id="p1">.NET client SDK]</ept>.</source>
          <target state="new"><ph id="ph1">`IMobileServicesSyncContext.InitializeAsync(localstore)`</ph> in the <bpt id="p1">[</bpt><ept id="p1">.NET client SDK]</ept>.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>How offline synchronization works</source>
          <target state="new">How offline synchronization works</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>When using sync tables, your client code controls when local changes will be synchronized with an Azure</source>
          <target state="new">When using sync tables, your client code controls when local changes will be synchronized with an Azure</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Mobile App backend.</source>
          <target state="new">Mobile App backend.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Nothing is sent to the backend until there is a call to <bpt id="p1">*</bpt>push<ept id="p1">*</ept> local changes.</source>
          <target state="new">Nothing is sent to the backend until there is a call to <bpt id="p1">*</bpt>push<ept id="p1">*</ept> local changes.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Similarly,</source>
          <target state="new">Similarly,</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>the local store is populated with new data only when there is a call to <bpt id="p1">*</bpt>pull<ept id="p1">*</ept> data.</source>
          <target state="new">the local store is populated with new data only when there is a call to <bpt id="p1">*</bpt>pull<ept id="p1">*</ept> data.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Push<ept id="p1">**</ept>: Push is an operation on the sync context and sends all CUD changes since the last push.</source>
          <target state="new"><bpt id="p1">**</bpt>Push<ept id="p1">**</ept>: Push is an operation on the sync context and sends all CUD changes since the last push.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Note</source>
          <target state="new">Note</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>that it is not possible to send only an individual table's changes, because otherwise operations could be</source>
          <target state="new">that it is not possible to send only an individual table's changes, because otherwise operations could be</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>sent out of order.</source>
          <target state="new">sent out of order.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Push executes a series of REST calls to your Azure Mobile App backend, which in turn</source>
          <target state="new">Push executes a series of REST calls to your Azure Mobile App backend, which in turn</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>will modify your server database.</source>
          <target state="new">will modify your server database.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Pull<ept id="p1">**</ept>: Pull is performed on a per-table basis and can be customized with a query to retrieve only</source>
          <target state="new"><bpt id="p1">**</bpt>Pull<ept id="p1">**</ept>: Pull is performed on a per-table basis and can be customized with a query to retrieve only</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>a subset of the server data.</source>
          <target state="new">a subset of the server data.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The Azure Mobile client SDKs then insert the resulting data into the local store.</source>
          <target state="new">The Azure Mobile client SDKs then insert the resulting data into the local store.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Implicit Pushes<ept id="p1">**</ept>: If a pull is executed against a table that has pending local updates, the pull</source>
          <target state="new"><bpt id="p1">**</bpt>Implicit Pushes<ept id="p1">**</ept>: If a pull is executed against a table that has pending local updates, the pull</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>will first execute a push on the sync context.</source>
          <target state="new">will first execute a push on the sync context.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>This helps minimize conflicts between changes that are</source>
          <target state="new">This helps minimize conflicts between changes that are</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>already queued and new data from the server.</source>
          <target state="new">already queued and new data from the server.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Incremental Sync<ept id="p1">**</ept>: the first parameter to the pull operation is a <bpt id="p2">*</bpt>query name<ept id="p2">*</ept> that is used only</source>
          <target state="new"><bpt id="p1">**</bpt>Incremental Sync<ept id="p1">**</ept>: the first parameter to the pull operation is a <bpt id="p2">*</bpt>query name<ept id="p2">*</ept> that is used only</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>on the client.</source>
          <target state="new">on the client.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>If you use a non-null query name, the Azure Mobile SDK will perform an <bpt id="p1">*</bpt>incremental sync<ept id="p1">*</ept>.</source>
          <target state="new">If you use a non-null query name, the Azure Mobile SDK will perform an <bpt id="p1">*</bpt>incremental sync<ept id="p1">*</ept>.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Each time a pull operation returns a set of results, the latest <ph id="ph1">`updatedAt`</ph> timestamp from that result</source>
          <target state="new">Each time a pull operation returns a set of results, the latest <ph id="ph1">`updatedAt`</ph> timestamp from that result</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>set is stored in the SDK local system tables.</source>
          <target state="new">set is stored in the SDK local system tables.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Subsequent pull operations will only retrieve records</source>
          <target state="new">Subsequent pull operations will only retrieve records</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>after that timestamp.</source>
          <target state="new">after that timestamp.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>To use incremental sync, your server must return meaningful <ph id="ph1">`updatedAt`</ph> values and must also support</source>
          <target state="new">To use incremental sync, your server must return meaningful <ph id="ph1">`updatedAt`</ph> values and must also support</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>sorting by this field.</source>
          <target state="new">sorting by this field.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>However, since the SDK adds its own sort on the updatedAt field, you cannot use</source>
          <target state="new">However, since the SDK adds its own sort on the updatedAt field, you cannot use</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>a pull query that has its own <ph id="ph1">`$orderBy$`</ph> clause.</source>
          <target state="new">a pull query that has its own <ph id="ph1">`$orderBy$`</ph> clause.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The query name can be any string you choose, but it must be unique for each logical query in your app.</source>
          <target state="new">The query name can be any string you choose, but it must be unique for each logical query in your app.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Otherwise, different pull operations could overwrite the same incremental sync timestamp and your queries</source>
          <target state="new">Otherwise, different pull operations could overwrite the same incremental sync timestamp and your queries</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>can return incorrect results.</source>
          <target state="new">can return incorrect results.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>If the query has a parameter, one way to create a unique query name is to incorporate the parameter value.</source>
          <target state="new">If the query has a parameter, one way to create a unique query name is to incorporate the parameter value.</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>For instance, if you are filtering on userid, your query name could be as follows:</source>
          <target state="new">For instance, if you are filtering on userid, your query name could be as follows:</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>If you want to opt out of incremental sync, pass <ph id="ph1">`null`</ph> as the query ID.</source>
          <target state="new">If you want to opt out of incremental sync, pass <ph id="ph1">`null`</ph> as the query ID.</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>In this case, all records will</source>
          <target state="new">In this case, all records will</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>be retrieved on every call to <ph id="ph1">`PullAsync`</ph>, which is potentially inefficient.</source>
          <target state="new">be retrieved on every call to <ph id="ph1">`PullAsync`</ph>, which is potentially inefficient.</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Purging<ept id="p1">**</ept>: You can clear the contents of the local store using <ph id="ph1">`IMobileServiceSyncTable.PurgeAsync`</ph>.</source>
          <target state="new"><bpt id="p1">**</bpt>Purging<ept id="p1">**</ept>: You can clear the contents of the local store using <ph id="ph1">`IMobileServiceSyncTable.PurgeAsync`</ph>.</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>This may be necessary if you have stale data in the client database, or if you wish to discard all pending</source>
          <target state="new">This may be necessary if you have stale data in the client database, or if you wish to discard all pending</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>changes.</source>
          <target state="new">changes.</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>A purge will clear a table from the local store.</source>
          <target state="new">A purge will clear a table from the local store.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>If there are operations pending synchronization with</source>
          <target state="new">If there are operations pending synchronization with</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>the server database, the purge will throw an exception unless the <bpt id="p1">*</bpt>force purge<ept id="p1">*</ept> parameter is set.</source>
          <target state="new">the server database, the purge will throw an exception unless the <bpt id="p1">*</bpt>force purge<ept id="p1">*</ept> parameter is set.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>As an example of stale data on the client, suppose in the "todo list" example, Device1 only pulls</source>
          <target state="new">As an example of stale data on the client, suppose in the "todo list" example, Device1 only pulls</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>items that are not completed.</source>
          <target state="new">items that are not completed.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Then, a todoitem "Buy milk" is marked completed on the server by another</source>
          <target state="new">Then, a todoitem "Buy milk" is marked completed on the server by another</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>device.</source>
          <target state="new">device.</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>However, Device1 will still have the "Buy milk" todoitem in local store because it is only</source>
          <target state="new">However, Device1 will still have the "Buy milk" todoitem in local store because it is only</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>pulling items that are not marked complete.</source>
          <target state="new">pulling items that are not marked complete.</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>A purge will clear this stale item.</source>
          <target state="new">A purge will clear this stale item.</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Next steps</source>
          <target state="new">Next steps</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>iOS: Enable offline sync</source>
          <target state="new">iOS: Enable offline sync</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Xamarin iOS: Enable offline sync</source>
          <target state="new">Xamarin iOS: Enable offline sync</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Xamarin Android: Enable offline sync</source>
          <target state="new">Xamarin Android: Enable offline sync</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Windows 8.1: Enable offline sync</source>
          <target state="new">Windows 8.1: Enable offline sync</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>