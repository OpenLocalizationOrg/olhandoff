<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="de-de">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">367706bdce53a4a30c8541914444b8ca41459433</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1457980" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Upgrade from Mobile Services to Azure App Service</source>
          <target state="new">Upgrade from Mobile Services to Azure App Service</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to easily upgrade your Mobile Services application to an App Service Mobile App</source>
          <target state="new">Learn how to easily upgrade your Mobile Services application to an App Service Mobile App</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Upgrade your existing .NET Azure Mobile Service to App Service</source>
          <target state="new">Upgrade your existing .NET Azure Mobile Service to App Service</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>App Service Mobile is a new way to build mobile applications using Microsoft Azure.</source>
          <target state="new">App Service Mobile is a new way to build mobile applications using Microsoft Azure.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>To learn more, see <bpt id="p1">[</bpt><ept id="p1">What are Mobile Apps?]</ept>.</source>
          <target state="new">To learn more, see <bpt id="p1">[</bpt><ept id="p1">What are Mobile Apps?]</ept>.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This topic describes how to upgrade an existing .NET backend application from Azure Mobile Services to a new App Service Mobile Apps.</source>
          <target state="new">This topic describes how to upgrade an existing .NET backend application from Azure Mobile Services to a new App Service Mobile Apps.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>While you perform this upgrade, your existing Mobile Services application can continue to operate.</source>
          <target state="new">While you perform this upgrade, your existing Mobile Services application can continue to operate.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>When a mobile backend is upgraded to Azure App Service, it has access to all App Service features and are billed according to <bpt id="p1">[</bpt><ept id="p1">App Service pricing]</ept>, not Mobile Services pricing.</source>
          <target state="new">When a mobile backend is upgraded to Azure App Service, it has access to all App Service features and are billed according to <bpt id="p1">[</bpt><ept id="p1">App Service pricing]</ept>, not Mobile Services pricing.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Migrate vs. upgrade</source>
          <target state="new">Migrate vs. upgrade</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.TIP]</ph> It is recommended that you <bpt id="p1">[</bpt>perform a migration<ept id="p1">](app-service-mobile-migrating-from-mobile-services.md)</ept> before going through an upgrade.</source>
          <target state="new"><ph id="ph1">[AZURE.TIP]</ph> It is recommended that you <bpt id="p1">[</bpt>perform a migration<ept id="p1">](app-service-mobile-migrating-from-mobile-services.md)</ept> before going through an upgrade.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This way, you can put both versions of your application on the same App Service Plan and incur no additional cost.</source>
          <target state="new">This way, you can put both versions of your application on the same App Service Plan and incur no additional cost.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Improvements in Mobile Apps .NET server SDK</source>
          <target state="new">Improvements in Mobile Apps .NET server SDK</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Upgrading to the new <bpt id="p1">[</bpt>Mobile Apps SDK<ept id="p1">](https://www.nuget.org/packages/Microsoft.Azure.Mobile.Server/)</ept> provides the following benefits:</source>
          <target state="new">Upgrading to the new <bpt id="p1">[</bpt>Mobile Apps SDK<ept id="p1">](https://www.nuget.org/packages/Microsoft.Azure.Mobile.Server/)</ept> provides the following benefits:</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>More flexibility on NuGet dependencies.</source>
          <target state="new">More flexibility on NuGet dependencies.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The hosting environment no longer provides its own versions of NuGet packages, so you can use alternative compatible versions.</source>
          <target state="new">The hosting environment no longer provides its own versions of NuGet packages, so you can use alternative compatible versions.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>However, if there are new critical bugfixes or security updates to the Mobile Server SDK or dependencies, you must update your service manually.</source>
          <target state="new">However, if there are new critical bugfixes or security updates to the Mobile Server SDK or dependencies, you must update your service manually.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>More flexibility in the mobile SDK.</source>
          <target state="new">More flexibility in the mobile SDK.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You can explicitly control which features and routes are set up, such as authentication, table APIs, and the push registration endpoint.</source>
          <target state="new">You can explicitly control which features and routes are set up, such as authentication, table APIs, and the push registration endpoint.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>To learn more, see <bpt id="p1">[</bpt>How to use the .NET server SDK for Azure Mobile Apps<ept id="p1">](app-service-mobile-net-upgrading-from-mobile-services.md#server-project-setup)</ept>.</source>
          <target state="new">To learn more, see <bpt id="p1">[</bpt>How to use the .NET server SDK for Azure Mobile Apps<ept id="p1">](app-service-mobile-net-upgrading-from-mobile-services.md#server-project-setup)</ept>.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Support for other ASP.NET project types and routes.</source>
          <target state="new">Support for other ASP.NET project types and routes.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You can now host MVC and Web API controllers in the same project as your mobile backend project.</source>
          <target state="new">You can now host MVC and Web API controllers in the same project as your mobile backend project.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Support for new App Service authentication features, which allow you to use a common authentication configuration across your web and mobile apps.</source>
          <target state="new">Support for new App Service authentication features, which allow you to use a common authentication configuration across your web and mobile apps.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="overview"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Basic upgrade overview</source>
          <target state="new"><ph id="ph1">&lt;a name="overview"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Basic upgrade overview</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>In many cases, upgrading will be as simple as switching to the new Mobile Apps server SDK and republishing your code onto a new Mobile App instance.</source>
          <target state="new">In many cases, upgrading will be as simple as switching to the new Mobile Apps server SDK and republishing your code onto a new Mobile App instance.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>There are, however some scenarios which will require some additional configuration, such as advanced authentication scenarios and working with scheduled jobs.</source>
          <target state="new">There are, however some scenarios which will require some additional configuration, such as advanced authentication scenarios and working with scheduled jobs.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Each of these is covered in the later sections.</source>
          <target state="new">Each of these is covered in the later sections.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.TIP]</ph> It is advised that you read and understand the rest of this topic completely before starting an upgrade.</source>
          <target state="new"><ph id="ph1">[AZURE.TIP]</ph> It is advised that you read and understand the rest of this topic completely before starting an upgrade.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Make note of any features you use which are called out below.</source>
          <target state="new">Make note of any features you use which are called out below.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The Mobile Services client SDKs are <bpt id="p1">**</bpt>not<ept id="p1">**</ept> compatible with the new Mobile Apps server SDK.</source>
          <target state="new">The Mobile Services client SDKs are <bpt id="p1">**</bpt>not<ept id="p1">**</ept> compatible with the new Mobile Apps server SDK.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>In order to provide continuity of service for your app, you should not publish changes to a site currently serving published clients.</source>
          <target state="new">In order to provide continuity of service for your app, you should not publish changes to a site currently serving published clients.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Instead, you should create a new mobile app that serves as a duplicate.</source>
          <target state="new">Instead, you should create a new mobile app that serves as a duplicate.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>You can put this application on the same App Service plan to avoid incurring additional financial cost.</source>
          <target state="new">You can put this application on the same App Service plan to avoid incurring additional financial cost.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>You will then have two versions of the application: one which stays the same and serves published apps in the wild, and the other which you can then upgrade and target with a new client release.</source>
          <target state="new">You will then have two versions of the application: one which stays the same and serves published apps in the wild, and the other which you can then upgrade and target with a new client release.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>You can move and test your code at your pace, but you should make sure that any bug fixes you make get applied to both.</source>
          <target state="new">You can move and test your code at your pace, but you should make sure that any bug fixes you make get applied to both.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Once you feel that a desired number of client apps in the wild have updated to the latest version, you can delete the original migrated app if you desire.</source>
          <target state="new">Once you feel that a desired number of client apps in the wild have updated to the latest version, you can delete the original migrated app if you desire.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The full outline for the upgrade process is as follows:</source>
          <target state="new">The full outline for the upgrade process is as follows:</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Create a new Mobile App</source>
          <target state="new">Create a new Mobile App</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Update the project to use the new Server SDKs</source>
          <target state="new">Update the project to use the new Server SDKs</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Release a new version of your client application</source>
          <target state="new">Release a new version of your client application</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>(Optional) Delete your original migrated instance</source>
          <target state="new">(Optional) Delete your original migrated instance</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="mobile-app-version"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Creating a second application instance</source>
          <target state="new"><ph id="ph1">&lt;a name="mobile-app-version"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Creating a second application instance</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The first step in upgrading is to create the Mobile App resource which will host the new version of your application.</source>
          <target state="new">The first step in upgrading is to create the Mobile App resource which will host the new version of your application.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>If you have already migrated an existing mobile service, you will want to create this version on the same hosting plan.</source>
          <target state="new">If you have already migrated an existing mobile service, you will want to create this version on the same hosting plan.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Open the <bpt id="p1">[</bpt><ept id="p1">Azure portal]</ept> and navigate to your migrated application.</source>
          <target state="new">Open the <bpt id="p1">[</bpt><ept id="p1">Azure portal]</ept> and navigate to your migrated application.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Make note of the App Service Plan it is running on.</source>
          <target state="new">Make note of the App Service Plan it is running on.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Next, create the second application instance by following the <bpt id="p1">[</bpt>.NET backend creation instructions<ept id="p1">](app-service-mobile-dotnet-backend-how-to-use-server-sdk.md#create-app)</ept>.</source>
          <target state="new">Next, create the second application instance by following the <bpt id="p1">[</bpt>.NET backend creation instructions<ept id="p1">](app-service-mobile-dotnet-backend-how-to-use-server-sdk.md#create-app)</ept>.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>When prompted to select you App Service Plan or "hosting plan" choose the plan of your migrated application.</source>
          <target state="new">When prompted to select you App Service Plan or "hosting plan" choose the plan of your migrated application.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>You will likely want to use the same database and Notification Hub as you did in Mobile Services.</source>
          <target state="new">You will likely want to use the same database and Notification Hub as you did in Mobile Services.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>You can copy these values by opening <bpt id="p1">[</bpt><ept id="p1">Azure portal]</ept> and navigating to the original application, then click <bpt id="p2">**</bpt>Settings<ept id="p2">**</ept> &gt; <bpt id="p3">**</bpt>Application settings<ept id="p3">**</ept>.</source>
          <target state="new">You can copy these values by opening <bpt id="p1">[</bpt><ept id="p1">Azure portal]</ept> and navigating to the original application, then click <bpt id="p2">**</bpt>Settings<ept id="p2">**</ept> &gt; <bpt id="p3">**</bpt>Application settings<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Under <bpt id="p1">**</bpt>Connection Strings<ept id="p1">**</ept>, copy <ph id="ph1">`MS_NotificationHubConnectionString`</ph> and <ph id="ph2">`MS_TableConnectionString`</ph>.</source>
          <target state="new">Under <bpt id="p1">**</bpt>Connection Strings<ept id="p1">**</ept>, copy <ph id="ph1">`MS_NotificationHubConnectionString`</ph> and <ph id="ph2">`MS_TableConnectionString`</ph>.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Navigate to your new upgrade site and paste them in, overwriting any existing values.</source>
          <target state="new">Navigate to your new upgrade site and paste them in, overwriting any existing values.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Repeat this process for any other application settings your app needs.</source>
          <target state="new">Repeat this process for any other application settings your app needs.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>If not using a migrated service, you can read connection strings and app settings from the <bpt id="p1">**</bpt>Configure<ept id="p1">**</ept> tab of the Mobile Services section of the <bpt id="p2">[</bpt><ept id="p2">Azure classic portal]</ept>.</source>
          <target state="new">If not using a migrated service, you can read connection strings and app settings from the <bpt id="p1">**</bpt>Configure<ept id="p1">**</ept> tab of the Mobile Services section of the <bpt id="p2">[</bpt><ept id="p2">Azure classic portal]</ept>.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Make a copy of the ASP.NET project for your application and publish it to your new site.</source>
          <target state="new">Make a copy of the ASP.NET project for your application and publish it to your new site.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Using a copy of your client application updated with the new URL, validate that everything works as expected.</source>
          <target state="new">Using a copy of your client application updated with the new URL, validate that everything works as expected.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Updating the server project</source>
          <target state="new">Updating the server project</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Mobile Apps provides a new <bpt id="p1">[</bpt><ept id="p1">Mobile App Server SDK]</ept> which provides much of the same functionality as the Mobile Services runtime.</source>
          <target state="new">Mobile Apps provides a new <bpt id="p1">[</bpt><ept id="p1">Mobile App Server SDK]</ept> which provides much of the same functionality as the Mobile Services runtime.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>First, you should remove all references to the Mobile Services packages.</source>
          <target state="new">First, you should remove all references to the Mobile Services packages.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>In the NuGet package manager, search for <ph id="ph1">`WindowsAzure.MobileServices.Backend`</ph>.</source>
          <target state="new">In the NuGet package manager, search for <ph id="ph1">`WindowsAzure.MobileServices.Backend`</ph>.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Most apps will see several packages here, including <ph id="ph1">`WindowsAzure.MobileServices.Backend.Tables`</ph> and <ph id="ph2">`WindowsAzure.MobileServices.Backend.Entity`</ph>.</source>
          <target state="new">Most apps will see several packages here, including <ph id="ph1">`WindowsAzure.MobileServices.Backend.Tables`</ph> and <ph id="ph2">`WindowsAzure.MobileServices.Backend.Entity`</ph>.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>In such a case, start with the lowest package in the dependency tree, such as <ph id="ph1">`Entity`</ph>, and remove it.</source>
          <target state="new">In such a case, start with the lowest package in the dependency tree, such as <ph id="ph1">`Entity`</ph>, and remove it.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>When prompted, do not remove all dependant packages.</source>
          <target state="new">When prompted, do not remove all dependant packages.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Repeat this process until you have removed <ph id="ph1">`WindowsAzure.MobileServices.Backend`</ph> itself.</source>
          <target state="new">Repeat this process until you have removed <ph id="ph1">`WindowsAzure.MobileServices.Backend`</ph> itself.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>At this point you will have a project that no longer references Mobile Services SDKs.</source>
          <target state="new">At this point you will have a project that no longer references Mobile Services SDKs.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Next you will add references the Mobile Apps SDK.</source>
          <target state="new">Next you will add references the Mobile Apps SDK.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>For this upgrade, most developers will want to download and install the <ph id="ph1">`Microsoft.Azure.Mobile.Server.Quickstart`</ph> package, as this will pull in the entire required set.</source>
          <target state="new">For this upgrade, most developers will want to download and install the <ph id="ph1">`Microsoft.Azure.Mobile.Server.Quickstart`</ph> package, as this will pull in the entire required set.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>There will be quite a few compiler errors resulting from differences between the SDKs, but these are easy to address and are covered in the rest of this section.</source>
          <target state="new">There will be quite a few compiler errors resulting from differences between the SDKs, but these are easy to address and are covered in the rest of this section.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Base configuration</source>
          <target state="new">Base configuration</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Then, in WebApiConfig.cs, you can replace:</source>
          <target state="new">Then, in WebApiConfig.cs, you can replace:</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>with</source>
          <target state="new">with</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> If you wish to learn more about the new .NET server SDK and how to add/remove features from your app, please see the <bpt id="p1">[</bpt><ept id="p1">How to use the .NET server SDK]</ept> topic.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> If you wish to learn more about the new .NET server SDK and how to add/remove features from your app, please see the <bpt id="p1">[</bpt><ept id="p1">How to use the .NET server SDK]</ept> topic.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>If your app makes use of the authentication features, you will also need to register an OWIN middleware.</source>
          <target state="new">If your app makes use of the authentication features, you will also need to register an OWIN middleware.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>In this case, you should move the above configuration code into a new OWIN Startup class.</source>
          <target state="new">In this case, you should move the above configuration code into a new OWIN Startup class.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Add the NuGet package <ph id="ph1">`Microsoft.Owin.Host.SystemWeb`</ph> if it is not already included in your project.</source>
          <target state="new">Add the NuGet package <ph id="ph1">`Microsoft.Owin.Host.SystemWeb`</ph> if it is not already included in your project.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>In Visual Studio, right click on your project and select <bpt id="p1">**</bpt>Add<ept id="p1">**</ept> -&gt; <bpt id="p2">**</bpt>New Item<ept id="p2">**</ept>.</source>
          <target state="new">In Visual Studio, right click on your project and select <bpt id="p1">**</bpt>Add<ept id="p1">**</ept> -&gt; <bpt id="p2">**</bpt>New Item<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>Web<ept id="p1">**</ept> -&gt; <bpt id="p2">**</bpt>General<ept id="p2">**</ept> -&gt; <bpt id="p3">**</bpt>OWIN Startup class<ept id="p3">**</ept>.</source>
          <target state="new">Select <bpt id="p1">**</bpt>Web<ept id="p1">**</ept> -&gt; <bpt id="p2">**</bpt>General<ept id="p2">**</ept> -&gt; <bpt id="p3">**</bpt>OWIN Startup class<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Move the above code for MobileAppConfiguration from <ph id="ph1">`WebApiConfig.Register()`</ph> to the <ph id="ph2">`Configuration()`</ph> method of your new startup class.</source>
          <target state="new">Move the above code for MobileAppConfiguration from <ph id="ph1">`WebApiConfig.Register()`</ph> to the <ph id="ph2">`Configuration()`</ph> method of your new startup class.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Make sure the <ph id="ph1">`Configuration()`</ph> method ends with:</source>
          <target state="new">Make sure the <ph id="ph1">`Configuration()`</ph> method ends with:</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>There are additional changes related to authentication which are covered in the full authentication section below.</source>
          <target state="new">There are additional changes related to authentication which are covered in the full authentication section below.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Working with Data</source>
          <target state="new">Working with Data</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>In Mobile Services, the mobile app name served as the default schema name in the Entity Framework setup.</source>
          <target state="new">In Mobile Services, the mobile app name served as the default schema name in the Entity Framework setup.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>To ensure that you have the same schema being referenced as before, use the following to set the schema in the DbContext for your application:</source>
          <target state="new">To ensure that you have the same schema being referenced as before, use the following to set the schema in the DbContext for your application:</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Please make sure you have MS_MobileServiceName set if you do the above.</source>
          <target state="new">Please make sure you have MS_MobileServiceName set if you do the above.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>You can also provide another schema name if your application customized this previously.</source>
          <target state="new">You can also provide another schema name if your application customized this previously.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>System Properties</source>
          <target state="new">System Properties</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Naming</source>
          <target state="new">Naming</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>In the Azure Mobile Services server SDK, system properties always contain a double underscore (<ph id="ph1">`__`</ph>) prefix for the properties:</source>
          <target state="new">In the Azure Mobile Services server SDK, system properties always contain a double underscore (<ph id="ph1">`__`</ph>) prefix for the properties:</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>__createdAt</source>
          <target state="new">__createdAt</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>__updatedAt</source>
          <target state="new">__updatedAt</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>__deleted</source>
          <target state="new">__deleted</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>__version</source>
          <target state="new">__version</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The Mobile Services client SDKs have special logic for parsing system properties in this format.</source>
          <target state="new">The Mobile Services client SDKs have special logic for parsing system properties in this format.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>In Azure Mobile Apps, system properties no longer have a special format and have the following names:</source>
          <target state="new">In Azure Mobile Apps, system properties no longer have a special format and have the following names:</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>createdAt</source>
          <target state="new">createdAt</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>updatedAt</source>
          <target state="new">updatedAt</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>deleted</source>
          <target state="new">deleted</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>version</source>
          <target state="new">version</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The Mobile Apps client SDKs use the new system properties names, so no changes are required to client code.</source>
          <target state="new">The Mobile Apps client SDKs use the new system properties names, so no changes are required to client code.</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>However, if you are directly making REST calls to your service then you should change your queries accordingly.</source>
          <target state="new">However, if you are directly making REST calls to your service then you should change your queries accordingly.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Local store</source>
          <target state="new">Local store</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The changes to the names of system properties mean that an offline sync local database for Mobile Services is not compatible with Mobile Apps.</source>
          <target state="new">The changes to the names of system properties mean that an offline sync local database for Mobile Services is not compatible with Mobile Apps.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>If possible, you should avoid upgrading client apps from Mobile Services to Mobile Apps until after pending changes have been sent to the server.</source>
          <target state="new">If possible, you should avoid upgrading client apps from Mobile Services to Mobile Apps until after pending changes have been sent to the server.</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Then, the upgraded app should use a new database filename.</source>
          <target state="new">Then, the upgraded app should use a new database filename.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>If a client app is upgraded from Mobile Services to Mobile Apps while there are pending offline changes in the operation queue, then the system database must be updated to use the new column names.</source>
          <target state="new">If a client app is upgraded from Mobile Services to Mobile Apps while there are pending offline changes in the operation queue, then the system database must be updated to use the new column names.</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>On iOS, this can be achieved using lightweight migrations to change the column names.</source>
          <target state="new">On iOS, this can be achieved using lightweight migrations to change the column names.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>On Android and the .NET managed client, you should write custom SQL to rename the columns for your data object tables.</source>
          <target state="new">On Android and the .NET managed client, you should write custom SQL to rename the columns for your data object tables.</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>On iOS, you should change your Core Data schema for your data entities to match the following.</source>
          <target state="new">On iOS, you should change your Core Data schema for your data entities to match the following.</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Note that the properties <ph id="ph1">`createdAt`</ph>, <ph id="ph2">`updatedAt`</ph> and <ph id="ph3">`version`</ph> no longer have an <ph id="ph4">`ms_`</ph> prefix:</source>
          <target state="new">Note that the properties <ph id="ph1">`createdAt`</ph>, <ph id="ph2">`updatedAt`</ph> and <ph id="ph3">`version`</ph> no longer have an <ph id="ph4">`ms_`</ph> prefix:</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Attribute</source>
          <target state="new">Attribute</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="new">Type</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Note</source>
          <target state="new">Note</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>id</source>
          <target state="new">id</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>String, marked required</source>
          <target state="new">String, marked required</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>primary key in remote store</source>
          <target state="new">primary key in remote store</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>createdAt</source>
          <target state="new">createdAt</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Date</source>
          <target state="new">Date</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>(optional) maps to createdAt system property</source>
          <target state="new">(optional) maps to createdAt system property</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>updatedAt</source>
          <target state="new">updatedAt</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Date</source>
          <target state="new">Date</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>(optional) maps to updatedAt system property</source>
          <target state="new">(optional) maps to updatedAt system property</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>version</source>
          <target state="new">version</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>String</source>
          <target state="new">String</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>(optional) used to detect conflicts, maps to version</source>
          <target state="new">(optional) used to detect conflicts, maps to version</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Querying system properties</source>
          <target state="new">Querying system properties</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>In Azure Mobile Services, system properties are not sent by default, but only when they are requested using the query string <ph id="ph1">`__systemProperties`</ph>.</source>
          <target state="new">In Azure Mobile Services, system properties are not sent by default, but only when they are requested using the query string <ph id="ph1">`__systemProperties`</ph>.</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>In contrast, in Azure Mobile Apps system properties are <bpt id="p1">**</bpt>always selected<ept id="p1">**</ept> since they are part of the server SDK object model.</source>
          <target state="new">In contrast, in Azure Mobile Apps system properties are <bpt id="p1">**</bpt>always selected<ept id="p1">**</ept> since they are part of the server SDK object model.</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>This change mainly impacts custom implementations of domain managers, such as extensions of <ph id="ph1">`MappedEntityDomainManager`</ph>.</source>
          <target state="new">This change mainly impacts custom implementations of domain managers, such as extensions of <ph id="ph1">`MappedEntityDomainManager`</ph>.</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>In Mobile Services, if a client never requests any system properties, it is possible to use a <ph id="ph1">`MappedEntityDomainManager`</ph> that does not actually map all properties.</source>
          <target state="new">In Mobile Services, if a client never requests any system properties, it is possible to use a <ph id="ph1">`MappedEntityDomainManager`</ph> that does not actually map all properties.</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>However, in Azure Mobile Apps, these unmapped properties will cause an error in GET queries.</source>
          <target state="new">However, in Azure Mobile Apps, these unmapped properties will cause an error in GET queries.</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The easiest way to resolve the issue is to modify your DTOs so that they inherit from <ph id="ph1">`ITableData`</ph> instead of <ph id="ph2">`EntityData`</ph>.</source>
          <target state="new">The easiest way to resolve the issue is to modify your DTOs so that they inherit from <ph id="ph1">`ITableData`</ph> instead of <ph id="ph2">`EntityData`</ph>.</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Then, add the <ph id="ph1">`[NotMapped]`</ph> attribute to the fields that should be omitted.</source>
          <target state="new">Then, add the <ph id="ph1">`[NotMapped]`</ph> attribute to the fields that should be omitted.</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>For example, the following defines <ph id="ph1">`TodoItem`</ph> with no system properties:</source>
          <target state="new">For example, the following defines <ph id="ph1">`TodoItem`</ph> with no system properties:</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Note: if you get errors on <ph id="ph1">`NotMapped`</ph>, add a reference to the assembly <ph id="ph2">`System.ComponentModel.DataAnnotations`</ph>.</source>
          <target state="new">Note: if you get errors on <ph id="ph1">`NotMapped`</ph>, add a reference to the assembly <ph id="ph2">`System.ComponentModel.DataAnnotations`</ph>.</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>CORS</source>
          <target state="new">CORS</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Mobile Services included some support for CORS by wrapping the ASP.NET CORS solution.</source>
          <target state="new">Mobile Services included some support for CORS by wrapping the ASP.NET CORS solution.</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>This wrapping layer has been removed to give the developer more control, so you can directly leverage <bpt id="p1">[</bpt>ASP.NET CORS support<ept id="p1">](http://www.asp.net/web-api/overview/security/enabling-cross-origin-requests-in-web-api)</ept>.</source>
          <target state="new">This wrapping layer has been removed to give the developer more control, so you can directly leverage <bpt id="p1">[</bpt>ASP.NET CORS support<ept id="p1">](http://www.asp.net/web-api/overview/security/enabling-cross-origin-requests-in-web-api)</ept>.</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The main areas of concern if using CORS are that the <ph id="ph1">`eTag`</ph> and <ph id="ph2">`Location`</ph> headers must be allowed in order for the client SDKs to work properly.</source>
          <target state="new">The main areas of concern if using CORS are that the <ph id="ph1">`eTag`</ph> and <ph id="ph2">`Location`</ph> headers must be allowed in order for the client SDKs to work properly.</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Push Notifications</source>
          <target state="new">Push Notifications</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>For push, the main item that you may find missing from the Server SDK is the PushRegistrationHandler class.</source>
          <target state="new">For push, the main item that you may find missing from the Server SDK is the PushRegistrationHandler class.</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Registrations are handled slightly differently in Mobile Apps, and tagless registrations are enabled by default.</source>
          <target state="new">Registrations are handled slightly differently in Mobile Apps, and tagless registrations are enabled by default.</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Managing tags may be accomplished by using custom APIs.</source>
          <target state="new">Managing tags may be accomplished by using custom APIs.</target>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Please see the <bpt id="p1">[</bpt>registering for tags<ept id="p1">](app-service-mobile-dotnet-backend-how-to-use-server-sdk.md#tags)</ept> instructions for more information.</source>
          <target state="new">Please see the <bpt id="p1">[</bpt>registering for tags<ept id="p1">](app-service-mobile-dotnet-backend-how-to-use-server-sdk.md#tags)</ept> instructions for more information.</target>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Scheduled Jobs</source>
          <target state="new">Scheduled Jobs</target>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Scheduled jobs are not built into Mobile Apps, so any existing jobs that you have in your .NET backend will need to be upgraded individually.</source>
          <target state="new">Scheduled jobs are not built into Mobile Apps, so any existing jobs that you have in your .NET backend will need to be upgraded individually.</target>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>One option is to create a scheduled <bpt id="p1">[</bpt><ept id="p1">Web Job]</ept> on the Mobile App code site.</source>
          <target state="new">One option is to create a scheduled <bpt id="p1">[</bpt><ept id="p1">Web Job]</ept> on the Mobile App code site.</target>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>You could also set up a controller that holds your job code and configure the <bpt id="p1">[</bpt><ept id="p1">Azure Scheduler]</ept> to hit that endpoint on the expected schedule.</source>
          <target state="new">You could also set up a controller that holds your job code and configure the <bpt id="p1">[</bpt><ept id="p1">Azure Scheduler]</ept> to hit that endpoint on the expected schedule.</target>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Miscellaneous changes</source>
          <target state="new">Miscellaneous changes</target>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>All ApiControllers which will be consumed by a mobile client must now have the <ph id="ph1">`[MobileAppController]`</ph> attribute.</source>
          <target state="new">All ApiControllers which will be consumed by a mobile client must now have the <ph id="ph1">`[MobileAppController]`</ph> attribute.</target>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>This is no longer included by default so that other ApiControllers to go unaffected by the mobile formatters.</source>
          <target state="new">This is no longer included by default so that other ApiControllers to go unaffected by the mobile formatters.</target>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`ApiServices`</ph> object is no longer part of the SDK.</source>
          <target state="new">The <ph id="ph1">`ApiServices`</ph> object is no longer part of the SDK.</target>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>To access Mobile App settings, you can use the following:</source>
          <target state="new">To access Mobile App settings, you can use the following:</target>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Similarly, logging is now accomplished using the standard ASP.NET trace writing:</source>
          <target state="new">Similarly, logging is now accomplished using the standard ASP.NET trace writing:</target>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="authentication"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Authentication considerations</source>
          <target state="new"><ph id="ph1">&lt;a name="authentication"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Authentication considerations</target>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The authentication components of Mobile Services have now been moved into the App Service Authentication/Authorization feature.</source>
          <target state="new">The authentication components of Mobile Services have now been moved into the App Service Authentication/Authorization feature.</target>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>You can learn about enabling this for your site by reading the <bpt id="p1">[</bpt>Add authentication to your mobile app<ept id="p1">](app-service-mobile-ios-get-started-users.md)</ept> topic.</source>
          <target state="new">You can learn about enabling this for your site by reading the <bpt id="p1">[</bpt>Add authentication to your mobile app<ept id="p1">](app-service-mobile-ios-get-started-users.md)</ept> topic.</target>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>For some providers, such as AAD, Facebook, and Google, you should be able to leverage the existing registration from your copy application.</source>
          <target state="new">For some providers, such as AAD, Facebook, and Google, you should be able to leverage the existing registration from your copy application.</target>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>You simply need to navigate to the identity provider's portal and add a new redirect URL to the registration.</source>
          <target state="new">You simply need to navigate to the identity provider's portal and add a new redirect URL to the registration.</target>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Then configure App Service Authentication/Authorization with the client ID and secret.</source>
          <target state="new">Then configure App Service Authentication/Authorization with the client ID and secret.</target>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Controller action authorization</source>
          <target state="new">Controller action authorization</target>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Any instances of the <ph id="ph1">`[AuthorizeLevel(AuthorizationLevel.User)]`</ph> attribute must now be changed to use the standard ASP.NET <ph id="ph2">`[Authorize]`</ph> attribute.</source>
          <target state="new">Any instances of the <ph id="ph1">`[AuthorizeLevel(AuthorizationLevel.User)]`</ph> attribute must now be changed to use the standard ASP.NET <ph id="ph2">`[Authorize]`</ph> attribute.</target>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Additionally, controllers are now Anonymous by default, as in other ASP.NET applications.</source>
          <target state="new">Additionally, controllers are now Anonymous by default, as in other ASP.NET applications.</target>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>If you were using one of the other AuthorizeLevel options, such as Admin or Application, please note that these are gone.</source>
          <target state="new">If you were using one of the other AuthorizeLevel options, such as Admin or Application, please note that these are gone.</target>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>You can instead set up AuthorizationFilters for shared secrets or configure an AAD Service Principal to enable service-to-service calls securely.</source>
          <target state="new">You can instead set up AuthorizationFilters for shared secrets or configure an AAD Service Principal to enable service-to-service calls securely.</target>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Getting additional user information</source>
          <target state="new">Getting additional user information</target>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>You can get additional user information, including access tokens through the <ph id="ph1">`GetAppServiceIdentityAsync()`</ph> method:</source>
          <target state="new">You can get additional user information, including access tokens through the <ph id="ph1">`GetAppServiceIdentityAsync()`</ph> method:</target>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Additionally, if your application takes dependencies on user IDs, such as storing them in a database, it is important to note that the user IDs between Mobile Services and App Service Mobile Apps are different.</source>
          <target state="new">Additionally, if your application takes dependencies on user IDs, such as storing them in a database, it is important to note that the user IDs between Mobile Services and App Service Mobile Apps are different.</target>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>You can still get the Mobile Services User ID, though.</source>
          <target state="new">You can still get the Mobile Services User ID, though.</target>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>All of the ProviderCredentials subclasses have a UserId property.</source>
          <target state="new">All of the ProviderCredentials subclasses have a UserId property.</target>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>So continuing from the example before:</source>
          <target state="new">So continuing from the example before:</target>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>If your app does take any dependencies on user IDs, it is important that you leverage the same registration with an identity provider if possible.</source>
          <target state="new">If your app does take any dependencies on user IDs, it is important that you leverage the same registration with an identity provider if possible.</target>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>User IDs are typically scoped to the application registration that was used, so introducing a new registration could create problems with matching users to their data.</source>
          <target state="new">User IDs are typically scoped to the application registration that was used, so introducing a new registration could create problems with matching users to their data.</target>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Custom authentication</source>
          <target state="new">Custom authentication</target>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>If your app is using a custom authentication solution, you will want to make sure that the upgraded site has access to the system.</source>
          <target state="new">If your app is using a custom authentication solution, you will want to make sure that the upgraded site has access to the system.</target>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Follow the new instructions for custom authentication in the <bpt id="p1">[</bpt><ept id="p1">.NET server SDK overview]</ept> to integrate your solution.</source>
          <target state="new">Follow the new instructions for custom authentication in the <bpt id="p1">[</bpt><ept id="p1">.NET server SDK overview]</ept> to integrate your solution.</target>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Please note that the custom authentication components are still in preview.</source>
          <target state="new">Please note that the custom authentication components are still in preview.</target>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="updating-clients"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Updating clients</source>
          <target state="new"><ph id="ph1">&lt;a name="updating-clients"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>Updating clients</target>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Once you have an operational Mobile App backend, you can work on a new version of your client application which consumes it.</source>
          <target state="new">Once you have an operational Mobile App backend, you can work on a new version of your client application which consumes it.</target>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Mobile Apps also includes a new version of the client SDKs, and similar to the server upgrade above, you will need to remove all references to the Mobile Services SDKs before installing the Mobile Apps versions.</source>
          <target state="new">Mobile Apps also includes a new version of the client SDKs, and similar to the server upgrade above, you will need to remove all references to the Mobile Services SDKs before installing the Mobile Apps versions.</target>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>One of the main changes between the versions is that the constructors no longer require an application key.</source>
          <target state="new">One of the main changes between the versions is that the constructors no longer require an application key.</target>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>You now simply pass in the URL of your Mobile App.</source>
          <target state="new">You now simply pass in the URL of your Mobile App.</target>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>For example, on the .NET clients, the <ph id="ph1">`MobileServiceClient`</ph> constructor is now:</source>
          <target state="new">For example, on the .NET clients, the <ph id="ph1">`MobileServiceClient`</ph> constructor is now:</target>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>You can read about installing the new SDKs and using the new structure via the links below:</source>
          <target state="new">You can read about installing the new SDKs and using the new structure via the links below:</target>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>iOS version 3.0.0 or later</source>
          <target state="new">iOS version 3.0.0 or later</target>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>.NET (Windows/Xamarin) version 2.0.0 or later</source>
          <target state="new">.NET (Windows/Xamarin) version 2.0.0 or later</target>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>If your application makes use of push notifications, make note of the specific registration instructions for each platform, as there have been some changes there as well.</source>
          <target state="new">If your application makes use of push notifications, make note of the specific registration instructions for each platform, as there have been some changes there as well.</target>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>When you have the new client version ready, try it out against your upgraded server project.</source>
          <target state="new">When you have the new client version ready, try it out against your upgraded server project.</target>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>After validating that it works, you can release a new version of your application to customers.</source>
          <target state="new">After validating that it works, you can release a new version of your application to customers.</target>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Eventually, once your customers have had a chance to receive these updates, you can delete the Mobile Services version of your app.</source>
          <target state="new">Eventually, once your customers have had a chance to receive these updates, you can delete the Mobile Services version of your app.</target>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>At this point, you have completely upgraded to an App Service Mobile App using the latest Mobile Apps server SDK.</source>
          <target state="new">At this point, you have completely upgraded to an App Service Mobile App using the latest Mobile Apps server SDK.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>