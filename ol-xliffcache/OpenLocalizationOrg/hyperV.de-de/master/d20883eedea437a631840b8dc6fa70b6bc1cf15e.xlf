<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="de-de">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d20883eedea437a631840b8dc6fa70b6bc1cf15e</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Get Started with authentication for Mobile Apps in Xamarin.Forms app</source>
          <target state="new">Get Started with authentication for Mobile Apps in Xamarin.Forms app</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to use Mobile Apps to authenticate users of your Xamarin Forms app through a variety of identity providers, including AAD, Google, Facebook, Twitter, and Microsoft.</source>
          <target state="new">Learn how to use Mobile Apps to authenticate users of your Xamarin Forms app through a variety of identity providers, including AAD, Google, Facebook, Twitter, and Microsoft.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Add authentication to your Xamarin.Forms app</source>
          <target state="new">Add authentication to your Xamarin.Forms app</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>&amp;nbsp;</source>
          <target state="new">&amp;nbsp;</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="new">Overview</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This topic shows you how to authenticate users of an App Service Mobile App from your client application.</source>
          <target state="new">This topic shows you how to authenticate users of an App Service Mobile App from your client application.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>In this tutorial, you add authentication to the Xamarin.Forms quickstart project using an identity provider that is supported by App Service.</source>
          <target state="new">In this tutorial, you add authentication to the Xamarin.Forms quickstart project using an identity provider that is supported by App Service.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>After being successfully authenticated and authorized by your Mobile App, the user ID value is displayed and you will be able to access restricted table data.</source>
          <target state="new">After being successfully authenticated and authorized by your Mobile App, the user ID value is displayed and you will be able to access restricted table data.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You must first complete the <bpt id="p1">[</bpt>Xamarin.Forms quickstart tutorial<ept id="p1">](app-service-mobile-xamarin-forms-get-started.md)</ept>.</source>
          <target state="new">You must first complete the <bpt id="p1">[</bpt>Xamarin.Forms quickstart tutorial<ept id="p1">](app-service-mobile-xamarin-forms-get-started.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>If you do not use the downloaded quick start server project, you must add the authentication extension package to your project.</source>
          <target state="new">If you do not use the downloaded quick start server project, you must add the authentication extension package to your project.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For more information about server extension packages, see <bpt id="p1">[</bpt>Work with the .NET backend server SDK for Azure Mobile Apps<ept id="p1">](app-service-mobile-dotnet-backend-how-to-use-server-sdk.md)</ept>.</source>
          <target state="new">For more information about server extension packages, see <bpt id="p1">[</bpt>Work with the .NET backend server SDK for Azure Mobile Apps<ept id="p1">](app-service-mobile-dotnet-backend-how-to-use-server-sdk.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Register your app for authentication and configure App Services</source>
          <target state="new">Register your app for authentication and configure App Services</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Restrict permissions to authenticated users</source>
          <target state="new">Restrict permissions to authenticated users</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Add authentication to the portable class library</source>
          <target state="new">Add authentication to the portable class library</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Mobile Apps use a platform specific <ph id="ph1">`MobileServiceClient.LoginAsync`</ph> method in order to display the login interface and cache data.</source>
          <target state="new">Mobile Apps use a platform specific <ph id="ph1">`MobileServiceClient.LoginAsync`</ph> method in order to display the login interface and cache data.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>To authenticate with a Xamarin Forms project you will define an <ph id="ph1">`IAuthenticate`</ph> interface in the portable class library.</source>
          <target state="new">To authenticate with a Xamarin Forms project you will define an <ph id="ph1">`IAuthenticate`</ph> interface in the portable class library.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Each platform you want to support will implement this interface in the platform specific project.</source>
          <target state="new">Each platform you want to support will implement this interface in the platform specific project.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You will also update the user interface defined in the portable class library, adding a login button.</source>
          <target state="new">You will also update the user interface defined in the portable class library, adding a login button.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The user will need to click this button to authenticate after the app starts.</source>
          <target state="new">The user will need to click this button to authenticate after the app starts.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>In Visual Studio or Xamarin Studio, open App.cs from the <bpt id="p1">**</bpt>portable<ept id="p1">**</ept> project.</source>
          <target state="new">In Visual Studio or Xamarin Studio, open App.cs from the <bpt id="p1">**</bpt>portable<ept id="p1">**</ept> project.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Add the following <ph id="ph1">`using`</ph> statement to the file.</source>
          <target state="new">Add the following <ph id="ph1">`using`</ph> statement to the file.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>In App.cs, add the following <ph id="ph1">`IAuthenticate`</ph> interface definition immediately before the <ph id="ph2">`App`</ph> class definition.</source>
          <target state="new">In App.cs, add the following <ph id="ph1">`IAuthenticate`</ph> interface definition immediately before the <ph id="ph2">`App`</ph> class definition.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>In App.cs, add the following static members to initialize the interface with a platform specific implementation.</source>
          <target state="new">In App.cs, add the following static members to initialize the interface with a platform specific implementation.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Open TodoList.xaml.cs from the <bpt id="p1">**</bpt>portable<ept id="p1">**</ept> project.</source>
          <target state="new">Open TodoList.xaml.cs from the <bpt id="p1">**</bpt>portable<ept id="p1">**</ept> project.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Add the following flag to the <ph id="ph1">`TodoList`</ph> class to indicate whether or not the user has authenticated.</source>
          <target state="new">Add the following flag to the <ph id="ph1">`TodoList`</ph> class to indicate whether or not the user has authenticated.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>In TodoList.xaml.cs update the <ph id="ph1">`OnAppearing`</ph> method so that you only refresh the items if the user has authenticated.</source>
          <target state="new">In TodoList.xaml.cs update the <ph id="ph1">`OnAppearing`</ph> method so that you only refresh the items if the user has authenticated.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>In TodoList.xaml.cs, at the top of the constructor for the <ph id="ph1">`TodoList`</ph> class define the following login button and click handler...</source>
          <target state="new">In TodoList.xaml.cs, at the top of the constructor for the <ph id="ph1">`TodoList`</ph> class define the following login button and click handler...</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>In TodoList.xaml.cs, add the following handler for the login button click event</source>
          <target state="new">In TodoList.xaml.cs, add the following handler for the login button click event</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Save your changes and build the portable class library project verifying no errors.</source>
          <target state="new">Save your changes and build the portable class library project verifying no errors.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Add authentication to the Android app</source>
          <target state="new">Add authentication to the Android app</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>In this section you will add authentication for the droid project.</source>
          <target state="new">In this section you will add authentication for the droid project.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>If you are not working with Android devices, you can skip this section.</source>
          <target state="new">If you are not working with Android devices, you can skip this section.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>In Visual Studio or Xamarin Studio, right click the <bpt id="p1">**</bpt>droid<ept id="p1">**</ept> project and click <bpt id="p2">**</bpt>Set as StartUp Project<ept id="p2">**</ept>.</source>
          <target state="new">In Visual Studio or Xamarin Studio, right click the <bpt id="p1">**</bpt>droid<ept id="p1">**</ept> project and click <bpt id="p2">**</bpt>Set as StartUp Project<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Go ahead and run the project in the debugger to verify that an unhandled exception with a status code of 401 (Unauthorized) is raised after the app starts.</source>
          <target state="new">Go ahead and run the project in the debugger to verify that an unhandled exception with a status code of 401 (Unauthorized) is raised after the app starts.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This will happen because you restricted access on the backend to authorized users only.</source>
          <target state="new">This will happen because you restricted access on the backend to authorized users only.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Next, open MainActivity.cs in the droid project and add the following <ph id="ph1">`using`</ph> statement.</source>
          <target state="new">Next, open MainActivity.cs in the droid project and add the following <ph id="ph1">`using`</ph> statement.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Update the <ph id="ph1">`MainActivity`</ph> class to implement the <ph id="ph2">`IAuthenticate`</ph> interface.</source>
          <target state="new">Update the <ph id="ph1">`MainActivity`</ph> class to implement the <ph id="ph2">`IAuthenticate`</ph> interface.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Update the <ph id="ph1">`MainActivity`</ph> class by adding a <ph id="ph2">`MobileServiceUser`</ph> field and the <ph id="ph3">`Authenticate`</ph> method shown below to support the <ph id="ph4">`IAuthenticate`</ph> interface.</source>
          <target state="new">Update the <ph id="ph1">`MainActivity`</ph> class by adding a <ph id="ph2">`MobileServiceUser`</ph> field and the <ph id="ph3">`Authenticate`</ph> method shown below to support the <ph id="ph4">`IAuthenticate`</ph> interface.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>If you want to use a different <ph id="ph1">`MobileServiceAuthenticationProvider`</ph> instead of Facebook, make that change as well.</source>
          <target state="new">If you want to use a different <ph id="ph1">`MobileServiceAuthenticationProvider`</ph> instead of Facebook, make that change as well.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Update the <ph id="ph1">`OnCreate`</ph> method of the <ph id="ph2">`MainActivity`</ph> class to initialize the authenticator before loading the app.</source>
          <target state="new">Update the <ph id="ph1">`OnCreate`</ph> method of the <ph id="ph2">`MainActivity`</ph> class to initialize the authenticator before loading the app.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Rebuild the app and run it.</source>
          <target state="new">Rebuild the app and run it.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Log in with the authentication provider you chose and verify you are able to access the table as an authenticated user.</source>
          <target state="new">Log in with the authentication provider you chose and verify you are able to access the table as an authenticated user.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Add authentication to the iOS app</source>
          <target state="new">Add authentication to the iOS app</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>In this section you will add authentication for the iOS project.</source>
          <target state="new">In this section you will add authentication for the iOS project.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>If you are not working with iOS devices, you can skip this section.</source>
          <target state="new">If you are not working with iOS devices, you can skip this section.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>In Visual Studio or Xamarin Studio, right click the <bpt id="p1">**</bpt>iOS<ept id="p1">**</ept> project and click <bpt id="p2">**</bpt>Set as StartUp Project<ept id="p2">**</ept>.</source>
          <target state="new">In Visual Studio or Xamarin Studio, right click the <bpt id="p1">**</bpt>iOS<ept id="p1">**</ept> project and click <bpt id="p2">**</bpt>Set as StartUp Project<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Go ahead and run the project in the debugger to verify that an unhandled exception with a status code of 401 (Unauthorized) is raised after the app starts.</source>
          <target state="new">Go ahead and run the project in the debugger to verify that an unhandled exception with a status code of 401 (Unauthorized) is raised after the app starts.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>This will happen because you restricted access on the backend to authorized users only.</source>
          <target state="new">This will happen because you restricted access on the backend to authorized users only.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Next, open AppDelegate.cs in the iOS project and add the following <ph id="ph1">`using`</ph> statement.</source>
          <target state="new">Next, open AppDelegate.cs in the iOS project and add the following <ph id="ph1">`using`</ph> statement.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Update the <ph id="ph1">`AppDelegate`</ph> class to implement the <ph id="ph2">`IAuthenticate`</ph> interface.</source>
          <target state="new">Update the <ph id="ph1">`AppDelegate`</ph> class to implement the <ph id="ph2">`IAuthenticate`</ph> interface.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Update the <ph id="ph1">`AppDelegate`</ph> class by adding a <ph id="ph2">`MobileServiceUser`</ph> field and the <ph id="ph3">`Authenticate`</ph> method shown below to support the <ph id="ph4">`IAuthenticate`</ph> interface.</source>
          <target state="new">Update the <ph id="ph1">`AppDelegate`</ph> class by adding a <ph id="ph2">`MobileServiceUser`</ph> field and the <ph id="ph3">`Authenticate`</ph> method shown below to support the <ph id="ph4">`IAuthenticate`</ph> interface.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>If you want to use a different <ph id="ph1">`MobileServiceAuthenticationProvider`</ph> instead of Facebook, make that change as well.</source>
          <target state="new">If you want to use a different <ph id="ph1">`MobileServiceAuthenticationProvider`</ph> instead of Facebook, make that change as well.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Update the <ph id="ph1">`FinishedLaunching`</ph> method of the <ph id="ph2">`AppDelegate`</ph> class to initialize the authenticator before loading the app.</source>
          <target state="new">Update the <ph id="ph1">`FinishedLaunching`</ph> method of the <ph id="ph2">`AppDelegate`</ph> class to initialize the authenticator before loading the app.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Rebuild the app and run it.</source>
          <target state="new">Rebuild the app and run it.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Log in with the authentication provider you chose and verify you are able to access the table as an authenticated user.</source>
          <target state="new">Log in with the authentication provider you chose and verify you are able to access the table as an authenticated user.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Add authentication to the Windows app</source>
          <target state="new">Add authentication to the Windows app</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>In this section you will add authentication for the WinApp project.</source>
          <target state="new">In this section you will add authentication for the WinApp project.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>If you are not working with Windows devices, you can skip this section.</source>
          <target state="new">If you are not working with Windows devices, you can skip this section.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>In Visual Studio right click the <bpt id="p1">**</bpt>WinApp<ept id="p1">**</ept> project and click <bpt id="p2">**</bpt>Set as StartUp Project<ept id="p2">**</ept>.</source>
          <target state="new">In Visual Studio right click the <bpt id="p1">**</bpt>WinApp<ept id="p1">**</ept> project and click <bpt id="p2">**</bpt>Set as StartUp Project<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Go ahead and run the project in the debugger to verify that an unhandled exception with a status code of 401 (Unauthorized) is raised after the app starts.</source>
          <target state="new">Go ahead and run the project in the debugger to verify that an unhandled exception with a status code of 401 (Unauthorized) is raised after the app starts.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>This will happen because you restricted access on the backend to authorized users only.</source>
          <target state="new">This will happen because you restricted access on the backend to authorized users only.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Next, open MainPage.xaml.cs in the WinApp project and add the following <ph id="ph1">`using`</ph> statement.</source>
          <target state="new">Next, open MainPage.xaml.cs in the WinApp project and add the following <ph id="ph1">`using`</ph> statement.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Replace &lt;<bpt id="p1">*</bpt>Your portable class library namespace<ept id="p1">*</ept>&gt; with the namespace for your portable class library.</source>
          <target state="new">Replace &lt;<bpt id="p1">*</bpt>Your portable class library namespace<ept id="p1">*</ept>&gt; with the namespace for your portable class library.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Update the <ph id="ph1">`MainPage`</ph> class to implement the <ph id="ph2">`IAuthenticate`</ph> interface.</source>
          <target state="new">Update the <ph id="ph1">`MainPage`</ph> class to implement the <ph id="ph2">`IAuthenticate`</ph> interface.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Update the <ph id="ph1">`MainPage`</ph> class by adding a <ph id="ph2">`MobileServiceUser`</ph> field and the <ph id="ph3">`Authenticate`</ph> method shown below to support the <ph id="ph4">`IAuthenticate`</ph> interface.</source>
          <target state="new">Update the <ph id="ph1">`MainPage`</ph> class by adding a <ph id="ph2">`MobileServiceUser`</ph> field and the <ph id="ph3">`Authenticate`</ph> method shown below to support the <ph id="ph4">`IAuthenticate`</ph> interface.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>If you want to use a different <ph id="ph1">`MobileServiceAuthenticationProvider`</ph> instead of Facebook, make that change as well.</source>
          <target state="new">If you want to use a different <ph id="ph1">`MobileServiceAuthenticationProvider`</ph> instead of Facebook, make that change as well.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Update the constructor for the <ph id="ph1">`MainPage`</ph> class to initialize the authenticator before loading the app.</source>
          <target state="new">Update the constructor for the <ph id="ph1">`MainPage`</ph> class to initialize the authenticator before loading the app.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Replace &lt;<bpt id="p1">*</bpt>Your portable class library namespace<ept id="p1">*</ept>&gt; with the namespace for your portable class library.</source>
          <target state="new">Replace &lt;<bpt id="p1">*</bpt>Your portable class library namespace<ept id="p1">*</ept>&gt; with the namespace for your portable class library.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Rebuild the app and run it.</source>
          <target state="new">Rebuild the app and run it.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Log in with the authentication provider you chose and verify you are able to access the table as an authenticated user.</source>
          <target state="new">Log in with the authentication provider you chose and verify you are able to access the table as an authenticated user.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Add authentication to the Windows Phone 8.1 app</source>
          <target state="new">Add authentication to the Windows Phone 8.1 app</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>In this section you will add authentication for the WinPhone81 project.</source>
          <target state="new">In this section you will add authentication for the WinPhone81 project.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>If you are not working with Windows Phone 8.1 devices, you can skip this section.</source>
          <target state="new">If you are not working with Windows Phone 8.1 devices, you can skip this section.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>In Visual Studio right click the <bpt id="p1">**</bpt>WinPhone81<ept id="p1">**</ept> project and click <bpt id="p2">**</bpt>Set as StartUp Project<ept id="p2">**</ept>.</source>
          <target state="new">In Visual Studio right click the <bpt id="p1">**</bpt>WinPhone81<ept id="p1">**</ept> project and click <bpt id="p2">**</bpt>Set as StartUp Project<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Go ahead and run the project in the debugger to verify that an unhandled exception with a status code of 401 (Unauthorized) is raised after the app starts.</source>
          <target state="new">Go ahead and run the project in the debugger to verify that an unhandled exception with a status code of 401 (Unauthorized) is raised after the app starts.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>This will happen because you restricted access on the backend to authorized users only.</source>
          <target state="new">This will happen because you restricted access on the backend to authorized users only.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Next, open MainPage.xaml.cs in the WinPhone81 project and add the following <ph id="ph1">`using`</ph> statement.</source>
          <target state="new">Next, open MainPage.xaml.cs in the WinPhone81 project and add the following <ph id="ph1">`using`</ph> statement.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Replace &lt;<bpt id="p1">*</bpt>Your portable class library namespace<ept id="p1">*</ept>&gt; with the namespace for your portable class library.</source>
          <target state="new">Replace &lt;<bpt id="p1">*</bpt>Your portable class library namespace<ept id="p1">*</ept>&gt; with the namespace for your portable class library.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Update the <ph id="ph1">`MainPage`</ph> class to implement the <ph id="ph2">`IAuthenticate`</ph> interface.</source>
          <target state="new">Update the <ph id="ph1">`MainPage`</ph> class to implement the <ph id="ph2">`IAuthenticate`</ph> interface.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Update the <ph id="ph1">`MainPage`</ph> class by adding a <ph id="ph2">`MobileServiceUser`</ph> field and the <ph id="ph3">`Authenticate`</ph> method shown below to support the <ph id="ph4">`IAuthenticate`</ph> interface.</source>
          <target state="new">Update the <ph id="ph1">`MainPage`</ph> class by adding a <ph id="ph2">`MobileServiceUser`</ph> field and the <ph id="ph3">`Authenticate`</ph> method shown below to support the <ph id="ph4">`IAuthenticate`</ph> interface.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>If you want to use a different <ph id="ph1">`MobileServiceAuthenticationProvider`</ph> instead of Facebook, make that change as well.</source>
          <target state="new">If you want to use a different <ph id="ph1">`MobileServiceAuthenticationProvider`</ph> instead of Facebook, make that change as well.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Update the constructor for the <ph id="ph1">`MainPage`</ph> class to initialize the authenticator before loading the app.</source>
          <target state="new">Update the constructor for the <ph id="ph1">`MainPage`</ph> class to initialize the authenticator before loading the app.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Replace &lt;<bpt id="p1">*</bpt>Your portable class library namespace<ept id="p1">*</ept>&gt; with the namespace for your portable class library.</source>
          <target state="new">Replace &lt;<bpt id="p1">*</bpt>Your portable class library namespace<ept id="p1">*</ept>&gt; with the namespace for your portable class library.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>On Windows Phone you need to additionally complete the login.</source>
          <target state="new">On Windows Phone you need to additionally complete the login.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Open App.xaml.cs and add the following <ph id="ph1">`using`</ph> statement and code to the <ph id="ph2">`OnActivated`</ph> handler in the <ph id="ph3">`App`</ph> class.</source>
          <target state="new">Open App.xaml.cs and add the following <ph id="ph1">`using`</ph> statement and code to the <ph id="ph2">`OnActivated`</ph> handler in the <ph id="ph3">`App`</ph> class.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Rebuild the app and run it.</source>
          <target state="new">Rebuild the app and run it.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Log in with the authentication provider you chose and verify you are able to access the table as an authenticated user.</source>
          <target state="new">Log in with the authentication provider you chose and verify you are able to access the table as an authenticated user.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>