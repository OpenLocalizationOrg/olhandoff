{
  "nodes": [
    {
      "pos": [
        1,
        17
      ],
      "content": "<bpt id=\"p1\">**</bpt>Objective-C<ept id=\"p1\">**</ept>:"
    },
    {
      "pos": [
        22,
        89
      ],
      "content": "In <bpt id=\"p1\">**</bpt>QSAppDelegate.m<ept id=\"p1\">**</ept>, import the iOS SDK and <bpt id=\"p2\">**</bpt>QSTodoService.h<ept id=\"p2\">**</ept>:"
    },
    {
      "pos": [
        199,
        312
      ],
      "content": "In <ph id=\"ph1\">`didFinishLaunchingWithOptions`</ph> in <bpt id=\"p1\">**</bpt>QSAppDelegate.m<ept id=\"p1\">**</ept>, insert the following lines right before <ph id=\"ph2\">`return YES;`</ph>:"
    },
    {
      "content": "In <bpt id=\"p1\">**</bpt>QSAppDelegate.m<ept id=\"p1\">**</ept>, add the following handler methods.",
      "pos": [
        702,
        760
      ]
    },
    {
      "content": "Your app is now updated to support push notifications.",
      "pos": [
        761,
        815
      ]
    },
    {
      "pos": [
        3945,
        3955
      ],
      "content": "<bpt id=\"p1\">**</bpt>Swift<ept id=\"p1\">**</ept>:"
    },
    {
      "content": "Add file <bpt id=\"p1\">**</bpt>ClientManager.swift<ept id=\"p1\">**</ept> with the following contents.",
      "pos": [
        3960,
        4021
      ]
    },
    {
      "content": "Replace <bpt id=\"p1\">_</bpt>%AppUrl%<ept id=\"p1\">_</ept> with the URL of the Azure Mobile App backend.",
      "pos": [
        4022,
        4086
      ]
    },
    {
      "pos": [
        4221,
        4335
      ],
      "content": "In <bpt id=\"p1\">**</bpt>ToDoTableViewController.swift<ept id=\"p1\">**</ept>, replace the <ph id=\"ph1\">`let client`</ph> line that initializes an <ph id=\"ph2\">`MSClient`</ph> with this line:"
    },
    {
      "pos": [
        4390,
        4466
      ],
      "content": "In <bpt id=\"p1\">**</bpt>AppDelegate.swift<ept id=\"p1\">**</ept>, replace the body of <ph id=\"ph1\">`func application`</ph> as follows:"
    },
    {
      "content": "In <bpt id=\"p1\">**</bpt>AppDelegate.swift<ept id=\"p1\">**</ept>, add the following handler methods.",
      "pos": [
        4875,
        4935
      ]
    },
    {
      "content": "Your app is now updated to support push notifications.",
      "pos": [
        4936,
        4990
      ]
    }
  ],
  "content": "\n**Objective-C**:\n\n1. In **QSAppDelegate.m**, import the iOS SDK and **QSTodoService.h**:\n        \n        #import <MicrosoftAzureMobile/MicrosoftAzureMobile.h>\n        #import \"QSTodoService.h\"\n\n2. In `didFinishLaunchingWithOptions` in **QSAppDelegate.m**, insert the following lines right before `return YES;`:\n\n        UIUserNotificationSettings* notificationSettings = [UIUserNotificationSettings settingsForTypes:UIUserNotificationTypeAlert | UIUserNotificationTypeBadge | UIUserNotificationTypeSound categories:nil];\n        [[UIApplication sharedApplication] registerUserNotificationSettings:notificationSettings];\n        [[UIApplication sharedApplication] registerForRemoteNotifications];\n\n3. In **QSAppDelegate.m**, add the following handler methods. Your app is now updated to support push notifications. \n\n        // Registration with APNs is successful\n        - (void)application:(UIApplication *)application\n        didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)deviceToken {\n        \n            QSTodoService *todoService = [QSTodoService defaultService];\n            MSClient *client = todoService.client;\n        \n            [client.push registerDeviceToken:deviceToken completion:^(NSError *error) {\n                if (error != nil) {\n                    NSLog(@\"Error registering for notifications: %@\", error);\n                }\n            }];\n        }\n        \n        // Handle any failure to register\n        - (void)application:(UIApplication *)application didFailToRegisterForRemoteNotificationsWithError:\n        (NSError *)error {\n            NSLog(@\"Failed to register for remote notifications: %@\", error);\n        }\n        \n        // Use userInfo in the payload to display an alert.\n        - (void)application:(UIApplication *)application\n              didReceiveRemoteNotification:(NSDictionary *)userInfo {\n            NSLog(@\"%@\", userInfo);\n        \n            NSDictionary *apsPayload = userInfo[@\"aps\"];\n            NSString *alertString = apsPayload[@\"alert\"];\n        \n            // Create alert with notification content.\n            UIAlertController *alertController = [UIAlertController\n                                          alertControllerWithTitle:@\"Notification\"\n                                          message:alertString\n                                          preferredStyle:UIAlertControllerStyleAlert];\n        \n            UIAlertAction *cancelAction = [UIAlertAction\n                                           actionWithTitle:NSLocalizedString(@\"Cancel\", @\"Cancel\")\n                                           style:UIAlertActionStyleCancel\n                                           handler:^(UIAlertAction *action)\n                                           {\n                                               NSLog(@\"Cancel\");\n                                           }];\n            \n            UIAlertAction *okAction = [UIAlertAction\n                                       actionWithTitle:NSLocalizedString(@\"OK\", @\"OK\")\n                                       style:UIAlertActionStyleDefault\n                                       handler:^(UIAlertAction *action)\n                                       {\n                                           NSLog(@\"OK\");\n                                       }];\n            \n            [alertController addAction:cancelAction];\n            [alertController addAction:okAction];\n            \n            // Get current view controller.\n            UIViewController *currentViewController = [[[[UIApplication sharedApplication] delegate] window] rootViewController];\n            while (currentViewController.presentedViewController)\n            {\n                currentViewController = currentViewController.presentedViewController;\n            }\n            \n            // Display alert.\n            [currentViewController presentViewController:alertController animated:YES completion:nil];\n        \n        }\n\n**Swift**:\n\n1. Add file **ClientManager.swift** with the following contents. Replace _%AppUrl%_ with the URL of the Azure Mobile App backend.\n        \n        class ClientManager {\n            static let sharedClient = MSClient(applicationURLString: \"%AppUrl%\")\n        }\n\n2. In **ToDoTableViewController.swift**, replace the `let client` line that initializes an `MSClient` with this line:\n\n        let client = ClientManager.sharedClient\n \n3. In **AppDelegate.swift**, replace the body of `func application` as follows:\n\n        func application(application: UIApplication,\n          didFinishLaunchingWithOptions launchOptions: [NSObject: AnyObject]?) -> Bool {\n           application.registerUserNotificationSettings(\n               UIUserNotificationSettings(forTypes: [.Alert, .Badge, .Sound],\n                   categories: nil))\n           application.registerForRemoteNotifications()\n           return true\n        }\n\n2. In **AppDelegate.swift**, add the following handler methods. Your app is now updated to support push notifications.\n   \n        func application(application: UIApplication,\n           didRegisterForRemoteNotificationsWithDeviceToken deviceToken: NSData) {\n            ClientManager.sharedClient.push?.registerDeviceToken(deviceToken) { error in\n                print(\"Error registering for notifications: \", error?.description)\n            }\n        }\n        \n        func application(application: UIApplication,\n           didFailToRegisterForRemoteNotificationsWithError error: NSError) {\n            print(\"Failed to register for remote notifications: \", error.description)\n        }\n        \n        func application(application: UIApplication,\n           didReceiveRemoteNotification userInfo: [NSObject: AnyObject]) {\n            \n            print(userInfo)\n            \n            let apsNotification = userInfo[\"aps\"] as? NSDictionary\n            let apsString       = apsNotification?[\"alert\"] as? String\n            \n            let alert = UIAlertController(title: \"Alert\", message: apsString, preferredStyle: .Alert)\n            let okAction = UIAlertAction(title: \"OK\", style: .Default) { _ in\n                print(\"OK\")\n            }\n            let cancelAction = UIAlertAction(title: \"Cancel\", style: .Default) { _ in\n                print(\"Cancel\")\n            }\n            \n            alert.addAction(okAction)\n            alert.addAction(cancelAction)\n            \n            var currentViewController = self.window?.rootViewController\n            while currentViewController?.presentedViewController != nil {\n                currentViewController = currentViewController?.presentedViewController\n            }\n            \n            currentViewController?.presentViewController(alert, animated: true) {}\n            \n        }\n            \n"
}