<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="de-de" original="foo.file" tool-id="85b160b4-411a-4134-8a8b-c35e25adcdb6" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="85b160b4-411a-4134-8a8b-c35e25adcdb6" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
      <olfilehash xmlns="">2fe214e2a741bb53de8e5d3ff3d2129f195a3208</olfilehash>
    </header>
    <body>
      <group id="bcc5d9c9-d2b3-4be0-b155-e3cf01b92a74">
        <trans-unit id="237bc7d7-9d7a-4369-978e-12df5d25235a" xml:space="preserve">
          <source>PowerShell Snippets</source>
          <target state="new">PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="22fbd42a-0668-4ab4-a521-25f75c478582" xml:space="preserve">
          <source>PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</source>
          <target state="new">PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</target>
        </trans-unit>
        <trans-unit id="41a8c4bb-8411-4b40-9b6f-8ef59a5c3ce1" xml:space="preserve">
          <source>All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</source>
          <target state="new">All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</target>
        </trans-unit>
        <trans-unit id="1e2ca267-78b2-4875-86e4-f3d7e2845d91" xml:space="preserve">
          <source>If you aren't sure if you have the right permissions, type <bpt id="d82d2f52-662e-4b4e-989c-8b5074b9622c">&lt;code&gt;</bpt>Get-VM<ept id="d82d2f52-662e-4b4e-989c-8b5074b9622c">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</source>
          <target state="new">If you aren't sure if you have the right permissions, type <bpt id="d82d2f52-662e-4b4e-989c-8b5074b9622c">&lt;code&gt;</bpt>Get-VM<ept id="d82d2f52-662e-4b4e-989c-8b5074b9622c">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</target>
        </trans-unit>
        <trans-unit id="c893a304-0895-4c84-b94f-8d0b40a2ffad" xml:space="preserve">
          <source>PowerShell Direct tools</source>
          <target state="new">PowerShell Direct tools</target>
        </trans-unit>
        <trans-unit id="7d2db646-6454-4233-800d-ad3c49e92585" xml:space="preserve">
          <source>All of the scripts and snippets in this section will rely on the following basics.</source>
          <target state="new">All of the scripts and snippets in this section will rely on the following basics.</target>
        </trans-unit>
        <trans-unit id="5e49ee5c-c19f-48fc-9655-9900c0c8cf6b" xml:space="preserve">
          <source><bpt id="2bf64158-6888-4b6e-b0b0-8a779a1ee379">&lt;strong&gt;</bpt>Requirements<ept id="2bf64158-6888-4b6e-b0b0-8a779a1ee379">&lt;/strong&gt;</ept> :</source>
          <target state="new"><bpt id="2bf64158-6888-4b6e-b0b0-8a779a1ee379">&lt;strong&gt;</bpt>Requirements<ept id="2bf64158-6888-4b6e-b0b0-8a779a1ee379">&lt;/strong&gt;</ept> :</target>
        </trans-unit>
        <trans-unit id="afed1414-3c10-4d53-9df7-b1a5973ba674" xml:space="preserve">
          <source>PowerShell Direct.</source>
          <target state="new">PowerShell Direct.</target>
        </trans-unit>
        <trans-unit id="bf95eac8-3e02-4e72-90bb-d97c8c86f649" xml:space="preserve">
          <source>Windows 10 guest and host OS.</source>
          <target state="new">Windows 10 guest and host OS.</target>
        </trans-unit>
        <trans-unit id="808363ce-ecb5-437b-858e-be29b9a2117f" xml:space="preserve">
          <source><bpt id="8aab7b62-0a7b-4c44-b123-11cdbbcf1aff">&lt;strong&gt;</bpt>Common Variables<ept id="8aab7b62-0a7b-4c44-b123-11cdbbcf1aff">&lt;/strong&gt;</ept> :  
<bpt id="3699defb-3e21-4bc3-9396-cf64bb9c95d3">&lt;code&gt;</bpt>$VMName<ept id="3699defb-3e21-4bc3-9396-cf64bb9c95d3">&lt;/code&gt;</ept> -- this is a string with the VMName.</source>
          <target state="new"><bpt id="8aab7b62-0a7b-4c44-b123-11cdbbcf1aff">&lt;strong&gt;</bpt>Common Variables<ept id="8aab7b62-0a7b-4c44-b123-11cdbbcf1aff">&lt;/strong&gt;</ept> :  
<bpt id="3699defb-3e21-4bc3-9396-cf64bb9c95d3">&lt;code&gt;</bpt>$VMName<ept id="3699defb-3e21-4bc3-9396-cf64bb9c95d3">&lt;/code&gt;</ept> -- this is a string with the VMName.</target>
        </trans-unit>
        <trans-unit id="f848f34f-d792-4526-9c80-4bd5388d5f73" xml:space="preserve">
          <source>See a list of available VMs with <bpt id="a4558955-d00e-4ce4-9b5e-6f0f3a24b267">&lt;code&gt;</bpt>Get-VM<ept id="a4558955-d00e-4ce4-9b5e-6f0f3a24b267">&lt;/code&gt;</ept>  
<bpt id="f9f4af73-943f-4157-a847-4a675c76419b">&lt;code&gt;</bpt>$cred<ept id="f9f4af73-943f-4157-a847-4a675c76419b">&lt;/code&gt;</ept> -- Credential for the guest OS.</source>
          <target state="new">See a list of available VMs with <bpt id="a4558955-d00e-4ce4-9b5e-6f0f3a24b267">&lt;code&gt;</bpt>Get-VM<ept id="a4558955-d00e-4ce4-9b5e-6f0f3a24b267">&lt;/code&gt;</ept>  
<bpt id="f9f4af73-943f-4157-a847-4a675c76419b">&lt;code&gt;</bpt>$cred<ept id="f9f4af73-943f-4157-a847-4a675c76419b">&lt;/code&gt;</ept> -- Credential for the guest OS.</target>
        </trans-unit>
        <trans-unit id="bf4efd50-a906-46fd-bcda-196291dd1995" xml:space="preserve">
          <source>Can be populated using <bpt id="2473b094-c9c5-4717-abf2-9eeeb695645e">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="2473b094-c9c5-4717-abf2-9eeeb695645e">&lt;/code&gt;</ept></source>
          <target state="new">Can be populated using <bpt id="2473b094-c9c5-4717-abf2-9eeeb695645e">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="2473b094-c9c5-4717-abf2-9eeeb695645e">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="88af487d-1abd-4d04-9b6f-0fbfe4b6ef01" xml:space="preserve">
          <source>Check if the guest has booted</source>
          <target state="new">Check if the guest has booted</target>
        </trans-unit>
        <trans-unit id="14a0941e-77ba-44b7-bfe8-399005fa9358" xml:space="preserve">
          <source>Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</source>
          <target state="new">Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</target>
        </trans-unit>
        <trans-unit id="24489381-aec1-4fb9-b69e-0d60998bf837" xml:space="preserve">
          <source>Use this command to check whether the guest has booted.</source>
          <target state="new">Use this command to check whether the guest has booted.</target>
        </trans-unit>
        <trans-unit id="3b6210dd-95b3-467f-866b-d53cc573ffad" xml:space="preserve">
          <source><bpt id="35200654-c02d-46ad-bba4-98c537ca0978">&lt;strong&gt;</bpt>Outcome<ept id="35200654-c02d-46ad-bba4-98c537ca0978">&lt;/strong&gt;</ept>  
Prints a friendly message declaring the state of the guest OS.</source>
          <target state="new"><bpt id="35200654-c02d-46ad-bba4-98c537ca0978">&lt;strong&gt;</bpt>Outcome<ept id="35200654-c02d-46ad-bba4-98c537ca0978">&lt;/strong&gt;</ept>  
Prints a friendly message declaring the state of the guest OS.</target>
        </trans-unit>
        <trans-unit id="52911e4b-49d8-4408-9026-e54b156be702" xml:space="preserve">
          <source>Script locking until the guest has booted</source>
          <target state="new">Script locking until the guest has booted</target>
        </trans-unit>
        <trans-unit id="7cd54619-497e-45ec-a1bc-301f01dae065" xml:space="preserve">
          <source>The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</source>
          <target state="new">The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</target>
        </trans-unit>
        <trans-unit id="0e6438f7-e414-4b7c-af51-3e1fc10ebfce" xml:space="preserve">
          <source><bpt id="c3773b03-6f54-4eb3-84e1-237d6954e295">&lt;strong&gt;</bpt>Outcome<ept id="c3773b03-6f54-4eb3-84e1-237d6954e295">&lt;/strong&gt;</ept>  
Prints a friendly message and locks until the connection to the VM succeeds.</source>
          <target state="new"><bpt id="c3773b03-6f54-4eb3-84e1-237d6954e295">&lt;strong&gt;</bpt>Outcome<ept id="c3773b03-6f54-4eb3-84e1-237d6954e295">&lt;/strong&gt;</ept>  
Prints a friendly message and locks until the connection to the VM succeeds.</target>
        </trans-unit>
        <trans-unit id="cd573112-5489-4160-878a-cde4547bd5f5" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="3b94eeef-74c2-493a-9e65-eef4072442e1" xml:space="preserve">
          <source>Script locking until the guest has a network</source>
          <target state="new">Script locking until the guest has a network</target>
        </trans-unit>
        <trans-unit id="dabbe2f2-d8d1-43d0-9165-9005e239963b" xml:space="preserve">
          <source>With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</source>
          <target state="new">With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</target>
        </trans-unit>
        <trans-unit id="2d73efcd-5580-4e53-8aba-e7540c5ef74c" xml:space="preserve">
          <source><bpt id="1f850afd-605c-48bb-824a-4b743111c3ee">&lt;em&gt;</bpt>* Outcome *<ept id="1f850afd-605c-48bb-824a-4b743111c3ee">&lt;/em&gt;</ept>
Locks until a DHCP lease is recieved.</source>
          <target state="new"><bpt id="1f850afd-605c-48bb-824a-4b743111c3ee">&lt;em&gt;</bpt>* Outcome *<ept id="1f850afd-605c-48bb-824a-4b743111c3ee">&lt;/em&gt;</ept>
Locks until a DHCP lease is recieved.</target>
        </trans-unit>
        <trans-unit id="953a1f2f-403e-40a8-9547-443ff832aae3" xml:space="preserve">
          <source>Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</source>
          <target state="new">Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</target>
        </trans-unit>
        <trans-unit id="c703210a-43b1-439d-b6b3-3d6f0c05f6b8" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="d1271dac-2db9-4a1c-bd77-eef7a2563fa2" xml:space="preserve">
          <source>Managing credentials with PowerShell</source>
          <target state="new">Managing credentials with PowerShell</target>
        </trans-unit>
        <trans-unit id="6a5c2712-e7ff-48c8-aa34-b836e86754bd" xml:space="preserve">
          <source>Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</source>
          <target state="new">Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</target>
        </trans-unit>
        <trans-unit id="09d82b2c-f3e3-4daf-be4f-b951d82d7a5d" xml:space="preserve">
          <source>There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</source>
          <target state="new">There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</target>
        </trans-unit>
        <trans-unit id="d73d634e-47fd-4200-a4d2-1829fe857c4a" xml:space="preserve">
          <source>The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</source>
          <target state="new">The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</target>
        </trans-unit>
        <trans-unit id="ec0db018-f346-4e1d-9c1e-614964ecfb75" xml:space="preserve">
          <source>This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</source>
          <target state="new">This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</target>
        </trans-unit>
        <trans-unit id="ccda101a-559a-46fb-81a1-38a5bbc9e124" xml:space="preserve">
          <source>In this scenario you can just run <bpt id="25c792d7-7dc6-458e-8a39-109bbddf4e85">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="25c792d7-7dc6-458e-8a39-109bbddf4e85">&lt;/code&gt;</ept>.</source>
          <target state="new">In this scenario you can just run <bpt id="25c792d7-7dc6-458e-8a39-109bbddf4e85">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="25c792d7-7dc6-458e-8a39-109bbddf4e85">&lt;/code&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="d9e6f8bc-f81c-416d-8edf-74400313d8eb" xml:space="preserve">
          <source>Let PowerShell prompt you for credentials  
If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</source>
          <target state="new">Let PowerShell prompt you for credentials  
If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</target>
        </trans-unit>
        <trans-unit id="173ccb32-a515-4235-b14c-3027058786b7" xml:space="preserve">
          <source>Store credentials in a variable for reuse.</source>
          <target state="new">Store credentials in a variable for reuse.</target>
        </trans-unit>
        <trans-unit id="9f45887a-f2f2-43e5-b21b-929ce4d0bae0" xml:space="preserve">
          <source>Running a simple command like this:</source>
          <target state="new">Running a simple command like this:</target>
        </trans-unit>
        <trans-unit id="258def0e-8206-4a1e-b81b-43406f6a30b4" xml:space="preserve">
          <source>  And then running something like this:</source>
          <target state="new">  And then running something like this:</target>
        </trans-unit>
        <trans-unit id="25de4805-380a-47db-be5a-d589034f1786" xml:space="preserve">
          <source>  Will mean that you only get prompted once per script/PowerShell session for your credentials.</source>
          <target state="new">  Will mean that you only get prompted once per script/PowerShell session for your credentials.</target>
        </trans-unit>
        <trans-unit id="ba3f2eb8-2e9a-458e-b346-08c08c6216bf" xml:space="preserve">
          <source>Code your credentials into your scripts.</source>
          <target state="new">Code your credentials into your scripts.</target>
        </trans-unit>
        <trans-unit id="f012e6c0-dd4f-4958-957b-b86d4b7928f4" xml:space="preserve">
          <source><bpt id="3705ec20-ab5d-411d-a890-f6eb64a9997f">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="3705ec20-ab5d-411d-a890-f6eb64a9997f">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="3705ec20-ab5d-411d-a890-f6eb64a9997f">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="3705ec20-ab5d-411d-a890-f6eb64a9997f">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="db7aa2d4-e686-48d9-9746-555227133a54" xml:space="preserve">
          <source>Warning:  _Do not do this in a production system.</source>
          <target state="new">Warning:  _Do not do this in a production system.</target>
        </trans-unit>
        <trans-unit id="917bc5ec-7050-4670-8273-323ffd7dc6fe" xml:space="preserve">
          <source>Do not do this with real passwords._</source>
          <target state="new">Do not do this with real passwords._</target>
        </trans-unit>
        <trans-unit id="9b5533a1-1114-4317-8749-8baa8135666d" xml:space="preserve">
          <source>You can hand craft a PSCredential object with some code like this:</source>
          <target state="new">You can hand craft a PSCredential object with some code like this:</target>
        </trans-unit>
        <trans-unit id="72fccd69-fa1b-40c6-ac7d-c3597591d716" xml:space="preserve">
          <source>Grossly insecure - but useful for testing.</source>
          <target state="new">Grossly insecure - but useful for testing.</target>
        </trans-unit>
        <trans-unit id="5f471192-05bd-4737-a505-9ce188ed05d7" xml:space="preserve">
          <source>Now you get no prompts at all in this session.</source>
          <target state="new">Now you get no prompts at all in this session.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>