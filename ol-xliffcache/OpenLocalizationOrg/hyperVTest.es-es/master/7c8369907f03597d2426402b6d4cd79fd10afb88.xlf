<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="es-es" original="foo.file" tool-id="4b4dd7d8-793a-4b72-a36b-5f387f08db64" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="4b4dd7d8-793a-4b72-a36b-5f387f08db64" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
      <olfilehash xmlns="">7c8369907f03597d2426402b6d4cd79fd10afb88</olfilehash>
    </header>
    <body>
      <group id="3c9b2936-fe4b-4aab-aa62-5551e200a0ed">
        <trans-unit id="6c34c90f-45a0-4128-b057-fb785eff9460" xml:space="preserve">
          <source>ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9</source>
          <target state="new">ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9</target>
        </trans-unit>
        <trans-unit id="9fa512ca-7942-4a36-933d-dde5f0989400" xml:space="preserve">
          <source>title: PowerShell Snippets</source>
          <target state="new">title: PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="608c93a0-ad43-489f-9d0b-4c37d78001e2" xml:space="preserve">
          <source>PowerShell Snippets</source>
          <target state="new">PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="6f4d566a-74f5-4469-8ce1-0aa85972f3b7" xml:space="preserve">
          <source>12-Nov update.Adding this sentence to validate the bug 451132 result.</source>
          <target state="new">12-Nov update.Adding this sentence to validate the bug 451132 result.</target>
        </trans-unit>
        <trans-unit id="9b692810-bf0e-41ea-b8eb-836d153fb2c8" xml:space="preserve">
          <source>PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</source>
          <target state="new">PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</target>
        </trans-unit>
        <trans-unit id="7ef7911f-b332-4358-8a94-1ae76209134e" xml:space="preserve">
          <source>All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</source>
          <target state="new">All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</target>
        </trans-unit>
        <trans-unit id="e8e61d61-ca7b-44d6-8cc9-080bd2a3f71d" xml:space="preserve">
          <source>If you aren't sure if you have the right permissions, type <bpt id="00b899c0-12f8-4181-bdd2-21eb0a4fcadc">&lt;code&gt;</bpt>Get-VM<ept id="00b899c0-12f8-4181-bdd2-21eb0a4fcadc">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</source>
          <target state="new">If you aren't sure if you have the right permissions, type <bpt id="00b899c0-12f8-4181-bdd2-21eb0a4fcadc">&lt;code&gt;</bpt>Get-VM<ept id="00b899c0-12f8-4181-bdd2-21eb0a4fcadc">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</target>
        </trans-unit>
        <trans-unit id="2019dfde-90b8-4fb0-aa59-ce90e7f4a4be" xml:space="preserve">
          <source>PowerShell Direct tools</source>
          <target state="new">PowerShell Direct tools</target>
        </trans-unit>
        <trans-unit id="7745a9d2-3d2c-4f9d-900e-79bcec906f72" xml:space="preserve">
          <source>All of the scripts and snippets in this section will rely on the following basics.</source>
          <target state="new">All of the scripts and snippets in this section will rely on the following basics.</target>
        </trans-unit>
        <trans-unit id="e354b13f-4dc4-4d3d-812d-64d57764cf69" xml:space="preserve">
          <source><bpt id="beacdd42-80bd-4c97-9793-647a8f5459dd">&lt;strong&gt;</bpt>Requirements<ept id="beacdd42-80bd-4c97-9793-647a8f5459dd">&lt;/strong&gt;</ept> :</source>
          <target state="new"><bpt id="beacdd42-80bd-4c97-9793-647a8f5459dd">&lt;strong&gt;</bpt>Requirements<ept id="beacdd42-80bd-4c97-9793-647a8f5459dd">&lt;/strong&gt;</ept> :</target>
        </trans-unit>
        <trans-unit id="b962b711-ed5c-410b-8cda-29b7ddb80fd9" xml:space="preserve">
          <source>PowerShell Direct.</source>
          <target state="new">PowerShell Direct.</target>
        </trans-unit>
        <trans-unit id="e4613543-3248-4a70-8d77-15f7f85ab83f" xml:space="preserve">
          <source>Windows 10 guest and host OS.</source>
          <target state="new">Windows 10 guest and host OS.</target>
        </trans-unit>
        <trans-unit id="182e6e9f-0336-49c3-83af-508a0085956e" xml:space="preserve">
          <source><bpt id="6744a2cb-5395-4a2a-9a3a-2d9ccffc8705">&lt;strong&gt;</bpt>Common Variables<ept id="6744a2cb-5395-4a2a-9a3a-2d9ccffc8705">&lt;/strong&gt;</ept> :</source>
          <target state="new"><bpt id="6744a2cb-5395-4a2a-9a3a-2d9ccffc8705">&lt;strong&gt;</bpt>Common Variables<ept id="6744a2cb-5395-4a2a-9a3a-2d9ccffc8705">&lt;/strong&gt;</ept> :</target>
        </trans-unit>
        <trans-unit id="de177945-eead-412f-86c8-1b8f43f5037e" xml:space="preserve">
          <source><bpt id="5848d334-d826-4f79-bee2-51f25784dc36">&lt;code&gt;</bpt>$VMName<ept id="5848d334-d826-4f79-bee2-51f25784dc36">&lt;/code&gt;</ept> -- this is a string with the VMName.</source>
          <target state="new"><bpt id="5848d334-d826-4f79-bee2-51f25784dc36">&lt;code&gt;</bpt>$VMName<ept id="5848d334-d826-4f79-bee2-51f25784dc36">&lt;/code&gt;</ept> -- this is a string with the VMName.</target>
        </trans-unit>
        <trans-unit id="0bb6c02b-10c2-42d0-9e38-e2e585f06297" xml:space="preserve">
          <source>See a list of available VMs with <bpt id="8c7aca27-38f4-40ff-b126-3edca5a52a87">&lt;code&gt;</bpt>Get-VM<ept id="8c7aca27-38f4-40ff-b126-3edca5a52a87">&lt;/code&gt;</ept></source>
          <target state="new">See a list of available VMs with <bpt id="8c7aca27-38f4-40ff-b126-3edca5a52a87">&lt;code&gt;</bpt>Get-VM<ept id="8c7aca27-38f4-40ff-b126-3edca5a52a87">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="650b0ae9-758b-4b1a-89c0-c51152b062bf" xml:space="preserve">
          <source><bpt id="de8e3f11-590b-40e5-9f21-44178990a1df">&lt;code&gt;</bpt>$cred<ept id="de8e3f11-590b-40e5-9f21-44178990a1df">&lt;/code&gt;</ept> -- Credential for the guest OS.</source>
          <target state="new"><bpt id="de8e3f11-590b-40e5-9f21-44178990a1df">&lt;code&gt;</bpt>$cred<ept id="de8e3f11-590b-40e5-9f21-44178990a1df">&lt;/code&gt;</ept> -- Credential for the guest OS.</target>
        </trans-unit>
        <trans-unit id="50f3a637-c443-4e94-a2f6-bf536ba8545a" xml:space="preserve">
          <source>Can be populated using <bpt id="9b757268-9dd5-4255-8843-aae37adf5600">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="9b757268-9dd5-4255-8843-aae37adf5600">&lt;/code&gt;</ept></source>
          <target state="new">Can be populated using <bpt id="9b757268-9dd5-4255-8843-aae37adf5600">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="9b757268-9dd5-4255-8843-aae37adf5600">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="0ca1a3b1-0449-45e8-bbd6-8ccd78abb69e" xml:space="preserve">
          <source>Check if the guest has booted</source>
          <target state="new">Check if the guest has booted</target>
        </trans-unit>
        <trans-unit id="5d13ae90-6125-45e8-b59d-7673cad5f6d3" xml:space="preserve">
          <source>Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</source>
          <target state="new">Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</target>
        </trans-unit>
        <trans-unit id="65397b78-ad64-48f2-ad5b-247231ec9689" xml:space="preserve">
          <source>Use this command to check whether the guest has booted.</source>
          <target state="new">Use this command to check whether the guest has booted.</target>
        </trans-unit>
        <trans-unit id="3c4a04c0-a3bf-4d02-84fb-b2b3c5d3fdf7" xml:space="preserve">
          <source><bpt id="8eb8f8f0-3296-4659-b611-89b935bb3c02">&lt;strong&gt;</bpt>Outcome<ept id="8eb8f8f0-3296-4659-b611-89b935bb3c02">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="8eb8f8f0-3296-4659-b611-89b935bb3c02">&lt;strong&gt;</bpt>Outcome<ept id="8eb8f8f0-3296-4659-b611-89b935bb3c02">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="b07cd1f5-a275-470e-94ff-83cb5bd9fbba" xml:space="preserve">
          <source>Prints a friendly message declaring the state of the guest OS.</source>
          <target state="new">Prints a friendly message declaring the state of the guest OS.</target>
        </trans-unit>
        <trans-unit id="9139c4ab-40e1-4017-8494-fbdb8967fbe9" xml:space="preserve">
          <source>Script locking until the guest has booted</source>
          <target state="new">Script locking until the guest has booted</target>
        </trans-unit>
        <trans-unit id="41c7ffa9-16c6-40ab-a1fd-9f177d027fca" xml:space="preserve">
          <source>The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</source>
          <target state="new">The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</target>
        </trans-unit>
        <trans-unit id="8231bbeb-89ad-4e22-b745-a803e0d75282" xml:space="preserve">
          <source><bpt id="42a43e3e-9c3c-4929-8a04-d82a28882a18">&lt;strong&gt;</bpt>Outcome<ept id="42a43e3e-9c3c-4929-8a04-d82a28882a18">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="42a43e3e-9c3c-4929-8a04-d82a28882a18">&lt;strong&gt;</bpt>Outcome<ept id="42a43e3e-9c3c-4929-8a04-d82a28882a18">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="eac6746e-a4f9-4f54-91fe-1ac08e1060ce" xml:space="preserve">
          <source>Prints a friendly message and locks until the connection to the VM succeeds.</source>
          <target state="new">Prints a friendly message and locks until the connection to the VM succeeds.</target>
        </trans-unit>
        <trans-unit id="c7c43be3-cdd5-4853-a28d-1c2e1f6655e6" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="be11159a-d4ba-4c93-badb-c84323bd87f2" xml:space="preserve">
          <source>Script locking until the guest has a network</source>
          <target state="new">Script locking until the guest has a network</target>
        </trans-unit>
        <trans-unit id="e15f94c5-0c15-4b1c-a4d6-2b7a363d3d24" xml:space="preserve">
          <source>With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</source>
          <target state="new">With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</target>
        </trans-unit>
        <trans-unit id="4d42d875-f408-4072-8672-4b124480df22" xml:space="preserve">
          <source><bpt id="62a6d264-b0ee-470b-830c-793981b455c9">&lt;em&gt;</bpt>* Outcome *<ept id="62a6d264-b0ee-470b-830c-793981b455c9">&lt;/em&gt;</ept></source>
          <target state="new"><bpt id="62a6d264-b0ee-470b-830c-793981b455c9">&lt;em&gt;</bpt>* Outcome *<ept id="62a6d264-b0ee-470b-830c-793981b455c9">&lt;/em&gt;</ept></target>
        </trans-unit>
        <trans-unit id="2f9da84a-02aa-49f6-8eea-9d390491b9f1" xml:space="preserve">
          <source>Locks until a DHCP lease is recieved.</source>
          <target state="new">Locks until a DHCP lease is recieved.</target>
        </trans-unit>
        <trans-unit id="ac0216b8-3490-4d23-93e2-75bfbbbc51dd" xml:space="preserve">
          <source>Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</source>
          <target state="new">Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</target>
        </trans-unit>
        <trans-unit id="e35b00fa-9622-436c-970f-13d349125e5e" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="620bd457-dc24-43ba-8823-b08e51216158" xml:space="preserve">
          <source>Managing credentials with PowerShell</source>
          <target state="new">Managing credentials with PowerShell</target>
        </trans-unit>
        <trans-unit id="68b94ea9-37e1-439c-b52f-37a1941a36a2" xml:space="preserve">
          <source>Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</source>
          <target state="new">Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</target>
        </trans-unit>
        <trans-unit id="916147ff-9a04-457c-b70d-78e0ecb8335e" xml:space="preserve">
          <source>There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</source>
          <target state="new">There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</target>
        </trans-unit>
        <trans-unit id="8e289ac8-984f-4014-9403-acfebbe8dda2" xml:space="preserve">
          <source>The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</source>
          <target state="new">The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</target>
        </trans-unit>
        <trans-unit id="d42a4699-5395-4cf5-937c-7784e069dbc1" xml:space="preserve">
          <source>This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</source>
          <target state="new">This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</target>
        </trans-unit>
        <trans-unit id="fba481c8-1b44-41be-bcf4-44e0644878a0" xml:space="preserve">
          <source>In this scenario you can just run <bpt id="b0da47a8-b2ce-4237-b830-d928f52f5417">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="b0da47a8-b2ce-4237-b830-d928f52f5417">&lt;/code&gt;</ept>.</source>
          <target state="new">In this scenario you can just run <bpt id="b0da47a8-b2ce-4237-b830-d928f52f5417">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="b0da47a8-b2ce-4237-b830-d928f52f5417">&lt;/code&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="4a84696a-71db-4500-b4fd-ac538f810f0e" xml:space="preserve">
          <source>Let PowerShell prompt you for credentials</source>
          <target state="new">Let PowerShell prompt you for credentials</target>
        </trans-unit>
        <trans-unit id="f71bff6b-aefe-487e-b7a4-c82ffc5e490d" xml:space="preserve">
          <source>If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</source>
          <target state="new">If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</target>
        </trans-unit>
        <trans-unit id="473a849a-7b31-44fb-bb3d-0958e008e9ad" xml:space="preserve">
          <source>Store credentials in a variable for reuse.</source>
          <target state="new">Store credentials in a variable for reuse.</target>
        </trans-unit>
        <trans-unit id="4b9d46bb-994f-489b-909b-98d30351b916" xml:space="preserve">
          <source>Running a simple command like this:</source>
          <target state="new">Running a simple command like this:</target>
        </trans-unit>
        <trans-unit id="a2d09d51-f17d-42bc-abad-0ab25d5a1fc2" xml:space="preserve">
          <source>And then running something like this:</source>
          <target state="new">And then running something like this:</target>
        </trans-unit>
        <trans-unit id="d60cd339-83d8-4992-a268-0f54d14a6805" xml:space="preserve">
          <source>Will mean that you only get prompted once per script/PowerShell session for your credentials.</source>
          <target state="new">Will mean that you only get prompted once per script/PowerShell session for your credentials.</target>
        </trans-unit>
        <trans-unit id="33def549-6aed-4b23-9797-453cd23f2c30" xml:space="preserve">
          <source>Code your credentials into your scripts.</source>
          <target state="new">Code your credentials into your scripts.</target>
        </trans-unit>
        <trans-unit id="2a396393-7bb2-42dc-8654-145489f36c83" xml:space="preserve">
          <source><bpt id="1f044aad-0a76-4cab-869e-d9dc0c69dc89">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="1f044aad-0a76-4cab-869e-d9dc0c69dc89">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="1f044aad-0a76-4cab-869e-d9dc0c69dc89">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="1f044aad-0a76-4cab-869e-d9dc0c69dc89">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="1e4b2843-409f-46f3-ad53-893e45d0bd7b" xml:space="preserve">
          <source>Warning:  _Do not do this in a production system.</source>
          <target state="new">Warning:  _Do not do this in a production system.</target>
        </trans-unit>
        <trans-unit id="864585d9-0722-44d8-9a6f-cfb6ab29fe36" xml:space="preserve">
          <source>Do not do this with real passwords._</source>
          <target state="new">Do not do this with real passwords._</target>
        </trans-unit>
        <trans-unit id="e8242435-66a9-471b-b1ef-992bb03cdf7c" xml:space="preserve">
          <source>You can hand craft a PSCredential object with some code like this:</source>
          <target state="new">You can hand craft a PSCredential object with some code like this:</target>
        </trans-unit>
        <trans-unit id="90043f07-608c-442c-ab3c-3c8a01282024" xml:space="preserve">
          <source>Grossly insecure - but useful for testing.</source>
          <target state="new">Grossly insecure - but useful for testing.</target>
        </trans-unit>
        <trans-unit id="33e441e2-cc66-458e-9a3b-f1ee452a8613" xml:space="preserve">
          <source>Now you get no prompts at all in this session.</source>
          <target state="new">Now you get no prompts at all in this session.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>