{
  "nodes": [
    {
      "content": "Get started with Azure Batch PowerShell | Microsoft Azure",
      "pos": [
        26,
        83
      ]
    },
    {
      "content": "Get a quick introduction to the Azure PowerShell cmdlets you can use to manage the Azure Batch service",
      "pos": [
        101,
        203
      ]
    },
    {
      "content": "Get started with Azure Batch PowerShell cmdlets",
      "pos": [
        497,
        544
      ]
    },
    {
      "content": "This is a quick introduction to the Azure PowerShell cmdlets you can use to manage your Batch accounts and work with your Batch resources such as pools, jobs, and tasks.",
      "pos": [
        545,
        714
      ]
    },
    {
      "content": "You can perform many of the same tasks with Batch cmdlets that you carry out with the Batch APIs and the Azure portal.",
      "pos": [
        715,
        833
      ]
    },
    {
      "content": "This article is based on cmdlets in Azure PowerShell version 1.0 or later.",
      "pos": [
        834,
        908
      ]
    },
    {
      "pos": [
        910,
        1070
      ],
      "content": "For a complete list of Batch cmdlets and detailed cmdlet syntax, see the <bpt id=\"p1\">[</bpt>Azure Batch cmdlet reference<ept id=\"p1\">](https://msdn.microsoft.com/library/azure/mt125957.aspx)</ept>."
    },
    {
      "content": "Prerequisites",
      "pos": [
        1077,
        1090
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Azure PowerShell<ept id=\"p1\">**</ept> - See <bpt id=\"p2\">[</bpt>How to install and configure Azure PowerShell<ept id=\"p2\">](../powershell-install-configure.md)</ept> for instructions to download and install Azure PowerShell.",
      "pos": [
        1094,
        1263
      ]
    },
    {
      "content": "Because the Azure Batch cmdlets ship in the Azure Resource Manager module, you'll need to run the <bpt id=\"p1\">**</bpt>Login-AzureRmAccount<ept id=\"p1\">**</ept> cmdlet to connect to your subscription.",
      "pos": [
        1264,
        1426
      ]
    },
    {
      "content": "More details are in <bpt id=\"p1\">[</bpt>Azure PowerShell 1.0<ept id=\"p1\">](https://azure.microsoft.com/blog/azps-1-0/)</ept>.",
      "pos": [
        1427,
        1514
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Register with the Batch provider namespace (one-time operation)<ept id=\"p1\">**</ept> - Before working with your Batch accounts, you have to register with the Batch provider namespace.",
      "pos": [
        1520,
        1686
      ]
    },
    {
      "content": "This operation only needs to be performed once per subscription.",
      "pos": [
        1687,
        1751
      ]
    },
    {
      "content": "Manage Batch accounts and keys",
      "pos": [
        1845,
        1875
      ]
    },
    {
      "content": "Create a Batch account",
      "pos": [
        1881,
        1903
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>New-AzureRmBatchAccount<ept id=\"p1\">**</ept> creates a new Batch account in a specified resource group.",
      "pos": [
        1905,
        1991
      ]
    },
    {
      "content": "If you don't already have a resource group, create one by running the <bpt id=\"p1\">[</bpt>New-AzureRmResourceGroup<ept id=\"p1\">](https://msdn.microsoft.com/library/azure/mt603739.aspx)</ept> cmdlet, specifying one of the Azure regions in the <bpt id=\"p2\">**</bpt>Location<ept id=\"p2\">**</ept> parameter, such as \"Central US\".",
      "pos": [
        1992,
        2241
      ]
    },
    {
      "content": "For example:",
      "pos": [
        2242,
        2254
      ]
    },
    {
      "content": "Then, create a new Batch account account in the resource group, also specifying an account name for &lt;<bpt id=\"p1\">*</bpt>account_name<ept id=\"p1\">*</ept>&gt; and a location where the Batch service is available.",
      "pos": [
        2340,
        2509
      ]
    },
    {
      "content": "Creating the account can take several minutes to complete.",
      "pos": [
        2510,
        2568
      ]
    },
    {
      "content": "For example:",
      "pos": [
        2569,
        2581
      ]
    },
    {
      "pos": [
        2709,
        2850
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> The Batch account name must be unique to Azure, contain between 3 and 24 characters, and use lowercase letters and numbers only."
    },
    {
      "content": "Get account access keys",
      "pos": [
        2856,
        2879
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Get-AzureRmBatchAccountKeys<ept id=\"p1\">**</ept> shows the access keys associated with an Azure Batch account.",
      "pos": [
        2880,
        2973
      ]
    },
    {
      "content": "For example, run the following to get the primary and secondary keys of the account you created.",
      "pos": [
        2974,
        3070
      ]
    },
    {
      "content": "Generate a new access key",
      "pos": [
        3209,
        3234
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>New-AzureRmBatchAccountKey<ept id=\"p1\">**</ept> generates a new primary or secondary account key for an Azure Batch account.",
      "pos": [
        3235,
        3342
      ]
    },
    {
      "content": "For example, to generate a new primary key for your Batch account, type:",
      "pos": [
        3343,
        3415
      ]
    },
    {
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> To generate a new secondary key, specify \"Secondary\" for the <bpt id=\"p1\">**</bpt>KeyType<ept id=\"p1\">**</ept> parameter.",
      "pos": [
        3500,
        3596
      ]
    },
    {
      "content": "You have to regenerate the primary and secondary keys separately.",
      "pos": [
        3597,
        3662
      ]
    },
    {
      "content": "Delete a Batch account",
      "pos": [
        3668,
        3690
      ]
    },
    {
      "content": "<bpt id=\"p1\">**</bpt>Remove-AzureRmBatchAccount<ept id=\"p1\">**</ept> deletes a Batch account.",
      "pos": [
        3691,
        3746
      ]
    },
    {
      "content": "For example:",
      "pos": [
        3747,
        3759
      ]
    },
    {
      "content": "When prompted, confirm you want to remove the account.",
      "pos": [
        3825,
        3879
      ]
    },
    {
      "content": "Account removal can take some time to complete.",
      "pos": [
        3880,
        3927
      ]
    },
    {
      "content": "Create a BatchAccountContext object",
      "pos": [
        3932,
        3967
      ]
    },
    {
      "content": "To create and manage pools, jobs, tasks, and other resources in a Batch account, you first need to create a BatchAccountContext object to store your account name and keys:",
      "pos": [
        3969,
        4140
      ]
    },
    {
      "pos": [
        4218,
        4330
      ],
      "content": "You pass this context into cmdlets that interact with the Batch service by using the <bpt id=\"p1\">**</bpt>BatchContext<ept id=\"p1\">**</ept> parameter."
    },
    {
      "pos": [
        4334,
        4561
      ],
      "content": "<ph id=\"ph1\">[AZURE.NOTE]</ph> By default, the account's primary key is used for authentication, but you can explicitly select the key to use by changing your BatchAccountContext object’s <bpt id=\"p1\">**</bpt>KeyInUse<ept id=\"p1\">**</ept> property: <ph id=\"ph2\">`$context.KeyInUse = \"Secondary\"`</ph>."
    },
    {
      "content": "Create and modify Batch resources",
      "pos": [
        4568,
        4601
      ]
    },
    {
      "content": "Use cmdlets such as <bpt id=\"p1\">**</bpt>New-AzureBatchPool<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>New-AzureBatchJob<ept id=\"p2\">**</ept>, and <bpt id=\"p3\">**</bpt>New-AzureBatchTask<ept id=\"p3\">**</ept> to create  resources under a Batch account.",
      "pos": [
        4602,
        4739
      ]
    },
    {
      "content": "There are corresponding <bpt id=\"p1\">**</bpt>Get-<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>Set-<ept id=\"p2\">**</ept> cmdlets to update the properties of existing resources, and  <bpt id=\"p3\">**</bpt>Remove-<ept id=\"p3\">**</ept> cmdlets to remove resources under a Batch account.",
      "pos": [
        4740,
        4909
      ]
    },
    {
      "content": "For example, the following cmdlet creates a new Batch pool configured to use size Small virtual machines imaged with the latest operating system version of family 3 (Windows Server 2012), with the target number of compute nodes determined by an autoscaling formula.",
      "pos": [
        4912,
        5177
      ]
    },
    {
      "content": "In this case, the  formula is simply $TargetDedicated=3, indicating the number of compute nodes in the pool is 3 at most.",
      "pos": [
        5178,
        5299
      ]
    },
    {
      "content": "The <bpt id=\"p1\">**</bpt>BatchContext<ept id=\"p1\">**</ept> parameter specifies a previously defined variable <bpt id=\"p2\">*</bpt>$context<ept id=\"p2\">*</ept> as the BatchAccountContext object.",
      "pos": [
        5300,
        5416
      ]
    },
    {
      "content": "Query for pool, jobs, tasks, and other details",
      "pos": [
        5598,
        5644
      ]
    },
    {
      "pos": [
        5646,
        5794
      ],
      "content": "Use cmdlets such as <bpt id=\"p1\">**</bpt>Get-AzureBatchPool<ept id=\"p1\">**</ept> ,  <bpt id=\"p2\">**</bpt>Get-AzureBatchJob<ept id=\"p2\">**</ept>, and <bpt id=\"p3\">**</bpt>Get-AzureBatchTask<ept id=\"p3\">**</ept> to query for entities created under a Batch account."
    },
    {
      "content": "Query for data",
      "pos": [
        5801,
        5815
      ]
    },
    {
      "content": "As an example, use <bpt id=\"p1\">**</bpt>Get-AzureBatchPools<ept id=\"p1\">**</ept> to find your pools.",
      "pos": [
        5817,
        5879
      ]
    },
    {
      "content": "By default this queries for all pools under your account, assuming you already stored the BatchAccountContext object in <bpt id=\"p1\">*</bpt>$context<ept id=\"p1\">*</ept>:",
      "pos": [
        5880,
        6011
      ]
    },
    {
      "content": "Use an OData filter",
      "pos": [
        6067,
        6086
      ]
    },
    {
      "content": "You can supply an OData filter using the <bpt id=\"p1\">**</bpt>Filter<ept id=\"p1\">**</ept> parameter to find only the objects you’re interested in.",
      "pos": [
        6088,
        6196
      ]
    },
    {
      "content": "For example, you can find all pools with ids starting with “myPool”:",
      "pos": [
        6197,
        6265
      ]
    },
    {
      "content": "This method is not as flexible as using “Where-Object” in a local pipeline.",
      "pos": [
        6371,
        6446
      ]
    },
    {
      "content": "However, the query gets sent to the Batch service directly so that all filtering happens on the server side, saving Internet bandwidth.",
      "pos": [
        6447,
        6582
      ]
    },
    {
      "content": "Use the Id parameter",
      "pos": [
        6588,
        6608
      ]
    },
    {
      "content": "An alternative to an OData filter is to use the <bpt id=\"p1\">**</bpt>Id<ept id=\"p1\">**</ept> parameter.",
      "pos": [
        6610,
        6675
      ]
    },
    {
      "content": "To query for a specific pool with id \"myPool\":",
      "pos": [
        6676,
        6722
      ]
    },
    {
      "pos": [
        6788,
        6876
      ],
      "content": "The <bpt id=\"p1\">**</bpt>Id<ept id=\"p1\">**</ept> parameter supports only full-id search, not wildcards or OData-style filters."
    },
    {
      "content": "Use the MaxCount parameter",
      "pos": [
        6884,
        6910
      ]
    },
    {
      "content": "By default, each cmdlet returns a maximum of 1000 objects.",
      "pos": [
        6912,
        6970
      ]
    },
    {
      "content": "If you reach this limit, either refine your filter to bring back fewer objects, or explicitly set a maximum using the <bpt id=\"p1\">**</bpt>MaxCount<ept id=\"p1\">**</ept> parameter.",
      "pos": [
        6971,
        7112
      ]
    },
    {
      "content": "For example:",
      "pos": [
        7113,
        7125
      ]
    },
    {
      "pos": [
        7194,
        7251
      ],
      "content": "To remove the upper bound, set <bpt id=\"p1\">**</bpt>MaxCount<ept id=\"p1\">**</ept> to 0 or less."
    },
    {
      "content": "Use the pipeline",
      "pos": [
        7257,
        7273
      ]
    },
    {
      "content": "Batch cmdlets can leverage the PowerShell pipeline to send data between cmdlets.",
      "pos": [
        7275,
        7355
      ]
    },
    {
      "content": "This has the same effect as specifying a parameter but makes listing multiple entities easier.",
      "pos": [
        7356,
        7450
      ]
    },
    {
      "content": "For example, the following finds all tasks under your account:",
      "pos": [
        7451,
        7513
      ]
    },
    {
      "content": "Related topics",
      "pos": [
        7612,
        7626
      ]
    },
    {
      "content": "Download Azure PowerShell",
      "pos": [
        7630,
        7655
      ]
    },
    {
      "content": "How to install and configure Azure PowerShell",
      "pos": [
        7701,
        7746
      ]
    },
    {
      "content": "Azure Batch cmdlet reference",
      "pos": [
        7787,
        7815
      ]
    },
    {
      "content": "Query the Batch service efficiently",
      "pos": [
        7876,
        7911
      ]
    }
  ],
  "content": "<properties\n   pageTitle=\"Get started with Azure Batch PowerShell | Microsoft Azure\"\n   description=\"Get a quick introduction to the Azure PowerShell cmdlets you can use to manage the Azure Batch service\"\n   services=\"batch\"\n   documentationCenter=\"\"\n   authors=\"dlepow\"\n   manager=\"timlt\"\n   editor=\"\"/>\n\n<tags\n   ms.service=\"batch\"\n   ms.devlang=\"NA\"\n   ms.topic=\"get-started-article\"\n   ms.tgt_pltfrm=\"powershell\"\n   ms.workload=\"big-compute\"\n   ms.date=\"01/21/2016\"\n   ms.author=\"danlep\"/>\n\n# Get started with Azure Batch PowerShell cmdlets\nThis is a quick introduction to the Azure PowerShell cmdlets you can use to manage your Batch accounts and work with your Batch resources such as pools, jobs, and tasks. You can perform many of the same tasks with Batch cmdlets that you carry out with the Batch APIs and the Azure portal. This article is based on cmdlets in Azure PowerShell version 1.0 or later.\n\nFor a complete list of Batch cmdlets and detailed cmdlet syntax, see the [Azure Batch cmdlet reference](https://msdn.microsoft.com/library/azure/mt125957.aspx). \n\n\n## Prerequisites\n\n* **Azure PowerShell** - See [How to install and configure Azure PowerShell](../powershell-install-configure.md) for instructions to download and install Azure PowerShell. Because the Azure Batch cmdlets ship in the Azure Resource Manager module, you'll need to run the **Login-AzureRmAccount** cmdlet to connect to your subscription. More details are in [Azure PowerShell 1.0](https://azure.microsoft.com/blog/azps-1-0/).\n\n\n\n* **Register with the Batch provider namespace (one-time operation)** - Before working with your Batch accounts, you have to register with the Batch provider namespace. This operation only needs to be performed once per subscription.\n\n    ```\n    Register-AzureRMResourceProvider -ProviderNamespace Microsoft.Batch\n    ```\n\n## Manage Batch accounts and keys\n\n### Create a Batch account\n\n**New-AzureRmBatchAccount** creates a new Batch account in a specified resource group. If you don't already have a resource group, create one by running the [New-AzureRmResourceGroup](https://msdn.microsoft.com/library/azure/mt603739.aspx) cmdlet, specifying one of the Azure regions in the **Location** parameter, such as \"Central US\". For example:\n\n```\nNew-AzureRmResourceGroup –Name MyBatchResourceGroup –location \"Central US\"\n```\n\nThen, create a new Batch account account in the resource group, also specifying an account name for <*account_name*> and a location where the Batch service is available. Creating the account can take several minutes to complete. For example:\n\n```\nNew-AzureRmBatchAccount –AccountName <account_name> –Location \"Central US\" –ResourceGroupName MyBatchResourceGroup\n```\n\n> [AZURE.NOTE] The Batch account name must be unique to Azure, contain between 3 and 24 characters, and use lowercase letters and numbers only.\n\n### Get account access keys\n**Get-AzureRmBatchAccountKeys** shows the access keys associated with an Azure Batch account. For example, run the following to get the primary and secondary keys of the account you created.\n\n```\n$Account = Get-AzureRmBatchAccountKeys –AccountName <accountname>\n\n$Account.PrimaryAccountKey\n\n$Account.SecondaryAccountKey\n```\n\n### Generate a new access key\n**New-AzureRmBatchAccountKey** generates a new primary or secondary account key for an Azure Batch account. For example, to generate a new primary key for your Batch account, type:\n\n```\nNew-AzureRmBatchAccountKey -AccountName <account_name> -KeyType Primary\n```\n\n> [AZURE.NOTE] To generate a new secondary key, specify \"Secondary\" for the **KeyType** parameter. You have to regenerate the primary and secondary keys separately.\n\n### Delete a Batch account\n**Remove-AzureRmBatchAccount** deletes a Batch account. For example:\n\n```\nRemove-AzureRmBatchAccount -AccountName <account_name>\n```\n\nWhen prompted, confirm you want to remove the account. Account removal can take some time to complete.\n\n## Create a BatchAccountContext object\n\nTo create and manage pools, jobs, tasks, and other resources in a Batch account, you first need to create a BatchAccountContext object to store your account name and keys:\n\n```\n$context = Get-AzureRmBatchAccountKeys -AccountName <account_name>\n```\n\nYou pass this context into cmdlets that interact with the Batch service by using the **BatchContext** parameter.\n\n> [AZURE.NOTE] By default, the account's primary key is used for authentication, but you can explicitly select the key to use by changing your BatchAccountContext object’s **KeyInUse** property: `$context.KeyInUse = \"Secondary\"`.\n\n\n\n## Create and modify Batch resources\nUse cmdlets such as **New-AzureBatchPool**, **New-AzureBatchJob**, and **New-AzureBatchTask** to create  resources under a Batch account. There are corresponding **Get-** and **Set-** cmdlets to update the properties of existing resources, and  **Remove-** cmdlets to remove resources under a Batch account. \n\nFor example, the following cmdlet creates a new Batch pool configured to use size Small virtual machines imaged with the latest operating system version of family 3 (Windows Server 2012), with the target number of compute nodes determined by an autoscaling formula. In this case, the  formula is simply $TargetDedicated=3, indicating the number of compute nodes in the pool is 3 at most. The **BatchContext** parameter specifies a previously defined variable *$context* as the BatchAccountContext object.\n\n```\nNew-AzureBatchPool -Id \"MyAutoScalePool\" -VirtualMachineSize \"Small\" -OSFamily \"3\" -TargetOSVersion \"*\" -AutoScaleFormula '$TargetDedicated=3;' -BatchContext $Context\n```\n\n\n## Query for pool, jobs, tasks, and other details\n\nUse cmdlets such as **Get-AzureBatchPool** ,  **Get-AzureBatchJob**, and **Get-AzureBatchTask** to query for entities created under a Batch account.\n\n\n### Query for data\n\nAs an example, use **Get-AzureBatchPools** to find your pools. By default this queries for all pools under your account, assuming you already stored the BatchAccountContext object in *$context*:\n\n```\nGet-AzureBatchPool -BatchContext $context\n```\n### Use an OData filter\n\nYou can supply an OData filter using the **Filter** parameter to find only the objects you’re interested in. For example, you can find all pools with ids starting with “myPool”:\n\n```\n$filter = \"startswith(id,'myPool')\"\n\nGet-AzureBatchPool -Filter $filter -BatchContext $context\n```\n\nThis method is not as flexible as using “Where-Object” in a local pipeline. However, the query gets sent to the Batch service directly so that all filtering happens on the server side, saving Internet bandwidth.\n\n### Use the Id parameter\n\nAn alternative to an OData filter is to use the **Id** parameter. To query for a specific pool with id \"myPool\":\n\n```\nGet-AzureBatchPool -Id \"myPool\" -BatchContext $context\n\n```\nThe **Id** parameter supports only full-id search, not wildcards or OData-style filters.\n\n\n\n### Use the MaxCount parameter\n\nBy default, each cmdlet returns a maximum of 1000 objects. If you reach this limit, either refine your filter to bring back fewer objects, or explicitly set a maximum using the **MaxCount** parameter. For example:\n\n```\nGet-AzureBatchTask -MaxCount 2500 -BatchContext $context\n\n```\n\nTo remove the upper bound, set **MaxCount** to 0 or less.\n\n### Use the pipeline\n\nBatch cmdlets can leverage the PowerShell pipeline to send data between cmdlets. This has the same effect as specifying a parameter but makes listing multiple entities easier. For example, the following finds all tasks under your account:\n\n```\nGet-AzureBatchJob -BatchContext $context | Get-AzureBatchTask -BatchContext $context\n```\n\n## Related topics\n* [Download Azure PowerShell](http://go.microsoft.com/?linkid=9811175)\n* [How to install and configure Azure PowerShell](../powershell-install-configure.md)\n* [Azure Batch cmdlet reference](https://msdn.microsoft.com/library/azure/mt125957.aspx)\n* [Query the Batch service efficiently](batch-efficient-list-queries.md)\n"
}