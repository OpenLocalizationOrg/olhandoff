<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-cn" original="foo.file" tool-id="8fc9fc0e-3e78-4167-bdfa-b4a2a6ab5ebe" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="8fc9fc0e-3e78-4167-bdfa-b4a2a6ab5ebe" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
      <olfilehash xmlns="">2fe214e2a741bb53de8e5d3ff3d2129f195a3208</olfilehash>
    </header>
    <body>
      <group id="f6368eef-b80d-43fe-b355-a6665ac89e30">
        <trans-unit id="38ec2974-34b7-4df4-9105-1f52095b97fc" xml:space="preserve">
          <source>PowerShell Snippets</source>
          <target state="new">PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="02a432cb-4fd6-40c5-9ce1-f1d340239025" xml:space="preserve">
          <source>PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</source>
          <target state="new">PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</target>
        </trans-unit>
        <trans-unit id="65f5c2ea-bed1-465d-8add-719520304dd6" xml:space="preserve">
          <source>All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</source>
          <target state="new">All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</target>
        </trans-unit>
        <trans-unit id="eaf842fa-1ba0-441e-87a6-11ece4b9fb72" xml:space="preserve">
          <source>If you aren't sure if you have the right permissions, type <bpt id="3975e566-6869-4ea8-87fe-19b435eaeda7">&lt;code&gt;</bpt>Get-VM<ept id="3975e566-6869-4ea8-87fe-19b435eaeda7">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</source>
          <target state="new">If you aren't sure if you have the right permissions, type <bpt id="3975e566-6869-4ea8-87fe-19b435eaeda7">&lt;code&gt;</bpt>Get-VM<ept id="3975e566-6869-4ea8-87fe-19b435eaeda7">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</target>
        </trans-unit>
        <trans-unit id="32b81d96-df9a-4111-b315-5b7e4d3f9eab" xml:space="preserve">
          <source>PowerShell Direct tools</source>
          <target state="new">PowerShell Direct tools</target>
        </trans-unit>
        <trans-unit id="66da2e43-74a6-4f83-b50b-24650d8e9f9f" xml:space="preserve">
          <source>All of the scripts and snippets in this section will rely on the following basics.</source>
          <target state="new">All of the scripts and snippets in this section will rely on the following basics.</target>
        </trans-unit>
        <trans-unit id="f114f4a9-ee96-42a8-9af5-4394e71da57b" xml:space="preserve">
          <source><bpt id="dc126fad-d335-4b87-9f53-e00369909db9">&lt;strong&gt;</bpt>Requirements<ept id="dc126fad-d335-4b87-9f53-e00369909db9">&lt;/strong&gt;</ept> :</source>
          <target state="new"><bpt id="dc126fad-d335-4b87-9f53-e00369909db9">&lt;strong&gt;</bpt>Requirements<ept id="dc126fad-d335-4b87-9f53-e00369909db9">&lt;/strong&gt;</ept> :</target>
        </trans-unit>
        <trans-unit id="a7fe1af0-9b6d-416a-ae4b-be39b6488794" xml:space="preserve">
          <source>PowerShell Direct.</source>
          <target state="new">PowerShell Direct.</target>
        </trans-unit>
        <trans-unit id="08ebe879-9ec7-4dbe-b28d-a4c374883095" xml:space="preserve">
          <source>Windows 10 guest and host OS.</source>
          <target state="new">Windows 10 guest and host OS.</target>
        </trans-unit>
        <trans-unit id="730648e2-de53-435c-8757-9f4b9e2da099" xml:space="preserve">
          <source><bpt id="391f14c2-4e4b-4529-867d-2a855bed291f">&lt;strong&gt;</bpt>Common Variables<ept id="391f14c2-4e4b-4529-867d-2a855bed291f">&lt;/strong&gt;</ept> :  
<bpt id="11706e2c-ccd6-4b63-a7b2-8461d4932eb6">&lt;code&gt;</bpt>$VMName<ept id="11706e2c-ccd6-4b63-a7b2-8461d4932eb6">&lt;/code&gt;</ept> -- this is a string with the VMName.</source>
          <target state="new"><bpt id="391f14c2-4e4b-4529-867d-2a855bed291f">&lt;strong&gt;</bpt>Common Variables<ept id="391f14c2-4e4b-4529-867d-2a855bed291f">&lt;/strong&gt;</ept> :  
<bpt id="11706e2c-ccd6-4b63-a7b2-8461d4932eb6">&lt;code&gt;</bpt>$VMName<ept id="11706e2c-ccd6-4b63-a7b2-8461d4932eb6">&lt;/code&gt;</ept> -- this is a string with the VMName.</target>
        </trans-unit>
        <trans-unit id="65dcf152-f630-48fe-adc7-77642012a3e8" xml:space="preserve">
          <source>See a list of available VMs with <bpt id="06bb1f78-055f-4cd9-a746-098399ca8cbe">&lt;code&gt;</bpt>Get-VM<ept id="06bb1f78-055f-4cd9-a746-098399ca8cbe">&lt;/code&gt;</ept>  
<bpt id="c4e24637-fdc9-47e3-8f05-798322eae847">&lt;code&gt;</bpt>$cred<ept id="c4e24637-fdc9-47e3-8f05-798322eae847">&lt;/code&gt;</ept> -- Credential for the guest OS.</source>
          <target state="new">See a list of available VMs with <bpt id="06bb1f78-055f-4cd9-a746-098399ca8cbe">&lt;code&gt;</bpt>Get-VM<ept id="06bb1f78-055f-4cd9-a746-098399ca8cbe">&lt;/code&gt;</ept>  
<bpt id="c4e24637-fdc9-47e3-8f05-798322eae847">&lt;code&gt;</bpt>$cred<ept id="c4e24637-fdc9-47e3-8f05-798322eae847">&lt;/code&gt;</ept> -- Credential for the guest OS.</target>
        </trans-unit>
        <trans-unit id="16fae4a0-c950-4679-9acb-f94f8f593ab6" xml:space="preserve">
          <source>Can be populated using <bpt id="218cdb08-4efc-4647-9b4a-5aa2578c77ea">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="218cdb08-4efc-4647-9b4a-5aa2578c77ea">&lt;/code&gt;</ept></source>
          <target state="new">Can be populated using <bpt id="218cdb08-4efc-4647-9b4a-5aa2578c77ea">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="218cdb08-4efc-4647-9b4a-5aa2578c77ea">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="c803a631-f949-46f5-8f8c-0d1cbf07e8b0" xml:space="preserve">
          <source>Check if the guest has booted</source>
          <target state="new">Check if the guest has booted</target>
        </trans-unit>
        <trans-unit id="871bab24-e5dc-4332-a536-e59d950840b0" xml:space="preserve">
          <source>Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</source>
          <target state="new">Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</target>
        </trans-unit>
        <trans-unit id="7afb482b-461c-4fbe-974d-68cef99f3dec" xml:space="preserve">
          <source>Use this command to check whether the guest has booted.</source>
          <target state="new">Use this command to check whether the guest has booted.</target>
        </trans-unit>
        <trans-unit id="5718ace7-a7ca-4311-80c5-17f98954c293" xml:space="preserve">
          <source><bpt id="2aaf9f55-60c4-475a-aa04-972cbb79c956">&lt;strong&gt;</bpt>Outcome<ept id="2aaf9f55-60c4-475a-aa04-972cbb79c956">&lt;/strong&gt;</ept>  
Prints a friendly message declaring the state of the guest OS.</source>
          <target state="new"><bpt id="2aaf9f55-60c4-475a-aa04-972cbb79c956">&lt;strong&gt;</bpt>Outcome<ept id="2aaf9f55-60c4-475a-aa04-972cbb79c956">&lt;/strong&gt;</ept>  
Prints a friendly message declaring the state of the guest OS.</target>
        </trans-unit>
        <trans-unit id="3cda0e9d-457b-4977-ba4b-4e01c94791d7" xml:space="preserve">
          <source>Script locking until the guest has booted</source>
          <target state="new">Script locking until the guest has booted</target>
        </trans-unit>
        <trans-unit id="036fd492-0fbf-4b35-b273-8972aeb50e42" xml:space="preserve">
          <source>The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</source>
          <target state="new">The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</target>
        </trans-unit>
        <trans-unit id="8688549c-b38a-46ac-9619-14d6ef0d730c" xml:space="preserve">
          <source><bpt id="81d03715-31e8-4d6c-8fff-30c712605210">&lt;strong&gt;</bpt>Outcome<ept id="81d03715-31e8-4d6c-8fff-30c712605210">&lt;/strong&gt;</ept>  
Prints a friendly message and locks until the connection to the VM succeeds.</source>
          <target state="new"><bpt id="81d03715-31e8-4d6c-8fff-30c712605210">&lt;strong&gt;</bpt>Outcome<ept id="81d03715-31e8-4d6c-8fff-30c712605210">&lt;/strong&gt;</ept>  
Prints a friendly message and locks until the connection to the VM succeeds.</target>
        </trans-unit>
        <trans-unit id="0e200f57-656c-47b5-99bb-3c992b8cf6dc" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="ddee31a0-2533-4e14-ae64-1564319f8ba4" xml:space="preserve">
          <source>Script locking until the guest has a network</source>
          <target state="new">Script locking until the guest has a network</target>
        </trans-unit>
        <trans-unit id="d0adcf24-ca2e-4d82-9fb3-9e84de1c7ab8" xml:space="preserve">
          <source>With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</source>
          <target state="new">With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</target>
        </trans-unit>
        <trans-unit id="6aa86374-848b-441f-bf92-dda66cdb91d2" xml:space="preserve">
          <source><bpt id="e068b89b-2908-4e38-a981-81096a57542f">&lt;em&gt;</bpt>* Outcome *<ept id="e068b89b-2908-4e38-a981-81096a57542f">&lt;/em&gt;</ept>
Locks until a DHCP lease is recieved.</source>
          <target state="new"><bpt id="e068b89b-2908-4e38-a981-81096a57542f">&lt;em&gt;</bpt>* Outcome *<ept id="e068b89b-2908-4e38-a981-81096a57542f">&lt;/em&gt;</ept>
Locks until a DHCP lease is recieved.</target>
        </trans-unit>
        <trans-unit id="00395c3e-43de-4a8d-a09d-163d435b395c" xml:space="preserve">
          <source>Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</source>
          <target state="new">Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</target>
        </trans-unit>
        <trans-unit id="2568d016-3ae7-4f4f-990c-202a4ff6b0ec" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="bf908b00-bd7a-4b81-892c-2b5ac1b38fb2" xml:space="preserve">
          <source>Managing credentials with PowerShell</source>
          <target state="new">Managing credentials with PowerShell</target>
        </trans-unit>
        <trans-unit id="68642dd9-c2fd-4cbf-9d16-9598f5d11c28" xml:space="preserve">
          <source>Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</source>
          <target state="new">Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</target>
        </trans-unit>
        <trans-unit id="08f19cdd-b5de-49c5-bfe2-50cf21c64dbd" xml:space="preserve">
          <source>There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</source>
          <target state="new">There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</target>
        </trans-unit>
        <trans-unit id="5f77be38-7b1a-4b70-9885-937e7b16575c" xml:space="preserve">
          <source>The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</source>
          <target state="new">The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</target>
        </trans-unit>
        <trans-unit id="04be11c1-563e-4e79-ba9f-7bdc80e95fcd" xml:space="preserve">
          <source>This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</source>
          <target state="new">This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</target>
        </trans-unit>
        <trans-unit id="4dd0dde9-f2b6-48ac-b0b7-7dd6d703285b" xml:space="preserve">
          <source>In this scenario you can just run <bpt id="657aa6b8-a743-4954-899e-983d813c0734">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="657aa6b8-a743-4954-899e-983d813c0734">&lt;/code&gt;</ept>.</source>
          <target state="new">In this scenario you can just run <bpt id="657aa6b8-a743-4954-899e-983d813c0734">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="657aa6b8-a743-4954-899e-983d813c0734">&lt;/code&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="8b2940f9-ef9c-4af5-892f-65dae6b12f33" xml:space="preserve">
          <source>Let PowerShell prompt you for credentials  
If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</source>
          <target state="new">Let PowerShell prompt you for credentials  
If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</target>
        </trans-unit>
        <trans-unit id="6bf264f7-2c58-432e-bb99-beb183716f3c" xml:space="preserve">
          <source>Store credentials in a variable for reuse.</source>
          <target state="new">Store credentials in a variable for reuse.</target>
        </trans-unit>
        <trans-unit id="ce26a7b4-0d7d-4019-b245-64fd0f656410" xml:space="preserve">
          <source>Running a simple command like this:</source>
          <target state="new">Running a simple command like this:</target>
        </trans-unit>
        <trans-unit id="08afb055-8e35-4a86-9ce4-e55035cb2c12" xml:space="preserve">
          <source>  And then running something like this:</source>
          <target state="new">  And then running something like this:</target>
        </trans-unit>
        <trans-unit id="d2c50f03-150d-4f62-9d66-c92d6191e1fe" xml:space="preserve">
          <source>  Will mean that you only get prompted once per script/PowerShell session for your credentials.</source>
          <target state="new">  Will mean that you only get prompted once per script/PowerShell session for your credentials.</target>
        </trans-unit>
        <trans-unit id="e604fd5e-0b43-4324-99fb-59093116c7ed" xml:space="preserve">
          <source>Code your credentials into your scripts.</source>
          <target state="new">Code your credentials into your scripts.</target>
        </trans-unit>
        <trans-unit id="8fc72701-f616-4a00-a229-cacc7a2778b5" xml:space="preserve">
          <source><bpt id="9bea4960-61a0-472e-9ccf-38d5cf254e08">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="9bea4960-61a0-472e-9ccf-38d5cf254e08">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="9bea4960-61a0-472e-9ccf-38d5cf254e08">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="9bea4960-61a0-472e-9ccf-38d5cf254e08">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="211e5f82-5041-4ae6-b7e3-5bd9cf9a1b2b" xml:space="preserve">
          <source>Warning:  _Do not do this in a production system.</source>
          <target state="new">Warning:  _Do not do this in a production system.</target>
        </trans-unit>
        <trans-unit id="ff87cc37-62a0-4962-952e-02ceaa6aabc0" xml:space="preserve">
          <source>Do not do this with real passwords._</source>
          <target state="new">Do not do this with real passwords._</target>
        </trans-unit>
        <trans-unit id="432f56c0-2ea2-45b1-8519-eded32137ec7" xml:space="preserve">
          <source>You can hand craft a PSCredential object with some code like this:</source>
          <target state="new">You can hand craft a PSCredential object with some code like this:</target>
        </trans-unit>
        <trans-unit id="7910b698-2bb1-4f11-88a3-8bb48c92d8e0" xml:space="preserve">
          <source>Grossly insecure - but useful for testing.</source>
          <target state="new">Grossly insecure - but useful for testing.</target>
        </trans-unit>
        <trans-unit id="db5036ec-6388-4dce-b05f-3da864fb4c84" xml:space="preserve">
          <source>Now you get no prompts at all in this session.</source>
          <target state="new">Now you get no prompts at all in this session.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>