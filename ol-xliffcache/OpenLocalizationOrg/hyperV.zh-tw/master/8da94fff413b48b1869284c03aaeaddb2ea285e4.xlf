<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="zh-tw">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8da94fff413b48b1869284c03aaeaddb2ea285e4</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-02a95cf" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Using the DB2 Connector in Microsoft Azure App Service | Microsoft Azure</source>
          <target state="new">Using the DB2 Connector in Microsoft Azure App Service | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to use the DB2 Connector with Logic App triggers and actions</source>
          <target state="new">How to use the DB2 Connector with Logic App triggers and actions</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>DB2 Connector</source>
          <target state="new">DB2 Connector</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Microsoft Connector for DB2 is an API app for connecting applications through Azure App Service to resources stored in an IBM DB2 database.</source>
          <target state="new">Microsoft Connector for DB2 is an API app for connecting applications through Azure App Service to resources stored in an IBM DB2 database.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Connector includes a Microsoft Client to connect to remote DB2 server computers across a TCP/IP network connection, including Azure hybrid connections to on-premises DB2 servers using the Azure Service Bus Relay.</source>
          <target state="new">Connector includes a Microsoft Client to connect to remote DB2 server computers across a TCP/IP network connection, including Azure hybrid connections to on-premises DB2 servers using the Azure Service Bus Relay.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Connector supports the following database operations:</source>
          <target state="new">Connector supports the following database operations:</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Read rows using SELECT</source>
          <target state="new">Read rows using SELECT</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Poll to read rows using SELECT COUNT followed by SELECT</source>
          <target state="new">Poll to read rows using SELECT COUNT followed by SELECT</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Add one row or multiple (bulk) rows using INSERT</source>
          <target state="new">Add one row or multiple (bulk) rows using INSERT</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Alter one row or multiple (bulk) rows using UPDATE</source>
          <target state="new">Alter one row or multiple (bulk) rows using UPDATE</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Remove one row or multiple (bulk) rows using DELETE</source>
          <target state="new">Remove one row or multiple (bulk) rows using DELETE</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Read to alter rows using SELECT CURSOR followed by UPDATE WHERE CURRENT OF CURSOR</source>
          <target state="new">Read to alter rows using SELECT CURSOR followed by UPDATE WHERE CURRENT OF CURSOR</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Read to remove rows using SELECT CURSOR followed by UPDATE WHERE CURRENT OF CURSOR</source>
          <target state="new">Read to remove rows using SELECT CURSOR followed by UPDATE WHERE CURRENT OF CURSOR</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Run procedure with input and output parameters, return value, resultset, using CALL</source>
          <target state="new">Run procedure with input and output parameters, return value, resultset, using CALL</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Custom commands and composite operations using SELECT, INSERT, UPDATE, DELETE</source>
          <target state="new">Custom commands and composite operations using SELECT, INSERT, UPDATE, DELETE</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Triggers and Actions</source>
          <target state="new">Triggers and Actions</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Connector supports the following Logic app triggers and actions:</source>
          <target state="new">Connector supports the following Logic app triggers and actions:</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Triggers</source>
          <target state="new">Triggers</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Actions</source>
          <target state="new">Actions</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Poll Data</source>
          <target state="new">Poll Data</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Bulk Insert</source>
          <target state="new">Bulk Insert</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Insert</source>
          <target state="new">Insert</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Bulk Update</source>
          <target state="new">Bulk Update</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Update</source>
          <target state="new">Update</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Call</source>
          <target state="new">Call</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Bulk Delete</source>
          <target state="new">Bulk Delete</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Delete</source>
          <target state="new">Delete</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Select</source>
          <target state="new">Select</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Conditional update</source>
          <target state="new">Conditional update</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Post to EntitySet</source>
          <target state="new">Post to EntitySet</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Conditional delete</source>
          <target state="new">Conditional delete</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Select single entity</source>
          <target state="new">Select single entity</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Delete</source>
          <target state="new">Delete</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Upsert to EntitySet</source>
          <target state="new">Upsert to EntitySet</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Custom commands</source>
          <target state="new">Custom commands</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Composite operations</source>
          <target state="new">Composite operations</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Create the DB2 Connector</source>
          <target state="new">Create the DB2 Connector</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>You can define a connector within a logic app or from the Azure Marketplace, like in the following example:</source>
          <target state="new">You can define a connector within a logic app or from the Azure Marketplace, like in the following example:</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>In the Azure startboard, select <bpt id="p1">**</bpt>Marketplace<ept id="p1">**</ept>.</source>
          <target state="new">In the Azure startboard, select <bpt id="p1">**</bpt>Marketplace<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Everything<ept id="p1">**</ept> blade, type <bpt id="p2">**</bpt>db2<ept id="p2">**</ept> in the <bpt id="p3">**</bpt>Search Everything<ept id="p3">**</ept> box, and then click the enter key.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Everything<ept id="p1">**</ept> blade, type <bpt id="p2">**</bpt>db2<ept id="p2">**</ept> in the <bpt id="p3">**</bpt>Search Everything<ept id="p3">**</ept> box, and then click the enter key.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>In the search everything results pane, select <bpt id="p1">**</bpt>DB2 Connector<ept id="p1">**</ept>.</source>
          <target state="new">In the search everything results pane, select <bpt id="p1">**</bpt>DB2 Connector<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>In the DB2 Connector description blade, select <bpt id="p1">**</bpt>Create<ept id="p1">**</ept>.</source>
          <target state="new">In the DB2 Connector description blade, select <bpt id="p1">**</bpt>Create<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>In the DB2 Connector package blade, enter the Name (e.g. "Db2ConnectorNewOrders"), App Service Plan, and other properties.</source>
          <target state="new">In the DB2 Connector package blade, enter the Name (e.g. "Db2ConnectorNewOrders"), App Service Plan, and other properties.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>Package settings<ept id="p1">**</ept>, and enter the following package settings:</source>
          <target state="new">Select <bpt id="p1">**</bpt>Package settings<ept id="p1">**</ept>, and enter the following package settings:</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Name | Required |  Description</source>
          <target state="new">Name | Required |  Description</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>ConnectionString | Yes | DB2 Client connection string (e.g., "Network Address=servername;Network Port=50000;User ID=username;Password=password;Initial Catalog=SAMPLE;Package Collection=NWIND;Default Schema=NWIND").</source>
          <target state="new">ConnectionString | Yes | DB2 Client connection string (e.g., "Network Address=servername;Network Port=50000;User ID=username;Password=password;Initial Catalog=SAMPLE;Package Collection=NWIND;Default Schema=NWIND").</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Tables | Yes | Comma separated list of table, view and alias names required for OData operations and to generate swagger documentation with examples (e.g. "<bpt id="p1">*</bpt>NEWORDERS<ept id="p1">*</ept>").</source>
          <target state="new">Tables | Yes | Comma separated list of table, view and alias names required for OData operations and to generate swagger documentation with examples (e.g. "<bpt id="p1">*</bpt>NEWORDERS<ept id="p1">*</ept>").</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Procedures | Yes | Comma separated list of procedure and function names (e.g. "SPORDERID").</source>
          <target state="new">Procedures | Yes | Comma separated list of procedure and function names (e.g. "SPORDERID").</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>OnPremise | No | Deploy on-premises using Azure Service Bus Relay.</source>
          <target state="new">OnPremise | No | Deploy on-premises using Azure Service Bus Relay.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>ServiceBusConnectionString | No | Azure Service Bus Relay connection string.</source>
          <target state="new">ServiceBusConnectionString | No | Azure Service Bus Relay connection string.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>PollToCheckData | No | SELECT COUNT statement to use with a Logic app trigger (e.g. "SELECT COUNT(\*) FROM NEWORDERS WHERE SHIPDATE IS NULL").</source>
          <target state="new">PollToCheckData | No | SELECT COUNT statement to use with a Logic app trigger (e.g. "SELECT COUNT(\*) FROM NEWORDERS WHERE SHIPDATE IS NULL").</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>PollToReadData | No | SELECT statement to use with a Logic app trigger (e.g. "SELECT \* FROM NEWORDERS WHERE SHIPDATE IS NULL FOR UPDATE").</source>
          <target state="new">PollToReadData | No | SELECT statement to use with a Logic app trigger (e.g. "SELECT \* FROM NEWORDERS WHERE SHIPDATE IS NULL FOR UPDATE").</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>PollToAlterData | No | UPDATE or DELETE statement to use with a Logic app trigger (e.g. "UPDATE NEWORDERS SET SHIPDATE = CURRENT DATE WHERE CURRENT OF &amp;lt;CURSOR&amp;gt;").</source>
          <target state="new">PollToAlterData | No | UPDATE or DELETE statement to use with a Logic app trigger (e.g. "UPDATE NEWORDERS SET SHIPDATE = CURRENT DATE WHERE CURRENT OF &amp;lt;CURSOR&amp;gt;").</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>OK<ept id="p1">**</ept>, and then Select <bpt id="p2">**</bpt>Create<ept id="p2">**</ept>.</source>
          <target state="new">Select <bpt id="p1">**</bpt>OK<ept id="p1">**</ept>, and then Select <bpt id="p2">**</bpt>Create<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>When complete, the Package Settings look similar to the following:</source>
          <target state="new">When complete, the Package Settings look similar to the following:</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Logic App with DB2 Connector Action to Add Data</source>
          <target state="new">Logic App with DB2 Connector Action to Add Data</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>You can define a Logic app action to add data to a DB2 table using an API Insert or Post to Entity OData operation.</source>
          <target state="new">You can define a Logic app action to add data to a DB2 table using an API Insert or Post to Entity OData operation.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>For example, you can insert a new customer order record, by processing a SQL INSERT statement against a table defined with an identity column, returning the identity value or the rows affected to the Logic app (SELECT ORDID FROM FINAL TABLE (INSERT INTO NWIND.NEWORDERS (CUSTID,SHIPNAME,SHIPADDR,SHIPCITY,SHIPREG,SHIPZIP) VALUES (?,?,?,?,?,?))).</source>
          <target state="new">For example, you can insert a new customer order record, by processing a SQL INSERT statement against a table defined with an identity column, returning the identity value or the rows affected to the Logic app (SELECT ORDID FROM FINAL TABLE (INSERT INTO NWIND.NEWORDERS (CUSTID,SHIPNAME,SHIPADDR,SHIPCITY,SHIPREG,SHIPZIP) VALUES (?,?,?,?,?,?))).</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.TIP]</ph> DB2 Connection "<bpt id="p1">*</bpt>Post to EntitySet<ept id="p1">*</ept>" returns the identity column value and "<bpt id="p2">*</bpt>API Insert<ept id="p2">*</ept>" returns rows affected</source>
          <target state="new"><ph id="ph1">[AZURE.TIP]</ph> DB2 Connection "<bpt id="p1">*</bpt>Post to EntitySet<ept id="p1">*</ept>" returns the identity column value and "<bpt id="p2">*</bpt>API Insert<ept id="p2">*</ept>" returns rows affected</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>In the Azure startboard, select <bpt id="p1">**</bpt>+<ept id="p1">**</ept> (plus sign), <bpt id="p2">**</bpt>Web + Mobile<ept id="p2">**</ept>, and then <bpt id="p3">**</bpt>Logic App<ept id="p3">**</ept>.</source>
          <target state="new">In the Azure startboard, select <bpt id="p1">**</bpt>+<ept id="p1">**</ept> (plus sign), <bpt id="p2">**</bpt>Web + Mobile<ept id="p2">**</ept>, and then <bpt id="p3">**</bpt>Logic App<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Enter the Name (e.g. "NewOrdersDb2"), App Service Plan, other properties, and then select <bpt id="p1">**</bpt>Create<ept id="p1">**</ept>.</source>
          <target state="new">Enter the Name (e.g. "NewOrdersDb2"), App Service Plan, other properties, and then select <bpt id="p1">**</bpt>Create<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>In the Azure startboard, select the Logic app you just created, <bpt id="p1">**</bpt>Settings<ept id="p1">**</ept>, and then <bpt id="p2">**</bpt>Triggers and actions<ept id="p2">**</ept>.</source>
          <target state="new">In the Azure startboard, select the Logic app you just created, <bpt id="p1">**</bpt>Settings<ept id="p1">**</ept>, and then <bpt id="p2">**</bpt>Triggers and actions<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>In the Triggers and actions blade, select <bpt id="p1">**</bpt>Create from Scratch<ept id="p1">**</ept> within the Logic App Templates.</source>
          <target state="new">In the Triggers and actions blade, select <bpt id="p1">**</bpt>Create from Scratch<ept id="p1">**</ept> within the Logic App Templates.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>In the API Apps panel, select <bpt id="p1">**</bpt>Recurrence<ept id="p1">**</ept>, set a frequency and interval, and then <bpt id="p2">**</bpt>checkmark<ept id="p2">**</ept>.</source>
          <target state="new">In the API Apps panel, select <bpt id="p1">**</bpt>Recurrence<ept id="p1">**</ept>, set a frequency and interval, and then <bpt id="p2">**</bpt>checkmark<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>In the API Apps panel, select <bpt id="p1">**</bpt>DB2 Connector<ept id="p1">**</ept>, expand the operations list to select <bpt id="p2">**</bpt>Insert into NEWORDER<ept id="p2">**</ept>.</source>
          <target state="new">In the API Apps panel, select <bpt id="p1">**</bpt>DB2 Connector<ept id="p1">**</ept>, expand the operations list to select <bpt id="p2">**</bpt>Insert into NEWORDER<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Expand the parameters list to enter the following values:</source>
          <target state="new">Expand the parameters list to enter the following values:</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Name | Value</source>
          <target state="new">Name | Value</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>CUSTID | 10042</source>
          <target state="new">CUSTID | 10042</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>SHIPNAME | Lazy K Kountry Store</source>
          <target state="new">SHIPNAME | Lazy K Kountry Store</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>SHIPADDR | 12 Orchestra Terrace</source>
          <target state="new">SHIPADDR | 12 Orchestra Terrace</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>SHIPCITY | Walla Walla</source>
          <target state="new">SHIPCITY | Walla Walla</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>SHIPREG | WA</source>
          <target state="new">SHIPREG | WA</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>SHIPZIP | 99362</source>
          <target state="new">SHIPZIP | 99362</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Select the <bpt id="p1">**</bpt>checkmark<ept id="p1">**</ept> to save the action settings, and then <bpt id="p2">**</bpt>Save<ept id="p2">**</ept>.</source>
          <target state="new">Select the <bpt id="p1">**</bpt>checkmark<ept id="p1">**</ept> to save the action settings, and then <bpt id="p2">**</bpt>Save<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The settings should look as follows:</source>
          <target state="new">The settings should look as follows:</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>All runs<ept id="p1">**</ept> list under <bpt id="p2">**</bpt>Operations<ept id="p2">**</ept>, select the first-listed item (most recent run).</source>
          <target state="new">In the <bpt id="p1">**</bpt>All runs<ept id="p1">**</ept> list under <bpt id="p2">**</bpt>Operations<ept id="p2">**</ept>, select the first-listed item (most recent run).</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Logic app run<ept id="p1">**</ept> blade, select the <bpt id="p2">**</bpt>ACTION<ept id="p2">**</ept> item <bpt id="p3">**</bpt>db2connectorneworders<ept id="p3">**</ept>.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Logic app run<ept id="p1">**</ept> blade, select the <bpt id="p2">**</bpt>ACTION<ept id="p2">**</ept> item <bpt id="p3">**</bpt>db2connectorneworders<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Logic app action<ept id="p1">**</ept> blade, select the <bpt id="p2">**</bpt>INPUTS LINK<ept id="p2">**</ept>.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Logic app action<ept id="p1">**</ept> blade, select the <bpt id="p2">**</bpt>INPUTS LINK<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>DB2 Connector uses the inputs to process a parameterized INSERT statement.</source>
          <target state="new">DB2 Connector uses the inputs to process a parameterized INSERT statement.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Logic app action<ept id="p1">**</ept> blade, select the <bpt id="p2">**</bpt>OUTPUTS LINK<ept id="p2">**</ept>.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Logic app action<ept id="p1">**</ept> blade, select the <bpt id="p2">**</bpt>OUTPUTS LINK<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The inputs should look as follows:</source>
          <target state="new">The inputs should look as follows:</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>What you need to know</source>
          <target state="new">What you need to know</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Connector truncates DB2 table names when forming Logic app action names.</source>
          <target state="new">Connector truncates DB2 table names when forming Logic app action names.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>For example, the operation <bpt id="p1">**</bpt>Insert into NEWORDERS<ept id="p1">**</ept> is truncated to <bpt id="p2">**</bpt>Insert into NEWORDER<ept id="p2">**</ept>.</source>
          <target state="new">For example, the operation <bpt id="p1">**</bpt>Insert into NEWORDERS<ept id="p1">**</ept> is truncated to <bpt id="p2">**</bpt>Insert into NEWORDER<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>After saving the Logic app <bpt id="p1">**</bpt>Triggers and actions<ept id="p1">**</ept>, Logic app processes the operation.</source>
          <target state="new">After saving the Logic app <bpt id="p1">**</bpt>Triggers and actions<ept id="p1">**</ept>, Logic app processes the operation.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>There may be a delay of a number of seconds (e.g. 3-5 seconds) before Logic app processes the operation.</source>
          <target state="new">There may be a delay of a number of seconds (e.g. 3-5 seconds) before Logic app processes the operation.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Optionally, you can click <bpt id="p1">**</bpt>Run Now<ept id="p1">**</ept> to process the operation.</source>
          <target state="new">Optionally, you can click <bpt id="p1">**</bpt>Run Now<ept id="p1">**</ept> to process the operation.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>DB2 Connector defines EntitySet members with attributes, including whether the member corresponds to a DB2 column with a default or generated columns (e.g. identity).</source>
          <target state="new">DB2 Connector defines EntitySet members with attributes, including whether the member corresponds to a DB2 column with a default or generated columns (e.g. identity).</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Logic app displays a red asterisk next to the EntitySet member ID name, to denote DB2 columns that require values.</source>
          <target state="new">Logic app displays a red asterisk next to the EntitySet member ID name, to denote DB2 columns that require values.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>You should not enter a value for the ORDID member, which corresponds to DB2 identity column.</source>
          <target state="new">You should not enter a value for the ORDID member, which corresponds to DB2 identity column.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>You may enter values for other optional members (ITEMS, ORDDATE, REQDATE, SHIPID, FREIGHT, SHIPCTRY), which correspond to DB2 columns with default values.</source>
          <target state="new">You may enter values for other optional members (ITEMS, ORDDATE, REQDATE, SHIPID, FREIGHT, SHIPCTRY), which correspond to DB2 columns with default values.</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>DB2 Connector returns to Logic app the response on the Post to EntitySet that includes the values for identity columns, which is derived from the DRDA SQLDARD (SQL Data Area Reply Data) on the prepared SQL INSERT statement.</source>
          <target state="new">DB2 Connector returns to Logic app the response on the Post to EntitySet that includes the values for identity columns, which is derived from the DRDA SQLDARD (SQL Data Area Reply Data) on the prepared SQL INSERT statement.</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>DB2 server does not return the inserted values for columns with default values.</source>
          <target state="new">DB2 server does not return the inserted values for columns with default values.</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Logic App with DB2 Connector Action to Add Bulk Data</source>
          <target state="new">Logic App with DB2 Connector Action to Add Bulk Data</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>You can define a Logic app action to add data to a DB2 table using an API Bulk Insert operation.</source>
          <target state="new">You can define a Logic app action to add data to a DB2 table using an API Bulk Insert operation.</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>For example, you can insert two new customer order records, by processing a SQL INSERT statement using an array of row values against a table defined with an identity column, returning the rows affected to the Logic app (SELECT ORDID FROM FINAL TABLE (INSERT INTO NWIND.NEWORDERS (CUSTID,SHIPNAME,SHIPADDR,SHIPCITY,SHIPREG,SHIPZIP) VALUES (?,?,?,?,?,?))).</source>
          <target state="new">For example, you can insert two new customer order records, by processing a SQL INSERT statement using an array of row values against a table defined with an identity column, returning the rows affected to the Logic app (SELECT ORDID FROM FINAL TABLE (INSERT INTO NWIND.NEWORDERS (CUSTID,SHIPNAME,SHIPADDR,SHIPCITY,SHIPREG,SHIPZIP) VALUES (?,?,?,?,?,?))).</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>In the Azure startboard, select <bpt id="p1">**</bpt>+<ept id="p1">**</ept> (plus sign), <bpt id="p2">**</bpt>Web + Mobile<ept id="p2">**</ept>, and then <bpt id="p3">**</bpt>Logic App<ept id="p3">**</ept>.</source>
          <target state="new">In the Azure startboard, select <bpt id="p1">**</bpt>+<ept id="p1">**</ept> (plus sign), <bpt id="p2">**</bpt>Web + Mobile<ept id="p2">**</ept>, and then <bpt id="p3">**</bpt>Logic App<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Enter the Name (e.g. "NewOrdersBulkDb2"), App Service Plan, other properties, and then select <bpt id="p1">**</bpt>Create<ept id="p1">**</ept>.</source>
          <target state="new">Enter the Name (e.g. "NewOrdersBulkDb2"), App Service Plan, other properties, and then select <bpt id="p1">**</bpt>Create<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>In the Azure startboard, select the Logic app you just created, <bpt id="p1">**</bpt>Settings<ept id="p1">**</ept>, and then <bpt id="p2">**</bpt>Triggers and actions<ept id="p2">**</ept>.</source>
          <target state="new">In the Azure startboard, select the Logic app you just created, <bpt id="p1">**</bpt>Settings<ept id="p1">**</ept>, and then <bpt id="p2">**</bpt>Triggers and actions<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>In the Triggers and actions blade, select <bpt id="p1">**</bpt>Create from Scratch<ept id="p1">**</ept> within the Logic App Templates.</source>
          <target state="new">In the Triggers and actions blade, select <bpt id="p1">**</bpt>Create from Scratch<ept id="p1">**</ept> within the Logic App Templates.</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>In the API Apps panel, select <bpt id="p1">**</bpt>Recurrence<ept id="p1">**</ept>, set a frequency and interval, and then <bpt id="p2">**</bpt>checkmark<ept id="p2">**</ept>.</source>
          <target state="new">In the API Apps panel, select <bpt id="p1">**</bpt>Recurrence<ept id="p1">**</ept>, set a frequency and interval, and then <bpt id="p2">**</bpt>checkmark<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>In the API Apps panel, select <bpt id="p1">**</bpt>DB2 Connector<ept id="p1">**</ept>, expand the operations list to select <bpt id="p2">**</bpt>Bulk Insert into NEW<ept id="p2">**</ept>.</source>
          <target state="new">In the API Apps panel, select <bpt id="p1">**</bpt>DB2 Connector<ept id="p1">**</ept>, expand the operations list to select <bpt id="p2">**</bpt>Bulk Insert into NEW<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Enter the <bpt id="p1">**</bpt>rows<ept id="p1">**</ept> value as an array.</source>
          <target state="new">Enter the <bpt id="p1">**</bpt>rows<ept id="p1">**</ept> value as an array.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>For example, copy and paste the following:</source>
          <target state="new">For example, copy and paste the following:</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Select the <bpt id="p1">**</bpt>checkmark<ept id="p1">**</ept> to save the action settings, and then <bpt id="p2">**</bpt>Save<ept id="p2">**</ept>.</source>
          <target state="new">Select the <bpt id="p1">**</bpt>checkmark<ept id="p1">**</ept> to save the action settings, and then <bpt id="p2">**</bpt>Save<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The settings should look as follows:</source>
          <target state="new">The settings should look as follows:</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>All runs<ept id="p1">**</ept> list under <bpt id="p2">**</bpt>Operations<ept id="p2">**</ept>, click the first-listed item (most recent run).</source>
          <target state="new">In the <bpt id="p1">**</bpt>All runs<ept id="p1">**</ept> list under <bpt id="p2">**</bpt>Operations<ept id="p2">**</ept>, click the first-listed item (most recent run).</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Logic app run<ept id="p1">**</ept> blade, click the <bpt id="p2">**</bpt>ACTION<ept id="p2">**</ept> item.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Logic app run<ept id="p1">**</ept> blade, click the <bpt id="p2">**</bpt>ACTION<ept id="p2">**</ept> item.</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Logic app action<ept id="p1">**</ept> blade, click the <bpt id="p2">**</bpt>INPUTS LINK<ept id="p2">**</ept>.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Logic app action<ept id="p1">**</ept> blade, click the <bpt id="p2">**</bpt>INPUTS LINK<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The outputs should look as follows:</source>
          <target state="new">The outputs should look as follows:</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Logic app action<ept id="p1">**</ept> blade, click the <bpt id="p2">**</bpt>OUTPUTS LINK<ept id="p2">**</ept>.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Logic app action<ept id="p1">**</ept> blade, click the <bpt id="p2">**</bpt>OUTPUTS LINK<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The outputs should look as follows:</source>
          <target state="new">The outputs should look as follows:</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>What you need to know</source>
          <target state="new">What you need to know</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Connector truncates DB2 table names when forming Logic app action names.</source>
          <target state="new">Connector truncates DB2 table names when forming Logic app action names.</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>For example, the operation <bpt id="p1">**</bpt>Bulk Insert into NEWORDERS<ept id="p1">**</ept> is truncated to <bpt id="p2">**</bpt>Bulk Insert into NEW<ept id="p2">**</ept>.</source>
          <target state="new">For example, the operation <bpt id="p1">**</bpt>Bulk Insert into NEWORDERS<ept id="p1">**</ept> is truncated to <bpt id="p2">**</bpt>Bulk Insert into NEW<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>By omitting identity columns (e.g. ORDID), nullable columns (e.g. SHIPDATE), and columns with default values (e.g. ORDDATE, REQDATE, SHIPID, FREIGHT, SHIPCTRY), DB2 database generates values.</source>
          <target state="new">By omitting identity columns (e.g. ORDID), nullable columns (e.g. SHIPDATE), and columns with default values (e.g. ORDDATE, REQDATE, SHIPID, FREIGHT, SHIPCTRY), DB2 database generates values.</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>By specifying "today" and "tomorrow", DB2 Connector generates "CURRENT DATE" and "CURRENT DATE + 1 DAY" functions (e.g. REQDATE).</source>
          <target state="new">By specifying "today" and "tomorrow", DB2 Connector generates "CURRENT DATE" and "CURRENT DATE + 1 DAY" functions (e.g. REQDATE).</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Logic App with DB2 Connector Trigger to Read, Alter or Delete Data</source>
          <target state="new">Logic App with DB2 Connector Trigger to Read, Alter or Delete Data</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>You can define a Logic app trigger to poll and read data from a DB2 table using an API Poll Data composite operation.</source>
          <target state="new">You can define a Logic app trigger to poll and read data from a DB2 table using an API Poll Data composite operation.</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>For example, you can read one or more new customer order records, returning the records to the logic app.</source>
          <target state="new">For example, you can read one or more new customer order records, returning the records to the logic app.</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The DB2 Connection package/app settings should look as follows:</source>
          <target state="new">The DB2 Connection package/app settings should look as follows:</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>PollToCheckData | SELECT COUNT(\*) FROM NEWORDERS WHERE SHIPDATE IS NULL</source>
          <target state="new">PollToCheckData | SELECT COUNT(\*) FROM NEWORDERS WHERE SHIPDATE IS NULL</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>PollToReadData | SELECT \* FROM NEWORDERS WHERE SHIPDATE IS NULL FOR UPDATE</source>
          <target state="new">PollToReadData | SELECT \* FROM NEWORDERS WHERE SHIPDATE IS NULL FOR UPDATE</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>PollToAlterData |</source>
          <target state="new">PollToAlterData |</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Also, you can define a Logic app trigger to poll, read and alter data in a DB2 table using an API Poll Data composite operation.</source>
          <target state="new">Also, you can define a Logic app trigger to poll, read and alter data in a DB2 table using an API Poll Data composite operation.</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>For example, you can read one or more new customer order records, update the row values, returning the selected (before update) records to the logic app.</source>
          <target state="new">For example, you can read one or more new customer order records, update the row values, returning the selected (before update) records to the logic app.</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The DB2 Connection package/app settings should look as follows:</source>
          <target state="new">The DB2 Connection package/app settings should look as follows:</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>PollToCheckData | SELECT COUNT(\*) FROM NEWORDERS WHERE SHIPDATE IS NULL</source>
          <target state="new">PollToCheckData | SELECT COUNT(\*) FROM NEWORDERS WHERE SHIPDATE IS NULL</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>PollToReadData | SELECT \* FROM NEWORDERS WHERE SHIPDATE IS NULL FOR UPDATE</source>
          <target state="new">PollToReadData | SELECT \* FROM NEWORDERS WHERE SHIPDATE IS NULL FOR UPDATE</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>PollToAlterData | UPDATE NEWORDERS SET SHIPDATE = CURRENT DATE WHERE CURRENT OF &amp;lt;CURSOR&amp;gt;</source>
          <target state="new">PollToAlterData | UPDATE NEWORDERS SET SHIPDATE = CURRENT DATE WHERE CURRENT OF &amp;lt;CURSOR&amp;gt;</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Further, you can define a Logic app trigger to poll, read and remove data from a DB2 table using an API Poll Data composite operation.</source>
          <target state="new">Further, you can define a Logic app trigger to poll, read and remove data from a DB2 table using an API Poll Data composite operation.</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>For example, you can read one or more new customer order records, delete the rows, returning the selected (before delete) records to the logic app.</source>
          <target state="new">For example, you can read one or more new customer order records, delete the rows, returning the selected (before delete) records to the logic app.</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The DB2 Connection package/app settings should look as follows:</source>
          <target state="new">The DB2 Connection package/app settings should look as follows:</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>PollToCheckData | SELECT COUNT(\*) FROM NEWORDERS WHERE SHIPDATE IS NULL</source>
          <target state="new">PollToCheckData | SELECT COUNT(\*) FROM NEWORDERS WHERE SHIPDATE IS NULL</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>PollToReadData | SELECT \* FROM NEWORDERS WHERE SHIPDATE IS NULL FOR UPDATE</source>
          <target state="new">PollToReadData | SELECT \* FROM NEWORDERS WHERE SHIPDATE IS NULL FOR UPDATE</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>PollToAlterData | DELETE NEWORDERS WHERE CURRENT OF &amp;lt;CURSOR&amp;gt;</source>
          <target state="new">PollToAlterData | DELETE NEWORDERS WHERE CURRENT OF &amp;lt;CURSOR&amp;gt;</target>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>In this example, Logic app will poll, read, update, and then re-read data in the DB2 table.</source>
          <target state="new">In this example, Logic app will poll, read, update, and then re-read data in the DB2 table.</target>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>In the Azure startboard, select <bpt id="p1">**</bpt>+<ept id="p1">**</ept> (plus sign), <bpt id="p2">**</bpt>Web + Mobile<ept id="p2">**</ept>, and then <bpt id="p3">**</bpt>Logic App<ept id="p3">**</ept>.</source>
          <target state="new">In the Azure startboard, select <bpt id="p1">**</bpt>+<ept id="p1">**</ept> (plus sign), <bpt id="p2">**</bpt>Web + Mobile<ept id="p2">**</ept>, and then <bpt id="p3">**</bpt>Logic App<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Enter the Name (e.g. "ShipOrdersDb2"), App Service Plan, other properties, and then select <bpt id="p1">**</bpt>Create<ept id="p1">**</ept>.</source>
          <target state="new">Enter the Name (e.g. "ShipOrdersDb2"), App Service Plan, other properties, and then select <bpt id="p1">**</bpt>Create<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>In the Azure startboard, select the Logic app you just created, <bpt id="p1">**</bpt>Settings<ept id="p1">**</ept>, and then <bpt id="p2">**</bpt>Triggers and actions<ept id="p2">**</ept>.</source>
          <target state="new">In the Azure startboard, select the Logic app you just created, <bpt id="p1">**</bpt>Settings<ept id="p1">**</ept>, and then <bpt id="p2">**</bpt>Triggers and actions<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>In the Triggers and actions blade, select <bpt id="p1">**</bpt>Create from Scratch<ept id="p1">**</ept> within the Logic App Templates.</source>
          <target state="new">In the Triggers and actions blade, select <bpt id="p1">**</bpt>Create from Scratch<ept id="p1">**</ept> within the Logic App Templates.</target>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>In the API Apps panel, select <bpt id="p1">**</bpt>DB2 Connector<ept id="p1">**</ept>, set a frequency and interval, and then <bpt id="p2">**</bpt>checkmark<ept id="p2">**</ept>.</source>
          <target state="new">In the API Apps panel, select <bpt id="p1">**</bpt>DB2 Connector<ept id="p1">**</ept>, set a frequency and interval, and then <bpt id="p2">**</bpt>checkmark<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>In the API Apps panel, select <bpt id="p1">**</bpt>DB2 Connector<ept id="p1">**</ept>, expand the operations list to select <bpt id="p2">**</bpt>Select from NEWORDERS<ept id="p2">**</ept>.</source>
          <target state="new">In the API Apps panel, select <bpt id="p1">**</bpt>DB2 Connector<ept id="p1">**</ept>, expand the operations list to select <bpt id="p2">**</bpt>Select from NEWORDERS<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Select the <bpt id="p1">**</bpt>checkmark<ept id="p1">**</ept> to save the action settings, and then <bpt id="p2">**</bpt>Save<ept id="p2">**</ept>.</source>
          <target state="new">Select the <bpt id="p1">**</bpt>checkmark<ept id="p1">**</ept> to save the action settings, and then <bpt id="p2">**</bpt>Save<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The settings should look as follows:</source>
          <target state="new">The settings should look as follows:</target>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Click to close the <bpt id="p1">**</bpt>Triggers and actions<ept id="p1">**</ept> blade, and then click to close the <bpt id="p2">**</bpt>Settings<ept id="p2">**</ept> blade.</source>
          <target state="new">Click to close the <bpt id="p1">**</bpt>Triggers and actions<ept id="p1">**</ept> blade, and then click to close the <bpt id="p2">**</bpt>Settings<ept id="p2">**</ept> blade.</target>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>All runs<ept id="p1">**</ept> list under <bpt id="p2">**</bpt>Operations<ept id="p2">**</ept>, click the first-listed item (most recent run).</source>
          <target state="new">In the <bpt id="p1">**</bpt>All runs<ept id="p1">**</ept> list under <bpt id="p2">**</bpt>Operations<ept id="p2">**</ept>, click the first-listed item (most recent run).</target>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Logic app run<ept id="p1">**</ept> blade, click the <bpt id="p2">**</bpt>ACTION<ept id="p2">**</ept> item.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Logic app run<ept id="p1">**</ept> blade, click the <bpt id="p2">**</bpt>ACTION<ept id="p2">**</ept> item.</target>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Logic app action<ept id="p1">**</ept> blade, click the <bpt id="p2">**</bpt>OUTPUTS LINK<ept id="p2">**</ept>.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Logic app action<ept id="p1">**</ept> blade, click the <bpt id="p2">**</bpt>OUTPUTS LINK<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>The outputs should look as follows:</source>
          <target state="new">The outputs should look as follows:</target>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Logic App with DB2 Connector Action to Remove Data</source>
          <target state="new">Logic App with DB2 Connector Action to Remove Data</target>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>You can define a Logic app action to remove data from a DB2 table using an API Delete or Post to Entity OData operation.</source>
          <target state="new">You can define a Logic app action to remove data from a DB2 table using an API Delete or Post to Entity OData operation.</target>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>For example, you can insert a new customer order record, by processing a SQL INSERT statement against a table defined with an identity column, returning the identity value or the rows affected to the Logic app (SELECT ORDID FROM FINAL TABLE (INSERT INTO NWIND.NEWORDERS (CUSTID,SHIPNAME,SHIPADDR,SHIPCITY,SHIPREG,SHIPZIP) VALUES (?,?,?,?,?,?))).</source>
          <target state="new">For example, you can insert a new customer order record, by processing a SQL INSERT statement against a table defined with an identity column, returning the identity value or the rows affected to the Logic app (SELECT ORDID FROM FINAL TABLE (INSERT INTO NWIND.NEWORDERS (CUSTID,SHIPNAME,SHIPADDR,SHIPCITY,SHIPREG,SHIPZIP) VALUES (?,?,?,?,?,?))).</target>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Create Logic App using DB2 Connector to Remove Data</source>
          <target state="new">Create Logic App using DB2 Connector to Remove Data</target>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>You can create a new Logic app from within the Azure Marketplace, and then use the DB2 Connector as an action to remove customer orders.</source>
          <target state="new">You can create a new Logic app from within the Azure Marketplace, and then use the DB2 Connector as an action to remove customer orders.</target>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>For example, you can use the DB2 Connector conditional Delete operation to process a SQL DELETE statement (DELETE FROM NEWORDERS WHERE ORDID &gt;= 10000).</source>
          <target state="new">For example, you can use the DB2 Connector conditional Delete operation to process a SQL DELETE statement (DELETE FROM NEWORDERS WHERE ORDID &gt;= 10000).</target>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>In the hub menu of the Azure <bpt id="p1">**</bpt>Start<ept id="p1">**</ept> board, click <bpt id="p2">**</bpt>+<ept id="p2">**</ept> (plus sign), click <bpt id="p3">**</bpt>Web + Mobile<ept id="p3">**</ept>, and then click <bpt id="p4">**</bpt>Logic App<ept id="p4">**</ept>.</source>
          <target state="new">In the hub menu of the Azure <bpt id="p1">**</bpt>Start<ept id="p1">**</ept> board, click <bpt id="p2">**</bpt>+<ept id="p2">**</ept> (plus sign), click <bpt id="p3">**</bpt>Web + Mobile<ept id="p3">**</ept>, and then click <bpt id="p4">**</bpt>Logic App<ept id="p4">**</ept>.</target>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Create logic app<ept id="p1">**</ept> blade, type a <bpt id="p2">**</bpt>Name<ept id="p2">**</ept>, for example <bpt id="p3">**</bpt>RemoveOrdersDb2<ept id="p3">**</ept>.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Create logic app<ept id="p1">**</ept> blade, type a <bpt id="p2">**</bpt>Name<ept id="p2">**</ept>, for example <bpt id="p3">**</bpt>RemoveOrdersDb2<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Select or define values for the other settings (e.g. service plan, resource group).</source>
          <target state="new">Select or define values for the other settings (e.g. service plan, resource group).</target>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>The settings should look as follows.</source>
          <target state="new">The settings should look as follows.</target>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Create<ept id="p1">**</ept>:</source>
          <target state="new">Click <bpt id="p1">**</bpt>Create<ept id="p1">**</ept>:</target>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Settings<ept id="p1">**</ept> blade, click <bpt id="p2">**</bpt>Triggers and actions<ept id="p2">**</ept>.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Settings<ept id="p1">**</ept> blade, click <bpt id="p2">**</bpt>Triggers and actions<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Triggers and actions<ept id="p1">**</ept> blade, in the <bpt id="p2">**</bpt>Logic App Templates<ept id="p2">**</ept> list, click <bpt id="p3">**</bpt>Create from Scratch<ept id="p3">**</ept>.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Triggers and actions<ept id="p1">**</ept> blade, in the <bpt id="p2">**</bpt>Logic App Templates<ept id="p2">**</ept> list, click <bpt id="p3">**</bpt>Create from Scratch<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Triggers and actions<ept id="p1">**</ept> blade, in the <bpt id="p2">**</bpt>API Apps<ept id="p2">**</ept> panel, within the resource group, click <bpt id="p3">**</bpt>Recurrence<ept id="p3">**</ept>.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Triggers and actions<ept id="p1">**</ept> blade, in the <bpt id="p2">**</bpt>API Apps<ept id="p2">**</ept> panel, within the resource group, click <bpt id="p3">**</bpt>Recurrence<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>On the Logic app design surface, click the <bpt id="p1">**</bpt>Recurrence<ept id="p1">**</ept> item, set a <bpt id="p2">**</bpt>Frequency<ept id="p2">**</ept> and <bpt id="p3">**</bpt>Interval<ept id="p3">**</ept>, for example <bpt id="p4">**</bpt>Days<ept id="p4">**</ept> and <bpt id="p5">**</bpt>1<ept id="p5">**</ept>, and then click the <bpt id="p6">**</bpt>checkmark<ept id="p6">**</ept> to save the recurrence item settings.</source>
          <target state="new">On the Logic app design surface, click the <bpt id="p1">**</bpt>Recurrence<ept id="p1">**</ept> item, set a <bpt id="p2">**</bpt>Frequency<ept id="p2">**</ept> and <bpt id="p3">**</bpt>Interval<ept id="p3">**</ept>, for example <bpt id="p4">**</bpt>Days<ept id="p4">**</ept> and <bpt id="p5">**</bpt>1<ept id="p5">**</ept>, and then click the <bpt id="p6">**</bpt>checkmark<ept id="p6">**</ept> to save the recurrence item settings.</target>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Triggers and actions<ept id="p1">**</ept> blade, in the <bpt id="p2">**</bpt>API Apps<ept id="p2">**</ept> panel, within the resource group, click <bpt id="p3">**</bpt>DB2 Connector<ept id="p3">**</ept>.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Triggers and actions<ept id="p1">**</ept> blade, in the <bpt id="p2">**</bpt>API Apps<ept id="p2">**</ept> panel, within the resource group, click <bpt id="p3">**</bpt>DB2 Connector<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>On the Logic app design surface, click the <bpt id="p1">**</bpt>DB2 Connector<ept id="p1">**</ept> action item, click the ellipses (<bpt id="p2">**</bpt>...<ept id="p2">**</ept>) to expand the operations list, and then click <bpt id="p3">**</bpt>Conditional delete from N<ept id="p3">**</ept>.</source>
          <target state="new">On the Logic app design surface, click the <bpt id="p1">**</bpt>DB2 Connector<ept id="p1">**</ept> action item, click the ellipses (<bpt id="p2">**</bpt>...<ept id="p2">**</ept>) to expand the operations list, and then click <bpt id="p3">**</bpt>Conditional delete from N<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>On the DB2 Connector action item, type <bpt id="p1">**</bpt>ORDID ge 10000<ept id="p1">**</ept> for an <bpt id="p2">**</bpt>expression that identifies a subset of entries<ept id="p2">**</ept>.</source>
          <target state="new">On the DB2 Connector action item, type <bpt id="p1">**</bpt>ORDID ge 10000<ept id="p1">**</ept> for an <bpt id="p2">**</bpt>expression that identifies a subset of entries<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>checkmark<ept id="p1">**</ept> to save the action settings, and then click <bpt id="p2">**</bpt>Save<ept id="p2">**</ept>.</source>
          <target state="new">Click the <bpt id="p1">**</bpt>checkmark<ept id="p1">**</ept> to save the action settings, and then click <bpt id="p2">**</bpt>Save<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>The settings should look as follows:</source>
          <target state="new">The settings should look as follows:</target>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Click to close the <bpt id="p1">**</bpt>Triggers and actions<ept id="p1">**</ept> blade, and then click to close the <bpt id="p2">**</bpt>Settings<ept id="p2">**</ept> blade.</source>
          <target state="new">Click to close the <bpt id="p1">**</bpt>Triggers and actions<ept id="p1">**</ept> blade, and then click to close the <bpt id="p2">**</bpt>Settings<ept id="p2">**</ept> blade.</target>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>All runs<ept id="p1">**</ept> list under <bpt id="p2">**</bpt>Operations<ept id="p2">**</ept>, click the first-listed item (most recent run).</source>
          <target state="new">In the <bpt id="p1">**</bpt>All runs<ept id="p1">**</ept> list under <bpt id="p2">**</bpt>Operations<ept id="p2">**</ept>, click the first-listed item (most recent run).</target>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Logic app run<ept id="p1">**</ept> blade, click the <bpt id="p2">**</bpt>ACTION<ept id="p2">**</ept> item.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Logic app run<ept id="p1">**</ept> blade, click the <bpt id="p2">**</bpt>ACTION<ept id="p2">**</ept> item.</target>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Logic app action<ept id="p1">**</ept> blade, click the <bpt id="p2">**</bpt>OUTPUTS LINK<ept id="p2">**</ept>.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Logic app action<ept id="p1">**</ept> blade, click the <bpt id="p2">**</bpt>OUTPUTS LINK<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>The outputs should look as follows:</source>
          <target state="new">The outputs should look as follows:</target>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note:<ept id="p1">**</ept> Logic app designer truncates table names.</source>
          <target state="new"><bpt id="p1">**</bpt>Note:<ept id="p1">**</ept> Logic app designer truncates table names.</target>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>For example, the operation <bpt id="p1">**</bpt>Conditional delete from NEWORDERS<ept id="p1">**</ept> is truncated to <bpt id="p2">**</bpt>Conditional delete from N<ept id="p2">**</ept>.</source>
          <target state="new">For example, the operation <bpt id="p1">**</bpt>Conditional delete from NEWORDERS<ept id="p1">**</ept> is truncated to <bpt id="p2">**</bpt>Conditional delete from N<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.TIP]</ph> Use the following SQL statements to create the sample table and stored procedures.</source>
          <target state="new"><ph id="ph1">[AZURE.TIP]</ph> Use the following SQL statements to create the sample table and stored procedures.</target>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>You can create the sample NEWORDERS table using the following DB2 SQL DDL statements:</source>
          <target state="new">You can create the sample NEWORDERS table using the following DB2 SQL DDL statements:</target>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>You can create the sample SPOERID stored procedure using the following DB2 DDL statement:</source>
          <target state="new">You can create the sample SPOERID stored procedure using the following DB2 DDL statement:</target>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Hybrid Configuration (Optional)</source>
          <target state="new">Hybrid Configuration (Optional)</target>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> This step is required only if you are using DB2 Connector on-premises behind your firewall.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> This step is required only if you are using DB2 Connector on-premises behind your firewall.</target>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>App Service uses the Hybrid Configuration Manager to connect securely to your on-premises system.</source>
          <target state="new">App Service uses the Hybrid Configuration Manager to connect securely to your on-premises system.</target>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>If Connector uses an on-premises IBM DB2 Server for Windows, the Hybrid Connection Manager is required.</source>
          <target state="new">If Connector uses an on-premises IBM DB2 Server for Windows, the Hybrid Connection Manager is required.</target>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Using the Hybrid Connection Manager<ept id="p1">](app-service-logic-hybrid-connection-manager.md)</ept>.</source>
          <target state="new">See <bpt id="p1">[</bpt>Using the Hybrid Connection Manager<ept id="p1">](app-service-logic-hybrid-connection-manager.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Do more with your Connector</source>
          <target state="new">Do more with your Connector</target>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Now that the connector is created, you can add it to a business workflow using a Logic App.</source>
          <target state="new">Now that the connector is created, you can add it to a business workflow using a Logic App.</target>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>What are Logic Apps?<ept id="p1">](app-service-logic-what-are-logic-apps.md)</ept>.</source>
          <target state="new">See <bpt id="p1">[</bpt>What are Logic Apps?<ept id="p1">](app-service-logic-what-are-logic-apps.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Create the API Apps using REST APIs.</source>
          <target state="new">Create the API Apps using REST APIs.</target>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Connectors and API Apps Reference<ept id="p1">](http://go.microsoft.com/fwlink/p/?LinkId=529766)</ept>.</source>
          <target state="new">See <bpt id="p1">[</bpt>Connectors and API Apps Reference<ept id="p1">](http://go.microsoft.com/fwlink/p/?LinkId=529766)</ept>.</target>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>You can also review performance statistics and control security to the connector.</source>
          <target state="new">You can also review performance statistics and control security to the connector.</target>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Manage and Monitor your built-in API Apps and Connectors<ept id="p1">](app-service-logic-monitor-your-connectors.md)</ept>.</source>
          <target state="new">See <bpt id="p1">[</bpt>Manage and Monitor your built-in API Apps and Connectors<ept id="p1">](app-service-logic-monitor-your-connectors.md)</ept>.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>