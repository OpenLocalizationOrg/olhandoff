{
  "nodes": [
    {
      "pos": [
        27,
        127
      ],
      "content": "Get Started with a Visual Studio .NET mobile services project (Connected Services) | Microsoft Azure"
    },
    {
      "pos": [
        146,
        223
      ],
      "content": "How to get started with Azure Mobile Services in a Visual Studio .NET project"
    },
    {
      "pos": [
        546,
        598
      ],
      "content": "Getting Started with Mobile Services (.NET Projects)"
    },
    {
      "pos": [
        703,
        835
      ],
      "content": "The first step you need to do in order to follow the code in these examples depends on what type of mobile service you connected to."
    },
    {
      "pos": [
        839,
        1128
      ],
      "content": "For a JavaScript backend mobile service, create a table called TodoItem.  To create a table,  locate the mobile service under the Azure node in Server Explorer, right-click the mobile service's node to open the context menu, and choose <bpt id=\"p1\">**</bpt>Create Table<ept id=\"p1\">**</ept>. Enter \"TodoItem\" as the table name.",
      "nodes": [
        {
          "content": "For a JavaScript backend mobile service, create a table called TodoItem.",
          "pos": [
            0,
            72
          ]
        },
        {
          "content": "To create a table,  locate the mobile service under the Azure node in Server Explorer, right-click the mobile service's node to open the context menu, and choose <bpt id=\"p1\">**</bpt>Create Table<ept id=\"p1\">**</ept>.",
          "pos": [
            74,
            291
          ]
        },
        {
          "content": "Enter \"TodoItem\" as the table name.",
          "pos": [
            292,
            327
          ]
        }
      ]
    },
    {
      "pos": [
        1132,
        1486
      ],
      "content": "If you have a .NET backend mobile service, there's already a TodoItem table in the default project template that Visual Studio created for you, but you need to publish it to Azure. To publish it, open the context menu for the mobile service project in Solution Explorer, and choose <bpt id=\"p2\">**</bpt>Publish Web<ept id=\"p2\">**</ept>. Accept the defaults, and choose the <bpt id=\"p3\">**</bpt>Publish<ept id=\"p3\">**</ept><ph id=\"ph3\"/> button.",
      "nodes": [
        {
          "content": "If you have a .NET backend mobile service, there's already a TodoItem table in the default project template that Visual Studio created for you, but you need to publish it to Azure.",
          "pos": [
            0,
            180
          ]
        },
        {
          "content": "To publish it, open the context menu for the mobile service project in Solution Explorer, and choose <bpt id=\"p2\">**</bpt>Publish Web<ept id=\"p2\">**</ept>.",
          "pos": [
            181,
            336
          ]
        },
        {
          "content": "Accept the defaults, and choose the <bpt id=\"p3\">**</bpt>Publish<ept id=\"p3\">**</ept><ph id=\"ph3\"/> button.",
          "pos": [
            337,
            444
          ]
        }
      ]
    },
    {
      "pos": [
        1490,
        1516
      ],
      "content": "Get a reference to a table"
    },
    {
      "pos": [
        1518,
        1828
      ],
      "content": "The following code creates a reference to a table (<ph id=\"ph4\">`todoTable`</ph>) that contains data for a TodoItem, which you can use in subsequent operations to read and update the data table. You'll need the TodoItem class with attributes set up to interpet the JSON that the mobile service sends in response to your queries.",
      "nodes": [
        {
          "content": "The following code creates a reference to a table (<ph id=\"ph4\">`todoTable`</ph>) that contains data for a TodoItem, which you can use in subsequent operations to read and update the data table.",
          "pos": [
            0,
            194
          ]
        },
        {
          "content": "You'll need the TodoItem class with attributes set up to interpet the JSON that the mobile service sends in response to your queries.",
          "pos": [
            195,
            328
          ]
        }
      ]
    },
    {
      "pos": [
        2176,
        2491
      ],
      "content": "This code works if your table has permissions set to <bpt id=\"p4\">**</bpt>Anybody with an Application Key<ept id=\"p4\">**</ept>. If you change the permissions to secure your mobile service, you'll need to add user authentication support. See <bpt id=\"p5\">[</bpt>Get Started with Authentication<ept id=\"p5\">](mobile-services-dotnet-backend-windows-universal-dotnet-get-started-users.md)</ept>.",
      "nodes": [
        {
          "content": "This code works if your table has permissions set to <bpt id=\"p4\">**</bpt>Anybody with an Application Key<ept id=\"p4\">**</ept>.",
          "pos": [
            0,
            127
          ]
        },
        {
          "content": "If you change the permissions to secure your mobile service, you'll need to add user authentication support.",
          "pos": [
            128,
            236
          ]
        },
        {
          "content": "See <bpt id=\"p5\">[</bpt>Get Started with Authentication<ept id=\"p5\">](mobile-services-dotnet-backend-windows-universal-dotnet-get-started-users.md)</ept>.",
          "pos": [
            237,
            391
          ]
        }
      ]
    },
    {
      "pos": [
        2495,
        2511
      ],
      "content": "Add a table item"
    },
    {
      "pos": [
        2513,
        2549
      ],
      "content": "Insert a new item into a data table."
    },
    {
      "pos": [
        2688,
        2709
      ],
      "content": "Read or query a table"
    },
    {
      "pos": [
        2711,
        2911
      ],
      "content": "The following code queries a table for all items. Note that it returns only the first page of data, which by default is 50 items. You can pass the page size you want, since it's an optional parameter.",
      "nodes": [
        {
          "content": "The following code queries a table for all items.",
          "pos": [
            0,
            49
          ]
        },
        {
          "content": "Note that it returns only the first page of data, which by default is 50 items.",
          "pos": [
            50,
            129
          ]
        },
        {
          "content": "You can pass the page size you want, since it's an optional parameter.",
          "pos": [
            130,
            200
          ]
        }
      ]
    },
    {
      "pos": [
        3144,
        3163
      ],
      "content": "Update a table item"
    },
    {
      "pos": [
        3165,
        3251
      ],
      "content": "Update a row in a data table. The parameter item is the TodoItem object to be updated.",
      "nodes": [
        {
          "content": "Update a row in a data table.",
          "pos": [
            0,
            29
          ]
        },
        {
          "content": "The parameter item is the TodoItem object to be updated.",
          "pos": [
            30,
            86
          ]
        }
      ]
    },
    {
      "pos": [
        3295,
        3314
      ],
      "content": "Delete a table item"
    },
    {
      "pos": [
        3316,
        3402
      ],
      "content": "Delete a row in the database. The parameter item is the TodoItem object to be deleted.",
      "nodes": [
        {
          "content": "Delete a row in the database.",
          "pos": [
            0,
            29
          ]
        },
        {
          "content": "The parameter item is the TodoItem object to be deleted.",
          "pos": [
            30,
            86
          ]
        }
      ]
    },
    {
      "pos": [
        3445,
        3548
      ],
      "content": "<bpt id=\"p6\">[</bpt>Learn more about mobile services<ept id=\"p6\">](https://azure.microsoft.com/documentation/services/mobile-services/)</ept>"
    }
  ],
  "content": "<properties\n    pageTitle=\"Get Started with a Visual Studio .NET mobile services project (Connected Services) | Microsoft Azure\"\n    description=\"How to get started with Azure Mobile Services in a Visual Studio .NET project\"\n    services=\"mobile-services\"\n    documentationCenter=\"\"\n    authors=\"mlhoop\"\n    manager=\"douge\"\n    editor=\"\"/>\n\n<tags\n    ms.service=\"mobile-services\"\n    ms.workload=\"mobile\"\n    ms.tgt_pltfrm=\"vs-getting-started\"\n    ms.devlang=\"dotnet\"\n    ms.topic=\"article\"\n    ms.date=\"01/05/2016\"\n    ms.author=\"mlearned\"/>\n\n# Getting Started with Mobile Services (.NET Projects)\n\n[AZURE.INCLUDE [mobile-service-note-mobile-apps](../../includes/mobile-services-note-mobile-apps.md)]\n\nThe first step you need to do in order to follow the code in these examples depends on what type of mobile service you connected to.\n\n- For a JavaScript backend mobile service, create a table called TodoItem.  To create a table,  locate the mobile service under the Azure node in Server Explorer, right-click the mobile service's node to open the context menu, and choose **Create Table**. Enter \"TodoItem\" as the table name.\n\n- If you have a .NET backend mobile service, there's already a TodoItem table in the default project template that Visual Studio created for you, but you need to publish it to Azure. To publish it, open the context menu for the mobile service project in Solution Explorer, and choose **Publish Web**. Accept the defaults, and choose the **Publish** button.\n\n##Get a reference to a table\n\nThe following code creates a reference to a table (`todoTable`) that contains data for a TodoItem, which you can use in subsequent operations to read and update the data table. You'll need the TodoItem class with attributes set up to interpet the JSON that the mobile service sends in response to your queries.\n\n    public class TodoItem\n    {\n        public string Id { get; set; }\n\n        [JsonProperty(PropertyName = \"text\")]\n        public string Text { get; set; }\n\n        [JsonProperty(PropertyName = \"complete\")]\n        public bool Complete { get; set; }\n    }\n\n    IMobileServiceTable<TodoItem> todoTable = App.<yourClient>.GetTable<TodoItem>();\n\nThis code works if your table has permissions set to **Anybody with an Application Key**. If you change the permissions to secure your mobile service, you'll need to add user authentication support. See [Get Started with Authentication](mobile-services-dotnet-backend-windows-universal-dotnet-get-started-users.md).\n\n##Add a table item\n\nInsert a new item into a data table.\n\n    TodoItem todoItem = new TodoItem() { Text = \"My first to do item\", Complete = false };\n    await todoTable.InsertAsync(todoItem);\n\n##Read or query a table\n\nThe following code queries a table for all items. Note that it returns only the first page of data, which by default is 50 items. You can pass the page size you want, since it's an optional parameter.\n\n    List<TodoItem> items;\n    try\n    {\n        // Query that returns all items.\n        items = await todoTable.ToListAsync();\n    }\n    catch (MobileServiceInvalidOperationException e)\n    {\n        // handle exception\n    }\n\n\n##Update a table item\n\nUpdate a row in a data table. The parameter item is the TodoItem object to be updated.\n\n    await todoTable.UpdateAsync(item);\n\n##Delete a table item\n\nDelete a row in the database. The parameter item is the TodoItem object to be deleted.\n\n    await todoTable.DeleteAsync(item);\n\n\n[Learn more about mobile services](https://azure.microsoft.com/documentation/services/mobile-services/)\n"
}