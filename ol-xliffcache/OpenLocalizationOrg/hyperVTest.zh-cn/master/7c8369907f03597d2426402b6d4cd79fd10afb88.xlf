<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-cn" original="foo.file" tool-id="b493d97a-2081-4466-833b-d0c7607904f5" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="b493d97a-2081-4466-833b-d0c7607904f5" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
      <olfilehash xmlns="">7c8369907f03597d2426402b6d4cd79fd10afb88</olfilehash>
    </header>
    <body>
      <group id="bf6bbbb4-f0b8-4753-beba-c03890fc8ee5">
        <trans-unit id="53dd19a0-070c-429a-8b7e-2ae9b06cfa1e" xml:space="preserve">
          <source>ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9</source>
          <target state="new">ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9</target>
        </trans-unit>
        <trans-unit id="d95d32fa-773b-4ca5-a1bc-b1143305a070" xml:space="preserve">
          <source>title: PowerShell Snippets</source>
          <target state="new">title: PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="05782512-a811-4559-b755-ba7ae9f27040" xml:space="preserve">
          <source>PowerShell Snippets</source>
          <target state="new">PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="41eca7be-ddba-4709-976d-c8d6fe68ab62" xml:space="preserve">
          <source>12-Nov update.Adding this sentence to validate the bug 451132 result.</source>
          <target state="new">12-Nov update.Adding this sentence to validate the bug 451132 result.</target>
        </trans-unit>
        <trans-unit id="34b0dfba-bb7f-4cf0-bc26-b78b34d92b6c" xml:space="preserve">
          <source>PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</source>
          <target state="new">PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</target>
        </trans-unit>
        <trans-unit id="3f695438-fd15-4289-ae39-7213382ae486" xml:space="preserve">
          <source>All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</source>
          <target state="new">All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</target>
        </trans-unit>
        <trans-unit id="f7e86333-c69e-4522-8a74-091e9a3ddfb4" xml:space="preserve">
          <source>If you aren't sure if you have the right permissions, type <bpt id="58a87092-1a61-46e0-ae1a-274d807486c2">&lt;code&gt;</bpt>Get-VM<ept id="58a87092-1a61-46e0-ae1a-274d807486c2">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</source>
          <target state="new">If you aren't sure if you have the right permissions, type <bpt id="58a87092-1a61-46e0-ae1a-274d807486c2">&lt;code&gt;</bpt>Get-VM<ept id="58a87092-1a61-46e0-ae1a-274d807486c2">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</target>
        </trans-unit>
        <trans-unit id="c1004594-69c8-4465-8683-1acb1c0ae454" xml:space="preserve">
          <source>PowerShell Direct tools</source>
          <target state="new">PowerShell Direct tools</target>
        </trans-unit>
        <trans-unit id="efaf76e9-12ea-4c8b-9a48-ac82d1f66fa4" xml:space="preserve">
          <source>All of the scripts and snippets in this section will rely on the following basics.</source>
          <target state="new">All of the scripts and snippets in this section will rely on the following basics.</target>
        </trans-unit>
        <trans-unit id="d7f3c69a-3fd0-48e2-94c0-1fdfa31835be" xml:space="preserve">
          <source><bpt id="2acb610a-af31-4bfb-81bf-43d49422d281">&lt;strong&gt;</bpt>Requirements<ept id="2acb610a-af31-4bfb-81bf-43d49422d281">&lt;/strong&gt;</ept> :</source>
          <target state="new"><bpt id="2acb610a-af31-4bfb-81bf-43d49422d281">&lt;strong&gt;</bpt>Requirements<ept id="2acb610a-af31-4bfb-81bf-43d49422d281">&lt;/strong&gt;</ept> :</target>
        </trans-unit>
        <trans-unit id="94b6e27c-1f00-4d4d-a4a2-291452978720" xml:space="preserve">
          <source>PowerShell Direct.</source>
          <target state="new">PowerShell Direct.</target>
        </trans-unit>
        <trans-unit id="b4ed54f1-ffcf-4735-901b-5d5eb63b22f8" xml:space="preserve">
          <source>Windows 10 guest and host OS.</source>
          <target state="new">Windows 10 guest and host OS.</target>
        </trans-unit>
        <trans-unit id="188e3763-8d61-4201-b138-f576b24cc0b7" xml:space="preserve">
          <source><bpt id="de787592-2c28-4a36-a136-d44f79732c43">&lt;strong&gt;</bpt>Common Variables<ept id="de787592-2c28-4a36-a136-d44f79732c43">&lt;/strong&gt;</ept> :</source>
          <target state="new"><bpt id="de787592-2c28-4a36-a136-d44f79732c43">&lt;strong&gt;</bpt>Common Variables<ept id="de787592-2c28-4a36-a136-d44f79732c43">&lt;/strong&gt;</ept> :</target>
        </trans-unit>
        <trans-unit id="8bfe9096-536a-4ead-882f-34e9775a5773" xml:space="preserve">
          <source><bpt id="381e0661-4bc2-4e43-a758-7575c0821748">&lt;code&gt;</bpt>$VMName<ept id="381e0661-4bc2-4e43-a758-7575c0821748">&lt;/code&gt;</ept> -- this is a string with the VMName.</source>
          <target state="new"><bpt id="381e0661-4bc2-4e43-a758-7575c0821748">&lt;code&gt;</bpt>$VMName<ept id="381e0661-4bc2-4e43-a758-7575c0821748">&lt;/code&gt;</ept> -- this is a string with the VMName.</target>
        </trans-unit>
        <trans-unit id="f05438be-d5bf-40b4-82a9-13f5659e864b" xml:space="preserve">
          <source>See a list of available VMs with <bpt id="31386d3e-cce5-4074-be5e-91d7c75538c2">&lt;code&gt;</bpt>Get-VM<ept id="31386d3e-cce5-4074-be5e-91d7c75538c2">&lt;/code&gt;</ept></source>
          <target state="new">See a list of available VMs with <bpt id="31386d3e-cce5-4074-be5e-91d7c75538c2">&lt;code&gt;</bpt>Get-VM<ept id="31386d3e-cce5-4074-be5e-91d7c75538c2">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="52c5982c-6467-4730-8279-3d65fdd1d36e" xml:space="preserve">
          <source><bpt id="58a0e127-f310-42a5-98f6-924978d530f2">&lt;code&gt;</bpt>$cred<ept id="58a0e127-f310-42a5-98f6-924978d530f2">&lt;/code&gt;</ept> -- Credential for the guest OS.</source>
          <target state="new"><bpt id="58a0e127-f310-42a5-98f6-924978d530f2">&lt;code&gt;</bpt>$cred<ept id="58a0e127-f310-42a5-98f6-924978d530f2">&lt;/code&gt;</ept> -- Credential for the guest OS.</target>
        </trans-unit>
        <trans-unit id="22a13f36-262e-4bff-b18c-fe06977f6f45" xml:space="preserve">
          <source>Can be populated using <bpt id="033658b6-5d6b-4fc7-b484-c9704ec9a664">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="033658b6-5d6b-4fc7-b484-c9704ec9a664">&lt;/code&gt;</ept></source>
          <target state="new">Can be populated using <bpt id="033658b6-5d6b-4fc7-b484-c9704ec9a664">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="033658b6-5d6b-4fc7-b484-c9704ec9a664">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="8f747890-3044-430e-9173-96648d5a030b" xml:space="preserve">
          <source>Check if the guest has booted</source>
          <target state="new">Check if the guest has booted</target>
        </trans-unit>
        <trans-unit id="e5bdbf9d-d9a7-4560-ad52-72891ad687bd" xml:space="preserve">
          <source>Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</source>
          <target state="new">Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</target>
        </trans-unit>
        <trans-unit id="9ff8f3f1-930d-4c6a-9923-18cb846a098e" xml:space="preserve">
          <source>Use this command to check whether the guest has booted.</source>
          <target state="new">Use this command to check whether the guest has booted.</target>
        </trans-unit>
        <trans-unit id="3f73051b-5103-4c8c-a90f-329f57ad0b4e" xml:space="preserve">
          <source><bpt id="8a4ff96c-fff5-4c48-b4c1-a162b2318f57">&lt;strong&gt;</bpt>Outcome<ept id="8a4ff96c-fff5-4c48-b4c1-a162b2318f57">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="8a4ff96c-fff5-4c48-b4c1-a162b2318f57">&lt;strong&gt;</bpt>Outcome<ept id="8a4ff96c-fff5-4c48-b4c1-a162b2318f57">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="0ed6d41b-e6a8-4ec2-96ed-2b9228ef89bb" xml:space="preserve">
          <source>Prints a friendly message declaring the state of the guest OS.</source>
          <target state="new">Prints a friendly message declaring the state of the guest OS.</target>
        </trans-unit>
        <trans-unit id="74ac068b-49af-4fa0-8f17-8fe9aed8e564" xml:space="preserve">
          <source>Script locking until the guest has booted</source>
          <target state="new">Script locking until the guest has booted</target>
        </trans-unit>
        <trans-unit id="60525491-5e0c-431a-a588-dfcdde71b9c6" xml:space="preserve">
          <source>The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</source>
          <target state="new">The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</target>
        </trans-unit>
        <trans-unit id="9b8474ad-cc20-434a-8e5b-8e57f1be604f" xml:space="preserve">
          <source><bpt id="cd97ccc8-8751-45b1-a418-01eb6e943d71">&lt;strong&gt;</bpt>Outcome<ept id="cd97ccc8-8751-45b1-a418-01eb6e943d71">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="cd97ccc8-8751-45b1-a418-01eb6e943d71">&lt;strong&gt;</bpt>Outcome<ept id="cd97ccc8-8751-45b1-a418-01eb6e943d71">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="7e640371-7057-46de-bb6c-0043a864757b" xml:space="preserve">
          <source>Prints a friendly message and locks until the connection to the VM succeeds.</source>
          <target state="new">Prints a friendly message and locks until the connection to the VM succeeds.</target>
        </trans-unit>
        <trans-unit id="18049d58-e50e-4312-86f6-61a8f1bdd97f" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="98d796da-47ac-450b-ab4a-3ccb687d3cc6" xml:space="preserve">
          <source>Script locking until the guest has a network</source>
          <target state="new">Script locking until the guest has a network</target>
        </trans-unit>
        <trans-unit id="08ba8d1c-6416-4b5a-89f1-76babda333a1" xml:space="preserve">
          <source>With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</source>
          <target state="new">With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</target>
        </trans-unit>
        <trans-unit id="f8094db3-7360-49f7-8d5f-061237d0da8a" xml:space="preserve">
          <source><bpt id="95bb180d-58b5-488f-bfa1-e46d6502feb9">&lt;em&gt;</bpt>* Outcome *<ept id="95bb180d-58b5-488f-bfa1-e46d6502feb9">&lt;/em&gt;</ept></source>
          <target state="new"><bpt id="95bb180d-58b5-488f-bfa1-e46d6502feb9">&lt;em&gt;</bpt>* Outcome *<ept id="95bb180d-58b5-488f-bfa1-e46d6502feb9">&lt;/em&gt;</ept></target>
        </trans-unit>
        <trans-unit id="76143e52-9758-41aa-9d3e-353080991112" xml:space="preserve">
          <source>Locks until a DHCP lease is recieved.</source>
          <target state="new">Locks until a DHCP lease is recieved.</target>
        </trans-unit>
        <trans-unit id="6a6f1eb5-0336-4e6a-bb78-9922a3d76f09" xml:space="preserve">
          <source>Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</source>
          <target state="new">Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</target>
        </trans-unit>
        <trans-unit id="999dacab-1769-450c-93c0-14aa5abff8b2" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="ff8b048f-d3bf-4041-bb9a-845cd00ca719" xml:space="preserve">
          <source>Managing credentials with PowerShell</source>
          <target state="new">Managing credentials with PowerShell</target>
        </trans-unit>
        <trans-unit id="e1d913f0-a54b-4c70-aaa3-e9bcbc3bb5cd" xml:space="preserve">
          <source>Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</source>
          <target state="new">Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</target>
        </trans-unit>
        <trans-unit id="cb94fe86-37a5-4d00-8f66-d4f474be6913" xml:space="preserve">
          <source>There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</source>
          <target state="new">There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</target>
        </trans-unit>
        <trans-unit id="5af65e36-0978-4706-95f3-bd3f3eccff8d" xml:space="preserve">
          <source>The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</source>
          <target state="new">The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</target>
        </trans-unit>
        <trans-unit id="758b551f-624b-4105-aa13-c77784bb0449" xml:space="preserve">
          <source>This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</source>
          <target state="new">This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</target>
        </trans-unit>
        <trans-unit id="1d998a1c-2dfe-46fe-8b6d-28c1c84c6a2e" xml:space="preserve">
          <source>In this scenario you can just run <bpt id="f197ba39-bc39-4e1d-be73-e56858ea75b7">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="f197ba39-bc39-4e1d-be73-e56858ea75b7">&lt;/code&gt;</ept>.</source>
          <target state="new">In this scenario you can just run <bpt id="f197ba39-bc39-4e1d-be73-e56858ea75b7">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="f197ba39-bc39-4e1d-be73-e56858ea75b7">&lt;/code&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="af2692ac-8ece-4353-891f-5584ea8542b1" xml:space="preserve">
          <source>Let PowerShell prompt you for credentials</source>
          <target state="new">Let PowerShell prompt you for credentials</target>
        </trans-unit>
        <trans-unit id="3987e78a-9063-42a1-84a8-478b7f5afba0" xml:space="preserve">
          <source>If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</source>
          <target state="new">If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</target>
        </trans-unit>
        <trans-unit id="f56026d2-a788-4a3e-ac00-7316e2989238" xml:space="preserve">
          <source>Store credentials in a variable for reuse.</source>
          <target state="new">Store credentials in a variable for reuse.</target>
        </trans-unit>
        <trans-unit id="8589ee23-24f2-40e2-b97f-ac8545d56a83" xml:space="preserve">
          <source>Running a simple command like this:</source>
          <target state="new">Running a simple command like this:</target>
        </trans-unit>
        <trans-unit id="689a933d-0ae7-41df-96cc-6bbf99416afa" xml:space="preserve">
          <source>And then running something like this:</source>
          <target state="new">And then running something like this:</target>
        </trans-unit>
        <trans-unit id="6f575d51-7253-423f-bc01-827e32d3cab7" xml:space="preserve">
          <source>Will mean that you only get prompted once per script/PowerShell session for your credentials.</source>
          <target state="new">Will mean that you only get prompted once per script/PowerShell session for your credentials.</target>
        </trans-unit>
        <trans-unit id="11c44158-1fce-45cc-a7df-0d70f10e6731" xml:space="preserve">
          <source>Code your credentials into your scripts.</source>
          <target state="new">Code your credentials into your scripts.</target>
        </trans-unit>
        <trans-unit id="11956441-26ea-4c8f-b19a-7999e4c26041" xml:space="preserve">
          <source><bpt id="6ebf205a-af75-482c-887f-efa9173f49ee">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="6ebf205a-af75-482c-887f-efa9173f49ee">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="6ebf205a-af75-482c-887f-efa9173f49ee">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="6ebf205a-af75-482c-887f-efa9173f49ee">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="ec02d434-260a-4553-a258-2ad96be75acf" xml:space="preserve">
          <source>Warning:  _Do not do this in a production system.</source>
          <target state="new">Warning:  _Do not do this in a production system.</target>
        </trans-unit>
        <trans-unit id="047693da-646a-453f-9928-c4f77509de22" xml:space="preserve">
          <source>Do not do this with real passwords._</source>
          <target state="new">Do not do this with real passwords._</target>
        </trans-unit>
        <trans-unit id="3c7120e3-11aa-407d-a5f6-5d6ee4bd6725" xml:space="preserve">
          <source>You can hand craft a PSCredential object with some code like this:</source>
          <target state="new">You can hand craft a PSCredential object with some code like this:</target>
        </trans-unit>
        <trans-unit id="0b8a8cea-062c-4269-88c7-1b02457d2f4a" xml:space="preserve">
          <source>Grossly insecure - but useful for testing.</source>
          <target state="new">Grossly insecure - but useful for testing.</target>
        </trans-unit>
        <trans-unit id="8fd35426-f070-4f5c-87a1-5406b99f5d78" xml:space="preserve">
          <source>Now you get no prompts at all in this session.</source>
          <target state="new">Now you get no prompts at all in this session.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>