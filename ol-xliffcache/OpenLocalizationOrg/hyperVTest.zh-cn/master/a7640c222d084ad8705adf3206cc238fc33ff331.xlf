<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-cn" original="foo.file" tool-id="96e89113-2794-4c00-a1db-082c7b3222a4" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="96e89113-2794-4c00-a1db-082c7b3222a4" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
      <olfilehash xmlns="">a7640c222d084ad8705adf3206cc238fc33ff331</olfilehash>
    </header>
    <body>
      <group id="b4efacbf-2303-4bdb-8255-0d971021ad38">
        <trans-unit id="a6879df6-a125-4d5d-a8b0-8af3ae526423" xml:space="preserve">
          <source>ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9</source>
          <target state="new">ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9</target>
        </trans-unit>
        <trans-unit id="ba6601ac-9c40-4bab-814c-da3bd0183650" xml:space="preserve">
          <source>title: PowerShell Snippets</source>
          <target state="new">title: PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="d5358395-d59a-41bd-9af2-bb56fdadcfe9" xml:space="preserve">
          <source>PowerShell Snippets</source>
          <target state="new">PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="5e8ff689-b884-4402-89b4-97b2b2ca0d56" xml:space="preserve">
          <source>Adding this sentence to validate the bug 451132 result.</source>
          <target state="new">Adding this sentence to validate the bug 451132 result.</target>
        </trans-unit>
        <trans-unit id="e3d032a5-fea2-4099-a916-c41ae29f5165" xml:space="preserve">
          <source>PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</source>
          <target state="new">PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</target>
        </trans-unit>
        <trans-unit id="ae68ee5c-e2a0-4653-81c4-fafc563869ce" xml:space="preserve">
          <source>All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</source>
          <target state="new">All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</target>
        </trans-unit>
        <trans-unit id="13fd994c-9126-42a2-b737-cba4c376aa89" xml:space="preserve">
          <source>If you aren't sure if you have the right permissions, type <bpt id="d6dd1c5b-e8bd-4154-8aad-bd5f3881223f">&lt;code&gt;</bpt>Get-VM<ept id="d6dd1c5b-e8bd-4154-8aad-bd5f3881223f">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</source>
          <target state="new">If you aren't sure if you have the right permissions, type <bpt id="d6dd1c5b-e8bd-4154-8aad-bd5f3881223f">&lt;code&gt;</bpt>Get-VM<ept id="d6dd1c5b-e8bd-4154-8aad-bd5f3881223f">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</target>
        </trans-unit>
        <trans-unit id="129696a9-e1fb-4e23-b328-ca5401325b17" xml:space="preserve">
          <source>PowerShell Direct tools</source>
          <target state="new">PowerShell Direct tools</target>
        </trans-unit>
        <trans-unit id="18f20e78-11e7-45a6-b714-c1a1e4a43878" xml:space="preserve">
          <source>All of the scripts and snippets in this section will rely on the following basics.</source>
          <target state="new">All of the scripts and snippets in this section will rely on the following basics.</target>
        </trans-unit>
        <trans-unit id="03dc2f7a-8551-4df4-baf5-f256df95510f" xml:space="preserve">
          <source><bpt id="8794b557-0f58-482e-8d6a-8d4f86d11c0a">&lt;strong&gt;</bpt>Requirements<ept id="8794b557-0f58-482e-8d6a-8d4f86d11c0a">&lt;/strong&gt;</ept> :</source>
          <target state="new"><bpt id="8794b557-0f58-482e-8d6a-8d4f86d11c0a">&lt;strong&gt;</bpt>Requirements<ept id="8794b557-0f58-482e-8d6a-8d4f86d11c0a">&lt;/strong&gt;</ept> :</target>
        </trans-unit>
        <trans-unit id="b424ec56-c464-4f57-9d3c-8e0af16c621e" xml:space="preserve">
          <source>PowerShell Direct.</source>
          <target state="new">PowerShell Direct.</target>
        </trans-unit>
        <trans-unit id="41e98104-2826-4fbd-b7f0-6591d8a80bfc" xml:space="preserve">
          <source>Windows 10 guest and host OS.</source>
          <target state="new">Windows 10 guest and host OS.</target>
        </trans-unit>
        <trans-unit id="c4eae369-7e40-4750-ae6f-65e32e277d89" xml:space="preserve">
          <source><bpt id="07511529-a664-4751-bffd-94b281953441">&lt;strong&gt;</bpt>Common Variables<ept id="07511529-a664-4751-bffd-94b281953441">&lt;/strong&gt;</ept> :</source>
          <target state="new"><bpt id="07511529-a664-4751-bffd-94b281953441">&lt;strong&gt;</bpt>Common Variables<ept id="07511529-a664-4751-bffd-94b281953441">&lt;/strong&gt;</ept> :</target>
        </trans-unit>
        <trans-unit id="4b671d6a-5f07-4fb1-83dd-3aa8b21d40e1" xml:space="preserve">
          <source><bpt id="fc2c6995-72d6-4931-8bf5-6ac65e83d51a">&lt;code&gt;</bpt>$VMName<ept id="fc2c6995-72d6-4931-8bf5-6ac65e83d51a">&lt;/code&gt;</ept> -- this is a string with the VMName.</source>
          <target state="new"><bpt id="fc2c6995-72d6-4931-8bf5-6ac65e83d51a">&lt;code&gt;</bpt>$VMName<ept id="fc2c6995-72d6-4931-8bf5-6ac65e83d51a">&lt;/code&gt;</ept> -- this is a string with the VMName.</target>
        </trans-unit>
        <trans-unit id="d11c5f0a-b73a-43d8-8040-aa0b78df577b" xml:space="preserve">
          <source>See a list of available VMs with <bpt id="aaf903b3-e8d3-4304-ab2e-9ad524daf4b8">&lt;code&gt;</bpt>Get-VM<ept id="aaf903b3-e8d3-4304-ab2e-9ad524daf4b8">&lt;/code&gt;</ept></source>
          <target state="new">See a list of available VMs with <bpt id="aaf903b3-e8d3-4304-ab2e-9ad524daf4b8">&lt;code&gt;</bpt>Get-VM<ept id="aaf903b3-e8d3-4304-ab2e-9ad524daf4b8">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="3440ea9e-cdff-4a2a-bf09-5071900b4dbc" xml:space="preserve">
          <source><bpt id="811e6d60-da5a-493c-bc78-a4ef2401f5ac">&lt;code&gt;</bpt>$cred<ept id="811e6d60-da5a-493c-bc78-a4ef2401f5ac">&lt;/code&gt;</ept> -- Credential for the guest OS.</source>
          <target state="new"><bpt id="811e6d60-da5a-493c-bc78-a4ef2401f5ac">&lt;code&gt;</bpt>$cred<ept id="811e6d60-da5a-493c-bc78-a4ef2401f5ac">&lt;/code&gt;</ept> -- Credential for the guest OS.</target>
        </trans-unit>
        <trans-unit id="4f1395f0-f4c0-425b-8058-7d805e08339d" xml:space="preserve">
          <source>Can be populated using <bpt id="ab34420b-5f88-4f63-a9ba-a7e80bed838c">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="ab34420b-5f88-4f63-a9ba-a7e80bed838c">&lt;/code&gt;</ept></source>
          <target state="new">Can be populated using <bpt id="ab34420b-5f88-4f63-a9ba-a7e80bed838c">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="ab34420b-5f88-4f63-a9ba-a7e80bed838c">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="9582af7e-682c-46e0-9cb4-7fb9cdd1a384" xml:space="preserve">
          <source>Check if the guest has booted</source>
          <target state="new">Check if the guest has booted</target>
        </trans-unit>
        <trans-unit id="75b18e0e-6ede-4a6c-8af4-f5399659a78d" xml:space="preserve">
          <source>Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</source>
          <target state="new">Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</target>
        </trans-unit>
        <trans-unit id="592fcd2f-fa03-4412-b14a-f72d26e656d3" xml:space="preserve">
          <source>Use this command to check whether the guest has booted.</source>
          <target state="new">Use this command to check whether the guest has booted.</target>
        </trans-unit>
        <trans-unit id="3100a2b0-b742-4f47-8030-197f3a5de6b1" xml:space="preserve">
          <source><bpt id="6e6052df-353b-45a3-a568-6889558befe0">&lt;strong&gt;</bpt>Outcome<ept id="6e6052df-353b-45a3-a568-6889558befe0">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="6e6052df-353b-45a3-a568-6889558befe0">&lt;strong&gt;</bpt>Outcome<ept id="6e6052df-353b-45a3-a568-6889558befe0">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="4f002305-5276-4abd-85f8-b94f5aa0a8f7" xml:space="preserve">
          <source>Prints a friendly message declaring the state of the guest OS.</source>
          <target state="new">Prints a friendly message declaring the state of the guest OS.</target>
        </trans-unit>
        <trans-unit id="a75dac75-0cb1-4da1-854e-152e1824087e" xml:space="preserve">
          <source>Script locking until the guest has booted</source>
          <target state="new">Script locking until the guest has booted</target>
        </trans-unit>
        <trans-unit id="82abeac5-9370-4537-8c08-a56006b9424c" xml:space="preserve">
          <source>The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</source>
          <target state="new">The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</target>
        </trans-unit>
        <trans-unit id="7cc3c242-be24-480e-85da-bfd0d81675b6" xml:space="preserve">
          <source><bpt id="a4e2e2f6-c93e-440d-a139-8d4a2b001e4c">&lt;strong&gt;</bpt>Outcome<ept id="a4e2e2f6-c93e-440d-a139-8d4a2b001e4c">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="a4e2e2f6-c93e-440d-a139-8d4a2b001e4c">&lt;strong&gt;</bpt>Outcome<ept id="a4e2e2f6-c93e-440d-a139-8d4a2b001e4c">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="0ba8e539-7005-4827-b9ad-a9398a528e6f" xml:space="preserve">
          <source>Prints a friendly message and locks until the connection to the VM succeeds.</source>
          <target state="new">Prints a friendly message and locks until the connection to the VM succeeds.</target>
        </trans-unit>
        <trans-unit id="8f766b53-ecdb-43e4-b068-d2391799b40c" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="72f2f4a1-0cab-4648-b180-f714206935d5" xml:space="preserve">
          <source>Script locking until the guest has a network</source>
          <target state="new">Script locking until the guest has a network</target>
        </trans-unit>
        <trans-unit id="30bc36b1-4861-476d-9723-c3f9bb116344" xml:space="preserve">
          <source>With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</source>
          <target state="new">With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</target>
        </trans-unit>
        <trans-unit id="ac9335ee-748d-4570-abb7-8cabd4fdb55b" xml:space="preserve">
          <source><bpt id="6e147bc2-35c0-46e5-a069-f969c75a662d">&lt;em&gt;</bpt>* Outcome *<ept id="6e147bc2-35c0-46e5-a069-f969c75a662d">&lt;/em&gt;</ept></source>
          <target state="new"><bpt id="6e147bc2-35c0-46e5-a069-f969c75a662d">&lt;em&gt;</bpt>* Outcome *<ept id="6e147bc2-35c0-46e5-a069-f969c75a662d">&lt;/em&gt;</ept></target>
        </trans-unit>
        <trans-unit id="4eb98fb5-50c1-44f8-b3ec-375c1c18233b" xml:space="preserve">
          <source>Locks until a DHCP lease is recieved.</source>
          <target state="new">Locks until a DHCP lease is recieved.</target>
        </trans-unit>
        <trans-unit id="4e2da9dc-7a12-46e9-abed-bdc0efc41783" xml:space="preserve">
          <source>Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</source>
          <target state="new">Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</target>
        </trans-unit>
        <trans-unit id="6b906131-ef23-4b81-a4dc-5094d3f0736d" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="e6ff71b7-c948-416a-b015-ec898e8d9247" xml:space="preserve">
          <source>Managing credentials with PowerShell</source>
          <target state="new">Managing credentials with PowerShell</target>
        </trans-unit>
        <trans-unit id="23e34a14-9892-467e-9401-c4e740a599a8" xml:space="preserve">
          <source>Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</source>
          <target state="new">Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</target>
        </trans-unit>
        <trans-unit id="a49e1e54-1f1e-41a8-b176-5b4a1a11e6fc" xml:space="preserve">
          <source>There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</source>
          <target state="new">There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</target>
        </trans-unit>
        <trans-unit id="3e87b896-9994-408f-bf64-8c1100ca5855" xml:space="preserve">
          <source>The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</source>
          <target state="new">The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</target>
        </trans-unit>
        <trans-unit id="f507c37d-cc72-4f1e-bc0d-16431ae766e5" xml:space="preserve">
          <source>This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</source>
          <target state="new">This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</target>
        </trans-unit>
        <trans-unit id="1d2bf2de-54b0-49a8-be64-e4dccb126480" xml:space="preserve">
          <source>In this scenario you can just run <bpt id="a329c17c-fe96-4653-ac47-d7eaf1163902">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="a329c17c-fe96-4653-ac47-d7eaf1163902">&lt;/code&gt;</ept>.</source>
          <target state="new">In this scenario you can just run <bpt id="a329c17c-fe96-4653-ac47-d7eaf1163902">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="a329c17c-fe96-4653-ac47-d7eaf1163902">&lt;/code&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="e7b7b75a-5c33-419a-bbe9-c0710ee8b012" xml:space="preserve">
          <source>Let PowerShell prompt you for credentials</source>
          <target state="new">Let PowerShell prompt you for credentials</target>
        </trans-unit>
        <trans-unit id="5749920a-7dfd-4c45-9156-5150a3930677" xml:space="preserve">
          <source>If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</source>
          <target state="new">If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</target>
        </trans-unit>
        <trans-unit id="6ea57b4c-afe3-4e10-a48d-87363c53566b" xml:space="preserve">
          <source>Store credentials in a variable for reuse.</source>
          <target state="new">Store credentials in a variable for reuse.</target>
        </trans-unit>
        <trans-unit id="cb1b787a-abae-44dc-8f06-b7e93b1e0c8d" xml:space="preserve">
          <source>Running a simple command like this:</source>
          <target state="new">Running a simple command like this:</target>
        </trans-unit>
        <trans-unit id="d902d449-5c79-4226-a94b-17d7d9683551" xml:space="preserve">
          <source>And then running something like this:</source>
          <target state="new">And then running something like this:</target>
        </trans-unit>
        <trans-unit id="d69b3e72-0339-4664-a258-622e3daa2b50" xml:space="preserve">
          <source>Will mean that you only get prompted once per script/PowerShell session for your credentials.</source>
          <target state="new">Will mean that you only get prompted once per script/PowerShell session for your credentials.</target>
        </trans-unit>
        <trans-unit id="4b1c3471-65fa-42a0-9037-a44c68e6501c" xml:space="preserve">
          <source>Code your credentials into your scripts.</source>
          <target state="new">Code your credentials into your scripts.</target>
        </trans-unit>
        <trans-unit id="64035d54-4999-491e-9d32-6c5f70269245" xml:space="preserve">
          <source><bpt id="564508fb-2676-4424-9a44-0a7fcdecea40">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="564508fb-2676-4424-9a44-0a7fcdecea40">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="564508fb-2676-4424-9a44-0a7fcdecea40">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="564508fb-2676-4424-9a44-0a7fcdecea40">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="60cdcc9a-f39b-406c-a9fe-3dbc5c8aa43d" xml:space="preserve">
          <source>Warning:  _Do not do this in a production system.</source>
          <target state="new">Warning:  _Do not do this in a production system.</target>
        </trans-unit>
        <trans-unit id="d43d7d7c-f39f-4e07-8f59-ca3d2d1f420d" xml:space="preserve">
          <source>Do not do this with real passwords._</source>
          <target state="new">Do not do this with real passwords._</target>
        </trans-unit>
        <trans-unit id="3851c384-dad4-49e5-8d01-a86617e552bc" xml:space="preserve">
          <source>You can hand craft a PSCredential object with some code like this:</source>
          <target state="new">You can hand craft a PSCredential object with some code like this:</target>
        </trans-unit>
        <trans-unit id="f0854787-2b64-41ed-8745-3150609703eb" xml:space="preserve">
          <source>Grossly insecure - but useful for testing.</source>
          <target state="new">Grossly insecure - but useful for testing.</target>
        </trans-unit>
        <trans-unit id="861283d9-fa0c-4899-848b-99583307d929" xml:space="preserve">
          <source>Now you get no prompts at all in this session.</source>
          <target state="new">Now you get no prompts at all in this session.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>