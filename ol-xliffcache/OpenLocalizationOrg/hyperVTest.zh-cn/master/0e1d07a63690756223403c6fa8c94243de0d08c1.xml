{
  "nodes": [
    {
      "pos": [
        27,
        137
      ],
      "content": "How a Machine Learning model progresses from an experiment to an operationalized web service | Microsoft Azure"
    },
    {
      "pos": [
        156,
        301
      ],
      "content": "An overview of the mechanics of how your Azure Machine Learning model progresses from a development experiment to an operationalized web service."
    },
    {
      "pos": [
        627,
        719
      ],
      "content": "How a Machine Learning model progresses from an experiment to an operationalized web service"
    },
    {
      "pos": [
        721,
        1120
      ],
      "content": "An <bpt id=\"p1\">***</bpt><bpt id=\"p2\"/>experiment<ept id=\"p2\">***</ept><ept id=\"p1\"/><ph id=\"ph2\"/> is a canvas in Azure Machine Learning Studio that allows\nyou to interactively develop, run, test, and iterate as you create a\npredictive analysis model. A wide variety of modules are available that\nyou can use to bring data into your experiment, manipulate the data,\ntrain a model using machine learning algorithms, score the model,\nevaluate the results, and output final values.",
      "nodes": [
        {
          "content": "An <bpt id=\"p1\">***</bpt><bpt id=\"p2\"/>experiment<ept id=\"p2\">***</ept><ept id=\"p1\"/><ph id=\"ph2\"/> is a canvas in Azure Machine Learning Studio that allows\nyou to interactively develop, run, test, and iterate as you create a\npredictive analysis model.",
          "pos": [
            0,
            252
          ]
        },
        {
          "content": "A wide variety of modules are available that\nyou can use to bring data into your experiment, manipulate the data,\ntrain a model using machine learning algorithms, score the model,\nevaluate the results, and output final values.",
          "pos": [
            253,
            479
          ]
        }
      ]
    },
    {
      "pos": [
        1122,
        1274
      ],
      "content": "Once you’re satisfied with your experiment, you can deploy it as an\n<bpt id=\"p3\">***</bpt><bpt id=\"p4\"/>Azure web service<ept id=\"p4\">***</ept><ept id=\"p3\"/><ph id=\"ph3\"/> so that users can send it new data and receive back\nresults."
    },
    {
      "pos": [
        1276,
        1343
      ],
      "content": "In this article we’ll give an overview of the mechanics of how your"
    },
    {
      "pos": [
        1344,
        1413
      ],
      "content": "Machine Learning model progresses from a development experiment to an"
    },
    {
      "pos": [
        1414,
        1442
      ],
      "content": "operationalized web service."
    },
    {
      "pos": [
        1445,
        1876
      ],
      "content": "<ph id=\"ph4\">[AZURE.NOTE]</ph><ph id=\"ph5\"/> There are other ways to develop and deploy machine learning\nmodels, but this article is focused on how you use Machine Learning\nStudio. For a discussion of how to create a predictive web service with\nR, see the blog post <bpt id=\"p5\">[</bpt>Build &amp; Deploy Predictive Web Apps Using RStudio\nand Azure\nML<ept id=\"p5\">](http://blogs.technet.com/b/machinelearning/archive/2015/09/25/build-and-deploy-a-predictive-web-app-using-rstudio-and-azure-ml.aspx)</ept>.",
      "nodes": [
        {
          "content": "<ph id=\"ph4\">[AZURE.NOTE]</ph><ph id=\"ph5\"/> There are other ways to develop and deploy machine learning\nmodels, but this article is focused on how you use Machine Learning\nStudio.",
          "pos": [
            0,
            180
          ]
        },
        {
          "content": "For a discussion of how to create a predictive web service with\nR, see the blog post <bpt id=\"p5\">[</bpt>Build &amp; Deploy Predictive Web Apps Using RStudio\nand Azure\nML<ept id=\"p5\">](http://blogs.technet.com/b/machinelearning/archive/2015/09/25/build-and-deploy-a-predictive-web-app-using-rstudio-and-azure-ml.aspx)</ept>.",
          "pos": [
            181,
            505
          ]
        }
      ]
    },
    {
      "pos": [
        1878,
        2553
      ],
      "content": "While Azure Machine Learning Studio is designed primarily to help you\ndevelop and deploy a <bpt id=\"p6\">*</bpt>predictive analysis model<ept id=\"p6\">*</ept>, it’s possible to use\nStudio to develop an experiment that doesn’t include a predictive\nanalysis model. For example, an experiment might just input data,\nmanipulate it, and then output the results. Just like a predictive\nanalysis experiment, you can deploy this non-predictive experiment as a\nweb service, but it’s a simpler process because the experiment isn’t\ntraining or scoring a machine learning model. While that’s not the\ntypical use of Studio, we’ll include it in the discussion below so that\nwe can give a complete explanation of how Studio works.",
      "nodes": [
        {
          "content": "While Azure Machine Learning Studio is designed primarily to help you\ndevelop and deploy a <bpt id=\"p6\">*</bpt>predictive analysis model<ept id=\"p6\">*</ept>, it’s possible to use\nStudio to develop an experiment that doesn’t include a predictive\nanalysis model.",
          "pos": [
            0,
            260
          ]
        },
        {
          "content": "For example, an experiment might just input data,\nmanipulate it, and then output the results.",
          "pos": [
            261,
            354
          ]
        },
        {
          "content": "Just like a predictive\nanalysis experiment, you can deploy this non-predictive experiment as a\nweb service, but it’s a simpler process because the experiment isn’t\ntraining or scoring a machine learning model.",
          "pos": [
            355,
            564
          ]
        },
        {
          "content": "While that’s not the\ntypical use of Studio, we’ll include it in the discussion below so that\nwe can give a complete explanation of how Studio works.",
          "pos": [
            565,
            713
          ]
        }
      ]
    },
    {
      "pos": [
        2558,
        2607
      ],
      "content": "Developing and deploying a predictive web service"
    },
    {
      "pos": [
        2609,
        2679
      ],
      "content": "Here are the stages that a typical solution follows as you develop and"
    },
    {
      "pos": [
        2680,
        2720
      ],
      "content": "deploy it using Machine Learning Studio:"
    },
    {
      "pos": [
        2843,
        2901
      ],
      "content": "<bpt id=\"p7\">*</bpt>Figure 1 - Stages of a typical predictive analysis model<ept id=\"p7\">*</ept>"
    },
    {
      "pos": [
        2907,
        2930
      ],
      "content": "The training experiment"
    },
    {
      "pos": [
        2932,
        3583
      ],
      "content": "The <bpt id=\"p8\">***</bpt><bpt id=\"p9\"/>training experiment<ept id=\"p9\">***</ept><ept id=\"p8\"/><ph id=\"ph7\"/> is the initial experiment canvas in Machine\nLearning Studio. The purpose of the training experiment is to give you a\nplace to develop, test, iterate, and eventually train a machine learning\nmodel. You can even train multiple models simultaneously as you look for\nthe best solution, but once you’re done experimenting you’ll select a\nsingle trained model and eliminate the rest from the experiment. For an\nexample of developing a predictive analysis experiment, see <bpt id=\"p10\">[</bpt>Develop a\npredictive analytics solution for credit risk assessment in Azure\nMachine\nLearning<ept id=\"p10\">](machine-learning-walkthrough-develop-predictive-solution.md)</ept>.",
      "nodes": [
        {
          "content": "The <bpt id=\"p8\">***</bpt><bpt id=\"p9\"/>training experiment<ept id=\"p9\">***</ept><ept id=\"p8\"/><ph id=\"ph7\"/> is the initial experiment canvas in Machine\nLearning Studio.",
          "pos": [
            0,
            170
          ]
        },
        {
          "content": "The purpose of the training experiment is to give you a\nplace to develop, test, iterate, and eventually train a machine learning\nmodel.",
          "pos": [
            171,
            306
          ]
        },
        {
          "content": "You can even train multiple models simultaneously as you look for\nthe best solution, but once you’re done experimenting you’ll select a\nsingle trained model and eliminate the rest from the experiment.",
          "pos": [
            307,
            507
          ]
        },
        {
          "content": "For an\nexample of developing a predictive analysis experiment, see <bpt id=\"p10\">[</bpt>Develop a\npredictive analytics solution for credit risk assessment in Azure\nMachine\nLearning<ept id=\"p10\">](machine-learning-walkthrough-develop-predictive-solution.md)</ept>.",
          "pos": [
            508,
            771
          ]
        }
      ]
    },
    {
      "pos": [
        3589,
        3614
      ],
      "content": "The predictive experiment"
    },
    {
      "pos": [
        3616,
        4010
      ],
      "content": "Once you have a trained model in your training experiment, you click\n<bpt id=\"p11\">**</bpt>Set Up Web Service<ept id=\"p11\">**</ept><ph id=\"ph8\"/> in Machine Learning Studio and Studio goes\nthrough the process of converting your training experiment to a\n<bpt id=\"p12\">***</bpt><bpt id=\"p13\"/>predictive experiment<ept id=\"p13\">***</ept><ept id=\"p12\"/>. The purpose of the predictive experiment is to\nuse your trained model to score new data, with the goal of eventually\nbecoming operationalized as an Azure web service.",
      "nodes": [
        {
          "content": "Once you have a trained model in your training experiment, you click\n<bpt id=\"p11\">**</bpt>Set Up Web Service<ept id=\"p11\">**</ept><ph id=\"ph8\"/> in Machine Learning Studio and Studio goes\nthrough the process of converting your training experiment to a\n<bpt id=\"p12\">***</bpt><bpt id=\"p13\"/>predictive experiment<ept id=\"p13\">***</ept><ept id=\"p12\"/>.",
          "pos": [
            0,
            351
          ]
        },
        {
          "content": "The purpose of the predictive experiment is to\nuse your trained model to score new data, with the goal of eventually\nbecoming operationalized as an Azure web service.",
          "pos": [
            352,
            518
          ]
        }
      ]
    },
    {
      "pos": [
        4012,
        4072
      ],
      "content": "This conversion is done for you through the following steps:"
    },
    {
      "pos": [
        4078,
        4178
      ],
      "leadings": [
        "",
        "    "
      ],
      "content": "Convert the set of modules used for training into a single module\nand save it as a trained model"
    },
    {
      "pos": [
        4184,
        4239
      ],
      "content": "Eliminate any extraneous modules not related to scoring"
    },
    {
      "pos": [
        4245,
        4310
      ],
      "content": "Add input and output ports that the eventual web service will use"
    },
    {
      "pos": [
        4312,
        4377
      ],
      "content": "There may be more changes you want to make to get your predictive"
    },
    {
      "pos": [
        4378,
        4448
      ],
      "content": "experiment ready to deploy as a web service. For example, if you want\n",
      "nodes": [
        {
          "content": "experiment ready to deploy as a web service.",
          "pos": [
            0,
            44
          ]
        },
        {
          "content": "For example, if you want",
          "pos": [
            45,
            69
          ]
        }
      ]
    },
    {
      "pos": [
        4448,
        4513
      ],
      "content": "the web service to output only a subset of results, you can add a"
    },
    {
      "pos": [
        4514,
        4554
      ],
      "content": "filtering module before the output port."
    },
    {
      "pos": [
        4556,
        4625
      ],
      "content": "In this conversion process the training experiment is not discarded.\n",
      "nodes": [
        {
          "content": "In this conversion process the training experiment is not discarded.",
          "pos": [
            0,
            68
          ]
        },
        {
          "content": "\n",
          "pos": [
            68,
            69
          ]
        }
      ]
    },
    {
      "pos": [
        4625,
        4697
      ],
      "content": "When the process is complete you’ll have two tabs in Studio: one for the"
    },
    {
      "pos": [
        4698,
        4767
      ],
      "content": "training experiment and one for the predictive experiment. This way,\n",
      "nodes": [
        {
          "content": "training experiment and one for the predictive experiment.",
          "pos": [
            0,
            58
          ]
        },
        {
          "content": "This way,",
          "pos": [
            59,
            68
          ]
        }
      ]
    },
    {
      "pos": [
        4767,
        4839
      ],
      "content": "before you deploy your web service, you can make changes to the training"
    },
    {
      "pos": [
        4840,
        4913
      ],
      "content": "experiment and rebuild the predictive experiment. Or you can save a copy\n",
      "nodes": [
        {
          "content": "experiment and rebuild the predictive experiment.",
          "pos": [
            0,
            49
          ]
        },
        {
          "content": "Or you can save a copy",
          "pos": [
            50,
            72
          ]
        }
      ]
    },
    {
      "pos": [
        4913,
        4981
      ],
      "content": "of the training experiment to start another line of experimentation."
    },
    {
      "pos": [
        4984,
        5410
      ],
      "content": "<ph id=\"ph9\">[AZURE.NOTE]</ph><ph id=\"ph10\"/> When you click <bpt id=\"p14\">**</bpt>Set Up Web Service<ept id=\"p14\">**</ept><ph id=\"ph11\"/> you start an automatic\nprocess to convert your training experiment to a predictive experiment,\nand this works well in most cases. But if your training experiment is\ncomplex (for example, you have multiple paths for training that you join\ntogether), you might prefer to do this conversion manually. For more\ndetails on how this conversion process works, see [Convert a Machine",
      "nodes": [
        {
          "content": "<ph id=\"ph9\">[AZURE.NOTE]</ph><ph id=\"ph10\"/> When you click <bpt id=\"p14\">**</bpt>Set Up Web Service<ept id=\"p14\">**</ept><ph id=\"ph11\"/> you start an automatic\nprocess to convert your training experiment to a predictive experiment,\nand this works well in most cases.",
          "pos": [
            0,
            268
          ]
        },
        {
          "content": "But if your training experiment is\ncomplex (for example, you have multiple paths for training that you join\ntogether), you might prefer to do this conversion manually.",
          "pos": [
            269,
            436
          ]
        },
        {
          "content": "For more\ndetails on how this conversion process works, see [Convert a Machine",
          "pos": [
            437,
            514
          ]
        }
      ]
    },
    {
      "pos": [
        5411,
        5455
      ],
      "content": "Learning training experiment to a predictive"
    },
    {
      "pos": [
        5456,
        5539
      ],
      "content": "experiment](machine-learning-convert-training-experiment-to-scoring-experiment.md)."
    },
    {
      "pos": [
        5545,
        5560
      ],
      "content": "The web service"
    },
    {
      "pos": [
        5562,
        6033
      ],
      "content": "Once you’re satisfied that your predictive experiment is ready, you\nclick <bpt id=\"p15\">**</bpt>Deploy Web Service<ept id=\"p15\">**</ept><ph id=\"ph12\"/> to operationalize your model by deploying\nit as an <bpt id=\"p16\">***</bpt><bpt id=\"p17\"/>Azure web service<ept id=\"p17\">***</ept><ept id=\"p16\"/>. Users can now send data to your model using\nthe web service REST API and receive back the results. For more\ninformation on how to do this, see <bpt id=\"p18\">[</bpt>How to consume an Azure Machine\nLearning web service that has been deployed from a Machine Learning\nexperiment<ept id=\"p18\">](machine-learning-consume-web-services.md)</ept>.",
      "nodes": [
        {
          "content": "Once you’re satisfied that your predictive experiment is ready, you\nclick <bpt id=\"p15\">**</bpt>Deploy Web Service<ept id=\"p15\">**</ept><ph id=\"ph12\"/> to operationalize your model by deploying\nit as an <bpt id=\"p16\">***</bpt><bpt id=\"p17\"/>Azure web service<ept id=\"p17\">***</ept><ept id=\"p16\"/>.",
          "pos": [
            0,
            297
          ]
        },
        {
          "content": "Users can now send data to your model using\nthe web service REST API and receive back the results.",
          "pos": [
            298,
            396
          ]
        },
        {
          "content": "For more\ninformation on how to do this, see <bpt id=\"p18\">[</bpt>How to consume an Azure Machine\nLearning web service that has been deployed from a Machine Learning\nexperiment<ept id=\"p18\">](machine-learning-consume-web-services.md)</ept>.",
          "pos": [
            397,
            636
          ]
        }
      ]
    },
    {
      "pos": [
        6035,
        6101
      ],
      "content": "Once you deploy the web service, the predictive experiment and web"
    },
    {
      "pos": [
        6102,
        6171
      ],
      "content": "service remain connected, and you can go back-and-forth between them:"
    },
    {
      "pos": [
        6174,
        6195
      ],
      "content": "<bpt id=\"p19\">***</bpt><bpt id=\"p20\"/>From this page…<ept id=\"p20\">***</ept><ept id=\"p19\"/>"
    },
    {
      "pos": [
        6196,
        6213
      ],
      "content": "<bpt id=\"p21\">***</bpt><bpt id=\"p22\"/>click this…<ept id=\"p22\">***</ept><ept id=\"p21\"/>"
    },
    {
      "pos": [
        6214,
        6238
      ],
      "content": "<bpt id=\"p23\">***</bpt><bpt id=\"p24\"/>to open this page…<ept id=\"p24\">***</ept><ept id=\"p23\"/>"
    },
    {
      "pos": [
        6308,
        6335
      ],
      "content": "experiment canvas in Studio"
    },
    {
      "pos": [
        6336,
        6357
      ],
      "content": "<bpt id=\"p25\">**</bpt>Go to web service<ept id=\"p25\">**</ept>"
    },
    {
      "pos": [
        6358,
        6393
      ],
      "content": "web service configuration in Studio"
    },
    {
      "pos": [
        6396,
        6431
      ],
      "content": "web service configuration in Studio"
    },
    {
      "pos": [
        6432,
        6447
      ],
      "content": "<bpt id=\"p26\">**</bpt>View latest<ept id=\"p26\">**</ept>"
    },
    {
      "pos": [
        6448,
        6475
      ],
      "content": "experiment canvas in Studio"
    },
    {
      "pos": [
        6478,
        6513
      ],
      "content": "web service configuration in Studio"
    },
    {
      "pos": [
        6514,
        6535
      ],
      "content": "<bpt id=\"p27\">**</bpt>Manage endpoints…<ept id=\"p27\">**</ept>"
    },
    {
      "pos": [
        6536,
        6579
      ],
      "content": "endpoint management in Azure Classic Portal"
    },
    {
      "pos": [
        6582,
        6625
      ],
      "content": "endpoint management in Azure Classic Portal"
    },
    {
      "pos": [
        6626,
        6644
      ],
      "content": "<bpt id=\"p28\">**</bpt>Edit in Studio<ept id=\"p28\">**</ept>"
    },
    {
      "pos": [
        6645,
        6672
      ],
      "content": "experiment canvas in Studio"
    },
    {
      "pos": [
        6799,
        6865
      ],
      "content": "<bpt id=\"p29\">*</bpt>Figure 2 - Connections between an experiment and the web service<ept id=\"p29\">*</ept>"
    },
    {
      "pos": [
        6870,
        6929
      ],
      "content": "The non-typical case: creating a non-predictive web service"
    },
    {
      "pos": [
        6931,
        7002
      ],
      "content": "If your experiment does not train a predictive analysis model, then you"
    },
    {
      "pos": [
        7003,
        7085
      ],
      "content": "don’t need to create both a training experiment and a scoring experiment - there’s"
    },
    {
      "pos": [
        7086,
        7145
      ],
      "content": "just one experiment, and you can deploy it as a web service"
    },
    {
      "pos": [
        7146,
        7213
      ],
      "content": "(Machine Learning Studio detects whether your experiment contains a"
    },
    {
      "pos": [
        7214,
        7269
      ],
      "content": "predictive model by analyzing the modules you’ve used)."
    },
    {
      "pos": [
        7271,
        7338
      ],
      "content": "After you’ve iterated on your experiment and are satisfied with it:"
    },
    {
      "pos": [
        7344,
        7425
      ],
      "leadings": [
        "",
        "    "
      ],
      "content": "Click <bpt id=\"p30\">**</bpt>Set Up Web Service<ept id=\"p30\">**</ept><ph id=\"ph14\"/> - input and output nodes are added\nautomatically"
    },
    {
      "pos": [
        7431,
        7444
      ],
      "content": "Click <bpt id=\"p31\">**</bpt>Run<ept id=\"p31\">**</ept>"
    },
    {
      "pos": [
        7450,
        7478
      ],
      "content": "Click <bpt id=\"p32\">**</bpt>Deploy Web Service<ept id=\"p32\">**</ept>"
    },
    {
      "pos": [
        7480,
        7551
      ],
      "content": "Your web service is now deployed, and you can access and manage it just"
    },
    {
      "pos": [
        7552,
        7582
      ],
      "content": "like a predictive web service."
    },
    {
      "pos": [
        7587,
        7610
      ],
      "content": "The web service buttons"
    },
    {
      "pos": [
        7612,
        7799
      ],
      "content": "In Machine Learning Studio, the web service buttons - <bpt id=\"p33\">**</bpt>Set Up Web\nService<ept id=\"p33\">**</ept><ph id=\"ph15\"/> and <bpt id=\"p34\">**</bpt>Deploy Web Service<ept id=\"p34\">**</ept><ph id=\"ph16\"/> - change name and function\ndepending on where you’re at in the development process."
    },
    {
      "pos": [
        7801,
        7843
      ],
      "content": "<bpt id=\"p35\">**</bpt>Experiment contains a predictive model<ept id=\"p35\">**</ept>"
    },
    {
      "pos": [
        7845,
        7913
      ],
      "content": "If the experiment trains and scores a predictive model, then the web"
    },
    {
      "pos": [
        7914,
        7954
      ],
      "content": "service buttons perform these functions:"
    },
    {
      "pos": [
        7957,
        7979
      ],
      "content": "<bpt id=\"p36\">**</bpt>Type of experiment<ept id=\"p36\">**</ept>"
    },
    {
      "pos": [
        7980,
        7990
      ],
      "content": "<bpt id=\"p37\">**</bpt>Button<ept id=\"p37\">**</ept>"
    },
    {
      "pos": [
        7991,
        8007
      ],
      "content": "<bpt id=\"p38\">**</bpt>What it does<ept id=\"p38\">**</ept>"
    },
    {
      "pos": [
        8063,
        8091
      ],
      "content": "Experiment under development"
    },
    {
      "pos": [
        8092,
        8114
      ],
      "content": "<bpt id=\"p39\">**</bpt>Set Up Web Service<ept id=\"p39\">**</ept>"
    },
    {
      "pos": [
        8115,
        8132
      ],
      "content": "Gives two options"
    },
    {
      "pos": [
        8135,
        8141
      ],
      "content": "&amp;nbsp;"
    },
    {
      "pos": [
        8142,
        8170
      ],
      "content": "- <bpt id=\"p40\">**</bpt>Predictive Web Service<ept id=\"p40\">**</ept>"
    },
    {
      "pos": [
        8171,
        8251
      ],
      "content": "Converts the experiment into both a training experiment and a scoring experiment"
    },
    {
      "pos": [
        8254,
        8260
      ],
      "content": "&amp;nbsp;"
    },
    {
      "pos": [
        8261,
        8289
      ],
      "content": "- <bpt id=\"p41\">**</bpt>Retraining Web Service<ept id=\"p41\">**</ept>"
    },
    {
      "pos": [
        8290,
        8377
      ],
      "content": "Converts the experiment into a retraining experiment (see the \"Updating\" section below)"
    },
    {
      "pos": [
        8380,
        8399
      ],
      "content": "Training experiment"
    },
    {
      "pos": [
        8400,
        8422
      ],
      "content": "<bpt id=\"p42\">**</bpt>Set Up Web Service<ept id=\"p42\">**</ept>"
    },
    {
      "pos": [
        8423,
        8440
      ],
      "content": "Gives two options"
    },
    {
      "pos": [
        8443,
        8449
      ],
      "content": "&amp;nbsp;"
    },
    {
      "pos": [
        8450,
        8484
      ],
      "content": "- <bpt id=\"p43\">**</bpt>Update Predictive Experiment<ept id=\"p43\">**</ept>"
    },
    {
      "pos": [
        8485,
        8581
      ],
      "content": "Updates the associated predictive experiment with changes you’ve made to the training experiment"
    },
    {
      "pos": [
        8584,
        8590
      ],
      "content": "&amp;nbsp;"
    },
    {
      "pos": [
        8591,
        8619
      ],
      "content": "- <bpt id=\"p44\">**</bpt>Retraining Web Service<ept id=\"p44\">**</ept>"
    },
    {
      "pos": [
        8620,
        8716
      ],
      "content": "Converts the training experiment into a retraining experiment (see the \"Updating\" section below)"
    },
    {
      "pos": [
        8719,
        8725
      ],
      "content": "&amp;nbsp;"
    },
    {
      "pos": [
        8726,
        8755
      ],
      "content": "-<bpt id=\"p45\">*</bpt>or<ept id=\"p45\">*</ept>- <bpt id=\"p46\">**</bpt>Deploy Web Service<ept id=\"p46\">**</ept>"
    },
    {
      "pos": [
        8756,
        8854
      ],
      "content": "If you have set up the retraining experiment for deployment, then this deploys it as a web service"
    },
    {
      "pos": [
        8857,
        8878
      ],
      "content": "Predictive experiment"
    },
    {
      "pos": [
        8879,
        8901
      ],
      "content": "<bpt id=\"p47\">**</bpt>Deploy Web Service<ept id=\"p47\">**</ept>"
    },
    {
      "pos": [
        8902,
        8952
      ],
      "content": "Deploys the predictive experiment as a web service"
    },
    {
      "pos": [
        8955,
        9007
      ],
      "content": "<bpt id=\"p48\">**</bpt>Experiment does <bpt id=\"p49\">*</bpt>not<ept id=\"p49\">*</ept><ph id=\"ph17\"/> contain a predictive model<ept id=\"p48\">**</ept>"
    },
    {
      "pos": [
        9009,
        9080
      ],
      "content": "If the experiment does not train and score a predictive model, then the"
    },
    {
      "pos": [
        9081,
        9118
      ],
      "content": "web service buttons are much simpler:"
    },
    {
      "pos": [
        9121,
        9143
      ],
      "content": "<bpt id=\"p50\">**</bpt>Type of experiment<ept id=\"p50\">**</ept>"
    },
    {
      "pos": [
        9144,
        9154
      ],
      "content": "<bpt id=\"p51\">**</bpt>Button<ept id=\"p51\">**</ept>"
    },
    {
      "pos": [
        9155,
        9171
      ],
      "content": "<bpt id=\"p52\">**</bpt>What it does<ept id=\"p52\">**</ept>"
    },
    {
      "pos": [
        9227,
        9255
      ],
      "content": "Experiment under development"
    },
    {
      "pos": [
        9256,
        9278
      ],
      "content": "<bpt id=\"p53\">**</bpt>Set Up Web Service<ept id=\"p53\">**</ept>"
    },
    {
      "pos": [
        9279,
        9333
      ],
      "content": "Prepares the experiment for deploying as a web service"
    },
    {
      "pos": [
        9336,
        9370
      ],
      "content": "Experiment prepared for deployment"
    },
    {
      "pos": [
        9371,
        9393
      ],
      "content": "<bpt id=\"p54\">**</bpt>Deploy Web Service<ept id=\"p54\">**</ept>"
    },
    {
      "pos": [
        9394,
        9471
      ],
      "content": "Deploys the experiment as a web service, opens web service configuration page"
    },
    {
      "pos": [
        9477,
        9502
      ],
      "content": "Updating your web service"
    },
    {
      "pos": [
        9504,
        9574
      ],
      "content": "Now that you’ve deployed your experiment as a web service, what if you"
    },
    {
      "pos": [
        9575,
        9593
      ],
      "content": "need to update it?"
    },
    {
      "pos": [
        9595,
        9635
      ],
      "content": "That depends on what you need to update:"
    },
    {
      "pos": [
        9637,
        9739
      ],
      "content": "<bpt id=\"p55\">**</bpt>You want to change the input or output, or you want to modify how the\nweb service manipulates data<ept id=\"p55\">**</ept>"
    },
    {
      "pos": [
        9741,
        10039
      ],
      "content": "If you’re not changing the model but are just changing how the web\nservice handles data, you can edit the predictive experiment and then\nclick <bpt id=\"p56\">**</bpt>Deploy Web Service<ept id=\"p56\">**</ept><ph id=\"ph18\"/> again. The web service will be stopped, the\nupdated predictive experiment will be deployed, and the web service will\nstart up again.",
      "nodes": [
        {
          "content": "If you’re not changing the model but are just changing how the web\nservice handles data, you can edit the predictive experiment and then\nclick <bpt id=\"p56\">**</bpt>Deploy Web Service<ept id=\"p56\">**</ept><ph id=\"ph18\"/> again.",
          "pos": [
            0,
            227
          ]
        },
        {
          "content": "The web service will be stopped, the\nupdated predictive experiment will be deployed, and the web service will\nstart up again.",
          "pos": [
            228,
            353
          ]
        }
      ]
    },
    {
      "pos": [
        10041,
        10449
      ],
      "content": "Here’s an example: Suppose your predictive experiment returns the entire\nrow of input data with the predicted result. You may decide that you\nwant the web service to just return the result. So you can add a\n<bpt id=\"p57\">**</bpt>Project Columns<ept id=\"p57\">**</ept><ph id=\"ph19\"/> module in the predictive experiment, right before\nthe output port, to exclude columns other than the result. When you\nclick <bpt id=\"p58\">**</bpt>Deploy Web Service<ept id=\"p58\">**</ept><ph id=\"ph20\"/> again, the web service is updated.",
      "nodes": [
        {
          "content": "Here’s an example: Suppose your predictive experiment returns the entire\nrow of input data with the predicted result.",
          "pos": [
            0,
            117
          ]
        },
        {
          "content": "You may decide that you\nwant the web service to just return the result.",
          "pos": [
            118,
            189
          ]
        },
        {
          "content": "So you can add a\n<bpt id=\"p57\">**</bpt>Project Columns<ept id=\"p57\">**</ept><ph id=\"ph19\"/> module in the predictive experiment, right before\nthe output port, to exclude columns other than the result.",
          "pos": [
            190,
            390
          ]
        },
        {
          "content": "When you\nclick <bpt id=\"p58\">**</bpt>Deploy Web Service<ept id=\"p58\">**</ept><ph id=\"ph20\"/> again, the web service is updated.",
          "pos": [
            391,
            518
          ]
        }
      ]
    },
    {
      "pos": [
        10451,
        10498
      ],
      "content": "<bpt id=\"p59\">**</bpt>You want to retrain the model with new data<ept id=\"p59\">**</ept>"
    },
    {
      "pos": [
        10500,
        10570
      ],
      "content": "If you want to keep your machine learning model, but you would like to"
    },
    {
      "pos": [
        10571,
        10618
      ],
      "content": "retrain it with new data, you have two choices:"
    },
    {
      "pos": [
        10624,
        11104
      ],
      "leadings": [
        "",
        "    ",
        "    ",
        "    ",
        "    ",
        "    ",
        "    "
      ],
      "content": "<bpt id=\"p60\">**</bpt>Retrain the model while the web service is running<ept id=\"p60\">**</ept><ph id=\"ph21\"/> - If you want\nto retrain your model while the predictive web service is running,\nyou can do this by making a couple modifications to the training\nexperiment to make it a <bpt id=\"p61\">***</bpt><bpt id=\"p62\"/>retraining experiment<ept id=\"p62\">***</ept><ept id=\"p61\"/>, then you can\ndeploy it as a <bpt id=\"p63\">**</bpt><bpt id=\"p64\">*</bpt>retraining web<ept id=\"p64\">*</ept><ph id=\"ph22\"/> service<ept id=\"p63\">**</ept>. For instructions on how\nto do this, see <bpt id=\"p65\">[</bpt>Retrain Machine Learning models\nprogrammatically<ept id=\"p65\">](machine-learning-retrain-models-programmatically.md)</ept>.",
      "nodes": [
        {
          "content": "<bpt id=\"p60\">**</bpt>Retrain the model while the web service is running<ept id=\"p60\">**</ept><ph id=\"ph21\"/> - If you want\nto retrain your model while the predictive web service is running,\nyou can do this by making a couple modifications to the training\nexperiment to make it a <bpt id=\"p61\">***</bpt><bpt id=\"p62\"/>retraining experiment<ept id=\"p62\">***</ept><ept id=\"p61\"/>, then you can\ndeploy it as a <bpt id=\"p63\">**</bpt><bpt id=\"p64\">*</bpt>retraining web<ept id=\"p64\">*</ept><ph id=\"ph22\"/> service<ept id=\"p63\">**</ept>.",
          "pos": [
            0,
            531
          ]
        },
        {
          "content": "For instructions on how\nto do this, see <bpt id=\"p65\">[</bpt>Retrain Machine Learning models\nprogrammatically<ept id=\"p65\">](machine-learning-retrain-models-programmatically.md)</ept>.",
          "pos": [
            532,
            716
          ]
        }
      ]
    },
    {
      "pos": [
        11110,
        11588
      ],
      "leadings": [
        "",
        "    ",
        "    ",
        "    ",
        "    ",
        "    ",
        "    "
      ],
      "content": "<bpt id=\"p66\">**</bpt>Go back to the original training experiment and use different\ntraining data to develop your model<ept id=\"p66\">**</ept><ph id=\"ph23\"/> - Your predictive experiment\nis linked to the web service, but the training experiment is not\ndirectly linked in this way. If you modify the original training\nexperiment and click <bpt id=\"p67\">**</bpt>Set Up Web Service<ept id=\"p67\">**</ept>, it will create a <bpt id=\"p68\">*</bpt>new<ept id=\"p68\">*</ept>\npredictive experiment which, when deployed, will create a <bpt id=\"p69\">*</bpt>new<ept id=\"p69\">*</ept>\nweb service. It doesn’t just update the original web service.",
      "nodes": [
        {
          "content": "<bpt id=\"p66\">**</bpt>Go back to the original training experiment and use different\ntraining data to develop your model<ept id=\"p66\">**</ept><ph id=\"ph23\"/> - Your predictive experiment\nis linked to the web service, but the training experiment is not\ndirectly linked in this way.",
          "pos": [
            0,
            279
          ]
        },
        {
          "content": "If you modify the original training\nexperiment and click <bpt id=\"p67\">**</bpt>Set Up Web Service<ept id=\"p67\">**</ept>, it will create a <bpt id=\"p68\">*</bpt>new<ept id=\"p68\">*</ept>\npredictive experiment which, when deployed, will create a <bpt id=\"p69\">*</bpt>new<ept id=\"p69\">*</ept>\nweb service.",
          "pos": [
            280,
            580
          ]
        },
        {
          "content": "It doesn’t just update the original web service.",
          "pos": [
            581,
            629
          ]
        }
      ]
    },
    {
      "pos": [
        11594,
        12006
      ],
      "leadings": [
        "",
        "    ",
        "    ",
        "    ",
        "    ",
        "    "
      ],
      "content": "So if you need to modify the training experiment, open it and click\n<bpt id=\"p70\">**</bpt>Save As<ept id=\"p70\">**</ept><ph id=\"ph24\"/> to make a copy. This will leave intact the original\ntraining experiment, predictive experiment, and web service. You can\nnow create a new web service with your changes. Once you’ve deployed\nthe new web service you can then decide whether to stop the previous\nweb service or keep it running alongside the new one.",
      "nodes": [
        {
          "content": "So if you need to modify the training experiment, open it and click\n<bpt id=\"p70\">**</bpt>Save As<ept id=\"p70\">**</ept><ph id=\"ph24\"/> to make a copy.",
          "pos": [
            0,
            150
          ]
        },
        {
          "content": "This will leave intact the original\ntraining experiment, predictive experiment, and web service.",
          "pos": [
            151,
            247
          ]
        },
        {
          "content": "You can\nnow create a new web service with your changes.",
          "pos": [
            248,
            303
          ]
        },
        {
          "content": "Once you’ve deployed\nthe new web service you can then decide whether to stop the previous\nweb service or keep it running alongside the new one.",
          "pos": [
            304,
            447
          ]
        }
      ]
    },
    {
      "pos": [
        12008,
        12047
      ],
      "content": "<bpt id=\"p71\">**</bpt>You want to train a different model<ept id=\"p71\">**</ept>"
    },
    {
      "pos": [
        12049,
        12613
      ],
      "content": "If you want to make changes to\nyour original predictive experiment, such as selecting a different\nmachine learning algorithm, trying a different training method, etc.,\nthen you need to follow the second procedure described above for\nretraining your model: open the training experiment, click <bpt id=\"p72\">**</bpt>Save As<ept id=\"p72\">**</ept>\nto make a copy, and then start down the new path of developing your\nmodel, creating the predictive experiment, and deploying the web\nservice. This will create a new web service unrelated to the original\none - you can decide which one, or both, to keep running.",
      "nodes": [
        {
          "content": "If you want to make changes to\nyour original predictive experiment, such as selecting a different\nmachine learning algorithm, trying a different training method, etc.,\nthen you need to follow the second procedure described above for\nretraining your model: open the training experiment, click <bpt id=\"p72\">**</bpt>Save As<ept id=\"p72\">**</ept>\nto make a copy, and then start down the new path of developing your\nmodel, creating the predictive experiment, and deploying the web\nservice.",
          "pos": [
            0,
            485
          ]
        },
        {
          "content": "This will create a new web service unrelated to the original\none - you can decide which one, or both, to keep running.",
          "pos": [
            486,
            604
          ]
        }
      ]
    },
    {
      "pos": [
        12618,
        12637
      ],
      "content": "For further reading"
    },
    {
      "pos": [
        12639,
        12700
      ],
      "content": "For more details on this process, see the following articles:"
    },
    {
      "pos": [
        12706,
        12884
      ],
      "leadings": [
        "",
        "    "
      ],
      "content": "converting the experiment - <bpt id=\"p73\">[</bpt>Convert a Machine Learning training\nexperiment to a predictive experiment<ept id=\"p73\">](machine-learning-convert-training-experiment-to-scoring-experiment.md)</ept>"
    },
    {
      "pos": [
        12890,
        13028
      ],
      "leadings": [
        "",
        "    "
      ],
      "content": "deploying the web service - <bpt id=\"p74\">[</bpt>Deploy an Azure Machine Learning web\nservice<ept id=\"p74\">](machine-learning-publish-a-machine-learning-web-service.md)</ept>"
    },
    {
      "pos": [
        13034,
        13164
      ],
      "leadings": [
        "",
        "    "
      ],
      "content": "retraining the model - <bpt id=\"p75\">[</bpt>Retrain Machine Learning models\nprogrammatically<ept id=\"p75\">](machine-learning-retrain-models-programmatically.md)</ept>"
    },
    {
      "pos": [
        13166,
        13205
      ],
      "content": "For examples of the whole process, see:"
    },
    {
      "pos": [
        13211,
        13348
      ],
      "leadings": [
        "",
        "    ",
        "    "
      ],
      "content": "<bpt id=\"p76\">[</bpt>Machine learning tutorial: Create your first experiment in Azure\nMachine Learning\nStudio<ept id=\"p76\">](machine-learning-create-experiment.md)</ept>"
    },
    {
      "pos": [
        13354,
        13530
      ],
      "leadings": [
        "",
        "    ",
        "    "
      ],
      "content": "<bpt id=\"p77\">[</bpt>Walkthrough: Develop a predictive analytics solution for credit\nrisk assessment in Azure Machine\nLearning<ept id=\"p77\">](machine-learning-walkthrough-develop-predictive-solution.md)</ept>"
    }
  ],
  "content": "<properties\n    pageTitle=\"How a Machine Learning model progresses from an experiment to an operationalized web service | Microsoft Azure\"\n    description=\"An overview of the mechanics of how your Azure Machine Learning model progresses from a development experiment to an operationalized web service.\"\n    services=\"machine-learning\"\n    documentationCenter=\"\"\n    authors=\"garyericson\"\n    manager=\"paulettm\"\n    editor=\"cgronlun\"/>\n\n<tags\n    ms.service=\"machine-learning\"\n    ms.workload=\"data-services\"\n    ms.tgt_pltfrm=\"na\"\n    ms.devlang=\"na\"\n    ms.topic=\"article\"\n    ms.date=\"02/03/2016\"\n    ms.author=\"garye\"/>\n\n\n# How a Machine Learning model progresses from an experiment to an operationalized web service\n\nAn ***experiment*** is a canvas in Azure Machine Learning Studio that allows\nyou to interactively develop, run, test, and iterate as you create a\npredictive analysis model. A wide variety of modules are available that\nyou can use to bring data into your experiment, manipulate the data,\ntrain a model using machine learning algorithms, score the model,\nevaluate the results, and output final values.\n\nOnce you’re satisfied with your experiment, you can deploy it as an\n***Azure web service*** so that users can send it new data and receive back\nresults.\n\nIn this article we’ll give an overview of the mechanics of how your\nMachine Learning model progresses from a development experiment to an\noperationalized web service.\n\n>[AZURE.NOTE] There are other ways to develop and deploy machine learning\nmodels, but this article is focused on how you use Machine Learning\nStudio. For a discussion of how to create a predictive web service with\nR, see the blog post [Build & Deploy Predictive Web Apps Using RStudio\nand Azure\nML](http://blogs.technet.com/b/machinelearning/archive/2015/09/25/build-and-deploy-a-predictive-web-app-using-rstudio-and-azure-ml.aspx).\n\nWhile Azure Machine Learning Studio is designed primarily to help you\ndevelop and deploy a *predictive analysis model*, it’s possible to use\nStudio to develop an experiment that doesn’t include a predictive\nanalysis model. For example, an experiment might just input data,\nmanipulate it, and then output the results. Just like a predictive\nanalysis experiment, you can deploy this non-predictive experiment as a\nweb service, but it’s a simpler process because the experiment isn’t\ntraining or scoring a machine learning model. While that’s not the\ntypical use of Studio, we’ll include it in the discussion below so that\nwe can give a complete explanation of how Studio works.\n\n## Developing and deploying a predictive web service\n\nHere are the stages that a typical solution follows as you develop and\ndeploy it using Machine Learning Studio:\n\n![](media\\machine-learning-model-progression-experiment-to-web-service\\model-stages-from-experiment-to-web-service.png)\n\n*Figure 1 - Stages of a typical predictive analysis model*\n\n### The training experiment\n\nThe ***training experiment*** is the initial experiment canvas in Machine\nLearning Studio. The purpose of the training experiment is to give you a\nplace to develop, test, iterate, and eventually train a machine learning\nmodel. You can even train multiple models simultaneously as you look for\nthe best solution, but once you’re done experimenting you’ll select a\nsingle trained model and eliminate the rest from the experiment. For an\nexample of developing a predictive analysis experiment, see [Develop a\npredictive analytics solution for credit risk assessment in Azure\nMachine\nLearning](machine-learning-walkthrough-develop-predictive-solution.md).\n\n### The predictive experiment\n\nOnce you have a trained model in your training experiment, you click\n**Set Up Web Service** in Machine Learning Studio and Studio goes\nthrough the process of converting your training experiment to a\n***predictive experiment***. The purpose of the predictive experiment is to\nuse your trained model to score new data, with the goal of eventually\nbecoming operationalized as an Azure web service.\n\nThis conversion is done for you through the following steps:\n\n-   Convert the set of modules used for training into a single module\n    and save it as a trained model\n\n-   Eliminate any extraneous modules not related to scoring\n\n-   Add input and output ports that the eventual web service will use\n\nThere may be more changes you want to make to get your predictive\nexperiment ready to deploy as a web service. For example, if you want\nthe web service to output only a subset of results, you can add a\nfiltering module before the output port.\n\nIn this conversion process the training experiment is not discarded.\nWhen the process is complete you’ll have two tabs in Studio: one for the\ntraining experiment and one for the predictive experiment. This way,\nbefore you deploy your web service, you can make changes to the training\nexperiment and rebuild the predictive experiment. Or you can save a copy\nof the training experiment to start another line of experimentation.\n\n>[AZURE.NOTE] When you click **Set Up Web Service** you start an automatic\nprocess to convert your training experiment to a predictive experiment,\nand this works well in most cases. But if your training experiment is\ncomplex (for example, you have multiple paths for training that you join\ntogether), you might prefer to do this conversion manually. For more\ndetails on how this conversion process works, see [Convert a Machine\nLearning training experiment to a predictive\nexperiment](machine-learning-convert-training-experiment-to-scoring-experiment.md).\n\n### The web service\n\nOnce you’re satisfied that your predictive experiment is ready, you\nclick **Deploy Web Service** to operationalize your model by deploying\nit as an ***Azure web service***. Users can now send data to your model using\nthe web service REST API and receive back the results. For more\ninformation on how to do this, see [How to consume an Azure Machine\nLearning web service that has been deployed from a Machine Learning\nexperiment](machine-learning-consume-web-services.md).\n\nOnce you deploy the web service, the predictive experiment and web\nservice remain connected, and you can go back-and-forth between them:\n\n|***From this page…***|***click this…***|***to open this page…***|\n| ------------------- | --------------- | ---------------------- |\n|experiment canvas in Studio|**Go to web service**|web service configuration in Studio|\n|web service configuration in Studio|**View latest**|experiment canvas in Studio|\n|web service configuration in Studio|**Manage endpoints…**|endpoint management in Azure Classic Portal|\n|endpoint management in Azure Classic Portal|**Edit in Studio**|experiment canvas in Studio|\n\n![](media\\machine-learning-model-progression-experiment-to-web-service\\connections-between-experiment-and-web-service.png)\n\n*Figure 2 - Connections between an experiment and the web service*\n\n## The non-typical case: creating a non-predictive web service\n\nIf your experiment does not train a predictive analysis model, then you\ndon’t need to create both a training experiment and a scoring experiment - there’s\njust one experiment, and you can deploy it as a web service\n(Machine Learning Studio detects whether your experiment contains a\npredictive model by analyzing the modules you’ve used).\n\nAfter you’ve iterated on your experiment and are satisfied with it:\n\n1.  Click **Set Up Web Service** - input and output nodes are added\n    automatically\n\n2.  Click **Run**\n\n3.  Click **Deploy Web Service**\n\nYour web service is now deployed, and you can access and manage it just\nlike a predictive web service.\n\n## The web service buttons\n\nIn Machine Learning Studio, the web service buttons - **Set Up Web\nService** and **Deploy Web Service** - change name and function\ndepending on where you’re at in the development process.\n\n**Experiment contains a predictive model**\n\nIf the experiment trains and scores a predictive model, then the web\nservice buttons perform these functions:\n\n|**Type of experiment**|**Button**|**What it does**|\n| -------------------- | -------- | -------------- |\n|Experiment under development|**Set Up Web Service**|Gives two options|\n|&nbsp;|- **Predictive Web Service**|Converts the experiment into both a training experiment and a scoring experiment|\n|&nbsp;|- **Retraining Web Service**|Converts the experiment into a retraining experiment (see the \"Updating\" section below)|\n|Training experiment|**Set Up Web Service**|Gives two options|\n|&nbsp;|- **Update Predictive Experiment**|Updates the associated predictive experiment with changes you’ve made to the training experiment|\n|&nbsp;|- **Retraining Web Service**|Converts the training experiment into a retraining experiment (see the \"Updating\" section below)|\n|&nbsp;|-*or*- **Deploy Web Service**|If you have set up the retraining experiment for deployment, then this deploys it as a web service|\n|Predictive experiment|**Deploy Web Service**|Deploys the predictive experiment as a web service|\n\n**Experiment does *not* contain a predictive model**\n\nIf the experiment does not train and score a predictive model, then the\nweb service buttons are much simpler:\n\n|**Type of experiment**|**Button**|**What it does**|\n| -------------------- | -------- | -------------- |\n|Experiment under development|**Set Up Web Service**|Prepares the experiment for deploying as a web service|\n|Experiment prepared for deployment|**Deploy Web Service**|Deploys the experiment as a web service, opens web service configuration page|\n\n## Updating your web service\n\nNow that you’ve deployed your experiment as a web service, what if you\nneed to update it?\n\nThat depends on what you need to update:\n\n**You want to change the input or output, or you want to modify how the\nweb service manipulates data**\n\nIf you’re not changing the model but are just changing how the web\nservice handles data, you can edit the predictive experiment and then\nclick **Deploy Web Service** again. The web service will be stopped, the\nupdated predictive experiment will be deployed, and the web service will\nstart up again.\n\nHere’s an example: Suppose your predictive experiment returns the entire\nrow of input data with the predicted result. You may decide that you\nwant the web service to just return the result. So you can add a\n**Project Columns** module in the predictive experiment, right before\nthe output port, to exclude columns other than the result. When you\nclick **Deploy Web Service** again, the web service is updated.\n\n**You want to retrain the model with new data**\n\nIf you want to keep your machine learning model, but you would like to\nretrain it with new data, you have two choices:\n\n1.  **Retrain the model while the web service is running** - If you want\n    to retrain your model while the predictive web service is running,\n    you can do this by making a couple modifications to the training\n    experiment to make it a ***retraining experiment***, then you can\n    deploy it as a ***retraining web* service**. For instructions on how\n    to do this, see [Retrain Machine Learning models\n    programmatically](machine-learning-retrain-models-programmatically.md).\n\n2.  **Go back to the original training experiment and use different\n    training data to develop your model** - Your predictive experiment\n    is linked to the web service, but the training experiment is not\n    directly linked in this way. If you modify the original training\n    experiment and click **Set Up Web Service**, it will create a *new*\n    predictive experiment which, when deployed, will create a *new*\n    web service. It doesn’t just update the original web service.\n\n    So if you need to modify the training experiment, open it and click\n    **Save As** to make a copy. This will leave intact the original\n    training experiment, predictive experiment, and web service. You can\n    now create a new web service with your changes. Once you’ve deployed\n    the new web service you can then decide whether to stop the previous\n    web service or keep it running alongside the new one.\n\n**You want to train a different model**\n\nIf you want to make changes to\nyour original predictive experiment, such as selecting a different\nmachine learning algorithm, trying a different training method, etc.,\nthen you need to follow the second procedure described above for\nretraining your model: open the training experiment, click **Save As**\nto make a copy, and then start down the new path of developing your\nmodel, creating the predictive experiment, and deploying the web\nservice. This will create a new web service unrelated to the original\none - you can decide which one, or both, to keep running.\n\n## For further reading\n\nFor more details on this process, see the following articles:\n\n-   converting the experiment - [Convert a Machine Learning training\n    experiment to a predictive experiment](machine-learning-convert-training-experiment-to-scoring-experiment.md)\n\n-   deploying the web service - [Deploy an Azure Machine Learning web\n    service](machine-learning-publish-a-machine-learning-web-service.md)\n\n-   retraining the model - [Retrain Machine Learning models\n    programmatically](machine-learning-retrain-models-programmatically.md)\n\nFor examples of the whole process, see:\n\n-   [Machine learning tutorial: Create your first experiment in Azure\n    Machine Learning\n    Studio](machine-learning-create-experiment.md)\n\n-   [Walkthrough: Develop a predictive analytics solution for credit\n    risk assessment in Azure Machine\n    Learning](machine-learning-walkthrough-develop-predictive-solution.md)\n"
}