<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-cn" original="foo.file" tool-id="65c62bfd-ae40-4630-8d5f-7be1609b006e" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="65c62bfd-ae40-4630-8d5f-7be1609b006e" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
      <olfilehash xmlns="">1e570b48f01ed63333705d5da5031bc706a67a94</olfilehash>
    </header>
    <body>
      <group id="98c47b46-3aad-40dd-bab6-496ad9dc5b75">
        <trans-unit id="7b3b4d3b-eba0-48f5-8d37-f2238f35bbf2" xml:space="preserve">
          <source>ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9
title: PowerShell Snippets</source>
          <target state="new">ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9
title: PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="5d654546-f718-4e7d-96a3-a483c61d9ed2" xml:space="preserve">
          <source>PowerShell Snippets</source>
          <target state="new">PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="d9e745cd-26a9-49c1-abe6-ca21330a7fb2" xml:space="preserve">
          <source>Adding this sentence for testing HO-HB process.</source>
          <target state="new">Adding this sentence for testing HO-HB process.</target>
        </trans-unit>
        <trans-unit id="6cc8d652-fc2c-4865-97e1-b81aa063f35f" xml:space="preserve">
          <source>PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</source>
          <target state="new">PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</target>
        </trans-unit>
        <trans-unit id="aa8df318-cfe6-4868-bb47-bdb1775bb174" xml:space="preserve">
          <source>All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</source>
          <target state="new">All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</target>
        </trans-unit>
        <trans-unit id="94481b7e-ce6f-438d-be60-7a9dfdc6b887" xml:space="preserve">
          <source>If you aren't sure if you have the right permissions, type <bpt id="a1ee5541-4880-4e7b-a526-e4d979d08744">&lt;code&gt;</bpt>Get-VM<ept id="a1ee5541-4880-4e7b-a526-e4d979d08744">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</source>
          <target state="new">If you aren't sure if you have the right permissions, type <bpt id="a1ee5541-4880-4e7b-a526-e4d979d08744">&lt;code&gt;</bpt>Get-VM<ept id="a1ee5541-4880-4e7b-a526-e4d979d08744">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</target>
        </trans-unit>
        <trans-unit id="ab0cd196-00ec-49e2-93e6-138810052dea" xml:space="preserve">
          <source>PowerShell Direct tools</source>
          <target state="new">PowerShell Direct tools</target>
        </trans-unit>
        <trans-unit id="c2b16963-1bcb-471e-8271-bc590ef5afc8" xml:space="preserve">
          <source>All of the scripts and snippets in this section will rely on the following basics.</source>
          <target state="new">All of the scripts and snippets in this section will rely on the following basics.</target>
        </trans-unit>
        <trans-unit id="467dbc6a-2497-4f19-a222-acde5835f7c5" xml:space="preserve">
          <source><bpt id="b9fe5476-465e-4b54-b4a7-9f012bcdb4e0">&lt;strong&gt;</bpt>Requirements<ept id="b9fe5476-465e-4b54-b4a7-9f012bcdb4e0">&lt;/strong&gt;</ept> :</source>
          <target state="new"><bpt id="b9fe5476-465e-4b54-b4a7-9f012bcdb4e0">&lt;strong&gt;</bpt>Requirements<ept id="b9fe5476-465e-4b54-b4a7-9f012bcdb4e0">&lt;/strong&gt;</ept> :</target>
        </trans-unit>
        <trans-unit id="3c901528-bb44-4758-8a38-15aeee6a1801" xml:space="preserve">
          <source>PowerShell Direct.</source>
          <target state="new">PowerShell Direct.</target>
        </trans-unit>
        <trans-unit id="3d43e64b-cdc3-4bf7-92cc-08edb6879a8b" xml:space="preserve">
          <source>Windows 10 guest and host OS.</source>
          <target state="new">Windows 10 guest and host OS.</target>
        </trans-unit>
        <trans-unit id="f460dac3-0f8a-468e-b973-25f5c183723c" xml:space="preserve">
          <source><bpt id="c3a30657-a86b-45e5-8d57-ddba90c9586f">&lt;strong&gt;</bpt>Common Variables<ept id="c3a30657-a86b-45e5-8d57-ddba90c9586f">&lt;/strong&gt;</ept> :  
<bpt id="e4c37d23-2bc9-43ba-a116-1f3215cb98e9">&lt;code&gt;</bpt>$VMName<ept id="e4c37d23-2bc9-43ba-a116-1f3215cb98e9">&lt;/code&gt;</ept> -- this is a string with the VMName.</source>
          <target state="new"><bpt id="c3a30657-a86b-45e5-8d57-ddba90c9586f">&lt;strong&gt;</bpt>Common Variables<ept id="c3a30657-a86b-45e5-8d57-ddba90c9586f">&lt;/strong&gt;</ept> :  
<bpt id="e4c37d23-2bc9-43ba-a116-1f3215cb98e9">&lt;code&gt;</bpt>$VMName<ept id="e4c37d23-2bc9-43ba-a116-1f3215cb98e9">&lt;/code&gt;</ept> -- this is a string with the VMName.</target>
        </trans-unit>
        <trans-unit id="4a89c0b4-7321-4da7-97a8-a28a3903fea9" xml:space="preserve">
          <source>See a list of available VMs with <bpt id="79ef27c6-47e7-4783-bebc-09b24259b66d">&lt;code&gt;</bpt>Get-VM<ept id="79ef27c6-47e7-4783-bebc-09b24259b66d">&lt;/code&gt;</ept>  
<bpt id="2cd34883-5c18-4169-b3f4-2710f9581306">&lt;code&gt;</bpt>$cred<ept id="2cd34883-5c18-4169-b3f4-2710f9581306">&lt;/code&gt;</ept> -- Credential for the guest OS.</source>
          <target state="new">See a list of available VMs with <bpt id="79ef27c6-47e7-4783-bebc-09b24259b66d">&lt;code&gt;</bpt>Get-VM<ept id="79ef27c6-47e7-4783-bebc-09b24259b66d">&lt;/code&gt;</ept>  
<bpt id="2cd34883-5c18-4169-b3f4-2710f9581306">&lt;code&gt;</bpt>$cred<ept id="2cd34883-5c18-4169-b3f4-2710f9581306">&lt;/code&gt;</ept> -- Credential for the guest OS.</target>
        </trans-unit>
        <trans-unit id="d3e8bdac-3d1d-41ca-b8b7-05c918760b5b" xml:space="preserve">
          <source>Can be populated using <bpt id="f8367d7d-6425-4d07-82cc-f44e164bab26">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="f8367d7d-6425-4d07-82cc-f44e164bab26">&lt;/code&gt;</ept></source>
          <target state="new">Can be populated using <bpt id="f8367d7d-6425-4d07-82cc-f44e164bab26">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="f8367d7d-6425-4d07-82cc-f44e164bab26">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="bbee25dd-6331-479a-9f10-05faaa29a000" xml:space="preserve">
          <source>Check if the guest has booted</source>
          <target state="new">Check if the guest has booted</target>
        </trans-unit>
        <trans-unit id="b71351a8-40f0-45c1-9377-7087e2bf795d" xml:space="preserve">
          <source>Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</source>
          <target state="new">Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</target>
        </trans-unit>
        <trans-unit id="dc8663f3-fc85-4698-86d1-7db5e6a79bc9" xml:space="preserve">
          <source>Use this command to check whether the guest has booted.</source>
          <target state="new">Use this command to check whether the guest has booted.</target>
        </trans-unit>
        <trans-unit id="ce5777b2-f197-4721-b5b6-8cdcfbf50d82" xml:space="preserve">
          <source><bpt id="22af24de-c0b1-40c5-a788-7ef6e0d18019">&lt;strong&gt;</bpt>Outcome<ept id="22af24de-c0b1-40c5-a788-7ef6e0d18019">&lt;/strong&gt;</ept>  
Prints a friendly message declaring the state of the guest OS.</source>
          <target state="new"><bpt id="22af24de-c0b1-40c5-a788-7ef6e0d18019">&lt;strong&gt;</bpt>Outcome<ept id="22af24de-c0b1-40c5-a788-7ef6e0d18019">&lt;/strong&gt;</ept>  
Prints a friendly message declaring the state of the guest OS.</target>
        </trans-unit>
        <trans-unit id="c4f09c4a-3148-4063-a5bb-b2395383e71a" xml:space="preserve">
          <source>Script locking until the guest has booted</source>
          <target state="new">Script locking until the guest has booted</target>
        </trans-unit>
        <trans-unit id="14fdd262-5425-44e0-9810-09625982b0e6" xml:space="preserve">
          <source>The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</source>
          <target state="new">The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</target>
        </trans-unit>
        <trans-unit id="9d1a7b81-096d-48f2-b01d-9e98fe7777e9" xml:space="preserve">
          <source><bpt id="40ee714e-9c7f-4b7a-9174-5543ac7b42e5">&lt;strong&gt;</bpt>Outcome<ept id="40ee714e-9c7f-4b7a-9174-5543ac7b42e5">&lt;/strong&gt;</ept>  
Prints a friendly message and locks until the connection to the VM succeeds.</source>
          <target state="new"><bpt id="40ee714e-9c7f-4b7a-9174-5543ac7b42e5">&lt;strong&gt;</bpt>Outcome<ept id="40ee714e-9c7f-4b7a-9174-5543ac7b42e5">&lt;/strong&gt;</ept>  
Prints a friendly message and locks until the connection to the VM succeeds.</target>
        </trans-unit>
        <trans-unit id="bb4c87ff-52d9-4f63-8840-b2622677f317" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="9842e279-0bbd-40d8-a63b-c300333f31ad" xml:space="preserve">
          <source>Script locking until the guest has a network</source>
          <target state="new">Script locking until the guest has a network</target>
        </trans-unit>
        <trans-unit id="012849f4-78bb-4b9c-946a-268ca098d089" xml:space="preserve">
          <source>With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</source>
          <target state="new">With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</target>
        </trans-unit>
        <trans-unit id="98fca891-7c9a-4f0e-8e14-e058a70bf264" xml:space="preserve">
          <source><bpt id="766e082b-8ba9-43b7-b586-613cb1f2a643">&lt;em&gt;</bpt>* Outcome *<ept id="766e082b-8ba9-43b7-b586-613cb1f2a643">&lt;/em&gt;</ept>
Locks until a DHCP lease is recieved.</source>
          <target state="new"><bpt id="766e082b-8ba9-43b7-b586-613cb1f2a643">&lt;em&gt;</bpt>* Outcome *<ept id="766e082b-8ba9-43b7-b586-613cb1f2a643">&lt;/em&gt;</ept>
Locks until a DHCP lease is recieved.</target>
        </trans-unit>
        <trans-unit id="0108667d-f19d-488a-969c-baabd55b31ff" xml:space="preserve">
          <source>Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</source>
          <target state="new">Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</target>
        </trans-unit>
        <trans-unit id="e356a89a-3c35-4aa0-a5f3-a5ece3c9d178" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="c5c8931e-74e7-458b-8941-fb85436cf8d4" xml:space="preserve">
          <source>Managing credentials with PowerShell</source>
          <target state="new">Managing credentials with PowerShell</target>
        </trans-unit>
        <trans-unit id="6e98cf40-3f49-466b-bf20-9b7bb129a88d" xml:space="preserve">
          <source>Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</source>
          <target state="new">Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</target>
        </trans-unit>
        <trans-unit id="f4a8e857-65a0-42c8-b8aa-2a0aadcc9437" xml:space="preserve">
          <source>There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</source>
          <target state="new">There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</target>
        </trans-unit>
        <trans-unit id="77609885-b873-4196-b163-f492465c16eb" xml:space="preserve">
          <source>The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</source>
          <target state="new">The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</target>
        </trans-unit>
        <trans-unit id="a25a63c4-ac9b-4eee-bdb1-5b4c0301d23e" xml:space="preserve">
          <source>This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</source>
          <target state="new">This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</target>
        </trans-unit>
        <trans-unit id="91b59373-d28b-47c7-aa86-d9f200ff5ccd" xml:space="preserve">
          <source>In this scenario you can just run <bpt id="a08d380d-fa0c-49d5-b740-41df3e830f5b">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="a08d380d-fa0c-49d5-b740-41df3e830f5b">&lt;/code&gt;</ept>.</source>
          <target state="new">In this scenario you can just run <bpt id="a08d380d-fa0c-49d5-b740-41df3e830f5b">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="a08d380d-fa0c-49d5-b740-41df3e830f5b">&lt;/code&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="9d6054c6-1136-46b0-b979-1da71a064df4" xml:space="preserve">
          <source>Let PowerShell prompt you for credentials  
If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</source>
          <target state="new">Let PowerShell prompt you for credentials  
If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</target>
        </trans-unit>
        <trans-unit id="3c2b1753-6ca9-4f2c-8ecb-7d44ed795cfe" xml:space="preserve">
          <source>Store credentials in a variable for reuse.</source>
          <target state="new">Store credentials in a variable for reuse.</target>
        </trans-unit>
        <trans-unit id="a550afe4-d96f-4875-b633-9c0c5a6a7eb1" xml:space="preserve">
          <source>Running a simple command like this:</source>
          <target state="new">Running a simple command like this:</target>
        </trans-unit>
        <trans-unit id="a9c88e12-3ea7-4850-9fda-03b5a56cbd32" xml:space="preserve">
          <source>  And then running something like this:</source>
          <target state="new">  And then running something like this:</target>
        </trans-unit>
        <trans-unit id="9e2e1628-ae74-416f-bad5-ab2871bdcdb1" xml:space="preserve">
          <source>  Will mean that you only get prompted once per script/PowerShell session for your credentials.</source>
          <target state="new">  Will mean that you only get prompted once per script/PowerShell session for your credentials.</target>
        </trans-unit>
        <trans-unit id="104c503d-d72a-4aa2-8282-5fd7f6867ae4" xml:space="preserve">
          <source>Code your credentials into your scripts.</source>
          <target state="new">Code your credentials into your scripts.</target>
        </trans-unit>
        <trans-unit id="213d37ed-dbe2-4595-8b35-23be4a53193c" xml:space="preserve">
          <source><bpt id="bc3b7ecc-da39-4cca-917d-f708c862d945">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="bc3b7ecc-da39-4cca-917d-f708c862d945">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="bc3b7ecc-da39-4cca-917d-f708c862d945">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="bc3b7ecc-da39-4cca-917d-f708c862d945">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="9777ddd2-3c43-4e81-9d22-eb1b19d66992" xml:space="preserve">
          <source>Warning:  _Do not do this in a production system.</source>
          <target state="new">Warning:  _Do not do this in a production system.</target>
        </trans-unit>
        <trans-unit id="696a08c3-5674-42d0-93fe-1fae3ddee595" xml:space="preserve">
          <source>Do not do this with real passwords._</source>
          <target state="new">Do not do this with real passwords._</target>
        </trans-unit>
        <trans-unit id="1c322847-4108-4fc5-8124-ffb4efdc2600" xml:space="preserve">
          <source>You can hand craft a PSCredential object with some code like this:</source>
          <target state="new">You can hand craft a PSCredential object with some code like this:</target>
        </trans-unit>
        <trans-unit id="d770fe6c-5f3e-4f4d-83fc-75e8901af344" xml:space="preserve">
          <source>Grossly insecure - but useful for testing.</source>
          <target state="new">Grossly insecure - but useful for testing.</target>
        </trans-unit>
        <trans-unit id="d36899a3-9d92-4fd2-879b-478c8e5360c7" xml:space="preserve">
          <source>Now you get no prompts at all in this session.</source>
          <target state="new">Now you get no prompts at all in this session.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>