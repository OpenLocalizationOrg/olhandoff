<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-cn" original="foo.file" tool-id="daf0b680-4d05-4cf0-a273-f10511bea6af" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="daf0b680-4d05-4cf0-a273-f10511bea6af" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group id="4d252f8c-6057-469c-b0c6-d95442ef2f8e">
        <trans-unit id="4d54e6a1-9a94-49ec-a635-b12c3eb1263f" xml:space="preserve">
          <source>ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9
title: PowerShell Snippets</source>
          <target state="new">ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9
title: PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="09126a56-be32-43ba-b717-5b660b7a6917" xml:space="preserve">
          <source>PowerShell Snippets</source>
          <target state="new">PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="b636c8f7-4091-4aaf-adef-b790c239c29a" xml:space="preserve">
          <source>Adding this sentence for testing HO-HB process.</source>
          <target state="new">Adding this sentence for testing HO-HB process.</target>
        </trans-unit>
        <trans-unit id="8c26a562-8e68-4acc-aa39-83c46ff1cac8" xml:space="preserve">
          <source>PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</source>
          <target state="new">PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</target>
        </trans-unit>
        <trans-unit id="1963e6ac-e7f4-4dbc-83f5-b22e5ba681b9" xml:space="preserve">
          <source>All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</source>
          <target state="new">All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</target>
        </trans-unit>
        <trans-unit id="5f3e28b5-f780-49b5-b549-2acf896ef641" xml:space="preserve">
          <source>If you aren't sure if you have the right permissions, type <bpt id="e42a1771-504a-420a-8e83-cc3da036790d">&lt;code&gt;</bpt>Get-VM<ept id="e42a1771-504a-420a-8e83-cc3da036790d">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</source>
          <target state="new">If you aren't sure if you have the right permissions, type <bpt id="e42a1771-504a-420a-8e83-cc3da036790d">&lt;code&gt;</bpt>Get-VM<ept id="e42a1771-504a-420a-8e83-cc3da036790d">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</target>
        </trans-unit>
        <trans-unit id="a5b69935-33bb-406c-9f64-efa139f02ff6" xml:space="preserve">
          <source>PowerShell Direct tools</source>
          <target state="new">PowerShell Direct tools</target>
        </trans-unit>
        <trans-unit id="4c5b5e41-b598-4f37-bfdf-caca6b156253" xml:space="preserve">
          <source>All of the scripts and snippets in this section will rely on the following basics.</source>
          <target state="new">All of the scripts and snippets in this section will rely on the following basics.</target>
        </trans-unit>
        <trans-unit id="5ebf2fa2-e109-4a79-afe4-fb405826ad3d" xml:space="preserve">
          <source><bpt id="4b77028a-ff24-4f59-8929-216d15289eee">&lt;strong&gt;</bpt>Requirements<ept id="4b77028a-ff24-4f59-8929-216d15289eee">&lt;/strong&gt;</ept> :</source>
          <target state="new"><bpt id="4b77028a-ff24-4f59-8929-216d15289eee">&lt;strong&gt;</bpt>Requirements<ept id="4b77028a-ff24-4f59-8929-216d15289eee">&lt;/strong&gt;</ept> :</target>
        </trans-unit>
        <trans-unit id="24516063-defe-4711-bec2-942c89e88f46" xml:space="preserve">
          <source>PowerShell Direct.</source>
          <target state="new">PowerShell Direct.</target>
        </trans-unit>
        <trans-unit id="f2566752-2b82-4807-80d9-d5c168449f44" xml:space="preserve">
          <source>Windows 10 guest and host OS.</source>
          <target state="new">Windows 10 guest and host OS.</target>
        </trans-unit>
        <trans-unit id="7f370b60-2291-440c-9198-3f4f873eccf9" xml:space="preserve">
          <source><bpt id="c630a333-52cb-4163-a7ff-ca3028461738">&lt;strong&gt;</bpt>Common Variables<ept id="c630a333-52cb-4163-a7ff-ca3028461738">&lt;/strong&gt;</ept> :  
<bpt id="368de0b0-d198-4ca9-958e-b6aad85ea92a">&lt;code&gt;</bpt>$VMName<ept id="368de0b0-d198-4ca9-958e-b6aad85ea92a">&lt;/code&gt;</ept> -- this is a string with the VMName.</source>
          <target state="new"><bpt id="c630a333-52cb-4163-a7ff-ca3028461738">&lt;strong&gt;</bpt>Common Variables<ept id="c630a333-52cb-4163-a7ff-ca3028461738">&lt;/strong&gt;</ept> :  
<bpt id="368de0b0-d198-4ca9-958e-b6aad85ea92a">&lt;code&gt;</bpt>$VMName<ept id="368de0b0-d198-4ca9-958e-b6aad85ea92a">&lt;/code&gt;</ept> -- this is a string with the VMName.</target>
        </trans-unit>
        <trans-unit id="2ab8f09e-2a86-4544-b507-415af6f862a7" xml:space="preserve">
          <source>See a list of available VMs with <bpt id="d16403d6-de24-4239-b3ac-04e879165824">&lt;code&gt;</bpt>Get-VM<ept id="d16403d6-de24-4239-b3ac-04e879165824">&lt;/code&gt;</ept>  
<bpt id="dad94a3c-fff4-4054-a164-70cb2bf69414">&lt;code&gt;</bpt>$cred<ept id="dad94a3c-fff4-4054-a164-70cb2bf69414">&lt;/code&gt;</ept> -- Credential for the guest OS.</source>
          <target state="new">See a list of available VMs with <bpt id="d16403d6-de24-4239-b3ac-04e879165824">&lt;code&gt;</bpt>Get-VM<ept id="d16403d6-de24-4239-b3ac-04e879165824">&lt;/code&gt;</ept>  
<bpt id="dad94a3c-fff4-4054-a164-70cb2bf69414">&lt;code&gt;</bpt>$cred<ept id="dad94a3c-fff4-4054-a164-70cb2bf69414">&lt;/code&gt;</ept> -- Credential for the guest OS.</target>
        </trans-unit>
        <trans-unit id="13f0fe9a-7225-48f8-be82-7457a89b615c" xml:space="preserve">
          <source>Can be populated using <bpt id="46e8f371-eeaf-4b00-b28c-db01e0585e17">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="46e8f371-eeaf-4b00-b28c-db01e0585e17">&lt;/code&gt;</ept></source>
          <target state="new">Can be populated using <bpt id="46e8f371-eeaf-4b00-b28c-db01e0585e17">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="46e8f371-eeaf-4b00-b28c-db01e0585e17">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="74777eaf-9025-4630-9722-e3d340cfc9ef" xml:space="preserve">
          <source>Check if the guest has booted</source>
          <target state="new">Check if the guest has booted</target>
        </trans-unit>
        <trans-unit id="ba8e3d64-0be9-492f-bf5c-9a4665ed2a8b" xml:space="preserve">
          <source>Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</source>
          <target state="new">Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</target>
        </trans-unit>
        <trans-unit id="d94587bf-4885-44a8-903b-b902e382353b" xml:space="preserve">
          <source>Use this command to check whether the guest has booted.</source>
          <target state="new">Use this command to check whether the guest has booted.</target>
        </trans-unit>
        <trans-unit id="f69ba2bf-36ad-448c-aca5-dbf6bb84b031" xml:space="preserve">
          <source><bpt id="7c767004-c9c3-4050-b457-4aae0cebfe3f">&lt;strong&gt;</bpt>Outcome<ept id="7c767004-c9c3-4050-b457-4aae0cebfe3f">&lt;/strong&gt;</ept>  
Prints a friendly message declaring the state of the guest OS.</source>
          <target state="new"><bpt id="7c767004-c9c3-4050-b457-4aae0cebfe3f">&lt;strong&gt;</bpt>Outcome<ept id="7c767004-c9c3-4050-b457-4aae0cebfe3f">&lt;/strong&gt;</ept>  
Prints a friendly message declaring the state of the guest OS.</target>
        </trans-unit>
        <trans-unit id="44d9ac1e-b34c-4dae-a5db-d42afec7d03e" xml:space="preserve">
          <source>Script locking until the guest has booted</source>
          <target state="new">Script locking until the guest has booted</target>
        </trans-unit>
        <trans-unit id="e52a6593-e33e-44cb-9623-d33e046287b7" xml:space="preserve">
          <source>The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</source>
          <target state="new">The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</target>
        </trans-unit>
        <trans-unit id="7567def3-23be-47aa-8b00-ae3023010a74" xml:space="preserve">
          <source><bpt id="2eaeb00a-5566-4efa-bf6c-1466e743d1f8">&lt;strong&gt;</bpt>Outcome<ept id="2eaeb00a-5566-4efa-bf6c-1466e743d1f8">&lt;/strong&gt;</ept>  
Prints a friendly message and locks until the connection to the VM succeeds.</source>
          <target state="new"><bpt id="2eaeb00a-5566-4efa-bf6c-1466e743d1f8">&lt;strong&gt;</bpt>Outcome<ept id="2eaeb00a-5566-4efa-bf6c-1466e743d1f8">&lt;/strong&gt;</ept>  
Prints a friendly message and locks until the connection to the VM succeeds.</target>
        </trans-unit>
        <trans-unit id="c2cb3530-a8f5-4138-87c2-61520e7f7d35" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="53d3a476-5741-4bd3-88bc-d5c6892814de" xml:space="preserve">
          <source>Script locking until the guest has a network</source>
          <target state="new">Script locking until the guest has a network</target>
        </trans-unit>
        <trans-unit id="82f8a2df-2f88-47c2-99fd-c36d7d8113de" xml:space="preserve">
          <source>With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</source>
          <target state="new">With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</target>
        </trans-unit>
        <trans-unit id="2759207d-8d27-465e-b35f-822391f7e62b" xml:space="preserve">
          <source><bpt id="21cc9b32-5aa3-4c63-af98-987b089861a4">&lt;em&gt;</bpt>* Outcome *<ept id="21cc9b32-5aa3-4c63-af98-987b089861a4">&lt;/em&gt;</ept>
Locks until a DHCP lease is recieved.</source>
          <target state="new"><bpt id="21cc9b32-5aa3-4c63-af98-987b089861a4">&lt;em&gt;</bpt>* Outcome *<ept id="21cc9b32-5aa3-4c63-af98-987b089861a4">&lt;/em&gt;</ept>
Locks until a DHCP lease is recieved.</target>
        </trans-unit>
        <trans-unit id="8f09d414-fc6b-47a6-9d27-9c7d6ea9ed30" xml:space="preserve">
          <source>Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</source>
          <target state="new">Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</target>
        </trans-unit>
        <trans-unit id="4e261896-f01c-478c-aeba-8928a9031c5f" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="b3c78785-1ffd-4bf6-b384-faa7bd6f86e8" xml:space="preserve">
          <source>Managing credentials with PowerShell</source>
          <target state="new">Managing credentials with PowerShell</target>
        </trans-unit>
        <trans-unit id="0e1e48dd-6416-4c31-9686-64b5092d4905" xml:space="preserve">
          <source>Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</source>
          <target state="new">Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</target>
        </trans-unit>
        <trans-unit id="3a025057-1805-4997-bece-1063888b8fe8" xml:space="preserve">
          <source>There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</source>
          <target state="new">There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</target>
        </trans-unit>
        <trans-unit id="9ac79de5-de82-4a23-9633-0309f5c78b07" xml:space="preserve">
          <source>The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</source>
          <target state="new">The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</target>
        </trans-unit>
        <trans-unit id="1c544a83-d112-4c3a-9e69-77954bffd865" xml:space="preserve">
          <source>This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</source>
          <target state="new">This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</target>
        </trans-unit>
        <trans-unit id="e4c9454b-5450-453b-a72a-d132947a8eea" xml:space="preserve">
          <source>In this scenario you can just run <bpt id="5555626d-d997-41b3-bc6a-4e6dcf72b248">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="5555626d-d997-41b3-bc6a-4e6dcf72b248">&lt;/code&gt;</ept>.</source>
          <target state="new">In this scenario you can just run <bpt id="5555626d-d997-41b3-bc6a-4e6dcf72b248">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="5555626d-d997-41b3-bc6a-4e6dcf72b248">&lt;/code&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="e18c1ab7-320e-431e-9b94-f75d90cd9724" xml:space="preserve">
          <source>Let PowerShell prompt you for credentials  
If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</source>
          <target state="new">Let PowerShell prompt you for credentials  
If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</target>
        </trans-unit>
        <trans-unit id="4cdfa990-a048-4b8a-bc2d-0da8547351e8" xml:space="preserve">
          <source>Store credentials in a variable for reuse.</source>
          <target state="new">Store credentials in a variable for reuse.</target>
        </trans-unit>
        <trans-unit id="c5faf68a-58fc-4204-b6c7-66a07b9aceb7" xml:space="preserve">
          <source>Running a simple command like this:</source>
          <target state="new">Running a simple command like this:</target>
        </trans-unit>
        <trans-unit id="d3d3147a-edd4-4857-bba9-4ad4db2d009b" xml:space="preserve">
          <source>  Will mean that you only get prompted once per script/PowerShell session for your credentials.</source>
          <target state="new">  Will mean that you only get prompted once per script/PowerShell session for your credentials.</target>
        </trans-unit>
        <trans-unit id="d506f05a-dd6e-44dd-b72c-975561d566e7" xml:space="preserve">
          <source>Code your credentials into your scripts.</source>
          <target state="new">Code your credentials into your scripts.</target>
        </trans-unit>
        <trans-unit id="72152509-f2e0-4075-acad-3e7ff96145e2" xml:space="preserve">
          <source><bpt id="88871348-3daa-4582-b258-93e3e1c13d4d">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="88871348-3daa-4582-b258-93e3e1c13d4d">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="88871348-3daa-4582-b258-93e3e1c13d4d">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="88871348-3daa-4582-b258-93e3e1c13d4d">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="ca08aec3-cd67-4852-99e5-80d43743b790" xml:space="preserve">
          <source>Warning:  _Do not do this in a production system.</source>
          <target state="new">Warning:  _Do not do this in a production system.</target>
        </trans-unit>
        <trans-unit id="bb89a292-edd1-440e-b416-d80cd54404d4" xml:space="preserve">
          <source>Do not do this with real passwords._</source>
          <target state="new">Do not do this with real passwords._</target>
        </trans-unit>
        <trans-unit id="8cc30036-ecc4-499f-bd41-301db6d2ddec" xml:space="preserve">
          <source>You can hand craft a PSCredential object with some code like this:</source>
          <target state="new">You can hand craft a PSCredential object with some code like this:</target>
        </trans-unit>
        <trans-unit id="83a74077-570d-4b5a-8c9a-2650e8200025" xml:space="preserve">
          <source>Grossly insecure - but useful for testing.</source>
          <target state="new">Grossly insecure - but useful for testing.</target>
        </trans-unit>
        <trans-unit id="c0c4ef39-1bfa-49e0-b200-d118f47049fa" xml:space="preserve">
          <source>Now you get no prompts at all in this session.</source>
          <target state="new">Now you get no prompts at all in this session.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>