<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="zh-cn" original="foo.file" tool-id="106e5091-ae9c-417c-ac2c-fa556742860b" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="106e5091-ae9c-417c-ac2c-fa556742860b" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
      <olfilehash xmlns="">1e570b48f01ed63333705d5da5031bc706a67a94</olfilehash>
    </header>
    <body>
      <group id="e90151de-4d65-42d1-9ec0-fb2cd3bdb0b4">
        <trans-unit id="55fbe19c-9d07-480b-9028-d9e8cbfc5c7a" xml:space="preserve">
          <source>ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9
title: PowerShell Snippets</source>
          <target state="new">ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9
title: PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="af444e03-6f73-43da-8397-d380663a6621" xml:space="preserve">
          <source>PowerShell Snippets</source>
          <target state="new">PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="dc403020-1531-4c08-bd8a-0c7fe32cb35b" xml:space="preserve">
          <source>Adding this sentence for testing HO-HB process.</source>
          <target state="new">Adding this sentence for testing HO-HB process.</target>
        </trans-unit>
        <trans-unit id="073af9c8-44ed-48a2-a11f-dd10bb20602b" xml:space="preserve">
          <source>PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</source>
          <target state="new">PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</target>
        </trans-unit>
        <trans-unit id="98154d48-2d48-494b-9b72-541091f0219c" xml:space="preserve">
          <source>All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</source>
          <target state="new">All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</target>
        </trans-unit>
        <trans-unit id="81c80839-7cd6-4296-a07d-350603743758" xml:space="preserve">
          <source>If you aren't sure if you have the right permissions, type <bpt id="87af05a4-98e2-4bdb-9e42-c5360bdce80f">&lt;code&gt;</bpt>Get-VM<ept id="87af05a4-98e2-4bdb-9e42-c5360bdce80f">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</source>
          <target state="new">If you aren't sure if you have the right permissions, type <bpt id="87af05a4-98e2-4bdb-9e42-c5360bdce80f">&lt;code&gt;</bpt>Get-VM<ept id="87af05a4-98e2-4bdb-9e42-c5360bdce80f">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</target>
        </trans-unit>
        <trans-unit id="9a1bc7c2-450e-4812-b1ea-6c558ecb92ee" xml:space="preserve">
          <source>PowerShell Direct tools</source>
          <target state="new">PowerShell Direct tools</target>
        </trans-unit>
        <trans-unit id="bf01055e-46b5-4c50-8e4c-0d5539ce2c05" xml:space="preserve">
          <source>All of the scripts and snippets in this section will rely on the following basics.</source>
          <target state="new">All of the scripts and snippets in this section will rely on the following basics.</target>
        </trans-unit>
        <trans-unit id="ca2dea13-3d94-4f47-95bc-705d1879ea8d" xml:space="preserve">
          <source><bpt id="a2588b71-4e4c-4658-b096-4a791a641003">&lt;strong&gt;</bpt>Requirements<ept id="a2588b71-4e4c-4658-b096-4a791a641003">&lt;/strong&gt;</ept> :</source>
          <target state="new"><bpt id="a2588b71-4e4c-4658-b096-4a791a641003">&lt;strong&gt;</bpt>Requirements<ept id="a2588b71-4e4c-4658-b096-4a791a641003">&lt;/strong&gt;</ept> :</target>
        </trans-unit>
        <trans-unit id="dd4ef59c-cea2-4af3-bbeb-27f67585f696" xml:space="preserve">
          <source>PowerShell Direct.</source>
          <target state="new">PowerShell Direct.</target>
        </trans-unit>
        <trans-unit id="1dff2d9f-138a-4efb-9973-a7134f19ca79" xml:space="preserve">
          <source>Windows 10 guest and host OS.</source>
          <target state="new">Windows 10 guest and host OS.</target>
        </trans-unit>
        <trans-unit id="c0bf4b88-b446-4056-912a-22ccf89899d6" xml:space="preserve">
          <source><bpt id="737b7186-b7f0-482b-9695-f38beea23999">&lt;strong&gt;</bpt>Common Variables<ept id="737b7186-b7f0-482b-9695-f38beea23999">&lt;/strong&gt;</ept> :  
<bpt id="3b74b52f-8456-4627-8750-74498d14822a">&lt;code&gt;</bpt>$VMName<ept id="3b74b52f-8456-4627-8750-74498d14822a">&lt;/code&gt;</ept> -- this is a string with the VMName.</source>
          <target state="new"><bpt id="737b7186-b7f0-482b-9695-f38beea23999">&lt;strong&gt;</bpt>Common Variables<ept id="737b7186-b7f0-482b-9695-f38beea23999">&lt;/strong&gt;</ept> :  
<bpt id="3b74b52f-8456-4627-8750-74498d14822a">&lt;code&gt;</bpt>$VMName<ept id="3b74b52f-8456-4627-8750-74498d14822a">&lt;/code&gt;</ept> -- this is a string with the VMName.</target>
        </trans-unit>
        <trans-unit id="5fc7c5a5-0df1-4105-8f1b-f44e0a28e43d" xml:space="preserve">
          <source>See a list of available VMs with <bpt id="a329cd4f-e710-4beb-b3ba-1742446e50b0">&lt;code&gt;</bpt>Get-VM<ept id="a329cd4f-e710-4beb-b3ba-1742446e50b0">&lt;/code&gt;</ept>  
<bpt id="39423741-f19a-4a45-9a86-b3299273123a">&lt;code&gt;</bpt>$cred<ept id="39423741-f19a-4a45-9a86-b3299273123a">&lt;/code&gt;</ept> -- Credential for the guest OS.</source>
          <target state="new">See a list of available VMs with <bpt id="a329cd4f-e710-4beb-b3ba-1742446e50b0">&lt;code&gt;</bpt>Get-VM<ept id="a329cd4f-e710-4beb-b3ba-1742446e50b0">&lt;/code&gt;</ept>  
<bpt id="39423741-f19a-4a45-9a86-b3299273123a">&lt;code&gt;</bpt>$cred<ept id="39423741-f19a-4a45-9a86-b3299273123a">&lt;/code&gt;</ept> -- Credential for the guest OS.</target>
        </trans-unit>
        <trans-unit id="c2483871-6a9a-4a14-8ec6-1ace86f65186" xml:space="preserve">
          <source>Can be populated using <bpt id="d8e70340-0bf8-48be-9d81-b694270fbf80">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="d8e70340-0bf8-48be-9d81-b694270fbf80">&lt;/code&gt;</ept></source>
          <target state="new">Can be populated using <bpt id="d8e70340-0bf8-48be-9d81-b694270fbf80">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="d8e70340-0bf8-48be-9d81-b694270fbf80">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="684724a6-5472-4194-bdf7-81c981825d54" xml:space="preserve">
          <source>Check if the guest has booted</source>
          <target state="new">Check if the guest has booted</target>
        </trans-unit>
        <trans-unit id="33836c8d-89ce-4125-b74f-53558d944a33" xml:space="preserve">
          <source>Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</source>
          <target state="new">Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</target>
        </trans-unit>
        <trans-unit id="18ed5840-3853-4c1d-b5a8-ad66bb2dcdef" xml:space="preserve">
          <source>Use this command to check whether the guest has booted.</source>
          <target state="new">Use this command to check whether the guest has booted.</target>
        </trans-unit>
        <trans-unit id="11ac9006-fe60-4800-8c8c-73af4056b794" xml:space="preserve">
          <source><bpt id="3968bcdf-8733-457f-a51b-9ff2be14e12b">&lt;strong&gt;</bpt>Outcome<ept id="3968bcdf-8733-457f-a51b-9ff2be14e12b">&lt;/strong&gt;</ept>  
Prints a friendly message declaring the state of the guest OS.</source>
          <target state="new"><bpt id="3968bcdf-8733-457f-a51b-9ff2be14e12b">&lt;strong&gt;</bpt>Outcome<ept id="3968bcdf-8733-457f-a51b-9ff2be14e12b">&lt;/strong&gt;</ept>  
Prints a friendly message declaring the state of the guest OS.</target>
        </trans-unit>
        <trans-unit id="0318f116-1a0d-4d3e-b1b2-bda8d8e48d98" xml:space="preserve">
          <source>Script locking until the guest has booted</source>
          <target state="new">Script locking until the guest has booted</target>
        </trans-unit>
        <trans-unit id="677f9ff6-b35b-4f6f-81da-eae4f995a6ff" xml:space="preserve">
          <source>The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</source>
          <target state="new">The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</target>
        </trans-unit>
        <trans-unit id="fdfeac3c-bbf4-4afd-b857-ffa8142a287e" xml:space="preserve">
          <source><bpt id="80ded5b4-34fa-4f01-9783-76992f181db3">&lt;strong&gt;</bpt>Outcome<ept id="80ded5b4-34fa-4f01-9783-76992f181db3">&lt;/strong&gt;</ept>  
Prints a friendly message and locks until the connection to the VM succeeds.</source>
          <target state="new"><bpt id="80ded5b4-34fa-4f01-9783-76992f181db3">&lt;strong&gt;</bpt>Outcome<ept id="80ded5b4-34fa-4f01-9783-76992f181db3">&lt;/strong&gt;</ept>  
Prints a friendly message and locks until the connection to the VM succeeds.</target>
        </trans-unit>
        <trans-unit id="883b3c5e-1970-44c9-8cc2-20c601cfe611" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="b22c9ece-e0a5-4cc0-b49b-d982a4dd1930" xml:space="preserve">
          <source>Script locking until the guest has a network</source>
          <target state="new">Script locking until the guest has a network</target>
        </trans-unit>
        <trans-unit id="b6ac2b44-32bb-48b9-a8fc-4e211cd3a3f9" xml:space="preserve">
          <source>With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</source>
          <target state="new">With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</target>
        </trans-unit>
        <trans-unit id="3950a25c-b728-44a4-b000-b51c86756642" xml:space="preserve">
          <source><bpt id="32a30849-64cf-47d8-869f-a7f0af130fc1">&lt;em&gt;</bpt>* Outcome *<ept id="32a30849-64cf-47d8-869f-a7f0af130fc1">&lt;/em&gt;</ept>
Locks until a DHCP lease is recieved.</source>
          <target state="new"><bpt id="32a30849-64cf-47d8-869f-a7f0af130fc1">&lt;em&gt;</bpt>* Outcome *<ept id="32a30849-64cf-47d8-869f-a7f0af130fc1">&lt;/em&gt;</ept>
Locks until a DHCP lease is recieved.</target>
        </trans-unit>
        <trans-unit id="21744dd7-0a33-4b65-a6b7-5f82966a75ff" xml:space="preserve">
          <source>Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</source>
          <target state="new">Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</target>
        </trans-unit>
        <trans-unit id="11bade9b-845e-4e5c-ab5d-5fffb5ee7d8d" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="ee817a60-593a-44c0-a4a0-96587fe32149" xml:space="preserve">
          <source>Managing credentials with PowerShell</source>
          <target state="new">Managing credentials with PowerShell</target>
        </trans-unit>
        <trans-unit id="d1092175-6380-4fd9-bb15-bbe5ee7eeade" xml:space="preserve">
          <source>Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</source>
          <target state="new">Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</target>
        </trans-unit>
        <trans-unit id="2b506b81-868e-415b-9475-7a1d055d0dc1" xml:space="preserve">
          <source>There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</source>
          <target state="new">There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</target>
        </trans-unit>
        <trans-unit id="4fa283b1-4261-4a14-bd2a-0273bde49efb" xml:space="preserve">
          <source>The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</source>
          <target state="new">The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</target>
        </trans-unit>
        <trans-unit id="42b37542-dadf-4a06-b928-3a140fdd435d" xml:space="preserve">
          <source>This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</source>
          <target state="new">This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</target>
        </trans-unit>
        <trans-unit id="a7a7f186-6629-45fc-aa47-86448d5bf40d" xml:space="preserve">
          <source>In this scenario you can just run <bpt id="27873be1-010f-4d3a-9cca-a344504218f3">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="27873be1-010f-4d3a-9cca-a344504218f3">&lt;/code&gt;</ept>.</source>
          <target state="new">In this scenario you can just run <bpt id="27873be1-010f-4d3a-9cca-a344504218f3">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="27873be1-010f-4d3a-9cca-a344504218f3">&lt;/code&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="9b51f7f8-e9aa-43ce-8cf7-45754ce06100" xml:space="preserve">
          <source>Let PowerShell prompt you for credentials  
If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</source>
          <target state="new">Let PowerShell prompt you for credentials  
If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</target>
        </trans-unit>
        <trans-unit id="e2572806-a15c-4793-af43-b5a4407df14b" xml:space="preserve">
          <source>Store credentials in a variable for reuse.</source>
          <target state="new">Store credentials in a variable for reuse.</target>
        </trans-unit>
        <trans-unit id="5acf5c13-3cab-4bea-82a7-3fd4710bc2e1" xml:space="preserve">
          <source>Running a simple command like this:</source>
          <target state="new">Running a simple command like this:</target>
        </trans-unit>
        <trans-unit id="bc5732db-77f2-4602-a5c6-e29ff6ca9f6c" xml:space="preserve">
          <source>  And then running something like this:</source>
          <target state="new">  And then running something like this:</target>
        </trans-unit>
        <trans-unit id="6f5a442b-6d85-4e5b-a12f-ab0759cec586" xml:space="preserve">
          <source>  Will mean that you only get prompted once per script/PowerShell session for your credentials.</source>
          <target state="new">  Will mean that you only get prompted once per script/PowerShell session for your credentials.</target>
        </trans-unit>
        <trans-unit id="a3aaaf9c-5c5e-4c73-9697-904ee0cc8a66" xml:space="preserve">
          <source>Code your credentials into your scripts.</source>
          <target state="new">Code your credentials into your scripts.</target>
        </trans-unit>
        <trans-unit id="641840c0-c8da-4416-9645-0b7f63b7be95" xml:space="preserve">
          <source><bpt id="8a27a02f-e240-457e-ba97-2cf6a632c873">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="8a27a02f-e240-457e-ba97-2cf6a632c873">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="8a27a02f-e240-457e-ba97-2cf6a632c873">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="8a27a02f-e240-457e-ba97-2cf6a632c873">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="afa0ea93-c7f6-41ad-a9d3-3d8926b220b9" xml:space="preserve">
          <source>Warning:  _Do not do this in a production system.</source>
          <target state="new">Warning:  _Do not do this in a production system.</target>
        </trans-unit>
        <trans-unit id="ad18ce65-afef-4259-adcc-d2fee2d6a9ff" xml:space="preserve">
          <source>Do not do this with real passwords._</source>
          <target state="new">Do not do this with real passwords._</target>
        </trans-unit>
        <trans-unit id="6a4cf00e-e099-41d0-9c71-9ceadf31d88c" xml:space="preserve">
          <source>You can hand craft a PSCredential object with some code like this:</source>
          <target state="new">You can hand craft a PSCredential object with some code like this:</target>
        </trans-unit>
        <trans-unit id="805ff231-cb8c-4775-8561-bcd085784eec" xml:space="preserve">
          <source>Grossly insecure - but useful for testing.</source>
          <target state="new">Grossly insecure - but useful for testing.</target>
        </trans-unit>
        <trans-unit id="1a0bba15-2206-4ae2-ab66-b072bae710ec" xml:space="preserve">
          <source>Now you get no prompts at all in this session.</source>
          <target state="new">Now you get no prompts at all in this session.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>