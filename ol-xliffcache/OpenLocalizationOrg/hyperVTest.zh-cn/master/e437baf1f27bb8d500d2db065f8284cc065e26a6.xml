{
  "nodes": [
    {
      "content": "ms.ContentId: 6C7EB25D-66FB-4B6F-AB4A-79D6BB424637",
      "pos": [
        0,
        50
      ]
    },
    {
      "content": "title: Make a new management service",
      "pos": [
        51,
        87
      ]
    },
    {
      "content": "Make a new management service",
      "pos": [
        91,
        120
      ]
    },
    {
      "content": "18-Nov update (ver1) for renaming file test.",
      "pos": [
        123,
        167
      ]
    },
    {
      "content": "This is a test.",
      "pos": [
        168,
        183
      ]
    },
    {
      "content": "This document introduces VM Services built on Hyper-V sockets and how to get started using them.",
      "pos": [
        184,
        280
      ]
    },
    {
      "content": "What is a VM Service?",
      "pos": [
        285,
        306
      ]
    },
    {
      "content": "Adding this sentence for testing HO-HB process.",
      "pos": [
        307,
        354
      ]
    },
    {
      "content": "VM Services are services that span the Hyper-V host and virtual machines running on the host.",
      "pos": [
        355,
        448
      ]
    },
    {
      "content": "TEST update for XLF2.0.",
      "pos": [
        450,
        473
      ]
    },
    {
      "content": "Hyper-V now (Windows 10 and Server 2016+) provides a non-network connection which allows you to create services spanning the host/virtual machine boundary while preserving Hyper-V’s fundamental requirements around tenant/hoster isolation, control, and diagnosable.",
      "pos": [
        474,
        738
      ]
    },
    {
      "content": "Hyper-V will continue to provide a base set of in-box services (integration services) for basics (such as time sync) and for common requests we receive, but now anyone can write and deploy a VM service as needed.",
      "pos": [
        740,
        952
      ]
    },
    {
      "content": "PowerShell Direct is an in-box example of a VM Service.",
      "pos": [
        954,
        1009
      ]
    },
    {
      "content": "What is a Hyper-V socket?",
      "pos": [
        1014,
        1039
      ]
    },
    {
      "content": "Hyper-V sockets are TCP-like sockets with no dependence on networking.",
      "pos": [
        1040,
        1110
      ]
    },
    {
      "content": "Using Hyper-V sockets, services can run independently of the networking stack and all data flow stays on host memory.",
      "pos": [
        1112,
        1229
      ]
    },
    {
      "content": "System Requirements",
      "pos": [
        1234,
        1253
      ]
    },
    {
      "content": "Supported Host OS",
      "pos": [
        1257,
        1274
      ]
    },
    {
      "content": "Windows 10",
      "pos": [
        1281,
        1291
      ]
    },
    {
      "content": "Windows Server Technical Preview 3",
      "pos": [
        1296,
        1330
      ]
    },
    {
      "content": "Future releases (Server 2016 +)",
      "pos": [
        1335,
        1366
      ]
    },
    {
      "content": "Supported Guest OS",
      "pos": [
        1370,
        1388
      ]
    },
    {
      "content": "Windows 10",
      "pos": [
        1395,
        1405
      ]
    },
    {
      "content": "Windows Server Technical Preview 3",
      "pos": [
        1410,
        1444
      ]
    },
    {
      "content": "Future releases (Server 2016 +)",
      "pos": [
        1449,
        1480
      ]
    },
    {
      "content": "Linux",
      "pos": [
        1485,
        1490
      ]
    },
    {
      "content": "Capabilities and Limitations",
      "pos": [
        1495,
        1523
      ]
    },
    {
      "content": "Kernel mode or user mode",
      "pos": [
        1524,
        1548
      ]
    },
    {
      "content": "Data stream only",
      "pos": [
        1551,
        1567
      ]
    },
    {
      "content": "No block memory so not the best for backup/video",
      "pos": [
        1572,
        1620
      ]
    },
    {
      "content": "Getting started",
      "pos": [
        1627,
        1642
      ]
    },
    {
      "content": "This guide assumes you're familiar with socket programming in C/C++.",
      "pos": [
        1644,
        1712
      ]
    },
    {
      "content": "Step 1 - Register your service on the Hyper-V host",
      "pos": [
        1718,
        1768
      ]
    },
    {
      "content": "In order to use a custom service integrated with Hyper-V, the new service must be registered with the Hyper-V Host's registry.",
      "pos": [
        1769,
        1895
      ]
    },
    {
      "content": "By registering the service in the registry, you get:",
      "pos": [
        1897,
        1949
      ]
    },
    {
      "content": "WMI management for enable, disable, and listing available services",
      "pos": [
        1953,
        2019
      ]
    },
    {
      "content": "Onto the list of services allowed to communicate with virtual machines directly.",
      "pos": [
        2023,
        2103
      ]
    },
    {
      "content": "** Registry location and information **",
      "pos": [
        2105,
        2144
      ]
    },
    {
      "content": "In this registry location, you'll see several GUIDS.",
      "pos": [
        2316,
        2368
      ]
    },
    {
      "content": "Those are our in-box services.",
      "pos": [
        2370,
        2400
      ]
    },
    {
      "content": "Information in the registry per service:",
      "pos": [
        2402,
        2442
      ]
    },
    {
      "pos": [
        2469,
        2530
      ],
      "content": "<ph id=\"ph1\">`ElementName (REG_SZ)`</ph> -- this is the service's friendly name"
    },
    {
      "content": "To register your own service, create a new registry key using your own GUID and friendly name.",
      "pos": [
        2532,
        2626
      ]
    },
    {
      "content": "The registry entry will look like this:",
      "pos": [
        2628,
        2667
      ]
    },
    {
      "content": "** Tip: **  To generate a GUID in PowerShell and copy it to the clipboard, run:",
      "pos": [
        2944,
        3023
      ]
    },
    {
      "content": "<ph id=\"ph1\">\n\n###</ph> Step 2 - Create a simple host-side service\n\n\n\n### Step 3 - Create a simple guest-side service\n\n## More information about AF_HYPERV\nSince Hyper-V sockets do not depend on a networking stack, TCP/IP, DNS, etc. the socket end point needed a non-IP, not hostname, format that still describes the connection.",
      "pos": [
        3135,
        3444
      ]
    },
    {
      "content": "In lieu of an IP or hostname, AF_HYPERV endpoints rely heavily on two GUIDS:  \n* VM ID – this is the unique ID assigned per VM.",
      "pos": [
        3446,
        3573
      ]
    },
    {
      "content": "A VM’s ID can be found using the following PowerShell snippet.",
      "pos": [
        3575,
        3637
      ]
    },
    {
      "content": "```PowerShell\n(Get-VM -Name vmname).Id\n```\n* Service ID – GUID under which the service is registered in the Hyper-V host registry.",
      "pos": [
        3638,
        3768
      ]
    },
    {
      "content": "See <bpt id=\"p1\">[</bpt><ept id=\"p1\">Registering a New Service](#GettingStarted)</ept>.",
      "pos": [
        3770,
        3819
      ]
    },
    {
      "content": "For connections from a service on the host to the service on a VM:",
      "pos": [
        3821,
        3887
      ]
    },
    {
      "content": "VMID and Service ID",
      "pos": [
        3890,
        3909
      ]
    },
    {
      "content": "For connections from a service on a VM to the service on the host:",
      "pos": [
        3910,
        3976
      ]
    },
    {
      "content": "Zero GUID and Service ID\n\n## Supported socket commands\n\nSocket()",
      "pos": [
        3979,
        4043
      ]
    },
    {
      "content": "Bind()",
      "pos": [
        4044,
        4050
      ]
    },
    {
      "content": "Connect ()",
      "pos": [
        4051,
        4061
      ]
    },
    {
      "content": "Send()",
      "pos": [
        4062,
        4068
      ]
    },
    {
      "content": "Listen()",
      "pos": [
        4069,
        4077
      ]
    },
    {
      "content": "Accept()",
      "pos": [
        4078,
        4086
      ]
    }
  ],
  "content": "ms.ContentId: 6C7EB25D-66FB-4B6F-AB4A-79D6BB424637\ntitle: Make a new management service\n\n# Make a new management service #\n18-Nov update (ver1) for renaming file test. This is a test. This document introduces VM Services built on Hyper-V sockets and how to get started using them.\n\n## What is a VM Service?\nAdding this sentence for testing HO-HB process. VM Services are services that span the Hyper-V host and virtual machines running on the host.\n\nTEST update for XLF2.0. Hyper-V now (Windows 10 and Server 2016+) provides a non-network connection which allows you to create services spanning the host/virtual machine boundary while preserving Hyper-V’s fundamental requirements around tenant/hoster isolation, control, and diagnosable.\n\nHyper-V will continue to provide a base set of in-box services (integration services) for basics (such as time sync) and for common requests we receive, but now anyone can write and deploy a VM service as needed.\n\nPowerShell Direct is an in-box example of a VM Service.\n\n## What is a Hyper-V socket?\nHyper-V sockets are TCP-like sockets with no dependence on networking.  Using Hyper-V sockets, services can run independently of the networking stack and all data flow stays on host memory.\n\n## System Requirements\n\n**Supported Host OS**\n*   Windows 10\n*   Windows Server Technical Preview 3\n*   Future releases (Server 2016 +)\n\n**Supported Guest OS**\n*   Windows 10\n*   Windows Server Technical Preview 3\n*   Future releases (Server 2016 +)\n*   Linux\n\n## Capabilities and Limitations\nKernel mode or user mode  \nData stream only    \nNo block memory so not the best for backup/video  \n\n## Getting started\n\nThis guide assumes you're familiar with socket programming in C/C++.\n\n### Step 1 - Register your service on the Hyper-V host\nIn order to use a custom service integrated with Hyper-V, the new service must be registered with the Hyper-V Host's registry.\n\nBy registering the service in the registry, you get:\n*  WMI management for enable, disable, and listing available services\n*  Onto the list of services allowed to communicate with virtual machines directly.\n\n** Registry location and information **  \n\n``` \nHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Virtualization\\VirtualDevices\\6C09BB55-D683-4DA0-8931-C9BF705F6480\\GuestCommunicationServices\\\n```\nIn this registry location, you'll see several GUIDS.  Those are our in-box services.\n\nInformation in the registry per service:\n* `Service GUID`   \n    * `ElementName (REG_SZ)` -- this is the service's friendly name\n\nTo register your own service, create a new registry key using your own GUID and friendly name.\n\nThe registry entry will look like this:\n```\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Virtualization\\GuestCommunicationServices\\\n    999E53D4-3D5C-4C3E-8779-BED06EC056E1\\\n        ElementName REG_SZ  VM Session Service\n    YourGUID\\\n        ElementName REG_SZ  Your Service Friendly Name\n```\n\n> ** Tip: **  To generate a GUID in PowerShell and copy it to the clipboard, run:  \n``` PowerShell\n[System.Guid]::NewGuid().ToString() | clip.exe\n```\n\n<!-- How do customers know this worked -->\n\n### Step 2 - Create a simple host-side service\n\n\n\n### Step 3 - Create a simple guest-side service\n\n## More information about AF_HYPERV\nSince Hyper-V sockets do not depend on a networking stack, TCP/IP, DNS, etc. the socket end point needed a non-IP, not hostname, format that still describes the connection.  In lieu of an IP or hostname, AF_HYPERV endpoints rely heavily on two GUIDS:  \n* VM ID – this is the unique ID assigned per VM.  A VM’s ID can be found using the following PowerShell snippet.\n```PowerShell\n(Get-VM -Name vmname).Id\n```\n* Service ID – GUID under which the service is registered in the Hyper-V host registry.  See [Registering a New Service](#GettingStarted).\n\nFor connections from a service on the host to the service on a VM:  \nVMID and Service ID\nFor connections from a service on a VM to the service on the host:  \nZero GUID and Service ID\n\n## Supported socket commands\n\nSocket()\nBind()\nConnect ()\nSend()\nListen()\nAccept()\n\n\n \n"
}