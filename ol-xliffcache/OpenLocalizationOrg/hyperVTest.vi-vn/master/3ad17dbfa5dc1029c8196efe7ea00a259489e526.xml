{
  "nodes": [
    {
      "content": "ms.ContentId: e586a11a-870f-403b-8af8-4c2931589d26",
      "pos": [
        0,
        50
      ]
    },
    {
      "content": "title: Manage Windows with PowerShell Direct",
      "pos": [
        51,
        95
      ]
    },
    {
      "content": "Manage Windows with PowerShell Direct",
      "pos": [
        100,
        137
      ]
    },
    {
      "content": "12-Nov update.",
      "pos": [
        140,
        154
      ]
    },
    {
      "content": "You can use PowerShell Direct to remotely manage a Windows 10 or Windows Server Technical Preview virtual machine from a Windows 10 or Windows Server Technical Preview Hyper-V host.",
      "pos": [
        155,
        336
      ]
    },
    {
      "content": "PowerShell Direct allows PowerShell management inside a virtual machine regardless of the network configuration or remote management settings on either the Hyper-V host or the virtual machine.",
      "pos": [
        337,
        529
      ]
    },
    {
      "content": "This makes it easier for Hyper-V Administrators to automate and script virtual machine management and configuration.",
      "pos": [
        530,
        646
      ]
    },
    {
      "content": "There are two ways to run PowerShell Direct:",
      "pos": [
        648,
        692
      ]
    },
    {
      "content": "Create and exit a PowerShell Direct session using PSSession cmdlets",
      "pos": [
        697,
        764
      ]
    },
    {
      "content": "Run script or command with the Invoke-Command cmdlet",
      "pos": [
        767,
        819
      ]
    },
    {
      "pos": [
        821,
        1016
      ],
      "content": "If you're managing older virtual machines, use Virtual Machine Connection (VMConnect) or <bpt id=\"p1\">[</bpt>configure a virtual network for the virtual machine<ept id=\"p1\">](http://technet.microsoft.com/library/cc816585.aspx)</ept>."
    },
    {
      "content": "Create and exit a PowerShell Direct session using PSSession cmdlets",
      "pos": [
        1022,
        1089
      ]
    },
    {
      "content": "On the Hyper-V host, open Windows PowerShell as Administrator.",
      "pos": [
        1093,
        1155
      ]
    },
    {
      "content": "Run the one of the following commands to create a session by using the virtual machine name or GUID:",
      "pos": [
        1160,
        1260
      ]
    },
    {
      "content": "Run whatever commands you need to.",
      "pos": [
        1352,
        1386
      ]
    },
    {
      "content": "These commands run on the virtual machine that you created the session with.",
      "pos": [
        1387,
        1463
      ]
    },
    {
      "content": "When you're done, run the following command to close the session:",
      "pos": [
        1467,
        1532
      ]
    },
    {
      "content": "Note:  If you're session won't connect, make sure you're using credentials for the virtual machine you're connecting to -- not the Hyper-V host.",
      "pos": [
        1574,
        1718
      ]
    },
    {
      "pos": [
        1720,
        1902
      ],
      "content": "To learn more about these cmdlets, see <bpt id=\"p1\">[</bpt>Enter-PSSession<ept id=\"p1\">](http://technet.microsoft.com/library/hh849707.aspx)</ept> and <bpt id=\"p2\">[</bpt>Exit-PSSession<ept id=\"p2\">](http://technet.microsoft.com/library/hh849743.aspx)</ept>."
    },
    {
      "content": "Run script or command with Invoke-Command cmdlet",
      "pos": [
        1908,
        1956
      ]
    },
    {
      "content": "You can use the <bpt id=\"p1\">[</bpt>Invoke-Command<ept id=\"p1\">](http://technet.microsoft.com/library/hh849719.aspx)</ept> cmdlet to run a pre-determined set of commands on the virtual machine.",
      "pos": [
        1958,
        2113
      ]
    },
    {
      "content": "Here is an example of how you can use the Invoke-Command cmdlet where PSTest is the virtual machine name and the script to run (foo.ps1) is in the script folder on the C:/ drive:",
      "pos": [
        2114,
        2292
      ]
    },
    {
      "pos": [
        2376,
        2436
      ],
      "content": "To run a single command, use the <bpt id=\"p1\">**</bpt>-ScriptBlock<ept id=\"p1\">**</ept> parameter:"
    },
    {
      "content": "What's required to use PowerShell Direct?",
      "pos": [
        2519,
        2560
      ]
    },
    {
      "content": "To create a PowerShell Direct session on a virtual machine,",
      "pos": [
        2561,
        2620
      ]
    },
    {
      "content": "The virtual machine must be running locally on the host and booted.",
      "pos": [
        2623,
        2690
      ]
    },
    {
      "content": "You must be logged into the host computer as a Hyper-V administrator.",
      "pos": [
        2694,
        2763
      ]
    },
    {
      "content": "You must supply valid user credentials for the virtual machine.",
      "pos": [
        2766,
        2829
      ]
    },
    {
      "content": "The host operating system must run Windows 10, Windows Server Technical Preview, or a higher version.",
      "pos": [
        2832,
        2933
      ]
    },
    {
      "content": "The virtual machine must run Windows 10, Windows Server Technical Preview, or a higher version.",
      "pos": [
        2938,
        3033
      ]
    },
    {
      "pos": [
        3037,
        3264
      ],
      "content": "You can use the <bpt id=\"p1\">[</bpt>Get-VM<ept id=\"p1\">](http://technet.microsoft.com/library/hh848479.aspx)</ept> cmdlet to check that the credentials you're using have the Hyper-V administrator role and to see which VMs are running locally on the host and booted."
    },
    {
      "content": "What can you do with PowerShell Direct?",
      "pos": [
        3269,
        3308
      ]
    },
    {
      "pos": [
        3310,
        3523
      ],
      "content": "See <bpt id=\"p1\">[</bpt>PowerShell Direct snippets<ept id=\"p1\">](../develop/powershell_snippets.md)</ept> for numerous examples of how to use PowerShell Direct in your environment as well as tips and tricks for writing Hyper-V scripts with PowerShell."
    }
  ],
  "content": "ms.ContentId: e586a11a-870f-403b-8af8-4c2931589d26\ntitle: Manage Windows with PowerShell Direct \n\n# Manage Windows with PowerShell Direct #\n12-Nov update. You can use PowerShell Direct to remotely manage a Windows 10 or Windows Server Technical Preview virtual machine from a Windows 10 or Windows Server Technical Preview Hyper-V host. PowerShell Direct allows PowerShell management inside a virtual machine regardless of the network configuration or remote management settings on either the Hyper-V host or the virtual machine. This makes it easier for Hyper-V Administrators to automate and script virtual machine management and configuration.\n\nThere are two ways to run PowerShell Direct:  \n* Create and exit a PowerShell Direct session using PSSession cmdlets\n* Run script or command with the Invoke-Command cmdlet\n\nIf you're managing older virtual machines, use Virtual Machine Connection (VMConnect) or [configure a virtual network for the virtual machine](http://technet.microsoft.com/library/cc816585.aspx). \n\n## Create and exit a PowerShell Direct session using PSSession cmdlets\n1. On the Hyper-V host, open Windows PowerShell as Administrator.\n\n3. Run the one of the following commands to create a session by using the virtual machine name or GUID:  \n``` PowerShell\nEnter-PSSession -VMName <VMName>\nEnter-PSSession -VMGUID <VMGUID>\n```\n\n4. Run whatever commands you need to. These commands run on the virtual machine that you created the session with.\n5. When you're done, run the following command to close the session:  \n``` PowerShell\nExit-PSSession \n``` \n\n> Note:  If you're session won't connect, make sure you're using credentials for the virtual machine you're connecting to -- not the Hyper-V host.\n\nTo learn more about these cmdlets, see [Enter-PSSession](http://technet.microsoft.com/library/hh849707.aspx) and [Exit-PSSession](http://technet.microsoft.com/library/hh849743.aspx). \n\n## Run script or command with Invoke-Command cmdlet\n\nYou can use the [Invoke-Command](http://technet.microsoft.com/library/hh849719.aspx) cmdlet to run a pre-determined set of commands on the virtual machine. Here is an example of how you can use the Invoke-Command cmdlet where PSTest is the virtual machine name and the script to run (foo.ps1) is in the script folder on the C:/ drive:\n\n ``` PowerShell\n Invoke-Command -VMName PSTest -FilePath C:\\script\\foo.ps1 \n ```\n\nTo run a single command, use the **-ScriptBlock** parameter:\n\n ``` PowerShell\n Invoke-Command -VMName PSTest -ScriptBlock { cmdlet } \n ```\n\n## What's required to use PowerShell Direct?\nTo create a PowerShell Direct session on a virtual machine,\n* The virtual machine must be running locally on the host and booted. \n* You must be logged into the host computer as a Hyper-V administrator.\n* You must supply valid user credentials for the virtual machine.\n* The host operating system must run Windows 10, Windows Server Technical Preview, or a higher version.  \n* The virtual machine must run Windows 10, Windows Server Technical Preview, or a higher version.  \n\nYou can use the [Get-VM](http://technet.microsoft.com/library/hh848479.aspx) cmdlet to check that the credentials you're using have the Hyper-V administrator role and to see which VMs are running locally on the host and booted.\n\n## What can you do with PowerShell Direct?\n\nSee [PowerShell Direct snippets](../develop/powershell_snippets.md) for numerous examples of how to use PowerShell Direct in your environment as well as tips and tricks for writing Hyper-V scripts with PowerShell.\n\n\n"
}