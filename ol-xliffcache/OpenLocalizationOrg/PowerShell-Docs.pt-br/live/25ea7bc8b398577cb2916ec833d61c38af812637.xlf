<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="pt-br" original="foo.file" tool-id="fe3bb2c2-d1c9-4726-adc4-faa221c9c105" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="fe3bb2c2-d1c9-4726-adc4-faa221c9c105" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
      <olfilehash xmlns="">25ea7bc8b398577cb2916ec833d61c38af812637</olfilehash>
    </header>
    <body>
      <group id="ca8b4e1c-f2c4-40a4-9054-36742382d495">
        <trans-unit id="9b10e58a-3cb8-448a-b049-3721655a1fd5" xml:space="preserve">
          <source>Separating Configuration and Environment Data</source>
          <target state="new">Separating Configuration and Environment Data</target>
        </trans-unit>
        <trans-unit id="409b4a30-051e-4919-973d-65ffa5f19900" xml:space="preserve">
          <source>Applies To: Windows PowerShell 4.0, Windows PowerShell 5.0</source>
          <target state="new">Applies To: Windows PowerShell 4.0, Windows PowerShell 5.0</target>
        </trans-unit>
        <trans-unit id="c6a5f181-381b-4d9c-b2f6-580ddc1d511c" xml:space="preserve">
          <source>In Windows PowerShell Desired State Configuration (DSC), it is possible to separate configuration data from the logic of your configuration.</source>
          <target state="new">In Windows PowerShell Desired State Configuration (DSC), it is possible to separate configuration data from the logic of your configuration.</target>
        </trans-unit>
        <trans-unit id="9281f8d0-23fe-46ff-aa29-ae289eeef934" xml:space="preserve">
          <source>Another way to look at this is to consider the structural configuration (for example, a configuration might require that IIS be installed) as separate from the environmental configuration (that is, whether the situation is a test environment vs. a production one—the node names would be different, but the configuration applied to them would be the same).</source>
          <target state="new">Another way to look at this is to consider the structural configuration (for example, a configuration might require that IIS be installed) as separate from the environmental configuration (that is, whether the situation is a test environment vs. a production one—the node names would be different, but the configuration applied to them would be the same).</target>
        </trans-unit>
        <trans-unit id="7b2dd1be-97fe-4788-ae0e-47e926e4ac39" xml:space="preserve">
          <source>This has the following advantages:</source>
          <target state="new">This has the following advantages:</target>
        </trans-unit>
        <trans-unit id="c2169b94-51b0-496f-ab30-d214f4cc6718" xml:space="preserve">
          <source>It allows you to reuse your configuration data for different resources, nodes, and configurations.</source>
          <target state="new">It allows you to reuse your configuration data for different resources, nodes, and configurations.</target>
        </trans-unit>
        <trans-unit id="2f8fcc7f-6dc1-49a3-a386-296320c15b95" xml:space="preserve">
          <source>Configuration logic is more reusable if it does not contain hard-coded data.</source>
          <target state="new">Configuration logic is more reusable if it does not contain hard-coded data.</target>
        </trans-unit>
        <trans-unit id="5f3cc549-d9bd-4bbe-ad3c-d54e58e6e020" xml:space="preserve">
          <source>This is similar to good scripting guidelines for functions.</source>
          <target state="new">This is similar to good scripting guidelines for functions.</target>
        </trans-unit>
        <trans-unit id="4393cd56-7c22-4398-87f6-1f1678a8af4d" xml:space="preserve">
          <source>If some of the data needs to change, you can make the changes in one location, thereby saving time and reducing errors.</source>
          <target state="new">If some of the data needs to change, you can make the changes in one location, thereby saving time and reducing errors.</target>
        </trans-unit>
        <trans-unit id="8964c33e-d9ad-4bb7-b9c4-8b51c0baf1c1" xml:space="preserve">
          <source>Basic concepts and examples</source>
          <target state="new">Basic concepts and examples</target>
        </trans-unit>
        <trans-unit id="63c76149-ff69-4a8e-baa8-5b62fa4cb4dd" xml:space="preserve">
          <source>To specify the environmental part of the configuration, DSC uses the <bpt id="7ae28b5d-899f-4639-b9d2-309d0a8eb174">&lt;strong&gt;</bpt>ConfigurationData<ept id="7ae28b5d-899f-4639-b9d2-309d0a8eb174">&lt;/strong&gt;</ept> parameter, which is a hash table (or it can take a .psd1 file which contains the hash table).</source>
          <target state="new">To specify the environmental part of the configuration, DSC uses the <bpt id="7ae28b5d-899f-4639-b9d2-309d0a8eb174">&lt;strong&gt;</bpt>ConfigurationData<ept id="7ae28b5d-899f-4639-b9d2-309d0a8eb174">&lt;/strong&gt;</ept> parameter, which is a hash table (or it can take a .psd1 file which contains the hash table).</target>
        </trans-unit>
        <trans-unit id="d2925927-a1b8-4077-b3b6-c376277c6937" xml:space="preserve">
          <source>This hash table must have at least one key <bpt id="fdcf5479-a16f-4ed4-89df-9c5fd07071c6">&lt;strong&gt;</bpt>AllNodes<ept id="fdcf5479-a16f-4ed4-89df-9c5fd07071c6">&lt;/strong&gt;</ept>, which has a structured value.</source>
          <target state="new">This hash table must have at least one key <bpt id="fdcf5479-a16f-4ed4-89df-9c5fd07071c6">&lt;strong&gt;</bpt>AllNodes<ept id="fdcf5479-a16f-4ed4-89df-9c5fd07071c6">&lt;/strong&gt;</ept>, which has a structured value.</target>
        </trans-unit>
        <trans-unit id="cceb1107-07be-4429-8266-e1024dd76aab" xml:space="preserve">
          <source>For example:</source>
          <target state="new">For example:</target>
        </trans-unit>
        <trans-unit id="04dc8b5b-c233-4126-9381-7d6ac33306ab" xml:space="preserve">
          <source>Note the AllNodes key, whose value is an array.</source>
          <target state="new">Note the AllNodes key, whose value is an array.</target>
        </trans-unit>
        <trans-unit id="36a6d9aa-be6a-49a1-9d74-89aa92284a28" xml:space="preserve">
          <source>Each element of this array is also a hash table, which requires NodeName as a key:</source>
          <target state="new">Each element of this array is also a hash table, which requires NodeName as a key:</target>
        </trans-unit>
        <trans-unit id="6c50930f-15b3-4712-adad-d2ad5799b0d5" xml:space="preserve">
          <source>Each hash table entry in AllNodes corresponds to configuration data to a node in the configuration.</source>
          <target state="new">Each hash table entry in AllNodes corresponds to configuration data to a node in the configuration.</target>
        </trans-unit>
        <trans-unit id="ef29fec6-f64d-44ad-b56d-232940d3f71c" xml:space="preserve">
          <source>In addition to the required NodeName key, you can add other keys to the hash table as well, for example:</source>
          <target state="new">In addition to the required NodeName key, you can add other keys to the hash table as well, for example:</target>
        </trans-unit>
        <trans-unit id="b49639b4-3284-40e0-948b-fbf8d6d2bf64" xml:space="preserve">
          <source>DSC offers three special variables to use in the configuration script:</source>
          <target state="new">DSC offers three special variables to use in the configuration script:</target>
        </trans-unit>
        <trans-unit id="da10e822-ad4b-462a-b6b4-1823440b6924" xml:space="preserve">
          <source><bpt id="a88d4558-b009-4ee7-811f-fcf70368fb24">&lt;strong&gt;</bpt>$AllNodes<ept id="a88d4558-b009-4ee7-811f-fcf70368fb24">&lt;/strong&gt;</ept>: Refers to all of the nodes.</source>
          <target state="new"><bpt id="a88d4558-b009-4ee7-811f-fcf70368fb24">&lt;strong&gt;</bpt>$AllNodes<ept id="a88d4558-b009-4ee7-811f-fcf70368fb24">&lt;/strong&gt;</ept>: Refers to all of the nodes.</target>
        </trans-unit>
        <trans-unit id="9d9664c7-2961-48a2-99bb-d3eb76b5dd97" xml:space="preserve">
          <source>You can use filtering with <bpt id="de273f07-0cd6-4f72-9533-24e57c041501">&lt;strong&gt;</bpt>.Where()<ept id="de273f07-0cd6-4f72-9533-24e57c041501">&lt;/strong&gt;</ept> and <bpt id="63161753-0991-47ce-a527-606b58e04563">&lt;strong&gt;</bpt>.ForEach()<ept id="63161753-0991-47ce-a527-606b58e04563">&lt;/strong&gt;</ept>, so instead of hard-coding node names to select particular nodes for action, you could write something like this to select VM-1 and VM-3 in the above example:</source>
          <target state="new">You can use filtering with <bpt id="de273f07-0cd6-4f72-9533-24e57c041501">&lt;strong&gt;</bpt>.Where()<ept id="de273f07-0cd6-4f72-9533-24e57c041501">&lt;/strong&gt;</ept> and <bpt id="63161753-0991-47ce-a527-606b58e04563">&lt;strong&gt;</bpt>.ForEach()<ept id="63161753-0991-47ce-a527-606b58e04563">&lt;/strong&gt;</ept>, so instead of hard-coding node names to select particular nodes for action, you could write something like this to select VM-1 and VM-3 in the above example:</target>
        </trans-unit>
        <trans-unit id="d191ca6c-6369-4d15-aeaf-f7d67c245900" xml:space="preserve">
          <source><bpt id="9db7ed9e-64eb-4dfe-9f32-bf597cbfeec9">&lt;strong&gt;</bpt>$Node<ept id="9db7ed9e-64eb-4dfe-9f32-bf597cbfeec9">&lt;/strong&gt;</ept>: Once the set of nodes is filtered, you can use $Node to refer to the particular entry.</source>
          <target state="new"><bpt id="9db7ed9e-64eb-4dfe-9f32-bf597cbfeec9">&lt;strong&gt;</bpt>$Node<ept id="9db7ed9e-64eb-4dfe-9f32-bf597cbfeec9">&lt;/strong&gt;</ept>: Once the set of nodes is filtered, you can use $Node to refer to the particular entry.</target>
        </trans-unit>
        <trans-unit id="18cfc8d4-698f-4b15-9d55-b27631fff9f3" xml:space="preserve">
          <source>For example:</source>
          <target state="new">For example:</target>
        </trans-unit>
        <trans-unit id="f74972a5-e839-4f59-a5d3-cd750d44f1a8" xml:space="preserve">
          <source>To apply a property to all nodes, you can set NodeName = “*”.</source>
          <target state="new">To apply a property to all nodes, you can set NodeName = “*”.</target>
        </trans-unit>
        <trans-unit id="e7c10444-f211-45be-8a4f-4b4b33f200e8" xml:space="preserve">
          <source>For example, to give every node the LogPath property, you could do this:</source>
          <target state="new">For example, to give every node the LogPath property, you could do this:</target>
        </trans-unit>
        <trans-unit id="4fa37c95-bc1f-4b35-ba85-21a7b5c0e17b" xml:space="preserve">
          <source><bpt id="c9efba01-f1d9-43a7-8f08-29d80d2ed6bf">&lt;strong&gt;</bpt>$ConfigurationData<ept id="c9efba01-f1d9-43a7-8f08-29d80d2ed6bf">&lt;/strong&gt;</ept>: You can use this variable inside a configuration to access the configuration data hash table passed as a parameter.</source>
          <target state="new"><bpt id="c9efba01-f1d9-43a7-8f08-29d80d2ed6bf">&lt;strong&gt;</bpt>$ConfigurationData<ept id="c9efba01-f1d9-43a7-8f08-29d80d2ed6bf">&lt;/strong&gt;</ept>: You can use this variable inside a configuration to access the configuration data hash table passed as a parameter.</target>
        </trans-unit>
        <trans-unit id="2e4d1ee5-c6c1-467b-9074-fd5cdf98133d" xml:space="preserve">
          <source>For example:</source>
          <target state="new">For example:</target>
        </trans-unit>
        <trans-unit id="1008ee35-2e5c-4bf6-a7e2-1592ed910bc4" xml:space="preserve">
          <source>You can find a full example included in the <bpt id="6621fd37-8b3a-4dd9-af8e-d99bd95bbcc6CapsExtId1">&lt;linkText&gt;</bpt>xWebAdministration module<ept id="6621fd37-8b3a-4dd9-af8e-d99bd95bbcc6CapsExtId1">&lt;/linkText&gt;</ept><bpt id="6621fd37-8b3a-4dd9-af8e-d99bd95bbcc6CapsExtId2">&lt;title&gt;</bpt><ept id="6621fd37-8b3a-4dd9-af8e-d99bd95bbcc6CapsExtId2">&lt;/title&gt;</ept>.</source>
          <target state="new">You can find a full example included in the <bpt id="6621fd37-8b3a-4dd9-af8e-d99bd95bbcc6CapsExtId1">&lt;linkText&gt;</bpt>xWebAdministration module<ept id="6621fd37-8b3a-4dd9-af8e-d99bd95bbcc6CapsExtId1">&lt;/linkText&gt;</ept><bpt id="6621fd37-8b3a-4dd9-af8e-d99bd95bbcc6CapsExtId2">&lt;title&gt;</bpt><ept id="6621fd37-8b3a-4dd9-af8e-d99bd95bbcc6CapsExtId2">&lt;/title&gt;</ept>.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>