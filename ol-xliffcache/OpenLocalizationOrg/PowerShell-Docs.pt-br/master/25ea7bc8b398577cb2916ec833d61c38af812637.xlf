<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="pt-br" original="foo.file" tool-id="dc669ac0-30cd-4c42-82fb-69abab643dff" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="dc669ac0-30cd-4c42-82fb-69abab643dff" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
      <olfilehash xmlns="">25ea7bc8b398577cb2916ec833d61c38af812637</olfilehash>
    </header>
    <body>
      <group id="aab99cab-a61d-47d3-b125-969e0662862a">
        <trans-unit id="4d2ce15d-7eb4-4cc7-a717-a3fa39b445ae" xml:space="preserve">
          <source>Separating Configuration and Environment Data</source>
          <target state="new">Separating Configuration and Environment Data</target>
        </trans-unit>
        <trans-unit id="9397d8b1-f8da-4ea9-96c5-5e92b6f3c56b" xml:space="preserve">
          <source>Applies To: Windows PowerShell 4.0, Windows PowerShell 5.0</source>
          <target state="new">Applies To: Windows PowerShell 4.0, Windows PowerShell 5.0</target>
        </trans-unit>
        <trans-unit id="69269cf7-c3d5-4f03-8d0c-0758c71f4fce" xml:space="preserve">
          <source>In Windows PowerShell Desired State Configuration (DSC), it is possible to separate configuration data from the logic of your configuration.</source>
          <target state="new">In Windows PowerShell Desired State Configuration (DSC), it is possible to separate configuration data from the logic of your configuration.</target>
        </trans-unit>
        <trans-unit id="ace1e1d9-2345-41ab-8014-9653bcc4f646" xml:space="preserve">
          <source>Another way to look at this is to consider the structural configuration (for example, a configuration might require that IIS be installed) as separate from the environmental configuration (that is, whether the situation is a test environment vs. a production one—the node names would be different, but the configuration applied to them would be the same).</source>
          <target state="new">Another way to look at this is to consider the structural configuration (for example, a configuration might require that IIS be installed) as separate from the environmental configuration (that is, whether the situation is a test environment vs. a production one—the node names would be different, but the configuration applied to them would be the same).</target>
        </trans-unit>
        <trans-unit id="8251740a-567b-4633-b3b2-28dd4f61fd3b" xml:space="preserve">
          <source>This has the following advantages:</source>
          <target state="new">This has the following advantages:</target>
        </trans-unit>
        <trans-unit id="db2b3e3f-691d-4d87-ae9e-e2f7aa10a5de" xml:space="preserve">
          <source>It allows you to reuse your configuration data for different resources, nodes, and configurations.</source>
          <target state="new">It allows you to reuse your configuration data for different resources, nodes, and configurations.</target>
        </trans-unit>
        <trans-unit id="e0edf346-fc86-4b2c-b0be-33878714614f" xml:space="preserve">
          <source>Configuration logic is more reusable if it does not contain hard-coded data.</source>
          <target state="new">Configuration logic is more reusable if it does not contain hard-coded data.</target>
        </trans-unit>
        <trans-unit id="e3a54865-57fd-4816-930f-35c54e5a671a" xml:space="preserve">
          <source>This is similar to good scripting guidelines for functions.</source>
          <target state="new">This is similar to good scripting guidelines for functions.</target>
        </trans-unit>
        <trans-unit id="f9551170-ea3d-4ad8-9c41-5fca078e4c2e" xml:space="preserve">
          <source>If some of the data needs to change, you can make the changes in one location, thereby saving time and reducing errors.</source>
          <target state="new">If some of the data needs to change, you can make the changes in one location, thereby saving time and reducing errors.</target>
        </trans-unit>
        <trans-unit id="3f4aff13-ce70-47cf-b298-6d3f04fe2607" xml:space="preserve">
          <source>Basic concepts and examples</source>
          <target state="new">Basic concepts and examples</target>
        </trans-unit>
        <trans-unit id="109828f7-015c-4a09-a52e-aff1c2385310" xml:space="preserve">
          <source>To specify the environmental part of the configuration, DSC uses the <bpt id="4f5c6aef-0bfe-45d4-b328-0a3db772caf8">&lt;strong&gt;</bpt>ConfigurationData<ept id="4f5c6aef-0bfe-45d4-b328-0a3db772caf8">&lt;/strong&gt;</ept> parameter, which is a hash table (or it can take a .psd1 file which contains the hash table).</source>
          <target state="new">To specify the environmental part of the configuration, DSC uses the <bpt id="4f5c6aef-0bfe-45d4-b328-0a3db772caf8">&lt;strong&gt;</bpt>ConfigurationData<ept id="4f5c6aef-0bfe-45d4-b328-0a3db772caf8">&lt;/strong&gt;</ept> parameter, which is a hash table (or it can take a .psd1 file which contains the hash table).</target>
        </trans-unit>
        <trans-unit id="6184dbd2-021e-4193-8da7-5160f8697241" xml:space="preserve">
          <source>This hash table must have at least one key <bpt id="3cf4afca-c6c5-4bb6-be0a-a9eb78ddb66b">&lt;strong&gt;</bpt>AllNodes<ept id="3cf4afca-c6c5-4bb6-be0a-a9eb78ddb66b">&lt;/strong&gt;</ept>, which has a structured value.</source>
          <target state="new">This hash table must have at least one key <bpt id="3cf4afca-c6c5-4bb6-be0a-a9eb78ddb66b">&lt;strong&gt;</bpt>AllNodes<ept id="3cf4afca-c6c5-4bb6-be0a-a9eb78ddb66b">&lt;/strong&gt;</ept>, which has a structured value.</target>
        </trans-unit>
        <trans-unit id="627d5032-3d50-400d-b466-7baf3752e105" xml:space="preserve">
          <source>For example:</source>
          <target state="new">For example:</target>
        </trans-unit>
        <trans-unit id="ddc3d449-8600-4c14-a0ed-8407b58ef55f" xml:space="preserve">
          <source>Note the AllNodes key, whose value is an array.</source>
          <target state="new">Note the AllNodes key, whose value is an array.</target>
        </trans-unit>
        <trans-unit id="a72ec55d-2311-44ad-b257-d3c251003b82" xml:space="preserve">
          <source>Each element of this array is also a hash table, which requires NodeName as a key:</source>
          <target state="new">Each element of this array is also a hash table, which requires NodeName as a key:</target>
        </trans-unit>
        <trans-unit id="b593416c-3a05-46d4-9d39-927bc76b1be4" xml:space="preserve">
          <source>Each hash table entry in AllNodes corresponds to configuration data to a node in the configuration.</source>
          <target state="new">Each hash table entry in AllNodes corresponds to configuration data to a node in the configuration.</target>
        </trans-unit>
        <trans-unit id="74cd314b-54df-47e5-adde-aba6f485003c" xml:space="preserve">
          <source>In addition to the required NodeName key, you can add other keys to the hash table as well, for example:</source>
          <target state="new">In addition to the required NodeName key, you can add other keys to the hash table as well, for example:</target>
        </trans-unit>
        <trans-unit id="c5e3b6cc-b115-4037-9fe0-71032a41d6c2" xml:space="preserve">
          <source>DSC offers three special variables to use in the configuration script:</source>
          <target state="new">DSC offers three special variables to use in the configuration script:</target>
        </trans-unit>
        <trans-unit id="6233ad99-5ffd-4ef8-b770-85c064e8ded8" xml:space="preserve">
          <source><bpt id="a55d5484-aabb-4174-a284-a6f491b50b52">&lt;strong&gt;</bpt>$AllNodes<ept id="a55d5484-aabb-4174-a284-a6f491b50b52">&lt;/strong&gt;</ept>: Refers to all of the nodes.</source>
          <target state="new"><bpt id="a55d5484-aabb-4174-a284-a6f491b50b52">&lt;strong&gt;</bpt>$AllNodes<ept id="a55d5484-aabb-4174-a284-a6f491b50b52">&lt;/strong&gt;</ept>: Refers to all of the nodes.</target>
        </trans-unit>
        <trans-unit id="c7af93fc-1714-4ea1-9f55-2c4e7fc93ca2" xml:space="preserve">
          <source>You can use filtering with <bpt id="acc59b4f-c414-42fb-8080-bdc7472d4aea">&lt;strong&gt;</bpt>.Where()<ept id="acc59b4f-c414-42fb-8080-bdc7472d4aea">&lt;/strong&gt;</ept> and <bpt id="76f4a866-cde7-4f32-8649-2ed9f4cbfe1a">&lt;strong&gt;</bpt>.ForEach()<ept id="76f4a866-cde7-4f32-8649-2ed9f4cbfe1a">&lt;/strong&gt;</ept>, so instead of hard-coding node names to select particular nodes for action, you could write something like this to select VM-1 and VM-3 in the above example:</source>
          <target state="new">You can use filtering with <bpt id="acc59b4f-c414-42fb-8080-bdc7472d4aea">&lt;strong&gt;</bpt>.Where()<ept id="acc59b4f-c414-42fb-8080-bdc7472d4aea">&lt;/strong&gt;</ept> and <bpt id="76f4a866-cde7-4f32-8649-2ed9f4cbfe1a">&lt;strong&gt;</bpt>.ForEach()<ept id="76f4a866-cde7-4f32-8649-2ed9f4cbfe1a">&lt;/strong&gt;</ept>, so instead of hard-coding node names to select particular nodes for action, you could write something like this to select VM-1 and VM-3 in the above example:</target>
        </trans-unit>
        <trans-unit id="0515e6da-697a-42eb-b67b-2e5d5329385d" xml:space="preserve">
          <source><bpt id="8ad8ec3c-ff37-4780-bfe0-d871c8394f4a">&lt;strong&gt;</bpt>$Node<ept id="8ad8ec3c-ff37-4780-bfe0-d871c8394f4a">&lt;/strong&gt;</ept>: Once the set of nodes is filtered, you can use $Node to refer to the particular entry.</source>
          <target state="new"><bpt id="8ad8ec3c-ff37-4780-bfe0-d871c8394f4a">&lt;strong&gt;</bpt>$Node<ept id="8ad8ec3c-ff37-4780-bfe0-d871c8394f4a">&lt;/strong&gt;</ept>: Once the set of nodes is filtered, you can use $Node to refer to the particular entry.</target>
        </trans-unit>
        <trans-unit id="6c6bebc8-62fd-4c90-a1fc-d4e3b5836f6c" xml:space="preserve">
          <source>For example:</source>
          <target state="new">For example:</target>
        </trans-unit>
        <trans-unit id="c1224443-a390-4ba7-9395-fbf051c01ccd" xml:space="preserve">
          <source>To apply a property to all nodes, you can set NodeName = “*”.</source>
          <target state="new">To apply a property to all nodes, you can set NodeName = “*”.</target>
        </trans-unit>
        <trans-unit id="d2e06110-0a7c-4cf8-8faa-20f34429c720" xml:space="preserve">
          <source>For example, to give every node the LogPath property, you could do this:</source>
          <target state="new">For example, to give every node the LogPath property, you could do this:</target>
        </trans-unit>
        <trans-unit id="7f9db0a5-586f-4636-acd4-fe0e98bdbac2" xml:space="preserve">
          <source><bpt id="7f409413-3c0e-4f3b-8e26-6cb8a49dd9b3">&lt;strong&gt;</bpt>$ConfigurationData<ept id="7f409413-3c0e-4f3b-8e26-6cb8a49dd9b3">&lt;/strong&gt;</ept>: You can use this variable inside a configuration to access the configuration data hash table passed as a parameter.</source>
          <target state="new"><bpt id="7f409413-3c0e-4f3b-8e26-6cb8a49dd9b3">&lt;strong&gt;</bpt>$ConfigurationData<ept id="7f409413-3c0e-4f3b-8e26-6cb8a49dd9b3">&lt;/strong&gt;</ept>: You can use this variable inside a configuration to access the configuration data hash table passed as a parameter.</target>
        </trans-unit>
        <trans-unit id="b5c3a2fa-18df-4ee5-9a24-fa53b188db13" xml:space="preserve">
          <source>For example:</source>
          <target state="new">For example:</target>
        </trans-unit>
        <trans-unit id="5b5a248d-e61b-473d-99cc-626d2408e110" xml:space="preserve">
          <source>You can find a full example included in the <bpt id="17ba8131-6d11-41f0-adea-11fbb3863d9bCapsExtId1">&lt;linkText&gt;</bpt>xWebAdministration module<ept id="17ba8131-6d11-41f0-adea-11fbb3863d9bCapsExtId1">&lt;/linkText&gt;</ept><bpt id="17ba8131-6d11-41f0-adea-11fbb3863d9bCapsExtId2">&lt;title&gt;</bpt><ept id="17ba8131-6d11-41f0-adea-11fbb3863d9bCapsExtId2">&lt;/title&gt;</ept>.</source>
          <target state="new">You can find a full example included in the <bpt id="17ba8131-6d11-41f0-adea-11fbb3863d9bCapsExtId1">&lt;linkText&gt;</bpt>xWebAdministration module<ept id="17ba8131-6d11-41f0-adea-11fbb3863d9bCapsExtId1">&lt;/linkText&gt;</ept><bpt id="17ba8131-6d11-41f0-adea-11fbb3863d9bCapsExtId2">&lt;title&gt;</bpt><ept id="17ba8131-6d11-41f0-adea-11fbb3863d9bCapsExtId2">&lt;/title&gt;</ept>.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>