{
  "nodes": [
    {
      "content": "How to create a VNet using PowerShell",
      "pos": [
        3,
        40
      ]
    },
    {
      "content": "To create a VNet by using PowerShell, follow the steps below.",
      "pos": [
        41,
        102
      ]
    },
    {
      "pos": [
        107,
        332
      ],
      "content": "If you have never used Azure PowerShell, see <bpt id=\"p1\">[</bpt>How to Install and Configure Azure PowerShell<ept id=\"p1\">](powershell-install-configure.md)</ept> and follow the instructions all the way to the end to sign into Azure and select your subscription."
    },
    {
      "content": "If necessary, create a new resource group, as shown below.",
      "pos": [
        341,
        399
      ]
    },
    {
      "content": "For our scenario, create a resource group named <bpt id=\"p1\">*</bpt>TestRG<ept id=\"p1\">*</ept>.",
      "pos": [
        400,
        457
      ]
    },
    {
      "content": "For more information about resource groups, visit <bpt id=\"p1\">[</bpt>Azure Resource Manager Overview<ept id=\"p1\">](resource-group-overview.md)</ept>.",
      "pos": [
        458,
        570
      ]
    },
    {
      "content": "Expected output:",
      "pos": [
        643,
        659
      ]
    },
    {
      "pos": [
        1076,
        1127
      ],
      "content": "Create a new VNet named <bpt id=\"p1\">*</bpt>TestVNet<ept id=\"p1\">*</ept>, as shown below."
    },
    {
      "content": "Expected output:",
      "pos": [
        1284,
        1300
      ]
    },
    {
      "content": "Store the virtual network object in a variable, as shown below.",
      "pos": [
        2071,
        2134
      ]
    },
    {
      "pos": [
        2229,
        2411
      ],
      "content": "<ph id=\"ph1\">[AZURE.TIP]</ph> You can combine steps 4 and 5 by running <bpt id=\"p1\">**</bpt>$vnet = New-AzureRmVirtualNetwork -ResourceGroupName TestRG -Name TestVNet -AddressPrefix 192.168.0.0/16 -Location centralus<ept id=\"p1\">**</ept>."
    },
    {
      "content": "Add a subnet to the new VNet variable, as shown below.",
      "pos": [
        2416,
        2470
      ]
    },
    {
      "content": "Expected output:",
      "pos": [
        2612,
        2628
      ]
    },
    {
      "content": "Repeat step 6 above for each subnet you want to create.",
      "pos": [
        3931,
        3986
      ]
    },
    {
      "content": "The command below creates the <bpt id=\"p1\">*</bpt>BackEnd<ept id=\"p1\">*</ept> subnet for our scenario.",
      "pos": [
        3987,
        4051
      ]
    },
    {
      "content": "Although you create subnets, they currently only exist in the local variable used to retrieve the VNet you create in step 4 above.",
      "pos": [
        4183,
        4313
      ]
    },
    {
      "content": "To save the changes to Azure, run the <bpt id=\"p1\">**</bpt>Set-AzureRmVirtualNetwork<ept id=\"p1\">**</ept> cmdlet, as shown below.",
      "pos": [
        4314,
        4405
      ]
    },
    {
      "content": "Expected output:",
      "pos": [
        4477,
        4493
      ]
    }
  ],
  "content": "## How to create a VNet using PowerShell\nTo create a VNet by using PowerShell, follow the steps below.\n\n1. If you have never used Azure PowerShell, see [How to Install and Configure Azure PowerShell](powershell-install-configure.md) and follow the instructions all the way to the end to sign into Azure and select your subscription.\n    \n3. If necessary, create a new resource group, as shown below. For our scenario, create a resource group named *TestRG*. For more information about resource groups, visit [Azure Resource Manager Overview](resource-group-overview.md).\n\n        New-AzureRmResourceGroup -Name TestRG -Location centralus\n\n    Expected output:\n    \n        ResourceGroupName : TestRG\n        Location          : centralus\n        ProvisioningState : Succeeded\n        Tags              :\n        Permissions       :\n                            Actions  NotActions\n                            =======  ==========\n                            *\n        \n        ResourceId        : /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/TestRG   \n\n4. Create a new VNet named *TestVNet*, as shown below.\n\n        New-AzureRmVirtualNetwork -ResourceGroupName TestRG -Name TestVNet `\n            -AddressPrefix 192.168.0.0/16 -Location centralus   \n        \n    Expected output:\n\n        Name              : TestVNet\n        ResourceGroupName : TestRG\n        Location          : centralus\n        Id                : /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/TestRG/providers/Microsoft.Network/virtualNetworks/TestVNet\n        Etag              : W/\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n        ProvisioningState : Succeeded\n        Tags              :\n        AddressSpace      : {\n                              \"AddressPrefixes\": [\n                                \"192.168.0.0/16\"\n                              ]\n                            }\n        DhcpOptions       : {\n                              \"DnsServers\": null\n                            }\n        NetworkInterfaces : null\n        Subnets           : []\n\n5. Store the virtual network object in a variable, as shown below.\n\n        $vnet = Get-AzureRmVirtualNetwork -ResourceGroupName TestRG -Name TestVNet\n    \n    >[AZURE.TIP] You can combine steps 4 and 5 by running **$vnet = New-AzureRmVirtualNetwork -ResourceGroupName TestRG -Name TestVNet -AddressPrefix 192.168.0.0/16 -Location centralus**.\n\n6. Add a subnet to the new VNet variable, as shown below.\n\n        Add-AzureRmVirtualNetworkSubnetConfig -Name FrontEnd `\n            -VirtualNetwork $vnet -AddressPrefix 192.168.1.0/24\n        \n    Expected output:\n\n        Name              : TestVNet\n        ResourceGroupName : TestRG\n        Location          : centralus\n        Id                : /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/TestRG/providers/Microsoft.Network/virtualNetworks/TestVNet\n        Etag              : W/\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n        ProvisioningState : Succeeded\n        Tags              :\n        AddressSpace      : {\n                              \"AddressPrefixes\": [\n                                \"192.168.0.0/16\"\n                              ]\n                            }\n        DhcpOptions       : {\n                              \"DnsServers\": null\n                            }\n        NetworkInterfaces : null\n        Subnets           : [\n                              {\n                                \"Name\": \"FrontEnd\",\n                                \"Etag\": null,\n                                \"Id\": null,\n                                \"AddressPrefix\": \"192.168.1.0/24\",\n                                \"IpConfigurations\": null,\n                                \"NetworkSecurityGroup\": null,\n                                \"RouteTable\": null,\n                                \"ProvisioningState\": null\n                              }\n                            ]\n\n7. Repeat step 6 above for each subnet you want to create. The command below creates the *BackEnd* subnet for our scenario.\n\n        Add-AzureRmVirtualNetworkSubnetConfig -Name BackEnd `\n            -VirtualNetwork $vnet -AddressPrefix 192.168.2.0/24\n\n8. Although you create subnets, they currently only exist in the local variable used to retrieve the VNet you create in step 4 above. To save the changes to Azure, run the **Set-AzureRmVirtualNetwork** cmdlet, as shown below.\n\n        Set-AzureRmVirtualNetwork -VirtualNetwork $vnet \n        \n    Expected output:\n\n        Name              : TestVNet\n        ResourceGroupName : TestRG\n        Location          : centralus\n        Id                : /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/TestRG/providers/Microsoft.Network/virtualNetworks/TestVNet\n        Etag              : W/\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n        ProvisioningState : Succeeded\n        Tags              :\n        AddressSpace      : {\n                              \"AddressPrefixes\": [\n                                \"192.168.0.0/16\"\n                              ]\n                            }\n        DhcpOptions       : {\n                              \"DnsServers\": []\n                            }\n        NetworkInterfaces : null\n        Subnets           : [\n                              {\n                                \"Name\": \"FrontEnd\",\n                                \"Etag\": \"W/\\\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\\\"\",\n                                \"Id\": \"/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/TestRG/providers/Microsoft.Network/virtualNetworks/TestVNet/subnets/FrontEnd\",\n                                \"AddressPrefix\": \"192.168.1.0/24\",\n                                \"IpConfigurations\": [],\n                                \"NetworkSecurityGroup\": null,\n                                \"RouteTable\": null,\n                                \"ProvisioningState\": \"Succeeded\"\n                              },\n                              {\n                                \"Name\": \"BackEnd\",\n                                \"Etag\": \"W/\\\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\\\"\",\n                                \"Id\": \"/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/TestRG/providers/Microsoft.Network/virtualNetworks/TestVNet/subnets/BackEnd\",\n                                \"AddressPrefix\": \"192.168.2.0/24\",\n                                \"IpConfigurations\": [],\n                                \"NetworkSecurityGroup\": null,\n                                \"RouteTable\": null,\n                                \"ProvisioningState\": \"Succeeded\"\n                              }\n                            ]\n\n"
}