{
  "nodes": [
    {
      "content": "Specifying JsonFormat",
      "pos": [
        4,
        25
      ]
    },
    {
      "pos": [
        27,
        147
      ],
      "content": "If the format is set to <bpt id=\"p1\">**</bpt>JsonFormat<ept id=\"p1\">**</ept>, you can specify the following <bpt id=\"p2\">**</bpt>optional<ept id=\"p2\">**</ept> properties in the <bpt id=\"p3\">**</bpt>Format<ept id=\"p3\">**</ept> section."
    },
    {
      "content": "Property",
      "pos": [
        151,
        159
      ]
    },
    {
      "content": "Description",
      "pos": [
        162,
        173
      ]
    },
    {
      "content": "Required",
      "pos": [
        176,
        184
      ]
    },
    {
      "content": "filePattern",
      "pos": [
        227,
        238
      ]
    },
    {
      "content": "Indicate the pattern of data stored in each JSON file.",
      "pos": [
        241,
        295
      ]
    },
    {
      "content": "Allowed values are: <bpt id=\"p1\">**</bpt>setOfObjects<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>arrayOfObjects<ept id=\"p2\">**</ept>.",
      "pos": [
        296,
        356
      ]
    },
    {
      "content": "The <bpt id=\"p1\">**</bpt>default<ept id=\"p1\">**</ept> value is: <bpt id=\"p2\">**</bpt>setOfObjects<ept id=\"p2\">**</ept>.",
      "pos": [
        357,
        400
      ]
    },
    {
      "content": "See sections below for details about these patterns.",
      "pos": [
        401,
        453
      ]
    },
    {
      "content": "No",
      "pos": [
        455,
        457
      ]
    },
    {
      "content": "encodingName",
      "pos": [
        462,
        474
      ]
    },
    {
      "content": "Specify the encoding name.",
      "pos": [
        477,
        503
      ]
    },
    {
      "content": "For the list of valid encoding names, see: <bpt id=\"p1\">[</bpt>Encoding.EncodingName<ept id=\"p1\">](https://msdn.microsoft.com/library/system.text.encoding.aspx)</ept> Property.",
      "pos": [
        504,
        642
      ]
    },
    {
      "content": "For example: windows-1250 or shift_jis.",
      "pos": [
        643,
        682
      ]
    },
    {
      "content": "The <bpt id=\"p1\">**</bpt>default<ept id=\"p1\">**</ept> value is: <bpt id=\"p2\">**</bpt>UTF-8<ept id=\"p2\">**</ept>.",
      "pos": [
        683,
        719
      ]
    },
    {
      "content": "No",
      "pos": [
        722,
        724
      ]
    },
    {
      "content": "nestingSeparator",
      "pos": [
        730,
        746
      ]
    },
    {
      "content": "Character that is used to separate nesting levels.",
      "pos": [
        749,
        799
      ]
    },
    {
      "content": "The <bpt id=\"p1\">**</bpt>default<ept id=\"p1\">**</ept> value is <bpt id=\"p2\">**</bpt>. (dot)<ept id=\"p2\">**</ept>.",
      "pos": [
        800,
        837
      ]
    },
    {
      "content": "No",
      "pos": [
        840,
        842
      ]
    },
    {
      "content": "setOfObjects file pattern",
      "pos": [
        853,
        878
      ]
    },
    {
      "content": "Each file contains single object, or line-delimited/concatenated multiple objects.",
      "pos": [
        880,
        962
      ]
    },
    {
      "content": "When this option is chosen in an output dataset, copy will produce a single JSON file with each object per line (line-delimited).",
      "pos": [
        963,
        1092
      ]
    },
    {
      "content": "single object",
      "pos": [
        1096,
        1109
      ]
    },
    {
      "content": "line-delimited JSON",
      "pos": [
        1348,
        1367
      ]
    },
    {
      "content": "concatenated JSON",
      "pos": [
        2192,
        2209
      ]
    },
    {
      "content": "arrayOfObjects file pattern.",
      "pos": [
        2902,
        2930
      ]
    },
    {
      "content": "Each file contains an array of objects.",
      "pos": [
        2933,
        2972
      ]
    },
    {
      "content": "JsonFormat example",
      "pos": [
        4825,
        4843
      ]
    },
    {
      "content": "If you have a JSON file with the following content:",
      "pos": [
        4845,
        4896
      ]
    },
    {
      "content": "and you want to copy it into a an Azure SQL table in the following format:",
      "pos": [
        5056,
        5130
      ]
    },
    {
      "content": "Id",
      "pos": [
        5133,
        5135
      ]
    },
    {
      "content": "Name.First",
      "pos": [
        5139,
        5149
      ]
    },
    {
      "content": "Name.Middle",
      "pos": [
        5152,
        5163
      ]
    },
    {
      "content": "Name.Last",
      "pos": [
        5166,
        5175
      ]
    },
    {
      "content": "Tags",
      "pos": [
        5178,
        5182
      ]
    },
    {
      "content": "1",
      "pos": [
        5233,
        5234
      ]
    },
    {
      "content": "John",
      "pos": [
        5237,
        5241
      ]
    },
    {
      "content": "null",
      "pos": [
        5244,
        5248
      ]
    },
    {
      "content": "Doe",
      "pos": [
        5251,
        5254
      ]
    },
    {
      "content": "[\"Data Factory‚Äù, \"Azure\"]",
      "pos": [
        5257,
        5282
      ]
    },
    {
      "content": "The input dataset with JsonFormat type is defined as follows: (partial definition with only the relevant parts)",
      "pos": [
        5284,
        5395
      ]
    },
    {
      "content": "If the structure is not defined, the Copy Activity flattens the structure by default and copy every thing.",
      "pos": [
        6022,
        6128
      ]
    },
    {
      "content": "Supported JSON structure",
      "pos": [
        6136,
        6160
      ]
    },
    {
      "content": "Note the following:",
      "pos": [
        6161,
        6180
      ]
    },
    {
      "content": "Each object with a collection of name/value pairs will be mapped to one row of data in a tabular format.",
      "pos": [
        6185,
        6289
      ]
    },
    {
      "content": "Objects can be nested and you can define how to flatten the structure in a dataset with the  nesting separator (.) by default.",
      "pos": [
        6290,
        6416
      ]
    },
    {
      "content": "See the <bpt id=\"p1\">[</bpt>JsonFormat example<ept id=\"p1\">](#jsonformat-example)</ept> section above for an example.",
      "pos": [
        6417,
        6496
      ]
    },
    {
      "content": "If the structure is not defined in the Data Factory dataset, the Copy Activity detects the schema from the first object and flatten the whole object.",
      "pos": [
        6501,
        6650
      ]
    },
    {
      "content": "If the JSON input has an array, the Copy Activity converts the entire array value into a string.",
      "pos": [
        6654,
        6750
      ]
    },
    {
      "content": "You can choose to skip it by using <bpt id=\"p1\">[</bpt>column mapping or filtering<ept id=\"p1\">](#column-mapping-with-translator-rules)</ept>.",
      "pos": [
        6751,
        6855
      ]
    },
    {
      "content": "If there are duplicate name at the same level, the Copy Activity will pick the last one.",
      "pos": [
        6858,
        6946
      ]
    },
    {
      "content": "Property names are case sensitive.",
      "pos": [
        6949,
        6983
      ]
    },
    {
      "content": "Two properties with same name but different casing will be treated as two separate properties.",
      "pos": [
        6984,
        7078
      ]
    }
  ],
  "content": "### Specifying JsonFormat\n\nIf the format is set to **JsonFormat**, you can specify the following **optional** properties in the **Format** section.\n\n| Property | Description | Required |\n| -------- | ----------- | -------- |\n| filePattern | Indicate the pattern of data stored in each JSON file. Allowed values are: **setOfObjects** and **arrayOfObjects**. The **default** value is: **setOfObjects**. See sections below for details about these patterns.| No |\n| encodingName | Specify the encoding name. For the list of valid encoding names, see: [Encoding.EncodingName](https://msdn.microsoft.com/library/system.text.encoding.aspx) Property. For example: windows-1250 or shift_jis. The **default** value is: **UTF-8**. | No | \n| nestingSeparator | Character that is used to separate nesting levels. The **default** value is **. (dot)**. | No | \n\n\n#### setOfObjects file pattern\n\nEach file contains single object, or line-delimited/concatenated multiple objects. When this option is chosen in an output dataset, copy will produce a single JSON file with each object per line (line-delimited).\n\n**single object** \n\n    {\n        \"time\": \"2015-04-29T07:12:20.9100000Z\",\n        \"callingimsi\": \"466920403025604\",\n        \"callingnum1\": \"678948008\",\n        \"callingnum2\": \"567834760\",\n        \"switch1\": \"China\",\n        \"switch2\": \"Germany\"\n    }\n\n**line-delimited JSON** \n\n    {\"time\":\"2015-04-29T07:12:20.9100000Z\",\"callingimsi\":\"466920403025604\",\"callingnum1\":\"678948008\",\"callingnum2\":\"567834760\",\"switch1\":\"China\",\"switch2\":\"Germany\"}\n    {\"time\":\"2015-04-29T07:13:21.0220000Z\",\"callingimsi\":\"466922202613463\",\"callingnum1\":\"123436380\",\"callingnum2\":\"789037573\",\"switch1\":\"US\",\"switch2\":\"UK\"}\n    {\"time\":\"2015-04-29T07:13:21.4370000Z\",\"callingimsi\":\"466923101048691\",\"callingnum1\":\"678901578\",\"callingnum2\":\"345626404\",\"switch1\":\"Germany\",\"switch2\":\"UK\"}\n    {\"time\":\"2015-04-29T07:13:22.0960000Z\",\"callingimsi\":\"466922202613463\",\"callingnum1\":\"789037573\",\"callingnum2\":\"789044691\",\"switch1\":\"UK\",\"switch2\":\"Australia\"}\n    {\"time\":\"2015-04-29T07:13:22.0960000Z\",\"callingimsi\":\"466922202613463\",\"callingnum1\":\"123436380\",\"callingnum2\":\"789044691\",\"switch1\":\"US\",\"switch2\":\"Australia\"}\n\n**concatenated JSON**\n\n    {\n        \"time\": \"2015-04-29T07:12:20.9100000Z\",\n        \"callingimsi\": \"466920403025604\",\n        \"callingnum1\": \"678948008\",\n        \"callingnum2\": \"567834760\",\n        \"switch1\": \"China\",\n        \"switch2\": \"Germany\"\n    }\n    {\n        \"time\": \"2015-04-29T07:13:21.0220000Z\",\n        \"callingimsi\": \"466922202613463\",\n        \"callingnum1\": \"123436380\",\n        \"callingnum2\": \"789037573\",\n        \"switch1\": \"US\",\n        \"switch2\": \"UK\"\n    }\n    {\n        \"time\": \"2015-04-29T07:13:21.4370000Z\",\n        \"callingimsi\": \"466923101048691\",\n        \"callingnum1\": \"678901578\",\n        \"callingnum2\": \"345626404\",\n        \"switch1\": \"Germany\",\n        \"switch2\": \"UK\"\n    }\n\n\n#### arrayOfObjects file pattern. \n\nEach file contains an array of objects. \n\n    [\n        {\n            \"time\": \"2015-04-29T07:12:20.9100000Z\",\n            \"callingimsi\": \"466920403025604\",\n            \"callingnum1\": \"678948008\",\n            \"callingnum2\": \"567834760\",\n            \"switch1\": \"China\",\n            \"switch2\": \"Germany\"\n        },\n        {\n            \"time\": \"2015-04-29T07:13:21.0220000Z\",\n            \"callingimsi\": \"466922202613463\",\n            \"callingnum1\": \"123436380\",\n            \"callingnum2\": \"789037573\",\n            \"switch1\": \"US\",\n            \"switch2\": \"UK\"\n        },\n        {\n            \"time\": \"2015-04-29T07:13:21.4370000Z\",\n            \"callingimsi\": \"466923101048691\",\n            \"callingnum1\": \"678901578\",\n            \"callingnum2\": \"345626404\",\n            \"switch1\": \"Germany\",\n            \"switch2\": \"UK\"\n        },\n        {\n            \"time\": \"2015-04-29T07:13:22.0960000Z\",\n            \"callingimsi\": \"466922202613463\",\n            \"callingnum1\": \"789037573\",\n            \"callingnum2\": \"789044691\",\n            \"switch1\": \"UK\",\n            \"switch2\": \"Australia\"\n        },\n        {\n            \"time\": \"2015-04-29T07:13:22.0960000Z\",\n            \"callingimsi\": \"466922202613463\",\n            \"callingnum1\": \"123436380\",\n            \"callingnum2\": \"789044691\",\n            \"switch1\": \"US\",\n            \"switch2\": \"Australia\"\n        },\n        {\n            \"time\": \"2015-04-29T07:13:24.2120000Z\",\n            \"callingimsi\": \"466922201102759\",\n            \"callingnum1\": \"345698602\",\n            \"callingnum2\": \"789097900\",\n            \"switch1\": \"UK\",\n            \"switch2\": \"Australia\"\n        },\n        {\n            \"time\": \"2015-04-29T07:13:25.6320000Z\",\n            \"callingimsi\": \"466923300236137\",\n            \"callingnum1\": \"567850552\",\n            \"callingnum2\": \"789086133\",\n            \"switch1\": \"China\",\n            \"switch2\": \"Germany\"\n        }\n    ]\n\n### JsonFormat example\n\nIf you have a JSON file with the following content:  \n\n    {\n        \"Id\": 1,\n        \"Name\": {\n            \"First\": \"John\",\n            \"Last\": \"Doe\"\n        },\n        \"Tags\": [\"Data Factory‚Äù, \"Azure\"]\n    }\n\nand you want to copy it into a an Azure SQL table in the following format: \n\nId  | Name.First | Name.Middle | Name.Last | Tags\n--- | ---------- | ----------- | --------- | ----\n1 | John | null | Doe | [\"Data Factory‚Äù, \"Azure\"]\n\nThe input dataset with JsonFormat type is defined as follows: (partial definition with only the relevant parts)\n\n    \"properties\": {\n        \"structure\": [\n            {\"name\": \"Id\", \"type\": \"Int\"},\n            {\"name\": \"Name.First\", \"type\": \"String\"},\n            {\"name\": \"Name.Middle\", \"type\": \"String\"},\n            {\"name\": \"Name.Last\", \"type\": \"String\"},\n            {\"name\": \"Tags\", \"type\": \"string\"}\n        ],\n        \"typeProperties\":\n        {\n            \"folderPath\": \"mycontainer/myfolder\",\n            \"format\":\n            {\n                \"type\": \"JsonFormat\",\n                \"filePattern\": \"setOfObjects\",\n                \"encodingName\": \"UTF-8\",\n                \"nestingSeparator\": \".\"\n            }\n        }\n    }\n\nIf the structure is not defined, the Copy Activity flattens the structure by default and copy every thing. \n\n#### Supported JSON structure\nNote the following: \n\n- Each object with a collection of name/value pairs will be mapped to one row of data in a tabular format. Objects can be nested and you can define how to flatten the structure in a dataset with the  nesting separator (.) by default. See the [JsonFormat example](#jsonformat-example) section above for an example.  \n- If the structure is not defined in the Data Factory dataset, the Copy Activity detects the schema from the first object and flatten the whole object. \n- If the JSON input has an array, the Copy Activity converts the entire array value into a string. You can choose to skip it by using [column mapping or filtering](#column-mapping-with-translator-rules).\n- If there are duplicate name at the same level, the Copy Activity will pick the last one.\n- Property names are case sensitive. Two properties with same name but different casing will be treated as two separate properties. \n\n"
}