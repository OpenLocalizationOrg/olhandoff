<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="pt-br">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">acomdc_nonhi</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">722796c21a9267ef8bd51e78bec73245d6ef570b</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1457980" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Send a cloud-to-device message from the app back end</source>
          <target state="new">Send a cloud-to-device message from the app back end</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>In this section, you'll write a Windows console app that sends cloud-to-device messages to the simulated device app.</source>
          <target state="new">In this section, you'll write a Windows console app that sends cloud-to-device messages to the simulated device app.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>In the current Visual Studio solution, create a new Visual C# Desktop App project using the <bpt id="p1">**</bpt>Console  Application<ept id="p1">**</ept> project template.</source>
          <target state="new">In the current Visual Studio solution, create a new Visual C# Desktop App project using the <bpt id="p1">**</bpt>Console  Application<ept id="p1">**</ept> project template.</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Name the project <bpt id="p1">**</bpt>SendCloudToDevice<ept id="p1">**</ept>.</source>
          <target state="new">Name the project <bpt id="p1">**</bpt>SendCloudToDevice<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>In Solution Explorer, right-click the solution, and then click <bpt id="p1">**</bpt>Manage NuGet Packages for Solution...<ept id="p1">**</ept>.</source>
          <target state="new">In Solution Explorer, right-click the solution, and then click <bpt id="p1">**</bpt>Manage NuGet Packages for Solution...<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This displays the Manage NuGet Packages window.</source>
          <target state="new">This displays the Manage NuGet Packages window.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Search for <ph id="ph1">`Microsoft Azure Devices`</ph>, click <bpt id="p1">**</bpt>Install<ept id="p1">**</ept>, and accept the terms of use.</source>
          <target state="new">Search for <ph id="ph1">`Microsoft Azure Devices`</ph>, click <bpt id="p1">**</bpt>Install<ept id="p1">**</ept>, and accept the terms of use.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This downloads, installs, and adds a reference to the <bpt id="p1">[</bpt><ept id="p1">Azure IoT - Service SDK NuGet package]</ept>.</source>
          <target state="new">This downloads, installs, and adds a reference to the <bpt id="p1">[</bpt><ept id="p1">Azure IoT - Service SDK NuGet package]</ept>.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Add the following <ph id="ph1">`using`</ph> statement at the top of the <bpt id="p1">**</bpt>Program.cs<ept id="p1">**</ept> file:</source>
          <target state="new">Add the following <ph id="ph1">`using`</ph> statement at the top of the <bpt id="p1">**</bpt>Program.cs<ept id="p1">**</ept> file:</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Add the following fields to the <bpt id="p1">**</bpt>Program<ept id="p1">**</ept> class, substituting the placeholder value with the IoT hub connection string from <bpt id="p2">[</bpt><ept id="p2">Get started with IoT Hub]</ept>:</source>
          <target state="new">Add the following fields to the <bpt id="p1">**</bpt>Program<ept id="p1">**</ept> class, substituting the placeholder value with the IoT hub connection string from <bpt id="p2">[</bpt><ept id="p2">Get started with IoT Hub]</ept>:</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Add the following method to the <bpt id="p1">**</bpt>Program<ept id="p1">**</ept> class:</source>
          <target state="new">Add the following method to the <bpt id="p1">**</bpt>Program<ept id="p1">**</ept> class:</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This method will send a new cloud-to-device message to the device with id <ph id="ph1">`myFirstDevice`</ph>.</source>
          <target state="new">This method will send a new cloud-to-device message to the device with id <ph id="ph1">`myFirstDevice`</ph>.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Change this parameter accordingly, in case you modified from the one used in <bpt id="p1">[</bpt><ept id="p1">Get started with IoT Hub]</ept>.</source>
          <target state="new">Change this parameter accordingly, in case you modified from the one used in <bpt id="p1">[</bpt><ept id="p1">Get started with IoT Hub]</ept>.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Finally, add the following lines to the <bpt id="p1">**</bpt>Main<ept id="p1">**</ept> method:</source>
          <target state="new">Finally, add the following lines to the <bpt id="p1">**</bpt>Main<ept id="p1">**</ept> method:</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>From within Visual Studio, right click your solution and select <bpt id="p1">**</bpt>Set StartUp projects...<ept id="p1">**</ept>.</source>
          <target state="new">From within Visual Studio, right click your solution and select <bpt id="p1">**</bpt>Set StartUp projects...<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>Multiple startup projects<ept id="p1">**</ept>, then select the <bpt id="p2">**</bpt>Start<ept id="p2">**</ept> action for <bpt id="p3">**</bpt>ProcessDeviceToCloudMessages<ept id="p3">**</ept>, <bpt id="p4">**</bpt>SimulatedDevice<ept id="p4">**</ept>, and <bpt id="p5">**</bpt>SendCloudToDevice<ept id="p5">**</ept>.</source>
          <target state="new">Select <bpt id="p1">**</bpt>Multiple startup projects<ept id="p1">**</ept>, then select the <bpt id="p2">**</bpt>Start<ept id="p2">**</ept> action for <bpt id="p3">**</bpt>ProcessDeviceToCloudMessages<ept id="p3">**</ept>, <bpt id="p4">**</bpt>SimulatedDevice<ept id="p4">**</ept>, and <bpt id="p5">**</bpt>SendCloudToDevice<ept id="p5">**</ept>.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Press <bpt id="p1">**</bpt>F5<ept id="p1">**</ept>, and you should see all three application start.</source>
          <target state="new">Press <bpt id="p1">**</bpt>F5<ept id="p1">**</ept>, and you should see all three application start.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Select the <bpt id="p1">**</bpt>SendCloudToDevice<ept id="p1">**</ept> windows and press <bpt id="p2">**</bpt>Enter<ept id="p2">**</ept>: you should see the message being received by the simulated app.</source>
          <target state="new">Select the <bpt id="p1">**</bpt>SendCloudToDevice<ept id="p1">**</ept> windows and press <bpt id="p2">**</bpt>Enter<ept id="p2">**</ept>: you should see the message being received by the simulated app.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Receiving delivery feedback</source>
          <target state="new">Receiving delivery feedback</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>It is possible to request delivery (or expiration) ackownledgments from IoT Hub for each cloud-to-device message.</source>
          <target state="new">It is possible to request delivery (or expiration) ackownledgments from IoT Hub for each cloud-to-device message.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This enables the cloud back end to easily inform retry or compensation logic.</source>
          <target state="new">This enables the cloud back end to easily inform retry or compensation logic.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Refer to the <bpt id="p1">[</bpt>IoT Hub Developer Guide<ept id="p1">][IoT Hub Developer Guide - C2D]</ept> for more information on cloud-to-device feedback.</source>
          <target state="new">Refer to the <bpt id="p1">[</bpt>IoT Hub Developer Guide<ept id="p1">][IoT Hub Developer Guide - C2D]</ept> for more information on cloud-to-device feedback.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>In this section, you will modify the <bpt id="p1">**</bpt>SendCloudToDevice<ept id="p1">**</ept> app to request feedback and receive them from IoT Hub.</source>
          <target state="new">In this section, you will modify the <bpt id="p1">**</bpt>SendCloudToDevice<ept id="p1">**</ept> app to request feedback and receive them from IoT Hub.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>In Visual Studio, in the <bpt id="p1">**</bpt>SendCloudToDevice<ept id="p1">**</ept> project, add the following method to the <bpt id="p2">**</bpt>Program<ept id="p2">**</ept> class.</source>
          <target state="new">In Visual Studio, in the <bpt id="p1">**</bpt>SendCloudToDevice<ept id="p1">**</ept> project, add the following method to the <bpt id="p2">**</bpt>Program<ept id="p2">**</ept> class.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Note that the receive pattern is the same one used to receive cloud-to-device messages from the device app.</source>
          <target state="new">Note that the receive pattern is the same one used to receive cloud-to-device messages from the device app.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Add the following method in the <bpt id="p1">**</bpt>Main<ept id="p1">**</ept> method right after the <ph id="ph1">`serviceClient = ServiceClient.CreateFromConnectionString(connectionString)`</ph> line:</source>
          <target state="new">Add the following method in the <bpt id="p1">**</bpt>Main<ept id="p1">**</ept> method right after the <ph id="ph1">`serviceClient = ServiceClient.CreateFromConnectionString(connectionString)`</ph> line:</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>In order to request feedback for the delivery of your cloud-to-device message, you have to specify a property in the <bpt id="p1">**</bpt>SendCloudToDeviceMessageAsync<ept id="p1">**</ept> method.</source>
          <target state="new">In order to request feedback for the delivery of your cloud-to-device message, you have to specify a property in the <bpt id="p1">**</bpt>SendCloudToDeviceMessageAsync<ept id="p1">**</ept> method.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Add the following line, right after the <ph id="ph1">`var commandMessage = new Message(...);`</ph> line:</source>
          <target state="new">Add the following line, right after the <ph id="ph1">`var commandMessage = new Message(...);`</ph> line:</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Run the apps by pressing <bpt id="p1">**</bpt>F5<ept id="p1">**</ept>, and you should see all three application start.</source>
          <target state="new">Run the apps by pressing <bpt id="p1">**</bpt>F5<ept id="p1">**</ept>, and you should see all three application start.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Select the <bpt id="p1">**</bpt>SendCloudToDevice<ept id="p1">**</ept> windows and press <bpt id="p2">**</bpt>Enter<ept id="p2">**</ept>: you should see the message being received by the simulated app, and after a few seconds, the feedback message being received by your <bpt id="p3">**</bpt>SendCloudToDevice<ept id="p3">**</ept> application.</source>
          <target state="new">Select the <bpt id="p1">**</bpt>SendCloudToDevice<ept id="p1">**</ept> windows and press <bpt id="p2">**</bpt>Enter<ept id="p2">**</ept>: you should see the message being received by the simulated app, and after a few seconds, the feedback message being received by your <bpt id="p3">**</bpt>SendCloudToDevice<ept id="p3">**</ept> application.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[AZURE.NOTE]</ph> For simplicity's sake, this tutorial does not implement any retry policy.</source>
          <target state="new"><ph id="ph1">[AZURE.NOTE]</ph> For simplicity's sake, this tutorial does not implement any retry policy.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>In production code, it is reccommended to implement retry policies (such as exponential backoff), as suggested in the MSDN article <bpt id="p1">[</bpt><ept id="p1">Transient Fault Handling]</ept>.</source>
          <target state="new">In production code, it is reccommended to implement retry policies (such as exponential backoff), as suggested in the MSDN article <bpt id="p1">[</bpt><ept id="p1">Transient Fault Handling]</ept>.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>