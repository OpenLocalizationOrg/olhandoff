{
  "nodes": [
    {
      "content": "Add authentication on Apache Cordova with Mobile Apps | Azure App Service",
      "pos": [
        27,
        100
      ]
    },
    {
      "content": "Learn how to use Mobile Apps in Azure App Service to authenticate users of your Apache Cordova app through a variety of identity providers, including Google, Facebook, Twitter, and Microsoft.",
      "pos": [
        119,
        310
      ]
    },
    {
      "content": "Add authentication to your Apache Cordova app",
      "pos": [
        651,
        696
      ]
    },
    {
      "content": "Summary",
      "pos": [
        831,
        838
      ]
    },
    {
      "content": "In this tutorial, you add authentication to the todolist quickstart project on Apache Cordova using a supported identity provider.",
      "pos": [
        840,
        970
      ]
    },
    {
      "content": "This",
      "pos": [
        971,
        975
      ]
    },
    {
      "content": "tutorial is based on the <bpt id=\"p1\">[</bpt><ept id=\"p1\">Get started with Mobile Apps]</ept> tutorial, which you must complete first.",
      "pos": [
        976,
        1072
      ]
    },
    {
      "pos": [
        1076,
        1165
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"register\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>Register your app for authentication and configure the App Service"
    },
    {
      "pos": [
        1293,
        1362
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"permissions\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>Restrict permissions to authenticated users"
    },
    {
      "content": "In Visual Studio, open the project that you created when you completed the tutorial <bpt id=\"p1\">[</bpt><ept id=\"p1\">Get started with Mobile Apps]</ept>, then run your application",
      "pos": [
        1514,
        1655
      ]
    },
    {
      "content": "in the <bpt id=\"p1\">**</bpt>Google Android Emulator<ept id=\"p1\">**</ept> and verify that an Unexpected Connection Failure is shown after the app starts.",
      "pos": [
        1656,
        1770
      ]
    },
    {
      "pos": [
        1776,
        2001
      ],
      "content": "This happening becuase the app attempts to access the backend as an unauthenticated user.  The backend redirects the user to an authentication\n  page using OAuth.  However, the application does not trust the OAuth endpoint.",
      "leadings": [
        "",
        "  "
      ],
      "nodes": [
        {
          "content": "This happening becuase the app attempts to access the backend as an unauthenticated user.  The backend redirects the user to an authentication",
          "pos": [
            0,
            142
          ],
          "nodes": [
            {
              "content": "This happening becuase the app attempts to access the backend as an unauthenticated user.",
              "pos": [
                0,
                89
              ]
            },
            {
              "content": "The backend redirects the user to an authentication",
              "pos": [
                91,
                142
              ]
            }
          ]
        },
        {
          "content": "page using OAuth.  However, the application does not trust the OAuth endpoint.",
          "pos": [
            145,
            223
          ],
          "nodes": [
            {
              "content": "page using OAuth.",
              "pos": [
                0,
                17
              ]
            },
            {
              "content": "However, the application does not trust the OAuth endpoint.",
              "pos": [
                19,
                78
              ]
            }
          ]
        }
      ]
    },
    {
      "content": "Next, you will update the app to authenticate users before requesting resources from the Mobile App backend.",
      "pos": [
        2003,
        2111
      ]
    },
    {
      "pos": [
        2115,
        2177
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"add-authentication\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>Add authentication to the app"
    },
    {
      "pos": [
        2182,
        2270
      ],
      "content": "Open your project in <bpt id=\"p1\">**</bpt>Visual Studio<ept id=\"p1\">**</ept>, then open the <ph id=\"ph1\">`www/index.html`</ph> file for editing."
    },
    {
      "content": "Locate the <ph id=\"ph1\">`Content-Security-Policy`</ph> meta tag in the head section.",
      "pos": [
        2275,
        2341
      ]
    },
    {
      "content": "You will need to add the OAuth host to the list of allowed sources.",
      "pos": [
        2343,
        2410
      ]
    },
    {
      "content": "Provider",
      "pos": [
        2418,
        2426
      ]
    },
    {
      "content": "SDK Provider Name",
      "pos": [
        2443,
        2460
      ]
    },
    {
      "content": "OAuth Host",
      "pos": [
        2463,
        2473
      ]
    },
    {
      "content": "Azure Active Directory",
      "pos": [
        2580,
        2602
      ]
    },
    {
      "content": "aad",
      "pos": [
        2605,
        2608
      ]
    },
    {
      "content": "https://login.windows.net",
      "pos": [
        2625,
        2650
      ]
    },
    {
      "content": "Facebook",
      "pos": [
        2661,
        2669
      ]
    },
    {
      "content": "facebook",
      "pos": [
        2686,
        2694
      ]
    },
    {
      "content": "https://www.facebook.com",
      "pos": [
        2706,
        2730
      ]
    },
    {
      "content": "Google",
      "pos": [
        2742,
        2748
      ]
    },
    {
      "content": "google",
      "pos": [
        2767,
        2773
      ]
    },
    {
      "content": "https://accounts.google.com",
      "pos": [
        2787,
        2814
      ]
    },
    {
      "content": "Microsoft",
      "pos": [
        2823,
        2832
      ]
    },
    {
      "content": "microsoftaccount",
      "pos": [
        2848,
        2864
      ]
    },
    {
      "content": "https://login.live.com",
      "pos": [
        2868,
        2890
      ]
    },
    {
      "content": "Twitter",
      "pos": [
        2904,
        2911
      ]
    },
    {
      "content": "twitter",
      "pos": [
        2929,
        2936
      ]
    },
    {
      "content": "https://api.twitter.com",
      "pos": [
        2949,
        2972
      ]
    },
    {
      "content": "An example Content-Security-Policy (implemented for Azure Active Directory) is as follows:",
      "pos": [
        2984,
        3074
      ]
    },
    {
      "content": "You should replace <ph id=\"ph1\">`https://login.windows.net`</ph> with the OAuth host from the table above.",
      "pos": [
        3263,
        3351
      ]
    },
    {
      "content": "Consult the <bpt id=\"p1\">[</bpt><ept id=\"p1\">Content-Security-Policy documentation]</ept> for more information about this meta tag.",
      "pos": [
        3353,
        3446
      ]
    },
    {
      "pos": [
        3452,
        3704
      ],
      "content": "Note that some authentication providers do not require Content-Security-Policy changes when used on appropriate\n mobile devices.  For example, no Content-Security-Policy changes are required when using Google authentication\n on an Android device.",
      "leadings": [
        "",
        "   ",
        "   "
      ],
      "nodes": [
        {
          "content": "Note that some authentication providers do not require Content-Security-Policy changes when used on appropriate",
          "pos": [
            0,
            111
          ]
        },
        {
          "content": "mobile devices.  For example, no Content-Security-Policy changes are required when using Google authentication",
          "pos": [
            113,
            223
          ],
          "nodes": [
            {
              "content": "mobile devices.",
              "pos": [
                0,
                15
              ]
            },
            {
              "content": "For example, no Content-Security-Policy changes are required when using Google authentication",
              "pos": [
                17,
                110
              ]
            }
          ]
        },
        {
          "content": "on an Android device.",
          "pos": [
            225,
            246
          ]
        }
      ]
    },
    {
      "pos": [
        3709,
        3844
      ],
      "content": "Open the <ph id=\"ph1\">`www/js/index.js`</ph> file for editing, locate the <ph id=\"ph2\">`onDeviceReady()`</ph> method, and under the client creation code add the following:"
    },
    {
      "content": "Note that this code replace the existing code that creates the table reference and refreshes the UI.",
      "pos": [
        4437,
        4537
      ]
    },
    {
      "content": "The login() method starts authentication with the provider.",
      "pos": [
        4543,
        4602
      ]
    },
    {
      "content": "The login() method is an async function that returns a JavaScript Promise.",
      "pos": [
        4603,
        4677
      ]
    },
    {
      "content": "The rest of the initialization is placed inside the promise response so that it is not executed until the login() method completes.",
      "pos": [
        4679,
        4810
      ]
    },
    {
      "content": "In the code that you just added, replace <ph id=\"ph1\">`SDK_Provider_Name`</ph> with the name of your login provider.",
      "pos": [
        4815,
        4913
      ]
    },
    {
      "content": "For example, for Azure Active Directory, use <ph id=\"ph1\">`client.login('aad')`</ph>.",
      "pos": [
        4914,
        4981
      ]
    },
    {
      "pos": [
        4986,
        5139
      ],
      "content": "Run your project.  When the project has finished initializing, your application will show the OAuth login page for the\nchosen authentication provider.",
      "leadings": [
        "",
        "   "
      ],
      "nodes": [
        {
          "content": "Run your project.  When the project has finished initializing, your application will show the OAuth login page for the",
          "pos": [
            0,
            118
          ],
          "nodes": [
            {
              "content": "Run your project.",
              "pos": [
                0,
                17
              ]
            },
            {
              "content": "When the project has finished initializing, your application will show the OAuth login page for the",
              "pos": [
                19,
                118
              ]
            }
          ]
        },
        {
          "content": "chosen authentication provider.",
          "pos": [
            119,
            150
          ]
        }
      ]
    },
    {
      "pos": [
        5143,
        5178
      ],
      "content": "<ph id=\"ph1\">&lt;a name=\"next-steps\"&gt;</ph><ph id=\"ph2\">&lt;/a&gt;</ph>Next Steps"
    },
    {
      "pos": [
        5182,
        5239
      ],
      "content": "Learn more <bpt id=\"p1\">[</bpt><ept id=\"p1\">About Authentication]</ept> with Azure App Service."
    },
    {
      "pos": [
        5242,
        5322
      ],
      "content": "Continue the tutorial by adding <bpt id=\"p1\">[</bpt><ept id=\"p1\">Push Notifications]</ept> to your Apache Cordova app."
    },
    {
      "content": "Learn how to use the SDKs.",
      "pos": [
        5324,
        5350
      ]
    },
    {
      "content": "Apache Cordova SDK",
      "pos": [
        5355,
        5373
      ]
    },
    {
      "content": "ASP.NET Server SDK",
      "pos": [
        5378,
        5396
      ]
    },
    {
      "content": "Node.js Server SDK",
      "pos": [
        5401,
        5419
      ]
    }
  ],
  "content": "<properties\n    pageTitle=\"Add authentication on Apache Cordova with Mobile Apps | Azure App Service\"\n    description=\"Learn how to use Mobile Apps in Azure App Service to authenticate users of your Apache Cordova app through a variety of identity providers, including Google, Facebook, Twitter, and Microsoft.\"\n    services=\"app-service\\mobile\"\n    documentationCenter=\"javascript\"\n    authors=\"adrianhall\"\n    manager=\"ggailey777\"\n    editor=\"\"/>\n\n<tags\n    ms.service=\"app-service-mobile\"\n    ms.workload=\"na\"\n    ms.tgt_pltfrm=\"mobile-html\"\n    ms.devlang=\"javascript\"\n    ms.topic=\"article\"\n    ms.date=\"02/11/2016\"\n    ms.author=\"adrianha\"/>\n\n# Add authentication to your Apache Cordova app\n\n[AZURE.INCLUDE [app-service-mobile-selector-get-started-users](../../includes/app-service-mobile-selector-get-started-users.md)]\n\n## Summary\n\nIn this tutorial, you add authentication to the todolist quickstart project on Apache Cordova using a supported identity provider. This\ntutorial is based on the [Get started with Mobile Apps] tutorial, which you must complete first.\n\n##<a name=\"register\"></a>Register your app for authentication and configure the App Service\n\n[AZURE.INCLUDE [app-service-mobile-register-authentication](../../includes/app-service-mobile-register-authentication.md)]\n\n##<a name=\"permissions\"></a>Restrict permissions to authenticated users\n\n[AZURE.INCLUDE [app-service-mobile-restrict-permissions-dotnet-backend](../../includes/app-service-mobile-restrict-permissions-dotnet-backend.md)]\n\n+ In Visual Studio, open the project that you created when you completed the tutorial [Get started with Mobile Apps], then run your application\nin the **Google Android Emulator** and verify that an Unexpected Connection Failure is shown after the app starts.\n\n    This happening becuase the app attempts to access the backend as an unauthenticated user.  The backend redirects the user to an authentication\n    page using OAuth.  However, the application does not trust the OAuth endpoint.\n\nNext, you will update the app to authenticate users before requesting resources from the Mobile App backend.\n\n##<a name=\"add-authentication\"></a>Add authentication to the app\n\n1. Open your project in **Visual Studio**, then open the `www/index.html` file for editing.\n\n2. Locate the `Content-Security-Policy` meta tag in the head section.  You will need to add the OAuth host to the list of allowed sources.\n\n    | Provider               | SDK Provider Name | OAuth Host                  |\n    | :--------------------- | :---------------- | :-------------------------- |\n    | Azure Active Directory | aad               | https://login.windows.net   |\n    | Facebook               | facebook          | https://www.facebook.com    |\n    | Google                 | google            | https://accounts.google.com |\n    | Microsoft              | microsoftaccount  | https://login.live.com      |\n    | Twitter                | twitter           | https://api.twitter.com     |\n\n    An example Content-Security-Policy (implemented for Azure Active Directory) is as follows:\n\n        <meta http-equiv=\"Content-Security-Policy\" content=\"default-src 'self'\n            data: gap: https://login.windows.net https://yourapp.azurewebsites.net; style-src 'self'\">\n\n    You should replace `https://login.windows.net` with the OAuth host from the table above.  Consult the [Content-Security-Policy documentation] for more information about this meta tag.\n\n    Note that some authentication providers do not require Content-Security-Policy changes when used on appropriate\n    mobile devices.  For example, no Content-Security-Policy changes are required when using Google authentication\n    on an Android device.\n\n3. Open the `www/js/index.js` file for editing, locate the `onDeviceReady()` method, and under the client creation code add the following:\n\n        // Login to the service\n        client.login('SDK_Provider_Name')\n            .then(function () {\n\n                // BEGINNING OF ORIGINAL CODE\n\n                // Create a table reference\n                todoItemTable = client.getTable('todoitem');\n\n                // Refresh the todoItems\n                refreshDisplay();\n\n                // Wire up the UI Event Handler for the Add Item\n                $('#add-item').submit(addItemHandler);\n                $('#refresh').on('click', refreshDisplay);\n\n                // END OF ORIGINAL CODE\n\n            }, handleError);\n\n    Note that this code replace the existing code that creates the table reference and refreshes the UI.\n\n    The login() method starts authentication with the provider. The login() method is an async function that returns a JavaScript Promise.  The rest of the initialization is placed inside the promise response so that it is not executed until the login() method completes.\n\n4. In the code that you just added, replace `SDK_Provider_Name` with the name of your login provider. For example, for Azure Active Directory, use `client.login('aad')`.\n\n4. Run your project.  When the project has finished initializing, your application will show the OAuth login page for the\n   chosen authentication provider.\n\n##<a name=\"next-steps\"></a>Next Steps\n\n* Learn more [About Authentication] with Azure App Service.\n* Continue the tutorial by adding [Push Notifications] to your Apache Cordova app.\n\nLearn how to use the SDKs.\n\n* [Apache Cordova SDK]\n* [ASP.NET Server SDK]\n* [Node.js Server SDK]\n\n<!-- URLs. -->\n[Get started with Mobile Apps]: app-service-mobile-cordova-get-started.md\n[Content-Security-Policy documentation]: https://cordova.apache.org/docs/en/latest/guide/appdev/whitelist/index.html\n[Push Notifications]: app-service-mobile-cordova-get-started-push.md\n[About Authentication]: app-service-mobile-auth.md\n[Apache Cordova SDK]: app-service-mobile-codova-how-to-use-client-library.md\n[ASP.NET Server SDK]: app-service-mobile-dotnet-backend-how-to-use-server-sdk.md\n[Node.js Server SDK]: app-service-mobile-node-backend-how-to-use-server-sdk.md\n"
}