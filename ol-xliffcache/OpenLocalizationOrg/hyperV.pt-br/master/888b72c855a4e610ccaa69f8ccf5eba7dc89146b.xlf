<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="md" source-language="en-US" target-language="pt-br">
    <header>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">acomdc_nonhi</xliffext:oltranslationpriority>
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">888b72c855a4e610ccaa69f8ccf5eba7dc89146b</xliffext:olfilehash>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1457980" tool-company="Microsoft" />
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="server-auth"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Authenticate with a Provider (Server Flow)</source>
          <target state="new"><ph id="ph1">&lt;a name="server-auth"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Authenticate with a Provider (Server Flow)</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>To have Mobile Services manage the authentication process in your app, you must register your app with your identity</source>
          <target state="new">To have Mobile Services manage the authentication process in your app, you must register your app with your identity</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>provider.</source>
          <target state="new">provider.</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Then in your Azure App Service, you need to configure the application ID and secret provided by your provider.</source>
          <target state="new">Then in your Azure App Service, you need to configure the application ID and secret provided by your provider.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For more information, see the tutorial [Add authentication to your app].</source>
          <target state="new">For more information, see the tutorial [Add authentication to your app].</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Once you have registered your identity provider, simply call the .login() method with the name of your provider.</source>
          <target state="new">Once you have registered your identity provider, simply call the .login() method with the name of your provider.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For</source>
          <target state="new">For</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>example, to login with Facebook use the following code.</source>
          <target state="new">example, to login with Facebook use the following code.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>If you are using an identity provider other than Facebook, change the value passed to the login method above to one of</source>
          <target state="new">If you are using an identity provider other than Facebook, change the value passed to the login method above to one of</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>the following: <ph id="ph1">`microsoftaccount`</ph>, <ph id="ph2">`facebook`</ph>, <ph id="ph3">`twitter`</ph>, <ph id="ph4">`google`</ph>, or <ph id="ph5">`aad`</ph>.</source>
          <target state="new">the following: <ph id="ph1">`microsoftaccount`</ph>, <ph id="ph2">`facebook`</ph>, <ph id="ph3">`twitter`</ph>, <ph id="ph4">`google`</ph>, or <ph id="ph5">`aad`</ph>.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In this case, Azure App Service manages the OAuth 2.0 authentication flow by displaying the login page of the selected</source>
          <target state="new">In this case, Azure App Service manages the OAuth 2.0 authentication flow by displaying the login page of the selected</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>provider and generating a App Service authentication token after successful login with the identity provider.</source>
          <target state="new">provider and generating a App Service authentication token after successful login with the identity provider.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The login</source>
          <target state="new">The login</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>function, when complete, returns a JSON object (user) that exposes both the user ID and App Service authentication token</source>
          <target state="new">function, when complete, returns a JSON object (user) that exposes both the user ID and App Service authentication token</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>in the userId and authenticationToken fields, respectively.</source>
          <target state="new">in the userId and authenticationToken fields, respectively.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This token can be cached and re-used until it expires.</source>
          <target state="new">This token can be cached and re-used until it expires.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="client-auth"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Authenticate with a Provider (Client Flow)</source>
          <target state="new"><ph id="ph1">&lt;a name="client-auth"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Authenticate with a Provider (Client Flow)</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Your app can also independently contact the identity provider and then provide the returned token to your App Service for</source>
          <target state="new">Your app can also independently contact the identity provider and then provide the returned token to your App Service for</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>authentication.</source>
          <target state="new">authentication.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This client flow enables you to provide a single sign-in experience for users or to retrieve additional</source>
          <target state="new">This client flow enables you to provide a single sign-in experience for users or to retrieve additional</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>user data from the identity provider.</source>
          <target state="new">user data from the identity provider.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Social Authentication basic example</source>
          <target state="new">Social Authentication basic example</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This example uses Facebook client SDK for authentication:</source>
          <target state="new">This example uses Facebook client SDK for authentication:</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This example assumes that the token provided by the respective provider SDK is stored in the token variable.</source>
          <target state="new">This example assumes that the token provided by the respective provider SDK is stored in the token variable.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Microsoft Account example</source>
          <target state="new">Microsoft Account example</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The following example uses the Live SDK, which supports single-sign-on for Windows Store apps by using Microsoft Account:</source>
          <target state="new">The following example uses the Live SDK, which supports single-sign-on for Windows Store apps by using Microsoft Account:</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This example gets a token from Live Connect, which is supplied to your App Service by calling the login function.</source>
          <target state="new">This example gets a token from Live Connect, which is supplied to your App Service by calling the login function.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;a name="auth-getinfo"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Obtain information about the authenticated user</source>
          <target state="new"><ph id="ph1">&lt;a name="auth-getinfo"&gt;</ph><ph id="ph2">&lt;/a&gt;</ph>How to: Obtain information about the authenticated user</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The authentication information for the current user can be retrieved from the <ph id="ph1">`/.auth/me`</ph> endpoint using any</source>
          <target state="new">The authentication information for the current user can be retrieved from the <ph id="ph1">`/.auth/me`</ph> endpoint using any</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>AJAX method.</source>
          <target state="new">AJAX method.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For example, to use the fetch API:</source>
          <target state="new">For example, to use the fetch API:</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>You could also use jQuery or another AJAX API to fetch the information.</source>
          <target state="new">You could also use jQuery or another AJAX API to fetch the information.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Data will be received as a JSON object.</source>
          <target state="new">Data will be received as a JSON object.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>