<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="fr-fr" original="foo.file" tool-id="ad73f7c2-271f-467a-bc3f-a238dcb8f33b" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="ad73f7c2-271f-467a-bc3f-a238dcb8f33b" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
      <olfilehash xmlns="">7c8369907f03597d2426402b6d4cd79fd10afb88</olfilehash>
    </header>
    <body>
      <group id="e00135ac-dbb7-44c4-a18a-3857a3c87a9c">
        <trans-unit id="673e1afc-7def-44f0-822b-e260a83b0e38" xml:space="preserve">
          <source>ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9</source>
          <target state="new">ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9</target>
        </trans-unit>
        <trans-unit id="021d5ca8-3e6a-48e7-97bb-a22e7cbbfbcc" xml:space="preserve">
          <source>title: PowerShell Snippets</source>
          <target state="new">title: PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="3e94946b-f9fa-4d8d-b8d4-be192a71c47e" xml:space="preserve">
          <source>PowerShell Snippets</source>
          <target state="new">PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="44148759-059a-4d8e-aa93-8ffd7f9fe60f" xml:space="preserve">
          <source>12-Nov update.Adding this sentence to validate the bug 451132 result.</source>
          <target state="new">12-Nov update.Adding this sentence to validate the bug 451132 result.</target>
        </trans-unit>
        <trans-unit id="7e233814-a9a3-49d5-b962-1c3052578cf9" xml:space="preserve">
          <source>PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</source>
          <target state="new">PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</target>
        </trans-unit>
        <trans-unit id="2277ff52-0240-485f-84bf-ac56efb0907c" xml:space="preserve">
          <source>All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</source>
          <target state="new">All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</target>
        </trans-unit>
        <trans-unit id="0aefd663-38a7-4263-9b8e-774883fc0492" xml:space="preserve">
          <source>If you aren't sure if you have the right permissions, type <bpt id="afa67693-f5f5-486b-b23c-ca05574e1f92">&lt;code&gt;</bpt>Get-VM<ept id="afa67693-f5f5-486b-b23c-ca05574e1f92">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</source>
          <target state="new">If you aren't sure if you have the right permissions, type <bpt id="afa67693-f5f5-486b-b23c-ca05574e1f92">&lt;code&gt;</bpt>Get-VM<ept id="afa67693-f5f5-486b-b23c-ca05574e1f92">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</target>
        </trans-unit>
        <trans-unit id="acc0999d-fbe8-404a-8c02-e248800ccb74" xml:space="preserve">
          <source>PowerShell Direct tools</source>
          <target state="new">PowerShell Direct tools</target>
        </trans-unit>
        <trans-unit id="1a25aee8-4e90-4cf6-9f78-230a38ef3c48" xml:space="preserve">
          <source>All of the scripts and snippets in this section will rely on the following basics.</source>
          <target state="new">All of the scripts and snippets in this section will rely on the following basics.</target>
        </trans-unit>
        <trans-unit id="ea25d636-999b-478f-b42d-503cd98b4153" xml:space="preserve">
          <source><bpt id="ae9cb7d1-c782-4a5d-893c-55050c640caf">&lt;strong&gt;</bpt>Requirements<ept id="ae9cb7d1-c782-4a5d-893c-55050c640caf">&lt;/strong&gt;</ept> :</source>
          <target state="new"><bpt id="ae9cb7d1-c782-4a5d-893c-55050c640caf">&lt;strong&gt;</bpt>Requirements<ept id="ae9cb7d1-c782-4a5d-893c-55050c640caf">&lt;/strong&gt;</ept> :</target>
        </trans-unit>
        <trans-unit id="cffa89d4-8e5f-4139-9cd3-f7f9ff340d15" xml:space="preserve">
          <source>PowerShell Direct.</source>
          <target state="new">PowerShell Direct.</target>
        </trans-unit>
        <trans-unit id="ae9a1359-c64b-4e90-b110-123e512c3735" xml:space="preserve">
          <source>Windows 10 guest and host OS.</source>
          <target state="new">Windows 10 guest and host OS.</target>
        </trans-unit>
        <trans-unit id="fe0e0efc-beea-41f5-8998-b92e60674827" xml:space="preserve">
          <source><bpt id="68c68966-1421-4b1b-ae6c-c404f8b8bfc8">&lt;strong&gt;</bpt>Common Variables<ept id="68c68966-1421-4b1b-ae6c-c404f8b8bfc8">&lt;/strong&gt;</ept> :</source>
          <target state="new"><bpt id="68c68966-1421-4b1b-ae6c-c404f8b8bfc8">&lt;strong&gt;</bpt>Common Variables<ept id="68c68966-1421-4b1b-ae6c-c404f8b8bfc8">&lt;/strong&gt;</ept> :</target>
        </trans-unit>
        <trans-unit id="2cb6e001-47e7-46b2-a228-74d602aa52c4" xml:space="preserve">
          <source><bpt id="bfec9d89-4601-425c-a01e-1d8c3773ac45">&lt;code&gt;</bpt>$VMName<ept id="bfec9d89-4601-425c-a01e-1d8c3773ac45">&lt;/code&gt;</ept> -- this is a string with the VMName.</source>
          <target state="new"><bpt id="bfec9d89-4601-425c-a01e-1d8c3773ac45">&lt;code&gt;</bpt>$VMName<ept id="bfec9d89-4601-425c-a01e-1d8c3773ac45">&lt;/code&gt;</ept> -- this is a string with the VMName.</target>
        </trans-unit>
        <trans-unit id="2d5c0fa2-1080-4d95-82b0-c90f5bc83ff0" xml:space="preserve">
          <source>See a list of available VMs with <bpt id="a4500c76-5fd5-4644-a9ae-7c36c22da55f">&lt;code&gt;</bpt>Get-VM<ept id="a4500c76-5fd5-4644-a9ae-7c36c22da55f">&lt;/code&gt;</ept></source>
          <target state="new">See a list of available VMs with <bpt id="a4500c76-5fd5-4644-a9ae-7c36c22da55f">&lt;code&gt;</bpt>Get-VM<ept id="a4500c76-5fd5-4644-a9ae-7c36c22da55f">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="09929ce7-8de1-4139-b50c-265b1d156428" xml:space="preserve">
          <source><bpt id="1c48ec86-416b-4842-b492-4753cea88011">&lt;code&gt;</bpt>$cred<ept id="1c48ec86-416b-4842-b492-4753cea88011">&lt;/code&gt;</ept> -- Credential for the guest OS.</source>
          <target state="new"><bpt id="1c48ec86-416b-4842-b492-4753cea88011">&lt;code&gt;</bpt>$cred<ept id="1c48ec86-416b-4842-b492-4753cea88011">&lt;/code&gt;</ept> -- Credential for the guest OS.</target>
        </trans-unit>
        <trans-unit id="cd9fe0c9-a909-44e0-8979-edb4545d3393" xml:space="preserve">
          <source>Can be populated using <bpt id="5387b082-4623-4939-a434-5232b1e20fff">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="5387b082-4623-4939-a434-5232b1e20fff">&lt;/code&gt;</ept></source>
          <target state="new">Can be populated using <bpt id="5387b082-4623-4939-a434-5232b1e20fff">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="5387b082-4623-4939-a434-5232b1e20fff">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="fced4bae-e8cd-4f01-9512-a8c3675a10d8" xml:space="preserve">
          <source>Check if the guest has booted</source>
          <target state="new">Check if the guest has booted</target>
        </trans-unit>
        <trans-unit id="ea59bd2c-dd35-4aa0-9b68-0d08efcbc847" xml:space="preserve">
          <source>Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</source>
          <target state="new">Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</target>
        </trans-unit>
        <trans-unit id="b4c0e599-d679-404f-8a3d-cb05bc86c43e" xml:space="preserve">
          <source>Use this command to check whether the guest has booted.</source>
          <target state="new">Use this command to check whether the guest has booted.</target>
        </trans-unit>
        <trans-unit id="b1d03977-cb9b-4b88-90f2-476fc3c09fd4" xml:space="preserve">
          <source><bpt id="cc99ed9d-2d75-41ea-9127-cf61ddf377d7">&lt;strong&gt;</bpt>Outcome<ept id="cc99ed9d-2d75-41ea-9127-cf61ddf377d7">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="cc99ed9d-2d75-41ea-9127-cf61ddf377d7">&lt;strong&gt;</bpt>Outcome<ept id="cc99ed9d-2d75-41ea-9127-cf61ddf377d7">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="182514b9-9ef9-4e1b-b682-3f9f3377701a" xml:space="preserve">
          <source>Prints a friendly message declaring the state of the guest OS.</source>
          <target state="new">Prints a friendly message declaring the state of the guest OS.</target>
        </trans-unit>
        <trans-unit id="360c62a4-bb86-444e-8868-faa3e918e0c1" xml:space="preserve">
          <source>Script locking until the guest has booted</source>
          <target state="new">Script locking until the guest has booted</target>
        </trans-unit>
        <trans-unit id="d40a9397-0258-4a57-b201-b47cca02659c" xml:space="preserve">
          <source>The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</source>
          <target state="new">The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</target>
        </trans-unit>
        <trans-unit id="c431523e-ac93-4e83-90a6-34f193464921" xml:space="preserve">
          <source><bpt id="a7847ec5-0363-4598-8b90-f8fbc16ae0ee">&lt;strong&gt;</bpt>Outcome<ept id="a7847ec5-0363-4598-8b90-f8fbc16ae0ee">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="a7847ec5-0363-4598-8b90-f8fbc16ae0ee">&lt;strong&gt;</bpt>Outcome<ept id="a7847ec5-0363-4598-8b90-f8fbc16ae0ee">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="d70909aa-914d-4f3e-90ce-bbb2f2453081" xml:space="preserve">
          <source>Prints a friendly message and locks until the connection to the VM succeeds.</source>
          <target state="new">Prints a friendly message and locks until the connection to the VM succeeds.</target>
        </trans-unit>
        <trans-unit id="d2e0fcb1-398e-461b-a8b5-3d1667a743ab" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="ab835981-6810-471e-b2fe-7b77717a1326" xml:space="preserve">
          <source>Script locking until the guest has a network</source>
          <target state="new">Script locking until the guest has a network</target>
        </trans-unit>
        <trans-unit id="2d8b8758-b2c9-4dad-aa19-1ee0a1392110" xml:space="preserve">
          <source>With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</source>
          <target state="new">With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</target>
        </trans-unit>
        <trans-unit id="e1f9f9bf-33cc-4b91-b237-47a8f8eb513c" xml:space="preserve">
          <source><bpt id="2ee6a70c-bb9a-423e-9fd0-dbaac940f244">&lt;em&gt;</bpt>* Outcome *<ept id="2ee6a70c-bb9a-423e-9fd0-dbaac940f244">&lt;/em&gt;</ept></source>
          <target state="new"><bpt id="2ee6a70c-bb9a-423e-9fd0-dbaac940f244">&lt;em&gt;</bpt>* Outcome *<ept id="2ee6a70c-bb9a-423e-9fd0-dbaac940f244">&lt;/em&gt;</ept></target>
        </trans-unit>
        <trans-unit id="4f6fcfeb-2557-427d-9878-649aed752fc4" xml:space="preserve">
          <source>Locks until a DHCP lease is recieved.</source>
          <target state="new">Locks until a DHCP lease is recieved.</target>
        </trans-unit>
        <trans-unit id="015e1732-62f2-49c6-bfec-23d7290d1bfa" xml:space="preserve">
          <source>Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</source>
          <target state="new">Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</target>
        </trans-unit>
        <trans-unit id="e605142a-23a2-4d80-810b-2d70d246713d" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="0f77aaf1-2aed-4c89-89f6-9d2f5e5be895" xml:space="preserve">
          <source>Managing credentials with PowerShell</source>
          <target state="new">Managing credentials with PowerShell</target>
        </trans-unit>
        <trans-unit id="1a69276d-9592-42e4-af19-f43486714cd0" xml:space="preserve">
          <source>Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</source>
          <target state="new">Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</target>
        </trans-unit>
        <trans-unit id="91d6e638-4c31-4e61-98f3-473267c51d9a" xml:space="preserve">
          <source>There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</source>
          <target state="new">There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</target>
        </trans-unit>
        <trans-unit id="a62b60d0-acfc-4eb1-8c70-e216c333fc52" xml:space="preserve">
          <source>The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</source>
          <target state="new">The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</target>
        </trans-unit>
        <trans-unit id="d15f9c39-0280-4fd8-a7ff-4d86349488ad" xml:space="preserve">
          <source>This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</source>
          <target state="new">This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</target>
        </trans-unit>
        <trans-unit id="f1b8fcb4-7c1f-4a37-aebf-485b6c18b865" xml:space="preserve">
          <source>In this scenario you can just run <bpt id="6757d2d4-258b-41c5-92f2-a2a61b3c4403">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="6757d2d4-258b-41c5-92f2-a2a61b3c4403">&lt;/code&gt;</ept>.</source>
          <target state="new">In this scenario you can just run <bpt id="6757d2d4-258b-41c5-92f2-a2a61b3c4403">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="6757d2d4-258b-41c5-92f2-a2a61b3c4403">&lt;/code&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="14da963e-c6b5-42d0-bf4e-9ac213e4627d" xml:space="preserve">
          <source>Let PowerShell prompt you for credentials</source>
          <target state="new">Let PowerShell prompt you for credentials</target>
        </trans-unit>
        <trans-unit id="3dbb0624-c46f-4247-a6a4-4c6f74dee8b8" xml:space="preserve">
          <source>If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</source>
          <target state="new">If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</target>
        </trans-unit>
        <trans-unit id="0851039d-756f-4c90-9d53-1e7f17bc0c2a" xml:space="preserve">
          <source>Store credentials in a variable for reuse.</source>
          <target state="new">Store credentials in a variable for reuse.</target>
        </trans-unit>
        <trans-unit id="f0be9d18-2658-4017-85b8-171b4ab26637" xml:space="preserve">
          <source>Running a simple command like this:</source>
          <target state="new">Running a simple command like this:</target>
        </trans-unit>
        <trans-unit id="6a64da1a-8679-49d9-85a7-87f518285bc0" xml:space="preserve">
          <source>And then running something like this:</source>
          <target state="new">And then running something like this:</target>
        </trans-unit>
        <trans-unit id="ca153c91-56a8-400a-a4be-7a62d11c3372" xml:space="preserve">
          <source>Will mean that you only get prompted once per script/PowerShell session for your credentials.</source>
          <target state="new">Will mean that you only get prompted once per script/PowerShell session for your credentials.</target>
        </trans-unit>
        <trans-unit id="d479fa00-4b36-4cf3-b561-29b6f5db5ad2" xml:space="preserve">
          <source>Code your credentials into your scripts.</source>
          <target state="new">Code your credentials into your scripts.</target>
        </trans-unit>
        <trans-unit id="fd5c73f5-55be-4667-83d8-b796cd69632d" xml:space="preserve">
          <source><bpt id="806566a4-9270-472d-a28d-d267400be07f">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="806566a4-9270-472d-a28d-d267400be07f">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="806566a4-9270-472d-a28d-d267400be07f">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="806566a4-9270-472d-a28d-d267400be07f">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="023f13dc-40b3-4eed-b88a-6bb5cdbe7554" xml:space="preserve">
          <source>Warning:  _Do not do this in a production system.</source>
          <target state="new">Warning:  _Do not do this in a production system.</target>
        </trans-unit>
        <trans-unit id="63c0bb57-4168-43f6-8bb3-05642e4839ab" xml:space="preserve">
          <source>Do not do this with real passwords._</source>
          <target state="new">Do not do this with real passwords._</target>
        </trans-unit>
        <trans-unit id="dbe96589-de8d-484c-bb6f-9369e26e7a66" xml:space="preserve">
          <source>You can hand craft a PSCredential object with some code like this:</source>
          <target state="new">You can hand craft a PSCredential object with some code like this:</target>
        </trans-unit>
        <trans-unit id="6c075ae2-ada7-4f1d-996f-b09ec1b29c67" xml:space="preserve">
          <source>Grossly insecure - but useful for testing.</source>
          <target state="new">Grossly insecure - but useful for testing.</target>
        </trans-unit>
        <trans-unit id="8e69f1fb-539a-4a68-b330-69ac716e11e2" xml:space="preserve">
          <source>Now you get no prompts at all in this session.</source>
          <target state="new">Now you get no prompts at all in this session.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>