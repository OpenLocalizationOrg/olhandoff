<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-US" target-language="fr-fr">
    <body>
      <group id="main" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Author Custom R Modules in Azure Machine Learning | Microsoft Azure</source>
          <target state="new">Author Custom R Modules in Azure Machine Learning | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Quick start for authoring custom R modules in Azure Machine Learning.</source>
          <target state="new">Quick start for authoring custom R modules in Azure Machine Learning.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Author custom R modules in Azure Machine Learning</source>
          <target state="new">Author custom R modules in Azure Machine Learning</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This topic describes how to author and deploy a custom R module in Azure Machine Learning.</source>
          <target state="new">This topic describes how to author and deploy a custom R module in Azure Machine Learning.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>It explains what custom R modules are and what files are used to define them.</source>
          <target state="new">It explains what custom R modules are and what files are used to define them.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>It illustrates how to construct the files that define a module and how to register the module for deployment in a Machine Learning workspace.</source>
          <target state="new">It illustrates how to construct the files that define a module and how to register the module for deployment in a Machine Learning workspace.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The elements and attributes used in the definition of the custom module are then described in more detail.</source>
          <target state="new">The elements and attributes used in the definition of the custom module are then described in more detail.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>How to use auxiliary functionality and files and multiple outputs is also discussed.</source>
          <target state="new">How to use auxiliary functionality and files and multiple outputs is also discussed.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>What is a custom R module?</source>
          <target state="new">What is a custom R module?</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">**</bpt>custom module<ept id="p1">**</ept><ph id="ph3" /> is a user-defined module that can be uploaded to your workspace and executed as part of an Azure Machine Learning experiment.</source>
          <target state="new">A <bpt id="p1">**</bpt>custom module<ept id="p1">**</ept><ph id="ph3" /> is a user-defined module that can be uploaded to your workspace and executed as part of an Azure Machine Learning experiment.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A <bpt id="p2">**</bpt>custom R module<ept id="p2">**</ept><ph id="ph4" /> is a custom module that executes a user-defined R function.</source>
          <target state="new">A <bpt id="p2">**</bpt>custom R module<ept id="p2">**</ept><ph id="ph4" /> is a custom module that executes a user-defined R function.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>R is a programming language for statistical computing and graphics that is widely used by statisticians and data scientists for implementing algorithms.</source>
          <target state="new">R is a programming language for statistical computing and graphics that is widely used by statisticians and data scientists for implementing algorithms.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Currently, R is the only language supported in custom modules, but support for additional languages will be added in future releases.</source>
          <target state="new">Currently, R is the only language supported in custom modules, but support for additional languages will be added in future releases.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Custom modules have <bpt id="p3">**</bpt>first-class status<ept id="p3">**</ept><ph id="ph5" /> in Azure Machine Learning in the sense that they can used just like any other module.</source>
          <target state="new">Custom modules have <bpt id="p3">**</bpt>first-class status<ept id="p3">**</ept><ph id="ph5" /> in Azure Machine Learning in the sense that they can used just like any other module.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>They can be executed with other modules, included in published experiments or visualizations.</source>
          <target state="new">They can be executed with other modules, included in published experiments or visualizations.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Users have control over the algorithm implemented by the module, the input and output ports to be used, the modeling parameters, and other various runtime behaviors.</source>
          <target state="new">Users have control over the algorithm implemented by the module, the input and output ports to be used, the modeling parameters, and other various runtime behaviors.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>A custom module is only available in the workspace in which it was created and cannot be published to community experiments.</source>
          <target state="new">A custom module is only available in the workspace in which it was created and cannot be published to community experiments.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Files in a custom R module</source>
          <target state="new">Files in a custom R module</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>A custom R module is defined by a .zip file that contains, at a minimum, two files:</source>
          <target state="new">A custom R module is defined by a .zip file that contains, at a minimum, two files:</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A <bpt id="p4">**</bpt>source file<ept id="p4">**</ept><ph id="ph6" /> that implements the R function exposed by the module</source>
          <target state="new">A <bpt id="p4">**</bpt>source file<ept id="p4">**</ept><ph id="ph6" /> that implements the R function exposed by the module</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>An <bpt id="p5">**</bpt>XML definition file<ept id="p5">**</ept><ph id="ph7" /> that describes the custom module interface</source>
          <target state="new">An <bpt id="p5">**</bpt>XML definition file<ept id="p5">**</ept><ph id="ph7" /> that describes the custom module interface</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Additional auxiliary files can also be included in the .zip file that provide functionality that can be accessed from the custom module.</source>
          <target state="new">Additional auxiliary files can also be included in the .zip file that provide functionality that can be accessed from the custom module.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This option is discussed below.</source>
          <target state="new">This option is discussed below.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Quick start example: define, package, and register a custom R module</source>
          <target state="new">Quick start example: define, package, and register a custom R module</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This example illustrates how to construct the files required by a custom R module, package them into a zip file, and then register the module in your Machine Learning workspace.</source>
          <target state="new">This example illustrates how to construct the files required by a custom R module, package them into a zip file, and then register the module in your Machine Learning workspace.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The example zip package and sample files can be downloaded from <bpt id="p6">[</bpt>Download CustomAddRows.zip file<ept id="p6">](http://go.microsoft.com/fwlink/?LinkID=524916&amp;clcid=0x409)</ept>.</source>
          <target state="new">The example zip package and sample files can be downloaded from <bpt id="p6">[</bpt>Download CustomAddRows.zip file<ept id="p6">](http://go.microsoft.com/fwlink/?LinkID=524916&amp;clcid=0x409)</ept>.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Consider the example of a <bpt id="p7">**</bpt>Custom Add Rows<ept id="p7">**</ept><ph id="ph8" /> module that modifies the standard implementation of the Add Rows module used to concatenate rows (observations) from two datasets (data frames).</source>
          <target state="new">Consider the example of a <bpt id="p7">**</bpt>Custom Add Rows<ept id="p7">**</ept><ph id="ph8" /> module that modifies the standard implementation of the Add Rows module used to concatenate rows (observations) from two datasets (data frames).</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The standard Add Rows module appends the rows of the second input dataset to the end of the first input dataset using the rbind algorithm.</source>
          <target state="new">The standard Add Rows module appends the rows of the second input dataset to the end of the first input dataset using the rbind algorithm.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The customized <ph id="ph9">`CustomAddRows`</ph><ph id="ph10" /> function similarly accepts two datasets, but also accepts an additional Boolean swap parameter as an input.</source>
          <target state="new">The customized <ph id="ph9">`CustomAddRows`</ph><ph id="ph10" /> function similarly accepts two datasets, but also accepts an additional Boolean swap parameter as an input.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If the swap parameter is <bpt id="p8">**</bpt>FALSE<ept id="p8">**</ept>, it returns the same data set as the standard implementation.</source>
          <target state="new">If the swap parameter is <bpt id="p8">**</bpt>FALSE<ept id="p8">**</ept>, it returns the same data set as the standard implementation.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>But if the swap parameter is <bpt id="p9">**</bpt>TRUE<ept id="p9">**</ept>, it appends rows of first input dataset to the end of the second dataset instead.</source>
          <target state="new">But if the swap parameter is <bpt id="p9">**</bpt>TRUE<ept id="p9">**</ept>, it appends rows of first input dataset to the end of the second dataset instead.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The file that implements the R <ph id="ph11">`CustomAddRows`</ph><ph id="ph12" /> function exposed by the <bpt id="p10">**</bpt>Custom Add Rows<ept id="p10">**</ept><ph id="ph13" /> module contains the following R code.</source>
          <target state="new">The file that implements the R <ph id="ph11">`CustomAddRows`</ph><ph id="ph12" /> function exposed by the <bpt id="p10">**</bpt>Custom Add Rows<ept id="p10">**</ept><ph id="ph13" /> module contains the following R code.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>To expose this <ph id="ph14">`CustomAddRows`</ph><ph id="ph15" /> function as an Azure Machine Learning module, an XML definition file must be created to specify how the <bpt id="p11">**</bpt>Custom Add Rows<ept id="p11">**</ept><ph id="ph16" /> module should look and behave.</source>
          <target state="new">To expose this <ph id="ph14">`CustomAddRows`</ph><ph id="ph15" /> function as an Azure Machine Learning module, an XML definition file must be created to specify how the <bpt id="p11">**</bpt>Custom Add Rows<ept id="p11">**</ept><ph id="ph16" /> module should look and behave.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Note that the value of the <bpt id="p12">**</bpt>id<ept id="p12">**</ept><ph id="ph17" /> attributes of the <bpt id="p13">**</bpt>Input<ept id="p13">**</ept><ph id="ph18" /> and <bpt id="p14">**</bpt>Arg<ept id="p14">**</ept><ph id="ph19" /> elements in the XML file must match the function parameter names of the R code exactly (<bpt id="p15">*</bpt>dataset1<ept id="p15">*</ept>, <bpt id="p16">*</bpt>dataset2<ept id="p16">*</ept>, and <bpt id="p17">*</bpt>swap<ept id="p17">*</ept><ph id="ph20" /> in the example).</source>
          <target state="new">Note that the value of the <bpt id="p12">**</bpt>id<ept id="p12">**</ept><ph id="ph17" /> attributes of the <bpt id="p13">**</bpt>Input<ept id="p13">**</ept><ph id="ph18" /> and <bpt id="p14">**</bpt>Arg<ept id="p14">**</ept><ph id="ph19" /> elements in the XML file must match the function parameter names of the R code exactly (<bpt id="p15">*</bpt>dataset1<ept id="p15">*</ept>, <bpt id="p16">*</bpt>dataset2<ept id="p16">*</ept>, and <bpt id="p17">*</bpt>swap<ept id="p17">*</ept><ph id="ph20" /> in the example).</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Similarly, the value of the <bpt id="p18">**</bpt>entryPoint<ept id="p18">**</ept><ph id="ph21" /> attribute of the <bpt id="p19">**</bpt>Language<ept id="p19">**</ept><ph id="ph22" /> element must match the name of the function in the R script exactly (<bpt id="p20">*</bpt>CustomAddRows<ept id="p20">*</ept><ph id="ph23" /> in the example).</source>
          <target state="new">Similarly, the value of the <bpt id="p18">**</bpt>entryPoint<ept id="p18">**</ept><ph id="ph21" /> attribute of the <bpt id="p19">**</bpt>Language<ept id="p19">**</ept><ph id="ph22" /> element must match the name of the function in the R script exactly (<bpt id="p20">*</bpt>CustomAddRows<ept id="p20">*</ept><ph id="ph23" /> in the example).</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>In contrast, the <bpt id="p21">**</bpt>id<ept id="p21">**</ept><ph id="ph24" /> attribute for the <bpt id="p22">**</bpt>Output<ept id="p22">**</ept><ph id="ph25" /> elements do not correspond to any variables in the R script.</source>
          <target state="new">In contrast, the <bpt id="p21">**</bpt>id<ept id="p21">**</ept><ph id="ph24" /> attribute for the <bpt id="p22">**</bpt>Output<ept id="p22">**</ept><ph id="ph25" /> elements do not correspond to any variables in the R script.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>When more than one output is required, simply return a list from the R function with results placed in the same order as outputs are declared in the XML file.</source>
          <target state="new">When more than one output is required, simply return a list from the R function with results placed in the same order as outputs are declared in the XML file.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Save these two files as <bpt id="p23">*</bpt>CustomAddRows.R<ept id="p23">*</ept><ph id="ph26" /> and <bpt id="p24">*</bpt>CustomAddRows.xml<ept id="p24">*</ept><ph id="ph27" /> and then zip them together into a <bpt id="p25">*</bpt>CustomAddRows.zip<ept id="p25">*</ept><ph id="ph28" /> file.</source>
          <target state="new">Save these two files as <bpt id="p23">*</bpt>CustomAddRows.R<ept id="p23">*</ept><ph id="ph26" /> and <bpt id="p24">*</bpt>CustomAddRows.xml<ept id="p24">*</ept><ph id="ph27" /> and then zip them together into a <bpt id="p25">*</bpt>CustomAddRows.zip<ept id="p25">*</ept><ph id="ph28" /> file.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>To register them in your Machine Learning workspace, go to your  workspace in the Machine Learning Studio, click the <bpt id="p26">**</bpt>+NEW<ept id="p26">**</ept><ph id="ph29" /> button on the bottom and choose <bpt id="p27">**</bpt>MODULE -&gt; FROM ZIP PACKAGE<ept id="p27">**</ept><ph id="ph30" /> to upload the new Custom Add Rows module.</source>
          <target state="new">To register them in your Machine Learning workspace, go to your  workspace in the Machine Learning Studio, click the <bpt id="p26">**</bpt>+NEW<ept id="p26">**</ept><ph id="ph29" /> button on the bottom and choose <bpt id="p27">**</bpt>MODULE -&gt; FROM ZIP PACKAGE<ept id="p27">**</ept><ph id="ph30" /> to upload the new Custom Add Rows module.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><ph id="ph31">![</ph>Upload Zip<ph id="ph32">](./media/machine-learning-custom-r-modules/upload-from-zip-package.png)</ph></source>
          <target state="new"><ph id="ph31">![</ph>Upload Zip<ph id="ph32">](./media/machine-learning-custom-r-modules/upload-from-zip-package.png)</ph></target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The <bpt id="p28">**</bpt>Custom Add Rows<ept id="p28">**</ept><ph id="ph33" /> module is now ready to be accessed by your Machine Learning experiments.</source>
          <target state="new">The <bpt id="p28">**</bpt>Custom Add Rows<ept id="p28">**</ept><ph id="ph33" /> module is now ready to be accessed by your Machine Learning experiments.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Elements in the XML definition file</source>
          <target state="new">Elements in the XML definition file</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Module elements</source>
          <target state="new">Module elements</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The <bpt id="p29">**</bpt>Module<ept id="p29">**</ept><ph id="ph34" /> element is used to define a custom module in the XML file.</source>
          <target state="new">The <bpt id="p29">**</bpt>Module<ept id="p29">**</ept><ph id="ph34" /> element is used to define a custom module in the XML file.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Multiple modules can be defined in one XML file using multiple <bpt id="p30">**</bpt>module<ept id="p30">**</ept><ph id="ph35" /> elements.</source>
          <target state="new">Multiple modules can be defined in one XML file using multiple <bpt id="p30">**</bpt>module<ept id="p30">**</ept><ph id="ph35" /> elements.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Each module in your workspace must have a unique name.</source>
          <target state="new">Each module in your workspace must have a unique name.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Register a custom module with the same name as an existing custom module and it will replace the existing module with the new one.</source>
          <target state="new">Register a custom module with the same name as an existing custom module and it will replace the existing module with the new one.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Custom modules can, however, be registered with the same name as an existing Azure Machine Learning module and it will appear in the Custom category of the module palette.</source>
          <target state="new">Custom modules can, however, be registered with the same name as an existing Azure Machine Learning module and it will appear in the Custom category of the module palette.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Within the <bpt id="p31">**</bpt>Module<ept id="p31">**</ept><ph id="ph36" /> element, you can specify an optional <bpt id="p32">**</bpt>Owner<ept id="p32">**</ept><ph id="ph37" /> element that is embedded into the module as well as a <bpt id="p33">**</bpt>Description<ept id="p33">**</ept><ph id="ph38" /> element which is text displayed in quick help for the module and when you hover over the module in the Machine Learning UI.</source>
          <target state="new">Within the <bpt id="p31">**</bpt>Module<ept id="p31">**</ept><ph id="ph36" /> element, you can specify an optional <bpt id="p32">**</bpt>Owner<ept id="p32">**</ept><ph id="ph37" /> element that is embedded into the module as well as a <bpt id="p33">**</bpt>Description<ept id="p33">**</ept><ph id="ph38" /> element which is text displayed in quick help for the module and when you hover over the module in the Machine Learning UI.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p34">**</bpt>Rules for characters limits in the Module elements<ept id="p34">**</ept>:</source>
          <target state="new"><bpt id="p34">**</bpt>Rules for characters limits in the Module elements<ept id="p34">**</ept>:</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p35">**</bpt>name<ept id="p35">**</ept><ph id="ph39" /> attribute in the <bpt id="p36">**</bpt>Module<ept id="p36">**</ept><ph id="ph40" /> element must not exceed 64 characters in length.</source>
          <target state="new">The value of the <bpt id="p35">**</bpt>name<ept id="p35">**</ept><ph id="ph39" /> attribute in the <bpt id="p36">**</bpt>Module<ept id="p36">**</ept><ph id="ph40" /> element must not exceed 64 characters in length.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The content of the <bpt id="p37">**</bpt>Description<ept id="p37">**</ept><ph id="ph41" /> element must not exceed 128 characters in length.</source>
          <target state="new">The content of the <bpt id="p37">**</bpt>Description<ept id="p37">**</ept><ph id="ph41" /> element must not exceed 128 characters in length.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The content of the <bpt id="p38">**</bpt>Owner<ept id="p38">**</ept><ph id="ph42" /> element must not exceed 32 characters in length.</source>
          <target state="new">The content of the <bpt id="p38">**</bpt>Owner<ept id="p38">**</ept><ph id="ph42" /> element must not exceed 32 characters in length.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p39">**</bpt>Indicating whether a module's results are deterministic or nondeterministic<ept id="p39">**</ept></source>
          <target state="new"><bpt id="p39">**</bpt>Indicating whether a module's results are deterministic or nondeterministic<ept id="p39">**</ept></target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>By default, all modules are considered to be deterministic.</source>
          <target state="new">By default, all modules are considered to be deterministic.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>That is, given an  unchanging set of parameters, the module should return the same results each time it is run.</source>
          <target state="new">That is, given an  unchanging set of parameters, the module should return the same results each time it is run.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Given this behavior, Azure Machine Learning Studio does not re-run modules marked as deterministic unless a parameter or the input data has changed.</source>
          <target state="new">Given this behavior, Azure Machine Learning Studio does not re-run modules marked as deterministic unless a parameter or the input data has changed.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Cached results are returned resulting in faster experiment execution.</source>
          <target state="new">Cached results are returned resulting in faster experiment execution.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>However, if your module uses a function that returns different results each time it is run – for example, RAND or a function that returns the current date or time – you can specify the module as being non-deterministic by setting the optional <bpt id="p40">**</bpt>isDeterministic<ept id="p40">**</ept><ph id="ph43" /> attribute to <bpt id="p41">**</bpt>false<ept id="p41">**</ept>.</source>
          <target state="new">However, if your module uses a function that returns different results each time it is run – for example, RAND or a function that returns the current date or time – you can specify the module as being non-deterministic by setting the optional <bpt id="p40">**</bpt>isDeterministic<ept id="p40">**</ept><ph id="ph43" /> attribute to <bpt id="p41">**</bpt>false<ept id="p41">**</ept>.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The module will be rerun each time the experiment is run, even if the module input and parameters have not changed.</source>
          <target state="new">The module will be rerun each time the experiment is run, even if the module input and parameters have not changed.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Language Definition</source>
          <target state="new">Language Definition</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The <bpt id="p42">**</bpt>Language<ept id="p42">**</ept><ph id="ph44" /> element in your XML definition file is used to specify the custom module language.</source>
          <target state="new">The <bpt id="p42">**</bpt>Language<ept id="p42">**</ept><ph id="ph44" /> element in your XML definition file is used to specify the custom module language.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Currently, R is the only supported language.</source>
          <target state="new">Currently, R is the only supported language.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p43">**</bpt>sourceFile<ept id="p43">**</ept><ph id="ph45" /> attribute must be the name of the R file that contains the function to call when the module is run.</source>
          <target state="new">The value of the <bpt id="p43">**</bpt>sourceFile<ept id="p43">**</ept><ph id="ph45" /> attribute must be the name of the R file that contains the function to call when the module is run.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>This file must be part of the zip package.</source>
          <target state="new">This file must be part of the zip package.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p44">**</bpt>entryPoint<ept id="p44">**</ept><ph id="ph46" /> attribute is the name of the function being called and must match a valid function defined with in the source file.</source>
          <target state="new">The value of the <bpt id="p44">**</bpt>entryPoint<ept id="p44">**</ept><ph id="ph46" /> attribute is the name of the function being called and must match a valid function defined with in the source file.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Ports</source>
          <target state="new">Ports</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The input and output ports for a custom module are specified in child elements of the <bpt id="p45">**</bpt>Ports<ept id="p45">**</ept><ph id="ph47" /> section of the XML definition file.</source>
          <target state="new">The input and output ports for a custom module are specified in child elements of the <bpt id="p45">**</bpt>Ports<ept id="p45">**</ept><ph id="ph47" /> section of the XML definition file.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The order of these elements determines the layout experienced (UX) by users.</source>
          <target state="new">The order of these elements determines the layout experienced (UX) by users.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The first child <bpt id="p46">**</bpt>input<ept id="p46">**</ept><ph id="ph48" /> or <bpt id="p47">**</bpt>output<ept id="p47">**</ept><ph id="ph49" /> listed in the <bpt id="p48">**</bpt>Ports<ept id="p48">**</ept><ph id="ph50" /> element  of the XML file will be the left-most input port in the Machine Learning UX.</source>
          <target state="new">The first child <bpt id="p46">**</bpt>input<ept id="p46">**</ept><ph id="ph48" /> or <bpt id="p47">**</bpt>output<ept id="p47">**</ept><ph id="ph49" /> listed in the <bpt id="p48">**</bpt>Ports<ept id="p48">**</ept><ph id="ph50" /> element  of the XML file will be the left-most input port in the Machine Learning UX.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Each input and output port may have an optional <bpt id="p49">**</bpt>Description<ept id="p49">**</ept><ph id="ph51" /> child element that specifies the text shown when a user hovers the mouse cursor over the port in the Machine Learning UI.</source>
          <target state="new">Each input and output port may have an optional <bpt id="p49">**</bpt>Description<ept id="p49">**</ept><ph id="ph51" /> child element that specifies the text shown when a user hovers the mouse cursor over the port in the Machine Learning UI.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><bpt id="p50">**</bpt>Ports Rules<ept id="p50">**</ept>:</source>
          <target state="new"><bpt id="p50">**</bpt>Ports Rules<ept id="p50">**</ept>:</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Maximum number of <bpt id="p51">**</bpt>input and output ports<ept id="p51">**</ept><ph id="ph52" /> is 8 for each.</source>
          <target state="new">Maximum number of <bpt id="p51">**</bpt>input and output ports<ept id="p51">**</ept><ph id="ph52" /> is 8 for each.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Input elements</source>
          <target state="new">Input elements</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Input ports allow users to pass data to your R function and workspace.</source>
          <target state="new">Input ports allow users to pass data to your R function and workspace.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The <bpt id="p52">**</bpt>data types<ept id="p52">**</ept><ph id="ph53" /> that are supported for input ports are as follows:</source>
          <target state="new">The <bpt id="p52">**</bpt>data types<ept id="p52">**</ept><ph id="ph53" /> that are supported for input ports are as follows:</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><bpt id="p53">**</bpt>DataTable:<ept id="p53">**</ept><ph id="ph54" /> This type is passed to your R function as a data.frame.</source>
          <target state="new"><bpt id="p53">**</bpt>DataTable:<ept id="p53">**</ept><ph id="ph54" /> This type is passed to your R function as a data.frame.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>In fact, any types (for example, CSV files or ARFF files) that are supported  by Machine Learning and that are compatible with <bpt id="p54">**</bpt>DataTable<ept id="p54">**</ept><ph id="ph55" /> are converted to a data.frame automatically.</source>
          <target state="new">In fact, any types (for example, CSV files or ARFF files) that are supported  by Machine Learning and that are compatible with <bpt id="p54">**</bpt>DataTable<ept id="p54">**</ept><ph id="ph55" /> are converted to a data.frame automatically.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The <bpt id="p55">**</bpt>id<ept id="p55">**</ept><ph id="ph56" /> attribute associated with each <bpt id="p56">**</bpt>DataTable<ept id="p56">**</ept><ph id="ph57" /> input port must have a unique value and this value must match its corresponding named parameter in your R function.</source>
          <target state="new">The <bpt id="p55">**</bpt>id<ept id="p55">**</ept><ph id="ph56" /> attribute associated with each <bpt id="p56">**</bpt>DataTable<ept id="p56">**</ept><ph id="ph57" /> input port must have a unique value and this value must match its corresponding named parameter in your R function.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Optional <bpt id="p57">**</bpt>DataTable<ept id="p57">**</ept><ph id="ph58" /> ports that are not passed as input in an experiment will have the value <bpt id="p58">**</bpt>NULL<ept id="p58">**</ept><ph id="ph59" /> passed to the R function and optional zip ports will be ignored if the input is not connected.</source>
          <target state="new">Optional <bpt id="p57">**</bpt>DataTable<ept id="p57">**</ept><ph id="ph58" /> ports that are not passed as input in an experiment will have the value <bpt id="p58">**</bpt>NULL<ept id="p58">**</ept><ph id="ph59" /> passed to the R function and optional zip ports will be ignored if the input is not connected.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The <bpt id="p59">**</bpt>isOptional<ept id="p59">**</ept><ph id="ph60" /> attribute is optional for both the <bpt id="p60">**</bpt>DataTable<ept id="p60">**</ept><ph id="ph61" /> and <bpt id="p61">**</bpt>Zip<ept id="p61">**</ept><ph id="ph62" /> types and is <bpt id="p62">*</bpt>false<ept id="p62">*</ept><ph id="ph63" /> by default.</source>
          <target state="new">The <bpt id="p59">**</bpt>isOptional<ept id="p59">**</ept><ph id="ph60" /> attribute is optional for both the <bpt id="p60">**</bpt>DataTable<ept id="p60">**</ept><ph id="ph61" /> and <bpt id="p61">**</bpt>Zip<ept id="p61">**</ept><ph id="ph62" /> types and is <bpt id="p62">*</bpt>false<ept id="p62">*</ept><ph id="ph63" /> by default.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><bpt id="p63">**</bpt>Zip:<ept id="p63">**</ept><ph id="ph64" /> Custom modules can accept a zip file as input.</source>
          <target state="new"><bpt id="p63">**</bpt>Zip:<ept id="p63">**</ept><ph id="ph64" /> Custom modules can accept a zip file as input.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>This input is unpacked into the R working directory of your function</source>
          <target state="new">This input is unpacked into the R working directory of your function</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>For custom R modules, the id for a Zip port does not have to match any parameters of the R function since the zip file is automatically extracted to the R working directory.</source>
          <target state="new">For custom R modules, the id for a Zip port does not have to match any parameters of the R function since the zip file is automatically extracted to the R working directory.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><bpt id="p64">**</bpt>Input Rules:<ept id="p64">**</ept></source>
          <target state="new"><bpt id="p64">**</bpt>Input Rules:<ept id="p64">**</ept></target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p65">**</bpt>id<ept id="p65">**</ept><ph id="ph65" /> attribute of the <bpt id="p66">**</bpt>Input<ept id="p66">**</ept><ph id="ph66" /> element must be a valid R variable name.</source>
          <target state="new">The value of the <bpt id="p65">**</bpt>id<ept id="p65">**</ept><ph id="ph65" /> attribute of the <bpt id="p66">**</bpt>Input<ept id="p66">**</ept><ph id="ph66" /> element must be a valid R variable name.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p67">**</bpt>id<ept id="p67">**</ept><ph id="ph67" /> attribute of the <bpt id="p68">**</bpt>Input<ept id="p68">**</ept><ph id="ph68" /> element must not be longer than 64 characters.</source>
          <target state="new">The value of the <bpt id="p67">**</bpt>id<ept id="p67">**</ept><ph id="ph67" /> attribute of the <bpt id="p68">**</bpt>Input<ept id="p68">**</ept><ph id="ph68" /> element must not be longer than 64 characters.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p69">**</bpt>name<ept id="p69">**</ept><ph id="ph69" /> attribute of the <bpt id="p70">**</bpt>Input<ept id="p70">**</ept><ph id="ph70" /> element  must not be longer than 64 characters.</source>
          <target state="new">The value of the <bpt id="p69">**</bpt>name<ept id="p69">**</ept><ph id="ph69" /> attribute of the <bpt id="p70">**</bpt>Input<ept id="p70">**</ept><ph id="ph70" /> element  must not be longer than 64 characters.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The content of the <bpt id="p71">**</bpt>Description<ept id="p71">**</ept><ph id="ph71" /> element must not be longer than 128 characters</source>
          <target state="new">The content of the <bpt id="p71">**</bpt>Description<ept id="p71">**</ept><ph id="ph71" /> element must not be longer than 128 characters</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p72">**</bpt>type<ept id="p72">**</ept><ph id="ph72" /> attribute of the <bpt id="p73">**</bpt>Input<ept id="p73">**</ept><ph id="ph73" /> element must be <bpt id="p74">*</bpt>Zip<ept id="p74">*</ept><ph id="ph74" /> or <bpt id="p75">*</bpt>DataTable<ept id="p75">*</ept>.</source>
          <target state="new">The value of the <bpt id="p72">**</bpt>type<ept id="p72">**</ept><ph id="ph72" /> attribute of the <bpt id="p73">**</bpt>Input<ept id="p73">**</ept><ph id="ph73" /> element must be <bpt id="p74">*</bpt>Zip<ept id="p74">*</ept><ph id="ph74" /> or <bpt id="p75">*</bpt>DataTable<ept id="p75">*</ept>.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p76">**</bpt>isOptional<ept id="p76">**</ept><ph id="ph75" /> attribute of the <bpt id="p77">**</bpt>Input<ept id="p77">**</ept><ph id="ph76" /> element is not required (and is <bpt id="p78">*</bpt>false<ept id="p78">*</ept><ph id="ph77" /> by default when not specified); but if it is specified, it must be <bpt id="p79">*</bpt>true<ept id="p79">*</ept><ph id="ph78" /> or <bpt id="p80">*</bpt>false<ept id="p80">*</ept>.</source>
          <target state="new">The value of the <bpt id="p76">**</bpt>isOptional<ept id="p76">**</ept><ph id="ph75" /> attribute of the <bpt id="p77">**</bpt>Input<ept id="p77">**</ept><ph id="ph76" /> element is not required (and is <bpt id="p78">*</bpt>false<ept id="p78">*</ept><ph id="ph77" /> by default when not specified); but if it is specified, it must be <bpt id="p79">*</bpt>true<ept id="p79">*</ept><ph id="ph78" /> or <bpt id="p80">*</bpt>false<ept id="p80">*</ept>.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Output elements</source>
          <target state="new">Output elements</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source><bpt id="p81">**</bpt>Standard output ports:<ept id="p81">**</ept>
Output ports are mapped to the return values from your R function, which can then be used by subsequent modules.</source>
          <target state="new"><bpt id="p81">**</bpt>Standard output ports:<ept id="p81">**</ept>
Output ports are mapped to the return values from your R function, which can then be used by subsequent modules.</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><bpt id="p82">*</bpt>DataTable<ept id="p82">*</ept><ph id="ph79" /> is the only standard output port type supported currently.</source>
          <target state="new"><bpt id="p82">*</bpt>DataTable<ept id="p82">*</ept><ph id="ph79" /> is the only standard output port type supported currently.</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>(Support for <bpt id="p83">*</bpt>Learners<ept id="p83">*</ept><ph id="ph80" /> and <bpt id="p84">*</bpt>Transforms<ept id="p84">*</ept><ph id="ph81" /> is forthcoming.) A <bpt id="p85">*</bpt>DataTable<ept id="p85">*</ept><ph id="ph82" /> output is defined as:</source>
          <target state="new">(Support for <bpt id="p83">*</bpt>Learners<ept id="p83">*</ept><ph id="ph80" /> and <bpt id="p84">*</bpt>Transforms<ept id="p84">*</ept><ph id="ph81" /> is forthcoming.) A <bpt id="p85">*</bpt>DataTable<ept id="p85">*</ept><ph id="ph82" /> output is defined as:</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>For outputs in custom R modules, the value of the <bpt id="p86">**</bpt>id<ept id="p86">**</ept><ph id="ph83" /> attribute does not have to correspond with anything in the R script, but it must be unique.</source>
          <target state="new">For outputs in custom R modules, the value of the <bpt id="p86">**</bpt>id<ept id="p86">**</ept><ph id="ph83" /> attribute does not have to correspond with anything in the R script, but it must be unique.</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>For a single module output, the return value from the R function must be a <bpt id="p87">*</bpt>data.frame<ept id="p87">*</ept>.</source>
          <target state="new">For a single module output, the return value from the R function must be a <bpt id="p87">*</bpt>data.frame<ept id="p87">*</ept>.</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>In order to output more than one object of a supported data type, the appropriate output ports need to be specified in the XML definition file and the objects need to be returned as a list.</source>
          <target state="new">In order to output more than one object of a supported data type, the appropriate output ports need to be specified in the XML definition file and the objects need to be returned as a list.</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The output objects will be assigned to output ports from left to right, reflecting the order in which the objects are placed in the returned list.</source>
          <target state="new">The output objects will be assigned to output ports from left to right, reflecting the order in which the objects are placed in the returned list.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>For example, if you want to modify the <bpt id="p88">**</bpt>Custom Add Rows<ept id="p88">**</ept><ph id="ph84" /> module to output the original two datasets, <bpt id="p89">*</bpt>dataset1<ept id="p89">*</ept>, and <bpt id="p90">*</bpt>dataset2<ept id="p90">*</ept>, in addition to the new joined dataset <bpt id="p91">*</bpt>dataset<ept id="p91">*</ept><ph id="ph85" /> (in an order, from left to right, as: <bpt id="p92">*</bpt>dataset<ept id="p92">*</ept>, <bpt id="p93">*</bpt>dataset1<ept id="p93">*</ept>, <bpt id="p94">*</bpt>dataset2<ept id="p94">*</ept>), then define the output ports in the CustomAddRows.xml file as follows:</source>
          <target state="new">For example, if you want to modify the <bpt id="p88">**</bpt>Custom Add Rows<ept id="p88">**</ept><ph id="ph84" /> module to output the original two datasets, <bpt id="p89">*</bpt>dataset1<ept id="p89">*</ept>, and <bpt id="p90">*</bpt>dataset2<ept id="p90">*</ept>, in addition to the new joined dataset <bpt id="p91">*</bpt>dataset<ept id="p91">*</ept><ph id="ph85" /> (in an order, from left to right, as: <bpt id="p92">*</bpt>dataset<ept id="p92">*</ept>, <bpt id="p93">*</bpt>dataset1<ept id="p93">*</ept>, <bpt id="p94">*</bpt>dataset2<ept id="p94">*</ept>), then define the output ports in the CustomAddRows.xml file as follows:</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>And return the list of objects in a list in the correct order in ‘CustomAddRows.R’:</source>
          <target state="new">And return the list of objects in a list in the correct order in ‘CustomAddRows.R’:</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source><bpt id="p95">**</bpt>Visualization output:<ept id="p95">**</ept>
You can also specify an output port of type <bpt id="p96">*</bpt>Visualization<ept id="p96">*</ept><ph id="ph86" /> which displays the output from the R graphics device and console output.</source>
          <target state="new"><bpt id="p95">**</bpt>Visualization output:<ept id="p95">**</ept>
You can also specify an output port of type <bpt id="p96">*</bpt>Visualization<ept id="p96">*</ept><ph id="ph86" /> which displays the output from the R graphics device and console output.</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>This port is not part of the R function output and does not interfere with the order of the the other output port types.</source>
          <target state="new">This port is not part of the R function output and does not interfere with the order of the the other output port types.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>To add a visualization port to the custom modules, add an <bpt id="p97">**</bpt>Output<ept id="p97">**</ept><ph id="ph87" /> element with a value of <bpt id="p98">*</bpt>Visualization<ept id="p98">*</ept><ph id="ph88" /> for its <bpt id="p99">**</bpt>type<ept id="p99">**</ept><ph id="ph89" /> attribute:</source>
          <target state="new">To add a visualization port to the custom modules, add an <bpt id="p97">**</bpt>Output<ept id="p97">**</ept><ph id="ph87" /> element with a value of <bpt id="p98">*</bpt>Visualization<ept id="p98">*</ept><ph id="ph88" /> for its <bpt id="p99">**</bpt>type<ept id="p99">**</ept><ph id="ph89" /> attribute:</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source><bpt id="p100">**</bpt>Output Rules:<ept id="p100">**</ept></source>
          <target state="new"><bpt id="p100">**</bpt>Output Rules:<ept id="p100">**</ept></target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p101">**</bpt>id<ept id="p101">**</ept><ph id="ph90" /> attribute of the <bpt id="p102">**</bpt>Output<ept id="p102">**</ept><ph id="ph91" /> element must be a valid R variable name.</source>
          <target state="new">The value of the <bpt id="p101">**</bpt>id<ept id="p101">**</ept><ph id="ph90" /> attribute of the <bpt id="p102">**</bpt>Output<ept id="p102">**</ept><ph id="ph91" /> element must be a valid R variable name.</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p103">**</bpt>id<ept id="p103">**</ept><ph id="ph92" /> attribute of the <bpt id="p104">**</bpt>Output<ept id="p104">**</ept><ph id="ph93" /> element must not be longer than 32 characters.</source>
          <target state="new">The value of the <bpt id="p103">**</bpt>id<ept id="p103">**</ept><ph id="ph92" /> attribute of the <bpt id="p104">**</bpt>Output<ept id="p104">**</ept><ph id="ph93" /> element must not be longer than 32 characters.</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p105">**</bpt>name<ept id="p105">**</ept><ph id="ph94" /> attribute of the <bpt id="p106">**</bpt>Output<ept id="p106">**</ept><ph id="ph95" /> element  must not be longer than 64 characters.</source>
          <target state="new">The value of the <bpt id="p105">**</bpt>name<ept id="p105">**</ept><ph id="ph94" /> attribute of the <bpt id="p106">**</bpt>Output<ept id="p106">**</ept><ph id="ph95" /> element  must not be longer than 64 characters.</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p107">**</bpt>type<ept id="p107">**</ept><ph id="ph96" /> attribute of the <bpt id="p108">**</bpt>Output<ept id="p108">**</ept><ph id="ph97" /> element must be <bpt id="p109">*</bpt>Visualization<ept id="p109">*</ept>.</source>
          <target state="new">The value of the <bpt id="p107">**</bpt>type<ept id="p107">**</ept><ph id="ph96" /> attribute of the <bpt id="p108">**</bpt>Output<ept id="p108">**</ept><ph id="ph97" /> element must be <bpt id="p109">*</bpt>Visualization<ept id="p109">*</ept>.</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Arguments</source>
          <target state="new">Arguments</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Additional data can be passed to the R function via module parameters which are defined in the <bpt id="p110">**</bpt>Arguments<ept id="p110">**</ept><ph id="ph98" /> element.</source>
          <target state="new">Additional data can be passed to the R function via module parameters which are defined in the <bpt id="p110">**</bpt>Arguments<ept id="p110">**</ept><ph id="ph98" /> element.</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>These parameters appear in the right most properties pane of the Machine Learning UI when the module is selected.</source>
          <target state="new">These parameters appear in the right most properties pane of the Machine Learning UI when the module is selected.</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Arguments can be any of the supported types or you can create a custom enumeration when needed.</source>
          <target state="new">Arguments can be any of the supported types or you can create a custom enumeration when needed.</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Similar to the <bpt id="p111">**</bpt>Ports<ept id="p111">**</ept><ph id="ph99" /> elements, <bpt id="p112">**</bpt>Arguments<ept id="p112">**</ept><ph id="ph100" /> elements can have an optional <bpt id="p113">**</bpt>Description<ept id="p113">**</ept><ph id="ph101" /> element that specifies the text that appears when you hover the mouse over the parameter name.</source>
          <target state="new">Similar to the <bpt id="p111">**</bpt>Ports<ept id="p111">**</ept><ph id="ph99" /> elements, <bpt id="p112">**</bpt>Arguments<ept id="p112">**</ept><ph id="ph100" /> elements can have an optional <bpt id="p113">**</bpt>Description<ept id="p113">**</ept><ph id="ph101" /> element that specifies the text that appears when you hover the mouse over the parameter name.</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Optional properties for a module, such as defaultValue, minValue and maxValue can be added to any argument as attributes to a <bpt id="p114">**</bpt>Properties<ept id="p114">**</ept><ph id="ph102" /> element.</source>
          <target state="new">Optional properties for a module, such as defaultValue, minValue and maxValue can be added to any argument as attributes to a <bpt id="p114">**</bpt>Properties<ept id="p114">**</ept><ph id="ph102" /> element.</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Valid properties for the <bpt id="p115">**</bpt>Properties<ept id="p115">**</ept><ph id="ph103" /> element depend on the argument type and are describe with the supported argument types below.</source>
          <target state="new">Valid properties for the <bpt id="p115">**</bpt>Properties<ept id="p115">**</ept><ph id="ph103" /> element depend on the argument type and are describe with the supported argument types below.</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>As with inputs and outputs, it is critical that each of the parameters have unique id values associated with them.</source>
          <target state="new">As with inputs and outputs, it is critical that each of the parameters have unique id values associated with them.</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>In addition, the id values must correspond to the named parameters in your R function.</source>
          <target state="new">In addition, the id values must correspond to the named parameters in your R function.</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>In our quick start example the associated id/parameter was <bpt id="p116">*</bpt>swap<ept id="p116">*</ept>.</source>
          <target state="new">In our quick start example the associated id/parameter was <bpt id="p116">*</bpt>swap<ept id="p116">*</ept>.</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Arg element</source>
          <target state="new">Arg element</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>A module parameter is defined using the <bpt id="p117">**</bpt>Arg<ept id="p117">**</ept><ph id="ph104" /> child element of the <bpt id="p118">**</bpt>Arguments<ept id="p118">**</ept><ph id="ph105" /> section of the XML definition file.</source>
          <target state="new">A module parameter is defined using the <bpt id="p117">**</bpt>Arg<ept id="p117">**</ept><ph id="ph104" /> child element of the <bpt id="p118">**</bpt>Arguments<ept id="p118">**</ept><ph id="ph105" /> section of the XML definition file.</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>As with the child elements in the <bpt id="p119">**</bpt>Ports<ept id="p119">**</ept><ph id="ph106" /> section, the ordering of parameters in the <bpt id="p120">**</bpt>Arguments<ept id="p120">**</ept><ph id="ph107" /> section defines the layout encountered in the UX.</source>
          <target state="new">As with the child elements in the <bpt id="p119">**</bpt>Ports<ept id="p119">**</ept><ph id="ph106" /> section, the ordering of parameters in the <bpt id="p120">**</bpt>Arguments<ept id="p120">**</ept><ph id="ph107" /> section defines the layout encountered in the UX.</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The parameters appear from top down in the UI in the same order in which they are defined in the XML file.</source>
          <target state="new">The parameters appear from top down in the UI in the same order in which they are defined in the XML file.</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The types supported by Machine Learning for parameters are listed below.</source>
          <target state="new">The types supported by Machine Learning for parameters are listed below.</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source><bpt id="p121">**</bpt>int<ept id="p121">**</ept><ph id="ph108" /> – an Integer (32-bit) type parameter.</source>
          <target state="new"><bpt id="p121">**</bpt>int<ept id="p121">**</ept><ph id="ph108" /> – an Integer (32-bit) type parameter.</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source><bpt id="p122">*</bpt>Optional Properties<ept id="p122">*</ept>: <bpt id="p123">**</bpt>min<ept id="p123">**</ept>, <bpt id="p124">**</bpt>max<ept id="p124">**</ept><ph id="ph109" /> and <bpt id="p125">**</bpt>default<ept id="p125">**</ept></source>
          <target state="new"><bpt id="p122">*</bpt>Optional Properties<ept id="p122">*</ept>: <bpt id="p123">**</bpt>min<ept id="p123">**</ept>, <bpt id="p124">**</bpt>max<ept id="p124">**</ept><ph id="ph109" /> and <bpt id="p125">**</bpt>default<ept id="p125">**</ept></target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source><bpt id="p126">**</bpt>double<ept id="p126">**</ept><ph id="ph110" /> – a double type parameter.</source>
          <target state="new"><bpt id="p126">**</bpt>double<ept id="p126">**</ept><ph id="ph110" /> – a double type parameter.</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source><bpt id="p127">*</bpt>Optional Properties<ept id="p127">*</ept>: <bpt id="p128">**</bpt>min<ept id="p128">**</ept>, <bpt id="p129">**</bpt>max<ept id="p129">**</ept><ph id="ph111" /> and <bpt id="p130">**</bpt>default<ept id="p130">**</ept></source>
          <target state="new"><bpt id="p127">*</bpt>Optional Properties<ept id="p127">*</ept>: <bpt id="p128">**</bpt>min<ept id="p128">**</ept>, <bpt id="p129">**</bpt>max<ept id="p129">**</ept><ph id="ph111" /> and <bpt id="p130">**</bpt>default<ept id="p130">**</ept></target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source><bpt id="p131">**</bpt>bool<ept id="p131">**</ept><ph id="ph112" /> – a Boolean parameter that is represented by a check-box in UX.</source>
          <target state="new"><bpt id="p131">**</bpt>bool<ept id="p131">**</ept><ph id="ph112" /> – a Boolean parameter that is represented by a check-box in UX.</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source><bpt id="p132">*</bpt>Optional Properties<ept id="p132">*</ept>: <bpt id="p133">**</bpt>default<ept id="p133">**</ept><ph id="ph113" /> - false if not set</source>
          <target state="new"><bpt id="p132">*</bpt>Optional Properties<ept id="p132">*</ept>: <bpt id="p133">**</bpt>default<ept id="p133">**</ept><ph id="ph113" /> - false if not set</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source><bpt id="p134">**</bpt>string<ept id="p134">**</ept>: a standard string</source>
          <target state="new"><bpt id="p134">**</bpt>string<ept id="p134">**</ept>: a standard string</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source><bpt id="p135">*</bpt>Optional Properties<ept id="p135">*</ept>: <bpt id="p136">**</bpt>default<ept id="p136">**</ept><ph id="ph114" /> and <bpt id="p137">**</bpt>isOptional<ept id="p137">**</ept><ph id="ph115" /> - An optional string without a default value will be passed as null to the R function if a value is not otherwise provided by a user.</source>
          <target state="new"><bpt id="p135">*</bpt>Optional Properties<ept id="p135">*</ept>: <bpt id="p136">**</bpt>default<ept id="p136">**</ept><ph id="ph114" /> and <bpt id="p137">**</bpt>isOptional<ept id="p137">**</ept><ph id="ph115" /> - An optional string without a default value will be passed as null to the R function if a value is not otherwise provided by a user.</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source><bpt id="p138">**</bpt>ColumnPicker<ept id="p138">**</ept>: a column selection parameter.</source>
          <target state="new"><bpt id="p138">**</bpt>ColumnPicker<ept id="p138">**</ept>: a column selection parameter.</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>This type renders in the UX as a column chooser.</source>
          <target state="new">This type renders in the UX as a column chooser.</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The <bpt id="p139">**</bpt>Property<ept id="p139">**</ept><ph id="ph116" /> element is used here to specify the id of the port from which columns will be selected, where the target port type must be <bpt id="p140">*</bpt>DataTable<ept id="p140">*</ept>.</source>
          <target state="new">The <bpt id="p139">**</bpt>Property<ept id="p139">**</ept><ph id="ph116" /> element is used here to specify the id of the port from which columns will be selected, where the target port type must be <bpt id="p140">*</bpt>DataTable<ept id="p140">*</ept>.</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The result of the column selection will be passed to the R function as a list of strings containing the selected column names.</source>
          <target state="new">The result of the column selection will be passed to the R function as a list of strings containing the selected column names.</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source><bpt id="p141">*</bpt>Required Properties<ept id="p141">*</ept>: <bpt id="p142">**</bpt>portId<ept id="p142">**</ept><ph id="ph117" /> -  matches the id of an Input element with type <bpt id="p143">*</bpt>DataTable<ept id="p143">*</ept>.</source>
          <target state="new"><bpt id="p141">*</bpt>Required Properties<ept id="p141">*</ept>: <bpt id="p142">**</bpt>portId<ept id="p142">**</ept><ph id="ph117" /> -  matches the id of an Input element with type <bpt id="p143">*</bpt>DataTable<ept id="p143">*</ept>.</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source><bpt id="p144">*</bpt>Optional Properties<ept id="p144">*</ept>:</source>
          <target state="new"><bpt id="p144">*</bpt>Optional Properties<ept id="p144">*</ept>:</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source><bpt id="p145">**</bpt>allowedTypes<ept id="p145">**</ept><ph id="ph118" /> - Filter the column types the user can pick from.</source>
          <target state="new"><bpt id="p145">**</bpt>allowedTypes<ept id="p145">**</ept><ph id="ph118" /> - Filter the column types the user can pick from.</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Valid values include:</source>
          <target state="new">Valid values include:</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Numeric</source>
          <target state="new">Numeric</target>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Boolean</source>
          <target state="new">Boolean</target>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Categorical</source>
          <target state="new">Categorical</target>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>String</source>
          <target state="new">String</target>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Label</source>
          <target state="new">Label</target>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Feature</source>
          <target state="new">Feature</target>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Score</source>
          <target state="new">Score</target>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>All</source>
          <target state="new">All</target>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source><bpt id="p146">**</bpt>default<ept id="p146">**</ept><ph id="ph119" /> - Valid default selections for the column picker include:</source>
          <target state="new"><bpt id="p146">**</bpt>default<ept id="p146">**</ept><ph id="ph119" /> - Valid default selections for the column picker include:</target>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="new">None</target>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>NumericFeature</source>
          <target state="new">NumericFeature</target>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>NumericLabel</source>
          <target state="new">NumericLabel</target>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>NumericScore</source>
          <target state="new">NumericScore</target>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>NumericAll</source>
          <target state="new">NumericAll</target>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>BooleanFeature</source>
          <target state="new">BooleanFeature</target>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>BooleanLabel</source>
          <target state="new">BooleanLabel</target>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>BooleanScore</source>
          <target state="new">BooleanScore</target>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>BooleanAll</source>
          <target state="new">BooleanAll</target>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>CategoricalFeature</source>
          <target state="new">CategoricalFeature</target>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>CategoricalLabel</source>
          <target state="new">CategoricalLabel</target>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>CategoricalScore</source>
          <target state="new">CategoricalScore</target>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>CategoricalAll</source>
          <target state="new">CategoricalAll</target>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>StringFeature</source>
          <target state="new">StringFeature</target>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>StringLabel</source>
          <target state="new">StringLabel</target>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>StringScore</source>
          <target state="new">StringScore</target>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>StringAll</source>
          <target state="new">StringAll</target>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>AllLabel</source>
          <target state="new">AllLabel</target>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>AllFeature</source>
          <target state="new">AllFeature</target>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>AllScore</source>
          <target state="new">AllScore</target>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>All</source>
          <target state="new">All</target>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source><bpt id="p147">**</bpt>DropDown<ept id="p147">**</ept>: a user specified enumerated (dropdown) list.</source>
          <target state="new"><bpt id="p147">**</bpt>DropDown<ept id="p147">**</ept>: a user specified enumerated (dropdown) list.</target>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The dropdown items are specified within the <bpt id="p148">**</bpt>Properties<ept id="p148">**</ept><ph id="ph120" /> element using an <bpt id="p149">**</bpt>Item<ept id="p149">**</ept><ph id="ph121" /> element.</source>
          <target state="new">The dropdown items are specified within the <bpt id="p148">**</bpt>Properties<ept id="p148">**</ept><ph id="ph120" /> element using an <bpt id="p149">**</bpt>Item<ept id="p149">**</ept><ph id="ph121" /> element.</target>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>The <bpt id="p150">**</bpt>id<ept id="p150">**</ept><ph id="ph122" /> for each <bpt id="p151">**</bpt>Item<ept id="p151">**</ept><ph id="ph123" /> must be unique and a valid R variable and the name of the item is both the text that appears to users and the value that is passed to the R function.</source>
          <target state="new">The <bpt id="p150">**</bpt>id<ept id="p150">**</ept><ph id="ph122" /> for each <bpt id="p151">**</bpt>Item<ept id="p151">**</ept><ph id="ph123" /> must be unique and a valid R variable and the name of the item is both the text that appears to users and the value that is passed to the R function.</target>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source><bpt id="p152">*</bpt>Optional Properties<ept id="p152">*</ept>:</source>
          <target state="new"><bpt id="p152">*</bpt>Optional Properties<ept id="p152">*</ept>:</target>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source><bpt id="p153">**</bpt>default<ept id="p153">**</ept><ph id="ph124" /> - The value for the default property must correspond with an id value from one of the <bpt id="p154">**</bpt>Item<ept id="p154">**</ept><ph id="ph125" /> elements.</source>
          <target state="new"><bpt id="p153">**</bpt>default<ept id="p153">**</ept><ph id="ph124" /> - The value for the default property must correspond with an id value from one of the <bpt id="p154">**</bpt>Item<ept id="p154">**</ept><ph id="ph125" /> elements.</target>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Auxiliary Files</source>
          <target state="new">Auxiliary Files</target>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Any file that is placed in your custom module ZIP file will be available for use during execution time.</source>
          <target state="new">Any file that is placed in your custom module ZIP file will be available for use during execution time.</target>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>If there is a directory structure present it will be preserved.</source>
          <target state="new">If there is a directory structure present it will be preserved.</target>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>This means that file sourcing will work the same locally and in Azure Machine Learning execution.</source>
          <target state="new">This means that file sourcing will work the same locally and in Azure Machine Learning execution.</target>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Please notice that all files are extracted to ‘src’ directory so all paths should have ‘src/’ prefix.</source>
          <target state="new">Please notice that all files are extracted to ‘src’ directory so all paths should have ‘src/’ prefix.</target>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>For example, say you want to remove any rows with NAs from the  dataset, and also remove any duplicate rows, before outputting it into CustomAddRows, and you’ve already written an R function that does that in a file RemoveDupNARows.R:</source>
          <target state="new">For example, say you want to remove any rows with NAs from the  dataset, and also remove any duplicate rows, before outputting it into CustomAddRows, and you’ve already written an R function that does that in a file RemoveDupNARows.R:</target>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>You can source the auxiliary file RemoveDupNARows.R in the CustomAddRows function:</source>
          <target state="new">You can source the auxiliary file RemoveDupNARows.R in the CustomAddRows function:</target>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Next, upload a zip file containing ‘CustomAddRows.R’, ‘CustomAddRows.xml’, and ‘RemoveDupNARows.R’ as a custom R module.</source>
          <target state="new">Next, upload a zip file containing ‘CustomAddRows.R’, ‘CustomAddRows.xml’, and ‘RemoveDupNARows.R’ as a custom R module.</target>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Execution Environment</source>
          <target state="new">Execution Environment</target>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>The execution environment for the R script uses the same version of R as the <bpt id="p155">**</bpt>Execute R Script<ept id="p155">**</ept><ph id="ph126" /> module, and can use the same default packages.</source>
          <target state="new">The execution environment for the R script uses the same version of R as the <bpt id="p155">**</bpt>Execute R Script<ept id="p155">**</ept><ph id="ph126" /> module, and can use the same default packages.</target>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>You can add additional R packages to your custom module by including them in the custom module zip package and loading them in your R script as you would in your own R environment.</source>
          <target state="new">You can add additional R packages to your custom module by including them in the custom module zip package and loading them in your R script as you would in your own R environment.</target>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source><bpt id="p156">**</bpt>Limitations of the execution environment<ept id="p156">**</ept><ph id="ph127" /> include:</source>
          <target state="new"><bpt id="p156">**</bpt>Limitations of the execution environment<ept id="p156">**</ept><ph id="ph127" /> include:</target>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Non-persistent file system: Files written when the custom module is run will not persist across multiple runs of the same module.</source>
          <target state="new">Non-persistent file system: Files written when the custom module is run will not persist across multiple runs of the same module.</target>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>No network access</source>
          <target state="new">No network access</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3f7fc5181cf860494ce546145fd53b516446da8b</xliffext:olfilehash>
  </header>
</xliff>