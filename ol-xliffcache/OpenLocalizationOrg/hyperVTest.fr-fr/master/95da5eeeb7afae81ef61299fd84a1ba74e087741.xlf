<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-US" target-language="fr-fr">
    <body>
      <group id="main" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;properties
    pageTitle="</ph>Add push notifications to your Mobile Services app (Xamarin.Forms) - Mobile Services<ph id="ph2">"
    description="</ph>Learn how to use push notifications in Xamarin.Forms apps with Azure Mobile Services.<ph id="ph3">"
    documentationCenter="xamarin"
    authors="wesmc7777"
    manager="dwrede"
    services="mobile-services"
    editor=""/&gt;</ph></source>
          <target state="new"><ph id="ph1">&lt;properties
    pageTitle="</ph>Add push notifications to your Mobile Services app (Xamarin.Forms) - Mobile Services<ph id="ph2">"
    description="</ph>Learn how to use push notifications in Xamarin.Forms apps with Azure Mobile Services.<ph id="ph3">"
    documentationCenter="xamarin"
    authors="wesmc7777"
    manager="dwrede"
    services="mobile-services"
    editor=""/&gt;</ph></target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Add push notifications to your Xamarin.Forms app</source>
          <target state="new">Add push notifications to your Xamarin.Forms app</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>&amp;nbsp;</source>
          <target state="new">&amp;nbsp;</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="new">Overview</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This tutorial shows you how to use Azure Mobile Services to send push notifications to the iOS, Android, and Windows Phone app of your Xamarin.Forms solution.</source>
          <target state="new">This tutorial shows you how to use Azure Mobile Services to send push notifications to the iOS, Android, and Windows Phone app of your Xamarin.Forms solution.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Start by creating a mobile service.</source>
          <target state="new">Start by creating a mobile service.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Then, you'll download a starter sample, register with the appropriate push notification services, and add code to the solution to receive notifications from those services.</source>
          <target state="new">Then, you'll download a starter sample, register with the appropriate push notification services, and add code to the solution to receive notifications from those services.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>When you complete this tutorial, your mobile service will send a push notification each time a user adds a task in one of the apps.</source>
          <target state="new">When you complete this tutorial, your mobile service will send a push notification each time a user adds a task in one of the apps.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You can find the completed sample here: <bpt id="p1">[</bpt><ept id="p1">Completed Xamarin.Forms Azure Push Notification Sample]</ept>.</source>
          <target state="new">You can find the completed sample here: <bpt id="p1">[</bpt><ept id="p1">Completed Xamarin.Forms Azure Push Notification Sample]</ept>.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This tutorial requires the following:</source>
          <target state="new">This tutorial requires the following:</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>An iOS 8 device (you cannot test push notifications in the iOS Simulator)</source>
          <target state="new">An iOS 8 device (you cannot test push notifications in the iOS Simulator)</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>iOS Developer Program membership</source>
          <target state="new">iOS Developer Program membership</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>An active Google account</source>
          <target state="new">An active Google account</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p4">[</bpt><ept id="p4">Google Cloud Messaging Client Component]</ept>.</source>
          <target state="new"><bpt id="p4">[</bpt><ept id="p4">Google Cloud Messaging Client Component]</ept>.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>You will add this component during the tutorial.</source>
          <target state="new">You will add this component during the tutorial.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>In this topic:</source>
          <target state="new">In this topic:</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p5">[</bpt>Create a New Mobile Service<ept id="p5">](#create-service)</ept></source>
          <target state="new"><bpt id="p5">[</bpt>Create a New Mobile Service<ept id="p5">](#create-service)</ept></target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p6">[</bpt>Download and Configure the Starter Sample<ept id="p6">](#download-starter-sample)</ept></source>
          <target state="new"><bpt id="p6">[</bpt>Download and Configure the Starter Sample<ept id="p6">](#download-starter-sample)</ept></target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p7">[</bpt>Add push notifications to your Xamarin.Forms.iOS app<ept id="p7">](#iOS)</ept></source>
          <target state="new"><bpt id="p7">[</bpt>Add push notifications to your Xamarin.Forms.iOS app<ept id="p7">](#iOS)</ept></target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p8">[</bpt>Add push notifications to your Xamarin.Forms.Android app<ept id="p8">](#Android)</ept></source>
          <target state="new"><bpt id="p8">[</bpt>Add push notifications to your Xamarin.Forms.Android app<ept id="p8">](#Android)</ept></target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p9">[</bpt>Add push notifications to your Xamarin.Forms.Windows app<ept id="p9">](#Windows)</ept></source>
          <target state="new"><bpt id="p9">[</bpt>Add push notifications to your Xamarin.Forms.Windows app<ept id="p9">](#Windows)</ept></target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p10">[</bpt>Update Azure table insert script to send push notifications to all apps<ept id="p10">](#all-apps)</ept></source>
          <target state="new"><bpt id="p10">[</bpt>Update Azure table insert script to send push notifications to all apps<ept id="p10">](#all-apps)</ept></target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Create a New Mobile Service</source>
          <target state="new">Create a New Mobile Service</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>To be able to store app data in the new mobile service, you must first create a new table.</source>
          <target state="new">To be able to store app data in the new mobile service, you must first create a new table.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>In the Azure classic portal, click <bpt id="p11">**</bpt>Mobile Services<ept id="p11">**</ept>, and then click the mobile service that you just created.</source>
          <target state="new">In the Azure classic portal, click <bpt id="p11">**</bpt>Mobile Services<ept id="p11">**</ept>, and then click the mobile service that you just created.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p12">**</bpt>Data<ept id="p12">**</ept><ph id="ph8" /> tab, then click <bpt id="p13">**</bpt>+Create<ept id="p13">**</ept>.</source>
          <target state="new">Click the <bpt id="p12">**</bpt>Data<ept id="p12">**</ept><ph id="ph8" /> tab, then click <bpt id="p13">**</bpt>+Create<ept id="p13">**</ept>.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This displays the <bpt id="p14">**</bpt>Create new table<ept id="p14">**</ept><ph id="ph10" /> dialog.</source>
          <target state="new">This displays the <bpt id="p14">**</bpt>Create new table<ept id="p14">**</ept><ph id="ph10" /> dialog.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>In <bpt id="p15">**</bpt>Table name<ept id="p15">**</ept><ph id="ph11" /> type <bpt id="p16">_</bpt>TodoItem<ept id="p16">_</ept>, then click the check button.</source>
          <target state="new">In <bpt id="p15">**</bpt>Table name<ept id="p15">**</ept><ph id="ph11" /> type <bpt id="p16">_</bpt>TodoItem<ept id="p16">_</ept>, then click the check button.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This creates a new storage table <bpt id="p17">**</bpt>TodoItem<ept id="p17">**</ept><ph id="ph13" /> with the default permissions set, which means that any user of the app can access and change data in the table.</source>
          <target state="new">This creates a new storage table <bpt id="p17">**</bpt>TodoItem<ept id="p17">**</ept><ph id="ph13" /> with the default permissions set, which means that any user of the app can access and change data in the table.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><ph id="ph14">[AZURE.NOTE]</ph><ph id="ph15" /> The same table name is used in Mobile Services quickstart.</source>
          <target state="new"><ph id="ph14">[AZURE.NOTE]</ph><ph id="ph15" /> The same table name is used in Mobile Services quickstart.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>However, each table is created in a schema that is specific to a given mobile service.</source>
          <target state="new">However, each table is created in a schema that is specific to a given mobile service.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This is to prevent data collisions when multiple mobile services use the same database.</source>
          <target state="new">This is to prevent data collisions when multiple mobile services use the same database.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Click the new <bpt id="p18">**</bpt>TodoItem<ept id="p18">**</ept><ph id="ph16" /> table and verify that there are no data rows.</source>
          <target state="new">Click the new <bpt id="p18">**</bpt>TodoItem<ept id="p18">**</ept><ph id="ph16" /> table and verify that there are no data rows.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p19">**</bpt>Columns<ept id="p19">**</ept><ph id="ph17" /> tab and verify that there is only a single <bpt id="p20">**</bpt>id<ept id="p20">**</ept><ph id="ph18" /> column, which is automatically created for you.</source>
          <target state="new">Click the <bpt id="p19">**</bpt>Columns<ept id="p19">**</ept><ph id="ph17" /> tab and verify that there is only a single <bpt id="p20">**</bpt>id<ept id="p20">**</ept><ph id="ph18" /> column, which is automatically created for you.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This is the minimum requirement for a table in Mobile Services.</source>
          <target state="new">This is the minimum requirement for a table in Mobile Services.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph19">[AZURE.NOTE]</ph><ph id="ph20" /> When dynamic schema is enabled on your mobile service, new columns are created automatically when JSON objects are sent to the mobile service by an insert or update operation.</source>
          <target state="new"><ph id="ph19">[AZURE.NOTE]</ph><ph id="ph20" /> When dynamic schema is enabled on your mobile service, new columns are created automatically when JSON objects are sent to the mobile service by an insert or update operation.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>You are now ready to use the new mobile service as data storage for the app.</source>
          <target state="new">You are now ready to use the new mobile service as data storage for the app.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Download and Configure the Starter Sample</source>
          <target state="new">Download and Configure the Starter Sample</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>We'll add push notifications to an existing sample.</source>
          <target state="new">We'll add push notifications to an existing sample.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Download the following sample: <bpt id="p21">[</bpt><ept id="p21">Xamarin.Forms Azure Push Notification Starter Sample]</ept>.</source>
          <target state="new">Download the following sample: <bpt id="p21">[</bpt><ept id="p21">Xamarin.Forms Azure Push Notification Starter Sample]</ept>.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p22">[</bpt><ept id="p22">Azure classic portal]</ept>, click <bpt id="p23">**</bpt>Mobile Services<ept id="p23">**</ept>, and then click the mobile service.</source>
          <target state="new">In the <bpt id="p22">[</bpt><ept id="p22">Azure classic portal]</ept>, click <bpt id="p23">**</bpt>Mobile Services<ept id="p23">**</ept>, and then click the mobile service.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p24">**</bpt>Dashboard<ept id="p24">**</ept><ph id="ph21" /> tab and make a note of the <bpt id="p25">**</bpt>Site URL<ept id="p25">**</ept>.</source>
          <target state="new">Click the <bpt id="p24">**</bpt>Dashboard<ept id="p24">**</ept><ph id="ph21" /> tab and make a note of the <bpt id="p25">**</bpt>Site URL<ept id="p25">**</ept>.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Then click <bpt id="p26">**</bpt>Manage Keys<ept id="p26">**</ept><ph id="ph22" /> and make a note of the <bpt id="p27">**</bpt>Application Key<ept id="p27">**</ept>.</source>
          <target state="new">Then click <bpt id="p26">**</bpt>Manage Keys<ept id="p26">**</ept><ph id="ph22" /> and make a note of the <bpt id="p27">**</bpt>Application Key<ept id="p27">**</ept>.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>You'll need these values when you access the mobile service from your app code.</source>
          <target state="new">You'll need these values when you access the mobile service from your app code.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>In the  <bpt id="p28">**</bpt>ToDoAzure(Portable)<ept id="p28">**</ept><ph id="ph23" /> project of the solution, open the <bpt id="p29">**</bpt>Constants.cs<ept id="p29">**</ept><ph id="ph24" /> file, replace <ph id="ph25">`ApplicationURL`</ph><ph id="ph26" /> and <ph id="ph27">`ApplicationKey`</ph><ph id="ph28" /> with the site URL and application key you obtained in the previous step.</source>
          <target state="new">In the  <bpt id="p28">**</bpt>ToDoAzure(Portable)<ept id="p28">**</ept><ph id="ph23" /> project of the solution, open the <bpt id="p29">**</bpt>Constants.cs<ept id="p29">**</ept><ph id="ph24" /> file, replace <ph id="ph25">`ApplicationURL`</ph><ph id="ph26" /> and <ph id="ph27">`ApplicationKey`</ph><ph id="ph28" /> with the site URL and application key you obtained in the previous step.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Add push notifications to your Xamarin.Forms.iOS app</source>
          <target state="new">Add push notifications to your Xamarin.Forms.iOS app</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>You'll add push notifications to the iOS app by using the Apple Push Notification service (APNS).</source>
          <target state="new">You'll add push notifications to the iOS app by using the Apple Push Notification service (APNS).</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>You'll need an active Google account, and the <bpt id="p30">[</bpt><ept id="p30">Google Cloud Messaging Client Component]</ept>.</source>
          <target state="new">You'll need an active Google account, and the <bpt id="p30">[</bpt><ept id="p30">Google Cloud Messaging Client Component]</ept>.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><ph id="ph29">[AZURE.IMPORTANT]</ph><ph id="ph30" /> Because of Apple Push Notification service (APNS) requirements, you must deploy and test push notifications on an iOS capable device (iPhone or iPad) instead of in the emulator.</source>
          <target state="new"><ph id="ph29">[AZURE.IMPORTANT]</ph><ph id="ph30" /> Because of Apple Push Notification service (APNS) requirements, you must deploy and test push notifications on an iOS capable device (iPhone or iPad) instead of in the emulator.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>APNS uses certificates to authenticate your mobile service.</source>
          <target state="new">APNS uses certificates to authenticate your mobile service.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Follow these instructions to create the necessary certificates and upload it to your Mobile Service.</source>
          <target state="new">Follow these instructions to create the necessary certificates and upload it to your Mobile Service.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>For the official APNS feature documentation, see <bpt id="p31">[</bpt><ept id="p31">Apple Push Notification Service]</ept>.</source>
          <target state="new">For the official APNS feature documentation, see <bpt id="p31">[</bpt><ept id="p31">Apple Push Notification Service]</ept>.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Generate the Certificate Signing Request file</source>
          <target state="new">Generate the Certificate Signing Request file</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>First you must generate the Certificate Signing Request (CSR) file, which is used by Apple to generate a signed certificate.</source>
          <target state="new">First you must generate the Certificate Signing Request (CSR) file, which is used by Apple to generate a signed certificate.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>From Utilities, run the <bpt id="p32">**</bpt>Keychain Access tool<ept id="p32">**</ept>.</source>
          <target state="new">From Utilities, run the <bpt id="p32">**</bpt>Keychain Access tool<ept id="p32">**</ept>.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p33">**</bpt>Keychain Access<ept id="p33">**</ept>, expand <bpt id="p34">**</bpt>Certificate Assistant<ept id="p34">**</ept>, then click <bpt id="p35">**</bpt>Request a Certificate from a Certificate Authority...<ept id="p35">**</ept>.</source>
          <target state="new">Click <bpt id="p33">**</bpt>Keychain Access<ept id="p33">**</ept>, expand <bpt id="p34">**</bpt>Certificate Assistant<ept id="p34">**</ept>, then click <bpt id="p35">**</bpt>Request a Certificate from a Certificate Authority...<ept id="p35">**</ept>.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Enter your <bpt id="p36">**</bpt>User Email Address<ept id="p36">**</ept>, type in a <bpt id="p37">**</bpt>Common Name<ept id="p37">**</ept><ph id="ph32" /> value, make sure that <bpt id="p38">**</bpt>Saved to disk<ept id="p38">**</ept><ph id="ph33" /> is selected, and then click <bpt id="p39">**</bpt>Continue<ept id="p39">**</ept>.</source>
          <target state="new">Enter your <bpt id="p36">**</bpt>User Email Address<ept id="p36">**</ept>, type in a <bpt id="p37">**</bpt>Common Name<ept id="p37">**</ept><ph id="ph32" /> value, make sure that <bpt id="p38">**</bpt>Saved to disk<ept id="p38">**</ept><ph id="ph33" /> is selected, and then click <bpt id="p39">**</bpt>Continue<ept id="p39">**</ept>.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Type a name for the Certificate Signing Request (CSR) file in <bpt id="p40">**</bpt>Save As<ept id="p40">**</ept>, select the location in <bpt id="p41">**</bpt>Where<ept id="p41">**</ept>, then click <bpt id="p42">**</bpt>Save<ept id="p42">**</ept>.</source>
          <target state="new">Type a name for the Certificate Signing Request (CSR) file in <bpt id="p40">**</bpt>Save As<ept id="p40">**</ept>, select the location in <bpt id="p41">**</bpt>Where<ept id="p41">**</ept>, then click <bpt id="p42">**</bpt>Save<ept id="p42">**</ept>.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Remember the location you chose.</source>
          <target state="new">Remember the location you chose.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Next, you will register your app with Apple, enable push notifications, and upload this exported CSR to create a push certificate.</source>
          <target state="new">Next, you will register your app with Apple, enable push notifications, and upload this exported CSR to create a push certificate.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Register your app for push notifications</source>
          <target state="new">Register your app for push notifications</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>To be able to send push notifications to an iOS app from mobile services, you must register your application with Apple and register for push notifications.</source>
          <target state="new">To be able to send push notifications to an iOS app from mobile services, you must register your application with Apple and register for push notifications.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>If you have not already registered your app, navigate to the <ph id="ph36">&lt;a href="http://go.microsoft.com/fwlink/p/?LinkId=272456" target="_blank"&gt;</ph>iOS Provisioning Portal<ph id="ph37">&lt;/a&gt;</ph><ph id="ph38" /> at the Apple Developer Center, log on with your Apple ID, click <bpt id="p43">**</bpt>Identifiers<ept id="p43">**</ept>, then click <bpt id="p44">**</bpt>App IDs<ept id="p44">**</ept>, and finally click on the <bpt id="p45">**</bpt>+<ept id="p45">**</ept><ph id="ph39" /> sign to create an app ID for your app.</source>
          <target state="new">If you have not already registered your app, navigate to the <ph id="ph36">&lt;a href="http://go.microsoft.com/fwlink/p/?LinkId=272456" target="_blank"&gt;</ph>iOS Provisioning Portal<ph id="ph37">&lt;/a&gt;</ph><ph id="ph38" /> at the Apple Developer Center, log on with your Apple ID, click <bpt id="p43">**</bpt>Identifiers<ept id="p43">**</ept>, then click <bpt id="p44">**</bpt>App IDs<ept id="p44">**</ept>, and finally click on the <bpt id="p45">**</bpt>+<ept id="p45">**</ept><ph id="ph39" /> sign to create an app ID for your app.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Type a name for your app in <bpt id="p46">**</bpt>Description<ept id="p46">**</ept>, enter and remember the unique <bpt id="p47">**</bpt>Bundle Identifier<ept id="p47">**</ept>, check the "Push Notifications" option in the "App Services" section, and then click <bpt id="p48">**</bpt>Continue<ept id="p48">**</ept>.</source>
          <target state="new">Type a name for your app in <bpt id="p46">**</bpt>Description<ept id="p46">**</ept>, enter and remember the unique <bpt id="p47">**</bpt>Bundle Identifier<ept id="p47">**</ept>, check the "Push Notifications" option in the "App Services" section, and then click <bpt id="p48">**</bpt>Continue<ept id="p48">**</ept>.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>This example uses the ID <bpt id="p49">**</bpt>MobileServices.Quickstart<ept id="p49">**</ept><ph id="ph41" /> but you may not reuse this same ID, as app IDs must be unique across all users.</source>
          <target state="new">This example uses the ID <bpt id="p49">**</bpt>MobileServices.Quickstart<ept id="p49">**</ept><ph id="ph41" /> but you may not reuse this same ID, as app IDs must be unique across all users.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>As such, it is recommended that you append your full name or initials after the app name.</source>
          <target state="new">As such, it is recommended that you append your full name or initials after the app name.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>This generates your app ID and requests you to <bpt id="p50">**</bpt>Submit<ept id="p50">**</ept><ph id="ph43" /> the information.</source>
          <target state="new">This generates your app ID and requests you to <bpt id="p50">**</bpt>Submit<ept id="p50">**</ept><ph id="ph43" /> the information.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p51">**</bpt>Submit<ept id="p51">**</ept>.</source>
          <target state="new">Click <bpt id="p51">**</bpt>Submit<ept id="p51">**</ept>.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Once you click <bpt id="p52">**</bpt>Submit<ept id="p52">**</ept>, you will see the <bpt id="p53">**</bpt>Registration complete<ept id="p53">**</ept><ph id="ph45" /> screen, as shown below.</source>
          <target state="new">Once you click <bpt id="p52">**</bpt>Submit<ept id="p52">**</ept>, you will see the <bpt id="p53">**</bpt>Registration complete<ept id="p53">**</ept><ph id="ph45" /> screen, as shown below.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p54">**</bpt>Done<ept id="p54">**</ept>.</source>
          <target state="new">Click <bpt id="p54">**</bpt>Done<ept id="p54">**</ept>.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Locate the app ID that you just created, and click on its row.</source>
          <target state="new">Locate the app ID that you just created, and click on its row.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Clicking on the app ID will display details on the app and app ID.</source>
          <target state="new">Clicking on the app ID will display details on the app and app ID.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p55">**</bpt>Settings<ept id="p55">**</ept><ph id="ph48" /> button.</source>
          <target state="new">Click the <bpt id="p55">**</bpt>Settings<ept id="p55">**</ept><ph id="ph48" /> button.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Scroll to the bottom of the screen, and click the <bpt id="p56">**</bpt>Create Certificate...<ept id="p56">**</ept><ph id="ph50" /> button under the section <bpt id="p57">**</bpt>Development Push SSL Certificate<ept id="p57">**</ept>.</source>
          <target state="new">Scroll to the bottom of the screen, and click the <bpt id="p56">**</bpt>Create Certificate...<ept id="p56">**</ept><ph id="ph50" /> button under the section <bpt id="p57">**</bpt>Development Push SSL Certificate<ept id="p57">**</ept>.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>This displays the "Add iOS Certificate" assistant.</source>
          <target state="new">This displays the "Add iOS Certificate" assistant.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Note: This tutorial uses a development certificate.</source>
          <target state="new">Note: This tutorial uses a development certificate.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The same process is used when registering a production certificate.</source>
          <target state="new">The same process is used when registering a production certificate.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Just make sure that you set the same certificate type when you upload the certificate to Mobile Services.</source>
          <target state="new">Just make sure that you set the same certificate type when you upload the certificate to Mobile Services.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p58">**</bpt>Choose File<ept id="p58">**</ept>, browse to the location where you saved the CSR file earlier, then click <bpt id="p59">**</bpt>Generate<ept id="p59">**</ept>.</source>
          <target state="new">Click <bpt id="p58">**</bpt>Choose File<ept id="p58">**</ept>, browse to the location where you saved the CSR file earlier, then click <bpt id="p59">**</bpt>Generate<ept id="p59">**</ept>.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>After the certificate is created by the portal, click the <bpt id="p60">**</bpt>Download<ept id="p60">**</ept><ph id="ph53" /> button, and click <bpt id="p61">**</bpt>Done<ept id="p61">**</ept>.</source>
          <target state="new">After the certificate is created by the portal, click the <bpt id="p60">**</bpt>Download<ept id="p60">**</ept><ph id="ph53" /> button, and click <bpt id="p61">**</bpt>Done<ept id="p61">**</ept>.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>This downloads the signing certificate and saves it to your computer in your Downloads folder.</source>
          <target state="new">This downloads the signing certificate and saves it to your computer in your Downloads folder.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Note: By default, the downloaded file a development certificate is named <ph id="ph56">&lt;strong&gt;</ph>aps_development.cer<ph id="ph57">&lt;/strong&gt;</ph>.</source>
          <target state="new">Note: By default, the downloaded file a development certificate is named <ph id="ph56">&lt;strong&gt;</ph>aps_development.cer<ph id="ph57">&lt;/strong&gt;</ph>.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Double-click the downloaded push certificate <bpt id="p62">**</bpt>aps_development.cer<ept id="p62">**</ept>.</source>
          <target state="new">Double-click the downloaded push certificate <bpt id="p62">**</bpt>aps_development.cer<ept id="p62">**</ept>.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>This installs the new certificate in the Keychain, as shown below:</source>
          <target state="new">This installs the new certificate in the Keychain, as shown below:</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Note: The name in your certificate might be different, but it will be prefixed with <ph id="ph59">&lt;strong&gt;</ph>Apple Development iOS Push Notification Services:<ph id="ph60">&lt;/strong&gt;</ph>.</source>
          <target state="new">Note: The name in your certificate might be different, but it will be prefixed with <ph id="ph59">&lt;strong&gt;</ph>Apple Development iOS Push Notification Services:<ph id="ph60">&lt;/strong&gt;</ph>.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Later, you will use this certificate to generate a .p12 file and upload it to Mobile Services to enable authentication with APNS.</source>
          <target state="new">Later, you will use this certificate to generate a .p12 file and upload it to Mobile Services to enable authentication with APNS.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Create a provisioning profile for the app</source>
          <target state="new">Create a provisioning profile for the app</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Back in the <ph id="ph61">&lt;a href="http://go.microsoft.com/fwlink/p/?LinkId=272456" target="_blank"&gt;</ph>iOS Provisioning Portal<ph id="ph62">&lt;/a&gt;</ph>, select <bpt id="p63">**</bpt>Provisioning Profiles<ept id="p63">**</ept>, select <bpt id="p64">**</bpt>All<ept id="p64">**</ept>, and then click the <bpt id="p65">**</bpt>+<ept id="p65">**</ept><ph id="ph63" /> button to create a new profile.</source>
          <target state="new">Back in the <ph id="ph61">&lt;a href="http://go.microsoft.com/fwlink/p/?LinkId=272456" target="_blank"&gt;</ph>iOS Provisioning Portal<ph id="ph62">&lt;/a&gt;</ph>, select <bpt id="p63">**</bpt>Provisioning Profiles<ept id="p63">**</ept>, select <bpt id="p64">**</bpt>All<ept id="p64">**</ept>, and then click the <bpt id="p65">**</bpt>+<ept id="p65">**</ept><ph id="ph63" /> button to create a new profile.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>This launches the <bpt id="p66">**</bpt>Add iOS Provisiong Profile<ept id="p66">**</ept><ph id="ph64" /> Wizard.</source>
          <target state="new">This launches the <bpt id="p66">**</bpt>Add iOS Provisiong Profile<ept id="p66">**</ept><ph id="ph64" /> Wizard.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p67">**</bpt>iOS App Development<ept id="p67">**</ept><ph id="ph66" /> under <bpt id="p68">**</bpt>Development<ept id="p68">**</ept><ph id="ph67" /> as the provisiong profile type, and click <bpt id="p69">**</bpt>Continue<ept id="p69">**</ept>.</source>
          <target state="new">Select <bpt id="p67">**</bpt>iOS App Development<ept id="p67">**</ept><ph id="ph66" /> under <bpt id="p68">**</bpt>Development<ept id="p68">**</ept><ph id="ph67" /> as the provisiong profile type, and click <bpt id="p69">**</bpt>Continue<ept id="p69">**</ept>.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Next, select the app ID for the Mobile Services Quickstart app from the <bpt id="p70">**</bpt>App ID<ept id="p70">**</ept><ph id="ph68" /> drop-down list, and click <bpt id="p71">**</bpt>Continue<ept id="p71">**</ept>.</source>
          <target state="new">Next, select the app ID for the Mobile Services Quickstart app from the <bpt id="p70">**</bpt>App ID<ept id="p70">**</ept><ph id="ph68" /> drop-down list, and click <bpt id="p71">**</bpt>Continue<ept id="p71">**</ept>.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p72">**</bpt>Select certificates<ept id="p72">**</ept><ph id="ph70" /> screen, select the certificate created earlier, and click <bpt id="p73">**</bpt>Continue<ept id="p73">**</ept>.</source>
          <target state="new">In the <bpt id="p72">**</bpt>Select certificates<ept id="p72">**</ept><ph id="ph70" /> screen, select the certificate created earlier, and click <bpt id="p73">**</bpt>Continue<ept id="p73">**</ept>.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Next, select the <bpt id="p74">**</bpt>Devices<ept id="p74">**</ept><ph id="ph72" /> to use for testing, and click <bpt id="p75">**</bpt>Continue<ept id="p75">**</ept>.</source>
          <target state="new">Next, select the <bpt id="p74">**</bpt>Devices<ept id="p74">**</ept><ph id="ph72" /> to use for testing, and click <bpt id="p75">**</bpt>Continue<ept id="p75">**</ept>.</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Finally, pick a name for the profile in <bpt id="p76">**</bpt>Profile Name<ept id="p76">**</ept>, click <bpt id="p77">**</bpt>Generate<ept id="p77">**</ept>, and click <bpt id="p78">**</bpt>Done<ept id="p78">**</ept>.</source>
          <target state="new">Finally, pick a name for the profile in <bpt id="p76">**</bpt>Profile Name<ept id="p76">**</ept>, click <bpt id="p77">**</bpt>Generate<ept id="p77">**</ept>, and click <bpt id="p78">**</bpt>Done<ept id="p78">**</ept>.</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>This creates a new provisioning profile.</source>
          <target state="new">This creates a new provisioning profile.</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>In Xcode, open the Organizer select the Devices view, select <bpt id="p79">**</bpt>Provisioning Profiles<ept id="p79">**</ept><ph id="ph76" /> in the <bpt id="p80">**</bpt>Library<ept id="p80">**</ept><ph id="ph77" /> section in the left pane, and then click the <bpt id="p81">**</bpt>Refresh<ept id="p81">**</ept><ph id="ph78" /> button at the bottom of the middle pane.</source>
          <target state="new">In Xcode, open the Organizer select the Devices view, select <bpt id="p79">**</bpt>Provisioning Profiles<ept id="p79">**</ept><ph id="ph76" /> in the <bpt id="p80">**</bpt>Library<ept id="p80">**</ept><ph id="ph77" /> section in the left pane, and then click the <bpt id="p81">**</bpt>Refresh<ept id="p81">**</ept><ph id="ph78" /> button at the bottom of the middle pane.</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Configure Mobile Services to send push requests</source>
          <target state="new">Configure Mobile Services to send push requests</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>After you have registered your app with APNS and configured your project, you must next configure your mobile service to integrate with APNS.</source>
          <target state="new">After you have registered your app with APNS and configured your project, you must next configure your mobile service to integrate with APNS.</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>In Keychain Access, right-click the new certificate, click <bpt id="p82">**</bpt>Export<ept id="p82">**</ept>, name your file, select the <bpt id="p83">**</bpt>.p12<ept id="p83">**</ept><ph id="ph79" /> format, then click <bpt id="p84">**</bpt>Save<ept id="p84">**</ept>.</source>
          <target state="new">In Keychain Access, right-click the new certificate, click <bpt id="p82">**</bpt>Export<ept id="p82">**</ept>, name your file, select the <bpt id="p83">**</bpt>.p12<ept id="p83">**</ept><ph id="ph79" /> format, then click <bpt id="p84">**</bpt>Save<ept id="p84">**</ept>.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Make a note of the file name and location of the exported certificate.</source>
          <target state="new">Make a note of the file name and location of the exported certificate.</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Log on to the <bpt id="p85">[</bpt><ept id="p85">Azure classic portal]</ept>, click <bpt id="p86">**</bpt>Mobile Services<ept id="p86">**</ept>, and then click your app.</source>
          <target state="new">Log on to the <bpt id="p85">[</bpt><ept id="p85">Azure classic portal]</ept>, click <bpt id="p86">**</bpt>Mobile Services<ept id="p86">**</ept>, and then click your app.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p87">**</bpt>Push<ept id="p87">**</ept><ph id="ph82" /> tab and click <bpt id="p88">**</bpt>Upload<ept id="p88">**</ept><ph id="ph83" /> under <bpt id="p89">**</bpt>apple push notification settings<ept id="p89">**</ept>.</source>
          <target state="new">Click the <bpt id="p87">**</bpt>Push<ept id="p87">**</ept><ph id="ph82" /> tab and click <bpt id="p88">**</bpt>Upload<ept id="p88">**</ept><ph id="ph83" /> under <bpt id="p89">**</bpt>apple push notification settings<ept id="p89">**</ept>.</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>This displays the Upload Certificate dialog.</source>
          <target state="new">This displays the Upload Certificate dialog.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p90">**</bpt>File<ept id="p90">**</ept>, select the exported certificate .p12 file, enter the <bpt id="p91">**</bpt>Password<ept id="p91">**</ept>, make sure that the correct <bpt id="p92">**</bpt>Mode<ept id="p92">**</ept><ph id="ph85" /> is selected, click the check icon, then click <bpt id="p93">**</bpt>Save<ept id="p93">**</ept>.</source>
          <target state="new">Click <bpt id="p90">**</bpt>File<ept id="p90">**</ept>, select the exported certificate .p12 file, enter the <bpt id="p91">**</bpt>Password<ept id="p91">**</ept>, make sure that the correct <bpt id="p92">**</bpt>Mode<ept id="p92">**</ept><ph id="ph85" /> is selected, click the check icon, then click <bpt id="p93">**</bpt>Save<ept id="p93">**</ept>.</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Your mobile service is now configured to work with APNS.</source>
          <target state="new">Your mobile service is now configured to work with APNS.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Configure your Xamarin.iOS application</source>
          <target state="new">Configure your Xamarin.iOS application</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>In Xamarin.Studio or Visual Studio, open <bpt id="p94">**</bpt>Info.plist<ept id="p94">**</ept>, and update the <bpt id="p95">**</bpt>Bundle Identifier<ept id="p95">**</ept><ph id="ph87" /> with the ID you created earlier.</source>
          <target state="new">In Xamarin.Studio or Visual Studio, open <bpt id="p94">**</bpt>Info.plist<ept id="p94">**</ept>, and update the <bpt id="p95">**</bpt>Bundle Identifier<ept id="p95">**</ept><ph id="ph87" /> with the ID you created earlier.</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Scroll down to <bpt id="p96">**</bpt>Background Modes<ept id="p96">**</ept><ph id="ph89" /> and check the <bpt id="p97">**</bpt>Enable Background Modes<ept id="p97">**</ept><ph id="ph90" /> box and the <bpt id="p98">**</bpt>Remote notifications<ept id="p98">**</ept><ph id="ph91" /> box.</source>
          <target state="new">Scroll down to <bpt id="p96">**</bpt>Background Modes<ept id="p96">**</ept><ph id="ph89" /> and check the <bpt id="p97">**</bpt>Enable Background Modes<ept id="p97">**</ept><ph id="ph90" /> box and the <bpt id="p98">**</bpt>Remote notifications<ept id="p98">**</ept><ph id="ph91" /> box.</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Double click your project in the Solution Panel to open <bpt id="p99">**</bpt>Project Options<ept id="p99">**</ept>.</source>
          <target state="new">Double click your project in the Solution Panel to open <bpt id="p99">**</bpt>Project Options<ept id="p99">**</ept>.</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Choose <bpt id="p100">**</bpt>iOS Bundle Signing<ept id="p100">**</ept><ph id="ph93" /> under <bpt id="p101">**</bpt>Build<ept id="p101">**</ept>, and select the corresponding <bpt id="p102">**</bpt>Identity<ept id="p102">**</ept><ph id="ph94" /> and <bpt id="p103">**</bpt>Provisioning profile<ept id="p103">**</ept><ph id="ph95" /> you had just set up for this project.</source>
          <target state="new">Choose <bpt id="p100">**</bpt>iOS Bundle Signing<ept id="p100">**</ept><ph id="ph93" /> under <bpt id="p101">**</bpt>Build<ept id="p101">**</ept>, and select the corresponding <bpt id="p102">**</bpt>Identity<ept id="p102">**</ept><ph id="ph94" /> and <bpt id="p103">**</bpt>Provisioning profile<ept id="p103">**</ept><ph id="ph95" /> you had just set up for this project.</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>This ensures that the Xamarin project uses the new profile for code signing.</source>
          <target state="new">This ensures that the Xamarin project uses the new profile for code signing.</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>For the official Xamarin device provisioning documentation, see <bpt id="p104">[</bpt><ept id="p104">Xamarin Device Provisioning]</ept>.</source>
          <target state="new">For the official Xamarin device provisioning documentation, see <bpt id="p104">[</bpt><ept id="p104">Xamarin Device Provisioning]</ept>.</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Add push notifications to your app</source>
          <target state="new">Add push notifications to your app</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>In Xamarin.Studio or Visual Studio, expand the <bpt id="p105">**</bpt>ToDoAzure.iOS<ept id="p105">**</ept><ph id="ph97" /> project, open the <bpt id="p106">**</bpt>AppDelegate<ept id="p106">**</ept><ph id="ph98" /> class, and then replace the <bpt id="p107">**</bpt>FinishedLaunching<ept id="p107">**</ept><ph id="ph99" /> event with the following code:</source>
          <target state="new">In Xamarin.Studio or Visual Studio, expand the <bpt id="p105">**</bpt>ToDoAzure.iOS<ept id="p105">**</ept><ph id="ph97" /> project, open the <bpt id="p106">**</bpt>AppDelegate<ept id="p106">**</ept><ph id="ph98" /> class, and then replace the <bpt id="p107">**</bpt>FinishedLaunching<ept id="p107">**</ept><ph id="ph99" /> event with the following code:</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>In <bpt id="p108">**</bpt>AppDelegate<ept id="p108">**</ept>, override the <bpt id="p109">**</bpt>RegisteredForRemoteNotifications<ept id="p109">**</ept><ph id="ph100" /> event:</source>
          <target state="new">In <bpt id="p108">**</bpt>AppDelegate<ept id="p108">**</ept>, override the <bpt id="p109">**</bpt>RegisteredForRemoteNotifications<ept id="p109">**</ept><ph id="ph100" /> event:</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>In <bpt id="p110">**</bpt>AppDelegate<ept id="p110">**</ept>, override the <bpt id="p111">**</bpt>ReceivedRemoteNotification<ept id="p111">**</ept><ph id="ph101" /> event:</source>
          <target state="new">In <bpt id="p110">**</bpt>AppDelegate<ept id="p110">**</ept>, override the <bpt id="p111">**</bpt>ReceivedRemoteNotification<ept id="p111">**</ept><ph id="ph101" /> event:</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Your app is now updated to support push notifications.</source>
          <target state="new">Your app is now updated to support push notifications.</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Update the registered insert script in the Azure classic portal</source>
          <target state="new">Update the registered insert script in the Azure classic portal</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>In the Azure classic portal, click the <bpt id="p112">**</bpt>Data<ept id="p112">**</ept><ph id="ph102" /> tab and then click the <bpt id="p113">**</bpt>TodoItem<ept id="p113">**</ept><ph id="ph103" /> table.</source>
          <target state="new">In the Azure classic portal, click the <bpt id="p112">**</bpt>Data<ept id="p112">**</ept><ph id="ph102" /> tab and then click the <bpt id="p113">**</bpt>TodoItem<ept id="p113">**</ept><ph id="ph103" /> table.</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>In <bpt id="p114">**</bpt>todoitem<ept id="p114">**</ept>, click the <bpt id="p115">**</bpt>Script<ept id="p115">**</ept><ph id="ph105" /> tab and select <bpt id="p116">**</bpt>Insert<ept id="p116">**</ept>.</source>
          <target state="new">In <bpt id="p114">**</bpt>todoitem<ept id="p114">**</ept>, click the <bpt id="p115">**</bpt>Script<ept id="p115">**</ept><ph id="ph105" /> tab and select <bpt id="p116">**</bpt>Insert<ept id="p116">**</ept>.</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>This displays the function that is invoked when an insert occurs in the <bpt id="p117">**</bpt>TodoItem<ept id="p117">**</ept><ph id="ph107" /> table.</source>
          <target state="new">This displays the function that is invoked when an insert occurs in the <bpt id="p117">**</bpt>TodoItem<ept id="p117">**</ept><ph id="ph107" /> table.</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Replace the insert function with the following code, and then click <bpt id="p118">**</bpt>Save<ept id="p118">**</ept>:</source>
          <target state="new">Replace the insert function with the following code, and then click <bpt id="p118">**</bpt>Save<ept id="p118">**</ept>:</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>This registers a new insert script, which sends a push notification (the inserted text) to the device provided in the insert request.</source>
          <target state="new">This registers a new insert script, which sends a push notification (the inserted text) to the device provided in the insert request.</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source><ph id="ph108">[AZURE.NOTE]</ph><ph id="ph109" /> This script delays sending the notification to give you time to close the app to receive a toast notification.</source>
          <target state="new"><ph id="ph108">[AZURE.NOTE]</ph><ph id="ph109" /> This script delays sending the notification to give you time to close the app to receive a toast notification.</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Test push notifications in your app</source>
          <target state="new">Test push notifications in your app</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Press the <bpt id="p119">**</bpt>Run<ept id="p119">**</ept><ph id="ph110" /> button to build the project and start the app in an iOS capable device, then click <bpt id="p120">**</bpt>OK<ept id="p120">**</ept><ph id="ph111" /> to accept push notifications</source>
          <target state="new">Press the <bpt id="p119">**</bpt>Run<ept id="p119">**</ept><ph id="ph110" /> button to build the project and start the app in an iOS capable device, then click <bpt id="p120">**</bpt>OK<ept id="p120">**</ept><ph id="ph111" /> to accept push notifications</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source><ph id="ph112">[AZURE.NOTE]</ph><ph id="ph113" /> You must explicitly accept push notifications from your app.</source>
          <target state="new"><ph id="ph112">[AZURE.NOTE]</ph><ph id="ph113" /> You must explicitly accept push notifications from your app.</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>This request only occurs the first time that the app runs.</source>
          <target state="new">This request only occurs the first time that the app runs.</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>In the app, click the <bpt id="p121">**</bpt>Add<ept id="p121">**</ept><ph id="ph114" /> button, add a task title and then click the <bpt id="p122">**</bpt>Save<ept id="p122">**</ept><ph id="ph115" /> button.</source>
          <target state="new">In the app, click the <bpt id="p121">**</bpt>Add<ept id="p121">**</ept><ph id="ph114" /> button, add a task title and then click the <bpt id="p122">**</bpt>Save<ept id="p122">**</ept><ph id="ph115" /> button.</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Verify that a notification is received, then click <bpt id="p123">**</bpt>OK<ept id="p123">**</ept><ph id="ph116" /> to dismiss the notification.</source>
          <target state="new">Verify that a notification is received, then click <bpt id="p123">**</bpt>OK<ept id="p123">**</ept><ph id="ph116" /> to dismiss the notification.</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>You have successfully completed this tutorial.</source>
          <target state="new">You have successfully completed this tutorial.</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Add push notifications to the Xamarin.Forms.Android app</source>
          <target state="new">Add push notifications to the Xamarin.Forms.Android app</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>You'll add push notifications to the Android app by using the Google Cloud Messaging (GCM) service.</source>
          <target state="new">You'll add push notifications to the Android app by using the Google Cloud Messaging (GCM) service.</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>You'll need an active Google account, and the <bpt id="p124">[</bpt><ept id="p124">Google Cloud Messaging Client Component]</ept>.</source>
          <target state="new">You'll need an active Google account, and the <bpt id="p124">[</bpt><ept id="p124">Google Cloud Messaging Client Component]</ept>.</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Enable Google Cloud Messaging</source>
          <target state="new">Enable Google Cloud Messaging</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Configure your mobile service to send push requests</source>
          <target state="new">Configure your mobile service to send push requests</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Update the registered insert script to send notifications</source>
          <target state="new">Update the registered insert script to send notifications</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source><ph id="ph119">[AZURE.NOTE]</ph><ph id="ph120" /> The following steps show you how to update the script registered to the insert operation on the TodoItem table in the Azure classic portal.</source>
          <target state="new"><ph id="ph119">[AZURE.NOTE]</ph><ph id="ph120" /> The following steps show you how to update the script registered to the insert operation on the TodoItem table in the Azure classic portal.</target>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>You can also access and edit this mobile service script directly in Visual Studio, in the Azure node of Server Explorer.</source>
          <target state="new">You can also access and edit this mobile service script directly in Visual Studio, in the Azure node of Server Explorer.</target>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p125">[</bpt><ept id="p125">Azure classic portal]</ept>, click the <bpt id="p126">**</bpt>Data<ept id="p126">**</ept><ph id="ph121" /> tab and then click the <bpt id="p127">**</bpt>TodoItem<ept id="p127">**</ept><ph id="ph122" /> table.</source>
          <target state="new">In the <bpt id="p125">[</bpt><ept id="p125">Azure classic portal]</ept>, click the <bpt id="p126">**</bpt>Data<ept id="p126">**</ept><ph id="ph121" /> tab and then click the <bpt id="p127">**</bpt>TodoItem<ept id="p127">**</ept><ph id="ph122" /> table.</target>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>In <bpt id="p128">**</bpt>todoitem<ept id="p128">**</ept>, click the <bpt id="p129">**</bpt>Script<ept id="p129">**</ept><ph id="ph124" /> tab and select <bpt id="p130">**</bpt>Insert<ept id="p130">**</ept>.</source>
          <target state="new">In <bpt id="p128">**</bpt>todoitem<ept id="p128">**</ept>, click the <bpt id="p129">**</bpt>Script<ept id="p129">**</ept><ph id="ph124" /> tab and select <bpt id="p130">**</bpt>Insert<ept id="p130">**</ept>.</target>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>This displays the function that is invoked when an insert occurs in the <bpt id="p131">**</bpt>TodoItem<ept id="p131">**</ept><ph id="ph126" /> table.</source>
          <target state="new">This displays the function that is invoked when an insert occurs in the <bpt id="p131">**</bpt>TodoItem<ept id="p131">**</ept><ph id="ph126" /> table.</target>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Replace the insert function with the following code, and then click <bpt id="p132">**</bpt>Save<ept id="p132">**</ept>:</source>
          <target state="new">Replace the insert function with the following code, and then click <bpt id="p132">**</bpt>Save<ept id="p132">**</ept>:</target>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>This registers a new insert script, which sends a push notification (the inserted text) to the device provided in the insert request.</source>
          <target state="new">This registers a new insert script, which sends a push notification (the inserted text) to the device provided in the insert request.</target>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source><ph id="ph127">[AZURE.NOTE]</ph><ph id="ph128" /> This script delays sending the notification to give you time to close the app to receive a toast notification.</source>
          <target state="new"><ph id="ph127">[AZURE.NOTE]</ph><ph id="ph128" /> This script delays sending the notification to give you time to close the app to receive a toast notification.</target>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Configure the existing project for push notifications</source>
          <target state="new">Configure the existing project for push notifications</target>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>In the Solution view, expand the <bpt id="p133">**</bpt>Components<ept id="p133">**</ept><ph id="ph129" /> folder in the Xamarin.Android app and make sure that Azure Mobile Services package is installed.</source>
          <target state="new">In the Solution view, expand the <bpt id="p133">**</bpt>Components<ept id="p133">**</ept><ph id="ph129" /> folder in the Xamarin.Android app and make sure that Azure Mobile Services package is installed.</target>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Right-click the <bpt id="p134">**</bpt>Components<ept id="p134">**</ept><ph id="ph130" /> folder, click  <bpt id="p135">**</bpt>Get More Components...<ept id="p135">**</ept>, search for the <bpt id="p136">**</bpt>Google Cloud Messaging Client<ept id="p136">**</ept><ph id="ph131" /> component and add it to the project.</source>
          <target state="new">Right-click the <bpt id="p134">**</bpt>Components<ept id="p134">**</ept><ph id="ph130" /> folder, click  <bpt id="p135">**</bpt>Get More Components...<ept id="p135">**</ept>, search for the <bpt id="p136">**</bpt>Google Cloud Messaging Client<ept id="p136">**</ept><ph id="ph131" /> component and add it to the project.</target>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Open the MainActivity.cs project file and add the following using statement to the class:</source>
          <target state="new">Open the MainActivity.cs project file and add the following using statement to the class:</target>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p137">**</bpt>MainActivity<ept id="p137">**</ept><ph id="ph132" /> class, add the following code to the <bpt id="p138">**</bpt>OnCreate<ept id="p138">**</ept><ph id="ph133" /> method, after the call to the <bpt id="p139">**</bpt>LoadApplication<ept id="p139">**</ept><ph id="ph134" /> method:</source>
          <target state="new">In the <bpt id="p137">**</bpt>MainActivity<ept id="p137">**</ept><ph id="ph132" /> class, add the following code to the <bpt id="p138">**</bpt>OnCreate<ept id="p138">**</ept><ph id="ph133" /> method, after the call to the <bpt id="p139">**</bpt>LoadApplication<ept id="p139">**</ept><ph id="ph134" /> method:</target>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Your <bpt id="p140">**</bpt>MainActivity<ept id="p140">**</ept><ph id="ph135" /> is now prepared for adding push notifications.</source>
          <target state="new">Your <bpt id="p140">**</bpt>MainActivity<ept id="p140">**</ept><ph id="ph135" /> is now prepared for adding push notifications.</target>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Add push notifications code to your app</source>
          <target state="new">Add push notifications code to your app</target>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>In the ToDoAzure.Droid project, create a new class in the project called <ph id="ph136">`GcmService`</ph>.</source>
          <target state="new">In the ToDoAzure.Droid project, create a new class in the project called <ph id="ph136">`GcmService`</ph>.</target>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Add the following using statements to <bpt id="p141">**</bpt>GcmService<ept id="p141">**</ept><ph id="ph137" /> class:</source>
          <target state="new">Add the following using statements to <bpt id="p141">**</bpt>GcmService<ept id="p141">**</ept><ph id="ph137" /> class:</target>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Add the following permission requests between the <bpt id="p142">**</bpt>using<ept id="p142">**</ept><ph id="ph138" /> statements and the <bpt id="p143">**</bpt>namespace<ept id="p143">**</ept><ph id="ph139" /> declaration:</source>
          <target state="new">Add the following permission requests between the <bpt id="p142">**</bpt>using<ept id="p142">**</ept><ph id="ph138" /> statements and the <bpt id="p143">**</bpt>namespace<ept id="p143">**</ept><ph id="ph139" /> declaration:</target>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p144">**</bpt>GcmService.cs<ept id="p144">**</ept><ph id="ph140" /> project file, add the following class:</source>
          <target state="new">In the <bpt id="p144">**</bpt>GcmService.cs<ept id="p144">**</ept><ph id="ph140" /> project file, add the following class:</target>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>In the above code, you must replace <bpt id="p145">_</bpt><ph id="ph141">`&lt;PROJECT_NUMBER&gt;`</ph><ept id="p145">_</ept><ph id="ph142" /> with the project number assigned by Google when you provisioned your app in the Google developer portal.</source>
          <target state="new">In the above code, you must replace <bpt id="p145">_</bpt><ph id="ph141">`&lt;PROJECT_NUMBER&gt;`</ph><ept id="p145">_</ept><ph id="ph142" /> with the project number assigned by Google when you provisioned your app in the Google developer portal.</target>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>In the GcmService.cs project file, add the following code that defines the <bpt id="p146">**</bpt>GcmService<ept id="p146">**</ept><ph id="ph143" /> class:</source>
          <target state="new">In the GcmService.cs project file, add the following code that defines the <bpt id="p146">**</bpt>GcmService<ept id="p146">**</ept><ph id="ph143" /> class:</target>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Note that this class derives from <bpt id="p147">**</bpt>GcmServiceBase<ept id="p147">**</ept><ph id="ph144" /> and that the <bpt id="p148">**</bpt>Service<ept id="p148">**</ept><ph id="ph145" /> attribute must be applied to this class.</source>
          <target state="new">Note that this class derives from <bpt id="p147">**</bpt>GcmServiceBase<ept id="p147">**</ept><ph id="ph144" /> and that the <bpt id="p148">**</bpt>Service<ept id="p148">**</ept><ph id="ph145" /> attribute must be applied to this class.</target>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source><ph id="ph146">[AZURE.NOTE]</ph>The <bpt id="p149">**</bpt>GcmServiceBase<ept id="p149">**</ept><ph id="ph147" /> class implements the <bpt id="p150">**</bpt>OnRegistered()<ept id="p150">**</ept>, <bpt id="p151">**</bpt>OnUnRegistered()<ept id="p151">**</ept>, <bpt id="p152">**</bpt>OnMessage()<ept id="p152">**</ept><ph id="ph148" /> and <bpt id="p153">**</bpt>OnError()<ept id="p153">**</ept><ph id="ph149" /> methods.</source>
          <target state="new"><ph id="ph146">[AZURE.NOTE]</ph>The <bpt id="p149">**</bpt>GcmServiceBase<ept id="p149">**</ept><ph id="ph147" /> class implements the <bpt id="p150">**</bpt>OnRegistered()<ept id="p150">**</ept>, <bpt id="p151">**</bpt>OnUnRegistered()<ept id="p151">**</ept>, <bpt id="p152">**</bpt>OnMessage()<ept id="p152">**</ept><ph id="ph148" /> and <bpt id="p153">**</bpt>OnError()<ept id="p153">**</ept><ph id="ph149" /> methods.</target>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>You must override these methods in the <bpt id="p154">**</bpt>GcmService<ept id="p154">**</ept><ph id="ph150" /> class.</source>
          <target state="new">You must override these methods in the <bpt id="p154">**</bpt>GcmService<ept id="p154">**</ept><ph id="ph150" /> class.</target>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Add the following code to the <bpt id="p155">**</bpt>GcmService<ept id="p155">**</ept><ph id="ph151" /> class that overrides the <bpt id="p156">**</bpt>OnRegistered<ept id="p156">**</ept><ph id="ph152" /> event handler.</source>
          <target state="new">Add the following code to the <bpt id="p155">**</bpt>GcmService<ept id="p155">**</ept><ph id="ph151" /> class that overrides the <bpt id="p156">**</bpt>OnRegistered<ept id="p156">**</ept><ph id="ph152" /> event handler.</target>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>This method uses the returned GCM registration ID to register with Azure for push notifications.</source>
          <target state="new">This method uses the returned GCM registration ID to register with Azure for push notifications.</target>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Override the <bpt id="p157">**</bpt>OnMessage<ept id="p157">**</ept><ph id="ph153" /> method in <bpt id="p158">**</bpt>GcmService<ept id="p158">**</ept><ph id="ph154" /> with the following code:</source>
          <target state="new">Override the <bpt id="p157">**</bpt>OnMessage<ept id="p157">**</ept><ph id="ph153" /> method in <bpt id="p158">**</bpt>GcmService<ept id="p158">**</ept><ph id="ph154" /> with the following code:</target>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Add the following method overrides for <bpt id="p159">**</bpt>OnUnRegistered()<ept id="p159">**</ept><ph id="ph155" /> and <bpt id="p160">**</bpt>OnError()<ept id="p160">**</ept>, which are required for the project to compile.</source>
          <target state="new">Add the following method overrides for <bpt id="p159">**</bpt>OnUnRegistered()<ept id="p159">**</ept><ph id="ph155" /> and <bpt id="p160">**</bpt>OnError()<ept id="p160">**</ept>, which are required for the project to compile.</target>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Test push notifications in your app</source>
          <target state="new">Test push notifications in your app</target>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>You can test the app by directly attaching an Android phone with a USB cable, or by using a virtual device in the emulator.</source>
          <target state="new">You can test the app by directly attaching an Android phone with a USB cable, or by using a virtual device in the emulator.</target>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>When you run this app in the emulator, make sure that you use an Android Virtual Device (AVD) that supports Google APIs.</source>
          <target state="new">When you run this app in the emulator, make sure that you use an Android Virtual Device (AVD) that supports Google APIs.</target>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source><ph id="ph156">[AZURE.IMPORTANT]</ph><ph id="ph157" /> In order to receive push notifications, you must set up a Google account on your Android Virtual Device (in the emulator, navigate to <bpt id="p161">**</bpt>Settings<ept id="p161">**</ept><ph id="ph158" /> and click <bpt id="p162">**</bpt>Add Account<ept id="p162">**</ept>).</source>
          <target state="new"><ph id="ph156">[AZURE.IMPORTANT]</ph><ph id="ph157" /> In order to receive push notifications, you must set up a Google account on your Android Virtual Device (in the emulator, navigate to <bpt id="p161">**</bpt>Settings<ept id="p161">**</ept><ph id="ph158" /> and click <bpt id="p162">**</bpt>Add Account<ept id="p162">**</ept>).</target>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Also, make sure that the emulator is connected to the Internet.</source>
          <target state="new">Also, make sure that the emulator is connected to the Internet.</target>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>From <bpt id="p163">**</bpt>Tools<ept id="p163">**</ept>, click <bpt id="p164">**</bpt>Open Android Emulator Manager<ept id="p164">**</ept>, select your device, and then click <bpt id="p165">**</bpt>Edit<ept id="p165">**</ept>.</source>
          <target state="new">From <bpt id="p163">**</bpt>Tools<ept id="p163">**</ept>, click <bpt id="p164">**</bpt>Open Android Emulator Manager<ept id="p164">**</ept>, select your device, and then click <bpt id="p165">**</bpt>Edit<ept id="p165">**</ept>.</target>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p166">**</bpt>Google APIs<ept id="p166">**</ept><ph id="ph160" /> in <bpt id="p167">**</bpt>Target<ept id="p167">**</ept>, then click <bpt id="p168">**</bpt>OK<ept id="p168">**</ept>.</source>
          <target state="new">Select <bpt id="p166">**</bpt>Google APIs<ept id="p166">**</ept><ph id="ph160" /> in <bpt id="p167">**</bpt>Target<ept id="p167">**</ept>, then click <bpt id="p168">**</bpt>OK<ept id="p168">**</ept>.</target>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>On the top toolbar, click <bpt id="p169">**</bpt>Run<ept id="p169">**</ept>, and then select your app.</source>
          <target state="new">On the top toolbar, click <bpt id="p169">**</bpt>Run<ept id="p169">**</ept>, and then select your app.</target>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>This starts the emulator and runs the app.</source>
          <target state="new">This starts the emulator and runs the app.</target>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>The app retrieves the <bpt id="p170">*</bpt>registrationId<ept id="p170">*</ept><ph id="ph162" /> from GCM and registers with the Notification Hub.</source>
          <target state="new">The app retrieves the <bpt id="p170">*</bpt>registrationId<ept id="p170">*</ept><ph id="ph162" /> from GCM and registers with the Notification Hub.</target>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>In the app, add a new task.</source>
          <target state="new">In the app, add a new task.</target>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Swipe down from the top of the screen to open the device's Notification Center to see the notification.</source>
          <target state="new">Swipe down from the top of the screen to open the device's Notification Center to see the notification.</target>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Add push notifications to the Xamarin.Forms.Windows app</source>
          <target state="new">Add push notifications to the Xamarin.Forms.Windows app</target>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>This section shows you how to use Azure Mobile Services to send push notifications to the Windows Phone Silverlight app that is included in your Xamarin.Forms solution.</source>
          <target state="new">This section shows you how to use Azure Mobile Services to send push notifications to the Windows Phone Silverlight app that is included in your Xamarin.Forms solution.</target>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Update the app to register for notifications</source>
          <target state="new">Update the app to register for notifications</target>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Before your app can receive push notifications, you must register a notification channel.</source>
          <target state="new">Before your app can receive push notifications, you must register a notification channel.</target>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>In Visual Studio, open the file App.xaml.cs and add the following <ph id="ph164">`using`</ph><ph id="ph165" /> statement:</source>
          <target state="new">In Visual Studio, open the file App.xaml.cs and add the following <ph id="ph164">`using`</ph><ph id="ph165" /> statement:</target>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Add the following to App.xaml.cs:</source>
          <target state="new">Add the following to App.xaml.cs:</target>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>This code retrieves the ChannelURI for the app from the Microsoft Push Notification Service (MPNS) used by Windows Phone 8.x "Silverlight", and then registers that ChannelURI for push notifications.</source>
          <target state="new">This code retrieves the ChannelURI for the app from the Microsoft Push Notification Service (MPNS) used by Windows Phone 8.x "Silverlight", and then registers that ChannelURI for push notifications.</target>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source><ph id="ph166">[AZURE.NOTE]</ph>In this this tutorial, the mobile service sends a toast notification to the device.</source>
          <target state="new"><ph id="ph166">[AZURE.NOTE]</ph>In this this tutorial, the mobile service sends a toast notification to the device.</target>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>When you send a tile notification, you must instead call the <bpt id="p171">**</bpt>BindToShellTile<ept id="p171">**</ept><ph id="ph167" /> method on the channel.</source>
          <target state="new">When you send a tile notification, you must instead call the <bpt id="p171">**</bpt>BindToShellTile<ept id="p171">**</ept><ph id="ph167" /> method on the channel.</target>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>At the top of the <bpt id="p172">**</bpt>Application_Launching<ept id="p172">**</ept><ph id="ph168" /> event handler in App.xaml.cs, add the following call to the new <bpt id="p173">**</bpt>AcquirePushChannel<ept id="p173">**</ept><ph id="ph169" /> method:</source>
          <target state="new">At the top of the <bpt id="p172">**</bpt>Application_Launching<ept id="p172">**</ept><ph id="ph168" /> event handler in App.xaml.cs, add the following call to the new <bpt id="p173">**</bpt>AcquirePushChannel<ept id="p173">**</ept><ph id="ph169" /> method:</target>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>This makes sure that registration is requested every time that the page is loaded.</source>
          <target state="new">This makes sure that registration is requested every time that the page is loaded.</target>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>In your app, you may only want to make this registration periodically to ensure that the registration is current.</source>
          <target state="new">In your app, you may only want to make this registration periodically to ensure that the registration is current.</target>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Press the <bpt id="p174">**</bpt>F5<ept id="p174">**</ept><ph id="ph170" /> key to run the app.</source>
          <target state="new">Press the <bpt id="p174">**</bpt>F5<ept id="p174">**</ept><ph id="ph170" /> key to run the app.</target>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>A popup dialog with the registration key is displayed.</source>
          <target state="new">A popup dialog with the registration key is displayed.</target>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>In the Solution Explorer, expand <bpt id="p175">**</bpt>Properties<ept id="p175">**</ept>, open the WMAppManifest.xml file, click the <bpt id="p176">**</bpt>Capabilities<ept id="p176">**</ept><ph id="ph171" /> tab and make sure that the <bpt id="p177">**</bpt>ID_CAP_PUSH_NOTIFICATION<ept id="p177">**</ept><ph id="ph172" /> capability is checked.</source>
          <target state="new">In the Solution Explorer, expand <bpt id="p175">**</bpt>Properties<ept id="p175">**</ept>, open the WMAppManifest.xml file, click the <bpt id="p176">**</bpt>Capabilities<ept id="p176">**</ept><ph id="ph171" /> tab and make sure that the <bpt id="p177">**</bpt>ID_CAP_PUSH_NOTIFICATION<ept id="p177">**</ept><ph id="ph172" /> capability is checked.</target>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source><ph id="ph173">![</ph>Enable notifications in VS<ph id="ph174">](./media/partner-xamarin-mobile-services-xamarin-forms-get-started-push/mobile-app-enable-push-wp8.png)</ph></source>
          <target state="new"><ph id="ph173">![</ph>Enable notifications in VS<ph id="ph174">](./media/partner-xamarin-mobile-services-xamarin-forms-get-started-push/mobile-app-enable-push-wp8.png)</ph></target>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>This makes sure that your app can raise toast notifications.</source>
          <target state="new">This makes sure that your app can raise toast notifications.</target>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>Update server scripts to send push notifications</source>
          <target state="new">Update server scripts to send push notifications</target>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Finally, you must update the script registered to the insert operation on the TodoItem table to send notifications.</source>
          <target state="new">Finally, you must update the script registered to the insert operation on the TodoItem table to send notifications.</target>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p178">[</bpt><ept id="p178">Azure classic portal]</ept>, click the <bpt id="p179">**</bpt>Data<ept id="p179">**</ept><ph id="ph175" /> tab and then click the <bpt id="p180">**</bpt>TodoItem<ept id="p180">**</ept><ph id="ph176" /> table.</source>
          <target state="new">In the <bpt id="p178">[</bpt><ept id="p178">Azure classic portal]</ept>, click the <bpt id="p179">**</bpt>Data<ept id="p179">**</ept><ph id="ph175" /> tab and then click the <bpt id="p180">**</bpt>TodoItem<ept id="p180">**</ept><ph id="ph176" /> table.</target>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>In <bpt id="p181">**</bpt>todoitem<ept id="p181">**</ept>, click the <bpt id="p182">**</bpt>Script<ept id="p182">**</ept><ph id="ph178" /> tab and select <bpt id="p183">**</bpt>Insert<ept id="p183">**</ept>.</source>
          <target state="new">In <bpt id="p181">**</bpt>todoitem<ept id="p181">**</ept>, click the <bpt id="p182">**</bpt>Script<ept id="p182">**</ept><ph id="ph178" /> tab and select <bpt id="p183">**</bpt>Insert<ept id="p183">**</ept>.</target>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>This displays the function that is invoked when an insert occurs in the <bpt id="p184">**</bpt>TodoItem<ept id="p184">**</ept><ph id="ph180" /> table.</source>
          <target state="new">This displays the function that is invoked when an insert occurs in the <bpt id="p184">**</bpt>TodoItem<ept id="p184">**</ept><ph id="ph180" /> table.</target>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>Replace the insert function with the following code, and then click <bpt id="p185">**</bpt>Save<ept id="p185">**</ept>:</source>
          <target state="new">Replace the insert function with the following code, and then click <bpt id="p185">**</bpt>Save<ept id="p185">**</ept>:</target>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>This registers a new insert script, which sends a push notification (the inserted text) to the device provided in the insert request.</source>
          <target state="new">This registers a new insert script, which sends a push notification (the inserted text) to the device provided in the insert request.</target>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p186">**</bpt>Push<ept id="p186">**</ept><ph id="ph181" /> tab, check <bpt id="p187">**</bpt>Enable unauthenticated push notifications<ept id="p187">**</ept>, then click <bpt id="p188">**</bpt>Save<ept id="p188">**</ept>.</source>
          <target state="new">Click the <bpt id="p186">**</bpt>Push<ept id="p186">**</ept><ph id="ph181" /> tab, check <bpt id="p187">**</bpt>Enable unauthenticated push notifications<ept id="p187">**</ept>, then click <bpt id="p188">**</bpt>Save<ept id="p188">**</ept>.</target>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>This enables the mobile service to connect to MPNS in unauthenticated mode to send push notifications.</source>
          <target state="new">This enables the mobile service to connect to MPNS in unauthenticated mode to send push notifications.</target>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source><ph id="ph182">[AZURE.NOTE]</ph>This tutorial uses MPNS in unauthenticated mode.</source>
          <target state="new"><ph id="ph182">[AZURE.NOTE]</ph>This tutorial uses MPNS in unauthenticated mode.</target>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>In this mode, MPNS limits the number of notifications that can be sent to a device channel.</source>
          <target state="new">In this mode, MPNS limits the number of notifications that can be sent to a device channel.</target>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>To remove this restriction, you must generate and upload a certificate by clicking <bpt id="p189">**</bpt>Upload<ept id="p189">**</ept><ph id="ph183" /> and selecting the certificate.</source>
          <target state="new">To remove this restriction, you must generate and upload a certificate by clicking <bpt id="p189">**</bpt>Upload<ept id="p189">**</ept><ph id="ph183" /> and selecting the certificate.</target>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>For more information on generating the certificate, see [Setting up an authenticated web service to send push notifications for Windows Phone].</source>
          <target state="new">For more information on generating the certificate, see [Setting up an authenticated web service to send push notifications for Windows Phone].</target>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Test push notifications in your app</source>
          <target state="new">Test push notifications in your app</target>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>In Visual Studio, press the F5 key to run the app.</source>
          <target state="new">In Visual Studio, press the F5 key to run the app.</target>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source><ph id="ph184">[AZURE.NOTE]</ph><ph id="ph185" /> You may encounter a 401 Unauthorized RegistrationAuthorizationException when testing on the Windows Phone emulator.</source>
          <target state="new"><ph id="ph184">[AZURE.NOTE]</ph><ph id="ph185" /> You may encounter a 401 Unauthorized RegistrationAuthorizationException when testing on the Windows Phone emulator.</target>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>This can occur during the <ph id="ph186">`RegisterNativeAsync()`</ph><ph id="ph187" /> call because of the way the Windows Phone emulator syncs it's clock with the host PC.</source>
          <target state="new">This can occur during the <ph id="ph186">`RegisterNativeAsync()`</ph><ph id="ph187" /> call because of the way the Windows Phone emulator syncs it's clock with the host PC.</target>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>It can result in a security token that will be rejected.</source>
          <target state="new">It can result in a security token that will be rejected.</target>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>To resolve this simply manually set the clock in the emulator before testing.</source>
          <target state="new">To resolve this simply manually set the clock in the emulator before testing.</target>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>In the app, create a new task with the title <bpt id="p190">**</bpt>Hello push<ept id="p190">**</ept>, then immediately click the start button or back button to leave the app.</source>
          <target state="new">In the app, create a new task with the title <bpt id="p190">**</bpt>Hello push<ept id="p190">**</ept>, then immediately click the start button or back button to leave the app.</target>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>This sends an insert request to the mobile service to store the added item.</source>
          <target state="new">This sends an insert request to the mobile service to store the added item.</target>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Notice that the device receives a toast notification that says <bpt id="p191">**</bpt>hello push<ept id="p191">**</ept>.</source>
          <target state="new">Notice that the device receives a toast notification that says <bpt id="p191">**</bpt>hello push<ept id="p191">**</ept>.</target>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source><ph id="ph188">![</ph>Toast notification received<ph id="ph189">](./media/partner-xamarin-mobile-services-xamarin-forms-get-started-push/mobile-quickstart-push5-wp8.png)</ph></source>
          <target state="new"><ph id="ph188">![</ph>Toast notification received<ph id="ph189">](./media/partner-xamarin-mobile-services-xamarin-forms-get-started-push/mobile-quickstart-push5-wp8.png)</ph></target>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source><ph id="ph190">[AZURE.NOTE]</ph>You will not receive the notification when you are still in the app.</source>
          <target state="new"><ph id="ph190">[AZURE.NOTE]</ph>You will not receive the notification when you are still in the app.</target>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>To receive a toast notification while the app is active, you must handle the <bpt id="p192">[</bpt>ShellToastNotificationReceived<ept id="p192">](http://msdn.microsoft.com/library/windowsphone/develop/microsoft.phone.notification.httpnotificationchannel.shelltoastnotificationreceived(v=vs.105).aspx)</ept><ph id="ph191" /> event.</source>
          <target state="new">To receive a toast notification while the app is active, you must handle the <bpt id="p192">[</bpt>ShellToastNotificationReceived<ept id="p192">](http://msdn.microsoft.com/library/windowsphone/develop/microsoft.phone.notification.httpnotificationchannel.shelltoastnotificationreceived(v=vs.105).aspx)</ept><ph id="ph191" /> event.</target>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>[Generate the certificate signing request]: #certificates
[Register your app and enable push notifications]: #register
[Create a provisioning profile for the app]: #profile
[Configure Mobile Services]: #configure-mobileServices
[Configure the Xamarin.iOS App]: #configure-app
[Update scripts to send push notifications]: #update-scripts
[Add push notifications to the app]: #add-push
[Insert data to receive notifications]: #test</source>
          <target state="new">[Generate the certificate signing request]: #certificates
[Register your app and enable push notifications]: #register
[Create a provisioning profile for the app]: #profile
[Configure Mobile Services]: #configure-mobileServices
[Configure the Xamarin.iOS App]: #configure-app
[Update scripts to send push notifications]: #update-scripts
[Add push notifications to the app]: #add-push
[Insert data to receive notifications]: #test</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">95da5eeeb7afae81ef61299fd84a1ba74e087741</xliffext:olfilehash>
  </header>
</xliff>