<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="fr-fr" original="foo.file" tool-id="0a061374-4f16-4ecc-841a-4c59ec6f8d80" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="0a061374-4f16-4ecc-841a-4c59ec6f8d80" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
      <olfilehash xmlns="">a7640c222d084ad8705adf3206cc238fc33ff331</olfilehash>
    </header>
    <body>
      <group id="64b16e0d-7919-4187-af14-1b37b0b7c47d">
        <trans-unit id="e0d0e1ba-d126-409b-96aa-5bb9c9d0b513" xml:space="preserve">
          <source>ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9</source>
          <target state="new">ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9</target>
        </trans-unit>
        <trans-unit id="ecd569a8-137a-4ccd-a79c-b44cd83bd620" xml:space="preserve">
          <source>title: PowerShell Snippets</source>
          <target state="new">title: PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="8eca0d49-891c-4ea1-8f94-23f30412f579" xml:space="preserve">
          <source>PowerShell Snippets</source>
          <target state="new">PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="54e3398f-46b6-41e8-8dc0-58f211e5e8b3" xml:space="preserve">
          <source>Adding this sentence to validate the bug 451132 result.</source>
          <target state="new">Adding this sentence to validate the bug 451132 result.</target>
        </trans-unit>
        <trans-unit id="f3499aa3-c69d-409f-958c-71a73b57b1ee" xml:space="preserve">
          <source>PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</source>
          <target state="new">PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</target>
        </trans-unit>
        <trans-unit id="489df5cd-19bd-44f3-8759-b0044ae01bc7" xml:space="preserve">
          <source>All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</source>
          <target state="new">All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</target>
        </trans-unit>
        <trans-unit id="300a32b9-ac81-41bf-bc6d-718590eaa657" xml:space="preserve">
          <source>If you aren't sure if you have the right permissions, type <bpt id="b46e50bc-6ecb-4219-bf51-74b007dc55d6">&lt;code&gt;</bpt>Get-VM<ept id="b46e50bc-6ecb-4219-bf51-74b007dc55d6">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</source>
          <target state="new">If you aren't sure if you have the right permissions, type <bpt id="b46e50bc-6ecb-4219-bf51-74b007dc55d6">&lt;code&gt;</bpt>Get-VM<ept id="b46e50bc-6ecb-4219-bf51-74b007dc55d6">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</target>
        </trans-unit>
        <trans-unit id="07ef1758-7b3c-4d57-bbba-946057065cfd" xml:space="preserve">
          <source>PowerShell Direct tools</source>
          <target state="new">PowerShell Direct tools</target>
        </trans-unit>
        <trans-unit id="b2e13bd5-2f10-4f79-b162-49916ea2c699" xml:space="preserve">
          <source>All of the scripts and snippets in this section will rely on the following basics.</source>
          <target state="new">All of the scripts and snippets in this section will rely on the following basics.</target>
        </trans-unit>
        <trans-unit id="4235b08e-0947-487e-86df-85aa0ee25523" xml:space="preserve">
          <source><bpt id="5d71686e-da64-4071-9501-6e99174a63dd">&lt;strong&gt;</bpt>Requirements<ept id="5d71686e-da64-4071-9501-6e99174a63dd">&lt;/strong&gt;</ept> :</source>
          <target state="new"><bpt id="5d71686e-da64-4071-9501-6e99174a63dd">&lt;strong&gt;</bpt>Requirements<ept id="5d71686e-da64-4071-9501-6e99174a63dd">&lt;/strong&gt;</ept> :</target>
        </trans-unit>
        <trans-unit id="a5a1e9f5-2d7e-4fc4-a05d-b93d42d6fbc8" xml:space="preserve">
          <source>PowerShell Direct.</source>
          <target state="new">PowerShell Direct.</target>
        </trans-unit>
        <trans-unit id="0daf91ef-afe4-4a25-9408-4fd1b0ed5ecd" xml:space="preserve">
          <source>Windows 10 guest and host OS.</source>
          <target state="new">Windows 10 guest and host OS.</target>
        </trans-unit>
        <trans-unit id="df5754eb-a59d-4962-a729-54bd24028aae" xml:space="preserve">
          <source><bpt id="208ab02e-7d89-487a-8442-583e9eaa8029">&lt;strong&gt;</bpt>Common Variables<ept id="208ab02e-7d89-487a-8442-583e9eaa8029">&lt;/strong&gt;</ept> :</source>
          <target state="new"><bpt id="208ab02e-7d89-487a-8442-583e9eaa8029">&lt;strong&gt;</bpt>Common Variables<ept id="208ab02e-7d89-487a-8442-583e9eaa8029">&lt;/strong&gt;</ept> :</target>
        </trans-unit>
        <trans-unit id="a59ae5ff-3893-464f-9048-34849fd659f0" xml:space="preserve">
          <source><bpt id="93984771-56c6-4606-be7a-2b03ad5606a3">&lt;code&gt;</bpt>$VMName<ept id="93984771-56c6-4606-be7a-2b03ad5606a3">&lt;/code&gt;</ept> -- this is a string with the VMName.</source>
          <target state="new"><bpt id="93984771-56c6-4606-be7a-2b03ad5606a3">&lt;code&gt;</bpt>$VMName<ept id="93984771-56c6-4606-be7a-2b03ad5606a3">&lt;/code&gt;</ept> -- this is a string with the VMName.</target>
        </trans-unit>
        <trans-unit id="8e75716c-19bc-4d29-b64f-36de917b9921" xml:space="preserve">
          <source>See a list of available VMs with <bpt id="1270f02f-4cf8-4655-a629-0f895575fd90">&lt;code&gt;</bpt>Get-VM<ept id="1270f02f-4cf8-4655-a629-0f895575fd90">&lt;/code&gt;</ept></source>
          <target state="new">See a list of available VMs with <bpt id="1270f02f-4cf8-4655-a629-0f895575fd90">&lt;code&gt;</bpt>Get-VM<ept id="1270f02f-4cf8-4655-a629-0f895575fd90">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="8cc16216-ee8b-48ed-bc7b-a8777272e36b" xml:space="preserve">
          <source><bpt id="586227ec-34d8-4a7d-8fdd-57c752fff753">&lt;code&gt;</bpt>$cred<ept id="586227ec-34d8-4a7d-8fdd-57c752fff753">&lt;/code&gt;</ept> -- Credential for the guest OS.</source>
          <target state="new"><bpt id="586227ec-34d8-4a7d-8fdd-57c752fff753">&lt;code&gt;</bpt>$cred<ept id="586227ec-34d8-4a7d-8fdd-57c752fff753">&lt;/code&gt;</ept> -- Credential for the guest OS.</target>
        </trans-unit>
        <trans-unit id="b13f4d41-aaa2-42a1-ae0e-2f7dcaf91441" xml:space="preserve">
          <source>Can be populated using <bpt id="c555a610-9e0e-41ad-a2aa-29c12e20aa1b">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="c555a610-9e0e-41ad-a2aa-29c12e20aa1b">&lt;/code&gt;</ept></source>
          <target state="new">Can be populated using <bpt id="c555a610-9e0e-41ad-a2aa-29c12e20aa1b">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="c555a610-9e0e-41ad-a2aa-29c12e20aa1b">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="6bdd9b5d-3b94-499d-89a6-a53c4d152f08" xml:space="preserve">
          <source>Check if the guest has booted</source>
          <target state="new">Check if the guest has booted</target>
        </trans-unit>
        <trans-unit id="629774d0-0ceb-4e5a-a2ff-4ec8acb706dd" xml:space="preserve">
          <source>Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</source>
          <target state="new">Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</target>
        </trans-unit>
        <trans-unit id="a961408b-391a-4a4f-9614-7f9a55858687" xml:space="preserve">
          <source>Use this command to check whether the guest has booted.</source>
          <target state="new">Use this command to check whether the guest has booted.</target>
        </trans-unit>
        <trans-unit id="46e987e1-a77e-4a4e-b4c3-ad1c4249d047" xml:space="preserve">
          <source><bpt id="def16785-86f4-4fa5-aab9-cc13c02f800d">&lt;strong&gt;</bpt>Outcome<ept id="def16785-86f4-4fa5-aab9-cc13c02f800d">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="def16785-86f4-4fa5-aab9-cc13c02f800d">&lt;strong&gt;</bpt>Outcome<ept id="def16785-86f4-4fa5-aab9-cc13c02f800d">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="aeef7ddf-49ea-47ad-aaaf-18e12d6ccc5b" xml:space="preserve">
          <source>Prints a friendly message declaring the state of the guest OS.</source>
          <target state="new">Prints a friendly message declaring the state of the guest OS.</target>
        </trans-unit>
        <trans-unit id="e0656a16-37ac-4177-a70d-6f29ef103ba6" xml:space="preserve">
          <source>Script locking until the guest has booted</source>
          <target state="new">Script locking until the guest has booted</target>
        </trans-unit>
        <trans-unit id="569a50d0-845a-4020-b9d0-a64d7208fb8b" xml:space="preserve">
          <source>The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</source>
          <target state="new">The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</target>
        </trans-unit>
        <trans-unit id="09e7dcee-3079-4b0b-b97b-53f1317fbb23" xml:space="preserve">
          <source><bpt id="87463d33-bade-49fc-a3b2-534640cde4d6">&lt;strong&gt;</bpt>Outcome<ept id="87463d33-bade-49fc-a3b2-534640cde4d6">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="87463d33-bade-49fc-a3b2-534640cde4d6">&lt;strong&gt;</bpt>Outcome<ept id="87463d33-bade-49fc-a3b2-534640cde4d6">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="40d7b59b-c2ba-4e21-91c7-3984552e4c33" xml:space="preserve">
          <source>Prints a friendly message and locks until the connection to the VM succeeds.</source>
          <target state="new">Prints a friendly message and locks until the connection to the VM succeeds.</target>
        </trans-unit>
        <trans-unit id="fef85e89-f4c1-4004-be8a-22fea8c0eab7" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="2e94de52-6c2e-428a-80f3-76ea599b3221" xml:space="preserve">
          <source>Script locking until the guest has a network</source>
          <target state="new">Script locking until the guest has a network</target>
        </trans-unit>
        <trans-unit id="a205cedd-8a1d-4eb8-9eae-266a7ef7088b" xml:space="preserve">
          <source>With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</source>
          <target state="new">With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</target>
        </trans-unit>
        <trans-unit id="05d0395b-af5c-494e-9f33-6dcf3ca2d3c9" xml:space="preserve">
          <source><bpt id="d0fdaa75-a912-4b13-b6a5-b6b12892a296">&lt;em&gt;</bpt>* Outcome *<ept id="d0fdaa75-a912-4b13-b6a5-b6b12892a296">&lt;/em&gt;</ept></source>
          <target state="new"><bpt id="d0fdaa75-a912-4b13-b6a5-b6b12892a296">&lt;em&gt;</bpt>* Outcome *<ept id="d0fdaa75-a912-4b13-b6a5-b6b12892a296">&lt;/em&gt;</ept></target>
        </trans-unit>
        <trans-unit id="bebdebbf-d89b-462c-bb3e-6f4a19b52214" xml:space="preserve">
          <source>Locks until a DHCP lease is recieved.</source>
          <target state="new">Locks until a DHCP lease is recieved.</target>
        </trans-unit>
        <trans-unit id="68ee8c2d-44a9-44d7-8ff1-0a5a29977a7a" xml:space="preserve">
          <source>Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</source>
          <target state="new">Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</target>
        </trans-unit>
        <trans-unit id="9929446e-3056-47f8-9f86-691e4cc260e8" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="2c383d79-36dc-412d-9d3e-1872a86b706d" xml:space="preserve">
          <source>Managing credentials with PowerShell</source>
          <target state="new">Managing credentials with PowerShell</target>
        </trans-unit>
        <trans-unit id="fe34ad86-8c6d-4657-82a1-80f5671fdf54" xml:space="preserve">
          <source>Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</source>
          <target state="new">Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</target>
        </trans-unit>
        <trans-unit id="0f2b2163-c20b-43d4-be4b-1d8b8521ea70" xml:space="preserve">
          <source>There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</source>
          <target state="new">There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</target>
        </trans-unit>
        <trans-unit id="f52d03e0-876a-4cc8-96ba-480e75813057" xml:space="preserve">
          <source>The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</source>
          <target state="new">The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</target>
        </trans-unit>
        <trans-unit id="22eb90db-1485-4252-981a-0a8a5c0e7f2e" xml:space="preserve">
          <source>This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</source>
          <target state="new">This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</target>
        </trans-unit>
        <trans-unit id="61fd3a12-495a-473f-beb6-2a5c66ba831e" xml:space="preserve">
          <source>In this scenario you can just run <bpt id="29ae65ac-c72c-4c0f-8e7a-537850d76464">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="29ae65ac-c72c-4c0f-8e7a-537850d76464">&lt;/code&gt;</ept>.</source>
          <target state="new">In this scenario you can just run <bpt id="29ae65ac-c72c-4c0f-8e7a-537850d76464">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="29ae65ac-c72c-4c0f-8e7a-537850d76464">&lt;/code&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="c96549a9-a3b4-4f7d-b023-58d7ba7697c4" xml:space="preserve">
          <source>Let PowerShell prompt you for credentials</source>
          <target state="new">Let PowerShell prompt you for credentials</target>
        </trans-unit>
        <trans-unit id="ba8f042b-04d3-4cb8-9cb7-2d96c1354e18" xml:space="preserve">
          <source>If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</source>
          <target state="new">If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</target>
        </trans-unit>
        <trans-unit id="4122319f-8d40-4398-966c-416ce33a00c4" xml:space="preserve">
          <source>Store credentials in a variable for reuse.</source>
          <target state="new">Store credentials in a variable for reuse.</target>
        </trans-unit>
        <trans-unit id="02060181-5bc8-4933-a9ba-ecfe5486520f" xml:space="preserve">
          <source>Running a simple command like this:</source>
          <target state="new">Running a simple command like this:</target>
        </trans-unit>
        <trans-unit id="7d8d07f1-d345-4590-a342-c6ae9b89d71a" xml:space="preserve">
          <source>And then running something like this:</source>
          <target state="new">And then running something like this:</target>
        </trans-unit>
        <trans-unit id="f56895db-9bdb-4a13-a63b-a8b1faaed805" xml:space="preserve">
          <source>Will mean that you only get prompted once per script/PowerShell session for your credentials.</source>
          <target state="new">Will mean that you only get prompted once per script/PowerShell session for your credentials.</target>
        </trans-unit>
        <trans-unit id="4332e5c9-ec24-43a5-8f18-23c284cd68a9" xml:space="preserve">
          <source>Code your credentials into your scripts.</source>
          <target state="new">Code your credentials into your scripts.</target>
        </trans-unit>
        <trans-unit id="d081cf55-a9bc-49c0-8ed3-bdfc36b8a181" xml:space="preserve">
          <source><bpt id="fceede9c-7400-4657-a66c-ccbd85f00b66">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="fceede9c-7400-4657-a66c-ccbd85f00b66">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="fceede9c-7400-4657-a66c-ccbd85f00b66">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="fceede9c-7400-4657-a66c-ccbd85f00b66">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="80748dbd-811c-4108-8354-fc86f851223c" xml:space="preserve">
          <source>Warning:  _Do not do this in a production system.</source>
          <target state="new">Warning:  _Do not do this in a production system.</target>
        </trans-unit>
        <trans-unit id="e634917a-d850-43a9-a29f-37f7235e6554" xml:space="preserve">
          <source>Do not do this with real passwords._</source>
          <target state="new">Do not do this with real passwords._</target>
        </trans-unit>
        <trans-unit id="c8a689e6-8d1f-4ec2-b58e-956eb8e31ce5" xml:space="preserve">
          <source>You can hand craft a PSCredential object with some code like this:</source>
          <target state="new">You can hand craft a PSCredential object with some code like this:</target>
        </trans-unit>
        <trans-unit id="e69d6455-d480-4b47-9509-232acbca5c9c" xml:space="preserve">
          <source>Grossly insecure - but useful for testing.</source>
          <target state="new">Grossly insecure - but useful for testing.</target>
        </trans-unit>
        <trans-unit id="bce0b5aa-817f-4326-a36c-5ad435869045" xml:space="preserve">
          <source>Now you get no prompts at all in this session.</source>
          <target state="new">Now you get no prompts at all in this session.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>