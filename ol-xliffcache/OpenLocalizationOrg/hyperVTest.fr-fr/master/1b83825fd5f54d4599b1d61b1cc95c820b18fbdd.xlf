<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-US" target-language="fr-fr">
    <body>
      <group id="main" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Use Azure Event Hubs with Apache Spark in HDInsight to process streaming data | Microsoft Azure</source>
          <target state="new">Use Azure Event Hubs with Apache Spark in HDInsight to process streaming data | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Step-by-step instructions on how to send a data stream to Azure Event Hub and then receive those events in Spark using a Zeppelin notebook</source>
          <target state="new">Step-by-step instructions on how to send a data stream to Azure Event Hub and then receive those events in Spark using a Zeppelin notebook</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Spark Streaming: Process events from Azure Event Hubs with Apache Spark on HDInsight (Windows)</source>
          <target state="new">Spark Streaming: Process events from Azure Event Hubs with Apache Spark on HDInsight (Windows)</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source><ph id="ph2">[AZURE.NOTE]</ph><ph id="ph3" /> HDInsight now provides Spark clusters on Linux.</source>
          <target state="new"><ph id="ph2">[AZURE.NOTE]</ph><ph id="ph3" /> HDInsight now provides Spark clusters on Linux.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For information on how to run a streaming application on HDInsight Spark Linux clusters, see <bpt id="p1">[</bpt>Spark Streaming: Process events from Azure Event Hubs with Apache Spark on HDInsight (Linux)<ept id="p1">](hdinsight-apache-spark-eventhub-streaming.md)</ept>.</source>
          <target state="new">For information on how to run a streaming application on HDInsight Spark Linux clusters, see <bpt id="p1">[</bpt>Spark Streaming: Process events from Azure Event Hubs with Apache Spark on HDInsight (Linux)<ept id="p1">](hdinsight-apache-spark-eventhub-streaming.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Spark Streaming extends the core Spark API to build scalable, high-throughput, fault-tolerant stream processing applications.</source>
          <target state="new">Spark Streaming extends the core Spark API to build scalable, high-throughput, fault-tolerant stream processing applications.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Data can be ingested from many sources.</source>
          <target state="new">Data can be ingested from many sources.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>In this article we use Event Hubs to ingest data.</source>
          <target state="new">In this article we use Event Hubs to ingest data.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Event Hubs is a highly scalable ingestion system that can intake millions of events per second.</source>
          <target state="new">Event Hubs is a highly scalable ingestion system that can intake millions of events per second.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>In this tutorial, you will learn how to create an Azure Event Hub, how to ingest messages into an Event Hub using a console application in C#, and to retrieve them in parallel using a Zeppelin notebook configured for Apache Spark in HDInsight.</source>
          <target state="new">In this tutorial, you will learn how to create an Azure Event Hub, how to ingest messages into an Event Hub using a console application in C#, and to retrieve them in parallel using a Zeppelin notebook configured for Apache Spark in HDInsight.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><ph id="ph4">[AZURE.NOTE]</ph><ph id="ph5" /> To follow the instructions in this article, you will have to use both versions of the Azure portal.</source>
          <target state="new"><ph id="ph4">[AZURE.NOTE]</ph><ph id="ph5" /> To follow the instructions in this article, you will have to use both versions of the Azure portal.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To create an Event Hub you will use the <bpt id="p2">[</bpt>Azure portal<ept id="p2">](https://manage.windowsazure.com)</ept>.</source>
          <target state="new">To create an Event Hub you will use the <bpt id="p2">[</bpt>Azure portal<ept id="p2">](https://manage.windowsazure.com)</ept>.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>To work with the HDInsight Spark cluster, you will use the <bpt id="p3">[</bpt>Azure Preview Portal<ept id="p3">](https://ms.portal.azure.com/)</ept>.</source>
          <target state="new">To work with the HDInsight Spark cluster, you will use the <bpt id="p3">[</bpt>Azure Preview Portal<ept id="p3">](https://ms.portal.azure.com/)</ept>.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p4">**</bpt>Prerequisites:<ept id="p4">**</ept></source>
          <target state="new"><bpt id="p4">**</bpt>Prerequisites:<ept id="p4">**</ept></target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>You must have the following:</source>
          <target state="new">You must have the following:</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>An Azure subscription.</source>
          <target state="new">An Azure subscription.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>See <bpt id="p5">[</bpt>Get Azure free trial<ept id="p5">](https://azure.microsoft.com/documentation/videos/get-azure-free-trial-for-testing-hadoop-in-hdinsight/)</ept>.</source>
          <target state="new">See <bpt id="p5">[</bpt>Get Azure free trial<ept id="p5">](https://azure.microsoft.com/documentation/videos/get-azure-free-trial-for-testing-hadoop-in-hdinsight/)</ept>.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>An Apache Spark cluster.</source>
          <target state="new">An Apache Spark cluster.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For instructions, see <bpt id="p6">[</bpt>Create Apache Spark clusters in Azure HDInsight<ept id="p6">](hdinsight-apache-spark-provision-clusters.md)</ept>.</source>
          <target state="new">For instructions, see <bpt id="p6">[</bpt>Create Apache Spark clusters in Azure HDInsight<ept id="p6">](hdinsight-apache-spark-provision-clusters.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>An <bpt id="p7">[</bpt>Azure Event Hub<ept id="p7">](../event-hubs/event-hubs-csharp-ephcs-getstarted.md)</ept>.</source>
          <target state="new">An <bpt id="p7">[</bpt>Azure Event Hub<ept id="p7">](../event-hubs/event-hubs-csharp-ephcs-getstarted.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A workstation with Microsoft Visual Studio 2013.</source>
          <target state="new">A workstation with Microsoft Visual Studio 2013.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For instructions, see <bpt id="p8">[</bpt>Install Visual Studio<ept id="p8">](https://msdn.microsoft.com/library/e2h7fzkw.aspx)</ept>.</source>
          <target state="new">For instructions, see <bpt id="p8">[</bpt>Install Visual Studio<ept id="p8">](https://msdn.microsoft.com/library/e2h7fzkw.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Create Azure Event Hub</source>
          <target state="new">Create Azure Event Hub</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>From the <bpt id="p9">[</bpt>Azure portal<ept id="p9">](https://manage.windowsazure.com)</ept>, select <bpt id="p10">**</bpt>NEW<ept id="p10">**</ept><ph id="ph6" /> &gt; <bpt id="p11">**</bpt>Service Bus<ept id="p11">**</ept><ph id="ph7" /> &gt; <bpt id="p12">**</bpt>Event Hub<ept id="p12">**</ept><ph id="ph8" /> &gt; <bpt id="p13">**</bpt>Custom Create<ept id="p13">**</ept>.</source>
          <target state="new">From the <bpt id="p9">[</bpt>Azure portal<ept id="p9">](https://manage.windowsazure.com)</ept>, select <bpt id="p10">**</bpt>NEW<ept id="p10">**</ept><ph id="ph6" /> &gt; <bpt id="p11">**</bpt>Service Bus<ept id="p11">**</ept><ph id="ph7" /> &gt; <bpt id="p12">**</bpt>Event Hub<ept id="p12">**</ept><ph id="ph8" /> &gt; <bpt id="p13">**</bpt>Custom Create<ept id="p13">**</ept>.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p14">**</bpt>Add a new Event Hub<ept id="p14">**</ept><ph id="ph9" /> screen, enter an <bpt id="p15">**</bpt>Event Hub Name<ept id="p15">**</ept>, select the <bpt id="p16">**</bpt>Region<ept id="p16">**</ept><ph id="ph10" /> to create the hub in, and create a new namespace or select an existing one.</source>
          <target state="new">On the <bpt id="p14">**</bpt>Add a new Event Hub<ept id="p14">**</ept><ph id="ph9" /> screen, enter an <bpt id="p15">**</bpt>Event Hub Name<ept id="p15">**</ept>, select the <bpt id="p16">**</bpt>Region<ept id="p16">**</ept><ph id="ph10" /> to create the hub in, and create a new namespace or select an existing one.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p17">**</bpt>Arrow<ept id="p17">**</ept><ph id="ph11" /> to continue.</source>
          <target state="new">Click the <bpt id="p17">**</bpt>Arrow<ept id="p17">**</ept><ph id="ph11" /> to continue.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><ph id="ph12">![</ph>wizard page 1<ph id="ph13">](./media/hdinsight-apache-spark-csharp-apache-zeppelin-eventhub-streaming/hdispark.streaming.create.event.hub.png "Create an Azure Event Hub")</ph></source>
          <target state="new"><ph id="ph12">![</ph>wizard page 1<ph id="ph13">](./media/hdinsight-apache-spark-csharp-apache-zeppelin-eventhub-streaming/hdispark.streaming.create.event.hub.png "Create an Azure Event Hub")</ph></target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><ph id="ph14">[AZURE.NOTE]</ph><ph id="ph15" /> You should select the same <bpt id="p18">**</bpt>Location<ept id="p18">**</ept><ph id="ph16" /> as your Apache Spark cluster in HDInsight to reduce latency and costs.</source>
          <target state="new"><ph id="ph14">[AZURE.NOTE]</ph><ph id="ph15" /> You should select the same <bpt id="p18">**</bpt>Location<ept id="p18">**</ept><ph id="ph16" /> as your Apache Spark cluster in HDInsight to reduce latency and costs.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p19">**</bpt>Configure Event Hub<ept id="p19">**</ept><ph id="ph17" /> screen, enter the <bpt id="p20">**</bpt>Partition count<ept id="p20">**</ept><ph id="ph18" /> and <bpt id="p21">**</bpt>Message Retention<ept id="p21">**</ept><ph id="ph19" /> values, and then click the check mark.</source>
          <target state="new">On the <bpt id="p19">**</bpt>Configure Event Hub<ept id="p19">**</ept><ph id="ph17" /> screen, enter the <bpt id="p20">**</bpt>Partition count<ept id="p20">**</ept><ph id="ph18" /> and <bpt id="p21">**</bpt>Message Retention<ept id="p21">**</ept><ph id="ph19" /> values, and then click the check mark.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For this example, use a partition count of 10 and a message retention of 1.</source>
          <target state="new">For this example, use a partition count of 10 and a message retention of 1.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Note the partition count because you will need this value later.</source>
          <target state="new">Note the partition count because you will need this value later.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><ph id="ph20">![</ph>wizard page 2<ph id="ph21">](./media/hdinsight-apache-spark-csharp-apache-zeppelin-eventhub-streaming/hdispark.streaming.create.event.hub2.png "Specify partition size and retention days for Event Hub")</ph></source>
          <target state="new"><ph id="ph20">![</ph>wizard page 2<ph id="ph21">](./media/hdinsight-apache-spark-csharp-apache-zeppelin-eventhub-streaming/hdispark.streaming.create.event.hub2.png "Specify partition size and retention days for Event Hub")</ph></target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Click the Event Hub that you created, click <bpt id="p22">**</bpt>Configure<ept id="p22">**</ept>, and then create two access policies for the event hub.</source>
          <target state="new">Click the Event Hub that you created, click <bpt id="p22">**</bpt>Configure<ept id="p22">**</ept>, and then create two access policies for the event hub.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><ph id="ph22">&lt;table&gt;</ph><ph id="ph23">
 &lt;tr&gt;</ph><ph id="ph24">&lt;th&gt;</ph>Name<ph id="ph25">&lt;/th&gt;</ph><ph id="ph26">&lt;th&gt;</ph>Permissions<ph id="ph27">&lt;/th&gt;</ph><ph id="ph28">&lt;/tr&gt;</ph><ph id="ph29">
 &lt;tr&gt;</ph><ph id="ph30">&lt;td&gt;</ph>mysendpolicy<ph id="ph31">&lt;/td&gt;</ph><ph id="ph32">&lt;td&gt;</ph>Send<ph id="ph33">&lt;/td&gt;</ph><ph id="ph34">&lt;/tr&gt;</ph><ph id="ph35">
 &lt;tr&gt;</ph><ph id="ph36">&lt;td&gt;</ph>myreceivepolicy<ph id="ph37">&lt;/td&gt;</ph><ph id="ph38">&lt;td&gt;</ph>Listen<ph id="ph39">&lt;/td&gt;</ph><ph id="ph40">&lt;/tr&gt;</ph><ph id="ph41">
 &lt;/table&gt;</ph></source>
          <target state="new"><ph id="ph22">&lt;table&gt;</ph><ph id="ph23">
 &lt;tr&gt;</ph><ph id="ph24">&lt;th&gt;</ph>Name<ph id="ph25">&lt;/th&gt;</ph><ph id="ph26">&lt;th&gt;</ph>Permissions<ph id="ph27">&lt;/th&gt;</ph><ph id="ph28">&lt;/tr&gt;</ph><ph id="ph29">
 &lt;tr&gt;</ph><ph id="ph30">&lt;td&gt;</ph>mysendpolicy<ph id="ph31">&lt;/td&gt;</ph><ph id="ph32">&lt;td&gt;</ph>Send<ph id="ph33">&lt;/td&gt;</ph><ph id="ph34">&lt;/tr&gt;</ph><ph id="ph35">
 &lt;tr&gt;</ph><ph id="ph36">&lt;td&gt;</ph>myreceivepolicy<ph id="ph37">&lt;/td&gt;</ph><ph id="ph38">&lt;td&gt;</ph>Listen<ph id="ph39">&lt;/td&gt;</ph><ph id="ph40">&lt;/tr&gt;</ph><ph id="ph41">
 &lt;/table&gt;</ph></target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>After You create the permissions, select the <bpt id="p23">**</bpt>Save<ept id="p23">**</ept><ph id="ph42" /> icon at the bottom of the page.</source>
          <target state="new">After You create the permissions, select the <bpt id="p23">**</bpt>Save<ept id="p23">**</ept><ph id="ph42" /> icon at the bottom of the page.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>This creates the shared access policies that will be used to send (<bpt id="p24">**</bpt>mysendpolicy<ept id="p24">**</ept>) and listen (<bpt id="p25">**</bpt>myreceivepolicy<ept id="p25">**</ept>) to this Event Hub.</source>
          <target state="new">This creates the shared access policies that will be used to send (<bpt id="p24">**</bpt>mysendpolicy<ept id="p24">**</ept>) and listen (<bpt id="p25">**</bpt>myreceivepolicy<ept id="p25">**</ept>) to this Event Hub.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><ph id="ph43">![</ph>policies<ph id="ph44">](./media/hdinsight-apache-spark-csharp-apache-zeppelin-eventhub-streaming/hdispark.streaming.event.hub.policies.png "Create Event Hub policies")</ph></source>
          <target state="new"><ph id="ph43">![</ph>policies<ph id="ph44">](./media/hdinsight-apache-spark-csharp-apache-zeppelin-eventhub-streaming/hdispark.streaming.event.hub.policies.png "Create Event Hub policies")</ph></target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>On the same page, take a note of the policy keys generated for the two policies.</source>
          <target state="new">On the same page, take a note of the policy keys generated for the two policies.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Save these keys because they will be used later.</source>
          <target state="new">Save these keys because they will be used later.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><ph id="ph45">![</ph>policy keys<ph id="ph46">](./media/hdinsight-apache-spark-csharp-apache-zeppelin-eventhub-streaming/hdispark.streaming.event.hub.policy.keys.png "Save policy keys")</ph></source>
          <target state="new"><ph id="ph45">![</ph>policy keys<ph id="ph46">](./media/hdinsight-apache-spark-csharp-apache-zeppelin-eventhub-streaming/hdispark.streaming.event.hub.policy.keys.png "Save policy keys")</ph></target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p26">**</bpt>Dashboard<ept id="p26">**</ept><ph id="ph47" /> page, click <bpt id="p27">**</bpt>Connection Information<ept id="p27">**</ept><ph id="ph48" /> from the bottom to retrieve and save the connection strings for the Event Hub using the two policies.</source>
          <target state="new">On the <bpt id="p26">**</bpt>Dashboard<ept id="p26">**</ept><ph id="ph47" /> page, click <bpt id="p27">**</bpt>Connection Information<ept id="p27">**</ept><ph id="ph48" /> from the bottom to retrieve and save the connection strings for the Event Hub using the two policies.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><ph id="ph49">![</ph>policy keys<ph id="ph50">](./media/hdinsight-apache-spark-csharp-apache-zeppelin-eventhub-streaming/hdispark.streaming.event.hub.policy.connection.strings.png "Save policy connection strings")</ph></source>
          <target state="new"><ph id="ph49">![</ph>policy keys<ph id="ph50">](./media/hdinsight-apache-spark-csharp-apache-zeppelin-eventhub-streaming/hdispark.streaming.event.hub.policy.connection.strings.png "Save policy connection strings")</ph></target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Receive messages in Spark on HDInsight using Zeppelin</source>
          <target state="new">Receive messages in Spark on HDInsight using Zeppelin</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>In this section, you create a <bpt id="p28">[</bpt>Zeppelin<ept id="p28">](https://zeppelin.incubator.apache.org)</ept><ph id="ph52" /> notebook to receive messages from the Event Hub into the Spark cluster in HDInsight.</source>
          <target state="new">In this section, you create a <bpt id="p28">[</bpt>Zeppelin<ept id="p28">](https://zeppelin.incubator.apache.org)</ept><ph id="ph52" /> notebook to receive messages from the Event Hub into the Spark cluster in HDInsight.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Allocating resources to Zeppelin for streaming application</source>
          <target state="new">Allocating resources to Zeppelin for streaming application</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>You must make the following considerations while creating a streaming application using Zeppelin:</source>
          <target state="new">You must make the following considerations while creating a streaming application using Zeppelin:</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p29">**</bpt>Event hub partitions and cores allocated to Zeppelin<ept id="p29">**</ept>.</source>
          <target state="new"><bpt id="p29">**</bpt>Event hub partitions and cores allocated to Zeppelin<ept id="p29">**</ept>.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>In the previous steps, you created an Event Hub with some partitions.</source>
          <target state="new">In the previous steps, you created an Event Hub with some partitions.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>In the Zeppelin streaming application you create below, you will specify the same number of partitions again.</source>
          <target state="new">In the Zeppelin streaming application you create below, you will specify the same number of partitions again.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>To successfully stream the data from Event Hub using Zeppelin, the number of cores you allocate to Zeppelin must be twice the number of partitions in Event Hub.</source>
          <target state="new">To successfully stream the data from Event Hub using Zeppelin, the number of cores you allocate to Zeppelin must be twice the number of partitions in Event Hub.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p30">**</bpt>Minimum number of cores to be allocated to Zeppelin<ept id="p30">**</ept>.</source>
          <target state="new"><bpt id="p30">**</bpt>Minimum number of cores to be allocated to Zeppelin<ept id="p30">**</ept>.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>In your streaming application that you create below, you create a temporary table where you store the messages that are streamed by your application.</source>
          <target state="new">In your streaming application that you create below, you create a temporary table where you store the messages that are streamed by your application.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>You then use a Spark SQL statement to read messages from this temporary table.</source>
          <target state="new">You then use a Spark SQL statement to read messages from this temporary table.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>To successfully run the Spark SQL statement, you must make sure that you at least have two cores allocated to Zeppelin.</source>
          <target state="new">To successfully run the Spark SQL statement, you must make sure that you at least have two cores allocated to Zeppelin.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>If you combine the two requirements above, this is what you get:</source>
          <target state="new">If you combine the two requirements above, this is what you get:</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The minimum number of cores you must allocate to Zeppelin is 2.</source>
          <target state="new">The minimum number of cores you must allocate to Zeppelin is 2.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The number of allocated cores must always be twice the number of partitions in Event Hub.</source>
          <target state="new">The number of allocated cores must always be twice the number of partitions in Event Hub.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>For instructions on how to allocate resources in a Spark cluster, see <bpt id="p31">[</bpt>Manage resources for the Apache Spark cluster in HDInsight<ept id="p31">](hdinsight-apache-spark-resource-manager-v1.md)</ept>.</source>
          <target state="new">For instructions on how to allocate resources in a Spark cluster, see <bpt id="p31">[</bpt>Manage resources for the Apache Spark cluster in HDInsight<ept id="p31">](hdinsight-apache-spark-resource-manager-v1.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Create a streaming application using Zeppelin</source>
          <target state="new">Create a streaming application using Zeppelin</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>From the <bpt id="p32">[</bpt>Azure Preview Portal<ept id="p32">](https://portal.azure.com/)</ept>, from the startboard, click the tile for your Spark cluster (if you pinned it to the startboard).</source>
          <target state="new">From the <bpt id="p32">[</bpt>Azure Preview Portal<ept id="p32">](https://portal.azure.com/)</ept>, from the startboard, click the tile for your Spark cluster (if you pinned it to the startboard).</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>You can also navigate to your cluster under <bpt id="p33">**</bpt>Browse All<ept id="p33">**</ept><ph id="ph53" /> &gt; <bpt id="p34">**</bpt>HDInsight Clusters<ept id="p34">**</ept>.</source>
          <target state="new">You can also navigate to your cluster under <bpt id="p33">**</bpt>Browse All<ept id="p33">**</ept><ph id="ph53" /> &gt; <bpt id="p34">**</bpt>HDInsight Clusters<ept id="p34">**</ept>.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>From the Spark cluster blade, click <bpt id="p35">**</bpt>Quick Links<ept id="p35">**</ept>, and then from the <bpt id="p36">**</bpt>Cluster Dashboard<ept id="p36">**</ept><ph id="ph54" /> blade, click <bpt id="p37">**</bpt>Zeppelin Notebook<ept id="p37">**</ept>.</source>
          <target state="new">From the Spark cluster blade, click <bpt id="p35">**</bpt>Quick Links<ept id="p35">**</ept>, and then from the <bpt id="p36">**</bpt>Cluster Dashboard<ept id="p36">**</ept><ph id="ph54" /> blade, click <bpt id="p37">**</bpt>Zeppelin Notebook<ept id="p37">**</ept>.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>If prompted, enter the admin credentials for the cluster.</source>
          <target state="new">If prompted, enter the admin credentials for the cluster.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><ph id="ph55">[AZURE.NOTE]</ph><ph id="ph56" /> You may also reach the Zeppelin Notebook for your cluster by opening the following URL in your browser.</source>
          <target state="new"><ph id="ph55">[AZURE.NOTE]</ph><ph id="ph56" /> You may also reach the Zeppelin Notebook for your cluster by opening the following URL in your browser.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Replace <bpt id="p38">__</bpt>CLUSTERNAME<ept id="p38">__</ept><ph id="ph57" /> with the name of your cluster:</source>
          <target state="new">Replace <bpt id="p38">__</bpt>CLUSTERNAME<ept id="p38">__</ept><ph id="ph57" /> with the name of your cluster:</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Create a new notebook.</source>
          <target state="new">Create a new notebook.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>From the header pane, click <bpt id="p39">**</bpt>Notebook<ept id="p39">**</ept>, and from the drop-down, click <bpt id="p40">**</bpt>Create New Note<ept id="p40">**</ept>.</source>
          <target state="new">From the header pane, click <bpt id="p39">**</bpt>Notebook<ept id="p39">**</ept>, and from the drop-down, click <bpt id="p40">**</bpt>Create New Note<ept id="p40">**</ept>.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><ph id="ph59">![</ph>Create a new Zeppelin notebook<ph id="ph60">](./media/hdinsight-apache-spark-csharp-apache-zeppelin-eventhub-streaming/hdispark.createnewnote.png "Create a new Zeppelin notebook")</ph></source>
          <target state="new"><ph id="ph59">![</ph>Create a new Zeppelin notebook<ph id="ph60">](./media/hdinsight-apache-spark-csharp-apache-zeppelin-eventhub-streaming/hdispark.createnewnote.png "Create a new Zeppelin notebook")</ph></target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>On the same page, under the <bpt id="p41">**</bpt>Notebook<ept id="p41">**</ept><ph id="ph61" /> heading, you should see a new notebook with the name starting with <bpt id="p42">**</bpt>Note XXXXXXXXX<ept id="p42">**</ept>.</source>
          <target state="new">On the same page, under the <bpt id="p41">**</bpt>Notebook<ept id="p41">**</ept><ph id="ph61" /> heading, you should see a new notebook with the name starting with <bpt id="p42">**</bpt>Note XXXXXXXXX<ept id="p42">**</ept>.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Click the new notebook.</source>
          <target state="new">Click the new notebook.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>On the web page for the new notebook, click the heading, and change the name of the notebook if you want to.</source>
          <target state="new">On the web page for the new notebook, click the heading, and change the name of the notebook if you want to.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Press ENTER to save the name change.</source>
          <target state="new">Press ENTER to save the name change.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Also, make sure the notebook header shows a <bpt id="p43">**</bpt>Connected<ept id="p43">**</ept><ph id="ph62" /> status in the top-right corner.</source>
          <target state="new">Also, make sure the notebook header shows a <bpt id="p43">**</bpt>Connected<ept id="p43">**</ept><ph id="ph62" /> status in the top-right corner.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><ph id="ph63">![</ph>Zeppelin notebook status<ph id="ph64">](./media/hdinsight-apache-spark-csharp-apache-zeppelin-eventhub-streaming/hdispark.newnote.connected.png "Zeppelin notebook status")</ph></source>
          <target state="new"><ph id="ph63">![</ph>Zeppelin notebook status<ph id="ph64">](./media/hdinsight-apache-spark-csharp-apache-zeppelin-eventhub-streaming/hdispark.newnote.connected.png "Zeppelin notebook status")</ph></target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>In the empty paragraph that is created by default in the new notebook, paste the following snippet and replace the placeholders to use your event hub configuration.</source>
          <target state="new">In the empty paragraph that is created by default in the new notebook, paste the following snippet and replace the placeholders to use your event hub configuration.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>In this snippet, you receive the stream from Event Hub and register the stream into a temporary table, called <bpt id="p44">**</bpt>mytemptable<ept id="p44">**</ept>.</source>
          <target state="new">In this snippet, you receive the stream from Event Hub and register the stream into a temporary table, called <bpt id="p44">**</bpt>mytemptable<ept id="p44">**</ept>.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>In the next section, we will start the sender application.</source>
          <target state="new">In the next section, we will start the sender application.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>You can then read the data directly from the table.</source>
          <target state="new">You can then read the data directly from the table.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><ph id="ph65">[AZURE.NOTE]</ph><ph id="ph66" /> In the snippet below, <bpt id="p45">**</bpt>eventhubs.checkpoint.dir<ept id="p45">**</ept><ph id="ph67" /> must be set to a directory in your default storage container.</source>
          <target state="new"><ph id="ph65">[AZURE.NOTE]</ph><ph id="ph66" /> In the snippet below, <bpt id="p45">**</bpt>eventhubs.checkpoint.dir<ept id="p45">**</ept><ph id="ph67" /> must be set to a directory in your default storage container.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>If the directory does not exist, the streamig application creates it.</source>
          <target state="new">If the directory does not exist, the streamig application creates it.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>You can either specify the full path to the directory like "<bpt id="p46">**</bpt>wasb://container@storageaccount.blob.core.windows.net/mycheckpointdir/<ept id="p46">**</ept>" or just the relative path to the directory, such as "<bpt id="p47">**</bpt>/mycheckpointdir<ept id="p47">**</ept>".</source>
          <target state="new">You can either specify the full path to the directory like "<bpt id="p46">**</bpt>wasb://container@storageaccount.blob.core.windows.net/mycheckpointdir/<ept id="p46">**</ept>" or just the relative path to the directory, such as "<bpt id="p47">**</bpt>/mycheckpointdir<ept id="p47">**</ept>".</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Run the applications</source>
          <target state="new">Run the applications</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>From the Zeppelin notebook, run the paragraph with the snippet.</source>
          <target state="new">From the Zeppelin notebook, run the paragraph with the snippet.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Press <bpt id="p48">**</bpt>SHIFT + ENTER<ept id="p48">**</ept><ph id="ph68" /> or the <bpt id="p49">**</bpt>Play<ept id="p49">**</ept><ph id="ph69" /> button at the top-right corner.</source>
          <target state="new">Press <bpt id="p48">**</bpt>SHIFT + ENTER<ept id="p48">**</ept><ph id="ph68" /> or the <bpt id="p49">**</bpt>Play<ept id="p49">**</ept><ph id="ph69" /> button at the top-right corner.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The status on the right-corner of the paragraph should progress from READY, PENDING, RUNNING to FINISHED.</source>
          <target state="new">The status on the right-corner of the paragraph should progress from READY, PENDING, RUNNING to FINISHED.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The output will show up in the bottom of the same paragraph.</source>
          <target state="new">The output will show up in the bottom of the same paragraph.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The screenshot looks like the following:</source>
          <target state="new">The screenshot looks like the following:</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><ph id="ph70">![</ph>Output of the snippet<ph id="ph71">](./media/hdinsight-apache-spark-csharp-apache-zeppelin-eventhub-streaming/hdispark.streaming.event.hub.zeppelin.code.output.png "Output of the snipet")</ph></source>
          <target state="new"><ph id="ph70">![</ph>Output of the snippet<ph id="ph71">](./media/hdinsight-apache-spark-csharp-apache-zeppelin-eventhub-streaming/hdispark.streaming.event.hub.zeppelin.code.output.png "Output of the snipet")</ph></target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Run the <bpt id="p50">**</bpt>Sender<ept id="p50">**</ept><ph id="ph72" /> project and press <bpt id="p51">**</bpt>Enter<ept id="p51">**</ept><ph id="ph73" /> in the console window to start sending messages to the Event Hub.</source>
          <target state="new">Run the <bpt id="p50">**</bpt>Sender<ept id="p50">**</ept><ph id="ph72" /> project and press <bpt id="p51">**</bpt>Enter<ept id="p51">**</ept><ph id="ph73" /> in the console window to start sending messages to the Event Hub.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>From the Zeppelin notebook, in a new paragraph, enter the following snippet to read the messages received in Spark.</source>
          <target state="new">From the Zeppelin notebook, in a new paragraph, enter the following snippet to read the messages received in Spark.</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The following screen capture shows the messages received in the <bpt id="p52">**</bpt>mytemptable<ept id="p52">**</ept>.</source>
          <target state="new">The following screen capture shows the messages received in the <bpt id="p52">**</bpt>mytemptable<ept id="p52">**</ept>.</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source><ph id="ph74">![</ph>Receive the messages in Zeppelin<ph id="ph75">](./media/hdinsight-apache-spark-csharp-apache-zeppelin-eventhub-streaming/hdispark.streaming.event.hub.zeppelin.output.png "Receive messages in Zeppelin notebook")</ph></source>
          <target state="new"><ph id="ph74">![</ph>Receive the messages in Zeppelin<ph id="ph75">](./media/hdinsight-apache-spark-csharp-apache-zeppelin-eventhub-streaming/hdispark.streaming.event.hub.zeppelin.output.png "Receive messages in Zeppelin notebook")</ph></target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Restart the Spark SQL interpreter to exit the application.</source>
          <target state="new">Restart the Spark SQL interpreter to exit the application.</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p53">**</bpt>Interpreter<ept id="p53">**</ept><ph id="ph76" /> tab at the top, and for the Spark interpreter, click <bpt id="p54">**</bpt>Restart<ept id="p54">**</ept>.</source>
          <target state="new">Click the <bpt id="p53">**</bpt>Interpreter<ept id="p53">**</ept><ph id="ph76" /> tab at the top, and for the Spark interpreter, click <bpt id="p54">**</bpt>Restart<ept id="p54">**</ept>.</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source><ph id="ph77">![</ph>Restart the Zeppelin intepreter<ph id="ph78">](./media/hdinsight-apache-spark-csharp-apache-zeppelin-eventhub-streaming/hdispark.zeppelin.restart.interpreter.png "Restart the Zeppelin intepreter")</ph></source>
          <target state="new"><ph id="ph77">![</ph>Restart the Zeppelin intepreter<ph id="ph78">](./media/hdinsight-apache-spark-csharp-apache-zeppelin-eventhub-streaming/hdispark.zeppelin.restart.interpreter.png "Restart the Zeppelin intepreter")</ph></target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Run the streaming application with high availability</source>
          <target state="new">Run the streaming application with high availability</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Using Zeppelin to receive streaming data into Spark cluster on HDInsight is a good approach to prototype your application.</source>
          <target state="new">Using Zeppelin to receive streaming data into Spark cluster on HDInsight is a good approach to prototype your application.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>However, to run your streaming application in a production setup with high-availability and resilience, you need to do the following:</source>
          <target state="new">However, to run your streaming application in a production setup with high-availability and resilience, you need to do the following:</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Copy over the dependency jar to the storage account associated with the cluster.</source>
          <target state="new">Copy over the dependency jar to the storage account associated with the cluster.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Build a streaming application.</source>
          <target state="new">Build a streaming application.</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>RDP into the cluster and copy over the application jar to the headnode of the cluster.</source>
          <target state="new">RDP into the cluster and copy over the application jar to the headnode of the cluster.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>RDP into the cluster and run the application on the cluster node.</source>
          <target state="new">RDP into the cluster and run the application on the cluster node.</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Instructions on how to perform these steps and a sample streaming application can be downloaded from GitHub at <bpt id="p55">[</bpt>https://github.com/hdinsight/hdinsight-spark-examples<ept id="p55">](https://github.com/hdinsight/hdinsight-spark-examples)</ept>.</source>
          <target state="new">Instructions on how to perform these steps and a sample streaming application can be downloaded from GitHub at <bpt id="p55">[</bpt>https://github.com/hdinsight/hdinsight-spark-examples<ept id="p55">](https://github.com/hdinsight/hdinsight-spark-examples)</ept>.</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>See also</source>
          <target state="new">See also</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source><bpt id="p56">[</bpt>Overview: Apache Spark on Azure HDInsight<ept id="p56">](hdinsight-apache-spark-overview-v1.md)</ept></source>
          <target state="new"><bpt id="p56">[</bpt>Overview: Apache Spark on Azure HDInsight<ept id="p56">](hdinsight-apache-spark-overview-v1.md)</ept></target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source><bpt id="p57">[</bpt>Quick Start: create Apache Spark on HDInsight and run interactive queries using Spark SQL<ept id="p57">](hdinsight-apache-spark-zeppelin-notebook-jupyter-spark-sql.md)</ept></source>
          <target state="new"><bpt id="p57">[</bpt>Quick Start: create Apache Spark on HDInsight and run interactive queries using Spark SQL<ept id="p57">](hdinsight-apache-spark-zeppelin-notebook-jupyter-spark-sql.md)</ept></target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source><bpt id="p58">[</bpt>Use Spark in HDInsight for building machine learning applications<ept id="p58">](hdinsight-apache-spark-ipython-notebook-machine-learning-v1.md)</ept></source>
          <target state="new"><bpt id="p58">[</bpt>Use Spark in HDInsight for building machine learning applications<ept id="p58">](hdinsight-apache-spark-ipython-notebook-machine-learning-v1.md)</ept></target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source><bpt id="p59">[</bpt>Perform interactive data analysis using Spark in HDInsight with BI tools<ept id="p59">](hdinsight-apache-spark-use-bi-tools-v1.md)</ept></source>
          <target state="new"><bpt id="p59">[</bpt>Perform interactive data analysis using Spark in HDInsight with BI tools<ept id="p59">](hdinsight-apache-spark-use-bi-tools-v1.md)</ept></target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source><bpt id="p60">[</bpt>Manage resources for the Apache Spark cluster in Azure HDInsight<ept id="p60">](hdinsight-apache-spark-resource-manager-v1.md)</ept></source>
          <target state="new"><bpt id="p60">[</bpt>Manage resources for the Apache Spark cluster in Azure HDInsight<ept id="p60">](hdinsight-apache-spark-resource-manager-v1.md)</ept></target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1b83825fd5f54d4599b1d61b1cc95c820b18fbdd</xliffext:olfilehash>
  </header>
</xliff>