<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="fr-fr" original="foo.file" tool-id="584c2760-07ae-4ae0-a3dc-fe3a8008464c" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="584c2760-07ae-4ae0-a3dc-fe3a8008464c" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
    </header>
    <body>
      <group id="787900ee-dcd2-41a9-98ce-170bfb56ef7f">
        <trans-unit id="3989a0a2-a6ef-473b-b9c7-7396f8e155c0" xml:space="preserve">
          <source>ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9
title: PowerShell Snippets</source>
          <target state="new">ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9
title: PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="6f8b443a-39bb-43a8-9f17-8e5e5e2f6f98" xml:space="preserve">
          <source>PowerShell Snippets</source>
          <target state="new">PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="8b6d6d53-8e53-439c-a179-bbb80fe98060" xml:space="preserve">
          <source>Adding this sentence for testing HO-HB process.</source>
          <target state="new">Adding this sentence for testing HO-HB process.</target>
        </trans-unit>
        <trans-unit id="f3cc5fa3-b2d2-435c-9aa3-9ef85da67c10" xml:space="preserve">
          <source>PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</source>
          <target state="new">PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</target>
        </trans-unit>
        <trans-unit id="c51efc0c-f5b5-4abb-9be7-601803feee4c" xml:space="preserve">
          <source>All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</source>
          <target state="new">All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</target>
        </trans-unit>
        <trans-unit id="1bfe506d-8e75-4c6d-905e-3f27cd17ba34" xml:space="preserve">
          <source>If you aren't sure if you have the right permissions, type <bpt id="c9eea3f7-977d-4bf8-acac-93826d0a5ea2">&lt;code&gt;</bpt>Get-VM<ept id="c9eea3f7-977d-4bf8-acac-93826d0a5ea2">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</source>
          <target state="new">If you aren't sure if you have the right permissions, type <bpt id="c9eea3f7-977d-4bf8-acac-93826d0a5ea2">&lt;code&gt;</bpt>Get-VM<ept id="c9eea3f7-977d-4bf8-acac-93826d0a5ea2">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</target>
        </trans-unit>
        <trans-unit id="03c6f418-c318-4720-b83e-58380b9e6184" xml:space="preserve">
          <source>PowerShell Direct tools</source>
          <target state="new">PowerShell Direct tools</target>
        </trans-unit>
        <trans-unit id="b4f9ca4b-63aa-409e-84c7-e25ca7d7f5d2" xml:space="preserve">
          <source>All of the scripts and snippets in this section will rely on the following basics.</source>
          <target state="new">All of the scripts and snippets in this section will rely on the following basics.</target>
        </trans-unit>
        <trans-unit id="6c1e3918-6626-46aa-9dcc-33eff1657cb5" xml:space="preserve">
          <source><bpt id="445c42a9-77a3-4c58-9b35-49aac9187278">&lt;strong&gt;</bpt>Requirements<ept id="445c42a9-77a3-4c58-9b35-49aac9187278">&lt;/strong&gt;</ept> :</source>
          <target state="new"><bpt id="445c42a9-77a3-4c58-9b35-49aac9187278">&lt;strong&gt;</bpt>Requirements<ept id="445c42a9-77a3-4c58-9b35-49aac9187278">&lt;/strong&gt;</ept> :</target>
        </trans-unit>
        <trans-unit id="944d0aef-5049-416b-9566-9b0891ba26f3" xml:space="preserve">
          <source>PowerShell Direct.</source>
          <target state="new">PowerShell Direct.</target>
        </trans-unit>
        <trans-unit id="f108bb23-a6e8-44d0-b83d-bca463ced346" xml:space="preserve">
          <source>Windows 10 guest and host OS.</source>
          <target state="new">Windows 10 guest and host OS.</target>
        </trans-unit>
        <trans-unit id="a20f1653-b59b-41b0-a3e6-0a656a029930" xml:space="preserve">
          <source><bpt id="20e77ed4-500c-4b07-bb54-ab5da8d38033">&lt;strong&gt;</bpt>Common Variables<ept id="20e77ed4-500c-4b07-bb54-ab5da8d38033">&lt;/strong&gt;</ept> :  
<bpt id="dba9ce07-7da8-41ad-9f33-8d8fd211788b">&lt;code&gt;</bpt>$VMName<ept id="dba9ce07-7da8-41ad-9f33-8d8fd211788b">&lt;/code&gt;</ept> -- this is a string with the VMName.</source>
          <target state="new"><bpt id="20e77ed4-500c-4b07-bb54-ab5da8d38033">&lt;strong&gt;</bpt>Common Variables<ept id="20e77ed4-500c-4b07-bb54-ab5da8d38033">&lt;/strong&gt;</ept> :  
<bpt id="dba9ce07-7da8-41ad-9f33-8d8fd211788b">&lt;code&gt;</bpt>$VMName<ept id="dba9ce07-7da8-41ad-9f33-8d8fd211788b">&lt;/code&gt;</ept> -- this is a string with the VMName.</target>
        </trans-unit>
        <trans-unit id="cfe1a414-50ee-46e8-a440-ace7e679cfa0" xml:space="preserve">
          <source>See a list of available VMs with <bpt id="2f36b84b-9c99-46ce-b6f9-77c7eaafe980">&lt;code&gt;</bpt>Get-VM<ept id="2f36b84b-9c99-46ce-b6f9-77c7eaafe980">&lt;/code&gt;</ept>  
<bpt id="318c6401-56e0-42a3-96f5-ba915559f93a">&lt;code&gt;</bpt>$cred<ept id="318c6401-56e0-42a3-96f5-ba915559f93a">&lt;/code&gt;</ept> -- Credential for the guest OS.</source>
          <target state="new">See a list of available VMs with <bpt id="2f36b84b-9c99-46ce-b6f9-77c7eaafe980">&lt;code&gt;</bpt>Get-VM<ept id="2f36b84b-9c99-46ce-b6f9-77c7eaafe980">&lt;/code&gt;</ept>  
<bpt id="318c6401-56e0-42a3-96f5-ba915559f93a">&lt;code&gt;</bpt>$cred<ept id="318c6401-56e0-42a3-96f5-ba915559f93a">&lt;/code&gt;</ept> -- Credential for the guest OS.</target>
        </trans-unit>
        <trans-unit id="3089fd07-33af-4a4f-a950-cff4c3ee2298" xml:space="preserve">
          <source>Can be populated using <bpt id="f8ceaa18-ff14-4c26-b2b1-47b167a97389">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="f8ceaa18-ff14-4c26-b2b1-47b167a97389">&lt;/code&gt;</ept></source>
          <target state="new">Can be populated using <bpt id="f8ceaa18-ff14-4c26-b2b1-47b167a97389">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="f8ceaa18-ff14-4c26-b2b1-47b167a97389">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="e6fe0b13-5820-4586-9ca3-4159737675a5" xml:space="preserve">
          <source>Check if the guest has booted</source>
          <target state="new">Check if the guest has booted</target>
        </trans-unit>
        <trans-unit id="68afb2f6-c25d-4230-98ff-07c94eb2dfa1" xml:space="preserve">
          <source>Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</source>
          <target state="new">Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</target>
        </trans-unit>
        <trans-unit id="d115e0a6-0e26-4be5-b88f-d18f9d3da942" xml:space="preserve">
          <source>Use this command to check whether the guest has booted.</source>
          <target state="new">Use this command to check whether the guest has booted.</target>
        </trans-unit>
        <trans-unit id="ce85a95e-a05c-4c78-aaab-58f35cf50b33" xml:space="preserve">
          <source><bpt id="0bfb0705-bbce-436e-86e4-260c50f9b7c0">&lt;strong&gt;</bpt>Outcome<ept id="0bfb0705-bbce-436e-86e4-260c50f9b7c0">&lt;/strong&gt;</ept>  
Prints a friendly message declaring the state of the guest OS.</source>
          <target state="new"><bpt id="0bfb0705-bbce-436e-86e4-260c50f9b7c0">&lt;strong&gt;</bpt>Outcome<ept id="0bfb0705-bbce-436e-86e4-260c50f9b7c0">&lt;/strong&gt;</ept>  
Prints a friendly message declaring the state of the guest OS.</target>
        </trans-unit>
        <trans-unit id="30020960-1ed7-4a0e-b5dc-3675e19cb573" xml:space="preserve">
          <source>Script locking until the guest has booted</source>
          <target state="new">Script locking until the guest has booted</target>
        </trans-unit>
        <trans-unit id="3dcb53a3-7977-4148-a05e-1f91a72bd738" xml:space="preserve">
          <source>The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</source>
          <target state="new">The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</target>
        </trans-unit>
        <trans-unit id="634e0399-19dd-49e6-aa77-13b71040d2fb" xml:space="preserve">
          <source><bpt id="6987d2ab-551d-43e7-8556-72c28dc760b8">&lt;strong&gt;</bpt>Outcome<ept id="6987d2ab-551d-43e7-8556-72c28dc760b8">&lt;/strong&gt;</ept>  
Prints a friendly message and locks until the connection to the VM succeeds.</source>
          <target state="new"><bpt id="6987d2ab-551d-43e7-8556-72c28dc760b8">&lt;strong&gt;</bpt>Outcome<ept id="6987d2ab-551d-43e7-8556-72c28dc760b8">&lt;/strong&gt;</ept>  
Prints a friendly message and locks until the connection to the VM succeeds.</target>
        </trans-unit>
        <trans-unit id="d717bd73-822e-4071-847f-b2b4cc6b2232" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="2093ec6e-5897-42fc-be85-1d906a9f7453" xml:space="preserve">
          <source>Script locking until the guest has a network</source>
          <target state="new">Script locking until the guest has a network</target>
        </trans-unit>
        <trans-unit id="371324f3-bf28-4323-b1a4-e75e94d0242d" xml:space="preserve">
          <source>With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</source>
          <target state="new">With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</target>
        </trans-unit>
        <trans-unit id="d4d8a3c0-6b71-45dc-87f6-f9e71b1d72c9" xml:space="preserve">
          <source><bpt id="01c76578-1ce2-4460-9deb-cf66e986543e">&lt;em&gt;</bpt>* Outcome *<ept id="01c76578-1ce2-4460-9deb-cf66e986543e">&lt;/em&gt;</ept>
Locks until a DHCP lease is recieved.</source>
          <target state="new"><bpt id="01c76578-1ce2-4460-9deb-cf66e986543e">&lt;em&gt;</bpt>* Outcome *<ept id="01c76578-1ce2-4460-9deb-cf66e986543e">&lt;/em&gt;</ept>
Locks until a DHCP lease is recieved.</target>
        </trans-unit>
        <trans-unit id="1b481cdc-6c66-4c4b-927d-b2f17c651f67" xml:space="preserve">
          <source>Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</source>
          <target state="new">Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</target>
        </trans-unit>
        <trans-unit id="ab54c259-6efd-4cab-b619-4b638022ee45" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="90f14951-387c-4c36-8a0b-626e63776cc9" xml:space="preserve">
          <source>Managing credentials with PowerShell</source>
          <target state="new">Managing credentials with PowerShell</target>
        </trans-unit>
        <trans-unit id="0ae58709-9416-4088-a87c-ac929d5d80d8" xml:space="preserve">
          <source>Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</source>
          <target state="new">Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</target>
        </trans-unit>
        <trans-unit id="1f572175-a525-4543-9072-202a690df6a4" xml:space="preserve">
          <source>There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</source>
          <target state="new">There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</target>
        </trans-unit>
        <trans-unit id="6eaec633-b1a7-4a45-8d12-640624f4ee72" xml:space="preserve">
          <source>The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</source>
          <target state="new">The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</target>
        </trans-unit>
        <trans-unit id="6aa94d91-c2eb-4cf3-945b-376c59691b48" xml:space="preserve">
          <source>This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</source>
          <target state="new">This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</target>
        </trans-unit>
        <trans-unit id="da0760d1-182f-43ab-95ef-d9deb140eca7" xml:space="preserve">
          <source>In this scenario you can just run <bpt id="8b5773ea-06b3-465d-925f-5c28e75f9489">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="8b5773ea-06b3-465d-925f-5c28e75f9489">&lt;/code&gt;</ept>.</source>
          <target state="new">In this scenario you can just run <bpt id="8b5773ea-06b3-465d-925f-5c28e75f9489">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="8b5773ea-06b3-465d-925f-5c28e75f9489">&lt;/code&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="c73c4edc-19d8-4270-b614-d92456a5d50d" xml:space="preserve">
          <source>Let PowerShell prompt you for credentials  
If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</source>
          <target state="new">Let PowerShell prompt you for credentials  
If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</target>
        </trans-unit>
        <trans-unit id="10b70253-1b52-4d47-9a88-e6162f27bbf9" xml:space="preserve">
          <source>Store credentials in a variable for reuse.</source>
          <target state="new">Store credentials in a variable for reuse.</target>
        </trans-unit>
        <trans-unit id="08992932-0986-4a2b-bf97-f3b62bafa40b" xml:space="preserve">
          <source>Running a simple command like this:</source>
          <target state="new">Running a simple command like this:</target>
        </trans-unit>
        <trans-unit id="60546e2b-fff4-4e70-9a90-58fa914426dc" xml:space="preserve">
          <source>  Will mean that you only get prompted once per script/PowerShell session for your credentials.</source>
          <target state="new">  Will mean that you only get prompted once per script/PowerShell session for your credentials.</target>
        </trans-unit>
        <trans-unit id="68126f18-69f0-4372-9336-31d0cf6be265" xml:space="preserve">
          <source>Code your credentials into your scripts.</source>
          <target state="new">Code your credentials into your scripts.</target>
        </trans-unit>
        <trans-unit id="2557aa74-0f3d-4282-afea-b48cd1912ea4" xml:space="preserve">
          <source><bpt id="5302924e-d4e1-45d8-9b30-31db53fb2555">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="5302924e-d4e1-45d8-9b30-31db53fb2555">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="5302924e-d4e1-45d8-9b30-31db53fb2555">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="5302924e-d4e1-45d8-9b30-31db53fb2555">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="97e5a00e-c9ae-4ac2-90a1-a69713bddc21" xml:space="preserve">
          <source>Warning:  _Do not do this in a production system.</source>
          <target state="new">Warning:  _Do not do this in a production system.</target>
        </trans-unit>
        <trans-unit id="17d29436-928a-4d16-aaec-dc5849236f06" xml:space="preserve">
          <source>Do not do this with real passwords._</source>
          <target state="new">Do not do this with real passwords._</target>
        </trans-unit>
        <trans-unit id="55fbb05b-4f41-4c6a-90b4-fe4ced5cecc1" xml:space="preserve">
          <source>You can hand craft a PSCredential object with some code like this:</source>
          <target state="new">You can hand craft a PSCredential object with some code like this:</target>
        </trans-unit>
        <trans-unit id="6c7bcc99-a65c-4c14-a1f8-0d8376d2d51d" xml:space="preserve">
          <source>Grossly insecure - but useful for testing.</source>
          <target state="new">Grossly insecure - but useful for testing.</target>
        </trans-unit>
        <trans-unit id="66552712-461a-495c-a637-ffbd782e0255" xml:space="preserve">
          <source>Now you get no prompts at all in this session.</source>
          <target state="new">Now you get no prompts at all in this session.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>