{
  "nodes": [
    {
      "pos": [
        27,
        109
      ],
      "content": "Upload images to Azure Blob storage from a universal Windows app | Microsoft Azure"
    },
    {
      "pos": [
        128,
        268
      ],
      "content": "Learn how to use a .NET backend mobile service to upload images to Azure Blob Storage and access the images from your universal Windows app."
    },
    {
      "pos": [
        619,
        674
      ],
      "content": "Upload images to Azure Storage by using Mobile Services"
    },
    {
      "pos": [
        779,
        785
      ],
      "content": "&amp;nbsp;"
    },
    {
      "pos": [
        928,
        936
      ],
      "content": "Overview"
    },
    {
      "pos": [
        937,
        1219
      ],
      "content": "This topic shows you how to use Azure Mobile Services to enable your app to upload and store user-generated images in Azure Storage. Mobile Services uses a SQL Database to store data. However, binary large object (BLOB) data is more efficiently stored in Azure Blob storage service.",
      "nodes": [
        {
          "content": "This topic shows you how to use Azure Mobile Services to enable your app to upload and store user-generated images in Azure Storage.",
          "pos": [
            0,
            132
          ]
        },
        {
          "content": "Mobile Services uses a SQL Database to store data.",
          "pos": [
            133,
            183
          ]
        },
        {
          "content": "However, binary large object (BLOB) data is more efficiently stored in Azure Blob storage service.",
          "pos": [
            184,
            282
          ]
        }
      ]
    },
    {
      "pos": [
        1221,
        1768
      ],
      "content": "You cannot securely distribute with the client app the credentials required to securely upload data to the Blob Storage service. Instead, you must store these credentials in your mobile service and use them to generate a Shared Access Signature (SAS) that is used to upload a new image. The SAS, a credential with a short expiration&amp;mdash;in this case 5 minutes, is returned securely by Mobile Services to the client app. The app then uses this temporary credential to upload the image. In this example, downloads from the Blob service are public.",
      "nodes": [
        {
          "content": "You cannot securely distribute with the client app the credentials required to securely upload data to the Blob Storage service. Ins",
          "pos": [
            0,
            132
          ]
        },
        {
          "content": "tead, you must store these credentials in your mobile service and use them to generate a Shared Access Signature (SAS) that is used to upload a new image. The",
          "pos": [
            132,
            290
          ]
        },
        {
          "content": "SAS, a credential with a short expiration&amp;mdash;in this case 5 minutes, is returned securely by Mobile Services to the client app.",
          "pos": [
            291,
            425
          ]
        },
        {
          "content": "The app then uses this temporary credential to upload the image.",
          "pos": [
            426,
            490
          ]
        },
        {
          "content": "In this example, downloads from the Blob service are public.",
          "pos": [
            491,
            551
          ]
        }
      ]
    },
    {
      "pos": [
        1770,
        1940
      ],
      "content": "In this tutorial you add functionality to the Mobile Services quickstart app to take pictures and upload the images to Azure by using an SAS generated by Mobile Services."
    },
    {
      "pos": [
        1944,
        1957
      ],
      "content": "Prerequisites"
    },
    {
      "pos": [
        1959,
        1996
      ],
      "content": "This tutorial requires the following:"
    },
    {
      "pos": [
        2000,
        2058
      ],
      "content": "Microsoft Visual Studio 2013 Update 3, or a later version."
    },
    {
      "pos": [
        2061,
        2122
      ],
      "content": "<bpt id=\"p1\">[</bpt>Azure Storage account<ept id=\"p1\">](../storage-create-storage-account.md)</ept>"
    },
    {
      "pos": [
        2125,
        2190
      ],
      "content": "A camera or other image capture device attached to your computer."
    },
    {
      "pos": [
        2192,
        2341
      ],
      "content": "This tutorial is based on the Mobile Services quickstart. Before you start this tutorial, you must first complete [Get started with Mobile Services].",
      "nodes": [
        {
          "content": "This tutorial is based on the Mobile Services quickstart.",
          "pos": [
            0,
            57
          ]
        },
        {
          "content": "Before you start this tutorial, you must first complete [Get started with Mobile Services].",
          "pos": [
            58,
            149
          ]
        }
      ]
    },
    {
      "pos": [
        2657,
        2667
      ],
      "content": "Next steps"
    },
    {
      "pos": [
        2669,
        2848
      ],
      "content": "Now that you have been able to securely upload images by integrating your mobile service with the Blob service, check out some of the other backend service and integration topics:"
    },
    {
      "pos": [
        2852,
        2957
      ],
      "content": "<bpt id=\"p2\">[</bpt>Schedule backend jobs in Mobile Services<ept id=\"p2\">](../mobile-services-dotnet-backend-schedule-recurring-tasks.md)</ept>"
    },
    {
      "pos": [
        2964,
        3105
      ],
      "content": "Learn how to use the Mobile Services job scheduler functionality to define server script code that is executed on a schedule that you define."
    },
    {
      "pos": [
        3109,
        3223
      ],
      "content": "<bpt id=\"p3\">[</bpt>Mobile Services .NET How-to Conceptual Reference<ept id=\"p3\">](../mobile-services-windows-dotnet-how-to-use-client-library.md)</ept>"
    },
    {
      "pos": [
        3230,
        3283
      ],
      "content": "Learn more about how to use Mobile Services with .NET"
    },
    {
      "pos": [
        3303,
        3710
      ],
      "content": "[Install the Storage Client library]: #install-storage-client\n[Update the client app to capture images]: #add-select-images\n[Install the storage client in the mobile service project]: #storage-client-server\n[Update the TodoItem definition in the data model]: #update-data-model\n[Update the table controller to generate an SAS]: #update-scripts\n[Upload images to test the app]: #test\n[Next Steps]:#next-steps"
    },
    {
      "pos": [
        3745,
        4002
      ],
      "content": "[Get started with Mobile Services]: ../mobile-services-windows-store-dotnet-get-started.md\n[How To Create a Storage Account]: ../storage-create-storage-account.md\n[Azure Storage Client library for Store apps]: http://go.microsoft.com/fwlink/p/?LinkId=276866"
    }
  ],
  "content": "<properties\n    pageTitle=\"Upload images to Azure Blob storage from a universal Windows app | Microsoft Azure\"\n    description=\"Learn how to use a .NET backend mobile service to upload images to Azure Blob Storage and access the images from your universal Windows app.\"\n    documentationCenter=\"windows\"\n    authors=\"ggailey777\"\n    services=\"mobile-services,storage\"\n    manager=\"dwrede\"\n    editor=\"\"/>\n\n\n<tags \n    ms.service=\"mobile-services\" \n    ms.workload=\"mobile\" \n    ms.tgt_pltfrm=\"mobile-windows-store\" \n    ms.devlang=\"dotnet\" \n    ms.topic=\"article\" \n    ms.date=\"12/01/2015\" \n    ms.author=\"glenga\"/>\n\n# Upload images to Azure Storage by using Mobile Services\n\n[AZURE.INCLUDE [mobile-service-note-mobile-apps](../../includes/mobile-services-note-mobile-apps.md)]\n\n&nbsp;\n\n\n[AZURE.INCLUDE [mobile-services-selector-upload-data-blob-storage](../../includes/mobile-services-selector-upload-data-blob-storage.md)]\n\n##Overview\nThis topic shows you how to use Azure Mobile Services to enable your app to upload and store user-generated images in Azure Storage. Mobile Services uses a SQL Database to store data. However, binary large object (BLOB) data is more efficiently stored in Azure Blob storage service.\n\nYou cannot securely distribute with the client app the credentials required to securely upload data to the Blob Storage service. Instead, you must store these credentials in your mobile service and use them to generate a Shared Access Signature (SAS) that is used to upload a new image. The SAS, a credential with a short expiration&mdash;in this case 5 minutes, is returned securely by Mobile Services to the client app. The app then uses this temporary credential to upload the image. In this example, downloads from the Blob service are public.\n\nIn this tutorial you add functionality to the Mobile Services quickstart app to take pictures and upload the images to Azure by using an SAS generated by Mobile Services.\n\n##Prerequisites\n\nThis tutorial requires the following:\n\n+ Microsoft Visual Studio 2013 Update 3, or a later version.\n+ [Azure Storage account](../storage-create-storage-account.md)\n+ A camera or other image capture device attached to your computer.\n\nThis tutorial is based on the Mobile Services quickstart. Before you start this tutorial, you must first complete [Get started with Mobile Services].\n\n[AZURE.INCLUDE [mobile-services-dotnet-backend-configure-blob-storage](../../includes/mobile-services-dotnet-backend-configure-blob-storage.md)]\n\n[AZURE.INCLUDE [mobile-services-windows-universal-dotnet-upload-to-blob-storage](../../includes/mobile-services-windows-universal-dotnet-upload-to-blob-storage.md)]\n\n##Next steps\n\nNow that you have been able to securely upload images by integrating your mobile service with the Blob service, check out some of the other backend service and integration topics:\n\n+ [Schedule backend jobs in Mobile Services](../mobile-services-dotnet-backend-schedule-recurring-tasks.md)\n\n     Learn how to use the Mobile Services job scheduler functionality to define server script code that is executed on a schedule that you define.\n\n+ [Mobile Services .NET How-to Conceptual Reference](../mobile-services-windows-dotnet-how-to-use-client-library.md)\n\n     Learn more about how to use Mobile Services with .NET\n\n<!-- Anchors. -->\n[Install the Storage Client library]: #install-storage-client\n[Update the client app to capture images]: #add-select-images\n[Install the storage client in the mobile service project]: #storage-client-server\n[Update the TodoItem definition in the data model]: #update-data-model\n[Update the table controller to generate an SAS]: #update-scripts\n[Upload images to test the app]: #test\n[Next Steps]:#next-steps\n\n<!-- Images. -->\n\n<!-- URLs. -->\n[Get started with Mobile Services]: ../mobile-services-windows-store-dotnet-get-started.md\n[How To Create a Storage Account]: ../storage-create-storage-account.md\n[Azure Storage Client library for Store apps]: http://go.microsoft.com/fwlink/p/?LinkId=276866\n"
}