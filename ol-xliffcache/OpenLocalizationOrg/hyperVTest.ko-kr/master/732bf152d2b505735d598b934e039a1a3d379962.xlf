<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-US" target-language="ko-kr">
    <body>
      <group id="main" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Add authentication to your Universal Windows 8.1 app | Microsoft Azure</source>
          <target state="new">Add authentication to your Universal Windows 8.1 app | Microsoft Azure</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to use Mobile Services to authenticate users of your Universal Windows 8.1 app by using various identity providers, including Google, Facebook, Twitter, and Microsoft.</source>
          <target state="new">Learn how to use Mobile Services to authenticate users of your Universal Windows 8.1 app by using various identity providers, including Google, Facebook, Twitter, and Microsoft.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Add authentication to your Mobile Services app</source>
          <target state="new">Add authentication to your Mobile Services app</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>&amp;nbsp;</source>
          <target state="new">&amp;nbsp;</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="new">Overview</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This topic shows you how to authenticate users in Azure Mobile Services from your universal Windows app.</source>
          <target state="new">This topic shows you how to authenticate users in Azure Mobile Services from your universal Windows app.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>In this tutorial, you add authentication to the quickstart project using an identity provider that is supported by Mobile Services.</source>
          <target state="new">In this tutorial, you add authentication to the quickstart project using an identity provider that is supported by Mobile Services.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>After being successfully authenticated and authorized by Mobile Services, the user ID value is displayed.</source>
          <target state="new">After being successfully authenticated and authorized by Mobile Services, the user ID value is displayed.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This tutorial is based on the Mobile Services quickstart.</source>
          <target state="new">This tutorial is based on the Mobile Services quickstart.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You must also first complete the tutorial [Get started with Mobile Services] or <bpt id="p1">[</bpt>Add Mobile Services to an existing app<ept id="p1">](mobile-services-dotnet-backend-windows-universal-dotnet-get-started-data.md)</ept>.</source>
          <target state="new">You must also first complete the tutorial [Get started with Mobile Services] or <bpt id="p1">[</bpt>Add Mobile Services to an existing app<ept id="p1">](mobile-services-dotnet-backend-windows-universal-dotnet-get-started-data.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><ph id="ph4">[AZURE.NOTE]</ph>This tutorial shows you how to use server-directed authentication for users in Windows Store and Windows Phone Store 8.1 apps.</source>
          <target state="new"><ph id="ph4">[AZURE.NOTE]</ph>This tutorial shows you how to use server-directed authentication for users in Windows Store and Windows Phone Store 8.1 apps.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Fore information about client-directed authentication, see <bpt id="p2">[</bpt>Logging in with Google, Microsoft and Facebook SDKs to Azure Mobile Services<ept id="p2">](https://azure.microsoft.com/blog/2014/10/27/logging-in-with-google-microsoft-and-facebook-sdks-to-azure-mobile-services/)</ept>.</source>
          <target state="new">Fore information about client-directed authentication, see <bpt id="p2">[</bpt>Logging in with Google, Microsoft and Facebook SDKs to Azure Mobile Services<ept id="p2">](https://azure.microsoft.com/blog/2014/10/27/logging-in-with-google-microsoft-and-facebook-sdks-to-azure-mobile-services/)</ept>.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Register your app for authentication and configure Mobile Services</source>
          <target state="new">Register your app for authentication and configure Mobile Services</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Restrict permissions to authenticated users</source>
          <target state="new">Restrict permissions to authenticated users</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>&amp;nbsp;&amp;nbsp;6.</source>
          <target state="new">&amp;nbsp;&amp;nbsp;6.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>In Visual Studio, right-click the Windows Store project for the TodoList app and click <bpt id="p3">**</bpt>Set as StartUp Project<ept id="p3">**</ept>.</source>
          <target state="new">In Visual Studio, right-click the Windows Store project for the TodoList app and click <bpt id="p3">**</bpt>Set as StartUp Project<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>&amp;nbsp;&amp;nbsp;7.</source>
          <target state="new">&amp;nbsp;&amp;nbsp;7.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>In the shared project, open the App.xaml.cs project file, locate the definition for the <bpt id="p4">[</bpt>MobileServiceClient<ept id="p4">](http://msdn.microsoft.com/library/azure/microsoft.windowsazure.mobileservices.mobileserviceclient.aspx)</ept>, and make sure that it is configured to connect to the mobile service running in Azure.</source>
          <target state="new">In the shared project, open the App.xaml.cs project file, locate the definition for the <bpt id="p4">[</bpt>MobileServiceClient<ept id="p4">](http://msdn.microsoft.com/library/azure/microsoft.windowsazure.mobileservices.mobileserviceclient.aspx)</ept>, and make sure that it is configured to connect to the mobile service running in Azure.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><ph id="ph8">[AZURE.NOTE]</ph>When you use Visual Studio tools to connect your app to a Mobile Service, the tool generate two sets of <bpt id="p5">**</bpt>MobileServiceClient<ept id="p5">**</ept><ph id="ph9" /> definitions, one for each client platform.</source>
          <target state="new"><ph id="ph8">[AZURE.NOTE]</ph>When you use Visual Studio tools to connect your app to a Mobile Service, the tool generate two sets of <bpt id="p5">**</bpt>MobileServiceClient<ept id="p5">**</ept><ph id="ph9" /> definitions, one for each client platform.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This is a good time to simplify the generated code by unifying the <ph id="ph10">`#if...#endif`</ph><ph id="ph11" /> wrapped <bpt id="p6">**</bpt>MobileServiceClient<ept id="p6">**</ept><ph id="ph12" /> definitions into a single unwrapped definition used by both versions of the app.</source>
          <target state="new">This is a good time to simplify the generated code by unifying the <ph id="ph10">`#if...#endif`</ph><ph id="ph11" /> wrapped <bpt id="p6">**</bpt>MobileServiceClient<ept id="p6">**</ept><ph id="ph12" /> definitions into a single unwrapped definition used by both versions of the app.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You won't need to do this when you downloaded the quickstart app from the <bpt id="p7">[</bpt><ept id="p7">Azure classic portal]</ept>.</source>
          <target state="new">You won't need to do this when you downloaded the quickstart app from the <bpt id="p7">[</bpt><ept id="p7">Azure classic portal]</ept>.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>&amp;nbsp;&amp;nbsp;8.</source>
          <target state="new">&amp;nbsp;&amp;nbsp;8.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Press the F5 key to run the Windows store app, and verify that an unhandled exception with a status code of 401 (Unauthorized) is raised after the app starts.</source>
          <target state="new">Press the F5 key to run the Windows store app, and verify that an unhandled exception with a status code of 401 (Unauthorized) is raised after the app starts.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>&amp;nbsp;&amp;nbsp;This happens because the app attempts to access Mobile Services as an unauthenticated user, but the <bpt id="p8">*</bpt>TodoItem<ept id="p8">*</ept><ph id="ph13" /> table now requires authentication.</source>
          <target state="new">&amp;nbsp;&amp;nbsp;This happens because the app attempts to access Mobile Services as an unauthenticated user, but the <bpt id="p8">*</bpt>TodoItem<ept id="p8">*</ept><ph id="ph13" /> table now requires authentication.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Next, you will update the app to authenticate users before requesting resources from the mobile service.</source>
          <target state="new">Next, you will update the app to authenticate users before requesting resources from the mobile service.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Add authentication to the app</source>
          <target state="new">Add authentication to the app</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><ph id="ph15">[AZURE.NOTE]</ph>If you registered your Windows Store app package information with Mobile Services, you should call the <ph id="ph16">&lt;a href="http://go.microsoft.com/fwlink/p/?LinkId=311594" target="_blank"&gt;</ph>LoginAsync<ph id="ph17">&lt;/a&gt;</ph><ph id="ph18" /> method by supplying a value of <bpt id="p9">**</bpt>true<ept id="p9">**</ept><ph id="ph19" /> for the <bpt id="p10">*</bpt>useSingleSignOn<ept id="p10">*</ept><ph id="ph20" /> parameter.</source>
          <target state="new"><ph id="ph15">[AZURE.NOTE]</ph>If you registered your Windows Store app package information with Mobile Services, you should call the <ph id="ph16">&lt;a href="http://go.microsoft.com/fwlink/p/?LinkId=311594" target="_blank"&gt;</ph>LoginAsync<ph id="ph17">&lt;/a&gt;</ph><ph id="ph18" /> method by supplying a value of <bpt id="p9">**</bpt>true<ept id="p9">**</ept><ph id="ph19" /> for the <bpt id="p10">*</bpt>useSingleSignOn<ept id="p10">*</ept><ph id="ph20" /> parameter.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>If you do not do this, your users will continue to be presented with a login prompt every time that the login method is called.</source>
          <target state="new">If you do not do this, your users will continue to be presented with a login prompt every time that the login method is called.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Store the authorization tokens on the client</source>
          <target state="new">Store the authorization tokens on the client</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The previous example showed a standard sign-in, which requires the client to contact both the identity provider and the mobile service every time that the app starts.</source>
          <target state="new">The previous example showed a standard sign-in, which requires the client to contact both the identity provider and the mobile service every time that the app starts.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Not only is this method inefficient, you can run into usage-related issues should many customers try to start your app at the same time.</source>
          <target state="new">Not only is this method inefficient, you can run into usage-related issues should many customers try to start your app at the same time.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>A better approach is to cache the authorization token returned by Mobile Services and try to use this first before using a provider-based sign-in.</source>
          <target state="new">A better approach is to cache the authorization token returned by Mobile Services and try to use this first before using a provider-based sign-in.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><ph id="ph21">[AZURE.NOTE]</ph>You can cache the token issued by Mobile Services regardless of whether you are using client-managed or service-managed authentication.</source>
          <target state="new"><ph id="ph21">[AZURE.NOTE]</ph>You can cache the token issued by Mobile Services regardless of whether you are using client-managed or service-managed authentication.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This tutorial uses service-managed authentication.</source>
          <target state="new">This tutorial uses service-managed authentication.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Next steps</source>
          <target state="new">Next steps</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>In the next tutorial, [Service-side authorization of Mobile Services users][Authorize users with scripts], you will take the user ID value provided by Mobile Services based on an authenticated user and use it to filter the data returned by Mobile Services.</source>
          <target state="new">In the next tutorial, [Service-side authorization of Mobile Services users][Authorize users with scripts], you will take the user ID value provided by Mobile Services based on an authenticated user and use it to filter the data returned by Mobile Services.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>See also</source>
          <target state="new">See also</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p11">[</bpt>Enhanced users feature<ept id="p11">](https://azure.microsoft.com/blog/2014/10/02/custom-login-scopes-single-sign-on-new-asp-net-web-api-updates-to-the-azure-mobile-services-net-backend/)</ept><ph id="ph23">&lt;br/&gt;</ph>
You can get additional user data maintained by the identity provider in your mobile service by by calling the <bpt id="p12">**</bpt>ServiceUser.GetIdentitiesAsync()<ept id="p12">**</ept><ph id="ph24" /> method in a .NET backend.</source>
          <target state="new"><bpt id="p11">[</bpt>Enhanced users feature<ept id="p11">](https://azure.microsoft.com/blog/2014/10/02/custom-login-scopes-single-sign-on-new-asp-net-web-api-updates-to-the-azure-mobile-services-net-backend/)</ept><ph id="ph23">&lt;br/&gt;</ph>
You can get additional user data maintained by the identity provider in your mobile service by by calling the <bpt id="p12">**</bpt>ServiceUser.GetIdentitiesAsync()<ept id="p12">**</ept><ph id="ph24" /> method in a .NET backend.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p13">[</bpt><ept id="p13">Mobile Services .NET How-to Conceptual Reference]</ept><ph id="ph25">&lt;br/&gt;</ph>Learn more about how to use Mobile Services with a .NET client.</source>
          <target state="new"><bpt id="p13">[</bpt><ept id="p13">Mobile Services .NET How-to Conceptual Reference]</ept><ph id="ph25">&lt;br/&gt;</ph>Learn more about how to use Mobile Services with a .NET client.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>[Register your app for authentication and configure Mobile Services]: #register
[Restrict table permissions to authenticated users]: #permissions
[Add authentication to the app]: #add-authentication
[Store authentication tokens on the client]: #tokens
[Next Steps]:#next-steps</source>
          <target state="new">[Register your app for authentication and configure Mobile Services]: #register
[Restrict table permissions to authenticated users]: #permissions
[Add authentication to the app]: #add-authentication
[Store authentication tokens on the client]: #tokens
[Next Steps]:#next-steps</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>[Submit an app page]: http://go.microsoft.com/fwlink/p/?LinkID=266582
[My Applications]: http://go.microsoft.com/fwlink/p/?LinkId=262039
[Live SDK for Windows]: http://go.microsoft.com/fwlink/p/?LinkId=262253
[Get started with Mobile Services]: mobile-services-dotnet-backend-windows-store-dotnet-get-started.md
[Get started with data]: ../mobile-services-dotnet-backend-windows-store-dotnet-get-started-data.md
[Get started with authentication]: ../mobile-services-dotnet-backend-windows-store-dotnet-get-started-users.md
[Get started with push notifications]: ../mobile-services-dotnet-backend-windows-store-dotnet-get-started-push.md
[Authorize users with scripts]: ../mobile-services-dotnet-backend-windows-store-dotnet-authorize-users-in-scripts.md
[JavaScript and HTML]: ../mobile-services-dotnet-backend-windows-store-javascript-get-started-users.md</source>
          <target state="new">[Submit an app page]: http://go.microsoft.com/fwlink/p/?LinkID=266582
[My Applications]: http://go.microsoft.com/fwlink/p/?LinkId=262039
[Live SDK for Windows]: http://go.microsoft.com/fwlink/p/?LinkId=262253
[Get started with Mobile Services]: mobile-services-dotnet-backend-windows-store-dotnet-get-started.md
[Get started with data]: ../mobile-services-dotnet-backend-windows-store-dotnet-get-started-data.md
[Get started with authentication]: ../mobile-services-dotnet-backend-windows-store-dotnet-get-started-users.md
[Get started with push notifications]: ../mobile-services-dotnet-backend-windows-store-dotnet-get-started-push.md
[Authorize users with scripts]: ../mobile-services-dotnet-backend-windows-store-dotnet-authorize-users-in-scripts.md
[JavaScript and HTML]: ../mobile-services-dotnet-backend-windows-store-javascript-get-started-users.md</target>
        </trans-unit>
      </group>
    </body>
  </file>
  <header xmlns="">
    <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">732bf152d2b505735d598b934e039a1a3d379962</xliffext:olfilehash>
  </header>
</xliff>