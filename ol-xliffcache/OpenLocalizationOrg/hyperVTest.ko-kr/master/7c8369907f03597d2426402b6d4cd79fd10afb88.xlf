<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-us" target-language="ko-kr" original="foo.file" tool-id="8662f078-7563-4650-80b0-da0613f31ecb" product-name="foo" product-version="1.0" build-num="1">
    <header>
      <tool tool-id="8662f078-7563-4650-80b0-da0613f31ecb" tool-name="MarkdownToXliff" tool-version="1.0" tool-company="Microsoft" />
      <olfilehash xmlns="">7c8369907f03597d2426402b6d4cd79fd10afb88</olfilehash>
    </header>
    <body>
      <group id="9e369666-5dd5-4dc4-8464-5b130f8ba4a6">
        <trans-unit id="73b2b963-37a4-427f-a2f9-c1d0e9b49ab9" xml:space="preserve">
          <source>ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9</source>
          <target state="new">ms.ContentId: 8DE9250B-556B-47BC-AD9A-8992B3D3D0F9</target>
        </trans-unit>
        <trans-unit id="c257275a-898f-44f7-abfc-aec1306b2609" xml:space="preserve">
          <source>title: PowerShell Snippets</source>
          <target state="new">title: PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="69fed44c-d3d2-481e-b7c6-4e3abf39d5a6" xml:space="preserve">
          <source>PowerShell Snippets</source>
          <target state="new">PowerShell Snippets</target>
        </trans-unit>
        <trans-unit id="2a1b1163-5c4f-42d0-88fb-e40ca2c6c9c3" xml:space="preserve">
          <source>12-Nov update.Adding this sentence to validate the bug 451132 result.</source>
          <target state="new">12-Nov update.Adding this sentence to validate the bug 451132 result.</target>
        </trans-unit>
        <trans-unit id="53de6219-3dfd-4e8f-a979-9a18e1a1c683" xml:space="preserve">
          <source>PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</source>
          <target state="new">PowerShell is an awesome scripting, automation, and management tool for Hyper-V.  Here is a toolbox for exploring some of the cool things it can do!</target>
        </trans-unit>
        <trans-unit id="01a7b22e-2ef0-44a2-baf4-d3a873a81641" xml:space="preserve">
          <source>All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</source>
          <target state="new">All Hyper-V management requires running as administrator so assume all scripts and snippets must be run as administrator from a Hyper-V Administrator account.</target>
        </trans-unit>
        <trans-unit id="4e36cd5e-e61a-41d7-8d62-e8dd580db706" xml:space="preserve">
          <source>If you aren't sure if you have the right permissions, type <bpt id="3a9457d2-d34a-403f-8f7f-178a71320577">&lt;code&gt;</bpt>Get-VM<ept id="3a9457d2-d34a-403f-8f7f-178a71320577">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</source>
          <target state="new">If you aren't sure if you have the right permissions, type <bpt id="3a9457d2-d34a-403f-8f7f-178a71320577">&lt;code&gt;</bpt>Get-VM<ept id="3a9457d2-d34a-403f-8f7f-178a71320577">&lt;/code&gt;</ept> and if it runs with no errors, you're ready to go.</target>
        </trans-unit>
        <trans-unit id="e05e8961-30ef-4f84-9c89-412e9df539e1" xml:space="preserve">
          <source>PowerShell Direct tools</source>
          <target state="new">PowerShell Direct tools</target>
        </trans-unit>
        <trans-unit id="4aee45be-1c05-4186-abab-1513d8271357" xml:space="preserve">
          <source>All of the scripts and snippets in this section will rely on the following basics.</source>
          <target state="new">All of the scripts and snippets in this section will rely on the following basics.</target>
        </trans-unit>
        <trans-unit id="fe7720b7-aecb-45e3-a98b-dc8c9d928ac8" xml:space="preserve">
          <source><bpt id="f2ea8e09-706b-474e-bdcc-684faddee533">&lt;strong&gt;</bpt>Requirements<ept id="f2ea8e09-706b-474e-bdcc-684faddee533">&lt;/strong&gt;</ept> :</source>
          <target state="new"><bpt id="f2ea8e09-706b-474e-bdcc-684faddee533">&lt;strong&gt;</bpt>Requirements<ept id="f2ea8e09-706b-474e-bdcc-684faddee533">&lt;/strong&gt;</ept> :</target>
        </trans-unit>
        <trans-unit id="7d5df55e-c841-4088-8d92-f799c71046e1" xml:space="preserve">
          <source>PowerShell Direct.</source>
          <target state="new">PowerShell Direct.</target>
        </trans-unit>
        <trans-unit id="dd0c84ff-6294-4ea9-bbd0-72cbdce547a0" xml:space="preserve">
          <source>Windows 10 guest and host OS.</source>
          <target state="new">Windows 10 guest and host OS.</target>
        </trans-unit>
        <trans-unit id="6a39b9f1-26cb-4299-aa52-4ae5218adcda" xml:space="preserve">
          <source><bpt id="d68fb467-d7b4-4f9d-a61c-a7f48b53f642">&lt;strong&gt;</bpt>Common Variables<ept id="d68fb467-d7b4-4f9d-a61c-a7f48b53f642">&lt;/strong&gt;</ept> :</source>
          <target state="new"><bpt id="d68fb467-d7b4-4f9d-a61c-a7f48b53f642">&lt;strong&gt;</bpt>Common Variables<ept id="d68fb467-d7b4-4f9d-a61c-a7f48b53f642">&lt;/strong&gt;</ept> :</target>
        </trans-unit>
        <trans-unit id="4256000e-d9b0-4b3c-9c7c-355a4922330b" xml:space="preserve">
          <source><bpt id="33b4c994-f309-4c5f-84de-c81b66f681f6">&lt;code&gt;</bpt>$VMName<ept id="33b4c994-f309-4c5f-84de-c81b66f681f6">&lt;/code&gt;</ept> -- this is a string with the VMName.</source>
          <target state="new"><bpt id="33b4c994-f309-4c5f-84de-c81b66f681f6">&lt;code&gt;</bpt>$VMName<ept id="33b4c994-f309-4c5f-84de-c81b66f681f6">&lt;/code&gt;</ept> -- this is a string with the VMName.</target>
        </trans-unit>
        <trans-unit id="8b00ec87-868c-469a-93ef-270b32895072" xml:space="preserve">
          <source>See a list of available VMs with <bpt id="92402101-1ee3-4af0-ab26-c9aa994e88e2">&lt;code&gt;</bpt>Get-VM<ept id="92402101-1ee3-4af0-ab26-c9aa994e88e2">&lt;/code&gt;</ept></source>
          <target state="new">See a list of available VMs with <bpt id="92402101-1ee3-4af0-ab26-c9aa994e88e2">&lt;code&gt;</bpt>Get-VM<ept id="92402101-1ee3-4af0-ab26-c9aa994e88e2">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="ca8b827c-75c3-462c-8bef-3d45b7dcd777" xml:space="preserve">
          <source><bpt id="05775126-285d-4186-9803-22c425fffae3">&lt;code&gt;</bpt>$cred<ept id="05775126-285d-4186-9803-22c425fffae3">&lt;/code&gt;</ept> -- Credential for the guest OS.</source>
          <target state="new"><bpt id="05775126-285d-4186-9803-22c425fffae3">&lt;code&gt;</bpt>$cred<ept id="05775126-285d-4186-9803-22c425fffae3">&lt;/code&gt;</ept> -- Credential for the guest OS.</target>
        </trans-unit>
        <trans-unit id="1069c602-b576-4780-9025-a6a88fa25d5e" xml:space="preserve">
          <source>Can be populated using <bpt id="55547a06-0f70-4a84-ab87-6a72030670e7">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="55547a06-0f70-4a84-ab87-6a72030670e7">&lt;/code&gt;</ept></source>
          <target state="new">Can be populated using <bpt id="55547a06-0f70-4a84-ab87-6a72030670e7">&lt;code&gt;</bpt>$cred = Get-Credential<ept id="55547a06-0f70-4a84-ab87-6a72030670e7">&lt;/code&gt;</ept></target>
        </trans-unit>
        <trans-unit id="055b97dd-3106-45ab-a270-b126ec8c3cac" xml:space="preserve">
          <source>Check if the guest has booted</source>
          <target state="new">Check if the guest has booted</target>
        </trans-unit>
        <trans-unit id="806dfa95-adbd-42d5-a22e-0f8ed2c11107" xml:space="preserve">
          <source>Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</source>
          <target state="new">Hyper-V Manager doesn't give you visibility into the guest operating system which often makes it difficult to know whether the guest OS has booted.</target>
        </trans-unit>
        <trans-unit id="4dbe03f5-1ddf-4cc3-9a0c-68e29cdcaffd" xml:space="preserve">
          <source>Use this command to check whether the guest has booted.</source>
          <target state="new">Use this command to check whether the guest has booted.</target>
        </trans-unit>
        <trans-unit id="5f5f68fe-fb29-455d-b0db-0dad53525e45" xml:space="preserve">
          <source><bpt id="4214dfad-a4bb-4bf3-8b80-c6f062ef2c71">&lt;strong&gt;</bpt>Outcome<ept id="4214dfad-a4bb-4bf3-8b80-c6f062ef2c71">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="4214dfad-a4bb-4bf3-8b80-c6f062ef2c71">&lt;strong&gt;</bpt>Outcome<ept id="4214dfad-a4bb-4bf3-8b80-c6f062ef2c71">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="2b4e1942-3730-4150-b386-91f2c9cccc27" xml:space="preserve">
          <source>Prints a friendly message declaring the state of the guest OS.</source>
          <target state="new">Prints a friendly message declaring the state of the guest OS.</target>
        </trans-unit>
        <trans-unit id="37e4146f-6c45-4e8d-818f-9ab058c5fa40" xml:space="preserve">
          <source>Script locking until the guest has booted</source>
          <target state="new">Script locking until the guest has booted</target>
        </trans-unit>
        <trans-unit id="d081bee6-6490-4d17-b93f-32c6875dde7b" xml:space="preserve">
          <source>The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</source>
          <target state="new">The following function waits uses the same principle to wait until PowerShell is available in the guest (meaning the OS has booted and most services are running) then returns.</target>
        </trans-unit>
        <trans-unit id="eaf830ef-8cb0-4614-8d42-8e2a49d9a262" xml:space="preserve">
          <source><bpt id="4e34b40f-81dc-4dc4-b2fb-c9855b69e44c">&lt;strong&gt;</bpt>Outcome<ept id="4e34b40f-81dc-4dc4-b2fb-c9855b69e44c">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="4e34b40f-81dc-4dc4-b2fb-c9855b69e44c">&lt;strong&gt;</bpt>Outcome<ept id="4e34b40f-81dc-4dc4-b2fb-c9855b69e44c">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="8b569681-6d73-47eb-95be-c5f475bdfd96" xml:space="preserve">
          <source>Prints a friendly message and locks until the connection to the VM succeeds.</source>
          <target state="new">Prints a friendly message and locks until the connection to the VM succeeds.</target>
        </trans-unit>
        <trans-unit id="77c12881-0c41-46d0-8ec5-4d31375ff1c9" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="996bf6e5-4496-47de-a1b1-7f29a6db065b" xml:space="preserve">
          <source>Script locking until the guest has a network</source>
          <target state="new">Script locking until the guest has a network</target>
        </trans-unit>
        <trans-unit id="5cc108d9-f5b2-4b88-a111-c54e11574745" xml:space="preserve">
          <source>With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</source>
          <target state="new">With PowerShell Direct it is possible to get connected to a PowerShell session inside a virtual machine before the virtual machine has received an IP address.</target>
        </trans-unit>
        <trans-unit id="8bddf9fb-6a93-4143-a4aa-c69a0e7d1baf" xml:space="preserve">
          <source><bpt id="5f8a1f18-fe51-4af6-8cd9-c335b17c0f6c">&lt;em&gt;</bpt>* Outcome *<ept id="5f8a1f18-fe51-4af6-8cd9-c335b17c0f6c">&lt;/em&gt;</ept></source>
          <target state="new"><bpt id="5f8a1f18-fe51-4af6-8cd9-c335b17c0f6c">&lt;em&gt;</bpt>* Outcome *<ept id="5f8a1f18-fe51-4af6-8cd9-c335b17c0f6c">&lt;/em&gt;</ept></target>
        </trans-unit>
        <trans-unit id="5ea0f11b-0794-42c9-9e7e-0d965f714852" xml:space="preserve">
          <source>Locks until a DHCP lease is recieved.</source>
          <target state="new">Locks until a DHCP lease is recieved.</target>
        </trans-unit>
        <trans-unit id="13c5aab7-6214-4e52-b49d-db9265761b1e" xml:space="preserve">
          <source>Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</source>
          <target state="new">Since this script is not looking for a specific subnet or IP address, it works no matter what network configuration you're using.</target>
        </trans-unit>
        <trans-unit id="7996d0f1-50ea-4982-aa84-af395e363fc0" xml:space="preserve">
          <source>Succeeds silently.</source>
          <target state="new">Succeeds silently.</target>
        </trans-unit>
        <trans-unit id="8632353b-bfea-487d-8294-ef7ef7488864" xml:space="preserve">
          <source>Managing credentials with PowerShell</source>
          <target state="new">Managing credentials with PowerShell</target>
        </trans-unit>
        <trans-unit id="71a3a62f-d927-454a-a9d9-132ae9532e19" xml:space="preserve">
          <source>Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</source>
          <target state="new">Hyper-V scripts frequently require handling credentials for one or more virtual machines, Hyper-V host, or both.</target>
        </trans-unit>
        <trans-unit id="0a59f987-1aa5-40d8-b3a2-350fcebf502c" xml:space="preserve">
          <source>There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</source>
          <target state="new">There are multiple ways you can achieve this when working with PowerShell Direct or standard PowerShell remoting:</target>
        </trans-unit>
        <trans-unit id="fb644a9d-4f0d-495a-ac65-806e1b23a2c7" xml:space="preserve">
          <source>The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</source>
          <target state="new">The first (and simplest) way is to have the same user credentials be valid in the host and the guest or local and remote host.</target>
        </trans-unit>
        <trans-unit id="9e2b60f4-0912-4f27-be72-56e73d444a12" xml:space="preserve">
          <source>This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</source>
          <target state="new">This is quite easy if you are logging in with your Microsoft account - or if you are in a domain environment.</target>
        </trans-unit>
        <trans-unit id="fe961e59-b9c3-460c-a4cb-f54d606d0ee4" xml:space="preserve">
          <source>In this scenario you can just run <bpt id="ee39eab5-ffce-423c-93f5-87588a9c5a29">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="ee39eab5-ffce-423c-93f5-87588a9c5a29">&lt;/code&gt;</ept>.</source>
          <target state="new">In this scenario you can just run <bpt id="ee39eab5-ffce-423c-93f5-87588a9c5a29">&lt;code&gt;</bpt>Invoke-Command -VMName "test" {get-process}<ept id="ee39eab5-ffce-423c-93f5-87588a9c5a29">&lt;/code&gt;</ept>.</target>
        </trans-unit>
        <trans-unit id="afe7779b-3110-4cfd-bb9d-368a5492151c" xml:space="preserve">
          <source>Let PowerShell prompt you for credentials</source>
          <target state="new">Let PowerShell prompt you for credentials</target>
        </trans-unit>
        <trans-unit id="d294eb69-632e-4d57-8edf-c6238ee016b1" xml:space="preserve">
          <source>If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</source>
          <target state="new">If your credentials do not match you will automatically get a credential prompt allowing you to provide the appropriate credentials for the virtual machine.</target>
        </trans-unit>
        <trans-unit id="be882acf-6335-43f0-ba79-568c72e8a58c" xml:space="preserve">
          <source>Store credentials in a variable for reuse.</source>
          <target state="new">Store credentials in a variable for reuse.</target>
        </trans-unit>
        <trans-unit id="e473e8f0-7f95-45c5-be66-1ae956985329" xml:space="preserve">
          <source>Running a simple command like this:</source>
          <target state="new">Running a simple command like this:</target>
        </trans-unit>
        <trans-unit id="38c60a44-3bf6-4257-94de-4f1f47652091" xml:space="preserve">
          <source>And then running something like this:</source>
          <target state="new">And then running something like this:</target>
        </trans-unit>
        <trans-unit id="300fe873-313a-4b56-b000-08cf8bb40c8b" xml:space="preserve">
          <source>Will mean that you only get prompted once per script/PowerShell session for your credentials.</source>
          <target state="new">Will mean that you only get prompted once per script/PowerShell session for your credentials.</target>
        </trans-unit>
        <trans-unit id="38154aa4-3ba0-43d9-83bc-903e1cf78967" xml:space="preserve">
          <source>Code your credentials into your scripts.</source>
          <target state="new">Code your credentials into your scripts.</target>
        </trans-unit>
        <trans-unit id="93522cd4-24a4-44b8-9fa0-2e03d82cdd65" xml:space="preserve">
          <source><bpt id="66d86085-7ac4-4ea5-8c39-30ad904f75c5">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="66d86085-7ac4-4ea5-8c39-30ad904f75c5">&lt;/strong&gt;</ept></source>
          <target state="new"><bpt id="66d86085-7ac4-4ea5-8c39-30ad904f75c5">&lt;strong&gt;</bpt>Don't do this for any real workload or system<ept id="66d86085-7ac4-4ea5-8c39-30ad904f75c5">&lt;/strong&gt;</ept></target>
        </trans-unit>
        <trans-unit id="83ef1da5-27df-45d7-a3ec-4bafdfabb3d0" xml:space="preserve">
          <source>Warning:  _Do not do this in a production system.</source>
          <target state="new">Warning:  _Do not do this in a production system.</target>
        </trans-unit>
        <trans-unit id="7e7528b3-b6b6-464f-ad1b-19ab14f5982d" xml:space="preserve">
          <source>Do not do this with real passwords._</source>
          <target state="new">Do not do this with real passwords._</target>
        </trans-unit>
        <trans-unit id="0a34e70f-29bd-423c-af62-d160dd3e3926" xml:space="preserve">
          <source>You can hand craft a PSCredential object with some code like this:</source>
          <target state="new">You can hand craft a PSCredential object with some code like this:</target>
        </trans-unit>
        <trans-unit id="0c279a97-3601-4019-aa1d-a09c598acfe1" xml:space="preserve">
          <source>Grossly insecure - but useful for testing.</source>
          <target state="new">Grossly insecure - but useful for testing.</target>
        </trans-unit>
        <trans-unit id="a2babd14-b0ed-4fe3-bdb0-5a3cea1bcff6" xml:space="preserve">
          <source>Now you get no prompts at all in this session.</source>
          <target state="new">Now you get no prompts at all in this session.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>