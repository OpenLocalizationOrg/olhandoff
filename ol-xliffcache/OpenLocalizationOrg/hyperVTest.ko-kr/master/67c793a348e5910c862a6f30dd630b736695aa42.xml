{
  "nodes": [
    {
      "pos": [
        28,
        105
      ],
      "content": "Access datasets with Machine Learning Python client library | Microsoft Azure"
    },
    {
      "pos": [
        125,
        257
      ],
      "content": "Install and use the Python client library to access and manage Azure Machine Learning data securely from a local Python environment."
    },
    {
      "pos": [
        606,
        688
      ],
      "content": "Access datasets with Python using the Azure Machine Learning Python client library"
    },
    {
      "pos": [
        691,
        923
      ],
      "content": "The preview of Microsoft Azure Machine Learning Python client library can enable secure access to your Azure Machine Learning datasets from a local Python environment and enables the creation and management of datasets in workspace."
    },
    {
      "pos": [
        925,
        968
      ],
      "content": "This topic provides instructions on how to:"
    },
    {
      "pos": [
        972,
        1022
      ],
      "content": "install the Machine Learning Python client library"
    },
    {
      "pos": [
        1026,
        1181
      ],
      "content": "access and upload datasets, including instructions on how to get authorization to access Azure Machine Learning datasets from your local Python environment"
    },
    {
      "pos": [
        1185,
        1230
      ],
      "content": "access intermediate datasets from experiments"
    },
    {
      "pos": [
        1234,
        1384
      ],
      "content": "use the Python client library to enumerate datasets, access metadata, read the contents of a dataset, create new datasets and update existing datasets"
    },
    {
      "pos": [
        1482,
        1484
      ],
      "content": "##"
    },
    {
      "pos": [
        1512,
        1525
      ],
      "content": "Prerequisites"
    },
    {
      "pos": [
        1527,
        1602
      ],
      "content": "The Python client library has been tested under the following environments:"
    },
    {
      "pos": [
        1607,
        1629
      ],
      "content": "Windows, Mac and Linux"
    },
    {
      "pos": [
        1633,
        1656
      ],
      "content": "Python 2.7, 3.3 and 3.4"
    },
    {
      "pos": [
        1658,
        1704
      ],
      "content": "It has a dependency on the following packages:"
    },
    {
      "pos": [
        1709,
        1717
      ],
      "content": "requests"
    },
    {
      "pos": [
        1721,
        1736
      ],
      "content": "python-dateutil"
    },
    {
      "pos": [
        1740,
        1746
      ],
      "content": "pandas"
    },
    {
      "pos": [
        1748,
        2097
      ],
      "content": "We recommend using a Python distribution such as <bpt id=\"p1\">[</bpt>Anaconda<ept id=\"p1\">](http://continuum.io/downloads#all)</ept><ph id=\"ph3\"/> or <bpt id=\"p2\">[</bpt>Canopy<ept id=\"p2\">](https://store.enthought.com/downloads/)</ept>, which come with Python, IPython and the three packages  listed above installed. Although IPython is not strictly required, it is a great environment for manipulating and visualizing data interactively.",
      "nodes": [
        {
          "content": "We recommend using a Python distribution such as <bpt id=\"p1\">[</bpt>Anaconda<ept id=\"p1\">](http://continuum.io/downloads#all)</ept><ph id=\"ph3\"/> or <bpt id=\"p2\">[</bpt>Canopy<ept id=\"p2\">](https://store.enthought.com/downloads/)</ept>, which come with Python, IPython and the three packages  listed above installed.",
          "pos": [
            0,
            317
          ]
        },
        {
          "content": "Although IPython is not strictly required, it is a great environment for manipulating and visualizing data interactively.",
          "pos": [
            318,
            439
          ]
        }
      ]
    },
    {
      "pos": [
        2100,
        2103
      ],
      "content": "###"
    },
    {
      "pos": [
        2130,
        2193
      ],
      "content": "How to install the Azure Machine Learning Python client library"
    },
    {
      "pos": [
        2195,
        2503
      ],
      "content": "The Azure Machine Learning Python client library must also be installed to complete the tasks outlined in this topic. It is available from the <bpt id=\"p3\">[</bpt>Python Package Index<ept id=\"p3\">](https://pypi.python.org/pypi/azureml)</ept>. To install it in your Python environment, run the following command from your local Python environment:",
      "nodes": [
        {
          "content": "The Azure Machine Learning Python client library must also be installed to complete the tasks outlined in this topic.",
          "pos": [
            0,
            117
          ]
        },
        {
          "content": "It is available from the <bpt id=\"p3\">[</bpt>Python Package Index<ept id=\"p3\">](https://pypi.python.org/pypi/azureml)</ept>.",
          "pos": [
            118,
            242
          ]
        },
        {
          "content": "To install it in your Python environment, run the following command from your local Python environment:",
          "pos": [
            243,
            346
          ]
        }
      ]
    },
    {
      "pos": [
        2530,
        2672
      ],
      "content": "Alternatively, you can download and install from the sources on <bpt id=\"p4\">[</bpt>github<ept id=\"p4\">](https://github.com/Azure/Azure-MachineLearning-ClientLibrary-Python)</ept>."
    },
    {
      "pos": [
        2703,
        2806
      ],
      "content": "If you have git installed on your machine, you can use pip to install directly from the git repository:"
    },
    {
      "pos": [
        2902,
        2904
      ],
      "content": "##"
    },
    {
      "pos": [
        2932,
        2975
      ],
      "content": "Use Studio Code snippets to access datasets"
    },
    {
      "pos": [
        2977,
        3095
      ],
      "content": "The Python client library gives you programmatic access to your existing datasets from experiments that have been run."
    },
    {
      "pos": [
        3097,
        3292
      ],
      "content": "From the Studio web interface, you can generate code snippets that include all the necessary information to download and deserialize datasets as Pandas DataFrame objects on your location machine."
    },
    {
      "pos": [
        3321,
        3345
      ],
      "content": "Security for data access"
    },
    {
      "pos": [
        3347,
        3556
      ],
      "content": "The code snippets provided by Studio for use with the Python client library includes your workspace id and authorization token. These provide full access to your workspace and must be protect, like a password.",
      "nodes": [
        {
          "content": "The code snippets provided by Studio for use with the Python client library includes your workspace id and authorization token.",
          "pos": [
            0,
            127
          ]
        },
        {
          "content": "These provide full access to your workspace and must be protect, like a password.",
          "pos": [
            128,
            209
          ]
        }
      ]
    },
    {
      "pos": [
        3558,
        3792
      ],
      "content": "For security reasons, the code snippet functionality is only available to users that have their role set as <bpt id=\"p5\">**</bpt>Owner<ept id=\"p5\">**</ept><ph id=\"ph4\"/> for the workspace. Your role is displayed in Azure Machine Learning Studio on the <bpt id=\"p6\">**</bpt>USERS<ept id=\"p6\">**</ept><ph id=\"ph5\"/> page under <bpt id=\"p7\">**</bpt>Settings<ept id=\"p7\">**</ept>.",
      "nodes": [
        {
          "content": "For security reasons, the code snippet functionality is only available to users that have their role set as <bpt id=\"p5\">**</bpt>Owner<ept id=\"p5\">**</ept><ph id=\"ph4\"/> for the workspace.",
          "pos": [
            0,
            188
          ]
        },
        {
          "content": "Your role is displayed in Azure Machine Learning Studio on the <bpt id=\"p6\">**</bpt>USERS<ept id=\"p6\">**</ept><ph id=\"ph5\"/> page under <bpt id=\"p7\">**</bpt>Settings<ept id=\"p7\">**</ept>.",
          "pos": [
            189,
            376
          ]
        }
      ]
    },
    {
      "pos": [
        3794,
        3815
      ],
      "content": "![Security][security]"
    },
    {
      "pos": [
        3817,
        3979
      ],
      "content": "If your role is not set as <bpt id=\"p8\">**</bpt>Owner<ept id=\"p8\">**</ept>, you can either request to be re-invited as an owner, or ask the owner of the workspace to provide you with the code snippet."
    },
    {
      "pos": [
        3981,
        4048
      ],
      "content": "To obtain the authorization token, you can do one of the following:"
    },
    {
      "pos": [
        4053,
        4476
      ],
      "content": "Ask for a token from an owner. Owners can access their authorization tokens from the Settings page of their workspace in Studio. Select <bpt id=\"p9\">**</bpt>Settings<ept id=\"p9\">**</ept><ph id=\"ph6\"/> from the left pane and click on <bpt id=\"p10\">**</bpt>AUTHORIZATION TOKENS<ept id=\"p10\">**</ept><ph id=\"ph7\"/> to see the primary and secondary tokens.  Although either the primary or the secondary authorization tokens can be used in the code snippet, it is recommended that owners only share the secondary authorization tokens.",
      "nodes": [
        {
          "content": "Ask for a token from an owner.",
          "pos": [
            0,
            30
          ]
        },
        {
          "content": "Owners can access their authorization tokens from the Settings page of their workspace in Studio.",
          "pos": [
            31,
            128
          ]
        },
        {
          "content": "Select <bpt id=\"p9\">**</bpt>Settings<ept id=\"p9\">**</ept><ph id=\"ph6\"/> from the left pane and click on <bpt id=\"p10\">**</bpt>AUTHORIZATION TOKENS<ept id=\"p10\">**</ept><ph id=\"ph7\"/> to see the primary and secondary tokens.",
          "pos": [
            129,
            352
          ]
        },
        {
          "content": "Although either the primary or the secondary authorization tokens can be used in the code snippet, it is recommended that owners only share the secondary authorization tokens.",
          "pos": [
            354,
            529
          ]
        }
      ]
    },
    {
      "pos": [
        4568,
        4733
      ],
      "content": "Ask to be promoted to role of owner.  To do this, a current owner of the workspace needs to first remove you from the workspace then re-invite you to it as an owner.",
      "nodes": [
        {
          "content": "Ask to be promoted to role of owner.",
          "pos": [
            0,
            36
          ]
        },
        {
          "content": "To do this, a current owner of the workspace needs to first remove you from the workspace then re-invite you to it as an owner.",
          "pos": [
            38,
            165
          ]
        }
      ]
    },
    {
      "pos": [
        4735,
        4898
      ],
      "content": "Once developers have obtained the workspace id and authorization token, they will be able to access the workspace using the code  snippet regardless of their role."
    },
    {
      "pos": [
        4900,
        5075
      ],
      "content": "Authorization tokens are managed on the <bpt id=\"p11\">**</bpt>AUTHORIZATION TOKENS<ept id=\"p11\">**</ept><ph id=\"ph9\"/> page under <bpt id=\"p12\">**</bpt>SETTINGS<ept id=\"p12\">**</ept>. You can regenerate them, but this procedure will revoke access to the previous token.",
      "nodes": [
        {
          "content": "Authorization tokens are managed on the <bpt id=\"p11\">**</bpt>AUTHORIZATION TOKENS<ept id=\"p11\">**</ept><ph id=\"ph9\"/> page under <bpt id=\"p12\">**</bpt>SETTINGS<ept id=\"p12\">**</ept>.",
          "pos": [
            0,
            183
          ]
        },
        {
          "content": "You can regenerate them, but this procedure will revoke access to the previous token.",
          "pos": [
            184,
            269
          ]
        }
      ]
    },
    {
      "pos": [
        5113,
        5160
      ],
      "content": "Access datasets from a local Python application"
    },
    {
      "pos": [
        5165,
        5249
      ],
      "content": "In Machine Learning Studio, click on <bpt id=\"p13\">**</bpt>DATASETS<ept id=\"p13\">**</ept><ph id=\"ph10\"/> in the navigation bar on the left."
    },
    {
      "pos": [
        5254,
        5393
      ],
      "content": "Select the dataset you would like to access. You can select any of the datasets from the <bpt id=\"p14\">**</bpt>MY DATASETS<ept id=\"p14\">**</ept><ph id=\"ph11\"/> list or from the <bpt id=\"p15\">**</bpt>SAMPLES<ept id=\"p15\">**</ept><ph id=\"ph12\"/> list.",
      "nodes": [
        {
          "content": "Select the dataset you would like to access.",
          "pos": [
            0,
            44
          ]
        },
        {
          "content": "You can select any of the datasets from the <bpt id=\"p14\">**</bpt>MY DATASETS<ept id=\"p14\">**</ept><ph id=\"ph11\"/> list or from the <bpt id=\"p15\">**</bpt>SAMPLES<ept id=\"p15\">**</ept><ph id=\"ph12\"/> list.",
          "pos": [
            45,
            249
          ]
        }
      ]
    },
    {
      "pos": [
        5398,
        5573
      ],
      "content": "From the bottom toolbar, click on <bpt id=\"p16\">**</bpt>Generate Data Access Code<ept id=\"p16\">**</ept>. Note that this button will be disabled if the data is in a format incompatible with the Python client library.",
      "nodes": [
        {
          "content": "From the bottom toolbar, click on <bpt id=\"p16\">**</bpt>Generate Data Access Code<ept id=\"p16\">**</ept>.",
          "pos": [
            0,
            104
          ]
        },
        {
          "content": "Note that this button will be disabled if the data is in a format incompatible with the Python client library.",
          "pos": [
            105,
            215
          ]
        }
      ]
    },
    {
      "pos": [
        5579,
        5600
      ],
      "content": "![Datasets][datasets]"
    },
    {
      "pos": [
        5605,
        5688
      ],
      "content": "Select the code snippet from the window that appears and copy it to your clipboard."
    },
    {
      "pos": [
        5694,
        5729
      ],
      "content": "![Access Code][dataset-access-code]"
    },
    {
      "pos": [
        5734,
        5799
      ],
      "content": "Paste the code into the notebook of you local Python application."
    },
    {
      "pos": [
        5805,
        5833
      ],
      "content": "![Notebook][ipython-dataset]"
    },
    {
      "pos": [
        5883,
        5945
      ],
      "content": "Access intermediate datasets from Machine Learning experiments"
    },
    {
      "pos": [
        5947,
        6207
      ],
      "content": "After an experiment is run in the Machine Learning Studio, it is possible to access the intermediate datasets from the output nodes of modules. Intermediate datasets are data that has been created and used for intermediate steps when a model tool has been run.",
      "nodes": [
        {
          "content": "After an experiment is run in the Machine Learning Studio, it is possible to access the intermediate datasets from the output nodes of modules.",
          "pos": [
            0,
            143
          ]
        },
        {
          "content": "Intermediate datasets are data that has been created and used for intermediate steps when a model tool has been run.",
          "pos": [
            144,
            260
          ]
        }
      ]
    },
    {
      "pos": [
        6209,
        6319
      ],
      "content": "Intermediate datasets can be accessed as long as the data format is compatible with the Python client library."
    },
    {
      "pos": [
        6321,
        6418
      ],
      "content": "The following formats are supported (constants for these are in the <ph id=\"ph13\">`azureml.DataTypeIds`</ph><ph id=\"ph14\"/> class):"
    },
    {
      "pos": [
        6423,
        6432
      ],
      "content": "PlainText"
    },
    {
      "pos": [
        6436,
        6446
      ],
      "content": "GenericCSV"
    },
    {
      "pos": [
        6450,
        6460
      ],
      "content": "GenericTSV"
    },
    {
      "pos": [
        6464,
        6482
      ],
      "content": "GenericCSVNoHeader"
    },
    {
      "pos": [
        6486,
        6504
      ],
      "content": "GenericTSVNoHeader"
    },
    {
      "pos": [
        6506,
        6629
      ],
      "content": "You can determine the format by hovering over a module output node. It is displayed along with the node name, in a tooltip.",
      "nodes": [
        {
          "content": "You can determine the format by hovering over a module output node.",
          "pos": [
            0,
            67
          ]
        },
        {
          "content": "It is displayed along with the node name, in a tooltip.",
          "pos": [
            68,
            123
          ]
        }
      ]
    },
    {
      "pos": [
        6631,
        6775
      ],
      "content": "Some of the modules, such as the [Split][split] module, output to a format named <ph id=\"ph15\">`Dataset`</ph>, which is not supported by the Python client library."
    },
    {
      "pos": [
        6777,
        6810
      ],
      "content": "![Dataset Format][dataset-format]"
    },
    {
      "pos": [
        6812,
        6935
      ],
      "content": "You'll need to use a conversion module, such as [Convert to CSV][convert-to-csv], to get an output into a supported format."
    },
    {
      "pos": [
        6937,
        6969
      ],
      "content": "![GenericCSV Format][csv-format]"
    },
    {
      "pos": [
        6971,
        7081
      ],
      "content": "The following steps show an example that creates an experiment, runs it and accesses the intermediate dataset."
    },
    {
      "pos": [
        7086,
        7110
      ],
      "content": "Create a new experiment."
    },
    {
      "pos": [
        7115,
        7186
      ],
      "content": "Insert an <bpt id=\"p17\">**</bpt>Adult Census Income Binary Classification dataset<ept id=\"p17\">**</ept><ph id=\"ph16\"/> module."
    },
    {
      "pos": [
        7191,
        7274
      ],
      "content": "Insert a [Split][split] module, and connect its input to the dataset module output."
    },
    {
      "pos": [
        7279,
        7394
      ],
      "content": "Insert a [Convert to CSV][convert-to-csv] module and connect its input to one of the [Split][split] module outputs."
    },
    {
      "pos": [
        7399,
        7462
      ],
      "content": "Save the experiment, run it, and wait for it to finish running."
    },
    {
      "pos": [
        7467,
        7539
      ],
      "content": "Click on the output node on the [Convert to CSV][convert-to-csv] module."
    },
    {
      "pos": [
        7544,
        7609
      ],
      "content": "A context menu will appear, select <bpt id=\"p18\">**</bpt>Generate Data Access Code<ept id=\"p18\">**</ept>."
    },
    {
      "pos": [
        7615,
        7642
      ],
      "content": "![Context Menu][experiment]"
    },
    {
      "pos": [
        7647,
        7723
      ],
      "content": "A window will appear. Select the code snippet and copy it to your clipboard.",
      "nodes": [
        {
          "content": "A window will appear.",
          "pos": [
            0,
            21
          ]
        },
        {
          "content": "Select the code snippet and copy it to your clipboard.",
          "pos": [
            22,
            76
          ]
        }
      ]
    },
    {
      "pos": [
        7729,
        7777
      ],
      "content": "![Access Code][intermediate-dataset-access-code]"
    },
    {
      "pos": [
        7782,
        7814
      ],
      "content": "Paste the code in your notebook."
    },
    {
      "pos": [
        7820,
        7861
      ],
      "content": "![Notebook][ipython-intermediate-dataset]"
    },
    {
      "pos": [
        7867,
        7960
      ],
      "content": "You can visualize the data using matplotlib. This displays in a histogram for the age column:",
      "nodes": [
        {
          "content": "You can visualize the data using matplotlib.",
          "pos": [
            0,
            44
          ]
        },
        {
          "content": "This displays in a histogram for the age column:",
          "pos": [
            45,
            93
          ]
        }
      ]
    },
    {
      "pos": [
        7966,
        7997
      ],
      "content": "![Histogram][ipython-histogram]"
    },
    {
      "pos": [
        8000,
        8002
      ],
      "content": "##"
    },
    {
      "pos": [
        8027,
        8118
      ],
      "content": "Use the Machine Learning Python client library to access, read, create, and manage datasets"
    },
    {
      "pos": [
        8124,
        8133
      ],
      "content": "Workspace"
    },
    {
      "pos": [
        8135,
        8298
      ],
      "content": "The workspace is the entry point for the Python client library. Provide the <ph id=\"ph17\">`Workspace`</ph><ph id=\"ph18\"/> class with your workspace id and authorization token to create an instance:",
      "nodes": [
        {
          "content": "The workspace is the entry point for the Python client library.",
          "pos": [
            0,
            63
          ]
        },
        {
          "content": "Provide the <ph id=\"ph17\">`Workspace`</ph><ph id=\"ph18\"/> class with your workspace id and authorization token to create an instance:",
          "pos": [
            64,
            197
          ]
        }
      ]
    },
    {
      "pos": [
        8449,
        8467
      ],
      "content": "Enumerate datasets"
    },
    {
      "pos": [
        8469,
        8516
      ],
      "content": "To enumerate all datasets in a given workspace:"
    },
    {
      "pos": [
        8569,
        8613
      ],
      "content": "To enumerate just the user-created datasets:"
    },
    {
      "pos": [
        8671,
        8710
      ],
      "content": "To enumerate just the example datasets:"
    },
    {
      "pos": [
        8771,
        8830
      ],
      "content": "You can access a dataset by name (which is case-sensitive):"
    },
    {
      "pos": [
        8873,
        8903
      ],
      "content": "Or you can access it by index:"
    },
    {
      "pos": [
        8935,
        8943
      ],
      "content": "Metadata"
    },
    {
      "pos": [
        8945,
        9076
      ],
      "content": "Datasets have metadata, in addition to content. (Intermediate datasets are an exception to this rule and do not have any metadata.)",
      "nodes": [
        {
          "content": "Datasets have metadata, in addition to content.",
          "pos": [
            0,
            47
          ]
        },
        {
          "content": "(Intermediate datasets are an exception to this rule and do not have any metadata.)",
          "pos": [
            48,
            131
          ]
        }
      ]
    },
    {
      "pos": [
        9078,
        9141
      ],
      "content": "Some metadata values are assigned by the user at creation time:"
    },
    {
      "pos": [
        9240,
        9279
      ],
      "content": "Others are values assigned by Azure ML:"
    },
    {
      "pos": [
        9345,
        9410
      ],
      "content": "See the <ph id=\"ph19\">`SourceDataset`</ph><ph id=\"ph20\"/> class for more on the available metadata."
    },
    {
      "pos": [
        9417,
        9430
      ],
      "content": "Read contents"
    },
    {
      "pos": [
        9432,
        9611
      ],
      "content": "The code snippets provided by Machine Learning Studio automatically download and deserialize the dataset to a Pandas DataFrame object. This is done with the <ph id=\"ph21\">`to_dataframe`</ph><ph id=\"ph22\"/> method:",
      "nodes": [
        {
          "content": "The code snippets provided by Machine Learning Studio automatically download and deserialize the dataset to a Pandas DataFrame object.",
          "pos": [
            0,
            134
          ]
        },
        {
          "content": "This is done with the <ph id=\"ph21\">`to_dataframe`</ph><ph id=\"ph22\"/> method:",
          "pos": [
            135,
            213
          ]
        }
      ]
    },
    {
      "pos": [
        9644,
        9863
      ],
      "content": "If you prefer to download the raw data, and perform the deserialization yourself, that is an option. At the moment, this is the only option for formats such as 'ARFF', which the Python client library cannot deserialize.",
      "nodes": [
        {
          "content": "If you prefer to download the raw data, and perform the deserialization yourself, that is an option.",
          "pos": [
            0,
            100
          ]
        },
        {
          "content": "At the moment, this is the only option for formats such as 'ARFF', which the Python client library cannot deserialize.",
          "pos": [
            101,
            219
          ]
        }
      ]
    },
    {
      "pos": [
        9865,
        9894
      ],
      "content": "To read the contents as text:"
    },
    {
      "pos": [
        9931,
        9962
      ],
      "content": "To read the contents as binary:"
    },
    {
      "pos": [
        10003,
        10051
      ],
      "content": "You can also just open a stream to the contents:"
    },
    {
      "pos": [
        10131,
        10151
      ],
      "content": "Create a new dataset"
    },
    {
      "pos": [
        10153,
        10293
      ],
      "content": "The Python client library allow you to upload datasets from your Python program. These datasets will be available for use in your workspace.",
      "nodes": [
        {
          "content": "The Python client library allow you to upload datasets from your Python program.",
          "pos": [
            0,
            80
          ]
        },
        {
          "content": "These datasets will be available for use in your workspace.",
          "pos": [
            81,
            140
          ]
        }
      ]
    },
    {
      "pos": [
        10295,
        10363
      ],
      "content": "If you have your data in a Pandas DataFrame, use the following code:"
    },
    {
      "pos": [
        10593,
        10641
      ],
      "content": "If your data is already serialized, you can use:"
    },
    {
      "pos": [
        10872,
        11025
      ],
      "content": "The Python client library are able to serialize a Pandas DataFrame to the following formats (constants for these are in the <ph id=\"ph23\">`azureml.DataTypeIds`</ph><ph id=\"ph24\"/> class):"
    },
    {
      "pos": [
        11030,
        11039
      ],
      "content": "PlainText"
    },
    {
      "pos": [
        11043,
        11053
      ],
      "content": "GenericCSV"
    },
    {
      "pos": [
        11057,
        11067
      ],
      "content": "GenericTSV"
    },
    {
      "pos": [
        11071,
        11089
      ],
      "content": "GenericCSVNoHeader"
    },
    {
      "pos": [
        11093,
        11111
      ],
      "content": "GenericTSVNoHeader"
    },
    {
      "pos": [
        11118,
        11144
      ],
      "content": "Update an existing dataset"
    },
    {
      "pos": [
        11146,
        11255
      ],
      "content": "If you try to upload a new dataset with a name that matches an existing dataset, you'll get a conflict error."
    },
    {
      "pos": [
        11257,
        11346
      ],
      "content": "To update an existing dataset, you first need to get a reference to the existing dataset:"
    },
    {
      "pos": [
        11552,
        11647
      ],
      "content": "Then use <ph id=\"ph25\">`update_from_dataframe`</ph><ph id=\"ph26\"/> to serialize and replace the contents of the dataset on Azure:"
    },
    {
      "pos": [
        11896,
        12011
      ],
      "content": "If you want to serialize the data to a different format, specify a value for the optional <ph id=\"ph27\">`data_type_id`</ph><ph id=\"ph28\"/> parameter."
    },
    {
      "pos": [
        12367,
        12462
      ],
      "content": "You can optionally set a new description by specifying a value for the <ph id=\"ph29\">`description`</ph><ph id=\"ph30\"/> parameter."
    },
    {
      "pos": [
        12779,
        12985
      ],
      "content": "You can optionally set a new name by specifying a value for the <ph id=\"ph31\">`name`</ph><ph id=\"ph32\"/> parameter. From now on, you'll retrieve the dataset using the new name only. The following code updates the data, name and description.",
      "nodes": [
        {
          "content": "You can optionally set a new name by specifying a value for the <ph id=\"ph31\">`name`</ph><ph id=\"ph32\"/> parameter.",
          "pos": [
            0,
            115
          ]
        },
        {
          "content": "From now on, you'll retrieve the dataset using the new name only.",
          "pos": [
            116,
            181
          ]
        },
        {
          "content": "The following code updates the data, name and description.",
          "pos": [
            182,
            240
          ]
        }
      ]
    },
    {
      "pos": [
        13538,
        13694
      ],
      "content": "The <ph id=\"ph33\">`data_type_id`</ph>, <ph id=\"ph34\">`name`</ph><ph id=\"ph35\"/> and <ph id=\"ph36\">`description`</ph><ph id=\"ph37\"/> parameters are all optional, and default to their previous value. The <ph id=\"ph38\">`dataframe`</ph><ph id=\"ph39\"/> parameter is always required.",
      "nodes": [
        {
          "content": "The <ph id=\"ph33\">`data_type_id`</ph>, <ph id=\"ph34\">`name`</ph><ph id=\"ph35\"/> and <ph id=\"ph36\">`description`</ph><ph id=\"ph37\"/> parameters are all optional, and default to their previous value.",
          "pos": [
            0,
            197
          ]
        },
        {
          "content": "The <ph id=\"ph38\">`dataframe`</ph><ph id=\"ph39\"/> parameter is always required.",
          "pos": [
            198,
            277
          ]
        }
      ]
    },
    {
      "pos": [
        13696,
        13867
      ],
      "content": "If your data is already serialized, use <ph id=\"ph40\">`update_from_raw_data`</ph><ph id=\"ph41\"/> instead of <ph id=\"ph42\">`update_from_dataframe`</ph>. It works similarly, you just pass in <ph id=\"ph43\">`raw_data`</ph><ph id=\"ph44\"/> instead of  <ph id=\"ph45\">`dataframe`</ph>.",
      "nodes": [
        {
          "content": "If your data is already serialized, use <ph id=\"ph40\">`update_from_raw_data`</ph><ph id=\"ph41\"/> instead of <ph id=\"ph42\">`update_from_dataframe`</ph>.",
          "pos": [
            0,
            151
          ]
        },
        {
          "content": "It works similarly, you just pass in <ph id=\"ph43\">`raw_data`</ph><ph id=\"ph44\"/> instead of  <ph id=\"ph45\">`dataframe`</ph>.",
          "pos": [
            152,
            277
          ]
        }
      ]
    },
    {
      "pos": [
        13887,
        14728
      ],
      "content": "[security]:./media/machine-learning-python-data-access/security.png\n[dataset-format]:./media/machine-learning-python-data-access/dataset-format.png\n[csv-format]:./media/machine-learning-python-data-access/csv-format.png\n[datasets]:./media/machine-learning-python-data-access/datasets.png\n[dataset-access-code]:./media/machine-learning-python-data-access/dataset-access-code.png\n[ipython-dataset]:./media/machine-learning-python-data-access/ipython-dataset.png\n[experiment]:./media/machine-learning-python-data-access/experiment.png\n[intermediate-dataset-access-code]:./media/machine-learning-python-data-access/intermediate-dataset-access-code.png\n[ipython-intermediate-dataset]:./media/machine-learning-python-data-access/ipython-intermediate-dataset.png\n[ipython-histogram]:./media/machine-learning-python-data-access/ipython-histogram.png"
    },
    {
      "pos": [
        14758,
        14942
      ],
      "content": "[convert-to-csv]: https://msdn.microsoft.com/library/azure/faa6ba63-383c-4086-ba58-7abf26b85814/\n[split]: https://msdn.microsoft.com/library/azure/70530644-c97a-4ab6-85f7-88bf30a8be5f/"
    }
  ],
  "content": "<properties \n    pageTitle=\"Access datasets with Machine Learning Python client library | Microsoft Azure\" \n    description=\"Install and use the Python client library to access and manage Azure Machine Learning data securely from a local Python environment.\" \n    services=\"machine-learning\" \n    documentationCenter=\"python\" \n    authors=\"bradsev\" \n    manager=\"paulettm\" \n    editor=\"cgronlun\"/>\n\n<tags \n    ms.service=\"machine-learning\" \n    ms.workload=\"data-services\" \n    ms.tgt_pltfrm=\"na\" \n    ms.devlang=\"na\" \n    ms.topic=\"article\" \n    ms.date=\"12/04/2015\" \n    ms.author=\"huvalo;bradsev\" />\n\n\n#Access datasets with Python using the Azure Machine Learning Python client library \n\nThe preview of Microsoft Azure Machine Learning Python client library can enable secure access to your Azure Machine Learning datasets from a local Python environment and enables the creation and management of datasets in workspace.\n\nThis topic provides instructions on how to:\n\n* install the Machine Learning Python client library \n* access and upload datasets, including instructions on how to get authorization to access Azure Machine Learning datasets from your local Python environment\n*  access intermediate datasets from experiments\n*  use the Python client library to enumerate datasets, access metadata, read the contents of a dataset, create new datasets and update existing datasets\n\n[AZURE.INCLUDE [machine-learning-free-trial](../../includes/machine-learning-free-trial.md)]\n\n \n##<a name=\"prerequisites\"></a>Prerequisites\n\nThe Python client library has been tested under the following environments:\n\n - Windows, Mac and Linux\n - Python 2.7, 3.3 and 3.4\n\nIt has a dependency on the following packages:\n\n - requests\n - python-dateutil\n - pandas\n\nWe recommend using a Python distribution such as [Anaconda](http://continuum.io/downloads#all) or [Canopy](https://store.enthought.com/downloads/), which come with Python, IPython and the three packages  listed above installed. Although IPython is not strictly required, it is a great environment for manipulating and visualizing data interactively.\n\n\n###<a name=\"installation\"></a>How to install the Azure Machine Learning Python client library\n\nThe Azure Machine Learning Python client library must also be installed to complete the tasks outlined in this topic. It is available from the [Python Package Index](https://pypi.python.org/pypi/azureml). To install it in your Python environment, run the following command from your local Python environment:\n\n    pip install azureml\n\nAlternatively, you can download and install from the sources on [github](https://github.com/Azure/Azure-MachineLearning-ClientLibrary-Python).\n\n    python setup.py install\n\nIf you have git installed on your machine, you can use pip to install directly from the git repository:\n\n    pip install git+https://github.com/Azure/Azure-MachineLearning-ClientLibrary-Python.git\n\n\n##<a name=\"datasetAccess\"></a>Use Studio Code snippets to access datasets\n\nThe Python client library gives you programmatic access to your existing datasets from experiments that have been run.\n\nFrom the Studio web interface, you can generate code snippets that include all the necessary information to download and deserialize datasets as Pandas DataFrame objects on your location machine.\n\n### <a name=\"security\"></a>Security for data access\n\nThe code snippets provided by Studio for use with the Python client library includes your workspace id and authorization token. These provide full access to your workspace and must be protect, like a password.\n\nFor security reasons, the code snippet functionality is only available to users that have their role set as **Owner** for the workspace. Your role is displayed in Azure Machine Learning Studio on the **USERS** page under **Settings**.\n\n![Security][security]\n\nIf your role is not set as **Owner**, you can either request to be re-invited as an owner, or ask the owner of the workspace to provide you with the code snippet.\n\nTo obtain the authorization token, you can do one of the following:\n\n1. Ask for a token from an owner. Owners can access their authorization tokens from the Settings page of their workspace in Studio. Select **Settings** from the left pane and click on **AUTHORIZATION TOKENS** to see the primary and secondary tokens.  Although either the primary or the secondary authorization tokens can be used in the code snippet, it is recommended that owners only share the secondary authorization tokens.\n\n![](./media/machine-learning-python-data-access/ml-python-access-settings-tokens.png)\n\n2. Ask to be promoted to role of owner.  To do this, a current owner of the workspace needs to first remove you from the workspace then re-invite you to it as an owner.\n\nOnce developers have obtained the workspace id and authorization token, they will be able to access the workspace using the code  snippet regardless of their role.\n\nAuthorization tokens are managed on the **AUTHORIZATION TOKENS** page under **SETTINGS**. You can regenerate them, but this procedure will revoke access to the previous token.\n\n### <a name=\"accessingDatasets\"></a>Access datasets from a local Python application\n\n1. In Machine Learning Studio, click on **DATASETS** in the navigation bar on the left.\n\n2. Select the dataset you would like to access. You can select any of the datasets from the **MY DATASETS** list or from the **SAMPLES** list.\n\n3. From the bottom toolbar, click on **Generate Data Access Code**. Note that this button will be disabled if the data is in a format incompatible with the Python client library.\n\n    ![Datasets][datasets]\n\n4. Select the code snippet from the window that appears and copy it to your clipboard.\n\n    ![Access Code][dataset-access-code]\n\n5. Paste the code into the notebook of you local Python application.\n\n    ![Notebook][ipython-dataset]\n\n### <a name=\"accessingIntermediateDatasets\"></a>Access intermediate datasets from Machine Learning experiments\n\nAfter an experiment is run in the Machine Learning Studio, it is possible to access the intermediate datasets from the output nodes of modules. Intermediate datasets are data that has been created and used for intermediate steps when a model tool has been run.\n\nIntermediate datasets can be accessed as long as the data format is compatible with the Python client library.\n\nThe following formats are supported (constants for these are in the `azureml.DataTypeIds` class):\n\n - PlainText\n - GenericCSV\n - GenericTSV\n - GenericCSVNoHeader\n - GenericTSVNoHeader\n\nYou can determine the format by hovering over a module output node. It is displayed along with the node name, in a tooltip.\n\nSome of the modules, such as the [Split][split] module, output to a format named `Dataset`, which is not supported by the Python client library.\n\n![Dataset Format][dataset-format]\n\nYou'll need to use a conversion module, such as [Convert to CSV][convert-to-csv], to get an output into a supported format.\n\n![GenericCSV Format][csv-format]\n\nThe following steps show an example that creates an experiment, runs it and accesses the intermediate dataset.\n\n1. Create a new experiment.\n\n2. Insert an **Adult Census Income Binary Classification dataset** module.\n\n3. Insert a [Split][split] module, and connect its input to the dataset module output.\n\n4. Insert a [Convert to CSV][convert-to-csv] module and connect its input to one of the [Split][split] module outputs.\n\n5. Save the experiment, run it, and wait for it to finish running.\n\n6. Click on the output node on the [Convert to CSV][convert-to-csv] module.\n\n7. A context menu will appear, select **Generate Data Access Code**.\n\n    ![Context Menu][experiment]\n\n8. A window will appear. Select the code snippet and copy it to your clipboard.\n\n    ![Access Code][intermediate-dataset-access-code]\n\n9. Paste the code in your notebook.\n\n    ![Notebook][ipython-intermediate-dataset]\n\n10. You can visualize the data using matplotlib. This displays in a histogram for the age column:\n\n    ![Histogram][ipython-histogram]\n\n\n##<a name=\"clientApis\"></a>Use the Machine Learning Python client library to access, read, create, and manage datasets\n\n### Workspace\n\nThe workspace is the entry point for the Python client library. Provide the `Workspace` class with your workspace id and authorization token to create an instance:\n\n    ws = Workspace(workspace_id='4c29e1adeba2e5a7cbeb0e4f4adfb4df',\n                   authorization_token='f4f3ade2c6aefdb1afb043cd8bcf3daf')\n\n\n### Enumerate datasets\n\nTo enumerate all datasets in a given workspace:\n\n    for ds in ws.datasets:\n        print(ds.name)\n\nTo enumerate just the user-created datasets:\n\n    for ds in ws.user_datasets:\n        print(ds.name)\n\nTo enumerate just the example datasets:\n\n    for ds in ws.example_datasets:\n        print(ds.name)\n\nYou can access a dataset by name (which is case-sensitive):\n\n    ds = ws.datasets['my dataset name']\n\nOr you can access it by index:\n\n    ds = ws.datasets[0]\n\n\n### Metadata\n\nDatasets have metadata, in addition to content. (Intermediate datasets are an exception to this rule and do not have any metadata.)\n\nSome metadata values are assigned by the user at creation time:\n\n    print(ds.name)\n    print(ds.description)\n    print(ds.family_id)\n    print(ds.data_type_id)\n\nOthers are values assigned by Azure ML:\n\n    print(ds.id)\n    print(ds.created_date)\n    print(ds.size)\n\nSee the `SourceDataset` class for more on the available metadata.\n\n\n### Read contents\n\nThe code snippets provided by Machine Learning Studio automatically download and deserialize the dataset to a Pandas DataFrame object. This is done with the `to_dataframe` method:\n\n    frame = ds.to_dataframe()\n\nIf you prefer to download the raw data, and perform the deserialization yourself, that is an option. At the moment, this is the only option for formats such as 'ARFF', which the Python client library cannot deserialize.\n\nTo read the contents as text:\n\n    text_data = ds.read_as_text()\n\nTo read the contents as binary:\n\n    binary_data = ds.read_as_binary()\n\nYou can also just open a stream to the contents:\n\n    with ds.open() as file:\n        binary_data_chunk = file.read(1000)\n\n\n### Create a new dataset\n\nThe Python client library allow you to upload datasets from your Python program. These datasets will be available for use in your workspace.\n\nIf you have your data in a Pandas DataFrame, use the following code:\n\n    from azureml import DataTypeIds\n\n    dataset = ws.datasets.add_from_dataframe(\n        dataframe=frame,\n        data_type_id=DataTypeIds.GenericCSV,\n        name='my new dataset',\n        description='my description'\n    )\n\nIf your data is already serialized, you can use:\n\n    from azureml import DataTypeIds\n\n    dataset = ws.datasets.add_from_raw_data(\n        raw_data=raw_data,\n        data_type_id=DataTypeIds.GenericCSV,\n        name='my new dataset',\n        description='my description'\n    )\n\nThe Python client library are able to serialize a Pandas DataFrame to the following formats (constants for these are in the `azureml.DataTypeIds` class):\n\n - PlainText\n - GenericCSV\n - GenericTSV\n - GenericCSVNoHeader\n - GenericTSVNoHeader\n\n\n### Update an existing dataset\n\nIf you try to upload a new dataset with a name that matches an existing dataset, you'll get a conflict error.\n\nTo update an existing dataset, you first need to get a reference to the existing dataset:\n\n    dataset = ws.datasets['existing dataset']\n\n    print(dataset.data_type_id) # 'GenericCSV'\n    print(dataset.name)         # 'existing dataset'\n    print(dataset.description)  # 'data up to jan 2015'\n\nThen use `update_from_dataframe` to serialize and replace the contents of the dataset on Azure:\n\n    dataset = ws.datasets['existing dataset']\n\n    dataset.update_from_dataframe(frame2)\n\n    print(dataset.data_type_id) # 'GenericCSV'\n    print(dataset.name)         # 'existing dataset'\n    print(dataset.description)  # 'data up to jan 2015'\n\nIf you want to serialize the data to a different format, specify a value for the optional `data_type_id` parameter.\n\n    from azureml import DataTypeIds\n\n    dataset = ws.datasets['existing dataset']\n\n    dataset.update_from_dataframe(\n        dataframe=frame2,\n        data_type_id=DataTypeIds.GenericTSV,\n    )\n\n    print(dataset.data_type_id) # 'GenericTSV'\n    print(dataset.name)         # 'existing dataset'\n    print(dataset.description)  # 'data up to jan 2015'\n\nYou can optionally set a new description by specifying a value for the `description` parameter.\n\n    dataset = ws.datasets['existing dataset']\n\n    dataset.update_from_dataframe(\n        dataframe=frame2,\n        description='data up to feb 2015',\n    )\n\n    print(dataset.data_type_id) # 'GenericCSV'\n    print(dataset.name)         # 'existing dataset'\n    print(dataset.description)  # 'data up to feb 2015'\n\nYou can optionally set a new name by specifying a value for the `name` parameter. From now on, you'll retrieve the dataset using the new name only. The following code updates the data, name and description.\n\n    dataset = ws.datasets['existing dataset']\n\n    dataset.update_from_dataframe(\n        dataframe=frame2,\n        name='existing dataset v2',\n        description='data up to feb 2015',\n    )\n\n    print(dataset.data_type_id)                    # 'GenericCSV'\n    print(dataset.name)                            # 'existing dataset v2'\n    print(dataset.description)                     # 'data up to feb 2015'\n\n    print(ws.datasets['existing dataset v2'].name) # 'existing dataset v2'\n    print(ws.datasets['existing dataset'].name)    # IndexError\n\nThe `data_type_id`, `name` and `description` parameters are all optional, and default to their previous value. The `dataframe` parameter is always required.\n\nIf your data is already serialized, use `update_from_raw_data` instead of `update_from_dataframe`. It works similarly, you just pass in `raw_data` instead of  `dataframe`.\n\n\n\n<!-- Images -->\n[security]:./media/machine-learning-python-data-access/security.png\n[dataset-format]:./media/machine-learning-python-data-access/dataset-format.png\n[csv-format]:./media/machine-learning-python-data-access/csv-format.png\n[datasets]:./media/machine-learning-python-data-access/datasets.png\n[dataset-access-code]:./media/machine-learning-python-data-access/dataset-access-code.png\n[ipython-dataset]:./media/machine-learning-python-data-access/ipython-dataset.png\n[experiment]:./media/machine-learning-python-data-access/experiment.png\n[intermediate-dataset-access-code]:./media/machine-learning-python-data-access/intermediate-dataset-access-code.png\n[ipython-intermediate-dataset]:./media/machine-learning-python-data-access/ipython-intermediate-dataset.png\n[ipython-histogram]:./media/machine-learning-python-data-access/ipython-histogram.png\n\n\n<!-- Module References -->\n[convert-to-csv]: https://msdn.microsoft.com/library/azure/faa6ba63-383c-4086-ba58-7abf26b85814/\n[split]: https://msdn.microsoft.com/library/azure/70530644-c97a-4ab6-85f7-88bf30a8be5f/\n "
}