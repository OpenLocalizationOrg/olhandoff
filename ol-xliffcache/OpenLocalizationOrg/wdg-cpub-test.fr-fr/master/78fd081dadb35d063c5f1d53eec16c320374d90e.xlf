<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-48076a9" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">78fd081dadb35d063c5f1d53eec16c320374d90e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci2\data-binding\how-to-bind-to-hierarchical-data-and-create-a-master-details-view.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Bind hierarchical data and create a master/details view</source>
          <target state="new">Bind hierarchical data and create a master/details view</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>You can make a multi-level master/details (also known as list-details) view of hierarchical data by binding items controls to CollectionViewSource instances that are bound together in a chain.</source>
          <target state="new">You can make a multi-level master/details (also known as list-details) view of hierarchical data by binding items controls to CollectionViewSource instances that are bound together in a chain.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Bind hierarchical data and create a master/details view</source>
          <target state="new">Bind hierarchical data and create a master/details view</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>\[ Updated for UWP apps on Windows 10.</source>
          <target state="new">\[ Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  Also see the <bpt id="p2">[</bpt>Master/detail sample<ept id="p2">](http://go.microsoft.com/fwlink/p/?linkid=619991)</ept>.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  Also see the <bpt id="p2">[</bpt>Master/detail sample<ept id="p2">](http://go.microsoft.com/fwlink/p/?linkid=619991)</ept>.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>You can make a multi-level master/details (also known as list-details) view of hierarchical data by binding items controls to <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CollectionViewSource<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209833)</ept> instances that are bound together in a chain.</source>
          <target state="new">You can make a multi-level master/details (also known as list-details) view of hierarchical data by binding items controls to <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CollectionViewSource<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209833)</ept> instances that are bound together in a chain.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>In this topic we use the <bpt id="p1">[</bpt>{x:Bind} markup extension<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Mt204783)</ept> where possible, and the more flexible (but less performant) <bpt id="p2">[</bpt>{Binding} markup extension<ept id="p2">](https://msdn.microsoft.com/library/windows/apps/Mt204782)</ept> where necessary.</source>
          <target state="new">In this topic we use the <bpt id="p1">[</bpt>{x:Bind} markup extension<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Mt204783)</ept> where possible, and the more flexible (but less performant) <bpt id="p2">[</bpt>{Binding} markup extension<ept id="p2">](https://msdn.microsoft.com/library/windows/apps/Mt204782)</ept> where necessary.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>One common structure for Universal Windows Platform (UWP) apps is to navigate to different details pages when a user makes a selection in a master list.</source>
          <target state="new">One common structure for Universal Windows Platform (UWP) apps is to navigate to different details pages when a user makes a selection in a master list.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This is useful when you want to provide a rich visual representation of each item at every level in a hierarchy.</source>
          <target state="new">This is useful when you want to provide a rich visual representation of each item at every level in a hierarchy.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Another option is to display multiple levels of data on a single page.</source>
          <target state="new">Another option is to display multiple levels of data on a single page.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This is useful when you want to display a few simple lists that let the user quickly drill down to an item of interest.</source>
          <target state="new">This is useful when you want to display a few simple lists that let the user quickly drill down to an item of interest.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This topic describes how to implement this interaction.</source>
          <target state="new">This topic describes how to implement this interaction.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CollectionViewSource<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209833)</ept> instances keep track of the current selection at each hierarchical level.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CollectionViewSource<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209833)</ept> instances keep track of the current selection at each hierarchical level.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>We'll create a view of a sports team hierarchy that is organized into lists for leagues, divisions, and teams, and includes a team details view.</source>
          <target state="new">We'll create a view of a sports team hierarchy that is organized into lists for leagues, divisions, and teams, and includes a team details view.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>When you select an item from any list, the subsequent views update automatically.</source>
          <target state="new">When you select an item from any list, the subsequent views update automatically.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>master/details view of a sports hierarchy</source>
          <target state="new">master/details view of a sports hierarchy</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="new">Prerequisites</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This topic assumes that you know how to create a basic UWP app.</source>
          <target state="new">This topic assumes that you know how to create a basic UWP app.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For instructions on creating your first UWP app, see <bpt id="p1">[</bpt>Create your first UWP app using C# or Visual Basic<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Hh974581)</ept>.</source>
          <target state="new">For instructions on creating your first UWP app, see <bpt id="p1">[</bpt>Create your first UWP app using C# or Visual Basic<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Hh974581)</ept>.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Create the project</source>
          <target state="new">Create the project</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Create a new <bpt id="p1">**</bpt>Blank Application (Windows Universal)<ept id="p1">**</ept> project.</source>
          <target state="new">Create a new <bpt id="p1">**</bpt>Blank Application (Windows Universal)<ept id="p1">**</ept> project.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Name it "MasterDetailsBinding".</source>
          <target state="new">Name it "MasterDetailsBinding".</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Create the data model</source>
          <target state="new">Create the data model</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Add a new class to your project, name it ViewModel.cs, and add this code to it.</source>
          <target state="new">Add a new class to your project, name it ViewModel.cs, and add this code to it.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This will be your binding source class.</source>
          <target state="new">This will be your binding source class.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Create the view</source>
          <target state="new">Create the view</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Next, expose the binding source class from the class that represents your page of markup.</source>
          <target state="new">Next, expose the binding source class from the class that represents your page of markup.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>We do that by adding a property of type <bpt id="p1">**</bpt>LeagueList<ept id="p1">**</ept> to <bpt id="p2">**</bpt>MainPage<ept id="p2">**</ept>.</source>
          <target state="new">We do that by adding a property of type <bpt id="p1">**</bpt>LeagueList<ept id="p1">**</ept> to <bpt id="p2">**</bpt>MainPage<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Finally, replace the contents of the MainPage.xaml file with the following markup, which declares three <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CollectionViewSource<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209833)</ept> instances and binds them together in a chain.</source>
          <target state="new">Finally, replace the contents of the MainPage.xaml file with the following markup, which declares three <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CollectionViewSource<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209833)</ept> instances and binds them together in a chain.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The subsequent controls can then bind to the appropriate <bpt id="p1">**</bpt>CollectionViewSource<ept id="p1">**</ept>, depending on its level in the hierarchy.</source>
          <target state="new">The subsequent controls can then bind to the appropriate <bpt id="p1">**</bpt>CollectionViewSource<ept id="p1">**</ept>, depending on its level in the hierarchy.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Note that by binding directly to the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CollectionViewSource<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209833)</ept>, you're implying that you want to bind to the current item in bindings where the path cannot be found on the collection itself.</source>
          <target state="new">Note that by binding directly to the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CollectionViewSource<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209833)</ept>, you're implying that you want to bind to the current item in bindings where the path cannot be found on the collection itself.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>There's no need to specify the <bpt id="p1">**</bpt>CurrentItem<ept id="p1">**</ept> property as the path for the binding, although you can do that if there's any ambiguity).</source>
          <target state="new">There's no need to specify the <bpt id="p1">**</bpt>CurrentItem<ept id="p1">**</ept> property as the path for the binding, although you can do that if there's any ambiguity).</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>For example, the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ContentControl<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209365)</ept> representing the team view has its <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Content<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR209365-content)</ept> property bound to the <ph id="ph1">`Teams`</ph><bpt id="p5">**</bpt>CollectionViewSource<ept id="p5">**</ept>.</source>
          <target state="new">For example, the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ContentControl<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209365)</ept> representing the team view has its <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Content<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR209365-content)</ept> property bound to the <ph id="ph1">`Teams`</ph><bpt id="p5">**</bpt>CollectionViewSource<ept id="p5">**</ept>.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>However, the controls in the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DataTemplate<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR242348)</ept> bind to properties of the <ph id="ph1">`Team`</ph> class because the <bpt id="p3">**</bpt>CollectionViewSource<ept id="p3">**</ept> automatically supplies the currently selected team from the teams list when necessary.</source>
          <target state="new">However, the controls in the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DataTemplate<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR242348)</ept> bind to properties of the <ph id="ph1">`Team`</ph> class because the <bpt id="p3">**</bpt>CollectionViewSource<ept id="p3">**</ept> automatically supplies the currently selected team from the teams list when necessary.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>