<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-48076a9" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7380a6c7d1c4795362c0e6487bf30e574dced396</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci2\launch-resume\auto-launching-with-autoplay.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Auto-launching with AutoPlay</source>
          <target state="new">Auto-launching with AutoPlay</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>You can use AutoPlay to provide your app as an option when a user connects a device to their PC.</source>
          <target state="new">You can use AutoPlay to provide your app as an option when a user connects a device to their PC.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This includes non-volume devices such as a camera or media player, or volume devices such as a USB thumb drive, SD card, or DVD.</source>
          <target state="new">This includes non-volume devices such as a camera or media player, or volume devices such as a USB thumb drive, SD card, or DVD.</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Auto-launching with AutoPlay</source>
          <target state="new">Auto-launching with AutoPlay</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>\[ Updated for UWP apps on Windows 10.</source>
          <target state="new">\[ Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>You can use <bpt id="p1">**</bpt>AutoPlay<ept id="p1">**</ept> to provide your app as an option when a user connects a device to their PC.</source>
          <target state="new">You can use <bpt id="p1">**</bpt>AutoPlay<ept id="p1">**</ept> to provide your app as an option when a user connects a device to their PC.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This includes non-volume devices such as a camera or media player, or volume devices such as a USB thumb drive, SD card, or DVD.</source>
          <target state="new">This includes non-volume devices such as a camera or media player, or volume devices such as a USB thumb drive, SD card, or DVD.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You can also use <bpt id="p1">**</bpt>AutoPlay<ept id="p1">**</ept> to offer your app as an option when users share files between two PCs by using proximity (tapping).</source>
          <target state="new">You can also use <bpt id="p1">**</bpt>AutoPlay<ept id="p1">**</ept> to offer your app as an option when users share files between two PCs by using proximity (tapping).</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  If you are a device manufacturer and you want to associate your <bpt id="p2">[</bpt>Windows Store device app<ept id="p2">](http://go.microsoft.com/fwlink/p/?LinkID=301381)</ept> as an <bpt id="p3">**</bpt>AutoPlay<ept id="p3">**</ept> handler for your device, you can identify that app in the device metadata.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  If you are a device manufacturer and you want to associate your <bpt id="p2">[</bpt>Windows Store device app<ept id="p2">](http://go.microsoft.com/fwlink/p/?LinkID=301381)</ept> as an <bpt id="p3">**</bpt>AutoPlay<ept id="p3">**</ept> handler for your device, you can identify that app in the device metadata.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For more info, see <bpt id="p1">[</bpt>AutoPlay for Windows Store device apps<ept id="p1">](http://go.microsoft.com/fwlink/p/?LinkId=306684)</ept>.</source>
          <target state="new">For more info, see <bpt id="p1">[</bpt>AutoPlay for Windows Store device apps<ept id="p1">](http://go.microsoft.com/fwlink/p/?LinkId=306684)</ept>.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Register for AutoPlay content</source>
          <target state="new">Register for AutoPlay content</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You can register apps as options for <bpt id="p1">**</bpt>AutoPlay<ept id="p1">**</ept> content events.</source>
          <target state="new">You can register apps as options for <bpt id="p1">**</bpt>AutoPlay<ept id="p1">**</ept> content events.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>AutoPlay<ept id="p1">**</ept> content events are raised when a volume device such as a camera memory card, thumb drive, or DVD is inserted into the PC.</source>
          <target state="new"><bpt id="p1">**</bpt>AutoPlay<ept id="p1">**</ept> content events are raised when a volume device such as a camera memory card, thumb drive, or DVD is inserted into the PC.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Here we show how to identify your app as an <bpt id="p1">**</bpt>AutoPlay<ept id="p1">**</ept> option when a volume device from a camera is inserted.</source>
          <target state="new">Here we show how to identify your app as an <bpt id="p1">**</bpt>AutoPlay<ept id="p1">**</ept> option when a volume device from a camera is inserted.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>In this tutorial, you created an app that displays image files or copies them to Pictures.</source>
          <target state="new">In this tutorial, you created an app that displays image files or copies them to Pictures.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You registered the app for the AutoPlay <bpt id="p1">**</bpt>ShowPicturesOnArrival<ept id="p1">**</ept> content event.</source>
          <target state="new">You registered the app for the AutoPlay <bpt id="p1">**</bpt>ShowPicturesOnArrival<ept id="p1">**</ept> content event.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>AutoPlay also raises content events for content shared between PCs using proximity (tapping).</source>
          <target state="new">AutoPlay also raises content events for content shared between PCs using proximity (tapping).</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You can use the steps and code in this section to handle files that are shared between PCs that use proximity.</source>
          <target state="new">You can use the steps and code in this section to handle files that are shared between PCs that use proximity.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The following table lists the AutoPlay content events that are available for sharing content by using proximity.</source>
          <target state="new">The following table lists the AutoPlay content events that are available for sharing content by using proximity.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Action</source>
          <target state="new">Action</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>AutoPlay content event</source>
          <target state="new">AutoPlay content event</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Sharing music</source>
          <target state="new">Sharing music</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>PlayMusicFilesOnArrival</source>
          <target state="new">PlayMusicFilesOnArrival</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Sharing videos</source>
          <target state="new">Sharing videos</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>PlayVideoFilesOnArrival</source>
          <target state="new">PlayVideoFilesOnArrival</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>When files are shared by using proximity, the <bpt id="p1">**</bpt>Files<ept id="p1">**</ept> property of the <bpt id="p2">**</bpt>FileActivatedEventArgs<ept id="p2">**</ept> object contains a reference to a root folder that contains all of the shared files.</source>
          <target state="new">When files are shared by using proximity, the <bpt id="p1">**</bpt>Files<ept id="p1">**</ept> property of the <bpt id="p2">**</bpt>FileActivatedEventArgs<ept id="p2">**</ept> object contains a reference to a root folder that contains all of the shared files.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Step 1: Create a new project and add AutoPlay declarations</source>
          <target state="new">Step 1: Create a new project and add AutoPlay declarations</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Open Microsoft Visual Studio and select <bpt id="p1">**</bpt>New Project<ept id="p1">**</ept> from the <bpt id="p2">**</bpt>File<ept id="p2">**</ept> menu.</source>
          <target state="new">Open Microsoft Visual Studio and select <bpt id="p1">**</bpt>New Project<ept id="p1">**</ept> from the <bpt id="p2">**</bpt>File<ept id="p2">**</ept> menu.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Visual C#<ept id="p1">**</ept> section, under <bpt id="p2">**</bpt>Windows<ept id="p2">**</ept>, select <bpt id="p3">**</bpt>Blank App (Universal Windows)<ept id="p3">**</ept>.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Visual C#<ept id="p1">**</ept> section, under <bpt id="p2">**</bpt>Windows<ept id="p2">**</ept>, select <bpt id="p3">**</bpt>Blank App (Universal Windows)<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Name the app <bpt id="p1">**</bpt>AutoPlayDisplayOrCopyImages<ept id="p1">**</ept> and click <bpt id="p2">**</bpt>OK.<ept id="p2">**</ept></source>
          <target state="new">Name the app <bpt id="p1">**</bpt>AutoPlayDisplayOrCopyImages<ept id="p1">**</ept> and click <bpt id="p2">**</bpt>OK.<ept id="p2">**</ept></target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Open the Package.appxmanifest file and select the <bpt id="p1">**</bpt>Capabilities<ept id="p1">**</ept> tab.</source>
          <target state="new">Open the Package.appxmanifest file and select the <bpt id="p1">**</bpt>Capabilities<ept id="p1">**</ept> tab.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Select the <bpt id="p1">**</bpt>Removable Storage<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Pictures Library<ept id="p2">**</ept> capabilities.</source>
          <target state="new">Select the <bpt id="p1">**</bpt>Removable Storage<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Pictures Library<ept id="p2">**</ept> capabilities.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This gives the app access to removable storage devices for camera memory, and access to local pictures.</source>
          <target state="new">This gives the app access to removable storage devices for camera memory, and access to local pictures.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>In the manifest file, select the <bpt id="p1">**</bpt>Declarations<ept id="p1">**</ept> tab.</source>
          <target state="new">In the manifest file, select the <bpt id="p1">**</bpt>Declarations<ept id="p1">**</ept> tab.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Available Declarations<ept id="p1">**</ept> drop-down list, select <bpt id="p2">**</bpt>AutoPlay Content<ept id="p2">**</ept> and click <bpt id="p3">**</bpt>Add<ept id="p3">**</ept>.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Available Declarations<ept id="p1">**</ept> drop-down list, select <bpt id="p2">**</bpt>AutoPlay Content<ept id="p2">**</ept> and click <bpt id="p3">**</bpt>Add<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Select the new <bpt id="p1">**</bpt>AutoPlay Content<ept id="p1">**</ept> item that was added to the <bpt id="p2">**</bpt>Supported Declarations<ept id="p2">**</ept> list.</source>
          <target state="new">Select the new <bpt id="p1">**</bpt>AutoPlay Content<ept id="p1">**</ept> item that was added to the <bpt id="p2">**</bpt>Supported Declarations<ept id="p2">**</ept> list.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">**</bpt>AutoPlay Content<ept id="p1">**</ept> declaration identifies your app as an option when AutoPlay raises a content event.</source>
          <target state="new">An <bpt id="p1">**</bpt>AutoPlay Content<ept id="p1">**</ept> declaration identifies your app as an option when AutoPlay raises a content event.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The event is based on the content of a volume device such as a DVD or a thumb drive.</source>
          <target state="new">The event is based on the content of a volume device such as a DVD or a thumb drive.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>AutoPlay examines the content of the volume device and determines which content event to raise.</source>
          <target state="new">AutoPlay examines the content of the volume device and determines which content event to raise.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>If the root of the volume contains a DCIM, AVCHD, or PRIVATE\\ACHD folder, or if a user has enabled <bpt id="p1">**</bpt>Choose what to do with each type of media<ept id="p1">**</ept> in the AutoPlay Control Panel and pictures are found in the root of the volume, then AutoPlay raises the <bpt id="p2">**</bpt>ShowPicturesOnArrival<ept id="p2">**</ept> event.</source>
          <target state="new">If the root of the volume contains a DCIM, AVCHD, or PRIVATE\\ACHD folder, or if a user has enabled <bpt id="p1">**</bpt>Choose what to do with each type of media<ept id="p1">**</ept> in the AutoPlay Control Panel and pictures are found in the root of the volume, then AutoPlay raises the <bpt id="p2">**</bpt>ShowPicturesOnArrival<ept id="p2">**</ept> event.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Launch Actions<ept id="p1">**</ept> section, enter the values from Table 1 below for the first launch action.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Launch Actions<ept id="p1">**</ept> section, enter the values from Table 1 below for the first launch action.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Launch Actions<ept id="p1">**</ept> section for the <bpt id="p2">**</bpt>AutoPlay Content<ept id="p2">**</ept> item, click <bpt id="p3">**</bpt>Add New<ept id="p3">**</ept> to add a second launch action.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Launch Actions<ept id="p1">**</ept> section for the <bpt id="p2">**</bpt>AutoPlay Content<ept id="p2">**</ept> item, click <bpt id="p3">**</bpt>Add New<ept id="p3">**</ept> to add a second launch action.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Enter the values in Table 2 below for the second launch action.</source>
          <target state="new">Enter the values in Table 2 below for the second launch action.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Available Declarations<ept id="p1">**</ept> drop-down list, select <bpt id="p2">**</bpt>File Type Associations<ept id="p2">**</ept> and click <bpt id="p3">**</bpt>Add<ept id="p3">**</ept>.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Available Declarations<ept id="p1">**</ept> drop-down list, select <bpt id="p2">**</bpt>File Type Associations<ept id="p2">**</ept> and click <bpt id="p3">**</bpt>Add<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>In the Properties of the new <bpt id="p1">**</bpt>File Type Associations<ept id="p1">**</ept> declaration, set the <bpt id="p2">**</bpt>Display Name<ept id="p2">**</ept> field to <bpt id="p3">**</bpt>AutoPlay Copy or Show Images<ept id="p3">**</ept> and the <bpt id="p4">**</bpt>Name<ept id="p4">**</ept> field to <bpt id="p5">**</bpt>image\_association1<ept id="p5">**</ept>.</source>
          <target state="new">In the Properties of the new <bpt id="p1">**</bpt>File Type Associations<ept id="p1">**</ept> declaration, set the <bpt id="p2">**</bpt>Display Name<ept id="p2">**</ept> field to <bpt id="p3">**</bpt>AutoPlay Copy or Show Images<ept id="p3">**</ept> and the <bpt id="p4">**</bpt>Name<ept id="p4">**</ept> field to <bpt id="p5">**</bpt>image\_association1<ept id="p5">**</ept>.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Supported File Types<ept id="p1">**</ept> section, click <bpt id="p2">**</bpt>Add New<ept id="p2">**</ept>.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Supported File Types<ept id="p1">**</ept> section, click <bpt id="p2">**</bpt>Add New<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Set the <bpt id="p1">**</bpt>File Type<ept id="p1">**</ept> field to <bpt id="p2">**</bpt>.jpg<ept id="p2">**</ept>.</source>
          <target state="new">Set the <bpt id="p1">**</bpt>File Type<ept id="p1">**</ept> field to <bpt id="p2">**</bpt>.jpg<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Supported File Types<ept id="p1">**</ept> section, set the <bpt id="p2">**</bpt>File Type<ept id="p2">**</ept> field of the new file association to <bpt id="p3">**</bpt>.png<ept id="p3">**</ept>.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Supported File Types<ept id="p1">**</ept> section, set the <bpt id="p2">**</bpt>File Type<ept id="p2">**</ept> field of the new file association to <bpt id="p3">**</bpt>.png<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>For content events, AutoPlay filters out any file types that are not explicitly associated with your app.</source>
          <target state="new">For content events, AutoPlay filters out any file types that are not explicitly associated with your app.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Save and close the manifest file.</source>
          <target state="new">Save and close the manifest file.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Table 1</source>
          <target state="new">Table 1</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Setting</source>
          <target state="new">Setting</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Value</source>
          <target state="new">Value</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Verb</source>
          <target state="new">Verb</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>show</source>
          <target state="new">show</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Action Display Name</source>
          <target state="new">Action Display Name</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Show Pictures</source>
          <target state="new">Show Pictures</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Content Event</source>
          <target state="new">Content Event</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>ShowPicturesOnArrival</source>
          <target state="new">ShowPicturesOnArrival</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Action Display Name<ept id="p1">**</ept> setting identifies the string that AutoPlay displays for your app.</source>
          <target state="new">The <bpt id="p1">**</bpt>Action Display Name<ept id="p1">**</ept> setting identifies the string that AutoPlay displays for your app.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Verb<ept id="p1">**</ept> setting identifies a value that is passed to your app for the selected option.</source>
          <target state="new">The <bpt id="p1">**</bpt>Verb<ept id="p1">**</ept> setting identifies a value that is passed to your app for the selected option.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>You can specify multiple launch actions for an AutoPlay event and use the <bpt id="p1">**</bpt>Verb<ept id="p1">**</ept> setting to determine which option a user has selected for your app.</source>
          <target state="new">You can specify multiple launch actions for an AutoPlay event and use the <bpt id="p1">**</bpt>Verb<ept id="p1">**</ept> setting to determine which option a user has selected for your app.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>You can tell which option the user selected by checking the <bpt id="p1">**</bpt>verb<ept id="p1">**</ept> property of the startup event arguments passed to your app.</source>
          <target state="new">You can tell which option the user selected by checking the <bpt id="p1">**</bpt>verb<ept id="p1">**</ept> property of the startup event arguments passed to your app.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>You can use any value for the <bpt id="p1">**</bpt>Verb<ept id="p1">**</ept> setting except, <bpt id="p2">**</bpt>open<ept id="p2">**</ept>, which is reserved.</source>
          <target state="new">You can use any value for the <bpt id="p1">**</bpt>Verb<ept id="p1">**</ept> setting except, <bpt id="p2">**</bpt>open<ept id="p2">**</ept>, which is reserved.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Table 2</source>
          <target state="new">Table 2</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Setting</source>
          <target state="new">Setting</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Value</source>
          <target state="new">Value</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Verb</source>
          <target state="new">Verb</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>copy</source>
          <target state="new">copy</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Action Display Name</source>
          <target state="new">Action Display Name</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Copy Pictures Into Library</source>
          <target state="new">Copy Pictures Into Library</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Content Event</source>
          <target state="new">Content Event</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>ShowPicturesOnArrival</source>
          <target state="new">ShowPicturesOnArrival</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Step 2: Add XAML UI</source>
          <target state="new">Step 2: Add XAML UI</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Open the MainPage.xaml file and add the following XAML to the default <ph id="ph1">&amp;lt;</ph>Grid<ph id="ph2">&amp;gt;</ph> section.</source>
          <target state="new">Open the MainPage.xaml file and add the following XAML to the default <ph id="ph1">&amp;lt;</ph>Grid<ph id="ph2">&amp;gt;</ph> section.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Step 3: Add initialization code</source>
          <target state="new">Step 3: Add initialization code</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The code in this step checks the verb value in the <bpt id="p1">**</bpt>Verb<ept id="p1">**</ept> property, which is one of the startup arguments passed to the app during the <bpt id="p2">**</bpt>OnFileActivated<ept id="p2">**</ept> event.</source>
          <target state="new">The code in this step checks the verb value in the <bpt id="p1">**</bpt>Verb<ept id="p1">**</ept> property, which is one of the startup arguments passed to the app during the <bpt id="p2">**</bpt>OnFileActivated<ept id="p2">**</ept> event.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The code then calls a method related to the option that the user selected.</source>
          <target state="new">The code then calls a method related to the option that the user selected.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>For the camera memory event, AutoPlay passes the root folder of the camera storage to the app.</source>
          <target state="new">For the camera memory event, AutoPlay passes the root folder of the camera storage to the app.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>You can retrieve this folder from the first element of the <bpt id="p1">**</bpt>Files<ept id="p1">**</ept> property.</source>
          <target state="new">You can retrieve this folder from the first element of the <bpt id="p1">**</bpt>Files<ept id="p1">**</ept> property.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Open the App.xaml.cs file and add the following code to the <bpt id="p1">**</bpt>App<ept id="p1">**</ept> class.</source>
          <target state="new">Open the App.xaml.cs file and add the following code to the <bpt id="p1">**</bpt>App<ept id="p1">**</ept> class.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  The <ph id="ph1">`DisplayImages`</ph> and <ph id="ph2">`CopyImages`</ph> methods are added in the following steps.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  The <ph id="ph1">`DisplayImages`</ph> and <ph id="ph2">`CopyImages`</ph> methods are added in the following steps.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Step 4: Add code to display images</source>
          <target state="new">Step 4: Add code to display images</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>In the MainPage.xaml.cs file add the following code to the <bpt id="p1">**</bpt>MainPage<ept id="p1">**</ept> class.</source>
          <target state="new">In the MainPage.xaml.cs file add the following code to the <bpt id="p1">**</bpt>MainPage<ept id="p1">**</ept> class.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Step 5: Add code to copy images</source>
          <target state="new">Step 5: Add code to copy images</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>In the MainPage.xaml.cs file add the following code to the <bpt id="p1">**</bpt>MainPage<ept id="p1">**</ept> class.</source>
          <target state="new">In the MainPage.xaml.cs file add the following code to the <bpt id="p1">**</bpt>MainPage<ept id="p1">**</ept> class.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Step 6: Build and run the app</source>
          <target state="new">Step 6: Build and run the app</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Press F5 to build and deploy the app (in debug mode).</source>
          <target state="new">Press F5 to build and deploy the app (in debug mode).</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>To run your app, insert a camera memory card or another storage device from a camera into your PC.</source>
          <target state="new">To run your app, insert a camera memory card or another storage device from a camera into your PC.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Then, select one of the content event options that you specified in your package.appxmanifest file from the AutoPlay list of options.</source>
          <target state="new">Then, select one of the content event options that you specified in your package.appxmanifest file from the AutoPlay list of options.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>This sample code only displays or copies pictures in the DCIM folder of a camera memory card.</source>
          <target state="new">This sample code only displays or copies pictures in the DCIM folder of a camera memory card.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>If your camera memory card stores pictures in an AVCHD or PRIVATE\\ACHD folder, you will need to update the code accordingly.</source>
          <target state="new">If your camera memory card stores pictures in an AVCHD or PRIVATE\\ACHD folder, you will need to update the code accordingly.</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  If you don't have a camera memory card, you can use a flash drive if it has a folder named <bpt id="p2">**</bpt>DCIM<ept id="p2">**</ept> in the root and if the DCIM folder has a subfolder that contains images.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  If you don't have a camera memory card, you can use a flash drive if it has a folder named <bpt id="p2">**</bpt>DCIM<ept id="p2">**</ept> in the root and if the DCIM folder has a subfolder that contains images.</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Register for an AutoPlay device</source>
          <target state="new">Register for an AutoPlay device</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>You can register apps as options for <bpt id="p1">**</bpt>AutoPlay<ept id="p1">**</ept> device events.</source>
          <target state="new">You can register apps as options for <bpt id="p1">**</bpt>AutoPlay<ept id="p1">**</ept> device events.</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>AutoPlay<ept id="p1">**</ept> device events are raised when a device is connected to a PC.</source>
          <target state="new"><bpt id="p1">**</bpt>AutoPlay<ept id="p1">**</ept> device events are raised when a device is connected to a PC.</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Here we show how to identify your app as an <bpt id="p1">**</bpt>AutoPlay<ept id="p1">**</ept> option when a camera is connected to a PC.</source>
          <target state="new">Here we show how to identify your app as an <bpt id="p1">**</bpt>AutoPlay<ept id="p1">**</ept> option when a camera is connected to a PC.</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The app registers as a handler for the <bpt id="p1">**</bpt>WPD\\ImageSourceAutoPlay<ept id="p1">**</ept> event.</source>
          <target state="new">The app registers as a handler for the <bpt id="p1">**</bpt>WPD\\ImageSourceAutoPlay<ept id="p1">**</ept> event.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>This is a common event that the Windows Portable Device (WPD) system raises when cameras and other imaging devices notify it that they are an ImageSource using MTP.</source>
          <target state="new">This is a common event that the Windows Portable Device (WPD) system raises when cameras and other imaging devices notify it that they are an ImageSource using MTP.</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>For more info, see <bpt id="p1">[</bpt>Windows Portable Devices<ept id="p1">](https://msdn.microsoft.com/library/windows/hardware/ff597729)</ept>.</source>
          <target state="new">For more info, see <bpt id="p1">[</bpt>Windows Portable Devices<ept id="p1">](https://msdn.microsoft.com/library/windows/hardware/ff597729)</ept>.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Important<ept id="p1">**</ept>  The <bpt id="p2">[</bpt><bpt id="p3">**</bpt>Windows.Devices.Portable.StorageDevice<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br225654)</ept> APIs are part of the <bpt id="p4">[</bpt>desktop device family<ept id="p4">](https://msdn.microsoft.com/library/windows/apps/dn894631)</ept>.</source>
          <target state="new"><bpt id="p1">**</bpt>Important<ept id="p1">**</ept>  The <bpt id="p2">[</bpt><bpt id="p3">**</bpt>Windows.Devices.Portable.StorageDevice<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br225654)</ept> APIs are part of the <bpt id="p4">[</bpt>desktop device family<ept id="p4">](https://msdn.microsoft.com/library/windows/apps/dn894631)</ept>.</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Apps can use these APIs only on Windows 10 devices in the desktop device family, such as PCs.</source>
          <target state="new">Apps can use these APIs only on Windows 10 devices in the desktop device family, such as PCs.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Step 1: Create a new project and add AutoPlay declarations</source>
          <target state="new">Step 1: Create a new project and add AutoPlay declarations</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Open Visual Studio and select <bpt id="p1">**</bpt>New Project<ept id="p1">**</ept> from the <bpt id="p2">**</bpt>File<ept id="p2">**</ept> menu.</source>
          <target state="new">Open Visual Studio and select <bpt id="p1">**</bpt>New Project<ept id="p1">**</ept> from the <bpt id="p2">**</bpt>File<ept id="p2">**</ept> menu.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Visual C#<ept id="p1">**</ept> section, under <bpt id="p2">**</bpt>Windows<ept id="p2">**</ept>, select <bpt id="p3">**</bpt>Blank App (Universal Windows)<ept id="p3">**</ept>.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Visual C#<ept id="p1">**</ept> section, under <bpt id="p2">**</bpt>Windows<ept id="p2">**</ept>, select <bpt id="p3">**</bpt>Blank App (Universal Windows)<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Name the app <bpt id="p1">**</bpt>AutoPlayDevice\_Camera<ept id="p1">**</ept> and click <bpt id="p2">**</bpt>OK.<ept id="p2">**</ept></source>
          <target state="new">Name the app <bpt id="p1">**</bpt>AutoPlayDevice\_Camera<ept id="p1">**</ept> and click <bpt id="p2">**</bpt>OK.<ept id="p2">**</ept></target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Open the Package.appxmanifest file and select the <bpt id="p1">**</bpt>Capabilities<ept id="p1">**</ept> tab.</source>
          <target state="new">Open the Package.appxmanifest file and select the <bpt id="p1">**</bpt>Capabilities<ept id="p1">**</ept> tab.</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Select the <bpt id="p1">**</bpt>Removable Storage<ept id="p1">**</ept> capability.</source>
          <target state="new">Select the <bpt id="p1">**</bpt>Removable Storage<ept id="p1">**</ept> capability.</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>This gives the app access to the data on the camera as a removable storage volume device.</source>
          <target state="new">This gives the app access to the data on the camera as a removable storage volume device.</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>In the manifest file, select the <bpt id="p1">**</bpt>Declarations<ept id="p1">**</ept> tab.</source>
          <target state="new">In the manifest file, select the <bpt id="p1">**</bpt>Declarations<ept id="p1">**</ept> tab.</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Available Declarations<ept id="p1">**</ept> drop-down list, select <bpt id="p2">**</bpt>AutoPlay Device<ept id="p2">**</ept> and click <bpt id="p3">**</bpt>Add<ept id="p3">**</ept>.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Available Declarations<ept id="p1">**</ept> drop-down list, select <bpt id="p2">**</bpt>AutoPlay Device<ept id="p2">**</ept> and click <bpt id="p3">**</bpt>Add<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Select the new <bpt id="p1">**</bpt>AutoPlay Device<ept id="p1">**</ept> item that was added to the <bpt id="p2">**</bpt>Supported Declarations<ept id="p2">**</ept> list.</source>
          <target state="new">Select the new <bpt id="p1">**</bpt>AutoPlay Device<ept id="p1">**</ept> item that was added to the <bpt id="p2">**</bpt>Supported Declarations<ept id="p2">**</ept> list.</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">**</bpt>AutoPlay Device<ept id="p1">**</ept> declaration identifies your app as an option when AutoPlay raises a device event for known events.</source>
          <target state="new">An <bpt id="p1">**</bpt>AutoPlay Device<ept id="p1">**</ept> declaration identifies your app as an option when AutoPlay raises a device event for known events.</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Launch Actions<ept id="p1">**</ept> section, enter the values in the table below for the first launch action.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Launch Actions<ept id="p1">**</ept> section, enter the values in the table below for the first launch action.</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Available Declarations<ept id="p1">**</ept> drop-down list, select <bpt id="p2">**</bpt>File Type Associations<ept id="p2">**</ept> and click <bpt id="p3">**</bpt>Add<ept id="p3">**</ept>.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Available Declarations<ept id="p1">**</ept> drop-down list, select <bpt id="p2">**</bpt>File Type Associations<ept id="p2">**</ept> and click <bpt id="p3">**</bpt>Add<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>In the Properties of the new <bpt id="p1">**</bpt>File Type Associations<ept id="p1">**</ept> declaration, set the <bpt id="p2">**</bpt>Display Name<ept id="p2">**</ept> field to <bpt id="p3">**</bpt>Show Images from Camera<ept id="p3">**</ept> and the <bpt id="p4">**</bpt>Name<ept id="p4">**</ept> field to <bpt id="p5">**</bpt>camera\_association1<ept id="p5">**</ept>.</source>
          <target state="new">In the Properties of the new <bpt id="p1">**</bpt>File Type Associations<ept id="p1">**</ept> declaration, set the <bpt id="p2">**</bpt>Display Name<ept id="p2">**</ept> field to <bpt id="p3">**</bpt>Show Images from Camera<ept id="p3">**</ept> and the <bpt id="p4">**</bpt>Name<ept id="p4">**</ept> field to <bpt id="p5">**</bpt>camera\_association1<ept id="p5">**</ept>.</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Supported File Types<ept id="p1">**</ept> section, click <bpt id="p2">**</bpt>Add New<ept id="p2">**</ept> (if needed).</source>
          <target state="new">In the <bpt id="p1">**</bpt>Supported File Types<ept id="p1">**</ept> section, click <bpt id="p2">**</bpt>Add New<ept id="p2">**</ept> (if needed).</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Set the <bpt id="p1">**</bpt>File Type<ept id="p1">**</ept> field to <bpt id="p2">**</bpt>.jpg<ept id="p2">**</ept>.</source>
          <target state="new">Set the <bpt id="p1">**</bpt>File Type<ept id="p1">**</ept> field to <bpt id="p2">**</bpt>.jpg<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Supported File Types<ept id="p1">**</ept> section, click <bpt id="p2">**</bpt>Add New<ept id="p2">**</ept> again.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Supported File Types<ept id="p1">**</ept> section, click <bpt id="p2">**</bpt>Add New<ept id="p2">**</ept> again.</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Set the <bpt id="p1">**</bpt>File Type<ept id="p1">**</ept> field of the new file association to <bpt id="p2">**</bpt>.png<ept id="p2">**</ept>.</source>
          <target state="new">Set the <bpt id="p1">**</bpt>File Type<ept id="p1">**</ept> field of the new file association to <bpt id="p2">**</bpt>.png<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>For content events, AutoPlay filters out any file types that are not explicitly associated with your app.</source>
          <target state="new">For content events, AutoPlay filters out any file types that are not explicitly associated with your app.</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Save and close the manifest file.</source>
          <target state="new">Save and close the manifest file.</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Setting</source>
          <target state="new">Setting</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Value</source>
          <target state="new">Value</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Verb</source>
          <target state="new">Verb</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>show</source>
          <target state="new">show</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Action Display Name</source>
          <target state="new">Action Display Name</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Show Pictures</source>
          <target state="new">Show Pictures</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Content Event</source>
          <target state="new">Content Event</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>WPD\\ImageSource</source>
          <target state="new">WPD\\ImageSource</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Action Display Name<ept id="p1">**</ept> setting identifies the string that AutoPlay displays for your app.</source>
          <target state="new">The <bpt id="p1">**</bpt>Action Display Name<ept id="p1">**</ept> setting identifies the string that AutoPlay displays for your app.</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Verb<ept id="p1">**</ept> setting identifies a value that is passed to your app for the selected option.</source>
          <target state="new">The <bpt id="p1">**</bpt>Verb<ept id="p1">**</ept> setting identifies a value that is passed to your app for the selected option.</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>You can specify multiple launch actions for an AutoPlay event and use the <bpt id="p1">**</bpt>Verb<ept id="p1">**</ept> setting to determine which option a user has selected for your app.</source>
          <target state="new">You can specify multiple launch actions for an AutoPlay event and use the <bpt id="p1">**</bpt>Verb<ept id="p1">**</ept> setting to determine which option a user has selected for your app.</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>You can tell which option the user selected by checking the <bpt id="p1">**</bpt>verb<ept id="p1">**</ept> property of the startup event arguments passed to your app.</source>
          <target state="new">You can tell which option the user selected by checking the <bpt id="p1">**</bpt>verb<ept id="p1">**</ept> property of the startup event arguments passed to your app.</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>You can use any value for the <bpt id="p1">**</bpt>Verb<ept id="p1">**</ept> setting except, <bpt id="p2">**</bpt>open<ept id="p2">**</ept>, which is reserved.</source>
          <target state="new">You can use any value for the <bpt id="p1">**</bpt>Verb<ept id="p1">**</ept> setting except, <bpt id="p2">**</bpt>open<ept id="p2">**</ept>, which is reserved.</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>For an example of using multiple verbs in a single app, see <bpt id="p1">[</bpt>Register for AutoPlay content<ept id="p1">](#autoplaycontent)</ept>.</source>
          <target state="new">For an example of using multiple verbs in a single app, see <bpt id="p1">[</bpt>Register for AutoPlay content<ept id="p1">](#autoplaycontent)</ept>.</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Step 2: Add assembly reference for the desktop extensions</source>
          <target state="new">Step 2: Add assembly reference for the desktop extensions</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The APIs required to access storage on a Windows Portable Device, <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows.Devices.Portable.StorageDevice<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br225654)</ept>, are part of the desktop <bpt id="p3">[</bpt>desktop device family<ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn894631)</ept>.</source>
          <target state="new">The APIs required to access storage on a Windows Portable Device, <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows.Devices.Portable.StorageDevice<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br225654)</ept>, are part of the desktop <bpt id="p3">[</bpt>desktop device family<ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn894631)</ept>.</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>This means a special assembly is required to use the APIs and those calls will only work on a device in the desktop device family (such as a PC).</source>
          <target state="new">This means a special assembly is required to use the APIs and those calls will only work on a device in the desktop device family (such as a PC).</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, right click on <bpt id="p2">**</bpt>References<ept id="p2">**</ept> and then <bpt id="p3">**</bpt>Add Reference...<ept id="p3">**</ept>.</source>
          <target state="new">In <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, right click on <bpt id="p2">**</bpt>References<ept id="p2">**</ept> and then <bpt id="p3">**</bpt>Add Reference...<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Expand <bpt id="p1">**</bpt>Universal Windows<ept id="p1">**</ept> and click <bpt id="p2">**</bpt>Extensions<ept id="p2">**</ept>.</source>
          <target state="new">Expand <bpt id="p1">**</bpt>Universal Windows<ept id="p1">**</ept> and click <bpt id="p2">**</bpt>Extensions<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Then select <bpt id="p1">**</bpt>Windows Desktop Extensions for the UWP<ept id="p1">**</ept> and click <bpt id="p2">**</bpt>OK<ept id="p2">**</ept>.</source>
          <target state="new">Then select <bpt id="p1">**</bpt>Windows Desktop Extensions for the UWP<ept id="p1">**</ept> and click <bpt id="p2">**</bpt>OK<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Step 3: Add XAML UI</source>
          <target state="new">Step 3: Add XAML UI</target>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Open the MainPage.xaml file and add the following XAML to the default <ph id="ph1">&amp;lt;</ph>Grid<ph id="ph2">&amp;gt;</ph> section.</source>
          <target state="new">Open the MainPage.xaml file and add the following XAML to the default <ph id="ph1">&amp;lt;</ph>Grid<ph id="ph2">&amp;gt;</ph> section.</target>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Step 4: Add activation code</source>
          <target state="new">Step 4: Add activation code</target>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The code in this step references the camera as a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StorageDevice<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br225654)</ept> by passing the device information Id of the camera to the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>FromId<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br225655)</ept> method.</source>
          <target state="new">The code in this step references the camera as a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StorageDevice<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br225654)</ept> by passing the device information Id of the camera to the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>FromId<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br225655)</ept> method.</target>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>The device information Id of the camera is obtained by first casting the event arguments as <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DeviceActivatedEventArgs<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br224710)</ept>, and then getting the value from the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>DeviceInformationId<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br224711)</ept> property.</source>
          <target state="new">The device information Id of the camera is obtained by first casting the event arguments as <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DeviceActivatedEventArgs<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br224710)</ept>, and then getting the value from the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>DeviceInformationId<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br224711)</ept> property.</target>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Open the App.xaml.cs file and add the following code to the <bpt id="p1">**</bpt>App<ept id="p1">**</ept> class.</source>
          <target state="new">Open the App.xaml.cs file and add the following code to the <bpt id="p1">**</bpt>App<ept id="p1">**</ept> class.</target>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  The <ph id="ph1">`ShowImages`</ph> method is added in the following step.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  The <ph id="ph1">`ShowImages`</ph> method is added in the following step.</target>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Step 5: Add code to display device information</source>
          <target state="new">Step 5: Add code to display device information</target>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>You can obtain information about the camera from the properties of the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StorageDevice<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br225654)</ept> class.</source>
          <target state="new">You can obtain information about the camera from the properties of the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StorageDevice<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br225654)</ept> class.</target>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The code in this step displays the device name and other info to the user when the app runs.</source>
          <target state="new">The code in this step displays the device name and other info to the user when the app runs.</target>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The code then calls the GetImageList and GetThumbnail methods, which you will add in the next step, to display thumbnails of the images stored on the camera</source>
          <target state="new">The code then calls the GetImageList and GetThumbnail methods, which you will add in the next step, to display thumbnails of the images stored on the camera</target>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>In the MainPage.xaml.cs file, add the following code to the <bpt id="p1">**</bpt>MainPage<ept id="p1">**</ept> class.</source>
          <target state="new">In the MainPage.xaml.cs file, add the following code to the <bpt id="p1">**</bpt>MainPage<ept id="p1">**</ept> class.</target>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  The <ph id="ph1">`GetImageList`</ph> and <ph id="ph2">`GetThumbnail`</ph> methods are added in the following step.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  The <ph id="ph1">`GetImageList`</ph> and <ph id="ph2">`GetThumbnail`</ph> methods are added in the following step.</target>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Step 6: Add code to display images</source>
          <target state="new">Step 6: Add code to display images</target>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>The code in this step displays thumbnails of the images stored on the camera.</source>
          <target state="new">The code in this step displays thumbnails of the images stored on the camera.</target>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>The code makes asynchronous calls to the camera to get the thumbnail image.</source>
          <target state="new">The code makes asynchronous calls to the camera to get the thumbnail image.</target>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>However, the next asynchronous call doesn't occur until the previous asynchronous call completes.</source>
          <target state="new">However, the next asynchronous call doesn't occur until the previous asynchronous call completes.</target>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>This ensures that only one request is made to the camera at a time.</source>
          <target state="new">This ensures that only one request is made to the camera at a time.</target>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>In the MainPage.xaml.cs file, add the following code to the <bpt id="p1">**</bpt>MainPage<ept id="p1">**</ept> class.</source>
          <target state="new">In the MainPage.xaml.cs file, add the following code to the <bpt id="p1">**</bpt>MainPage<ept id="p1">**</ept> class.</target>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Step 7: Build and run the app</source>
          <target state="new">Step 7: Build and run the app</target>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Press F5 to build and deploy the app (in debug mode).</source>
          <target state="new">Press F5 to build and deploy the app (in debug mode).</target>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>To run your app, connect a camera to your machine.</source>
          <target state="new">To run your app, connect a camera to your machine.</target>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Then select the app from the AutoPlay list of options.</source>
          <target state="new">Then select the app from the AutoPlay list of options.</target>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  Not all cameras advertise for the <bpt id="p2">**</bpt>WPD\\ImageSource<ept id="p2">**</ept> AutoPlay device event.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  Not all cameras advertise for the <bpt id="p2">**</bpt>WPD\\ImageSource<ept id="p2">**</ept> AutoPlay device event.</target>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Configure removable storage</source>
          <target state="new">Configure removable storage</target>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>You can identify a volume device such as a memory card or thumb drive as an <bpt id="p1">**</bpt>AutoPlay<ept id="p1">**</ept> device when the volume device is connected to a PC.</source>
          <target state="new">You can identify a volume device such as a memory card or thumb drive as an <bpt id="p1">**</bpt>AutoPlay<ept id="p1">**</ept> device when the volume device is connected to a PC.</target>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>This is especially useful when you want to associate a specific app for <bpt id="p1">**</bpt>AutoPlay<ept id="p1">**</ept> to present to the user for your volume device.</source>
          <target state="new">This is especially useful when you want to associate a specific app for <bpt id="p1">**</bpt>AutoPlay<ept id="p1">**</ept> to present to the user for your volume device.</target>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Here we show how to identify your volume device as an <bpt id="p1">**</bpt>AutoPlay<ept id="p1">**</ept> device.</source>
          <target state="new">Here we show how to identify your volume device as an <bpt id="p1">**</bpt>AutoPlay<ept id="p1">**</ept> device.</target>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>To identify your volume device as an <bpt id="p1">**</bpt>AutoPlay<ept id="p1">**</ept> device, add an autorun.inf file to the root drive of your device.</source>
          <target state="new">To identify your volume device as an <bpt id="p1">**</bpt>AutoPlay<ept id="p1">**</ept> device, add an autorun.inf file to the root drive of your device.</target>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>In the autorun.inf file, add a <bpt id="p1">**</bpt>CustomEvent<ept id="p1">**</ept> key to the <bpt id="p2">**</bpt>AutoRun<ept id="p2">**</ept> section.</source>
          <target state="new">In the autorun.inf file, add a <bpt id="p1">**</bpt>CustomEvent<ept id="p1">**</ept> key to the <bpt id="p2">**</bpt>AutoRun<ept id="p2">**</ept> section.</target>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>When your volume device connects to a PC, <bpt id="p1">**</bpt>AutoPlay<ept id="p1">**</ept> will find the autorun.inf file and treat your volume as a device.</source>
          <target state="new">When your volume device connects to a PC, <bpt id="p1">**</bpt>AutoPlay<ept id="p1">**</ept> will find the autorun.inf file and treat your volume as a device.</target>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>AutoPlay<ept id="p1">**</ept> will create an <bpt id="p2">**</bpt>AutoPlay<ept id="p2">**</ept> event by using the name that you supplied for the <bpt id="p3">**</bpt>CustomEvent<ept id="p3">**</ept> key.</source>
          <target state="new"><bpt id="p1">**</bpt>AutoPlay<ept id="p1">**</ept> will create an <bpt id="p2">**</bpt>AutoPlay<ept id="p2">**</ept> event by using the name that you supplied for the <bpt id="p3">**</bpt>CustomEvent<ept id="p3">**</ept> key.</target>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>You can then create an app and register the app as a handler for that <bpt id="p1">**</bpt>AutoPlay<ept id="p1">**</ept> event.</source>
          <target state="new">You can then create an app and register the app as a handler for that <bpt id="p1">**</bpt>AutoPlay<ept id="p1">**</ept> event.</target>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>When the device is connected to the PC, <bpt id="p1">**</bpt>AutoPlay<ept id="p1">**</ept> will show your app as a handler for your volume device.</source>
          <target state="new">When the device is connected to the PC, <bpt id="p1">**</bpt>AutoPlay<ept id="p1">**</ept> will show your app as a handler for your volume device.</target>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>For more info on autorun.inf files, see <bpt id="p1">[</bpt>autorun.inf entries<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/cc144200)</ept>.</source>
          <target state="new">For more info on autorun.inf files, see <bpt id="p1">[</bpt>autorun.inf entries<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/cc144200)</ept>.</target>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Step 1: Create an autorun.inf file</source>
          <target state="new">Step 1: Create an autorun.inf file</target>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>In the root drive of your volume device, add a file named autorun.inf.</source>
          <target state="new">In the root drive of your volume device, add a file named autorun.inf.</target>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Open the autorun.inf file and add the following text.</source>
          <target state="new">Open the autorun.inf file and add the following text.</target>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Step 2: Create a new project and add AutoPlay declarations</source>
          <target state="new">Step 2: Create a new project and add AutoPlay declarations</target>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Open Visual Studio and select <bpt id="p1">**</bpt>New Project<ept id="p1">**</ept> from the <bpt id="p2">**</bpt>File<ept id="p2">**</ept> menu.</source>
          <target state="new">Open Visual Studio and select <bpt id="p1">**</bpt>New Project<ept id="p1">**</ept> from the <bpt id="p2">**</bpt>File<ept id="p2">**</ept> menu.</target>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Visual C#<ept id="p1">**</ept> section, under <bpt id="p2">**</bpt>Windows<ept id="p2">**</ept>, select <bpt id="p3">**</bpt>Blank App (Universal Windows)<ept id="p3">**</ept>.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Visual C#<ept id="p1">**</ept> section, under <bpt id="p2">**</bpt>Windows<ept id="p2">**</ept>, select <bpt id="p3">**</bpt>Blank App (Universal Windows)<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>Name the application <bpt id="p1">**</bpt>AutoPlayCustomEvent<ept id="p1">**</ept> and click <bpt id="p2">**</bpt>OK.<ept id="p2">**</ept></source>
          <target state="new">Name the application <bpt id="p1">**</bpt>AutoPlayCustomEvent<ept id="p1">**</ept> and click <bpt id="p2">**</bpt>OK.<ept id="p2">**</ept></target>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Open the Package.appxmanifest file and select the <bpt id="p1">**</bpt>Capabilities<ept id="p1">**</ept> tab.</source>
          <target state="new">Open the Package.appxmanifest file and select the <bpt id="p1">**</bpt>Capabilities<ept id="p1">**</ept> tab.</target>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Select the <bpt id="p1">**</bpt>Removable Storage<ept id="p1">**</ept> capability.</source>
          <target state="new">Select the <bpt id="p1">**</bpt>Removable Storage<ept id="p1">**</ept> capability.</target>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>This gives the app access to the files and folders on removable storage devices.</source>
          <target state="new">This gives the app access to the files and folders on removable storage devices.</target>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>In the manifest file, select the <bpt id="p1">**</bpt>Declarations<ept id="p1">**</ept> tab.</source>
          <target state="new">In the manifest file, select the <bpt id="p1">**</bpt>Declarations<ept id="p1">**</ept> tab.</target>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Available Declarations<ept id="p1">**</ept> drop-down list, select <bpt id="p2">**</bpt>AutoPlay Content<ept id="p2">**</ept> and click <bpt id="p3">**</bpt>Add<ept id="p3">**</ept>.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Available Declarations<ept id="p1">**</ept> drop-down list, select <bpt id="p2">**</bpt>AutoPlay Content<ept id="p2">**</ept> and click <bpt id="p3">**</bpt>Add<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Select the new <bpt id="p1">**</bpt>AutoPlay Content<ept id="p1">**</ept> item that was added to the <bpt id="p2">**</bpt>Supported Declarations<ept id="p2">**</ept> list.</source>
          <target state="new">Select the new <bpt id="p1">**</bpt>AutoPlay Content<ept id="p1">**</ept> item that was added to the <bpt id="p2">**</bpt>Supported Declarations<ept id="p2">**</ept> list.</target>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  Alternatively, you can also choose to add an <bpt id="p2">**</bpt>AutoPlay Device<ept id="p2">**</ept> declaration for your custom AutoPlay event.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  Alternatively, you can also choose to add an <bpt id="p2">**</bpt>AutoPlay Device<ept id="p2">**</ept> declaration for your custom AutoPlay event.</target>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Launch Actions<ept id="p1">**</ept> section for your <bpt id="p2">**</bpt>AutoPlay Content<ept id="p2">**</ept> event declaration, enter the values in the table below for the first launch action.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Launch Actions<ept id="p1">**</ept> section for your <bpt id="p2">**</bpt>AutoPlay Content<ept id="p2">**</ept> event declaration, enter the values in the table below for the first launch action.</target>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Available Declarations<ept id="p1">**</ept> drop-down list, select <bpt id="p2">**</bpt>File Type Associations<ept id="p2">**</ept> and click <bpt id="p3">**</bpt>Add<ept id="p3">**</ept>.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Available Declarations<ept id="p1">**</ept> drop-down list, select <bpt id="p2">**</bpt>File Type Associations<ept id="p2">**</ept> and click <bpt id="p3">**</bpt>Add<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>In the Properties of the new <bpt id="p1">**</bpt>File Type Associations<ept id="p1">**</ept> declaration, set the <bpt id="p2">**</bpt>Display Name<ept id="p2">**</ept> field to <bpt id="p3">**</bpt>Show .ms Files<ept id="p3">**</ept> and the <bpt id="p4">**</bpt>Name<ept id="p4">**</ept> field to <bpt id="p5">**</bpt>ms\_association<ept id="p5">**</ept>.</source>
          <target state="new">In the Properties of the new <bpt id="p1">**</bpt>File Type Associations<ept id="p1">**</ept> declaration, set the <bpt id="p2">**</bpt>Display Name<ept id="p2">**</ept> field to <bpt id="p3">**</bpt>Show .ms Files<ept id="p3">**</ept> and the <bpt id="p4">**</bpt>Name<ept id="p4">**</ept> field to <bpt id="p5">**</bpt>ms\_association<ept id="p5">**</ept>.</target>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Supported File Types<ept id="p1">**</ept> section, click <bpt id="p2">**</bpt>Add New<ept id="p2">**</ept>.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Supported File Types<ept id="p1">**</ept> section, click <bpt id="p2">**</bpt>Add New<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Set the <bpt id="p1">**</bpt>File Type<ept id="p1">**</ept> field to <bpt id="p2">**</bpt>.ms<ept id="p2">**</ept>.</source>
          <target state="new">Set the <bpt id="p1">**</bpt>File Type<ept id="p1">**</ept> field to <bpt id="p2">**</bpt>.ms<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>For content events, AutoPlay filters out any file types that aren't explicitly associated with your app.</source>
          <target state="new">For content events, AutoPlay filters out any file types that aren't explicitly associated with your app.</target>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Save and close the manifest file.</source>
          <target state="new">Save and close the manifest file.</target>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Setting</source>
          <target state="new">Setting</target>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>Value</source>
          <target state="new">Value</target>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Verb</source>
          <target state="new">Verb</target>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>show</source>
          <target state="new">show</target>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Action Display Name</source>
          <target state="new">Action Display Name</target>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Show Files</source>
          <target state="new">Show Files</target>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>Content Event</source>
          <target state="new">Content Event</target>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>AutoPlayCustomEventQuickstart</source>
          <target state="new">AutoPlayCustomEventQuickstart</target>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Content Event<ept id="p1">**</ept> value is the text that you supplied for the <bpt id="p2">**</bpt>CustomEvent<ept id="p2">**</ept> key in your autorun.inf file.</source>
          <target state="new">The <bpt id="p1">**</bpt>Content Event<ept id="p1">**</ept> value is the text that you supplied for the <bpt id="p2">**</bpt>CustomEvent<ept id="p2">**</ept> key in your autorun.inf file.</target>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Action Display Name<ept id="p1">**</ept> setting identifies the string that AutoPlay displays for your app.</source>
          <target state="new">The <bpt id="p1">**</bpt>Action Display Name<ept id="p1">**</ept> setting identifies the string that AutoPlay displays for your app.</target>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Verb<ept id="p1">**</ept> setting identifies a value that is passed to your app for the selected option.</source>
          <target state="new">The <bpt id="p1">**</bpt>Verb<ept id="p1">**</ept> setting identifies a value that is passed to your app for the selected option.</target>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>You can specify multiple launch actions for an AutoPlay event and use the <bpt id="p1">**</bpt>Verb<ept id="p1">**</ept> setting to determine which option a user has selected for your app.</source>
          <target state="new">You can specify multiple launch actions for an AutoPlay event and use the <bpt id="p1">**</bpt>Verb<ept id="p1">**</ept> setting to determine which option a user has selected for your app.</target>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>You can tell which option the user selected by checking the <bpt id="p1">**</bpt>verb<ept id="p1">**</ept> property of the startup event arguments passed to your app.</source>
          <target state="new">You can tell which option the user selected by checking the <bpt id="p1">**</bpt>verb<ept id="p1">**</ept> property of the startup event arguments passed to your app.</target>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>You can use any value for the <bpt id="p1">**</bpt>Verb<ept id="p1">**</ept> setting except, <bpt id="p2">**</bpt>open<ept id="p2">**</ept>, which is reserved.</source>
          <target state="new">You can use any value for the <bpt id="p1">**</bpt>Verb<ept id="p1">**</ept> setting except, <bpt id="p2">**</bpt>open<ept id="p2">**</ept>, which is reserved.</target>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Step 3: Add XAML UI</source>
          <target state="new">Step 3: Add XAML UI</target>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>Open the MainPage.xaml file and add the following XAML to the default <ph id="ph1">&amp;lt;</ph>Grid<ph id="ph2">&amp;gt;</ph> section.</source>
          <target state="new">Open the MainPage.xaml file and add the following XAML to the default <ph id="ph1">&amp;lt;</ph>Grid<ph id="ph2">&amp;gt;</ph> section.</target>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>Step 4: Add activation code</source>
          <target state="new">Step 4: Add activation code</target>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>The code in this step calls a method to display the folders in the root drive of your volume device.</source>
          <target state="new">The code in this step calls a method to display the folders in the root drive of your volume device.</target>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>For the AutoPlay content events, AutoPlay passes the root folder of the storage device in the startup arguments passed to the application during the <bpt id="p1">**</bpt>OnFileActivated<ept id="p1">**</ept> event.</source>
          <target state="new">For the AutoPlay content events, AutoPlay passes the root folder of the storage device in the startup arguments passed to the application during the <bpt id="p1">**</bpt>OnFileActivated<ept id="p1">**</ept> event.</target>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>You can retrieve this folder from the first element of the <bpt id="p1">**</bpt>Files<ept id="p1">**</ept> property.</source>
          <target state="new">You can retrieve this folder from the first element of the <bpt id="p1">**</bpt>Files<ept id="p1">**</ept> property.</target>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>Open the App.xaml.cs file and add the following code to the <bpt id="p1">**</bpt>App<ept id="p1">**</ept> class.</source>
          <target state="new">Open the App.xaml.cs file and add the following code to the <bpt id="p1">**</bpt>App<ept id="p1">**</ept> class.</target>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  The <ph id="ph1">`DisplayFiles`</ph> method is added in the following step.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  The <ph id="ph1">`DisplayFiles`</ph> method is added in the following step.</target>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>Step 5: Add code to display folders</source>
          <target state="new">Step 5: Add code to display folders</target>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>In the MainPage.xaml.cs file add the following code to the <bpt id="p1">**</bpt>MainPage<ept id="p1">**</ept> class.</source>
          <target state="new">In the MainPage.xaml.cs file add the following code to the <bpt id="p1">**</bpt>MainPage<ept id="p1">**</ept> class.</target>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>Step 6: Build and run the qpp</source>
          <target state="new">Step 6: Build and run the qpp</target>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Press F5 to build and deploy the app (in debug mode).</source>
          <target state="new">Press F5 to build and deploy the app (in debug mode).</target>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>To run your app, insert a memory card or another storage device into your PC.</source>
          <target state="new">To run your app, insert a memory card or another storage device into your PC.</target>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Then select your app from the list of AutoPlay handler options.</source>
          <target state="new">Then select your app from the list of AutoPlay handler options.</target>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>AutoPlay event reference</source>
          <target state="new">AutoPlay event reference</target>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>AutoPlay<ept id="p1">**</ept> system allows apps to register for a variety of device and volume (disk) arrival events.</source>
          <target state="new">The <bpt id="p1">**</bpt>AutoPlay<ept id="p1">**</ept> system allows apps to register for a variety of device and volume (disk) arrival events.</target>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>To register for <bpt id="p1">**</bpt>AutoPlay<ept id="p1">**</ept> content events, you must enable the <bpt id="p2">**</bpt>Removable Storage<ept id="p2">**</ept> capability in your package manifest.</source>
          <target state="new">To register for <bpt id="p1">**</bpt>AutoPlay<ept id="p1">**</ept> content events, you must enable the <bpt id="p2">**</bpt>Removable Storage<ept id="p2">**</ept> capability in your package manifest.</target>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>This table shows the events that you can register for and when they are raised.</source>
          <target state="new">This table shows the events that you can register for and when they are raised.</target>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>Scenario</source>
          <target state="new">Scenario</target>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>Event</source>
          <target state="new">Event</target>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="new">Description</target>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Using photos on a Camera</source>
          <target state="new">Using photos on a Camera</target>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>WPD\ImageSource</source>
          <target state="new">WPD\ImageSource</target>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>Raised for cameras that are identified as Windows Portable Devices and offer the ImageSource capability.</source>
          <target state="new">Raised for cameras that are identified as Windows Portable Devices and offer the ImageSource capability.</target>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>Using music on an audio player</source>
          <target state="new">Using music on an audio player</target>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>WPD\AudioSource</source>
          <target state="new">WPD\AudioSource</target>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>Raised for media players that are identified as Windows Portable Devices and offer the AudioSource capability.</source>
          <target state="new">Raised for media players that are identified as Windows Portable Devices and offer the AudioSource capability.</target>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>Using videos on a video camera</source>
          <target state="new">Using videos on a video camera</target>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>WPD\VideoSource</source>
          <target state="new">WPD\VideoSource</target>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>Raised for video cameras that are identified as Windows Portable Devices and offer the VideoSource capability.</source>
          <target state="new">Raised for video cameras that are identified as Windows Portable Devices and offer the VideoSource capability.</target>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>Access a connected flash drive or external hard drive</source>
          <target state="new">Access a connected flash drive or external hard drive</target>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>StorageOnArrival</source>
          <target state="new">StorageOnArrival</target>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>Raised when a drive or volume is connected to the PC.</source>
          <target state="new">Raised when a drive or volume is connected to the PC.</target>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>If the drive or volume contains a DCIM, AVCHD, or PRIVATE\ACHD folder in the root of the disk, the <bpt id="p1">**</bpt>ShowPicturesOnArrival<ept id="p1">**</ept> event is raised instead.</source>
          <target state="new">If the drive or volume contains a DCIM, AVCHD, or PRIVATE\ACHD folder in the root of the disk, the <bpt id="p1">**</bpt>ShowPicturesOnArrival<ept id="p1">**</ept> event is raised instead.</target>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>Using photos from mass storage (legacy)</source>
          <target state="new">Using photos from mass storage (legacy)</target>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>ShowPicturesOnArrival</source>
          <target state="new">ShowPicturesOnArrival</target>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>Raised when a drive or volume contains a DCIM, AVCHD, or PRIVATE\ACHD folder in the root of the disk.</source>
          <target state="new">Raised when a drive or volume contains a DCIM, AVCHD, or PRIVATE\ACHD folder in the root of the disk.</target>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>IIf a user  has enabled <bpt id="p1">**</bpt>Choose what to do with each type of media<ept id="p1">**</ept> in the AutoPlay Control Panel, AutoPlay will examine a volume connected to the PC to determine the type of content on the disk.</source>
          <target state="new">IIf a user  has enabled <bpt id="p1">**</bpt>Choose what to do with each type of media<ept id="p1">**</ept> in the AutoPlay Control Panel, AutoPlay will examine a volume connected to the PC to determine the type of content on the disk.</target>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>When pictures are found, <bpt id="p1">**</bpt>ShowPicturesOnArrival<ept id="p1">**</ept> is raised.</source>
          <target state="new">When pictures are found, <bpt id="p1">**</bpt>ShowPicturesOnArrival<ept id="p1">**</ept> is raised.</target>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>Receiving photos with Proximity Sharing (tap and send)</source>
          <target state="new">Receiving photos with Proximity Sharing (tap and send)</target>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>ShowPicturesOnArrival</source>
          <target state="new">ShowPicturesOnArrival</target>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>When users send content with using proximity (tap and send), AutoPlay will examine the shared files to determine the type of content.</source>
          <target state="new">When users send content with using proximity (tap and send), AutoPlay will examine the shared files to determine the type of content.</target>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>If pictures are found, <bpt id="p1">**</bpt>ShowPicturesOnArrival<ept id="p1">**</ept> is raised.</source>
          <target state="new">If pictures are found, <bpt id="p1">**</bpt>ShowPicturesOnArrival<ept id="p1">**</ept> is raised.</target>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>Using music from mass storage (legacy)</source>
          <target state="new">Using music from mass storage (legacy)</target>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>PlayMusicFilesOnArrival</source>
          <target state="new">PlayMusicFilesOnArrival</target>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>If a user has enabled <bpt id="p1">**</bpt>Choose what to do with each type of media<ept id="p1">**</ept> in the AutoPlay Control Panel, AutoPlay will examine a volume connected to the PC to determine the type of content on the disk.</source>
          <target state="new">If a user has enabled <bpt id="p1">**</bpt>Choose what to do with each type of media<ept id="p1">**</ept> in the AutoPlay Control Panel, AutoPlay will examine a volume connected to the PC to determine the type of content on the disk.</target>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>When music files are found, <bpt id="p1">**</bpt>PlayMusicFilesOnArrival<ept id="p1">**</ept> is raised.</source>
          <target state="new">When music files are found, <bpt id="p1">**</bpt>PlayMusicFilesOnArrival<ept id="p1">**</ept> is raised.</target>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>Receiving music with Proximity Sharing (tap and send)</source>
          <target state="new">Receiving music with Proximity Sharing (tap and send)</target>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>PlayMusicFilesOnArrival</source>
          <target state="new">PlayMusicFilesOnArrival</target>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>When users send content with using proximity (tap and send), AutoPlay will examine the shared files to determine the type of content.</source>
          <target state="new">When users send content with using proximity (tap and send), AutoPlay will examine the shared files to determine the type of content.</target>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>If music files are found, <bpt id="p1">**</bpt>PlayMusicFilesOnArrival<ept id="p1">**</ept> is raised.</source>
          <target state="new">If music files are found, <bpt id="p1">**</bpt>PlayMusicFilesOnArrival<ept id="p1">**</ept> is raised.</target>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>Using videos from mass storage (legacy)</source>
          <target state="new">Using videos from mass storage (legacy)</target>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>PlayVideoFilesOnArrival</source>
          <target state="new">PlayVideoFilesOnArrival</target>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>If a user has enabled <bpt id="p1">**</bpt>Choose what to do with each type of media<ept id="p1">**</ept> in the AutoPlay Control Panel,, AutoPlay will examine a volume connected to the PC to determine the type of content on the disk.</source>
          <target state="new">If a user has enabled <bpt id="p1">**</bpt>Choose what to do with each type of media<ept id="p1">**</ept> in the AutoPlay Control Panel,, AutoPlay will examine a volume connected to the PC to determine the type of content on the disk.</target>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>When video files are found, <bpt id="p1">**</bpt>PlayVideoFilesOnArrival<ept id="p1">**</ept> is raised.</source>
          <target state="new">When video files are found, <bpt id="p1">**</bpt>PlayVideoFilesOnArrival<ept id="p1">**</ept> is raised.</target>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>Receiving videos with Proximity Sharing (tap and send)</source>
          <target state="new">Receiving videos with Proximity Sharing (tap and send)</target>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>PlayVideoFilesOnArrival</source>
          <target state="new">PlayVideoFilesOnArrival</target>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>When users send content with using proximity (tap and send), AutoPlay will examine the shared files to determine the type of content.</source>
          <target state="new">When users send content with using proximity (tap and send), AutoPlay will examine the shared files to determine the type of content.</target>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>If video files are found, <bpt id="p1">**</bpt>PlayVideoFilesOnArrival<ept id="p1">**</ept> is raised.</source>
          <target state="new">If video files are found, <bpt id="p1">**</bpt>PlayVideoFilesOnArrival<ept id="p1">**</ept> is raised.</target>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>Handling mixed sets of files from a connected device</source>
          <target state="new">Handling mixed sets of files from a connected device</target>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>MixedContentOnArrival</source>
          <target state="new">MixedContentOnArrival</target>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>If a user has enabled <bpt id="p1">**</bpt>Choose what to do with each type of media<ept id="p1">**</ept> in the AutoPlay Control Panel, AutoPlay will examine a volume connected to the PC to determine the type of content on the disk.</source>
          <target state="new">If a user has enabled <bpt id="p1">**</bpt>Choose what to do with each type of media<ept id="p1">**</ept> in the AutoPlay Control Panel, AutoPlay will examine a volume connected to the PC to determine the type of content on the disk.</target>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>If no specific content type is found (for example, pictures), <bpt id="p1">**</bpt>MixedContentOnArrival<ept id="p1">**</ept> is raised.</source>
          <target state="new">If no specific content type is found (for example, pictures), <bpt id="p1">**</bpt>MixedContentOnArrival<ept id="p1">**</ept> is raised.</target>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>Handling mixed sets of files with Proximity Sharing (tap and send)</source>
          <target state="new">Handling mixed sets of files with Proximity Sharing (tap and send)</target>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>MixedContentOnArrival</source>
          <target state="new">MixedContentOnArrival</target>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>When users send content with using proximity (tap and send), AutoPlay will examine the shared files to determine the type of content.</source>
          <target state="new">When users send content with using proximity (tap and send), AutoPlay will examine the shared files to determine the type of content.</target>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>If no specific content type is found (for example, pictures), <bpt id="p1">**</bpt>MixedContentOnArrival<ept id="p1">**</ept> is raised.</source>
          <target state="new">If no specific content type is found (for example, pictures), <bpt id="p1">**</bpt>MixedContentOnArrival<ept id="p1">**</ept> is raised.</target>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>Handle video from optical media</source>
          <target state="new">Handle video from optical media</target>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>PlayDVDMovieOnArrival</source>
          <target state="new">PlayDVDMovieOnArrival</target>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>PlayBluRayOnArrival</source>
          <target state="new">PlayBluRayOnArrival</target>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>PlayVideoCDMovieOnArrival</source>
          <target state="new">PlayVideoCDMovieOnArrival</target>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>PlaySuperVideoCDMovieOnArrival</source>
          <target state="new">PlaySuperVideoCDMovieOnArrival</target>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>Handle music from optical media</source>
          <target state="new">Handle music from optical media</target>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>PlayCDAudioOnArrival</source>
          <target state="new">PlayCDAudioOnArrival</target>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>PlayDVDAudioOnArrival</source>
          <target state="new">PlayDVDAudioOnArrival</target>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>Play enhanced disks</source>
          <target state="new">Play enhanced disks</target>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>PlayEnhancedCDOnArrival</source>
          <target state="new">PlayEnhancedCDOnArrival</target>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>PlayEnhancedDVDOnArrival</source>
          <target state="new">PlayEnhancedDVDOnArrival</target>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>Handle writeable optical disks</source>
          <target state="new">Handle writeable optical disks</target>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>HandleCDBurningOnArrival</source>
          <target state="new">HandleCDBurningOnArrival</target>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>HandleDVDBurningOnArrival</source>
          <target state="new">HandleDVDBurningOnArrival</target>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>HandleBDBurningOnArrival</source>
          <target state="new">HandleBDBurningOnArrival</target>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>Handle any other device or volume connection</source>
          <target state="new">Handle any other device or volume connection</target>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>UnknownContentOnArrival</source>
          <target state="new">UnknownContentOnArrival</target>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>Raised for all events in case content is found that does not match any of the AutoPlay content events.</source>
          <target state="new">Raised for all events in case content is found that does not match any of the AutoPlay content events.</target>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>Use of this event is not recommended.</source>
          <target state="new">Use of this event is not recommended.</target>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>You should only register your application for the specific AutoPlay events that it can handle.</source>
          <target state="new">You should only register your application for the specific AutoPlay events that it can handle.</target>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>You can specify that AutoPlay raise a custom AutoPlay Content event using the <bpt id="p1">**</bpt>CustomEvent<ept id="p1">**</ept> entry in the autorun.inf file for a volume.</source>
          <target state="new">You can specify that AutoPlay raise a custom AutoPlay Content event using the <bpt id="p1">**</bpt>CustomEvent<ept id="p1">**</ept> entry in the autorun.inf file for a volume.</target>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>For more info, see <bpt id="p1">[</bpt>Autorun.inf entries<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/cc144200)</ept>.</source>
          <target state="new">For more info, see <bpt id="p1">[</bpt>Autorun.inf entries<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/cc144200)</ept>.</target>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>You can register your app as an AutoPlay Content or AutoPlay Device event handler by adding an extension to the package.appxmanifest file for your app.</source>
          <target state="new">You can register your app as an AutoPlay Content or AutoPlay Device event handler by adding an extension to the package.appxmanifest file for your app.</target>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>If you are using Visual Studio, you can add an <bpt id="p1">**</bpt>AutoPlay Content<ept id="p1">**</ept> or <bpt id="p2">**</bpt>AutoPlay Device<ept id="p2">**</ept> declaration in the <bpt id="p3">**</bpt>Declarations<ept id="p3">**</ept> tab.</source>
          <target state="new">If you are using Visual Studio, you can add an <bpt id="p1">**</bpt>AutoPlay Content<ept id="p1">**</ept> or <bpt id="p2">**</bpt>AutoPlay Device<ept id="p2">**</ept> declaration in the <bpt id="p3">**</bpt>Declarations<ept id="p3">**</ept> tab.</target>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>If you are editing the package.appxmanifest file for your app directly, add an <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Extension<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br211400)</ept> element to your package manifest that specifies either <bpt id="p3">**</bpt>windows.autoPlayContent<ept id="p3">**</ept> or <bpt id="p4">**</bpt>windows.autoPlayDevice<ept id="p4">**</ept> as the <bpt id="p5">**</bpt>Category<ept id="p5">**</ept>.</source>
          <target state="new">If you are editing the package.appxmanifest file for your app directly, add an <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Extension<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br211400)</ept> element to your package manifest that specifies either <bpt id="p3">**</bpt>windows.autoPlayContent<ept id="p3">**</ept> or <bpt id="p4">**</bpt>windows.autoPlayDevice<ept id="p4">**</ept> as the <bpt id="p5">**</bpt>Category<ept id="p5">**</ept>.</target>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>For example, the following entry in the package manifest adds an <bpt id="p1">**</bpt>AutoPlay Content<ept id="p1">**</ept> extension to register the app as a handler for the <bpt id="p2">**</bpt>ShowPicturesOnArrival<ept id="p2">**</ept> event.</source>
          <target state="new">For example, the following entry in the package manifest adds an <bpt id="p1">**</bpt>AutoPlay Content<ept id="p1">**</ept> extension to register the app as a handler for the <bpt id="p2">**</bpt>ShowPicturesOnArrival<ept id="p2">**</ept> event.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>