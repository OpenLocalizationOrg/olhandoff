<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-48076a9" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c97888f154097f4f862cf19af8d9145869d2372c</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci2\globalizing\use-patterns-to-format-dates-and-times.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Use the Windows.Globalization.DateTimeFormatting API with custom patterns to display dates and times in exactly the format you wish.</source>
          <target state="new">Use the Windows.Globalization.DateTimeFormatting API with custom patterns to display dates and times in exactly the format you wish.</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Use patterns to format dates and times</source>
          <target state="new">Use patterns to format dates and times</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Use patterns to format dates and times</source>
          <target state="new">Use patterns to format dates and times</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>\[ Updated for UWP apps on Windows 10.</source>
          <target state="new">\[ Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Important APIs</source>
          <target state="new">Important APIs</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Windows.Globalization.DateTimeFormatting</source>
          <target state="new">Windows.Globalization.DateTimeFormatting</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>DateTimeFormatter</source>
          <target state="new">DateTimeFormatter</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>DateTime</source>
          <target state="new">DateTime</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows.Globalization.DateTimeFormatting<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br206859)</ept> API with custom patterns to display dates and times in exactly the format you wish.</source>
          <target state="new">Use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows.Globalization.DateTimeFormatting<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br206859)</ept> API with custom patterns to display dates and times in exactly the format you wish.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="new">Introduction</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows.Globalization.DateTimeFormatting<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br206859)</ept> provides various ways to properly format dates and times for languages and regions around the world.</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows.Globalization.DateTimeFormatting<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br206859)</ept> provides various ways to properly format dates and times for languages and regions around the world.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You can use standard formats for year, month, day, and so on, or you can use standard string templates, such as "longdate" or "month day".</source>
          <target state="new">You can use standard formats for year, month, day, and so on, or you can use standard string templates, such as "longdate" or "month day".</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>But when you want more control over the order and format of the constituents of the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DateTime<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br206576)</ept> string you wish to display, you can use a special syntax for the string template parameter, called a "pattern".</source>
          <target state="new">But when you want more control over the order and format of the constituents of the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DateTime<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br206576)</ept> string you wish to display, you can use a special syntax for the string template parameter, called a "pattern".</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The pattern syntax allows you to obtain individual constituents of a <bpt id="p1">**</bpt>DateTime<ept id="p1">**</ept> object—just the month name, or just the year value, for example—in order to display them in whatever custom format you choose.</source>
          <target state="new">The pattern syntax allows you to obtain individual constituents of a <bpt id="p1">**</bpt>DateTime<ept id="p1">**</ept> object—just the month name, or just the year value, for example—in order to display them in whatever custom format you choose.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Furthermore, the pattern can be localized to adapt to other languages and regions.</source>
          <target state="new">Furthermore, the pattern can be localized to adapt to other languages and regions.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  This is an overview of format patterns.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  This is an overview of format patterns.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For a more complete discussion of format templates and format patterns see the Remarks section of the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DateTimeFormatter<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br206828)</ept> class.</source>
          <target state="new">For a more complete discussion of format templates and format patterns see the Remarks section of the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DateTimeFormatter<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br206828)</ept> class.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>What you need to know</source>
          <target state="new">What you need to know</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>It's important to note that when you use patterns, you are building a custom format that is not guaranteed to be valid across cultures.</source>
          <target state="new">It's important to note that when you use patterns, you are building a custom format that is not guaranteed to be valid across cultures.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For example, consider the "month day" template:</source>
          <target state="new">For example, consider the "month day" template:</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>C</source>
          <target state="new">C</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>JavaScript</source>
          <target state="new">JavaScript</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This creates a formatter based on the language and region value of the current context.</source>
          <target state="new">This creates a formatter based on the language and region value of the current context.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Therefore, it always displays the month and day together in an appropriate global format.</source>
          <target state="new">Therefore, it always displays the month and day together in an appropriate global format.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For example, it displays "January 1" for English (US), but "1 janvier" for French (France) and "1月1日" for Japanese.</source>
          <target state="new">For example, it displays "January 1" for English (US), but "1 janvier" for French (France) and "1月1日" for Japanese.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>That is because the template is based on a culture-specific pattern string, which can be accessed via the pattern property:</source>
          <target state="new">That is because the template is based on a culture-specific pattern string, which can be accessed via the pattern property:</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>C</source>
          <target state="new">C</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>JavaScript</source>
          <target state="new">JavaScript</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This yields different results depending on the language and region of the formatter.</source>
          <target state="new">This yields different results depending on the language and region of the formatter.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Note that different regions may use different constituents, in different orders, with or without additional characters and spacing:</source>
          <target state="new">Note that different regions may use different constituents, in different orders, with or without additional characters and spacing:</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>You can use patterns to construct a custom <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DateTimeFormatter<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br206828)</ept>, for instance this one based on the US English pattern:</source>
          <target state="new">You can use patterns to construct a custom <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DateTimeFormatter<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br206828)</ept>, for instance this one based on the US English pattern:</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>C</source>
          <target state="new">C</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>JavaScript</source>
          <target state="new">JavaScript</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Windows returns culture-specific values for the individual constituents inside the brackets {}.</source>
          <target state="new">Windows returns culture-specific values for the individual constituents inside the brackets {}.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>But with the pattern syntax, the constituent order is invariant.</source>
          <target state="new">But with the pattern syntax, the constituent order is invariant.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>You get precisely what you ask for, which may not be culturally appropriate:</source>
          <target state="new">You get precisely what you ask for, which may not be culturally appropriate:</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Furthermore, patterns are not guaranteed to remain consistent over time.</source>
          <target state="new">Furthermore, patterns are not guaranteed to remain consistent over time.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Countries or regions may change their calendar systems, which alters a format template.</source>
          <target state="new">Countries or regions may change their calendar systems, which alters a format template.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Windows updates the output of the formatters to accommodate such changes.</source>
          <target state="new">Windows updates the output of the formatters to accommodate such changes.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Therefore, you should only use the pattern syntax for formatting <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DateTime<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br206576)</ept>s when:</source>
          <target state="new">Therefore, you should only use the pattern syntax for formatting <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DateTime<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br206576)</ept>s when:</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>You are not dependent on a particular output for a format.</source>
          <target state="new">You are not dependent on a particular output for a format.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>You do not need the format to follow some culture-specific standard.</source>
          <target state="new">You do not need the format to follow some culture-specific standard.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>You specifically intend the pattern to be invariant across cultures.</source>
          <target state="new">You specifically intend the pattern to be invariant across cultures.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>You intend to localize the pattern.</source>
          <target state="new">You intend to localize the pattern.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>To summarize the differences between the standard string templates and non-standard string patterns:</source>
          <target state="new">To summarize the differences between the standard string templates and non-standard string patterns:</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>String templates, such as "month day":</source>
          <target state="new">String templates, such as "month day":</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Abstracted representation of a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DateTime<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br206576)</ept> format that includes values for the month and the day, in some order.</source>
          <target state="new">Abstracted representation of a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DateTime<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br206576)</ept> format that includes values for the month and the day, in some order.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Guaranteed to return a valid standard format across all language-region values supported by Windows.</source>
          <target state="new">Guaranteed to return a valid standard format across all language-region values supported by Windows.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Guaranteed to give you a culturally-appropriate formatted string for the given language-region.</source>
          <target state="new">Guaranteed to give you a culturally-appropriate formatted string for the given language-region.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Not all combinations of constituents are valid.</source>
          <target state="new">Not all combinations of constituents are valid.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>For example, there is no string template for "dayofweek day".</source>
          <target state="new">For example, there is no string template for "dayofweek day".</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>String patterns, such as "{month.full} {day.integer}":</source>
          <target state="new">String patterns, such as "{month.full} {day.integer}":</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Explicitly ordered string that expresses the full month name, followed by a space, followed by the day integer, in that order.</source>
          <target state="new">Explicitly ordered string that expresses the full month name, followed by a space, followed by the day integer, in that order.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>May not correspond to a valid standard format for any language-region pair.</source>
          <target state="new">May not correspond to a valid standard format for any language-region pair.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Not guaranteed to be culturally appropriate.</source>
          <target state="new">Not guaranteed to be culturally appropriate.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Any combination of constituents may be specified, in any order.</source>
          <target state="new">Any combination of constituents may be specified, in any order.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Tasks</source>
          <target state="new">Tasks</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Suppose you wish to display the current month and day together with the current time, in a specific format.</source>
          <target state="new">Suppose you wish to display the current month and day together with the current time, in a specific format.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>For example, you would like US English users to see something like this:</source>
          <target state="new">For example, you would like US English users to see something like this:</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The date part corresponds to the "month day" template, and the time part corresponds to the "hour minute" template.</source>
          <target state="new">The date part corresponds to the "month day" template, and the time part corresponds to the "hour minute" template.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>So, you can create a custom format that concatenates the patterns which make up those templates.</source>
          <target state="new">So, you can create a custom format that concatenates the patterns which make up those templates.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>First, get the formatters for the relevant date and time templates, and then get the patterns of those templates:</source>
          <target state="new">First, get the formatters for the relevant date and time templates, and then get the patterns of those templates:</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>C</source>
          <target state="new">C</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>JavaScript</source>
          <target state="new">JavaScript</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>You should store your custom format as a localizable resource string.</source>
          <target state="new">You should store your custom format as a localizable resource string.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>For example, the string for English (United States) would be "{date} | {time}".</source>
          <target state="new">For example, the string for English (United States) would be "{date} | {time}".</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Localizers can adjust this string as needed.</source>
          <target state="new">Localizers can adjust this string as needed.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>For example, they can change the order of the constituents, if it seems more natural in some language or region to have the time precede the date.</source>
          <target state="new">For example, they can change the order of the constituents, if it seems more natural in some language or region to have the time precede the date.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Or, they can replace "|" with some other separator character.</source>
          <target state="new">Or, they can replace "|" with some other separator character.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>At runtime you replace the {date} and {time} portions of the string with the relevant pattern:</source>
          <target state="new">At runtime you replace the {date} and {time} portions of the string with the relevant pattern:</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>C</source>
          <target state="new">C</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>JavaScript</source>
          <target state="new">JavaScript</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Then you can construct a new formatter based on the custom pattern:</source>
          <target state="new">Then you can construct a new formatter based on the custom pattern:</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>C</source>
          <target state="new">C</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>JavaScript</source>
          <target state="new">JavaScript</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Related topics</source>
          <target state="new">Related topics</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Date and time formatting sample</source>
          <target state="new">Date and time formatting sample</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Windows.Globalization.DateTimeFormatting</source>
          <target state="new">Windows.Globalization.DateTimeFormatting</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Windows.Foundation.DateTime</source>
          <target state="new">Windows.Foundation.DateTime</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>