<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-48076a9" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4df0df529760ff9d203e32a17fa19c190a346bf0</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci2\graphics\key-frame-and-easing-function-animations.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Key-frame animations and easing function animations</source>
          <target state="new">Key-frame animations and easing function animations</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Linear key-frame animations, key-frame animations with a KeySpline value, or easing functions are three different techniques for approximately the same scenario.</source>
          <target state="new">Linear key-frame animations, key-frame animations with a KeySpline value, or easing functions are three different techniques for approximately the same scenario.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Key-frame animations and easing function animations</source>
          <target state="new">Key-frame animations and easing function animations</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>\[ Updated for UWP apps on Windows 10.</source>
          <target state="new">\[ Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Linear key-frame animations, key-frame animations with a <bpt id="p1">**</bpt>KeySpline<ept id="p1">**</ept> value, or easing functions are three different techniques for approximately the same scenario: creating a storyboarded animation that's a bit more complex, and that uses a nonlinear animation behavior from a starting state to an end state.</source>
          <target state="new">Linear key-frame animations, key-frame animations with a <bpt id="p1">**</bpt>KeySpline<ept id="p1">**</ept> value, or easing functions are three different techniques for approximately the same scenario: creating a storyboarded animation that's a bit more complex, and that uses a nonlinear animation behavior from a starting state to an end state.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="new">Prerequisites</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Make sure you've read the <bpt id="p1">[</bpt>Storyboarded animations<ept id="p1">](storyboarded-animations.md)</ept> topic.</source>
          <target state="new">Make sure you've read the <bpt id="p1">[</bpt>Storyboarded animations<ept id="p1">](storyboarded-animations.md)</ept> topic.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This topic builds on the animation concepts that were explained in <bpt id="p1">[</bpt>Storyboarded animations<ept id="p1">](storyboarded-animations.md)</ept> and won't go over them again.</source>
          <target state="new">This topic builds on the animation concepts that were explained in <bpt id="p1">[</bpt>Storyboarded animations<ept id="p1">](storyboarded-animations.md)</ept> and won't go over them again.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For example, <bpt id="p1">[</bpt>Storyboarded animations<ept id="p1">](storyboarded-animations.md)</ept> describes how to target animations, storyboards as resources, the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>Timeline<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/BR210517)</ept> property values such as <bpt id="p4">[</bpt><bpt id="p5">**</bpt>Duration<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.media.animation.timeline.duration)</ept>, <bpt id="p6">[</bpt><bpt id="p7">**</bpt>FillBehavior<ept id="p7">**</ept><ept id="p6">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.media.animation.timeline.fillbehavior)</ept>, and so on.</source>
          <target state="new">For example, <bpt id="p1">[</bpt>Storyboarded animations<ept id="p1">](storyboarded-animations.md)</ept> describes how to target animations, storyboards as resources, the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>Timeline<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/BR210517)</ept> property values such as <bpt id="p4">[</bpt><bpt id="p5">**</bpt>Duration<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.media.animation.timeline.duration)</ept>, <bpt id="p6">[</bpt><bpt id="p7">**</bpt>FillBehavior<ept id="p7">**</ept><ept id="p6">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.media.animation.timeline.fillbehavior)</ept>, and so on.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Animating using key-frame animations</source>
          <target state="new">Animating using key-frame animations</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Key-frame animations permit more than one target value that is reached at a point along the animation timeline.</source>
          <target state="new">Key-frame animations permit more than one target value that is reached at a point along the animation timeline.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>In other words each key frame can specify a different intermediate value, and the last key frame reached is the final animation value.</source>
          <target state="new">In other words each key frame can specify a different intermediate value, and the last key frame reached is the final animation value.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>By specifying multiple values to animate, you can make more complex animations.</source>
          <target state="new">By specifying multiple values to animate, you can make more complex animations.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Key-frame animations also enable different interpolation logic, which are each implemented as a different <bpt id="p1">**</bpt>KeyFrame<ept id="p1">**</ept> subclass per animation type.</source>
          <target state="new">Key-frame animations also enable different interpolation logic, which are each implemented as a different <bpt id="p1">**</bpt>KeyFrame<ept id="p1">**</ept> subclass per animation type.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Specifically, each key-frame animation type has a <bpt id="p1">**</bpt>Discrete<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Linear<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Spline<ept id="p3">**</ept> and <bpt id="p4">**</bpt>Easing<ept id="p4">**</ept> variation of its <bpt id="p5">**</bpt>KeyFrame<ept id="p5">**</ept> class for specifying its key frames.</source>
          <target state="new">Specifically, each key-frame animation type has a <bpt id="p1">**</bpt>Discrete<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Linear<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Spline<ept id="p3">**</ept> and <bpt id="p4">**</bpt>Easing<ept id="p4">**</ept> variation of its <bpt id="p5">**</bpt>KeyFrame<ept id="p5">**</ept> class for specifying its key frames.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For example, to specify an animation that targets a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Double<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/system.double.aspx)</ept> and uses key frames, you could declare key frames with <bpt id="p3">[</bpt><bpt id="p4">**</bpt>DiscreteDoubleKeyFrame<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR243130)</ept>, <bpt id="p5">[</bpt><bpt id="p6">**</bpt>LinearDoubleKeyFrame<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/BR210316)</ept>, <bpt id="p7">[</bpt><bpt id="p8">**</bpt>SplineDoubleKeyFrame<ept id="p8">**</ept><ept id="p7">](https://msdn.microsoft.com/library/windows/apps/BR210446)</ept>, and <bpt id="p9">[</bpt><bpt id="p10">**</bpt>EasingDoubleKeyFrame<ept id="p10">**</ept><ept id="p9">](https://msdn.microsoft.com/library/windows/apps/BR210269)</ept>.</source>
          <target state="new">For example, to specify an animation that targets a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Double<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/system.double.aspx)</ept> and uses key frames, you could declare key frames with <bpt id="p3">[</bpt><bpt id="p4">**</bpt>DiscreteDoubleKeyFrame<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR243130)</ept>, <bpt id="p5">[</bpt><bpt id="p6">**</bpt>LinearDoubleKeyFrame<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/BR210316)</ept>, <bpt id="p7">[</bpt><bpt id="p8">**</bpt>SplineDoubleKeyFrame<ept id="p8">**</ept><ept id="p7">](https://msdn.microsoft.com/library/windows/apps/BR210446)</ept>, and <bpt id="p9">[</bpt><bpt id="p10">**</bpt>EasingDoubleKeyFrame<ept id="p10">**</ept><ept id="p9">](https://msdn.microsoft.com/library/windows/apps/BR210269)</ept>.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You can use any and all of these types within a single <bpt id="p1">**</bpt>KeyFrames<ept id="p1">**</ept> collection, to change the interpolation each time a new key frame is reached.</source>
          <target state="new">You can use any and all of these types within a single <bpt id="p1">**</bpt>KeyFrames<ept id="p1">**</ept> collection, to change the interpolation each time a new key frame is reached.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For interpolation behavior, each key frame controls the interpolation until its <bpt id="p1">**</bpt>KeyTime<ept id="p1">**</ept> time is reached.</source>
          <target state="new">For interpolation behavior, each key frame controls the interpolation until its <bpt id="p1">**</bpt>KeyTime<ept id="p1">**</ept> time is reached.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Its <bpt id="p1">**</bpt>Value<ept id="p1">**</ept> is reached at that time also.</source>
          <target state="new">Its <bpt id="p1">**</bpt>Value<ept id="p1">**</ept> is reached at that time also.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If there are more key frames beyond, the value then becomes the starting value for the next key frame in a sequence.</source>
          <target state="new">If there are more key frames beyond, the value then becomes the starting value for the next key frame in a sequence.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>At the start of the animation, if no key frame with <bpt id="p1">**</bpt>KeyTime<ept id="p1">**</ept> of "0:0:0" exists, the starting value is whatever the non-animated value of the property is.</source>
          <target state="new">At the start of the animation, if no key frame with <bpt id="p1">**</bpt>KeyTime<ept id="p1">**</ept> of "0:0:0" exists, the starting value is whatever the non-animated value of the property is.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This is similar to how a <bpt id="p1">**</bpt>From<ept id="p1">**</ept><ph id="ph1">/</ph><bpt id="p2">**</bpt>To<ept id="p2">**</ept><ph id="ph2">/</ph><bpt id="p3">**</bpt>By<ept id="p3">**</ept> animation acts if there is no <bpt id="p4">**</bpt>From<ept id="p4">**</ept>.</source>
          <target state="new">This is similar to how a <bpt id="p1">**</bpt>From<ept id="p1">**</ept><ph id="ph1">/</ph><bpt id="p2">**</bpt>To<ept id="p2">**</ept><ph id="ph2">/</ph><bpt id="p3">**</bpt>By<ept id="p3">**</ept> animation acts if there is no <bpt id="p4">**</bpt>From<ept id="p4">**</ept>.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The duration of a key-frame animation is implicitly the duration equal to the highest <bpt id="p1">**</bpt>KeyTime<ept id="p1">**</ept> value set in any of its key frames.</source>
          <target state="new">The duration of a key-frame animation is implicitly the duration equal to the highest <bpt id="p1">**</bpt>KeyTime<ept id="p1">**</ept> value set in any of its key frames.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>You can set an explicit <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Duration<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.media.animation.timeline.duration)</ept> if you want, but be careful it's not shorter than a <bpt id="p3">**</bpt>KeyTime<ept id="p3">**</ept> in your own key frames or you'll cut off part of the animation.</source>
          <target state="new">You can set an explicit <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Duration<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.media.animation.timeline.duration)</ept> if you want, but be careful it's not shorter than a <bpt id="p3">**</bpt>KeyTime<ept id="p3">**</ept> in your own key frames or you'll cut off part of the animation.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>In addition to <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Duration<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.media.animation.timeline.duration)</ept>, you can set all the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Timeline<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR210517)</ept> based properties on a key-frame animation, like you can with a <bpt id="p5">**</bpt>From<ept id="p5">**</ept><ph id="ph1">/</ph><bpt id="p6">**</bpt>To<ept id="p6">**</ept><ph id="ph2">/</ph><bpt id="p7">**</bpt>By<ept id="p7">**</ept> animation, because the key-frame animation classes also derive from <bpt id="p8">**</bpt>Timeline<ept id="p8">**</ept>.</source>
          <target state="new">In addition to <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Duration<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.media.animation.timeline.duration)</ept>, you can set all the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Timeline<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR210517)</ept> based properties on a key-frame animation, like you can with a <bpt id="p5">**</bpt>From<ept id="p5">**</ept><ph id="ph1">/</ph><bpt id="p6">**</bpt>To<ept id="p6">**</ept><ph id="ph2">/</ph><bpt id="p7">**</bpt>By<ept id="p7">**</ept> animation, because the key-frame animation classes also derive from <bpt id="p8">**</bpt>Timeline<ept id="p8">**</ept>.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>These are:</source>
          <target state="new">These are:</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>AutoReverse<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.media.animation.timeline.autoreverse)</ept>: once the last key frame is reached, the frames are repeated in reverse order from the end.</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>AutoReverse<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.media.animation.timeline.autoreverse)</ept>: once the last key frame is reached, the frames are repeated in reverse order from the end.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This doubles the apparent duration of the animation.</source>
          <target state="new">This doubles the apparent duration of the animation.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>BeginTime<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.media.animation.timeline.begintime)</ept>: delays the start of the animation.</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>BeginTime<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.media.animation.timeline.begintime)</ept>: delays the start of the animation.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The timeline for the <bpt id="p1">**</bpt>KeyTime<ept id="p1">**</ept> values in the frames doesn't start counting until <bpt id="p2">**</bpt>BeginTime<ept id="p2">**</ept> is reached, so there's no risk of cutting off frames</source>
          <target state="new">The timeline for the <bpt id="p1">**</bpt>KeyTime<ept id="p1">**</ept> values in the frames doesn't start counting until <bpt id="p2">**</bpt>BeginTime<ept id="p2">**</ept> is reached, so there's no risk of cutting off frames</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>FillBehavior<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.media.animation.timeline.fillbehavior)</ept>: controls what happens when the last key frame is reached.</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>FillBehavior<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.media.animation.timeline.fillbehavior)</ept>: controls what happens when the last key frame is reached.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>FillBehavior<ept id="p1">**</ept> has no effect on any intermediate key frames.</source>
          <target state="new"><bpt id="p1">**</bpt>FillBehavior<ept id="p1">**</ept> has no effect on any intermediate key frames.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>RepeatBehavior<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.media.animation.timeline.repeatbehaviorproperty)</ept>:</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>RepeatBehavior<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.media.animation.timeline.repeatbehaviorproperty)</ept>:</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>If set to <bpt id="p1">**</bpt>Forever<ept id="p1">**</ept>, then the key frames and their timeline repeat infinitely.</source>
          <target state="new">If set to <bpt id="p1">**</bpt>Forever<ept id="p1">**</ept>, then the key frames and their timeline repeat infinitely.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>If set to an iteration count, the timeline repeats that many times.</source>
          <target state="new">If set to an iteration count, the timeline repeats that many times.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>If set to a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Duration<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR242377)</ept>, the timeline repeats until that time is reached.</source>
          <target state="new">If set to a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Duration<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR242377)</ept>, the timeline repeats until that time is reached.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This might truncate the animation part way through the key frame sequence, if it's not an integer factor of the timeline's implicit duration.</source>
          <target state="new">This might truncate the animation part way through the key frame sequence, if it's not an integer factor of the timeline's implicit duration.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>SpeedRatio<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.media.animation.timeline.speedratioproperty)</ept> (not commonly used)</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>SpeedRatio<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.media.animation.timeline.speedratioproperty)</ept> (not commonly used)</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Linear key frames</source>
          <target state="new">Linear key frames</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Linear key frames result in a simple linear interpolation of the value until the frame's <bpt id="p1">**</bpt>KeyTime<ept id="p1">**</ept> is reached.</source>
          <target state="new">Linear key frames result in a simple linear interpolation of the value until the frame's <bpt id="p1">**</bpt>KeyTime<ept id="p1">**</ept> is reached.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>This interpolation behavior is the most similar to the simpler <bpt id="p1">**</bpt>From<ept id="p1">**</ept><ph id="ph1">/</ph><bpt id="p2">**</bpt>To<ept id="p2">**</ept><ph id="ph2">/</ph><bpt id="p3">**</bpt>By<ept id="p3">**</ept> animations described in the <bpt id="p4">[</bpt>Storyboarded animations<ept id="p4">](storyboarded-animations.md)</ept> topic.</source>
          <target state="new">This interpolation behavior is the most similar to the simpler <bpt id="p1">**</bpt>From<ept id="p1">**</ept><ph id="ph1">/</ph><bpt id="p2">**</bpt>To<ept id="p2">**</ept><ph id="ph2">/</ph><bpt id="p3">**</bpt>By<ept id="p3">**</ept> animations described in the <bpt id="p4">[</bpt>Storyboarded animations<ept id="p4">](storyboarded-animations.md)</ept> topic.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Here's how to use a key-frame animation to scale the render height of a rectangle, using linear key frames.</source>
          <target state="new">Here's how to use a key-frame animation to scale the render height of a rectangle, using linear key frames.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>This example runs an animation where the height of the rectangle increases slightly and linearly for the first 4 seconds, then scales rapidly for the last second until the rectangle is double the starting height.</source>
          <target state="new">This example runs an animation where the height of the rectangle increases slightly and linearly for the first 4 seconds, then scales rapidly for the last second until the rectangle is double the starting height.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Discrete key frames</source>
          <target state="new">Discrete key frames</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Discrete key frames don't use any interpolation at all.</source>
          <target state="new">Discrete key frames don't use any interpolation at all.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>When a <bpt id="p1">**</bpt>KeyTime<ept id="p1">**</ept> is reached, the new <bpt id="p2">**</bpt>Value<ept id="p2">**</ept> is simply applied.</source>
          <target state="new">When a <bpt id="p1">**</bpt>KeyTime<ept id="p1">**</ept> is reached, the new <bpt id="p2">**</bpt>Value<ept id="p2">**</ept> is simply applied.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Depending on which UI property is being animated, this often produces an animation that appears to "jump".</source>
          <target state="new">Depending on which UI property is being animated, this often produces an animation that appears to "jump".</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Be certain that this is the aesthetic behavior that you really want.</source>
          <target state="new">Be certain that this is the aesthetic behavior that you really want.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>You can minimize the apparent jumps by increasing the number of key frames you declare, but if a smooth animation is your goal, you might be better off using linear or spline key frames instead.</source>
          <target state="new">You can minimize the apparent jumps by increasing the number of key frames you declare, but if a smooth animation is your goal, you might be better off using linear or spline key frames instead.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  Discrete key frames are the only way to animate a value that isn't of type <bpt id="p2">[</bpt><bpt id="p3">**</bpt>Double<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/xaml/system.double.aspx)</ept>, <bpt id="p4">[</bpt><bpt id="p5">**</bpt>Point<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/BR225870)</ept>, and <bpt id="p6">[</bpt><bpt id="p7">**</bpt>Color<ept id="p7">**</ept><ept id="p6">](https://msdn.microsoft.com/library/windows/apps/Hh673723)</ept>, with a <bpt id="p8">[</bpt><bpt id="p9">**</bpt>DiscreteObjectKeyFrame<ept id="p9">**</ept><ept id="p8">](https://msdn.microsoft.com/library/windows/apps/BR243132)</ept>.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  Discrete key frames are the only way to animate a value that isn't of type <bpt id="p2">[</bpt><bpt id="p3">**</bpt>Double<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/xaml/system.double.aspx)</ept>, <bpt id="p4">[</bpt><bpt id="p5">**</bpt>Point<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/BR225870)</ept>, and <bpt id="p6">[</bpt><bpt id="p7">**</bpt>Color<ept id="p7">**</ept><ept id="p6">](https://msdn.microsoft.com/library/windows/apps/Hh673723)</ept>, with a <bpt id="p8">[</bpt><bpt id="p9">**</bpt>DiscreteObjectKeyFrame<ept id="p9">**</ept><ept id="p8">](https://msdn.microsoft.com/library/windows/apps/BR243132)</ept>.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>We'll discuss this in more detail later in this topic.</source>
          <target state="new">We'll discuss this in more detail later in this topic.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Spline key frames</source>
          <target state="new">Spline key frames</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>A spline key frame create a variable transition between values according to the value of the <bpt id="p1">**</bpt>KeySpline<ept id="p1">**</ept> property.</source>
          <target state="new">A spline key frame create a variable transition between values according to the value of the <bpt id="p1">**</bpt>KeySpline<ept id="p1">**</ept> property.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>This property specifies the first and second control points of a Bezier curve, which describes the acceleration of the animation.</source>
          <target state="new">This property specifies the first and second control points of a Bezier curve, which describes the acceleration of the animation.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Basically a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>KeySpline<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR210307)</ept> defines a function over time relationship where the function-time graph is the shape of that Bezier curve.</source>
          <target state="new">Basically a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>KeySpline<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR210307)</ept> defines a function over time relationship where the function-time graph is the shape of that Bezier curve.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Typically you specify a <bpt id="p1">**</bpt>KeySpline<ept id="p1">**</ept> value in a XAML shorthand attribute string that has four <bpt id="p2">[</bpt><bpt id="p3">**</bpt>Double<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/xaml/system.double.aspx)</ept> values separated by spaces or commas.</source>
          <target state="new">Typically you specify a <bpt id="p1">**</bpt>KeySpline<ept id="p1">**</ept> value in a XAML shorthand attribute string that has four <bpt id="p2">[</bpt><bpt id="p3">**</bpt>Double<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/xaml/system.double.aspx)</ept> values separated by spaces or commas.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>These values are "X,Y" pairs for two control points of the Bezier curve.</source>
          <target state="new">These values are "X,Y" pairs for two control points of the Bezier curve.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>"X" is time and "Y" is the function modifier to the value.</source>
          <target state="new">"X" is time and "Y" is the function modifier to the value.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Each value should always be between 0 and 1 inclusive.</source>
          <target state="new">Each value should always be between 0 and 1 inclusive.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Without control point modification to a <bpt id="p1">**</bpt>KeySpline<ept id="p1">**</ept>, the straight line from 0,0 to 1,1 is the representation of a function over time for a linear interpolation.</source>
          <target state="new">Without control point modification to a <bpt id="p1">**</bpt>KeySpline<ept id="p1">**</ept>, the straight line from 0,0 to 1,1 is the representation of a function over time for a linear interpolation.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Your control points change the shape of that curve and thus the behavior of the function over time for the spline animation.</source>
          <target state="new">Your control points change the shape of that curve and thus the behavior of the function over time for the spline animation.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>It's probably best to see this visually as a graph.</source>
          <target state="new">It's probably best to see this visually as a graph.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>You can run the <bpt id="p1">[</bpt>Silverlight key-spline visualizer sample<ept id="p1">](http://samples.msdn.microsoft.com/Silverlight/SampleBrowser/index.htm#/?sref=KeySplineExample)</ept> in a browser to see how the control points modify the curve and how a sample animation runs when using it as a <bpt id="p2">**</bpt>KeySpline<ept id="p2">**</ept> value.</source>
          <target state="new">You can run the <bpt id="p1">[</bpt>Silverlight key-spline visualizer sample<ept id="p1">](http://samples.msdn.microsoft.com/Silverlight/SampleBrowser/index.htm#/?sref=KeySplineExample)</ept> in a browser to see how the control points modify the curve and how a sample animation runs when using it as a <bpt id="p2">**</bpt>KeySpline<ept id="p2">**</ept> value.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>This next example shows three different key frames applied to an animation, with the last one being a key spline animation for a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Double<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/system.double.aspx)</ept> value (<bpt id="p3">[</bpt><bpt id="p4">**</bpt>SplineDoubleKeyFrame<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR210446)</ept>).</source>
          <target state="new">This next example shows three different key frames applied to an animation, with the last one being a key spline animation for a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Double<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/system.double.aspx)</ept> value (<bpt id="p3">[</bpt><bpt id="p4">**</bpt>SplineDoubleKeyFrame<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR210446)</ept>).</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Note the string "0.6,0.0 0.9,0.00" applied for <bpt id="p1">**</bpt>KeySpline<ept id="p1">**</ept>.</source>
          <target state="new">Note the string "0.6,0.0 0.9,0.00" applied for <bpt id="p1">**</bpt>KeySpline<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>This produces a curve where the animation appears to run slowly at first but then rapidly reaches the value just before the <bpt id="p1">**</bpt>KeyTime<ept id="p1">**</ept> is reached.</source>
          <target state="new">This produces a curve where the animation appears to run slowly at first but then rapidly reaches the value just before the <bpt id="p1">**</bpt>KeyTime<ept id="p1">**</ept> is reached.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>This is just one easing function example.</source>
          <target state="new">This is just one easing function example.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>We'll cover more in the next section.</source>
          <target state="new">We'll cover more in the next section.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Easing functions</source>
          <target state="new">Easing functions</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Easing functions allow you to apply custom mathematical formulas to your animations.</source>
          <target state="new">Easing functions allow you to apply custom mathematical formulas to your animations.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Mathematical operations are often useful to produce animations that simulate real-world physics in a 2-D coordinate system.</source>
          <target state="new">Mathematical operations are often useful to produce animations that simulate real-world physics in a 2-D coordinate system.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>For example, you may want an object to realistically bounce or behave as though it were on a spring.</source>
          <target state="new">For example, you may want an object to realistically bounce or behave as though it were on a spring.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>You could use key frame or even <bpt id="p1">**</bpt>From<ept id="p1">**</ept><ph id="ph1">/</ph><bpt id="p2">**</bpt>To<ept id="p2">**</ept><ph id="ph2">/</ph><bpt id="p3">**</bpt>By<ept id="p3">**</ept> animations to approximate these effects but it would take a significant amount of work and the animation would be less accurate than using a mathematical formula.</source>
          <target state="new">You could use key frame or even <bpt id="p1">**</bpt>From<ept id="p1">**</ept><ph id="ph1">/</ph><bpt id="p2">**</bpt>To<ept id="p2">**</ept><ph id="ph2">/</ph><bpt id="p3">**</bpt>By<ept id="p3">**</ept> animations to approximate these effects but it would take a significant amount of work and the animation would be less accurate than using a mathematical formula.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Easing functions can be applied to animations in three ways:</source>
          <target state="new">Easing functions can be applied to animations in three ways:</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>By using an easing keyframe in a keyframe animation, as described in the previous section.</source>
          <target state="new">By using an easing keyframe in a keyframe animation, as described in the previous section.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Use <bpt id="p1">[</bpt><bpt id="p2">**</bpt>EasingColorKeyFrame.EasingFunction<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR210267)</ept>, <bpt id="p3">[</bpt><bpt id="p4">**</bpt>EasingDoubleKeyFrame.EasingFunction<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.media.animation.easingdoublekeyframe.easingfunction.aspx)</ept>, or <bpt id="p5">[</bpt><bpt id="p6">**</bpt>EasingPointKeyFrame.EasingFunction<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/BR210279)</ept>.</source>
          <target state="new">Use <bpt id="p1">[</bpt><bpt id="p2">**</bpt>EasingColorKeyFrame.EasingFunction<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR210267)</ept>, <bpt id="p3">[</bpt><bpt id="p4">**</bpt>EasingDoubleKeyFrame.EasingFunction<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.media.animation.easingdoublekeyframe.easingfunction.aspx)</ept>, or <bpt id="p5">[</bpt><bpt id="p6">**</bpt>EasingPointKeyFrame.EasingFunction<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/BR210279)</ept>.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>By setting the <bpt id="p1">**</bpt>EasingFunction<ept id="p1">**</ept> property on one of the <bpt id="p2">**</bpt>From<ept id="p2">**</ept><ph id="ph1">/</ph><bpt id="p3">**</bpt>To<ept id="p3">**</ept><ph id="ph2">/</ph><bpt id="p4">**</bpt>By<ept id="p4">**</ept> animation types.</source>
          <target state="new">By setting the <bpt id="p1">**</bpt>EasingFunction<ept id="p1">**</ept> property on one of the <bpt id="p2">**</bpt>From<ept id="p2">**</ept><ph id="ph1">/</ph><bpt id="p3">**</bpt>To<ept id="p3">**</ept><ph id="ph2">/</ph><bpt id="p4">**</bpt>By<ept id="p4">**</ept> animation types.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Use <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ColorAnimation.EasingFunction<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243075)</ept>, <bpt id="p3">[</bpt><bpt id="p4">**</bpt>DoubleAnimation.EasingFunction<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.media.animation.doubleanimation.easingfunction.aspx)</ept> or <bpt id="p5">[</bpt><bpt id="p6">**</bpt>PointAnimation.EasingFunction<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/BR210354)</ept>.</source>
          <target state="new">Use <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ColorAnimation.EasingFunction<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243075)</ept>, <bpt id="p3">[</bpt><bpt id="p4">**</bpt>DoubleAnimation.EasingFunction<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.media.animation.doubleanimation.easingfunction.aspx)</ept> or <bpt id="p5">[</bpt><bpt id="p6">**</bpt>PointAnimation.EasingFunction<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/BR210354)</ept>.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>By setting <bpt id="p1">[</bpt><bpt id="p2">**</bpt>GeneratedEasingFunction<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209037)</ept> as part of a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>VisualTransition<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR209034)</ept>.</source>
          <target state="new">By setting <bpt id="p1">[</bpt><bpt id="p2">**</bpt>GeneratedEasingFunction<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209037)</ept> as part of a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>VisualTransition<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR209034)</ept>.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>This is specific to defining visual states for controls; for more info, see <bpt id="p1">[</bpt><bpt id="p2">**</bpt>GeneratedEasingFunction<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209037)</ept> or <bpt id="p3">[</bpt>Storyboards for visual states<ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/JJ819808)</ept>.</source>
          <target state="new">This is specific to defining visual states for controls; for more info, see <bpt id="p1">[</bpt><bpt id="p2">**</bpt>GeneratedEasingFunction<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR209037)</ept> or <bpt id="p3">[</bpt>Storyboards for visual states<ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/JJ819808)</ept>.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Here is a list of the easing functions:</source>
          <target state="new">Here is a list of the easing functions:</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>BackEase<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243049)</ept>: Retracts the motion of an animation slightly before it begins to animate in the path indicated.</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>BackEase<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243049)</ept>: Retracts the motion of an animation slightly before it begins to animate in the path indicated.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>BounceEase<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243057)</ept>: Creates a bouncing effect.</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>BounceEase<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243057)</ept>: Creates a bouncing effect.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>CircleEase<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243063)</ept>: Creates an animation that accelerates or decelerates using a circular function.</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>CircleEase<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243063)</ept>: Creates an animation that accelerates or decelerates using a circular function.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>CubicEase<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243126)</ept>: Creates an animation that accelerates or decelerates using the formula f(t) = t3.</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>CubicEase<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243126)</ept>: Creates an animation that accelerates or decelerates using the formula f(t) = t3.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>ElasticEase<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR210282)</ept>: Creates an animation that resembles a spring oscillating back and forth until it comes to rest.</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>ElasticEase<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR210282)</ept>: Creates an animation that resembles a spring oscillating back and forth until it comes to rest.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>ExponentialEase<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR210294)</ept>: Creates an animation that accelerates or decelerates using an exponential formula.</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>ExponentialEase<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR210294)</ept>: Creates an animation that accelerates or decelerates using an exponential formula.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>PowerEase<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR210399)</ept>: Creates an animation that accelerates or decelerates using the formula f(t) = tp where p is equal to the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Power<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.media.animation.powerease.power)</ept> property.</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>PowerEase<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR210399)</ept>: Creates an animation that accelerates or decelerates using the formula f(t) = tp where p is equal to the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Power<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.media.animation.powerease.power)</ept> property.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>QuadraticEase<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR210403)</ept>: Creates an animation that accelerates or decelerates using the formula f(t) = t2.</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>QuadraticEase<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR210403)</ept>: Creates an animation that accelerates or decelerates using the formula f(t) = t2.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>QuarticEase<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR210405)</ept>: Creates an animation that accelerates or decelerates using the formula f(t) = t4.</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>QuarticEase<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR210405)</ept>: Creates an animation that accelerates or decelerates using the formula f(t) = t4.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>QuinticEase<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR210407)</ept>: Create an animation that accelerates or decelerates using the formula f(t) = t5.</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>QuinticEase<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR210407)</ept>: Create an animation that accelerates or decelerates using the formula f(t) = t5.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>SineEase<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR210439)</ept>: Creates an animation that accelerates or decelerates using a sine formula.</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>SineEase<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR210439)</ept>: Creates an animation that accelerates or decelerates using a sine formula.</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Some of the easing functions have their own properties.</source>
          <target state="new">Some of the easing functions have their own properties.</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>For example, <bpt id="p1">[</bpt><bpt id="p2">**</bpt>BounceEase<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243057)</ept> has two properties <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Bounces<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.media.animation.bounceease.bounces.aspx)</ept> and <bpt id="p5">[</bpt><bpt id="p6">**</bpt>Bounciness<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.media.animation.bounceease.bounciness.aspx)</ept> that modify the function-over-time behavior of that particular <bpt id="p7">**</bpt>BounceEase<ept id="p7">**</ept>.</source>
          <target state="new">For example, <bpt id="p1">[</bpt><bpt id="p2">**</bpt>BounceEase<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243057)</ept> has two properties <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Bounces<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.media.animation.bounceease.bounces.aspx)</ept> and <bpt id="p5">[</bpt><bpt id="p6">**</bpt>Bounciness<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.ui.xaml.media.animation.bounceease.bounciness.aspx)</ept> that modify the function-over-time behavior of that particular <bpt id="p7">**</bpt>BounceEase<ept id="p7">**</ept>.</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Other easing functions such as <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CubicEase<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243126)</ept> don't have properties other than the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>EasingMode<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR210275)</ept> property that all easing functions share, and always produce the same function-over-time behavior.</source>
          <target state="new">Other easing functions such as <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CubicEase<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243126)</ept> don't have properties other than the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>EasingMode<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR210275)</ept> property that all easing functions share, and always produce the same function-over-time behavior.</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Some of these easing functions have a bit of overlap, depending on how you set properties on the easing functions that have properties.</source>
          <target state="new">Some of these easing functions have a bit of overlap, depending on how you set properties on the easing functions that have properties.</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>For example, <bpt id="p1">[</bpt><bpt id="p2">**</bpt>QuadraticEase<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR210403)</ept> is exactly the same as a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>PowerEase<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR210399)</ept> with <bpt id="p5">[</bpt><bpt id="p6">**</bpt>Power<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.media.animation.powerease.power)</ept> equal to 2.</source>
          <target state="new">For example, <bpt id="p1">[</bpt><bpt id="p2">**</bpt>QuadraticEase<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR210403)</ept> is exactly the same as a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>PowerEase<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR210399)</ept> with <bpt id="p5">[</bpt><bpt id="p6">**</bpt>Power<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.media.animation.powerease.power)</ept> equal to 2.</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>And <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CircleEase<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243063)</ept> is basically a default-value <bpt id="p3">[</bpt><bpt id="p4">**</bpt>ExponentialEase<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR210294)</ept>.</source>
          <target state="new">And <bpt id="p1">[</bpt><bpt id="p2">**</bpt>CircleEase<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243063)</ept> is basically a default-value <bpt id="p3">[</bpt><bpt id="p4">**</bpt>ExponentialEase<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR210294)</ept>.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>BackEase<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243049)</ept> easing function is unique because it can change the value outside of the normal range as set by <bpt id="p3">**</bpt>From<ept id="p3">**</ept><ph id="ph1">/</ph><bpt id="p4">**</bpt>To<ept id="p4">**</ept> or values of key frames.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>BackEase<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243049)</ept> easing function is unique because it can change the value outside of the normal range as set by <bpt id="p3">**</bpt>From<ept id="p3">**</ept><ph id="ph1">/</ph><bpt id="p4">**</bpt>To<ept id="p4">**</ept> or values of key frames.</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>It starts the animation by changing the value in the opposite direction as would be expected from a normal <bpt id="p1">**</bpt>From<ept id="p1">**</ept><ph id="ph1">/</ph><bpt id="p2">**</bpt>To<ept id="p2">**</ept> behavior, goes back to the <bpt id="p3">**</bpt>From<ept id="p3">**</ept> or starting value again, and then runs the animation as normal.</source>
          <target state="new">It starts the animation by changing the value in the opposite direction as would be expected from a normal <bpt id="p1">**</bpt>From<ept id="p1">**</ept><ph id="ph1">/</ph><bpt id="p2">**</bpt>To<ept id="p2">**</ept> behavior, goes back to the <bpt id="p3">**</bpt>From<ept id="p3">**</ept> or starting value again, and then runs the animation as normal.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>In an earlier example, we showed how to declare an easing function for a key-frame animation.</source>
          <target state="new">In an earlier example, we showed how to declare an easing function for a key-frame animation.</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>This next sample applies an easing function to a <bpt id="p1">**</bpt>From<ept id="p1">**</ept><ph id="ph1">/</ph><bpt id="p2">**</bpt>To<ept id="p2">**</ept><ph id="ph2">/</ph><bpt id="p3">**</bpt>By<ept id="p3">**</ept> animation.</source>
          <target state="new">This next sample applies an easing function to a <bpt id="p1">**</bpt>From<ept id="p1">**</ept><ph id="ph1">/</ph><bpt id="p2">**</bpt>To<ept id="p2">**</ept><ph id="ph2">/</ph><bpt id="p3">**</bpt>By<ept id="p3">**</ept> animation.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>When an easing function is applied to a <bpt id="p1">**</bpt>From<ept id="p1">**</ept><ph id="ph1">/</ph><bpt id="p2">**</bpt>To<ept id="p2">**</ept><ph id="ph2">/</ph><bpt id="p3">**</bpt>By<ept id="p3">**</ept> animation, it's changing the function- over-time characteristics of how the value interpolates between the <bpt id="p4">**</bpt>From<ept id="p4">**</ept> and <bpt id="p5">**</bpt>To<ept id="p5">**</ept> values over the <bpt id="p6">[</bpt><bpt id="p7">**</bpt>Duration<ept id="p7">**</ept><ept id="p6">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.media.animation.timeline.duration)</ept> of the animation.</source>
          <target state="new">When an easing function is applied to a <bpt id="p1">**</bpt>From<ept id="p1">**</ept><ph id="ph1">/</ph><bpt id="p2">**</bpt>To<ept id="p2">**</ept><ph id="ph2">/</ph><bpt id="p3">**</bpt>By<ept id="p3">**</ept> animation, it's changing the function- over-time characteristics of how the value interpolates between the <bpt id="p4">**</bpt>From<ept id="p4">**</ept> and <bpt id="p5">**</bpt>To<ept id="p5">**</ept> values over the <bpt id="p6">[</bpt><bpt id="p7">**</bpt>Duration<ept id="p7">**</ept><ept id="p6">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.media.animation.timeline.duration)</ept> of the animation.</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Without an easing function, that would be a linear interpolation.</source>
          <target state="new">Without an easing function, that would be a linear interpolation.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Discrete object value animations</source>
          <target state="new">Discrete object value animations</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>One type of animation deserves special mention because it's the only way you can apply an animated value to properties that aren't of type <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Double<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/system.double.aspx)</ept>, <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Point<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR225870)</ept>, or <bpt id="p5">[</bpt><bpt id="p6">**</bpt>Color<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/Hh673723)</ept>.</source>
          <target state="new">One type of animation deserves special mention because it's the only way you can apply an animated value to properties that aren't of type <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Double<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/system.double.aspx)</ept>, <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Point<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR225870)</ept>, or <bpt id="p5">[</bpt><bpt id="p6">**</bpt>Color<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/Hh673723)</ept>.</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>This is the key-frame animation <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ObjectAnimationUsingKeyFrames<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR210320)</ept>.</source>
          <target state="new">This is the key-frame animation <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ObjectAnimationUsingKeyFrames<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR210320)</ept>.</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Animating using <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Object<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/system.object.aspx)</ept> values is different because there's no possibility of interpolating the values between the frames.</source>
          <target state="new">Animating using <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Object<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/system.object.aspx)</ept> values is different because there's no possibility of interpolating the values between the frames.</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>When the frame's <bpt id="p1">[</bpt><bpt id="p2">**</bpt>KeyTime<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR210342)</ept> is reached, the animated value is immediately set to the value specified in the key frame's <bpt id="p3">**</bpt>Value<ept id="p3">**</ept>.</source>
          <target state="new">When the frame's <bpt id="p1">[</bpt><bpt id="p2">**</bpt>KeyTime<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR210342)</ept> is reached, the animated value is immediately set to the value specified in the key frame's <bpt id="p3">**</bpt>Value<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Because there's no interpolation, there's only one key frame you use in the <bpt id="p1">**</bpt>ObjectAnimationUsingKeyFrames<ept id="p1">**</ept> key frames collection: <bpt id="p2">[</bpt><bpt id="p3">**</bpt>DiscreteObjectKeyFrame<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/BR243132)</ept>.</source>
          <target state="new">Because there's no interpolation, there's only one key frame you use in the <bpt id="p1">**</bpt>ObjectAnimationUsingKeyFrames<ept id="p1">**</ept> key frames collection: <bpt id="p2">[</bpt><bpt id="p3">**</bpt>DiscreteObjectKeyFrame<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/BR243132)</ept>.</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Value<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR210344)</ept> of a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>DiscreteObjectKeyFrame<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR243132)</ept> is often set using property element syntax, because the object value you are trying to set often is not expressible as a string to fill <bpt id="p5">**</bpt>Value<ept id="p5">**</ept> in attribute syntax.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Value<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR210344)</ept> of a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>DiscreteObjectKeyFrame<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR243132)</ept> is often set using property element syntax, because the object value you are trying to set often is not expressible as a string to fill <bpt id="p5">**</bpt>Value<ept id="p5">**</ept> in attribute syntax.</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>You can still use attribute syntax if you use a reference such as <bpt id="p1">[</bpt>StaticResource<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Mt185588)</ept>.</source>
          <target state="new">You can still use attribute syntax if you use a reference such as <bpt id="p1">[</bpt>StaticResource<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Mt185588)</ept>.</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>One place you'll see an <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ObjectAnimationUsingKeyFrames<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR210320)</ept> used in the default templates is when a template property references a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Brush<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR228076)</ept> resource.</source>
          <target state="new">One place you'll see an <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ObjectAnimationUsingKeyFrames<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR210320)</ept> used in the default templates is when a template property references a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Brush<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR228076)</ept> resource.</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>These resources are <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SolidColorBrush<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR242962)</ept> objects, not just a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Color<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/Hh673723)</ept> value, and they use resources that are defined as system themes (<bpt id="p5">[</bpt><bpt id="p6">**</bpt>ThemeDictionaries<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/BR208807)</ept>).</source>
          <target state="new">These resources are <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SolidColorBrush<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR242962)</ept> objects, not just a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Color<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/Hh673723)</ept> value, and they use resources that are defined as system themes (<bpt id="p5">[</bpt><bpt id="p6">**</bpt>ThemeDictionaries<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/BR208807)</ept>).</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>They can be assigned directly to a <bpt id="p1">**</bpt>Brush<ept id="p1">**</ept>-type value such as <bpt id="p2">[</bpt><bpt id="p3">**</bpt>TextBlock.Foreground<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/BR209665)</ept> and don't need to use indirect targeting.</source>
          <target state="new">They can be assigned directly to a <bpt id="p1">**</bpt>Brush<ept id="p1">**</ept>-type value such as <bpt id="p2">[</bpt><bpt id="p3">**</bpt>TextBlock.Foreground<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/BR209665)</ept> and don't need to use indirect targeting.</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>But because a <bpt id="p1">**</bpt>SolidColorBrush<ept id="p1">**</ept> is not <bpt id="p2">[</bpt><bpt id="p3">**</bpt>Double<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/xaml/system.double.aspx)</ept>, <bpt id="p4">[</bpt><bpt id="p5">**</bpt>Point<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/BR225870)</ept>, or <bpt id="p6">**</bpt>Color<ept id="p6">**</ept>, you have to use a <bpt id="p7">**</bpt>ObjectAnimationUsingKeyFrames<ept id="p7">**</ept> to use the resource.</source>
          <target state="new">But because a <bpt id="p1">**</bpt>SolidColorBrush<ept id="p1">**</ept> is not <bpt id="p2">[</bpt><bpt id="p3">**</bpt>Double<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/xaml/system.double.aspx)</ept>, <bpt id="p4">[</bpt><bpt id="p5">**</bpt>Point<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/BR225870)</ept>, or <bpt id="p6">**</bpt>Color<ept id="p6">**</ept>, you have to use a <bpt id="p7">**</bpt>ObjectAnimationUsingKeyFrames<ept id="p7">**</ept> to use the resource.</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>You can use more than one <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DiscreteObjectKeyFrame<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243132)</ept> for an <bpt id="p3">[</bpt><bpt id="p4">**</bpt>ObjectAnimationUsingKeyFrames<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR210320)</ept> frame set.</source>
          <target state="new">You can use more than one <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DiscreteObjectKeyFrame<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR243132)</ept> for an <bpt id="p3">[</bpt><bpt id="p4">**</bpt>ObjectAnimationUsingKeyFrames<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR210320)</ept> frame set.</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>This might be an interesting way to create a "slide show" animation by animating the value of <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Image.Source<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR242760)</ept>, as an example scenario for where multiple object values might be useful.</source>
          <target state="new">This might be an interesting way to create a "slide show" animation by animating the value of <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Image.Source<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR242760)</ept>, as an example scenario for where multiple object values might be useful.</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Related topics</source>
          <target state="new">Related topics</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Property-path syntax</source>
          <target state="new">Property-path syntax</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Dependency properties overview</source>
          <target state="new">Dependency properties overview</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Storyboard</source>
          <target state="new">Storyboard</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Storyboard.TargetProperty</source>
          <target state="new">Storyboard.TargetProperty</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>