<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-48076a9" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1982b48014dc58d14ccc4deca9abc3531db9cb14</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci2\controls-and-patterns\images-imagebrushes.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Learn how to integrate images into your app, including how to use the APIs of the two main XAML classes, Image and ImageBrush.</source>
          <target state="new">Learn how to integrate images into your app, including how to use the APIs of the two main XAML classes, Image and ImageBrush.</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Images and image brushes</source>
          <target state="new">Images and image brushes</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Images and image brushes</source>
          <target state="new">Images and image brushes</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>To display an image, you can use either the <bpt id="p1">**</bpt>Image<ept id="p1">**</ept> object or the <bpt id="p2">**</bpt>ImageBrush<ept id="p2">**</ept> object.</source>
          <target state="new">To display an image, you can use either the <bpt id="p1">**</bpt>Image<ept id="p1">**</ept> object or the <bpt id="p2">**</bpt>ImageBrush<ept id="p2">**</ept> object.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>An Image object renders an image, and an ImageBrush object paints another object with an image.</source>
          <target state="new">An Image object renders an image, and an ImageBrush object paints another object with an image.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Important APIs</source>
          <target state="new">Important APIs</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Image class</source>
          <target state="new">Image class</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Source property</source>
          <target state="new">Source property</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>ImageBrush class</source>
          <target state="new">ImageBrush class</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>ImageSource property</source>
          <target state="new">ImageSource property</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Are these the right elements?</source>
          <target state="new">Are these the right elements?</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Use an <bpt id="p1">**</bpt>Image<ept id="p1">**</ept> element to display a stand-alone image in your app.</source>
          <target state="new">Use an <bpt id="p1">**</bpt>Image<ept id="p1">**</ept> element to display a stand-alone image in your app.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Use an <bpt id="p1">**</bpt>ImageBrush<ept id="p1">**</ept> to apply an image to another object.</source>
          <target state="new">Use an <bpt id="p1">**</bpt>ImageBrush<ept id="p1">**</ept> to apply an image to another object.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Uses for an ImageBrush include decorative effects for text, or tiled backgrounds for controls or layout containers.</source>
          <target state="new">Uses for an ImageBrush include decorative effects for text, or tiled backgrounds for controls or layout containers.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>You can control how the image is stretched, aligned, and tiled, enabling you to produce patterns and other effects.</source>
          <target state="new">You can control how the image is stretched, aligned, and tiled, enabling you to produce patterns and other effects.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="new">Examples</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Create an image</source>
          <target state="new">Create an image</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Image</source>
          <target state="new">Image</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This example shows how to create an image by using the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Image<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.image.aspx)</ept> object.</source>
          <target state="new">This example shows how to create an image by using the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Image<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.image.aspx)</ept> object.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Here's the rendered Image object.</source>
          <target state="new">Here's the rendered Image object.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Example of an image element</source>
          <target state="new">Example of an image element</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>In this example, the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Source<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.image.source.aspx)</ept> property specifies the location of the image that you want to display.</source>
          <target state="new">In this example, the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Source<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.image.source.aspx)</ept> property specifies the location of the image that you want to display.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You can set the Source by specifying an absolute URL (for example, http://contoso.com/myPicture.jpg) or by specifying a URL that is relative to your app packaging structure.</source>
          <target state="new">You can set the Source by specifying an absolute URL (for example, http://contoso.com/myPicture.jpg) or by specifying a URL that is relative to your app packaging structure.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For our example, we put the "licorice.jpg" image file in the root folder of our project and declare project settings that include the image file as content.</source>
          <target state="new">For our example, we put the "licorice.jpg" image file in the root folder of our project and declare project settings that include the image file as content.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>ImageBrush</source>
          <target state="new">ImageBrush</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>With the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ImageBrush<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.media.imagebrush.aspx)</ept> object, you can use an image to paint an area that takes a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Brush<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.media.brush.aspx)</ept> object.</source>
          <target state="new">With the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ImageBrush<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.media.imagebrush.aspx)</ept> object, you can use an image to paint an area that takes a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Brush<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.media.brush.aspx)</ept> object.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For example, you can use an ImageBrush for the value of the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Fill<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.shapes.shape.fill.aspx)</ept> property of an <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Ellipse<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.shapes.ellipse.aspx)</ept> or the <bpt id="p5">[</bpt><bpt id="p6">**</bpt>Background<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.control.background.aspx)</ept> property of a <bpt id="p7">[</bpt><bpt id="p8">**</bpt>Canvas<ept id="p8">**</ept><ept id="p7">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.canvas.aspx)</ept>.</source>
          <target state="new">For example, you can use an ImageBrush for the value of the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Fill<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.shapes.shape.fill.aspx)</ept> property of an <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Ellipse<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.shapes.ellipse.aspx)</ept> or the <bpt id="p5">[</bpt><bpt id="p6">**</bpt>Background<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.control.background.aspx)</ept> property of a <bpt id="p7">[</bpt><bpt id="p8">**</bpt>Canvas<ept id="p8">**</ept><ept id="p7">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.canvas.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The next example shows how to use an ImageBrush to paint an Ellipse.</source>
          <target state="new">The next example shows how to use an ImageBrush to paint an Ellipse.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Here's the Ellipse painted by the ImageBrush.</source>
          <target state="new">Here's the Ellipse painted by the ImageBrush.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>An Ellipse painted by an ImageBrush.</source>
          <target state="new">An Ellipse painted by an ImageBrush.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Stretch an image</source>
          <target state="new">Stretch an image</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>If you don't set the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Width<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.frameworkelement.width.aspx)</ept> or <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Height<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.frameworkelement.height.aspx)</ept> values of an <bpt id="p5">**</bpt>Image<ept id="p5">**</ept>, it is displayed with the dimensions of the image specified by the <bpt id="p6">**</bpt>Source<ept id="p6">**</ept>.</source>
          <target state="new">If you don't set the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Width<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.frameworkelement.width.aspx)</ept> or <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Height<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.frameworkelement.height.aspx)</ept> values of an <bpt id="p5">**</bpt>Image<ept id="p5">**</ept>, it is displayed with the dimensions of the image specified by the <bpt id="p6">**</bpt>Source<ept id="p6">**</ept>.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Setting the <bpt id="p1">**</bpt>Width<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Height<ept id="p2">**</ept> creates a containing rectangular area in which the image is displayed.</source>
          <target state="new">Setting the <bpt id="p1">**</bpt>Width<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Height<ept id="p2">**</ept> creates a containing rectangular area in which the image is displayed.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>You can specify how the image fills this containing area by using the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Stretch<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.image.stretch.aspx)</ept> property.</source>
          <target state="new">You can specify how the image fills this containing area by using the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Stretch<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.image.stretch.aspx)</ept> property.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The Stretch property accepts these values, which the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Stretch<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.media.stretch.aspx)</ept> enumeration defines:</source>
          <target state="new">The Stretch property accepts these values, which the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Stretch<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.media.stretch.aspx)</ept> enumeration defines:</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>None<ept id="p1">**</ept>: The image doesn't stretch to fill the output dimensions.</source>
          <target state="new"><bpt id="p1">**</bpt>None<ept id="p1">**</ept>: The image doesn't stretch to fill the output dimensions.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Be careful with this Stretch setting: if the source image is larger than the containing area, your image will be clipped, and this usually isn't desirable because you don't have any control over the viewport like you do with a deliberate <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Clip<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.uielement.clip.aspx)</ept>.</source>
          <target state="new">Be careful with this Stretch setting: if the source image is larger than the containing area, your image will be clipped, and this usually isn't desirable because you don't have any control over the viewport like you do with a deliberate <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Clip<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.uielement.clip.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Uniform<ept id="p1">**</ept>: The image is scaled to fit the output dimensions.</source>
          <target state="new"><bpt id="p1">**</bpt>Uniform<ept id="p1">**</ept>: The image is scaled to fit the output dimensions.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>But the aspect ratio of the content is preserved.</source>
          <target state="new">But the aspect ratio of the content is preserved.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This is the default value.</source>
          <target state="new">This is the default value.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>UniformToFill<ept id="p1">**</ept>: The image is scaled so that it completely fills the output area but preserves its original aspect ratio.</source>
          <target state="new"><bpt id="p1">**</bpt>UniformToFill<ept id="p1">**</ept>: The image is scaled so that it completely fills the output area but preserves its original aspect ratio.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Fill<ept id="p1">**</ept>: The image is scaled to fit the output dimensions.</source>
          <target state="new"><bpt id="p1">**</bpt>Fill<ept id="p1">**</ept>: The image is scaled to fit the output dimensions.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Because the content's height and width are scaled independently, the original aspect ratio of the image might not be preserved.</source>
          <target state="new">Because the content's height and width are scaled independently, the original aspect ratio of the image might not be preserved.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>That is, the image might be distorted to completely fill the output area.</source>
          <target state="new">That is, the image might be distorted to completely fill the output area.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>An example of stretch settings.</source>
          <target state="new">An example of stretch settings.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Crop an image</source>
          <target state="new">Crop an image</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Clip<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.uielement.clip.aspx)</ept> property to clip an area from the image output.</source>
          <target state="new">You can use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Clip<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.uielement.clip.aspx)</ept> property to clip an area from the image output.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>You set the Clip property to a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Geometry<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.media.geometry.aspx)</ept>.</source>
          <target state="new">You set the Clip property to a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Geometry<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.media.geometry.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Currently, non-rectangular clipping is not supported.</source>
          <target state="new">Currently, non-rectangular clipping is not supported.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The next example shows how to use a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>RectangleGeometry<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.media.rectanglegeometry.aspx)</ept> as the clip region for an image.</source>
          <target state="new">The next example shows how to use a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>RectangleGeometry<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.media.rectanglegeometry.aspx)</ept> as the clip region for an image.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>In this example, we define an <bpt id="p1">**</bpt>Image<ept id="p1">**</ept> object with a height of 200.</source>
          <target state="new">In this example, we define an <bpt id="p1">**</bpt>Image<ept id="p1">**</ept> object with a height of 200.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">**</bpt>RectangleGeometry<ept id="p1">**</ept> defines a rectangle for the area of the image that will be displayed.</source>
          <target state="new">A <bpt id="p1">**</bpt>RectangleGeometry<ept id="p1">**</ept> defines a rectangle for the area of the image that will be displayed.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Rect<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.media.rectanglegeometry.rect.aspx)</ept> property is set to "25,25,100,150", which defines a rectangle starting at position "25,25" with a width of 100 and a height of 150.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Rect<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.media.rectanglegeometry.rect.aspx)</ept> property is set to "25,25,100,150", which defines a rectangle starting at position "25,25" with a width of 100 and a height of 150.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Only the part of the image that is within the area of the rectangle is displayed.</source>
          <target state="new">Only the part of the image that is within the area of the rectangle is displayed.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Here's the clipped image on a black background.</source>
          <target state="new">Here's the clipped image on a black background.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>An Image object cropped by a RectangleGeometry.</source>
          <target state="new">An Image object cropped by a RectangleGeometry.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Apply an opacity</source>
          <target state="new">Apply an opacity</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>You can apply an <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Opacity<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.uielement.opacity.aspx)</ept> to an image so that the image is rendered semi-translucent.</source>
          <target state="new">You can apply an <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Opacity<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.uielement.opacity.aspx)</ept> to an image so that the image is rendered semi-translucent.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The opacity values are from 0.0 to 1.0 where 1.0 is fully opaque and 0.0 is fully transparent.</source>
          <target state="new">The opacity values are from 0.0 to 1.0 where 1.0 is fully opaque and 0.0 is fully transparent.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>This example shows how to apply an opacity of 0.5 to an Image.</source>
          <target state="new">This example shows how to apply an opacity of 0.5 to an Image.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Here's the rendered image with an opacity of 0.5 and a black background showing through the partial opacity.</source>
          <target state="new">Here's the rendered image with an opacity of 0.5 and a black background showing through the partial opacity.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>An Image object with an opacity of .5.</source>
          <target state="new">An Image object with an opacity of .5.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Image file formats</source>
          <target state="new">Image file formats</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Image<ept id="p1">**</ept> and <bpt id="p2">**</bpt>ImageBrush<ept id="p2">**</ept> can display these image file formats:</source>
          <target state="new"><bpt id="p1">**</bpt>Image<ept id="p1">**</ept> and <bpt id="p2">**</bpt>ImageBrush<ept id="p2">**</ept> can display these image file formats:</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Joint Photographic Experts Group (JPEG)</source>
          <target state="new">Joint Photographic Experts Group (JPEG)</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Portable Network Graphics (PNG)</source>
          <target state="new">Portable Network Graphics (PNG)</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>bitmap (BMP)</source>
          <target state="new">bitmap (BMP)</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Graphics Interchange Format (GIF)</source>
          <target state="new">Graphics Interchange Format (GIF)</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Tagged Image File Format (TIFF)</source>
          <target state="new">Tagged Image File Format (TIFF)</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>JPEG XR</source>
          <target state="new">JPEG XR</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>icons (ICO)</source>
          <target state="new">icons (ICO)</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The APIs for <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Image<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.image.aspx)</ept>, <bpt id="p3">[</bpt><bpt id="p4">**</bpt>BitmapImage<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.media.imaging.bitmapimage.aspx)</ept> and <bpt id="p5">[</bpt><bpt id="p6">**</bpt>BitmapSource<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.media.imaging.bitmapsource.aspx)</ept> don't include any dedicated methods for encoding and decoding of media formats.</source>
          <target state="new">The APIs for <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Image<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.image.aspx)</ept>, <bpt id="p3">[</bpt><bpt id="p4">**</bpt>BitmapImage<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.media.imaging.bitmapimage.aspx)</ept> and <bpt id="p5">[</bpt><bpt id="p6">**</bpt>BitmapSource<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.media.imaging.bitmapsource.aspx)</ept> don't include any dedicated methods for encoding and decoding of media formats.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>All of the encode and decode operations are built-in, and at most will surface aspects of encode or decode as part of event data for load events.</source>
          <target state="new">All of the encode and decode operations are built-in, and at most will surface aspects of encode or decode as part of event data for load events.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>If you want to do any special work with image encode or decode, which you might use if your app is doing image conversions or manipulation, you should use the APIs that are available in the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows.Graphics.Imaging<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.graphics.imaging.aspx)</ept> namespace.</source>
          <target state="new">If you want to do any special work with image encode or decode, which you might use if your app is doing image conversions or manipulation, you should use the APIs that are available in the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows.Graphics.Imaging<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.graphics.imaging.aspx)</ept> namespace.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>These APIs are also supported by the Windows Imaging Component (WIC) in Windows.</source>
          <target state="new">These APIs are also supported by the Windows Imaging Component (WIC) in Windows.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>For more info about app resources and how to package image sources in an app, see <bpt id="p1">[</bpt>Defining app resources<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/hh965321)</ept>.</source>
          <target state="new">For more info about app resources and how to package image sources in an app, see <bpt id="p1">[</bpt>Defining app resources<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/hh965321)</ept>.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>WriteableBitmap</source>
          <target state="new">WriteableBitmap</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">[</bpt><bpt id="p2">**</bpt>WriteableBitmap<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.media.imaging.writeablebitmap.aspx)</ept> provides a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>BitmapSource<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.media.imaging.bitmapsource.aspx)</ept> that can be modified and that doesn't use the basic file-based decoding from the WIC.</source>
          <target state="new">A <bpt id="p1">[</bpt><bpt id="p2">**</bpt>WriteableBitmap<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.media.imaging.writeablebitmap.aspx)</ept> provides a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>BitmapSource<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.media.imaging.bitmapsource.aspx)</ept> that can be modified and that doesn't use the basic file-based decoding from the WIC.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>You can alter images dynamically and re-render the updated image.</source>
          <target state="new">You can alter images dynamically and re-render the updated image.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>To define the buffer content of a <bpt id="p1">**</bpt>WriteableBitmap<ept id="p1">**</ept>, use the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>PixelBuffer<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.media.imaging.writeablebitmap.pixelbuffer.aspx)</ept> property to access the buffer and use a stream or language-specific buffer type to fill it.</source>
          <target state="new">To define the buffer content of a <bpt id="p1">**</bpt>WriteableBitmap<ept id="p1">**</ept>, use the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>PixelBuffer<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.media.imaging.writeablebitmap.pixelbuffer.aspx)</ept> property to access the buffer and use a stream or language-specific buffer type to fill it.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>For example code, see <bpt id="p1">[</bpt><bpt id="p2">**</bpt>WriteableBitmap<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.media.imaging.writeablebitmap.aspx)</ept>.</source>
          <target state="new">For example code, see <bpt id="p1">[</bpt><bpt id="p2">**</bpt>WriteableBitmap<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.media.imaging.writeablebitmap.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>RenderTargetBitmap</source>
          <target state="new">RenderTargetBitmap</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>RenderTargetBitmap<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.media.imaging.rendertargetbitmap.aspx)</ept> class can capture the XAML UI tree from a running app, and then represents a bitmap image source.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>RenderTargetBitmap<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.media.imaging.rendertargetbitmap.aspx)</ept> class can capture the XAML UI tree from a running app, and then represents a bitmap image source.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>After capture, that image source can be applied to other parts of the app, saved as a resource or app data by the user, or used for other scenarios.</source>
          <target state="new">After capture, that image source can be applied to other parts of the app, saved as a resource or app data by the user, or used for other scenarios.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>One particularly useful scenario is creating a runtime thumbnail of a XAML page for a navigation scheme, such as providing an image link from a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Hub<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.hub.aspx)</ept> control.</source>
          <target state="new">One particularly useful scenario is creating a runtime thumbnail of a XAML page for a navigation scheme, such as providing an image link from a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Hub<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.hub.aspx)</ept> control.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>RenderTargetBitmap<ept id="p1">**</ept> does have some limitations on the content that will appear in the captured image.</source>
          <target state="new"><bpt id="p1">**</bpt>RenderTargetBitmap<ept id="p1">**</ept> does have some limitations on the content that will appear in the captured image.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>For more info, see the API reference topic for <bpt id="p1">[</bpt><bpt id="p2">**</bpt>RenderTargetBitmap<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.media.imaging.rendertargetbitmap.aspx)</ept>.</source>
          <target state="new">For more info, see the API reference topic for <bpt id="p1">[</bpt><bpt id="p2">**</bpt>RenderTargetBitmap<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.media.imaging.rendertargetbitmap.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Image sources and scaling</source>
          <target state="new">Image sources and scaling</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>You should create your image sources at several recommended sizes, to ensure that your app looks great when Windows scales it.</source>
          <target state="new">You should create your image sources at several recommended sizes, to ensure that your app looks great when Windows scales it.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>When specifying a <bpt id="p1">**</bpt>Source<ept id="p1">**</ept> for an <bpt id="p2">**</bpt>Image<ept id="p2">**</ept>, you can use a naming convention that will automatically reference the correct resource for the current scaling.</source>
          <target state="new">When specifying a <bpt id="p1">**</bpt>Source<ept id="p1">**</ept> for an <bpt id="p2">**</bpt>Image<ept id="p2">**</ept>, you can use a naming convention that will automatically reference the correct resource for the current scaling.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>For specifics of the naming convention and more info, see <bpt id="p1">[</bpt>Quickstart: Using file or image resources<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/hh965325)</ept>.</source>
          <target state="new">For specifics of the naming convention and more info, see <bpt id="p1">[</bpt>Quickstart: Using file or image resources<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/hh965325)</ept>.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>For more info about how to design for scaling, see <bpt id="p1">[</bpt>UX guidelines for layout and scaling<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn611863)</ept>.</source>
          <target state="new">For more info about how to design for scaling, see <bpt id="p1">[</bpt>UX guidelines for layout and scaling<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn611863)</ept>.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Image and ImageBrush in code</source>
          <target state="new">Image and ImageBrush in code</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>It's typical to specify Image and ImageBrush elements using XAML rather than code.</source>
          <target state="new">It's typical to specify Image and ImageBrush elements using XAML rather than code.</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>This is because these elements are often the output of design tools as part of a XAML UI definition.</source>
          <target state="new">This is because these elements are often the output of design tools as part of a XAML UI definition.</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>If you define an Image or ImageBrush using code, use the default constructors, then set the relevant source property (<bpt id="p1">[</bpt><bpt id="p2">**</bpt>Image.Source<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.image.source.aspx)</ept> or <bpt id="p3">[</bpt><bpt id="p4">**</bpt>ImageBrush.ImageSource<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.media.imagebrush.imagesource.aspx)</ept>).</source>
          <target state="new">If you define an Image or ImageBrush using code, use the default constructors, then set the relevant source property (<bpt id="p1">[</bpt><bpt id="p2">**</bpt>Image.Source<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.controls.image.source.aspx)</ept> or <bpt id="p3">[</bpt><bpt id="p4">**</bpt>ImageBrush.ImageSource<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.media.imagebrush.imagesource.aspx)</ept>).</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The source properties require a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>BitmapImage<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.media.imaging.bitmapimage.aspx)</ept> (not a URI) when you set them using code.</source>
          <target state="new">The source properties require a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>BitmapImage<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.media.imaging.bitmapimage.aspx)</ept> (not a URI) when you set them using code.</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>If your source is a stream, use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SetSourceAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.media.imaging.bitmapsource.setsourceasync.aspx)</ept> method to initialize the value.</source>
          <target state="new">If your source is a stream, use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SetSourceAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.ui.xaml.media.imaging.bitmapsource.setsourceasync.aspx)</ept> method to initialize the value.</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>If your source is a URI, which includes content in your app that uses the <bpt id="p1">**</bpt>ms-appx<ept id="p1">**</ept> or <bpt id="p2">**</bpt>ms-resource<ept id="p2">**</ept> schemes, use the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>BitmapImage<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/br243238.aspx)</ept> constructor that takes a URI.</source>
          <target state="new">If your source is a URI, which includes content in your app that uses the <bpt id="p1">**</bpt>ms-appx<ept id="p1">**</ept> or <bpt id="p2">**</bpt>ms-resource<ept id="p2">**</ept> schemes, use the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>BitmapImage<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/xaml/br243238.aspx)</ept> constructor that takes a URI.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>You might also consider handling the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ImageOpened<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.media.imaging.bitmapimage.imageopened.aspx)</ept> event if there are any timing issues with retrieving or decoding the image source, where you might need alternate content to display until the image source is available.</source>
          <target state="new">You might also consider handling the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ImageOpened<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.media.imaging.bitmapimage.imageopened.aspx)</ept> event if there are any timing issues with retrieving or decoding the image source, where you might need alternate content to display until the image source is available.</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>For example code, see <bpt id="p1">[</bpt>XAML images sample<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=238575)</ept>.</source>
          <target state="new">For example code, see <bpt id="p1">[</bpt>XAML images sample<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=238575)</ept>.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept><ph id="ph1">&amp;nbsp;&amp;nbsp;</ph>If you establish images using code, you can use automatic handling for accessing unqualified resources with current scale and culture qualifiers, or you can use <bpt id="p2">[</bpt><bpt id="p3">**</bpt>ResourceManager<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.applicationmodel.resources.core.resourcemanager.aspx)</ept> and <bpt id="p4">[</bpt><bpt id="p5">**</bpt>ResourceMap<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.applicationmodel.resources.core.resourcemap.aspx)</ept> with qualifiers for culture and scale to obtain the resources directly.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept><ph id="ph1">&amp;nbsp;&amp;nbsp;</ph>If you establish images using code, you can use automatic handling for accessing unqualified resources with current scale and culture qualifiers, or you can use <bpt id="p2">[</bpt><bpt id="p3">**</bpt>ResourceManager<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.applicationmodel.resources.core.resourcemanager.aspx)</ept> and <bpt id="p4">[</bpt><bpt id="p5">**</bpt>ResourceMap<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/xaml/windows.applicationmodel.resources.core.resourcemap.aspx)</ept> with qualifiers for culture and scale to obtain the resources directly.</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>For more info see <bpt id="p1">[</bpt>Resource management system<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/jj552947.aspx)</ept>.</source>
          <target state="new">For more info see <bpt id="p1">[</bpt>Resource management system<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/jj552947.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Recommendations</source>
          <target state="new">Recommendations</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>\[This article contains information that is specific to Universal Windows Platform (UWP) apps and Windows 10.</source>
          <target state="new">\[This article contains information that is specific to Universal Windows Platform (UWP) apps and Windows 10.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>For Windows 8.1 guidance, please download the <bpt id="p1">[</bpt>Windows 8.1 guidelines PDF<ept id="p1">](https://go.microsoft.com/fwlink/p/?linkid=258743)</ept>.\]</source>
          <target state="new">For Windows 8.1 guidance, please download the <bpt id="p1">[</bpt>Windows 8.1 guidelines PDF<ept id="p1">](https://go.microsoft.com/fwlink/p/?linkid=258743)</ept>.\]</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Related articles</source>
          <target state="new">Related articles</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>For designers</source>
          <target state="new">For designers</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>For developers (XAML)</source>
          <target state="new">For developers (XAML)</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>