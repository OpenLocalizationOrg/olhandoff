<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-48076a9" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c30b559ac044f389c7bdd716ee67d83be59f9039</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci1\networking\web-feeds.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Retrieve or create the most current and popular Web content using syndicated feeds generated according to the RSS and Atom standards using features in the Windows.Web.Syndication namespace.</source>
          <target state="new">Retrieve or create the most current and popular Web content using syndicated feeds generated according to the RSS and Atom standards using features in the Windows.Web.Syndication namespace.</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>RSS/Atom feeds</source>
          <target state="new">RSS/Atom feeds</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>RSS/Atom feeds</source>
          <target state="new">RSS/Atom feeds</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>\[ Updated for UWP apps on Windows 10.</source>
          <target state="new">\[ Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Important APIs</source>
          <target state="new">Important APIs</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Windows.Data.Xml.Dom</source>
          <target state="new">Windows.Data.Xml.Dom</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Windows.Web.AtomPub</source>
          <target state="new">Windows.Web.AtomPub</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Windows.Web.Syndication</source>
          <target state="new">Windows.Web.Syndication</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Retrieve or create the most current and popular Web content using syndicated feeds generated according to the RSS and Atom standards using features in the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows.Web.Syndication<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br243632)</ept> namespace.</source>
          <target state="new">Retrieve or create the most current and popular Web content using syndicated feeds generated according to the RSS and Atom standards using features in the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows.Web.Syndication<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br243632)</ept> namespace.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>What is a feed?</source>
          <target state="new">What is a feed?</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A web feed is a document that contains any number of individual entries made up of text, links, and images.</source>
          <target state="new">A web feed is a document that contains any number of individual entries made up of text, links, and images.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Updates made to a feed are in the form of new entries used to promote the latest content across the Web.</source>
          <target state="new">Updates made to a feed are in the form of new entries used to promote the latest content across the Web.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Content consumers can use a feed reader app to aggregate and monitor feeds from any number of individual content authors, gaining access to the latest content quickly and conveniently.</source>
          <target state="new">Content consumers can use a feed reader app to aggregate and monitor feeds from any number of individual content authors, gaining access to the latest content quickly and conveniently.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Which feed format standards are supported?</source>
          <target state="new">Which feed format standards are supported?</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The Universal Windows Platform (UWP) supports feed retrieval for RSS format standards from 0.91 to RSS 2.0, and Atom standards from 0.3 to 1.0.</source>
          <target state="new">The Universal Windows Platform (UWP) supports feed retrieval for RSS format standards from 0.91 to RSS 2.0, and Atom standards from 0.3 to 1.0.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Classes in the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows.Web.Syndication<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br243632)</ept> namespace can define feeds and feed items capable of representing both RSS and Atom elements.</source>
          <target state="new">Classes in the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows.Web.Syndication<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br243632)</ept> namespace can define feeds and feed items capable of representing both RSS and Atom elements.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Additionally, Atom 1.0 and RSS 2.0 formats both allow their feed documents to contain elements or attributes not defined in the official specifications.</source>
          <target state="new">Additionally, Atom 1.0 and RSS 2.0 formats both allow their feed documents to contain elements or attributes not defined in the official specifications.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Over time, these custom elements and attributes have become a way to define domain-specific information consumed by other web service data formats like GData and OData.</source>
          <target state="new">Over time, these custom elements and attributes have become a way to define domain-specific information consumed by other web service data formats like GData and OData.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>To support this added feature, the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SyndicationNode<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br243585)</ept> class represents generic XML elements.</source>
          <target state="new">To support this added feature, the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SyndicationNode<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br243585)</ept> class represents generic XML elements.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Using <bpt id="p1">**</bpt>SyndicationNode<ept id="p1">**</ept> with classes in the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>Windows.Data.Xml.Dom<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br240819)</ept> namespace, allows apps to access attributes, extensions, and any content that they may contain.</source>
          <target state="new">Using <bpt id="p1">**</bpt>SyndicationNode<ept id="p1">**</ept> with classes in the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>Windows.Data.Xml.Dom<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br240819)</ept> namespace, allows apps to access attributes, extensions, and any content that they may contain.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Note that, for publication of syndicated content, the UWP implementation of the Atom Publication Protocol (<bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows.Web.AtomPub<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br210609)</ept>) only supports feed content operations according to the Atom and Atom Publication standards.</source>
          <target state="new">Note that, for publication of syndicated content, the UWP implementation of the Atom Publication Protocol (<bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows.Web.AtomPub<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br210609)</ept>) only supports feed content operations according to the Atom and Atom Publication standards.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Using syndicated content with network isolation</source>
          <target state="new">Using syndicated content with network isolation</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The network isolation feature in the UWP enables a developer to control and limit network access by a UWP app.</source>
          <target state="new">The network isolation feature in the UWP enables a developer to control and limit network access by a UWP app.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Not all apps may require access to the network.</source>
          <target state="new">Not all apps may require access to the network.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>However for those apps that do, UWP provides different levels of access to the network that can be enabled by selecting appropriate capabilities.</source>
          <target state="new">However for those apps that do, UWP provides different levels of access to the network that can be enabled by selecting appropriate capabilities.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Network isolation allows a developer to define for each app the scope of required network access.</source>
          <target state="new">Network isolation allows a developer to define for each app the scope of required network access.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>An app without the appropriate scope defined is prevented from accessing the specified type of network, and specific type of network request (outbound client-initiated requests or both inbound unsolicited requests and outbound client-initiated requests).</source>
          <target state="new">An app without the appropriate scope defined is prevented from accessing the specified type of network, and specific type of network request (outbound client-initiated requests or both inbound unsolicited requests and outbound client-initiated requests).</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The ability to set and enforce network isolation ensures that if an app does get compromised, it can only access networks where the app has explicitly been granted access.</source>
          <target state="new">The ability to set and enforce network isolation ensures that if an app does get compromised, it can only access networks where the app has explicitly been granted access.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This significantly reduces the scope of the impact on other applications and on Windows.</source>
          <target state="new">This significantly reduces the scope of the impact on other applications and on Windows.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Network isolation affects any class elements in the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows.Web.Syndication<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br243632)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Windows.Web.AtomPub<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br210609)</ept> namespaces that try to access the network.</source>
          <target state="new">Network isolation affects any class elements in the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows.Web.Syndication<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br243632)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Windows.Web.AtomPub<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br210609)</ept> namespaces that try to access the network.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Windows actively enforces network isolation.</source>
          <target state="new">Windows actively enforces network isolation.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>A call to a class element in the <bpt id="p1">**</bpt>Windows.Web.Syndication<ept id="p1">**</ept> or <bpt id="p2">**</bpt>Windows.Web.AtomPub<ept id="p2">**</ept> namespace that results in network access may fail because of network isolation if the appropriate network capability has not been enabled.</source>
          <target state="new">A call to a class element in the <bpt id="p1">**</bpt>Windows.Web.Syndication<ept id="p1">**</ept> or <bpt id="p2">**</bpt>Windows.Web.AtomPub<ept id="p2">**</ept> namespace that results in network access may fail because of network isolation if the appropriate network capability has not been enabled.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The network capabilities for an app are configured in the app manifest when the app is built.</source>
          <target state="new">The network capabilities for an app are configured in the app manifest when the app is built.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Network capabilities are usually added using Microsoft Visual Studio 2015 when developing the app.</source>
          <target state="new">Network capabilities are usually added using Microsoft Visual Studio 2015 when developing the app.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Network capabilities may also be set manually in the app manifest file using a text editor.</source>
          <target state="new">Network capabilities may also be set manually in the app manifest file using a text editor.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>For more detailed information on network isolation and networking capabilities, see the "Capabilities" section in the <bpt id="p1">[</bpt>Networking basics<ept id="p1">](networking-basics.md)</ept> topic.</source>
          <target state="new">For more detailed information on network isolation and networking capabilities, see the "Capabilities" section in the <bpt id="p1">[</bpt>Networking basics<ept id="p1">](networking-basics.md)</ept> topic.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>How to access a web feed</source>
          <target state="new">How to access a web feed</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>This section shows how to retrieve and display a web feed using classes in the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows.Web.Syndication<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br243632)</ept> namespace in your UWP app written in C# or Javascript.</source>
          <target state="new">This section shows how to retrieve and display a web feed using classes in the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows.Web.Syndication<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br243632)</ept> namespace in your UWP app written in C# or Javascript.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="new">Prerequisites</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>To ensure your UWP app is network ready, you must set any network capabilities that are needed in the project <bpt id="p1">**</bpt>Package.appxmanifest<ept id="p1">**</ept> file.</source>
          <target state="new">To ensure your UWP app is network ready, you must set any network capabilities that are needed in the project <bpt id="p1">**</bpt>Package.appxmanifest<ept id="p1">**</ept> file.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>If your app needs to connect as a client to remote services on the Internet, then the <bpt id="p1">**</bpt>internetClient<ept id="p1">**</ept> capability is needed.</source>
          <target state="new">If your app needs to connect as a client to remote services on the Internet, then the <bpt id="p1">**</bpt>internetClient<ept id="p1">**</ept> capability is needed.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>For more information, see the "Capabilities" section in the <bpt id="p1">[</bpt>Networking basics<ept id="p1">](networking-basics.md)</ept> topic.</source>
          <target state="new">For more information, see the "Capabilities" section in the <bpt id="p1">[</bpt>Networking basics<ept id="p1">](networking-basics.md)</ept> topic.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Retrieving syndicated content from a web feed</source>
          <target state="new">Retrieving syndicated content from a web feed</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Now we will review some code that demonstrates how to retrieve a feed, and then display each individual item that the feed contains.</source>
          <target state="new">Now we will review some code that demonstrates how to retrieve a feed, and then display each individual item that the feed contains.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Before we can configure and send the request, we'll define a few variables we'll be using during the operation, and initialize an instance of <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SyndicationClient<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br243456)</ept>, which defines the methods and properties we'll use to retrieve and display the feed.</source>
          <target state="new">Before we can configure and send the request, we'll define a few variables we'll be using during the operation, and initialize an instance of <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SyndicationClient<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br243456)</ept>, which defines the methods and properties we'll use to retrieve and display the feed.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Uri<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226017)</ept> constructor throws an exception if the <bpt id="p3">*</bpt>uriString<ept id="p3">*</ept> passed to the constructor is not a valid URI.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Uri<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226017)</ept> constructor throws an exception if the <bpt id="p3">*</bpt>uriString<ept id="p3">*</ept> passed to the constructor is not a valid URI.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>So we validate the <bpt id="p1">*</bpt>uriString<ept id="p1">*</ept> using a try/catch block.</source>
          <target state="new">So we validate the <bpt id="p1">*</bpt>uriString<ept id="p1">*</ept> using a try/catch block.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Next we configure the request by setting any Server credentials (the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ServerCredential<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br243461)</ept> property), proxy credentials (the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>ProxyCredential<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br243459)</ept> property), and HTTP headers (the <bpt id="p5">[</bpt><bpt id="p6">**</bpt>SetRequestHeader<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/br243462)</ept> method) needed.</source>
          <target state="new">Next we configure the request by setting any Server credentials (the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ServerCredential<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br243461)</ept> property), proxy credentials (the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>ProxyCredential<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br243459)</ept> property), and HTTP headers (the <bpt id="p5">[</bpt><bpt id="p6">**</bpt>SetRequestHeader<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/br243462)</ept> method) needed.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>With the basic request parameters configured, a valid <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Uri<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226017)</ept> object, created using a feed URI string provided by the app.</source>
          <target state="new">With the basic request parameters configured, a valid <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Uri<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226017)</ept> object, created using a feed URI string provided by the app.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Uri<ept id="p1">**</ept> object is then passed to the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>RetrieveFeedAsync<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br243460)</ept> function to request the feed.</source>
          <target state="new">The <bpt id="p1">**</bpt>Uri<ept id="p1">**</ept> object is then passed to the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>RetrieveFeedAsync<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br243460)</ept> function to request the feed.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Assuming the desired feed content was returned, the example code iterates through each feed item, calling <bpt id="p1">**</bpt>displayCurrentItem<ept id="p1">**</ept> (which we define next), to display items and their contents as a list through the UI.</source>
          <target state="new">Assuming the desired feed content was returned, the example code iterates through each feed item, calling <bpt id="p1">**</bpt>displayCurrentItem<ept id="p1">**</ept> (which we define next), to display items and their contents as a list through the UI.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>You must write code to handle exceptions when you call most asynchronous network methods.</source>
          <target state="new">You must write code to handle exceptions when you call most asynchronous network methods.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Your exception handler can retrieve more detailed information on the cause of the exception to better understand the failure and make appropriate decisions.</source>
          <target state="new">Your exception handler can retrieve more detailed information on the cause of the exception to better understand the failure and make appropriate decisions.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>RetrieveFeedAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br243460)</ept> method throws an exception if a connection could not be established with the HTTP server or the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Uri<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br226017)</ept> object does not point to a valid AtomPub or RSS feed.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>RetrieveFeedAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br243460)</ept> method throws an exception if a connection could not be established with the HTTP server or the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Uri<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br226017)</ept> object does not point to a valid AtomPub or RSS feed.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The Javascript sample code uses an <bpt id="p1">**</bpt>onError<ept id="p1">**</ept> function to catch any exceptions and print out more detailed information on the exception if an error occurs.</source>
          <target state="new">The Javascript sample code uses an <bpt id="p1">**</bpt>onError<ept id="p1">**</ept> function to catch any exceptions and print out more detailed information on the exception if an error occurs.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>In the previous step, <bpt id="p1">[</bpt><bpt id="p2">**</bpt>RetrieveFeedAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br243460)</ept> returned the requested feed content and the example code got to work iterating through available feed items.</source>
          <target state="new">In the previous step, <bpt id="p1">[</bpt><bpt id="p2">**</bpt>RetrieveFeedAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br243460)</ept> returned the requested feed content and the example code got to work iterating through available feed items.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Each of these items is represented using a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SyndicationItem<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br243533)</ept> object that contains all of the item properties and content afforded by the relevant syndication standard (RSS or Atom).</source>
          <target state="new">Each of these items is represented using a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SyndicationItem<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br243533)</ept> object that contains all of the item properties and content afforded by the relevant syndication standard (RSS or Atom).</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>In the following example we observe the <bpt id="p1">**</bpt>displayCurrentItem<ept id="p1">**</ept> function working through each item and displaying its content through various named UI elements.</source>
          <target state="new">In the following example we observe the <bpt id="p1">**</bpt>displayCurrentItem<ept id="p1">**</ept> function working through each item and displaying its content through various named UI elements.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>As suggested earlier, the type of content represented by a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SyndicationItem<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br243533)</ept> object will differ depending on the feed standard (RSS or Atom) employed to publish the feed.</source>
          <target state="new">As suggested earlier, the type of content represented by a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SyndicationItem<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br243533)</ept> object will differ depending on the feed standard (RSS or Atom) employed to publish the feed.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>For example, an Atom feed is capable of providing a list of <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Contributors<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br243540)</ept>, but an RSS feed is not.</source>
          <target state="new">For example, an Atom feed is capable of providing a list of <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Contributors<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br243540)</ept>, but an RSS feed is not.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>However, extension elements included in a feed item that are not supported by either standard (e.g., Dublin Core extension elements) can be accessed using the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SyndicationItem.ElementExtensions<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br243543)</ept> property and then displayed as demonstrated in the following example code.</source>
          <target state="new">However, extension elements included in a feed item that are not supported by either standard (e.g., Dublin Core extension elements) can be accessed using the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SyndicationItem.ElementExtensions<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br243543)</ept> property and then displayed as demonstrated in the following example code.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>