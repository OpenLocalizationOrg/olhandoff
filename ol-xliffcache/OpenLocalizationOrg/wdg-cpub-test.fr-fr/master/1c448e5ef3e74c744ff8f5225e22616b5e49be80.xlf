<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-48076a9" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1c448e5ef3e74c744ff8f5225e22616b5e49be80</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci2\get-started\universal-application-platform-guide.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Guide to Universal Windows Platform (UWP) apps</source>
          <target state="new">Guide to Universal Windows Platform (UWP) apps</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>In this guide, learn about Universal Windows Platform (UWP) apps that can run across a wide variety of devices.</source>
          <target state="new">In this guide, learn about Universal Windows Platform (UWP) apps that can run across a wide variety of devices.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Guide to Universal Windows Platform (UWP) apps</source>
          <target state="new">Guide to Universal Windows Platform (UWP) apps</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>\[ Updated for UWP apps on Windows 10.</source>
          <target state="new">\[ Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>In this guide, you'll learn about:</source>
          <target state="new">In this guide, you'll learn about:</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>What a <bpt id="p1">*</bpt>device family<ept id="p1">*</ept> is, and how to decide which one to target.</source>
          <target state="new">What a <bpt id="p1">*</bpt>device family<ept id="p1">*</ept> is, and how to decide which one to target.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>New UI controls and panels that allow you to adapt your UI to different device form factors.</source>
          <target state="new">New UI controls and panels that allow you to adapt your UI to different device form factors.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>How to understand and control the API surface that is available to your app.</source>
          <target state="new">How to understand and control the API surface that is available to your app.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Windows 8 introduced the Windows Runtime (WinRT), which was an evolution of the Windows app model.</source>
          <target state="new">Windows 8 introduced the Windows Runtime (WinRT), which was an evolution of the Windows app model.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>It was intended to be a common application architecture.</source>
          <target state="new">It was intended to be a common application architecture.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>When Windows Phone 8.1 became available, the Windows Runtime was aligned between Windows Phone 8.1 and Windows.</source>
          <target state="new">When Windows Phone 8.1 became available, the Windows Runtime was aligned between Windows Phone 8.1 and Windows.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This enabled developers to create <bpt id="p1">*</bpt>Universal Windows 8 apps<ept id="p1">*</ept> that target both Windows and Windows Phone using a shared codebase.</source>
          <target state="new">This enabled developers to create <bpt id="p1">*</bpt>Universal Windows 8 apps<ept id="p1">*</ept> that target both Windows and Windows Phone using a shared codebase.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Windows 10 introduces the Universal Windows Platform (UWP), which further evolves the Windows Runtime model and brings it into the Windows 10 unified core.</source>
          <target state="new">Windows 10 introduces the Universal Windows Platform (UWP), which further evolves the Windows Runtime model and brings it into the Windows 10 unified core.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>As part of the core, the UWP now provides a common app platform available on every device that runs Windows 10.</source>
          <target state="new">As part of the core, the UWP now provides a common app platform available on every device that runs Windows 10.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>With this evolution, apps that target the UWP can call not only the WinRT APIs that are common to all devices, but also APIs (including Win32 and .NET APIs) that are specific to the device family the app is running on.</source>
          <target state="new">With this evolution, apps that target the UWP can call not only the WinRT APIs that are common to all devices, but also APIs (including Win32 and .NET APIs) that are specific to the device family the app is running on.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The UWP provides a guaranteed core API layer across devices.</source>
          <target state="new">The UWP provides a guaranteed core API layer across devices.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This means you can create a single app package that can be installed onto a wide range of devices.</source>
          <target state="new">This means you can create a single app package that can be installed onto a wide range of devices.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>And, with that single app package, the Windows Store provides a unified distribution channel to reach all the device types your app can run on.</source>
          <target state="new">And, with that single app package, the Windows Store provides a unified distribution channel to reach all the device types your app can run on.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>windows universal apps run on a variety of devices, support adaptive user interface, natural user input, one store, one dev center, and cloud services</source>
          <target state="new">windows universal apps run on a variety of devices, support adaptive user interface, natural user input, one store, one dev center, and cloud services</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Because your UWP app runs on a wide variety of devices with different form factors and input modalities, you want it to be tailored to each device and be able to unlock the unique capabilities of each device.</source>
          <target state="new">Because your UWP app runs on a wide variety of devices with different form factors and input modalities, you want it to be tailored to each device and be able to unlock the unique capabilities of each device.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Devices add their own unique APIs to the guaranteed API layer.</source>
          <target state="new">Devices add their own unique APIs to the guaranteed API layer.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You can write code to access those unique APIs conditionally so that your app lights up features specific to one type of device while presenting a different experience on other devices.</source>
          <target state="new">You can write code to access those unique APIs conditionally so that your app lights up features specific to one type of device while presenting a different experience on other devices.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Adaptive UI controls and new layout panels help you to tailor your UI across a broad range of screen resolutions.</source>
          <target state="new">Adaptive UI controls and new layout panels help you to tailor your UI across a broad range of screen resolutions.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Device families</source>
          <target state="new">Device families</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Windows 8.1 and Windows Phone 8.1 apps target an operating system (OS): either Windows, or Windows Phone.</source>
          <target state="new">Windows 8.1 and Windows Phone 8.1 apps target an operating system (OS): either Windows, or Windows Phone.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>With Windows 10 you no longer target an operating system but you instead target your app to one or more device families.</source>
          <target state="new">With Windows 10 you no longer target an operating system but you instead target your app to one or more device families.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A device family identifies the APIs, system characteristics, and behaviors that you can expect across devices within the device family.</source>
          <target state="new">A device family identifies the APIs, system characteristics, and behaviors that you can expect across devices within the device family.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>It also determines the set of devices on which your app can be installed from the Store.</source>
          <target state="new">It also determines the set of devices on which your app can be installed from the Store.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Here is the device family hierarchy.</source>
          <target state="new">Here is the device family hierarchy.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>device families</source>
          <target state="new">device families</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>A device family is a set of APIs collected together and given a name and a version number.</source>
          <target state="new">A device family is a set of APIs collected together and given a name and a version number.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>A device family is the foundation of an OS.</source>
          <target state="new">A device family is the foundation of an OS.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>PCs run the desktop OS, which is based on the desktop device family.</source>
          <target state="new">PCs run the desktop OS, which is based on the desktop device family.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Phones and tablets, etc., run the mobile OS, which is based on the mobile device family.</source>
          <target state="new">Phones and tablets, etc., run the mobile OS, which is based on the mobile device family.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>And so on.</source>
          <target state="new">And so on.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The universal device family is special.</source>
          <target state="new">The universal device family is special.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>It is not, directly, the foundation of any OS.</source>
          <target state="new">It is not, directly, the foundation of any OS.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Instead, the set of APIs in the universal device family is inherited by child device families.</source>
          <target state="new">Instead, the set of APIs in the universal device family is inherited by child device families.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The universal device family APIs are thus guaranteed to be present in every OS and consequently on every device.</source>
          <target state="new">The universal device family APIs are thus guaranteed to be present in every OS and consequently on every device.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Each child device family adds its own APIs to the ones it inherits.</source>
          <target state="new">Each child device family adds its own APIs to the ones it inherits.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The resulting union of APIs in a child device family is guaranteed to be present in the OS based on that device family, and consequently on every device running that OS.</source>
          <target state="new">The resulting union of APIs in a child device family is guaranteed to be present in the OS based on that device family, and consequently on every device running that OS.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>One benefit of device families is that your app can run on any, or even all, of a variety of devices from phones, tablets, and desktop computers up to Surface Hubs and Xbox consoles.</source>
          <target state="new">One benefit of device families is that your app can run on any, or even all, of a variety of devices from phones, tablets, and desktop computers up to Surface Hubs and Xbox consoles.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Your app can also use adaptive code to dynamically detect and use features of a device that are outside of the universal device family.</source>
          <target state="new">Your app can also use adaptive code to dynamically detect and use features of a device that are outside of the universal device family.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The decision about which device family (or families) your app will target is yours to make.</source>
          <target state="new">The decision about which device family (or families) your app will target is yours to make.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>And that decision impacts your app in these important ways.</source>
          <target state="new">And that decision impacts your app in these important ways.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>It determines:</source>
          <target state="new">It determines:</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The set of APIs that your app can assume to be present when it runs (and can therefore call freely).</source>
          <target state="new">The set of APIs that your app can assume to be present when it runs (and can therefore call freely).</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The set of API calls that are safe only inside conditional statements.</source>
          <target state="new">The set of API calls that are safe only inside conditional statements.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The set of devices on which your app can be installed from the Store (and consequently the form factors that you need to consider).</source>
          <target state="new">The set of devices on which your app can be installed from the Store (and consequently the form factors that you need to consider).</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>There are two main consequences of making a device family choice: the API surface that can be called unconditionally by the app, and the number of devices the app can reach.</source>
          <target state="new">There are two main consequences of making a device family choice: the API surface that can be called unconditionally by the app, and the number of devices the app can reach.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>These two factors involve tradeoffs and are inversely related.</source>
          <target state="new">These two factors involve tradeoffs and are inversely related.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>For example, a UWP app is an app that specifically targets the universal device family, and consequently is available to all devices.</source>
          <target state="new">For example, a UWP app is an app that specifically targets the universal device family, and consequently is available to all devices.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>An app that targets the universal device family can assume the presence of only the APIs in the universal device family (because that's what it targets).</source>
          <target state="new">An app that targets the universal device family can assume the presence of only the APIs in the universal device family (because that's what it targets).</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Other APIs must be called conditionally.</source>
          <target state="new">Other APIs must be called conditionally.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Also, such an app must have a highly adaptive UI and comprehensive input capabilities because it can run on a wide variety of devices.</source>
          <target state="new">Also, such an app must have a highly adaptive UI and comprehensive input capabilities because it can run on a wide variety of devices.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>A Windows mobile app is an app that specifically targets the mobile device family, and is available to devices whose OS is based on the mobile device family (which includes phones, tablets, and similar devices).</source>
          <target state="new">A Windows mobile app is an app that specifically targets the mobile device family, and is available to devices whose OS is based on the mobile device family (which includes phones, tablets, and similar devices).</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>A mobile device family app can assume the presence of all APIs in the mobile device family, and its UI has to be moderately adaptive.</source>
          <target state="new">A mobile device family app can assume the presence of all APIs in the mobile device family, and its UI has to be moderately adaptive.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>An app that targets the IoT device family can be installed only on IoT devices and can assume the presence of all APIs in the IoT device family.</source>
          <target state="new">An app that targets the IoT device family can be installed only on IoT devices and can assume the presence of all APIs in the IoT device family.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>That app can be very specialized in its UI and input capabilities because you know that it will run only on a specific type of device.</source>
          <target state="new">That app can be very specialized in its UI and input capabilities because you know that it will run only on a specific type of device.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Here are some considerations to help you decide which device family to target:</source>
          <target state="new">Here are some considerations to help you decide which device family to target:</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Maximizing your app's reach</source>
          <target state="new">Maximizing your app's reach</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>To reach the maximum range of devices with your app, and to have it run on as many kinds of devices as possible, your app will target the universal device family.</source>
          <target state="new">To reach the maximum range of devices with your app, and to have it run on as many kinds of devices as possible, your app will target the universal device family.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>By doing so, the app automatically targets every device family that's based on universal (in the diagram, all the children of universal).</source>
          <target state="new">By doing so, the app automatically targets every device family that's based on universal (in the diagram, all the children of universal).</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>That means that the app runs on every OS based on those device families, and on all the devices that run those operating systems.</source>
          <target state="new">That means that the app runs on every OS based on those device families, and on all the devices that run those operating systems.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The only APIs that are guaranteed to be available on all those devices is the set defined by the particular version of the universal device family that you target.</source>
          <target state="new">The only APIs that are guaranteed to be available on all those devices is the set defined by the particular version of the universal device family that you target.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>(With this release, that version is always 10.0.x.0.) To find out how an app can call APIs outside of its target device family version, see Writing code later in this topic.</source>
          <target state="new">(With this release, that version is always 10.0.x.0.) To find out how an app can call APIs outside of its target device family version, see Writing code later in this topic.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Limiting your app to one kind of device</source>
          <target state="new">Limiting your app to one kind of device</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>You may not want your app to run on a wide range of devices; perhaps it's specialized for, say, a desktop PC or for an Xbox console.</source>
          <target state="new">You may not want your app to run on a wide range of devices; perhaps it's specialized for, say, a desktop PC or for an Xbox console.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>In that case you can choose to target your app at one of the child device families.</source>
          <target state="new">In that case you can choose to target your app at one of the child device families.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>For example, if you target the desktop device family, the APIs guaranteed to be available to your app include the APIs inherited from the universal device family plus the APIs that are particular to the desktop device family.</source>
          <target state="new">For example, if you target the desktop device family, the APIs guaranteed to be available to your app include the APIs inherited from the universal device family plus the APIs that are particular to the desktop device family.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Limiting your app to a subset of all possible devices</source>
          <target state="new">Limiting your app to a subset of all possible devices</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Instead of targeting the universal device family, or targeting one of the child device families, you can instead target two (or more) child device families.</source>
          <target state="new">Instead of targeting the universal device family, or targeting one of the child device families, you can instead target two (or more) child device families.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Targeting desktop and mobile might make sense for your app.</source>
          <target state="new">Targeting desktop and mobile might make sense for your app.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Or desktop and Xbox.</source>
          <target state="new">Or desktop and Xbox.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Or desktop, Xbox and Surface Hub.</source>
          <target state="new">Or desktop, Xbox and Surface Hub.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Excluding support for a particular version of a device family</source>
          <target state="new">Excluding support for a particular version of a device family</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>In rare cases you may want your app to run everywhere except on devices with a particular version of a particular device family.</source>
          <target state="new">In rare cases you may want your app to run everywhere except on devices with a particular version of a particular device family.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>For example, let's say your app targets version 10.0.x.0 of the universal device family.</source>
          <target state="new">For example, let's say your app targets version 10.0.x.0 of the universal device family.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>When the operating system version changes in the future, say to 10.0.x.2, at that point you can specify that your app runs everywhere except version 10.0.x.1 of Xbox by targeting your app to 10.0.x.0 of universal and 10.0.x.1 of Xbox.</source>
          <target state="new">When the operating system version changes in the future, say to 10.0.x.2, at that point you can specify that your app runs everywhere except version 10.0.x.1 of Xbox by targeting your app to 10.0.x.0 of universal and 10.0.x.1 of Xbox.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Your app will then be unavailable to the set of device family versions within Xbox 10.0.x.1 (inclusive) and earlier.</source>
          <target state="new">Your app will then be unavailable to the set of device family versions within Xbox 10.0.x.1 (inclusive) and earlier.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>By default, Microsoft Visual Studio specifies <bpt id="p1">**</bpt>Windows.Universal<ept id="p1">**</ept> as the target device family in the app package manifest file.</source>
          <target state="new">By default, Microsoft Visual Studio specifies <bpt id="p1">**</bpt>Windows.Universal<ept id="p1">**</ept> as the target device family in the app package manifest file.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>To specify the device family or device families that your app is offered to from within the Store, manually configure the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TargetDeviceFamily<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn986903)</ept> element in your Package.appxmanifest file.</source>
          <target state="new">To specify the device family or device families that your app is offered to from within the Store, manually configure the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TargetDeviceFamily<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn986903)</ept> element in your Package.appxmanifest file.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>UI and universal input</source>
          <target state="new">UI and universal input</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>A UWP app can run on many different kinds of devices that have different forms of input, screen resolutions, DPI density, and other unique characteristics.</source>
          <target state="new">A UWP app can run on many different kinds of devices that have different forms of input, screen resolutions, DPI density, and other unique characteristics.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Windows 10 provides new universal controls, layout panels, and tooling to help you adapt your UI to the devices your app may run on.</source>
          <target state="new">Windows 10 provides new universal controls, layout panels, and tooling to help you adapt your UI to the devices your app may run on.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>For example, you can tailor the UI to take advantage of the difference in screen resolution when your app is running on a desktop computer versus on a mobile device.</source>
          <target state="new">For example, you can tailor the UI to take advantage of the difference in screen resolution when your app is running on a desktop computer versus on a mobile device.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Some aspects of your app's UI will automatically adapt across devices.</source>
          <target state="new">Some aspects of your app's UI will automatically adapt across devices.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Controls such as buttons and sliders automatically adapt across device families and input modes.</source>
          <target state="new">Controls such as buttons and sliders automatically adapt across device families and input modes.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Your app's user-experience design, however, may need to adapt depending on the device the app is running on.</source>
          <target state="new">Your app's user-experience design, however, may need to adapt depending on the device the app is running on.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>For example, a photos app should adapt the UI when running on a small, hand-held device to ensure that usage is ideal for single-hand use.</source>
          <target state="new">For example, a photos app should adapt the UI when running on a small, hand-held device to ensure that usage is ideal for single-hand use.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>When the photos app is running on a desktop computer, the UI should adapt to take advantage of the additional screen space.</source>
          <target state="new">When the photos app is running on a desktop computer, the UI should adapt to take advantage of the additional screen space.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Windows helps you target your UI to multiple devices with the following features:</source>
          <target state="new">Windows helps you target your UI to multiple devices with the following features:</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Universal controls and layout panels help you to optimize your UI for the screen resolution of the device</source>
          <target state="new">Universal controls and layout panels help you to optimize your UI for the screen resolution of the device</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Common input handling allows you to receive input through touch, a pen, a mouse, or a keyboard, or a controller such as a Microsoft Xbox controller</source>
          <target state="new">Common input handling allows you to receive input through touch, a pen, a mouse, or a keyboard, or a controller such as a Microsoft Xbox controller</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Tooling helps you to design UI that can adapt to different screen resolutions</source>
          <target state="new">Tooling helps you to design UI that can adapt to different screen resolutions</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Adaptive scaling adjusts to resolution and DPI differences across devices</source>
          <target state="new">Adaptive scaling adjusts to resolution and DPI differences across devices</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Universal controls and layout panels</source>
          <target state="new">Universal controls and layout panels</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Windows 10 includes new controls such as the calendar and split view.</source>
          <target state="new">Windows 10 includes new controls such as the calendar and split view.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The pivot control, which was previously available only for Windows Phone, is also now available for the universal device family.</source>
          <target state="new">The pivot control, which was previously available only for Windows Phone, is also now available for the universal device family.</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Controls have been updated to work well on larger screens, adapt themselves based on the number of screen pixels available on the device, and work well with multiple types of input such as keyboard, mouse, touch, pen, and controllers such as the Xbox controller.</source>
          <target state="new">Controls have been updated to work well on larger screens, adapt themselves based on the number of screen pixels available on the device, and work well with multiple types of input such as keyboard, mouse, touch, pen, and controllers such as the Xbox controller.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>You may find that you need to adapt your overall UI layout based on the screen resolution of the device your app will be running on.</source>
          <target state="new">You may find that you need to adapt your overall UI layout based on the screen resolution of the device your app will be running on.</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>For example, a communication app running on the desktop may include a picture-in-picture of the caller and controls well suited to mouse input:</source>
          <target state="new">For example, a communication app running on the desktop may include a picture-in-picture of the caller and controls well suited to mouse input:</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>desktop communication app ui</source>
          <target state="new">desktop communication app ui</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>However, when the app runs on a phone, because there is less screen real-estate to work with, your app may eliminate the picture-in-picture view and make the call button larger to facilitate one-handed operation:</source>
          <target state="new">However, when the app runs on a phone, because there is less screen real-estate to work with, your app may eliminate the picture-in-picture view and make the call button larger to facilitate one-handed operation:</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>phone communication app ui</source>
          <target state="new">phone communication app ui</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>To help you adapt your overall UI layout based on the amount of available screen space,Windows 10 introduces adaptive panels and design states.</source>
          <target state="new">To help you adapt your overall UI layout based on the amount of available screen space,Windows 10 introduces adaptive panels and design states.</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Design adaptive UI with adaptive panels</source>
          <target state="new">Design adaptive UI with adaptive panels</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Layout panels give sizes and positions to their children, depending on available space.</source>
          <target state="new">Layout panels give sizes and positions to their children, depending on available space.</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>For example, <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StackPanel<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br209635)</ept> orders its children sequentially (horizontally or vertically).</source>
          <target state="new">For example, <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StackPanel<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br209635)</ept> orders its children sequentially (horizontally or vertically).</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>Grid<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242704)</ept> is like a CSS grid that places its children into cells.</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>Grid<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242704)</ept> is like a CSS grid that places its children into cells.</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The new <bpt id="p1">[</bpt><bpt id="p2">**</bpt>RelativePanel<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn879546)</ept> implements a style of layout that is defined by the relationships between its child elements.</source>
          <target state="new">The new <bpt id="p1">[</bpt><bpt id="p2">**</bpt>RelativePanel<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn879546)</ept> implements a style of layout that is defined by the relationships between its child elements.</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>It's intended for use in creating app layouts that can adapt to changes in screen resolution.</source>
          <target state="new">It's intended for use in creating app layouts that can adapt to changes in screen resolution.</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>RelativePanel<ept id="p1">**</ept> eases the process of rearranging elements by defining relationships between elements, which allows you to build more dynamic UI without using nested layouts.</source>
          <target state="new">The <bpt id="p1">**</bpt>RelativePanel<ept id="p1">**</ept> eases the process of rearranging elements by defining relationships between elements, which allows you to build more dynamic UI without using nested layouts.</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>In the following example, <bpt id="p1">**</bpt>blueButton<ept id="p1">**</ept> will appear to the right of <bpt id="p2">**</bpt>textBox1<ept id="p2">**</ept> regardless of changes in orientation or layout, and <bpt id="p3">**</bpt>orangeButton<ept id="p3">**</ept> will appear immediately below, and aligned with, <bpt id="p4">**</bpt>blueButton<ept id="p4">**</ept>—even as the width of <bpt id="p5">**</bpt>textBox1<ept id="p5">**</ept> changes as text is typed into it.</source>
          <target state="new">In the following example, <bpt id="p1">**</bpt>blueButton<ept id="p1">**</ept> will appear to the right of <bpt id="p2">**</bpt>textBox1<ept id="p2">**</ept> regardless of changes in orientation or layout, and <bpt id="p3">**</bpt>orangeButton<ept id="p3">**</ept> will appear immediately below, and aligned with, <bpt id="p4">**</bpt>blueButton<ept id="p4">**</ept>—even as the width of <bpt id="p5">**</bpt>textBox1<ept id="p5">**</ept> changes as text is typed into it.</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>It would previously have required rows and columns in a <bpt id="p1">**</bpt>Grid<ept id="p1">**</ept> to achieve this effect, but now it can be done using far less markup.</source>
          <target state="new">It would previously have required rows and columns in a <bpt id="p1">**</bpt>Grid<ept id="p1">**</ept> to achieve this effect, but now it can be done using far less markup.</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>relativepanel example</source>
          <target state="new">relativepanel example</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Use visual state triggers to build UI that can adapt to available screen space</source>
          <target state="new">Use visual state triggers to build UI that can adapt to available screen space</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Your UI may need to adapt to changes in window size.</source>
          <target state="new">Your UI may need to adapt to changes in window size.</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Adaptive visual states allows you to change the visual state in response to changes in the size of the window.</source>
          <target state="new">Adaptive visual states allows you to change the visual state in response to changes in the size of the window.</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>StateTriggers define a threshold at which a visual state is activated, which then sets layout properties as appropriate for the window size that triggered the state change.</source>
          <target state="new">StateTriggers define a threshold at which a visual state is activated, which then sets layout properties as appropriate for the window size that triggered the state change.</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>In the following example, when the window size is 720 pixels or more in width, the visual state named <bpt id="p1">**</bpt>wideView<ept id="p1">**</ept> is triggered, which then arranges the <bpt id="p2">**</bpt>Best-rated games<ept id="p2">**</ept> panel to appear to the right of, and aligned with the top of, the <bpt id="p3">**</bpt>Top free games<ept id="p3">**</ept> panel.</source>
          <target state="new">In the following example, when the window size is 720 pixels or more in width, the visual state named <bpt id="p1">**</bpt>wideView<ept id="p1">**</ept> is triggered, which then arranges the <bpt id="p2">**</bpt>Best-rated games<ept id="p2">**</ept> panel to appear to the right of, and aligned with the top of, the <bpt id="p3">**</bpt>Top free games<ept id="p3">**</ept> panel.</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>visual state trigger example.</source>
          <target state="new">visual state trigger example.</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>wide view</source>
          <target state="new">wide view</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>When the window is less than 720 pixels, the <bpt id="p1">**</bpt>narrowView<ept id="p1">**</ept> visual state is triggered because the <bpt id="p2">**</bpt>wideView<ept id="p2">**</ept> trigger is no longer satisfied and so no longer in effect.</source>
          <target state="new">When the window is less than 720 pixels, the <bpt id="p1">**</bpt>narrowView<ept id="p1">**</ept> visual state is triggered because the <bpt id="p2">**</bpt>wideView<ept id="p2">**</ept> trigger is no longer satisfied and so no longer in effect.</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>narrowView<ept id="p1">**</ept> visual state positions the <bpt id="p2">**</bpt>Best-rated games<ept id="p2">**</ept> panel below, and aligned with the left of, the <bpt id="p3">**</bpt>Top paid games<ept id="p3">**</ept> panel:</source>
          <target state="new">The <bpt id="p1">**</bpt>narrowView<ept id="p1">**</ept> visual state positions the <bpt id="p2">**</bpt>Best-rated games<ept id="p2">**</ept> panel below, and aligned with the left of, the <bpt id="p3">**</bpt>Top paid games<ept id="p3">**</ept> panel:</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>visual state trigger example.</source>
          <target state="new">visual state trigger example.</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>narrow view</source>
          <target state="new">narrow view</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Here is the XAML for the visual state triggers described above.</source>
          <target state="new">Here is the XAML for the visual state triggers described above.</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The definition of the panels, alluded to by "<ph id="ph1">`...`</ph>" below, has been removed for brevity.</source>
          <target state="new">The definition of the panels, alluded to by "<ph id="ph1">`...`</ph>" below, has been removed for brevity.</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Tooling</source>
          <target state="new">Tooling</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>By default, you'll probably want to target the broadest possible device family.</source>
          <target state="new">By default, you'll probably want to target the broadest possible device family.</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>When you're ready to see how your app looks and lays out on a particular device, use the device preview toolbar in Visual Studio to preview your UI on a small or medium mobile device, on a PC, or on a large TV screen.</source>
          <target state="new">When you're ready to see how your app looks and lays out on a particular device, use the device preview toolbar in Visual Studio to preview your UI on a small or medium mobile device, on a PC, or on a large TV screen.</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>That way you can tailor and test your adaptive visual states:</source>
          <target state="new">That way you can tailor and test your adaptive visual states:</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>visual studio 2015 device preview toolbar</source>
          <target state="new">visual studio 2015 device preview toolbar</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>You don’t have to make a decision up front about every device type that you'll support.</source>
          <target state="new">You don’t have to make a decision up front about every device type that you'll support.</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>You can add an additional device size to your project later.</source>
          <target state="new">You can add an additional device size to your project later.</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Adaptive scaling</source>
          <target state="new">Adaptive scaling</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Windows 10 introduces an evolution of the existing scaling model.</source>
          <target state="new">Windows 10 introduces an evolution of the existing scaling model.</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>In addition to scaling vector content, there is a unified set of scale factors that provides a consistent size for UI elements across a variety of screen sizes and display resolutions.</source>
          <target state="new">In addition to scaling vector content, there is a unified set of scale factors that provides a consistent size for UI elements across a variety of screen sizes and display resolutions.</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The scale factors are also compatible with the scale factors of other operating systems such as iOS and Android.</source>
          <target state="new">The scale factors are also compatible with the scale factors of other operating systems such as iOS and Android.</target>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>This makes it easier to share assets between these platforms.</source>
          <target state="new">This makes it easier to share assets between these platforms.</target>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The Store picks the assets to download based in part of the DPI of the device.</source>
          <target state="new">The Store picks the assets to download based in part of the DPI of the device.</target>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Only the assets that best match the device are downloaded.</source>
          <target state="new">Only the assets that best match the device are downloaded.</target>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Common input handling</source>
          <target state="new">Common input handling</target>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>You can build a Universal Windows app using universal controls that handle various inputs such as mouse, keyboard, touch, pen, and controller (such as the Xbox controller).</source>
          <target state="new">You can build a Universal Windows app using universal controls that handle various inputs such as mouse, keyboard, touch, pen, and controller (such as the Xbox controller).</target>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Traditionally, inking has been associated only with pen input, but with Windows 10, you can ink with touch on some devices, and with any pointer input.</source>
          <target state="new">Traditionally, inking has been associated only with pen input, but with Windows 10, you can ink with touch on some devices, and with any pointer input.</target>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Inking is supported on many devices (including mobile devices) and can easily be incorporated with a just few lines of code.</source>
          <target state="new">Inking is supported on many devices (including mobile devices) and can easily be incorporated with a just few lines of code.</target>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>The following APIs provide access to input:</source>
          <target state="new">The following APIs provide access to input:</target>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>CoreIndependentInputSource<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn298460)</ept> is a new API that allows you to consume raw input on the main thread or a background thread.</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>CoreIndependentInputSource<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn298460)</ept> is a new API that allows you to consume raw input on the main thread or a background thread.</target>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>PointerPoint<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242038)</ept> unifies raw touch, mouse, and pen data into a single, consistent set of interfaces and events that can be consumed on the main thread or background thread by using <bpt id="p3">**</bpt>CoreInput.<ept id="p3">**</ept></source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>PointerPoint<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242038)</ept> unifies raw touch, mouse, and pen data into a single, consistent set of interfaces and events that can be consumed on the main thread or background thread by using <bpt id="p3">**</bpt>CoreInput.<ept id="p3">**</ept></target>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>PointerDevice<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br225633)</ept> is a device API that supports querying device capabilities so that you can determine what input modalities are available on the device.</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>PointerDevice<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br225633)</ept> is a device API that supports querying device capabilities so that you can determine what input modalities are available on the device.</target>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The new <bpt id="p1">[</bpt><bpt id="p2">**</bpt>InkCanvas<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn858535)</ept> XAML control and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>InkPresenter<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn922011)</ept> Windows Runtime APIs allow you to access ink stroke data.</source>
          <target state="new">The new <bpt id="p1">[</bpt><bpt id="p2">**</bpt>InkCanvas<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn858535)</ept> XAML control and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>InkPresenter<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn922011)</ept> Windows Runtime APIs allow you to access ink stroke data.</target>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Writing code</source>
          <target state="new">Writing code</target>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Your programming language options for your <bpt id="p1">[</bpt>Windows 10 project in Visual Studio<ept id="p1">](https://msdn.microsoft.com/en-us/library/windows/apps/dn609832.aspx#target_win10)</ept> include Visual C++, C#, Visual Basic, and JavaScript.</source>
          <target state="new">Your programming language options for your <bpt id="p1">[</bpt>Windows 10 project in Visual Studio<ept id="p1">](https://msdn.microsoft.com/en-us/library/windows/apps/dn609832.aspx#target_win10)</ept> include Visual C++, C#, Visual Basic, and JavaScript.</target>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>For Visual C++, C#, and Visual Basic, you can use XAML for a full-fidelity, native UI experience.</source>
          <target state="new">For Visual C++, C#, and Visual Basic, you can use XAML for a full-fidelity, native UI experience.</target>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>For Visual C++ you can choose to draw with DirectX either instead of or as well as using XAML.</source>
          <target state="new">For Visual C++ you can choose to draw with DirectX either instead of or as well as using XAML.</target>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>For JavaScript, your presentation layer will be HTML, and HTML is of course a cross-platform web standard.</source>
          <target state="new">For JavaScript, your presentation layer will be HTML, and HTML is of course a cross-platform web standard.</target>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Much of your code and UI will be universal and it will run the same way everywhere.</source>
          <target state="new">Much of your code and UI will be universal and it will run the same way everywhere.</target>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>But for code tailored to particular device families, and for UI tailored to particular form factors, you'll have the option to use adaptive code and adaptive UI.</source>
          <target state="new">But for code tailored to particular device families, and for UI tailored to particular form factors, you'll have the option to use adaptive code and adaptive UI.</target>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Let's look at these different cases.</source>
          <target state="new">Let's look at these different cases.</target>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Calling an API that's implemented by your target device family</source>
          <target state="new">Calling an API that's implemented by your target device family</target>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Whenever you want to call an API, you'll need to know whether the API is implemented by the device family that your app is targeting.</source>
          <target state="new">Whenever you want to call an API, you'll need to know whether the API is implemented by the device family that your app is targeting.</target>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>If in doubt, you can look it up in the API reference documentation.</source>
          <target state="new">If in doubt, you can look it up in the API reference documentation.</target>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>If you open the relevant topic and look at the Requirements section, you'll see what the implementing device family is.</source>
          <target state="new">If you open the relevant topic and look at the Requirements section, you'll see what the implementing device family is.</target>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Let's say that your app is targeting version 10.0.x.0 of the universal device family and you want to call members of the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows.UI.Core.SystemNavigationManager<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn893595)</ept> class.</source>
          <target state="new">Let's say that your app is targeting version 10.0.x.0 of the universal device family and you want to call members of the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows.UI.Core.SystemNavigationManager<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn893595)</ept> class.</target>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>In this example, the device family is "Universal".</source>
          <target state="new">In this example, the device family is "Universal".</target>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>It's a good idea to further confirm that the class members that you want to call are also within your target, and in this case they are.</source>
          <target state="new">It's a good idea to further confirm that the class members that you want to call are also within your target, and in this case they are.</target>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>So in this example, you now know that the APIs are guaranteed to be present on every device that your app can be installed on, and you can call the APIs in your code just like you normally would.</source>
          <target state="new">So in this example, you now know that the APIs are guaranteed to be present on every device that your app can be installed on, and you can call the APIs in your code just like you normally would.</target>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>As another example, imagine that your app is targeting version 10.0.x.0 of the Xbox device family, and the reference topic for an API that you want to call says that the API was introduced in version 10.0.x.0 of the Xbox device family.</source>
          <target state="new">As another example, imagine that your app is targeting version 10.0.x.0 of the Xbox device family, and the reference topic for an API that you want to call says that the API was introduced in version 10.0.x.0 of the Xbox device family.</target>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>In that case, again, the API is guaranteed to be present on every device that your app can be installed on.</source>
          <target state="new">In that case, again, the API is guaranteed to be present on every device that your app can be installed on.</target>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>So you would be able to call that API in your code in the normal way.</source>
          <target state="new">So you would be able to call that API in your code in the normal way.</target>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Note that Visual Studio's IntelliSense will not recognize APIs unless they are implemented by your app's target device family or any extension SDKs that you have referenced.</source>
          <target state="new">Note that Visual Studio's IntelliSense will not recognize APIs unless they are implemented by your app's target device family or any extension SDKs that you have referenced.</target>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Consequently, if you haven't referenced any extension SDKs, you can be sure that any APIs that appear in IntelliSense must therefore be in your target device family and you can call them freely.</source>
          <target state="new">Consequently, if you haven't referenced any extension SDKs, you can be sure that any APIs that appear in IntelliSense must therefore be in your target device family and you can call them freely.</target>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Calling an API that's NOT implemented by your target device family</source>
          <target state="new">Calling an API that's NOT implemented by your target device family</target>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>There will be cases when you want to call an API, but your target device family is not listed in the documentation.</source>
          <target state="new">There will be cases when you want to call an API, but your target device family is not listed in the documentation.</target>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>In that case you can opt to write adaptive code in order to call that API.</source>
          <target state="new">In that case you can opt to write adaptive code in order to call that API.</target>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Writing adaptive code with the ApiInformation class</source>
          <target state="new">Writing adaptive code with the ApiInformation class</target>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>There are two steps to write adaptive code.</source>
          <target state="new">There are two steps to write adaptive code.</target>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>The first step is to make the APIs that you want to access available to your project.</source>
          <target state="new">The first step is to make the APIs that you want to access available to your project.</target>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>To do that, add a reference to the extension SDK that represents the device family that owns the APIs that you want to conditionally call.</source>
          <target state="new">To do that, add a reference to the extension SDK that represents the device family that owns the APIs that you want to conditionally call.</target>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Extension SDKs<ept id="p1">](../porting/w8x-to-uwp-porting-to-a-uwp-project.md#extension-sdks)</ept>.</source>
          <target state="new">See <bpt id="p1">[</bpt>Extension SDKs<ept id="p1">](../porting/w8x-to-uwp-porting-to-a-uwp-project.md#extension-sdks)</ept>.</target>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>The second step is to use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows.Foundation.Metadata.ApiInformation<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn949001)</ept> class in a condition in your code to test for the presence of the API you want to call.</source>
          <target state="new">The second step is to use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows.Foundation.Metadata.ApiInformation<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn949001)</ept> class in a condition in your code to test for the presence of the API you want to call.</target>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>This condition is evaluated wherever your app runs, but it evaluates to true only on devices where the API is present and therefore available to call.</source>
          <target state="new">This condition is evaluated wherever your app runs, but it evaluates to true only on devices where the API is present and therefore available to call.</target>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>If you want to call just a small number of APIs, you could use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ApiInformation.IsTypePresent<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn949016)</ept> method like this.</source>
          <target state="new">If you want to call just a small number of APIs, you could use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ApiInformation.IsTypePresent<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn949016)</ept> method like this.</target>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>In this case we can be confident that the presence of the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>HardwareButtons<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/jj207557)</ept> class implies the presence of the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>CameraPressed<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn653805)</ept> event, because the class and the member have the same requirements info.</source>
          <target state="new">In this case we can be confident that the presence of the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>HardwareButtons<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/jj207557)</ept> class implies the presence of the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>CameraPressed<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn653805)</ept> event, because the class and the member have the same requirements info.</target>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>But in time, new members will be added to already-introduced classes, and those members will have later "introduced in" version numbers.</source>
          <target state="new">But in time, new members will be added to already-introduced classes, and those members will have later "introduced in" version numbers.</target>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>In such cases, instead of using <bpt id="p1">**</bpt>IsTypePresent<ept id="p1">**</ept>, you can test for the presence of individual members by using <bpt id="p2">**</bpt>IsEventPresent<ept id="p2">**</ept>, <bpt id="p3">**</bpt>IsMethodPresent<ept id="p3">**</ept>, <bpt id="p4">**</bpt>IsPropertyPresent<ept id="p4">**</ept>, and similar methods.</source>
          <target state="new">In such cases, instead of using <bpt id="p1">**</bpt>IsTypePresent<ept id="p1">**</ept>, you can test for the presence of individual members by using <bpt id="p2">**</bpt>IsEventPresent<ept id="p2">**</ept>, <bpt id="p3">**</bpt>IsMethodPresent<ept id="p3">**</ept>, <bpt id="p4">**</bpt>IsPropertyPresent<ept id="p4">**</ept>, and similar methods.</target>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Here's an example.</source>
          <target state="new">Here's an example.</target>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>The set of APIs within a device family is further broken down into subdivisions known as API contracts.</source>
          <target state="new">The set of APIs within a device family is further broken down into subdivisions known as API contracts.</target>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">**</bpt>ApiInformation.IsApiContractPresent<ept id="p1">**</ept> method to test for the presence of an API contract.</source>
          <target state="new">You can use the <bpt id="p1">**</bpt>ApiInformation.IsApiContractPresent<ept id="p1">**</ept> method to test for the presence of an API contract.</target>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>This is useful if you want to test for the presence of a large number of APIs that all exist in the same version of an API contract.</source>
          <target state="new">This is useful if you want to test for the presence of a large number of APIs that all exist in the same version of an API contract.</target>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Win32 APIs in the UWP</source>
          <target state="new">Win32 APIs in the UWP</target>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>A UWP app or Windows Runtime Component written in C++/CX has access to the Win32 APIs that are part of the UWP.</source>
          <target state="new">A UWP app or Windows Runtime Component written in C++/CX has access to the Win32 APIs that are part of the UWP.</target>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>These Win32 APIs are implemented by all Windows 10 device families.</source>
          <target state="new">These Win32 APIs are implemented by all Windows 10 device families.</target>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Link your app with Windowsapp.lib.</source>
          <target state="new">Link your app with Windowsapp.lib.</target>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Windowsapp.lib is an "umbrella" lib that provides the exports for the UWP APIs.</source>
          <target state="new">Windowsapp.lib is an "umbrella" lib that provides the exports for the UWP APIs.</target>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Linking to Windowsapp.lib will add to your app dependencies on dlls that are present on all Windows 10 device families.</source>
          <target state="new">Linking to Windowsapp.lib will add to your app dependencies on dlls that are present on all Windows 10 device families.</target>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>For the full list of Win32 APIs available to UWP apps, see <bpt id="p1">[</bpt>API Sets for UWP apps<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/mt186421)</ept> and <bpt id="p2">[</bpt>Dlls for UWP apps<ept id="p2">](https://msdn.microsoft.com/library/windows/desktop/mt186422)</ept>.</source>
          <target state="new">For the full list of Win32 APIs available to UWP apps, see <bpt id="p1">[</bpt>API Sets for UWP apps<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/mt186421)</ept> and <bpt id="p2">[</bpt>Dlls for UWP apps<ept id="p2">](https://msdn.microsoft.com/library/windows/desktop/mt186422)</ept>.</target>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>User experience</source>
          <target state="new">User experience</target>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>A Universal Windows app allows you to take advantage of the unique capabilities of the device on which it is running.</source>
          <target state="new">A Universal Windows app allows you to take advantage of the unique capabilities of the device on which it is running.</target>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Your app can make use of all of the power of a desktop device, the natural interaction of direct manipulation on a tablet (including touch and pen input), the portability and convenience of mobile devices, and the collaborative power of <bpt id="p1">[</bpt>Surface Hub<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=526365)</ept>.</source>
          <target state="new">Your app can make use of all of the power of a desktop device, the natural interaction of direct manipulation on a tablet (including touch and pen input), the portability and convenience of mobile devices, and the collaborative power of <bpt id="p1">[</bpt>Surface Hub<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=526365)</ept>.</target>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>Good <bpt id="p1">[</bpt>design<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=258848)</ept> is the process of deciding how users will interact with your app, as well as how it will look and function.</source>
          <target state="new">Good <bpt id="p1">[</bpt>design<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=258848)</ept> is the process of deciding how users will interact with your app, as well as how it will look and function.</target>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>User experience plays a huge part in determining how happy people will be with your app, so don't skimp on this step.</source>
          <target state="new">User experience plays a huge part in determining how happy people will be with your app, so don't skimp on this step.</target>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Design basics<ept id="p1">](https://dev.windows.com/en-us/design)</ept> introduce you to designing a Universal Windows app.</source>
          <target state="new"><bpt id="p1">[</bpt>Design basics<ept id="p1">](https://dev.windows.com/en-us/design)</ept> introduce you to designing a Universal Windows app.</target>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>See the <bpt id="p1">[</bpt>Introduction to Universal Windows Platform (UWP) apps for designers<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn958439)</ept> for information on designing UWP apps that delight your users.</source>
          <target state="new">See the <bpt id="p1">[</bpt>Introduction to Universal Windows Platform (UWP) apps for designers<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn958439)</ept> for information on designing UWP apps that delight your users.</target>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>Before you start coding, see the <bpt id="p1">[</bpt>device primer<ept id="p1">](../input-and-devices/device-primer.md)</ept> to help you think through the interaction experience of using your app on all the different form factors you want to target.</source>
          <target state="new">Before you start coding, see the <bpt id="p1">[</bpt>device primer<ept id="p1">](../input-and-devices/device-primer.md)</ept> to help you think through the interaction experience of using your app on all the different form factors you want to target.</target>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>windows-powered devices</source>
          <target state="new">windows-powered devices</target>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>In addition to interaction on different devices, <bpt id="p1">[</bpt>plan your app<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh465427)</ept> to embrace the benefits of working across multiple devices.</source>
          <target state="new">In addition to interaction on different devices, <bpt id="p1">[</bpt>plan your app<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh465427)</ept> to embrace the benefits of working across multiple devices.</target>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="new">For example:</target>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Use <bpt id="p1">[</bpt>cloud services<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=526377)</ept> to sync across devices.</source>
          <target state="new">Use <bpt id="p1">[</bpt>cloud services<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=526377)</ept> to sync across devices.</target>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>Learn how to <bpt id="p1">[</bpt>connect to web services<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/hh761504)</ept> in support of your app experience.</source>
          <target state="new">Learn how to <bpt id="p1">[</bpt>connect to web services<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/hh761504)</ept> in support of your app experience.</target>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Consider how you can support users moving from one device to another, picking up where they left off.</source>
          <target state="new">Consider how you can support users moving from one device to another, picking up where they left off.</target>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Include <bpt id="p1">[</bpt>notifications<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/mt187203)</ept> and <bpt id="p2">[</bpt>in-app purchases<ept id="p2">](https://msdn.microsoft.com/library/windows/apps/mt219684)</ept> in your planning.</source>
          <target state="new">Include <bpt id="p1">[</bpt>notifications<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/mt187203)</ept> and <bpt id="p2">[</bpt>in-app purchases<ept id="p2">](https://msdn.microsoft.com/library/windows/apps/mt219684)</ept> in your planning.</target>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>These features should work across devices.</source>
          <target state="new">These features should work across devices.</target>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>Design your workflow using <bpt id="p1">[</bpt>Navigation design basics for UWP apps<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn958438)</ept> to accommodate mobile, small-screen, and large-screen devices.</source>
          <target state="new">Design your workflow using <bpt id="p1">[</bpt>Navigation design basics for UWP apps<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn958438)</ept> to accommodate mobile, small-screen, and large-screen devices.</target>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Lay out your user interface<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn958435)</ept> to respond to different screen sizes and resolutions.</source>
          <target state="new"><bpt id="p1">[</bpt>Lay out your user interface<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn958435)</ept> to respond to different screen sizes and resolutions.</target>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Consider whether there are features of your app that don’t make sense on a small mobile screen.</source>
          <target state="new">Consider whether there are features of your app that don’t make sense on a small mobile screen.</target>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>There may also be areas that don’t make sense on a stationary desktop machine and require a mobile device to light up.</source>
          <target state="new">There may also be areas that don’t make sense on a stationary desktop machine and require a mobile device to light up.</target>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>For example, most scenarios around <bpt id="p1">[</bpt>location<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/mt219698)</ept> imply a mobile device.</source>
          <target state="new">For example, most scenarios around <bpt id="p1">[</bpt>location<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/mt219698)</ept> imply a mobile device.</target>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>Consider how you'll accommodate multiple input modalities.</source>
          <target state="new">Consider how you'll accommodate multiple input modalities.</target>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>See the <bpt id="p1">[</bpt>Guidelines for interactions<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn611861)</ept> to learn how users can interact with your app by using <bpt id="p2">[</bpt>Cortana<ept id="p2">](https://msdn.microsoft.com/library/windows/apps/dn974233)</ept>, <bpt id="p3">[</bpt>Speech<ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn596121)</ept>, <bpt id="p4">[</bpt>Touch interactions<ept id="p4">](https://msdn.microsoft.com/library/windows/apps/hh465370)</ept>, the <bpt id="p5">[</bpt>Touch keyboard<ept id="p5">](https://msdn.microsoft.com/library/windows/apps/hh972345)</ept> and more.</source>
          <target state="new">See the <bpt id="p1">[</bpt>Guidelines for interactions<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn611861)</ept> to learn how users can interact with your app by using <bpt id="p2">[</bpt>Cortana<ept id="p2">](https://msdn.microsoft.com/library/windows/apps/dn974233)</ept>, <bpt id="p3">[</bpt>Speech<ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn596121)</ept>, <bpt id="p4">[</bpt>Touch interactions<ept id="p4">](https://msdn.microsoft.com/library/windows/apps/hh465370)</ept>, the <bpt id="p5">[</bpt>Touch keyboard<ept id="p5">](https://msdn.microsoft.com/library/windows/apps/hh972345)</ept> and more.</target>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>See the <bpt id="p1">[</bpt>Guidelines for text and text input<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn611864)</ept> for more tradition interaction experiences.</source>
          <target state="new">See the <bpt id="p1">[</bpt>Guidelines for text and text input<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn611864)</ept> for more tradition interaction experiences.</target>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>Submit a Universal Windows app through your Dashboard</source>
          <target state="new">Submit a Universal Windows app through your Dashboard</target>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>The new unified Windows Dev Center dashboard lets you manage and submit all of your apps for Windows devices in one place.</source>
          <target state="new">The new unified Windows Dev Center dashboard lets you manage and submit all of your apps for Windows devices in one place.</target>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>New features simplify processes while giving you more control.</source>
          <target state="new">New features simplify processes while giving you more control.</target>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>You'll also find detailed <bpt id="p1">[</bpt>analytic reports<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/mt148522)</ept> combined <bpt id="p2">[</bpt>payout details<ept id="p2">](https://msdn.microsoft.com/library/windows/apps/dn986925)</ept>, ways to <bpt id="p3">[</bpt>promote your app and engage with your customers<ept id="p3">](https://msdn.microsoft.com/library/windows/apps/mt148526)</ept>, and much more.</source>
          <target state="new">You'll also find detailed <bpt id="p1">[</bpt>analytic reports<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/mt148522)</ept> combined <bpt id="p2">[</bpt>payout details<ept id="p2">](https://msdn.microsoft.com/library/windows/apps/dn986925)</ept>, ways to <bpt id="p3">[</bpt>promote your app and engage with your customers<ept id="p3">](https://msdn.microsoft.com/library/windows/apps/mt148526)</ept>, and much more.</target>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Using the unified Windows Dev Center dashboard<ept id="p1">](../publish/using-the-windows-dev-center-dashboard.md)</ept> to learn how to submit your apps for publication in the Windows Store.</source>
          <target state="new">See <bpt id="p1">[</bpt>Using the unified Windows Dev Center dashboard<ept id="p1">](../publish/using-the-windows-dev-center-dashboard.md)</ept> to learn how to submit your apps for publication in the Windows Store.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>