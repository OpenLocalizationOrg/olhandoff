<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-48076a9" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3d2e88a25dd1464063059ec2c07a9e34bf8cce45</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci\files\quickstart-reading-and-writing-files.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Create, write, and read a file</source>
          <target state="new">Create, write, and read a file</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>\[ Updated for UWP apps on Windows 10.</source>
          <target state="new">\[ Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Important APIs</source>
          <target state="new">Important APIs</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>StorageFolder class</source>
          <target state="new">StorageFolder class</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>StorageFile class</source>
          <target state="new">StorageFile class</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>FileIO class</source>
          <target state="new">FileIO class</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Read and write a file using a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StorageFile<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br227171)</ept> object.</source>
          <target state="new">Read and write a file using a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StorageFile<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br227171)</ept> object.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  Also see the <bpt id="p2">[</bpt>File access sample<ept id="p2">](http://go.microsoft.com/fwlink/p/?linkid=619995)</ept>.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  Also see the <bpt id="p2">[</bpt>File access sample<ept id="p2">](http://go.microsoft.com/fwlink/p/?linkid=619995)</ept>.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="new">Prerequisites</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Understand async programming for Universal Windows Platform (UWP) apps</source>
          <target state="new">Understand async programming for Universal Windows Platform (UWP) apps</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You can learn how to write asynchronous apps in C\# or Visual Basic, see <bpt id="p1">[</bpt>Call asynchronous APIs in C\# or Visual Basic<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/mt187337)</ept>.</source>
          <target state="new">You can learn how to write asynchronous apps in C\# or Visual Basic, see <bpt id="p1">[</bpt>Call asynchronous APIs in C\# or Visual Basic<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/mt187337)</ept>.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>To learn how to write asynchronous apps in C++, see <bpt id="p1">[</bpt>Asynchronous programming in C++<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/mt187334)</ept>.</source>
          <target state="new">To learn how to write asynchronous apps in C++, see <bpt id="p1">[</bpt>Asynchronous programming in C++<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/mt187334)</ept>.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Know how to get the file that you want to read from, write to, or both</source>
          <target state="new">Know how to get the file that you want to read from, write to, or both</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>You can learn how to get a file by using a file picker in <bpt id="p1">[</bpt>Open files and folders with a picker<ept id="p1">](quickstart-using-file-and-folder-pickers.md)</ept>.</source>
          <target state="new">You can learn how to get a file by using a file picker in <bpt id="p1">[</bpt>Open files and folders with a picker<ept id="p1">](quickstart-using-file-and-folder-pickers.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Creating a file</source>
          <target state="new">Creating a file</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Here's how to create a file in the app's local folder.</source>
          <target state="new">Here's how to create a file in the app's local folder.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If it already exists, we replace it.</source>
          <target state="new">If it already exists, we replace it.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Writing to a file</source>
          <target state="new">Writing to a file</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Here's how to write to a writable file on disk using the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StorageFile<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br227171)</ept> class.</source>
          <target state="new">Here's how to write to a writable file on disk using the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StorageFile<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br227171)</ept> class.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The common first step for each of the ways of writing to a file (unless you're writing to the file immediately after creating it) is to get the file with <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StorageFolder.GetFileAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br227272)</ept>.</source>
          <target state="new">The common first step for each of the ways of writing to a file (unless you're writing to the file immediately after creating it) is to get the file with <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StorageFolder.GetFileAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br227272)</ept>.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Writing text to a file</source>
          <target state="new">Writing text to a file</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Write text to your file by calling the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>WriteTextAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh701505)</ept> method of the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>FileIO<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/hh701440)</ept> class.</source>
          <target state="new">Write text to your file by calling the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>WriteTextAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh701505)</ept> method of the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>FileIO<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/hh701440)</ept> class.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Writing bytes to a file by using a buffer (2 steps)</source>
          <target state="new">Writing bytes to a file by using a buffer (2 steps)</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>First, call <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ConvertStringToBinary<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br241385)</ept> to get a buffer of the bytes (based on an arbitrary string) that you want to write to your file.</source>
          <target state="new">First, call <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ConvertStringToBinary<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br241385)</ept> to get a buffer of the bytes (based on an arbitrary string) that you want to write to your file.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Then write the bytes from your buffer to your file by calling the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>WriteBufferAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh701490)</ept> method of the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>FileIO<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/hh701440)</ept> class.</source>
          <target state="new">Then write the bytes from your buffer to your file by calling the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>WriteBufferAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh701490)</ept> method of the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>FileIO<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/hh701440)</ept> class.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Writing text to a file by using a stream (4 steps)</source>
          <target state="new">Writing text to a file by using a stream (4 steps)</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>First, open the file by calling the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StorageFile.OpenAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn889851)</ept> method.</source>
          <target state="new">First, open the file by calling the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StorageFile.OpenAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn889851)</ept> method.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>It returns a stream of the file's content when the open operation completes.</source>
          <target state="new">It returns a stream of the file's content when the open operation completes.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Next, get an output stream by calling the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>GetOutputStreamAt<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br241738)</ept> method from the <ph id="ph1">`stream`</ph>.</source>
          <target state="new">Next, get an output stream by calling the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>GetOutputStreamAt<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br241738)</ept> method from the <ph id="ph1">`stream`</ph>.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Put this in a <bpt id="p1">**</bpt>using<ept id="p1">**</ept> statement to manage the output stream's lifetime.</source>
          <target state="new">Put this in a <bpt id="p1">**</bpt>using<ept id="p1">**</ept> statement to manage the output stream's lifetime.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Now add this code within the existing <bpt id="p1">**</bpt>using<ept id="p1">**</ept> statement to write to the output stream by creating a new <bpt id="p2">[</bpt><bpt id="p3">**</bpt>DataWriter<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br208154)</ept> object and calling the <bpt id="p4">[</bpt><bpt id="p5">**</bpt>DataWriter.WriteString<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/br241642)</ept> method.</source>
          <target state="new">Now add this code within the existing <bpt id="p1">**</bpt>using<ept id="p1">**</ept> statement to write to the output stream by creating a new <bpt id="p2">[</bpt><bpt id="p3">**</bpt>DataWriter<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br208154)</ept> object and calling the <bpt id="p4">[</bpt><bpt id="p5">**</bpt>DataWriter.WriteString<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/br241642)</ept> method.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Lastly, add this code (within the inner <bpt id="p1">**</bpt>using<ept id="p1">**</ept> statement) to save the text to your file with <bpt id="p2">[</bpt><bpt id="p3">**</bpt>StoreAsync<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br208171)</ept> and close the stream with <bpt id="p4">[</bpt><bpt id="p5">**</bpt>FlushAsync<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/br241729)</ept>.</source>
          <target state="new">Lastly, add this code (within the inner <bpt id="p1">**</bpt>using<ept id="p1">**</ept> statement) to save the text to your file with <bpt id="p2">[</bpt><bpt id="p3">**</bpt>StoreAsync<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br208171)</ept> and close the stream with <bpt id="p4">[</bpt><bpt id="p5">**</bpt>FlushAsync<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/br241729)</ept>.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Reading from a file</source>
          <target state="new">Reading from a file</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Here's how to read from a file on disk using the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StorageFile<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br227171)</ept> class.</source>
          <target state="new">Here's how to read from a file on disk using the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StorageFile<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br227171)</ept> class.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The common first step for each of the ways of reading from a file is to get the file with <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StorageFolder.GetFileAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br227272)</ept>.</source>
          <target state="new">The common first step for each of the ways of reading from a file is to get the file with <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StorageFolder.GetFileAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br227272)</ept>.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Reading text from a file</source>
          <target state="new">Reading text from a file</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Read text from your file by calling the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ReadTextAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh701482)</ept> method of the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>FileIO<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/hh701440)</ept> class.</source>
          <target state="new">Read text from your file by calling the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ReadTextAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh701482)</ept> method of the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>FileIO<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/hh701440)</ept> class.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Reading bytes from a file by using a buffer (2 steps)</source>
          <target state="new">Reading bytes from a file by using a buffer (2 steps)</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>First, read bytes from your buffer to your file by calling the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ReadBufferAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh701468)</ept> method of the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>FileIO<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/hh701440)</ept> class.</source>
          <target state="new">First, read bytes from your buffer to your file by calling the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ReadBufferAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh701468)</ept> method of the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>FileIO<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/hh701440)</ept> class.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Then use a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DataReader<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208119)</ept> object to read first the length of the buffer and then its contents.</source>
          <target state="new">Then use a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DataReader<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208119)</ept> object to read first the length of the buffer and then its contents.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Reading text from a file by using a stream (4 steps)</source>
          <target state="new">Reading text from a file by using a stream (4 steps)</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Open a stream for your file by calling the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StorageFile.OpenAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn889851)</ept> method.</source>
          <target state="new">Open a stream for your file by calling the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StorageFile.OpenAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn889851)</ept> method.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>It returns a stream of the file's content when the operation completes.</source>
          <target state="new">It returns a stream of the file's content when the operation completes.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Get the size of the stream to use later.</source>
          <target state="new">Get the size of the stream to use later.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Get an input stream by calling the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>GetInputStreamAt<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br241737)</ept> method.</source>
          <target state="new">Get an input stream by calling the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>GetInputStreamAt<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br241737)</ept> method.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Put this in a <bpt id="p1">**</bpt>using<ept id="p1">**</ept> statement to manage the stream's lifetime.</source>
          <target state="new">Put this in a <bpt id="p1">**</bpt>using<ept id="p1">**</ept> statement to manage the stream's lifetime.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Specify 0 when you call <bpt id="p1">**</bpt>GetInputStreamAt<ept id="p1">**</ept> to set the position to the beginning of the stream.</source>
          <target state="new">Specify 0 when you call <bpt id="p1">**</bpt>GetInputStreamAt<ept id="p1">**</ept> to set the position to the beginning of the stream.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Lastly, add this code within the existing <bpt id="p1">**</bpt>using<ept id="p1">**</ept> statement to get a <bpt id="p2">[</bpt><bpt id="p3">**</bpt>DataReader<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br208119)</ept> object on the stream then read the text by calling <bpt id="p4">[</bpt><bpt id="p5">**</bpt>DataReader.LoadAsync<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/br208135)</ept> and <bpt id="p6">[</bpt><bpt id="p7">**</bpt>DataReader.ReadString<ept id="p7">**</ept><ept id="p6">](https://msdn.microsoft.com/library/windows/apps/br208147)</ept>.</source>
          <target state="new">Lastly, add this code within the existing <bpt id="p1">**</bpt>using<ept id="p1">**</ept> statement to get a <bpt id="p2">[</bpt><bpt id="p3">**</bpt>DataReader<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br208119)</ept> object on the stream then read the text by calling <bpt id="p4">[</bpt><bpt id="p5">**</bpt>DataReader.LoadAsync<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/br208135)</ept> and <bpt id="p6">[</bpt><bpt id="p7">**</bpt>DataReader.ReadString<ept id="p7">**</ept><ept id="p6">](https://msdn.microsoft.com/library/windows/apps/br208147)</ept>.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>