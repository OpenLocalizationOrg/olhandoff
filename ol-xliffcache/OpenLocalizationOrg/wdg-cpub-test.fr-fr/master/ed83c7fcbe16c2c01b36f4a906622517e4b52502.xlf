<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-48076a9" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ed83c7fcbe16c2c01b36f4a906622517e4b52502</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci1\networking\sockets.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>You can use both Windows.Networking.Sockets and Winsock to communicate with other devices as a Universal Windows Platform (UWP) app developer.</source>
          <target state="new">You can use both Windows.Networking.Sockets and Winsock to communicate with other devices as a Universal Windows Platform (UWP) app developer.</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Sockets</source>
          <target state="new">Sockets</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Sockets</source>
          <target state="new">Sockets</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>\[ Updated for UWP apps on Windows 10.</source>
          <target state="new">\[ Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Important APIs</source>
          <target state="new">Important APIs</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Windows.Networking.Sockets</source>
          <target state="new">Windows.Networking.Sockets</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Winsock</source>
          <target state="new">Winsock</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You can use both <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows.Networking.Sockets<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226960)</ept> and <bpt id="p3">[</bpt>Winsock<ept id="p3">](https://msdn.microsoft.com/library/windows/desktop/ms737523)</ept> to communicate with other devices as a Universal Windows Platform (UWP) app developer.</source>
          <target state="new">You can use both <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows.Networking.Sockets<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226960)</ept> and <bpt id="p3">[</bpt>Winsock<ept id="p3">](https://msdn.microsoft.com/library/windows/desktop/ms737523)</ept> to communicate with other devices as a Universal Windows Platform (UWP) app developer.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This topic provides in-depth guidance on using the <bpt id="p1">**</bpt>Windows.Networking.Sockets<ept id="p1">**</ept> namespace to perform networking operations.</source>
          <target state="new">This topic provides in-depth guidance on using the <bpt id="p1">**</bpt>Windows.Networking.Sockets<ept id="p1">**</ept> namespace to perform networking operations.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Basic TCP socket operations</source>
          <target state="new">Basic TCP socket operations</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A TCP socket provides low-level network data transfers in either direction for long-lived connections.</source>
          <target state="new">A TCP socket provides low-level network data transfers in either direction for long-lived connections.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>TCP sockets are the underlying feature used by most of the network protocols used on the Internet.</source>
          <target state="new">TCP sockets are the underlying feature used by most of the network protocols used on the Internet.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This section shows how to enable a UWP app to send and receive data with a TCP stream socket using the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StreamSocket<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226882)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>StreamSocketListener<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br226906)</ept> classes as part of the <bpt id="p5">[</bpt><bpt id="p6">**</bpt>Windows.Networking.Sockets<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/br226960)</ept> namespace.</source>
          <target state="new">This section shows how to enable a UWP app to send and receive data with a TCP stream socket using the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StreamSocket<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226882)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>StreamSocketListener<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br226906)</ept> classes as part of the <bpt id="p5">[</bpt><bpt id="p6">**</bpt>Windows.Networking.Sockets<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/br226960)</ept> namespace.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For this section, we will be creating a very simple app that will function as an echo server and client to demonstrate basic TCP operations.</source>
          <target state="new">For this section, we will be creating a very simple app that will function as an echo server and client to demonstrate basic TCP operations.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Creating a TCP echo server</source>
          <target state="new">Creating a TCP echo server</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The following code example demonstrates how to create a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StreamSocketListener<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226906)</ept> object and start listening for incoming TCP connections.</source>
          <target state="new">The following code example demonstrates how to create a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StreamSocketListener<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226906)</ept> object and start listening for incoming TCP connections.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The following code example implements the SocketListener\_ConnectionReceived event handler that was attached to the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StreamSocketListener.ConnectionReceived<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh701494)</ept> event in the above example.</source>
          <target state="new">The following code example implements the SocketListener\_ConnectionReceived event handler that was attached to the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StreamSocketListener.ConnectionReceived<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh701494)</ept> event in the above example.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This event handler is called by the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StreamSocketListener<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226906)</ept> class every time a remote client has established a connection with the echo server.</source>
          <target state="new">This event handler is called by the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StreamSocketListener<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226906)</ept> class every time a remote client has established a connection with the echo server.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Creating a TCP echo client</source>
          <target state="new">Creating a TCP echo client</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The following code example demonstrates how to create a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StreamSocket<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226882)</ept> object, establish a connection to the remote server, send a request, and receive a response.</source>
          <target state="new">The following code example demonstrates how to create a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StreamSocket<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226882)</ept> object, establish a connection to the remote server, send a request, and receive a response.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Basic UDP socket operations</source>
          <target state="new">Basic UDP socket operations</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>A UDP socket provides low-level network data transfers in either direction for network communication that does not require an established connection.</source>
          <target state="new">A UDP socket provides low-level network data transfers in either direction for network communication that does not require an established connection.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Because UDP sockets do not maintain connection on both endpoints they provide fast and simple solution for networking between remote machines.</source>
          <target state="new">Because UDP sockets do not maintain connection on both endpoints they provide fast and simple solution for networking between remote machines.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>However, UDP sockets do not ensure integrity of the network packets or whether they make it to the remote destination at all.</source>
          <target state="new">However, UDP sockets do not ensure integrity of the network packets or whether they make it to the remote destination at all.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Some examples of applications that use UDP sockets are local network discovery and local chat clients.</source>
          <target state="new">Some examples of applications that use UDP sockets are local network discovery and local chat clients.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This section demonstrates the use of the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DatagramSocket<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br241319)</ept> class to sending and receiving UDP messages by creating a simple echo server and client.</source>
          <target state="new">This section demonstrates the use of the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DatagramSocket<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br241319)</ept> class to sending and receiving UDP messages by creating a simple echo server and client.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Creating a UDP echo server</source>
          <target state="new">Creating a UDP echo server</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The following code example demonstrates how to create a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DatagramSocket<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br241319)</ept> object and bind it to a specific port so that you can listen for incoming UDP messages.</source>
          <target state="new">The following code example demonstrates how to create a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DatagramSocket<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br241319)</ept> object and bind it to a specific port so that you can listen for incoming UDP messages.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The following code example implements the <bpt id="p1">**</bpt>Socket\_MessageReceived<ept id="p1">**</ept> event handler to read a message that was received from a client and send the same message back.</source>
          <target state="new">The following code example implements the <bpt id="p1">**</bpt>Socket\_MessageReceived<ept id="p1">**</ept> event handler to read a message that was received from a client and send the same message back.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Creating a UDP echo client</source>
          <target state="new">Creating a UDP echo client</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The following code example demonstrates how to create a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DatagramSocket<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br241319)</ept> object and bind it to a specific port so that you can listen for incoming UDP messages and send a UDP message to the UDP echo server.</source>
          <target state="new">The following code example demonstrates how to create a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DatagramSocket<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br241319)</ept> object and bind it to a specific port so that you can listen for incoming UDP messages and send a UDP message to the UDP echo server.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The following code example implements the <bpt id="p1">**</bpt>Socket\_MessageReceived<ept id="p1">**</ept> event handler to read a message that was received from the UDP echo server.</source>
          <target state="new">The following code example implements the <bpt id="p1">**</bpt>Socket\_MessageReceived<ept id="p1">**</ept> event handler to read a message that was received from the UDP echo server.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Background operations and the socket broker</source>
          <target state="new">Background operations and the socket broker</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>If your app receives connections or data on sockets, then you must be prepared to perform those operations properly while your app is not in the foreground.</source>
          <target state="new">If your app receives connections or data on sockets, then you must be prepared to perform those operations properly while your app is not in the foreground.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>To do so, you use the socket broker.</source>
          <target state="new">To do so, you use the socket broker.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>For more information on how to use the socket broker, see <bpt id="p1">[</bpt>Network communications in the background<ept id="p1">](network-communications-in-the-background.md)</ept>.</source>
          <target state="new">For more information on how to use the socket broker, see <bpt id="p1">[</bpt>Network communications in the background<ept id="p1">](network-communications-in-the-background.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Batched sends</source>
          <target state="new">Batched sends</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Starting with Windows 10, Windows.Networking.Sockets supports batched sends, a way for you to send multiple buffers of data together with much lower context-switching overhead than if you send each of the buffers separately.</source>
          <target state="new">Starting with Windows 10, Windows.Networking.Sockets supports batched sends, a way for you to send multiple buffers of data together with much lower context-switching overhead than if you send each of the buffers separately.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This is especially useful if your app is doing VoIP, VPN, or other tasks which involve moving a lot of data as efficiently as possible.</source>
          <target state="new">This is especially useful if your app is doing VoIP, VPN, or other tasks which involve moving a lot of data as efficiently as possible.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Each call to WriteAsync on a socket triggers a kernel transition to reach the network stack.</source>
          <target state="new">Each call to WriteAsync on a socket triggers a kernel transition to reach the network stack.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>When an app writes many buffers at a time, each write incurs a separate kernel transition, and this creates substantial overhead.</source>
          <target state="new">When an app writes many buffers at a time, each write incurs a separate kernel transition, and this creates substantial overhead.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The new batched sends pattern optimizes the frequency of kernel transitions.</source>
          <target state="new">The new batched sends pattern optimizes the frequency of kernel transitions.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>This functionality is currently limited to <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StreamSocket<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226882)</ept> and connected <bpt id="p3">[</bpt><bpt id="p4">**</bpt>DatagramSocket<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br241319)</ept> instances.</source>
          <target state="new">This functionality is currently limited to <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StreamSocket<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226882)</ept> and connected <bpt id="p3">[</bpt><bpt id="p4">**</bpt>DatagramSocket<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br241319)</ept> instances.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Here is an example of how an app would send a large number of buffers in a non-optimal way.</source>
          <target state="new">Here is an example of how an app would send a large number of buffers in a non-optimal way.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>This example shows a more efficient way to send a large number of buffers.</source>
          <target state="new">This example shows a more efficient way to send a large number of buffers.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Because this technique uses features unique to the C# language, it is only available to C# programmers.</source>
          <target state="new">Because this technique uses features unique to the C# language, it is only available to C# programmers.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>By sending multiple packets at a time, this example enables the system to batch sends, and thus optimize kernel transitions for improved performance.</source>
          <target state="new">By sending multiple packets at a time, this example enables the system to batch sends, and thus optimize kernel transitions for improved performance.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>This example shows another way to send a large number of buffers in a way that's compatible with batched sends.</source>
          <target state="new">This example shows another way to send a large number of buffers in a way that's compatible with batched sends.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>And since it doesn't use any C#-specific features, it is applicable for all languages (though it is demonstrated here in C#).</source>
          <target state="new">And since it doesn't use any C#-specific features, it is applicable for all languages (though it is demonstrated here in C#).</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Instead, it uses changed behavior in the <bpt id="p1">**</bpt>OutputStream<ept id="p1">**</ept> member of the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>StreamSocket<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br226882)</ept> and <bpt id="p4">[</bpt><bpt id="p5">**</bpt>DatagramSocket<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/br241319)</ept> classes that is new in Windows 10.</source>
          <target state="new">Instead, it uses changed behavior in the <bpt id="p1">**</bpt>OutputStream<ept id="p1">**</ept> member of the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>StreamSocket<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br226882)</ept> and <bpt id="p4">[</bpt><bpt id="p5">**</bpt>DatagramSocket<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/br241319)</ept> classes that is new in Windows 10.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>In earlier versions of Windows, <bpt id="p1">**</bpt>FlushAsync<ept id="p1">**</ept> returned immediately, and did not guarantee that all operations on the stream had completed yet.</source>
          <target state="new">In earlier versions of Windows, <bpt id="p1">**</bpt>FlushAsync<ept id="p1">**</ept> returned immediately, and did not guarantee that all operations on the stream had completed yet.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>In Windows 10, the behavior has changed.</source>
          <target state="new">In Windows 10, the behavior has changed.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>FlushAsync<ept id="p1">**</ept> is now guaranteed to return after all operations on the output stream have completed.</source>
          <target state="new"><bpt id="p1">**</bpt>FlushAsync<ept id="p1">**</ept> is now guaranteed to return after all operations on the output stream have completed.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>There are some important limitations imposed by using batched writes in your code.</source>
          <target state="new">There are some important limitations imposed by using batched writes in your code.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>You cannot modify the contents of the <bpt id="p1">**</bpt>IBuffer<ept id="p1">**</ept> instances being written until the asynchronous write is complete.</source>
          <target state="new">You cannot modify the contents of the <bpt id="p1">**</bpt>IBuffer<ept id="p1">**</ept> instances being written until the asynchronous write is complete.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>FlushAsync<ept id="p1">**</ept> pattern only works on <bpt id="p2">**</bpt>StreamSocket.OutputStream<ept id="p2">**</ept> and <bpt id="p3">**</bpt>DatagramSocket.OutputStream<ept id="p3">**</ept>.</source>
          <target state="new">The <bpt id="p1">**</bpt>FlushAsync<ept id="p1">**</ept> pattern only works on <bpt id="p2">**</bpt>StreamSocket.OutputStream<ept id="p2">**</ept> and <bpt id="p3">**</bpt>DatagramSocket.OutputStream<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>FlushAsync<ept id="p1">**</ept> pattern only works in Windows 10 and onward.</source>
          <target state="new">The <bpt id="p1">**</bpt>FlushAsync<ept id="p1">**</ept> pattern only works in Windows 10 and onward.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>In other cases, use <bpt id="p1">**</bpt>Task.WaitAll<ept id="p1">**</ept> instead of the <bpt id="p2">**</bpt>FlushAsync<ept id="p2">**</ept> pattern.</source>
          <target state="new">In other cases, use <bpt id="p1">**</bpt>Task.WaitAll<ept id="p1">**</ept> instead of the <bpt id="p2">**</bpt>FlushAsync<ept id="p2">**</ept> pattern.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Port sharing for DatagramSocket</source>
          <target state="new">Port sharing for DatagramSocket</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Windows 10 introduces a new <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DatagramSocketControl<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh701190)</ept> property, <bpt id="p3">[</bpt><bpt id="p4">**</bpt>MulticastOnly<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn895368)</ept>, which enables you to specify that the <bpt id="p5">**</bpt>DatagramSocket<ept id="p5">**</ept> in question is able to coexist with other Win32 or WinRT multicast sockets bound to the same address/port.</source>
          <target state="new">Windows 10 introduces a new <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DatagramSocketControl<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh701190)</ept> property, <bpt id="p3">[</bpt><bpt id="p4">**</bpt>MulticastOnly<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/dn895368)</ept>, which enables you to specify that the <bpt id="p5">**</bpt>DatagramSocket<ept id="p5">**</ept> in question is able to coexist with other Win32 or WinRT multicast sockets bound to the same address/port.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Providing a client certificate with the StreamSocket class</source>
          <target state="new">Providing a client certificate with the StreamSocket class</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows.Networking.StreamSocket<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226882)</ept> class supports using SSL/TLS to authenticate the server the app is talking to.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows.Networking.StreamSocket<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226882)</ept> class supports using SSL/TLS to authenticate the server the app is talking to.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>In certain cases, the app also needs to authenticate itself to the server using a TLS client certificate.</source>
          <target state="new">In certain cases, the app also needs to authenticate itself to the server using a TLS client certificate.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>In Windows 10, you can provide a client certificate on the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StreamSocket.Control<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226893)</ept> object (this must be set before the TLS handshake is started).</source>
          <target state="new">In Windows 10, you can provide a client certificate on the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StreamSocket.Control<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226893)</ept> object (this must be set before the TLS handshake is started).</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>If the server requests the client certificate, Windows will respond with the certificate provided.</source>
          <target state="new">If the server requests the client certificate, Windows will respond with the certificate provided.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Here is a code snippet showing how to implement this:</source>
          <target state="new">Here is a code snippet showing how to implement this:</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Exceptions in Windows.Networking.Sockets</source>
          <target state="new">Exceptions in Windows.Networking.Sockets</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The constructor for the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>HostName<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br207113)</ept> class used with sockets can throw an exception if the string passed is not a valid hostname (contains characters that are not allowed in a host name).</source>
          <target state="new">The constructor for the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>HostName<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br207113)</ept> class used with sockets can throw an exception if the string passed is not a valid hostname (contains characters that are not allowed in a host name).</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>If an app gets input from the user for the <bpt id="p1">**</bpt>HostName<ept id="p1">**</ept>, the constructor should be in a try/catch block.</source>
          <target state="new">If an app gets input from the user for the <bpt id="p1">**</bpt>HostName<ept id="p1">**</ept>, the constructor should be in a try/catch block.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>If an exception is thrown, the app can notify the user and request a new hostname.</source>
          <target state="new">If an exception is thrown, the app can notify the user and request a new hostname.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows.Networking.Sockets<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226960)</ept> namespace has convenient helper methods and enumerations for handling errors when using sockets and WebSockets.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows.Networking.Sockets<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226960)</ept> namespace has convenient helper methods and enumerations for handling errors when using sockets and WebSockets.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>This can be useful for handling specific network exceptions differently in your app.</source>
          <target state="new">This can be useful for handling specific network exceptions differently in your app.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>An error encountered on <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DatagramSocket<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br241319)</ept>, <bpt id="p3">[</bpt><bpt id="p4">**</bpt>StreamSocket<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br226882)</ept>, or <bpt id="p5">[</bpt><bpt id="p6">**</bpt>StreamSocketListener<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/br226906)</ept> operation is returned as an <bpt id="p7">**</bpt>HRESULT<ept id="p7">**</ept> value.</source>
          <target state="new">An error encountered on <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DatagramSocket<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br241319)</ept>, <bpt id="p3">[</bpt><bpt id="p4">**</bpt>StreamSocket<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br226882)</ept>, or <bpt id="p5">[</bpt><bpt id="p6">**</bpt>StreamSocketListener<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/br226906)</ept> operation is returned as an <bpt id="p7">**</bpt>HRESULT<ept id="p7">**</ept> value.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SocketError.GetStatus<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh701462)</ept> method is used to convert a network error from a socket operation to a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>SocketErrorStatus<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/hh701457)</ept> enumeration value.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>SocketError.GetStatus<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh701462)</ept> method is used to convert a network error from a socket operation to a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>SocketErrorStatus<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/hh701457)</ept> enumeration value.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Most of the <bpt id="p1">**</bpt>SocketErrorStatus<ept id="p1">**</ept> enumeration values correspond to an error returned by the native Windows sockets operation.</source>
          <target state="new">Most of the <bpt id="p1">**</bpt>SocketErrorStatus<ept id="p1">**</ept> enumeration values correspond to an error returned by the native Windows sockets operation.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>An app can filter on specific <bpt id="p1">**</bpt>SocketErrorStatus<ept id="p1">**</ept> enumeration values to modify app behavior depending on the cause of the exception.</source>
          <target state="new">An app can filter on specific <bpt id="p1">**</bpt>SocketErrorStatus<ept id="p1">**</ept> enumeration values to modify app behavior depending on the cause of the exception.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>An error encountered on a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MessageWebSocket<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226842)</ept> or <bpt id="p3">[</bpt><bpt id="p4">**</bpt>StreamWebSocket<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br226923)</ept> operation is returned as an <bpt id="p5">**</bpt>HRESULT<ept id="p5">**</ept> value.</source>
          <target state="new">An error encountered on a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MessageWebSocket<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226842)</ept> or <bpt id="p3">[</bpt><bpt id="p4">**</bpt>StreamWebSocket<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br226923)</ept> operation is returned as an <bpt id="p5">**</bpt>HRESULT<ept id="p5">**</ept> value.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>WebSocketError.GetStatus<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh701529)</ept> method is used to convert a network error from a WebSocket operation to a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>WebErrorStatus<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/hh747818)</ept> enumeration value.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>WebSocketError.GetStatus<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh701529)</ept> method is used to convert a network error from a WebSocket operation to a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>WebErrorStatus<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/hh747818)</ept> enumeration value.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Most of the <bpt id="p1">**</bpt>WebErrorStatus<ept id="p1">**</ept> enumeration values correspond to an error returned by the native HTTP client operation.</source>
          <target state="new">Most of the <bpt id="p1">**</bpt>WebErrorStatus<ept id="p1">**</ept> enumeration values correspond to an error returned by the native HTTP client operation.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>An app can filter on specific <bpt id="p1">**</bpt>WebErrorStatus<ept id="p1">**</ept> enumeration values to modify app behavior depending on the cause of the exception.</source>
          <target state="new">An app can filter on specific <bpt id="p1">**</bpt>WebErrorStatus<ept id="p1">**</ept> enumeration values to modify app behavior depending on the cause of the exception.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>For parameter validation errors, an app can also use the <bpt id="p1">**</bpt>HRESULT<ept id="p1">**</ept> from the exception to learn more detailed information on the error that caused the exception.</source>
          <target state="new">For parameter validation errors, an app can also use the <bpt id="p1">**</bpt>HRESULT<ept id="p1">**</ept> from the exception to learn more detailed information on the error that caused the exception.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Possible <bpt id="p1">**</bpt>HRESULT<ept id="p1">**</ept> values are listed in the <bpt id="p2">*</bpt>Winerror.h<ept id="p2">*</ept> header file.</source>
          <target state="new">Possible <bpt id="p1">**</bpt>HRESULT<ept id="p1">**</ept> values are listed in the <bpt id="p2">*</bpt>Winerror.h<ept id="p2">*</ept> header file.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>For most parameter validation errors, the <bpt id="p1">**</bpt>HRESULT<ept id="p1">**</ept> returned is <bpt id="p2">**</bpt>E\_INVALIDARG<ept id="p2">**</ept>.</source>
          <target state="new">For most parameter validation errors, the <bpt id="p1">**</bpt>HRESULT<ept id="p1">**</ept> returned is <bpt id="p2">**</bpt>E\_INVALIDARG<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The Winsock API</source>
          <target state="new">The Winsock API</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>You can use <bpt id="p1">[</bpt>Winsock<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ms740673)</ept> in your UWP app, as well.</source>
          <target state="new">You can use <bpt id="p1">[</bpt>Winsock<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ms740673)</ept> in your UWP app, as well.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The supported Winsock API is based on that of Windows Phone 8.1Microsoft Silverlight and continues to support most of the types, properties and methods (some APIs that are considered obsolete have been removed).</source>
          <target state="new">The supported Winsock API is based on that of Windows Phone 8.1Microsoft Silverlight and continues to support most of the types, properties and methods (some APIs that are considered obsolete have been removed).</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>You can find more information on Winsock programming <bpt id="p1">[</bpt>here<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ms740673)</ept>.</source>
          <target state="new">You can find more information on Winsock programming <bpt id="p1">[</bpt>here<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/ms740673)</ept>.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>