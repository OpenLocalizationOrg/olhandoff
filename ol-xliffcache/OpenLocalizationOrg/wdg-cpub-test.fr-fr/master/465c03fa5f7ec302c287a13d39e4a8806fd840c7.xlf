<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-48076a9" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">465c03fa5f7ec302c287a13d39e4a8806fd840c7</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci1\porting\w8x-to-uwp-porting-to-a-uwp-project.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>You have two options when you begin the porting process.</source>
          <target state="new">You have two options when you begin the porting process.</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Porting a Windows Runtime 8.x project to a UWP project'</source>
          <target state="new">Porting a Windows Runtime 8.x project to a UWP project'</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Porting a Windows Runtime 8.x project to a UWP project</source>
          <target state="new">Porting a Windows Runtime 8.x project to a UWP project</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>\[ Updated for UWP apps on Windows 10.</source>
          <target state="new">\[ Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>You have two options when you begin the porting process.</source>
          <target state="new">You have two options when you begin the porting process.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>One is to edit a copy of your existing project files, including the app package manifest (for that option, see the info about updating your project files in <bpt id="p1">[</bpt>Migrate apps to the Universal Windows Platform (UWP)<ept id="p1">](https://msdn.microsoft.com/library/mt148501.aspx)</ept>).</source>
          <target state="new">One is to edit a copy of your existing project files, including the app package manifest (for that option, see the info about updating your project files in <bpt id="p1">[</bpt>Migrate apps to the Universal Windows Platform (UWP)<ept id="p1">](https://msdn.microsoft.com/library/mt148501.aspx)</ept>).</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The other option is to create a new Windows 10 project in Visual Studio and copy your files into it.</source>
          <target state="new">The other option is to create a new Windows 10 project in Visual Studio and copy your files into it.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The first section in this topic describes that second option, but the rest of the topic has additional info applicable to both options.</source>
          <target state="new">The first section in this topic describes that second option, but the rest of the topic has additional info applicable to both options.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You can also choose to keep your new Windows 10 project in the same solution as your existing projects and share source code files using a shared project.</source>
          <target state="new">You can also choose to keep your new Windows 10 project in the same solution as your existing projects and share source code files using a shared project.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Or, you can keep the new project in a solution of its own and share source code files using the linked files feature in Visual Studio.</source>
          <target state="new">Or, you can keep the new project in a solution of its own and share source code files using the linked files feature in Visual Studio.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Create the project and copy files to it</source>
          <target state="new">Create the project and copy files to it</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>These steps focus on the option to create a new Windows 10 project in Visual Studio and copy your files into it.</source>
          <target state="new">These steps focus on the option to create a new Windows 10 project in Visual Studio and copy your files into it.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Some of the specifics around how many projects you create, and which files you copy over, will depend on the factors and decisions described in <bpt id="p1">[</bpt>If you have a Universal 8.1 app<ept id="p1">](w8x-to-uwp-root.md#if-you-have-an-81-universal-windows-app)</ept> and the sections that follow it.</source>
          <target state="new">Some of the specifics around how many projects you create, and which files you copy over, will depend on the factors and decisions described in <bpt id="p1">[</bpt>If you have a Universal 8.1 app<ept id="p1">](w8x-to-uwp-root.md#if-you-have-an-81-universal-windows-app)</ept> and the sections that follow it.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>These steps assume the simplest case.</source>
          <target state="new">These steps assume the simplest case.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Launch Microsoft Visual Studio 2015 and create a new Blank Application (Windows Universal) project.</source>
          <target state="new">Launch Microsoft Visual Studio 2015 and create a new Blank Application (Windows Universal) project.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For more info, see <bpt id="p1">[</bpt>Jumpstart your Windows Store app using templates (C#, C++, Visual Basic)<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh768232)</ept>.</source>
          <target state="new">For more info, see <bpt id="p1">[</bpt>Jumpstart your Windows Store app using templates (C#, C++, Visual Basic)<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh768232)</ept>.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Your new project builds an app package (an appx file) that will run on all device families.</source>
          <target state="new">Your new project builds an app package (an appx file) that will run on all device families.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>In your Universal 8.1 app project, identify all the source code files and visual asset files that you want to reuse.</source>
          <target state="new">In your Universal 8.1 app project, identify all the source code files and visual asset files that you want to reuse.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Using File Explorer, copy data models, view models, visual assets, Resource Dictionaries, folder structure, and anything else that you wish to re-use, to your new project.</source>
          <target state="new">Using File Explorer, copy data models, view models, visual assets, Resource Dictionaries, folder structure, and anything else that you wish to re-use, to your new project.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Copy or create sub-folders on disk as necessary.</source>
          <target state="new">Copy or create sub-folders on disk as necessary.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Copy views (for example, MainPage.xaml and MainPage.xaml.cs) into the new project, too.</source>
          <target state="new">Copy views (for example, MainPage.xaml and MainPage.xaml.cs) into the new project, too.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Again, create new sub-folders as necessary, and remove the existing views from the project.</source>
          <target state="new">Again, create new sub-folders as necessary, and remove the existing views from the project.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>But, before you over-write or remove a view that Visual Studio generated, keep a copy because it may be useful to refer to it later.</source>
          <target state="new">But, before you over-write or remove a view that Visual Studio generated, keep a copy because it may be useful to refer to it later.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The first phase of porting a Universal 8.1 app focuses on getting it to look good and work well on one device family.</source>
          <target state="new">The first phase of porting a Universal 8.1 app focuses on getting it to look good and work well on one device family.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Later, you'll turn your attention to making sure the views adapt themselves well to all form factors, and optionally to adding any adaptive code to get the most from a particular device family.</source>
          <target state="new">Later, you'll turn your attention to making sure the views adapt themselves well to all form factors, and optionally to adding any adaptive code to get the most from a particular device family.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, make sure <bpt id="p2">**</bpt>Show All Files<ept id="p2">**</ept> is toggled on.</source>
          <target state="new">In <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, make sure <bpt id="p2">**</bpt>Show All Files<ept id="p2">**</ept> is toggled on.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Select the files that you copied, right-click them, and click <bpt id="p1">**</bpt>Include In Project<ept id="p1">**</ept>.</source>
          <target state="new">Select the files that you copied, right-click them, and click <bpt id="p1">**</bpt>Include In Project<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This will automatically include their containing folders.</source>
          <target state="new">This will automatically include their containing folders.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>You can then toggle <bpt id="p1">**</bpt>Show All Files<ept id="p1">**</ept> off if you like.</source>
          <target state="new">You can then toggle <bpt id="p1">**</bpt>Show All Files<ept id="p1">**</ept> off if you like.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>An alternative workflow, if you prefer, is to use the <bpt id="p1">**</bpt>Add Existing Item<ept id="p1">**</ept> command, having created any necessary sub-folders in the Visual Studio <bpt id="p2">**</bpt>Solution Explorer<ept id="p2">**</ept>.</source>
          <target state="new">An alternative workflow, if you prefer, is to use the <bpt id="p1">**</bpt>Add Existing Item<ept id="p1">**</ept> command, having created any necessary sub-folders in the Visual Studio <bpt id="p2">**</bpt>Solution Explorer<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Double-check that your visual assets have <bpt id="p1">**</bpt>Build Action<ept id="p1">**</ept> set to <bpt id="p2">**</bpt>Content<ept id="p2">**</ept> and <bpt id="p3">**</bpt>Copy to Output Directory<ept id="p3">**</ept> set to <bpt id="p4">**</bpt>Do not copy<ept id="p4">**</ept>.</source>
          <target state="new">Double-check that your visual assets have <bpt id="p1">**</bpt>Build Action<ept id="p1">**</ept> set to <bpt id="p2">**</bpt>Content<ept id="p2">**</ept> and <bpt id="p3">**</bpt>Copy to Output Directory<ept id="p3">**</ept> set to <bpt id="p4">**</bpt>Do not copy<ept id="p4">**</ept>.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>You are likely to see some build errors at this stage.</source>
          <target state="new">You are likely to see some build errors at this stage.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>But, if you know what you need to change, then you can use Visual Studio's <bpt id="p1">**</bpt>Find and Replace<ept id="p1">**</ept> command to make bulk changes to your source code; and in the imperative code editor in Visual Studio, use the <bpt id="p2">**</bpt>Resolve<ept id="p2">**</ept> and <bpt id="p3">**</bpt>Organize Usings<ept id="p3">**</ept> commands on the context menu for more targeted changes.</source>
          <target state="new">But, if you know what you need to change, then you can use Visual Studio's <bpt id="p1">**</bpt>Find and Replace<ept id="p1">**</ept> command to make bulk changes to your source code; and in the imperative code editor in Visual Studio, use the <bpt id="p2">**</bpt>Resolve<ept id="p2">**</ept> and <bpt id="p3">**</bpt>Organize Usings<ept id="p3">**</ept> commands on the context menu for more targeted changes.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Maximizing markup and code reuse</source>
          <target state="new">Maximizing markup and code reuse</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>You will find that refactoring a little, and/or adding adaptive code (which is explained below), will allow you to maximize the markup and code that works across all device families.</source>
          <target state="new">You will find that refactoring a little, and/or adding adaptive code (which is explained below), will allow you to maximize the markup and code that works across all device families.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Here are more details.</source>
          <target state="new">Here are more details.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Files that are common to all device families need no special consideration.</source>
          <target state="new">Files that are common to all device families need no special consideration.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Those files will be used by the app on all the device families that it runs on.</source>
          <target state="new">Those files will be used by the app on all the device families that it runs on.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This includes XAML markup files, imperative source code files, and asset files.</source>
          <target state="new">This includes XAML markup files, imperative source code files, and asset files.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>It is possible for your app to detect the device family that it is running on and navigate to a view that has been designed specifically for that device family.</source>
          <target state="new">It is possible for your app to detect the device family that it is running on and navigate to a view that has been designed specifically for that device family.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For more details, see <bpt id="p1">[</bpt>Detecting the platform your app is running on<ept id="p1">](w8x-to-uwp-input-and-sensors.md#detecting-the-platform)</ept>.</source>
          <target state="new">For more details, see <bpt id="p1">[</bpt>Detecting the platform your app is running on<ept id="p1">](w8x-to-uwp-input-and-sensors.md#detecting-the-platform)</ept>.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>A similar technique that you may find useful if there is no alternative is give a markup file or <bpt id="p1">**</bpt>ResourceDictionary<ept id="p1">**</ept> file (or the folder that contains the file) a special name such that it is automatically loaded at runtime only when your app runs on a particular device family.</source>
          <target state="new">A similar technique that you may find useful if there is no alternative is give a markup file or <bpt id="p1">**</bpt>ResourceDictionary<ept id="p1">**</ept> file (or the folder that contains the file) a special name such that it is automatically loaded at runtime only when your app runs on a particular device family.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>This technique is illustrated in the <bpt id="p1">[</bpt>Bookstore1<ept id="p1">](w8x-to-uwp-case-study-bookstore1.md#an-optional-adjustment)</ept> case study.</source>
          <target state="new">This technique is illustrated in the <bpt id="p1">[</bpt>Bookstore1<ept id="p1">](w8x-to-uwp-case-study-bookstore1.md#an-optional-adjustment)</ept> case study.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>You should be able to remove a lot of the conditional compilation directives in your Universal 8.1 app's source code if you only need to support Windows 10.</source>
          <target state="new">You should be able to remove a lot of the conditional compilation directives in your Universal 8.1 app's source code if you only need to support Windows 10.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Conditional compilation, and adaptive code<ept id="p1">](#reviewing-conditional-compilation)</ept> in this topic.</source>
          <target state="new">See <bpt id="p1">[</bpt>Conditional compilation, and adaptive code<ept id="p1">](#reviewing-conditional-compilation)</ept> in this topic.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>To use features that are not available on all device families (for example, printers, scanners, or the camera button), you can write adaptive code.</source>
          <target state="new">To use features that are not available on all device families (for example, printers, scanners, or the camera button), you can write adaptive code.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>See the third example in <bpt id="p1">[</bpt>Conditional compilation, and adaptive code<ept id="p1">](#reviewing-conditional-compilation)</ept> in this topic.</source>
          <target state="new">See the third example in <bpt id="p1">[</bpt>Conditional compilation, and adaptive code<ept id="p1">](#reviewing-conditional-compilation)</ept> in this topic.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>If you want to support Windows 8.1, Windows Phone 8.1, and Windows 10, then you can keep three projects in the same solution and share code with a Shared project.</source>
          <target state="new">If you want to support Windows 8.1, Windows Phone 8.1, and Windows 10, then you can keep three projects in the same solution and share code with a Shared project.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Alternatively, you can share source code files between projects.</source>
          <target state="new">Alternatively, you can share source code files between projects.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Here's how: in Visual Studio, right-click the project in <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, select <bpt id="p2">**</bpt>Add Existing Item<ept id="p2">**</ept>, select the files to share, and then click <bpt id="p3">**</bpt>Add As Link<ept id="p3">**</ept>.</source>
          <target state="new">Here's how: in Visual Studio, right-click the project in <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, select <bpt id="p2">**</bpt>Add Existing Item<ept id="p2">**</ept>, select the files to share, and then click <bpt id="p3">**</bpt>Add As Link<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Store your source code files in a common folder on the file system where the projects that link to them can see them.</source>
          <target state="new">Store your source code files in a common folder on the file system where the projects that link to them can see them.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>And don't forget to add them to source control.</source>
          <target state="new">And don't forget to add them to source control.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>For reuse at the binary level, rather than the source code level, see <bpt id="p1">[</bpt>Creating Windows Runtime Components in C# and Visual Basic<ept id="p1">](http://msdn.microsoft.com/library/windows/apps/xaml/br230301.aspx)</ept>.</source>
          <target state="new">For reuse at the binary level, rather than the source code level, see <bpt id="p1">[</bpt>Creating Windows Runtime Components in C# and Visual Basic<ept id="p1">](http://msdn.microsoft.com/library/windows/apps/xaml/br230301.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>There are also Portable Class Libraries, which support the subset of .NET APIs that are available in the .NET Framework for Windows 8.1, Windows Phone 8.1, and Windows 10 apps (.NET Core), and the full .NET Framework.</source>
          <target state="new">There are also Portable Class Libraries, which support the subset of .NET APIs that are available in the .NET Framework for Windows 8.1, Windows Phone 8.1, and Windows 10 apps (.NET Core), and the full .NET Framework.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Portable Class Library assemblies are binary compatible with all these platforms.</source>
          <target state="new">Portable Class Library assemblies are binary compatible with all these platforms.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Use Visual Studio to create a project that targets a Portable Class Library.</source>
          <target state="new">Use Visual Studio to create a project that targets a Portable Class Library.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Cross-Platform Development with the Portable Class Library<ept id="p1">](http://msdn.microsoft.com/library/gg597391.aspx)</ept>.</source>
          <target state="new">See <bpt id="p1">[</bpt>Cross-Platform Development with the Portable Class Library<ept id="p1">](http://msdn.microsoft.com/library/gg597391.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Extension SDKs</source>
          <target state="new">Extension SDKs</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Most of the Windows Runtime APIs your Universal 8.1 app already calls are implemented in the set of APIs known as the universal device family.</source>
          <target state="new">Most of the Windows Runtime APIs your Universal 8.1 app already calls are implemented in the set of APIs known as the universal device family.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>But, some are implemented in extension SDKs, and Visual Studio only recognizes APIs that are implemented by your app's target device family or by any extension SDKs that you have referenced.</source>
          <target state="new">But, some are implemented in extension SDKs, and Visual Studio only recognizes APIs that are implemented by your app's target device family or by any extension SDKs that you have referenced.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>If you get compile errors about namespaces or types or members that could not be found, then this is likely to be the cause.</source>
          <target state="new">If you get compile errors about namespaces or types or members that could not be found, then this is likely to be the cause.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Open the API's topic in the API reference documentation and navigate to the Requirements section: that will tell you what the implementing device family is.</source>
          <target state="new">Open the API's topic in the API reference documentation and navigate to the Requirements section: that will tell you what the implementing device family is.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>If that's not your target device family, then to make the API available to your project, you will need a reference to the extension SDK for that device family.</source>
          <target state="new">If that's not your target device family, then to make the API available to your project, you will need a reference to the extension SDK for that device family.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Project<ept id="p1">**</ept> <ph id="ph1">&amp;gt;</ph> <bpt id="p2">**</bpt>Add Reference<ept id="p2">**</ept> <ph id="ph2">&amp;gt;</ph> <bpt id="p3">**</bpt>Windows Universal<ept id="p3">**</ept> <ph id="ph3">&amp;gt;</ph> <bpt id="p4">**</bpt>Extensions<ept id="p4">**</ept> and select the appropriate extension SDK.</source>
          <target state="new">Click <bpt id="p1">**</bpt>Project<ept id="p1">**</ept> <ph id="ph1">&amp;gt;</ph> <bpt id="p2">**</bpt>Add Reference<ept id="p2">**</ept> <ph id="ph2">&amp;gt;</ph> <bpt id="p3">**</bpt>Windows Universal<ept id="p3">**</ept> <ph id="ph3">&amp;gt;</ph> <bpt id="p4">**</bpt>Extensions<ept id="p4">**</ept> and select the appropriate extension SDK.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>For example, if the APIs you want to call are available only in the mobile device family, and they were introduced in version 10.0.x.y, then select <bpt id="p1">**</bpt>Windows Mobile Extensions for the UWP<ept id="p1">**</ept>.</source>
          <target state="new">For example, if the APIs you want to call are available only in the mobile device family, and they were introduced in version 10.0.x.y, then select <bpt id="p1">**</bpt>Windows Mobile Extensions for the UWP<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>That will add the following reference to your project file:</source>
          <target state="new">That will add the following reference to your project file:</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The name and version number match the folders in the installed location of your SDK.</source>
          <target state="new">The name and version number match the folders in the installed location of your SDK.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>For example, the above information matches this folder name:</source>
          <target state="new">For example, the above information matches this folder name:</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Unless your app targets the device family that implements the API, you'll need to use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ApiInformation<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn949001)</ept> class to test for the presence of the API before you call it (this is called adaptive code).</source>
          <target state="new">Unless your app targets the device family that implements the API, you'll need to use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ApiInformation<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn949001)</ept> class to test for the presence of the API before you call it (this is called adaptive code).</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>This condition will then be evaluated wherever your app runs, but it will only evaluate to true on devices where the API is present and therefore available to call.</source>
          <target state="new">This condition will then be evaluated wherever your app runs, but it will only evaluate to true on devices where the API is present and therefore available to call.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Only use extension SDKs and adaptive code after first checking whether a universal API exists.</source>
          <target state="new">Only use extension SDKs and adaptive code after first checking whether a universal API exists.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Some examples are given in the section below.</source>
          <target state="new">Some examples are given in the section below.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Also, see <bpt id="p1">[</bpt>App package manifest<ept id="p1">](#appxpackage)</ept>.</source>
          <target state="new">Also, see <bpt id="p1">[</bpt>App package manifest<ept id="p1">](#appxpackage)</ept>.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Conditional compilation, and adaptive code</source>
          <target state="new">Conditional compilation, and adaptive code</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>If you're using conditional compilation (with C# preprocessor directives) so that your code files work on both Windows 8.1 and Windows Phone 8.1, then you can now review that conditional compilation in light of the convergence work done in Windows 10.</source>
          <target state="new">If you're using conditional compilation (with C# preprocessor directives) so that your code files work on both Windows 8.1 and Windows Phone 8.1, then you can now review that conditional compilation in light of the convergence work done in Windows 10.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Convergence means that, in your Windows 10 app, some conditions can be removed altogether.</source>
          <target state="new">Convergence means that, in your Windows 10 app, some conditions can be removed altogether.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Others change to run-time checks, as demonstrated in the examples below.</source>
          <target state="new">Others change to run-time checks, as demonstrated in the examples below.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>   If you want to support Windows 8.1, Windows Phone 8.1, and Windows 10 in a single code file, then you can do that too.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>   If you want to support Windows 8.1, Windows Phone 8.1, and Windows 10 in a single code file, then you can do that too.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>If you look in your Windows 10 project at the project properties pages, you'll see that the project defines WINDOWS\_UAP as a conditional compilation symbol.</source>
          <target state="new">If you look in your Windows 10 project at the project properties pages, you'll see that the project defines WINDOWS\_UAP as a conditional compilation symbol.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>So, you can use that in combination with WINDOWS\_APP and WINDOWS\_PHONE\_APP.</source>
          <target state="new">So, you can use that in combination with WINDOWS\_APP and WINDOWS\_PHONE\_APP.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>These examples show the simpler case of removing the conditional compilation from a Universal 8.1 app and substituting the equivalent code for a Windows 10 app.</source>
          <target state="new">These examples show the simpler case of removing the conditional compilation from a Universal 8.1 app and substituting the equivalent code for a Windows 10 app.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>This first example shows the usage pattern for the <bpt id="p1">**</bpt>PickSingleFileAsync<ept id="p1">**</ept> API (which applies only to Windows 8.1) and the <bpt id="p2">**</bpt>PickSingleFileAndContinue<ept id="p2">**</ept> API (which applies only to Windows Phone 8.1).</source>
          <target state="new">This first example shows the usage pattern for the <bpt id="p1">**</bpt>PickSingleFileAsync<ept id="p1">**</ept> API (which applies only to Windows 8.1) and the <bpt id="p2">**</bpt>PickSingleFileAndContinue<ept id="p2">**</ept> API (which applies only to Windows Phone 8.1).</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Windows 10 converges on the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PickSingleFileAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/jj635275)</ept> API, so your code simplifies to this:</source>
          <target state="new">Windows 10 converges on the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PickSingleFileAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/jj635275)</ept> API, so your code simplifies to this:</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>In this example, we handle the hardware back button—but only on Windows Phone.</source>
          <target state="new">In this example, we handle the hardware back button—but only on Windows Phone.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>In Windows 10, the back button event is a universal concept.</source>
          <target state="new">In Windows 10, the back button event is a universal concept.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Back buttons implemented in hardware or in software will all raise the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>BackRequested<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn893596)</ept> event, so that's the one to handle.</source>
          <target state="new">Back buttons implemented in hardware or in software will all raise the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>BackRequested<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn893596)</ept> event, so that's the one to handle.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>This final example is similar to the previous one.</source>
          <target state="new">This final example is similar to the previous one.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Here, we handle the hardware camera button—but again, only in the code compiled into the Windows Phone app package.</source>
          <target state="new">Here, we handle the hardware camera button—but again, only in the code compiled into the Windows Phone app package.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>In Windows 10, the hardware camera button is a concept particular to the mobile device family.</source>
          <target state="new">In Windows 10, the hardware camera button is a concept particular to the mobile device family.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Because one app package will be running on all devices, we change our compile-time condition into a run-time condition using what is known as adaptive code.</source>
          <target state="new">Because one app package will be running on all devices, we change our compile-time condition into a run-time condition using what is known as adaptive code.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>To do that, we use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ApiInformation<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn949001)</ept> class to query at run-time for the presence of the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>HardwareButtons<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/jj207557)</ept> class.</source>
          <target state="new">To do that, we use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ApiInformation<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn949001)</ept> class to query at run-time for the presence of the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>HardwareButtons<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/jj207557)</ept> class.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>HardwareButtons<ept id="p1">**</ept> is defined in the mobile extension SDK, so we'll need to add a reference to that SDK to our project for this code to compile.</source>
          <target state="new"><bpt id="p1">**</bpt>HardwareButtons<ept id="p1">**</ept> is defined in the mobile extension SDK, so we'll need to add a reference to that SDK to our project for this code to compile.</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Note, though, that the handler will only be executed on a device that implements the types defined in the mobile extension SDK, and that's the mobile device family.</source>
          <target state="new">Note, though, that the handler will only be executed on a device that implements the types defined in the mobile extension SDK, and that's the mobile device family.</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>So, this code is morally equivalent to the Universal 8.1 code in that it is careful only to use features that are present, although it achieves that in a different way.</source>
          <target state="new">So, this code is morally equivalent to the Universal 8.1 code in that it is careful only to use features that are present, although it achieves that in a different way.</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Also, see <bpt id="p1">[</bpt>Detecting the platform your app is running on<ept id="p1">](w8x-to-uwp-input-and-sensors.md#detecting-the-platform)</ept>.</source>
          <target state="new">Also, see <bpt id="p1">[</bpt>Detecting the platform your app is running on<ept id="p1">](w8x-to-uwp-input-and-sensors.md#detecting-the-platform)</ept>.</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>App package manifest</source>
          <target state="new">App package manifest</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>What's changed in Windows 10<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn705793)</ept> topic lists changes to the package manifest schema reference for Windows 10, including elements that have been added, removed, and changed.</source>
          <target state="new">The <bpt id="p1">[</bpt>What's changed in Windows 10<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn705793)</ept> topic lists changes to the package manifest schema reference for Windows 10, including elements that have been added, removed, and changed.</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>For reference info on all elements, attributes, and types in the schema, see <bpt id="p1">[</bpt>Element Hierarchy<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn934819)</ept>.</source>
          <target state="new">For reference info on all elements, attributes, and types in the schema, see <bpt id="p1">[</bpt>Element Hierarchy<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn934819)</ept>.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>If you're porting a Windows Phone Store app, then ensure that the <bpt id="p1">**</bpt>pm:PhoneIdentity<ept id="p1">**</ept> element in the ported app manifest matches what is in the app manifest of the app you're porting (see the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>pm:PhoneIdentity<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/dn934763)</ept> topic for full details).</source>
          <target state="new">If you're porting a Windows Phone Store app, then ensure that the <bpt id="p1">**</bpt>pm:PhoneIdentity<ept id="p1">**</ept> element in the ported app manifest matches what is in the app manifest of the app you're porting (see the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>pm:PhoneIdentity<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/dn934763)</ept> topic for full details).</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The settings in your project (including any extension SDKs references) determine the API surface area that your app can call.</source>
          <target state="new">The settings in your project (including any extension SDKs references) determine the API surface area that your app can call.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>But, your app package manifest is what determines the actual set of devices that your customers can install your app onto from the Store.</source>
          <target state="new">But, your app package manifest is what determines the actual set of devices that your customers can install your app onto from the Store.</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>For more info, see examples in <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TargetDeviceFamily<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn986903)</ept>.</source>
          <target state="new">For more info, see examples in <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TargetDeviceFamily<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn986903)</ept>.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>You can edit the app package manifest to set various declarations, capabilities, and other settings that some features need.</source>
          <target state="new">You can edit the app package manifest to set various declarations, capabilities, and other settings that some features need.</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>You can use the Visual Studio app package manifest editor to edit it.</source>
          <target state="new">You can use the Visual Studio app package manifest editor to edit it.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>If the <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept> is not shown, choose it from the <bpt id="p2">**</bpt>View<ept id="p2">**</ept> menu.</source>
          <target state="new">If the <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept> is not shown, choose it from the <bpt id="p2">**</bpt>View<ept id="p2">**</ept> menu.</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Double-click <bpt id="p1">**</bpt>Package.appxmanifest<ept id="p1">**</ept>.</source>
          <target state="new">Double-click <bpt id="p1">**</bpt>Package.appxmanifest<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>This opens the manifest editor window.</source>
          <target state="new">This opens the manifest editor window.</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Select the appropriate tab to make changes and then save.</source>
          <target state="new">Select the appropriate tab to make changes and then save.</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The next topic is <bpt id="p1">[</bpt>Troubleshooting<ept id="p1">](w8x-to-uwp-troubleshooting.md)</ept>.</source>
          <target state="new">The next topic is <bpt id="p1">[</bpt>Troubleshooting<ept id="p1">](w8x-to-uwp-troubleshooting.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Related topics</source>
          <target state="new">Related topics</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Develop apps for the Universal Windows Platform</source>
          <target state="new">Develop apps for the Universal Windows Platform</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Jumpstart your Windows Store app using templates (C#, C++, Visual Basic)</source>
          <target state="new">Jumpstart your Windows Store app using templates (C#, C++, Visual Basic)</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Creating Windows Runtime Components</source>
          <target state="new">Creating Windows Runtime Components</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Cross-Platform Development with the Portable Class Library</source>
          <target state="new">Cross-Platform Development with the Portable Class Library</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>