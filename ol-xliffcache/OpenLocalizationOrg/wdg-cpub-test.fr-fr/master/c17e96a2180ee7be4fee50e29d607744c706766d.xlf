<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-48076a9" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c17e96a2180ee7be4fee50e29d607744c706766d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci1\usability\globalizing\prepare-your-app-for-localization.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Prepare your app for localization to other markets, languages, or regions.</source>
          <target state="new">Prepare your app for localization to other markets, languages, or regions.</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Prepare your app for localization</source>
          <target state="new">Prepare your app for localization</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Prepare your app for localization</source>
          <target state="new">Prepare your app for localization</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>\[ Updated for UWP apps on Windows 10.</source>
          <target state="new">\[ Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Prepare your app for localization to other markets, languages, or regions.</source>
          <target state="new">Prepare your app for localization to other markets, languages, or regions.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Before you get started, be sure to read through the <bpt id="p1">[</bpt>do's and don'ts<ept id="p1">](guidelines-and-checklist-for-globalizing-your-app.md)</ept>.</source>
          <target state="new">Before you get started, be sure to read through the <bpt id="p1">[</bpt>do's and don'ts<ept id="p1">](guidelines-and-checklist-for-globalizing-your-app.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Use resource files and qualifiers.</source>
          <target state="new">Use resource files and qualifiers.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Be sure to specify the UI strings of your app in resource files, instead of placing them in your code.</source>
          <target state="new">Be sure to specify the UI strings of your app in resource files, instead of placing them in your code.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For more detail, see <bpt id="p1">[</bpt>Put UI strings into resources<ept id="p1">](put-ui-strings-into-resources.md)</ept>.</source>
          <target state="new">For more detail, see <bpt id="p1">[</bpt>Put UI strings into resources<ept id="p1">](put-ui-strings-into-resources.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Specify images or other file resources with the appropriate language tag in their file or folder.</source>
          <target state="new">Specify images or other file resources with the appropriate language tag in their file or folder.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Be aware that it takes a significant amount of system resources to localize images, audio, and video, so it’s best to use neutral media assets whenever you can.</source>
          <target state="new">Be aware that it takes a significant amount of system resources to localize images, audio, and video, so it’s best to use neutral media assets whenever you can.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>To learn more, see <bpt id="p1">[</bpt>How to name resources using qualifiers<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/hh965324)</ept>.</source>
          <target state="new">To learn more, see <bpt id="p1">[</bpt>How to name resources using qualifiers<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/hh965324)</ept>.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Add contextual comments.</source>
          <target state="new">Add contextual comments.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Add localization comments to your app resource files.</source>
          <target state="new">Add localization comments to your app resource files.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The comments are visible to the localizer, and should provide contextual information that helps the localizer to accurately translate the resources.</source>
          <target state="new">The comments are visible to the localizer, and should provide contextual information that helps the localizer to accurately translate the resources.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The comments should also provide sufficient constraint information on the resource, so that translation does not break the software.</source>
          <target state="new">The comments should also provide sufficient constraint information on the resource, so that translation does not break the software.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Optionally, the comments can be logged by the Makepri.exe tool.</source>
          <target state="new">Optionally, the comments can be logged by the Makepri.exe tool.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>XAML:<ept id="p1">**</ept> Resw files (resources created in Visual Studio for apps using XAML) have a comment element.</source>
          <target state="new"><bpt id="p1">**</bpt>XAML:<ept id="p1">**</ept> Resw files (resources created in Visual Studio for apps using XAML) have a comment element.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="new">For example:</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>HTML:<ept id="p1">**</ept> Resjson files (resources created in Visual Studio for apps using HTML) allow metadata in fields that begin with an underscore, such as comments:</source>
          <target state="new"><bpt id="p1">**</bpt>HTML:<ept id="p1">**</ept> Resjson files (resources created in Visual Studio for apps using HTML) allow metadata in fields that begin with an underscore, such as comments:</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Localize sentences instead of words.</source>
          <target state="new">Localize sentences instead of words.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Consider the following string: "The \{0} could not be synchronized."</source>
          <target state="new">Consider the following string: "The \{0} could not be synchronized."</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>A variety of words could replace \{0}, such as appointment, task, or document.</source>
          <target state="new">A variety of words could replace \{0}, such as appointment, task, or document.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>While this example would appear to work for the English language, it will not work in all cases for the corresponding sentence in German.</source>
          <target state="new">While this example would appear to work for the English language, it will not work in all cases for the corresponding sentence in German.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Notice that in the following German sentences, some of the words in the template string ("Der", "Die", "Das") need to match the parameterized word:</source>
          <target state="new">Notice that in the following German sentences, some of the words in the template string ("Der", "Die", "Das") need to match the parameterized word:</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>English</source>
          <target state="new">English</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>German</source>
          <target state="new">German</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The appointment could not be synchronized.</source>
          <target state="new">The appointment could not be synchronized.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Der Termin konnte nicht synchronisiert werden.</source>
          <target state="new">Der Termin konnte nicht synchronisiert werden.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The task could not be synchronized.</source>
          <target state="new">The task could not be synchronized.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Die Aufgabe konnte nicht synchronisiert werden.</source>
          <target state="new">Die Aufgabe konnte nicht synchronisiert werden.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The document could not be synchronized.</source>
          <target state="new">The document could not be synchronized.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Das Dokument konnte nicht synchronisiert werden.</source>
          <target state="new">Das Dokument konnte nicht synchronisiert werden.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>As another example, consider the sentence "Remind me in {0} minute(s)."</source>
          <target state="new">As another example, consider the sentence "Remind me in {0} minute(s)."</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>While using "minute(s)" works for the English language, other languages might use different terms.</source>
          <target state="new">While using "minute(s)" works for the English language, other languages might use different terms.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>For example, the Polish language uses "minuta", "minuty", or "minut" depending on the context.</source>
          <target state="new">For example, the Polish language uses "minuta", "minuty", or "minut" depending on the context.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>To solve this problem, localize the entire sentence, rather than a single word.</source>
          <target state="new">To solve this problem, localize the entire sentence, rather than a single word.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Doing this may seem like extra work and an inelegant solution, but it is the best solution because:</source>
          <target state="new">Doing this may seem like extra work and an inelegant solution, but it is the best solution because:</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>A clean error message will be displayed for all languages.</source>
          <target state="new">A clean error message will be displayed for all languages.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Your localizer will not need to ask about what the strings will be replaced with.</source>
          <target state="new">Your localizer will not need to ask about what the strings will be replaced with.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>You will not need to implement a costly code fix when a problem like this surfaces after your app is completed.</source>
          <target state="new">You will not need to implement a costly code fix when a problem like this surfaces after your app is completed.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Ensure the correct parameter order.</source>
          <target state="new">Ensure the correct parameter order.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Don't assume that all languages use parameters in the same order.</source>
          <target state="new">Don't assume that all languages use parameters in the same order.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>For example, consider the string "Every %s %s", where the first %s is replaced by the name of a month, and the second %s is replaced by the date of a month.</source>
          <target state="new">For example, consider the string "Every %s %s", where the first %s is replaced by the name of a month, and the second %s is replaced by the date of a month.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>This example works for the English language, but will fail when the app is localized into the German language, where the date and month are displayed in the reverse order.</source>
          <target state="new">This example works for the English language, but will fail when the app is localized into the German language, where the date and month are displayed in the reverse order.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>To solve this problem, change the string to "Every %1 %2", so that the order is interchangeable depending on the language.</source>
          <target state="new">To solve this problem, change the string to "Every %1 %2", so that the order is interchangeable depending on the language.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Don’t over localize.</source>
          <target state="new">Don’t over localize.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Localize specific strings, not tags.</source>
          <target state="new">Localize specific strings, not tags.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Consider the following examples:</source>
          <target state="new">Consider the following examples:</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Over-localized string</source>
          <target state="new">Over-localized string</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Correctly-localized string</source>
          <target state="new">Correctly-localized string</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>link<ph id="ph1">&amp;gt;</ph>terms of use<ph id="ph2">&amp;lt;</ph>/link</source>
          <target state="new">link<ph id="ph1">&amp;gt;</ph>terms of use<ph id="ph2">&amp;lt;</ph>/link</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>terms of use</source>
          <target state="new">terms of use</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>link<ph id="ph1">&amp;gt;</ph>privacy policy<ph id="ph2">&amp;lt;</ph>/link</source>
          <target state="new">link<ph id="ph1">&amp;gt;</ph>privacy policy<ph id="ph2">&amp;lt;</ph>/link</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>privacy policy</source>
          <target state="new">privacy policy</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Including the above <ph id="ph1">&amp;lt;</ph>link<ph id="ph2">&amp;gt;</ph> tag in the resources means that it too will be localized.</source>
          <target state="new">Including the above <ph id="ph1">&amp;lt;</ph>link<ph id="ph2">&amp;gt;</ph> tag in the resources means that it too will be localized.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>This renders the tag not valid.</source>
          <target state="new">This renders the tag not valid.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Only the strings themselves should be localized.</source>
          <target state="new">Only the strings themselves should be localized.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Generally, you should think of tags as code that should be kept separate from localizable content.</source>
          <target state="new">Generally, you should think of tags as code that should be kept separate from localizable content.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>However, some long strings should include markup to keep context and ensure ordering.</source>
          <target state="new">However, some long strings should include markup to keep context and ensure ordering.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Do not use the same strings in dissimilar contexts.</source>
          <target state="new">Do not use the same strings in dissimilar contexts.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Reusing a string may seem like the best solution, but it can cause localization problems if the same word or phrase can have different meanings or contexts.</source>
          <target state="new">Reusing a string may seem like the best solution, but it can cause localization problems if the same word or phrase can have different meanings or contexts.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>You can reuse strings if the two contexts are the same.</source>
          <target state="new">You can reuse strings if the two contexts are the same.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>For instance, you can reuse the string "Volume" for both sound effect volume and music volume because both refer to intensity of sound.</source>
          <target state="new">For instance, you can reuse the string "Volume" for both sound effect volume and music volume because both refer to intensity of sound.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>You should not reuse that same string when referring to a hard disk volume because the context and meaning are different, and the word might be translated differently.</source>
          <target state="new">You should not reuse that same string when referring to a hard disk volume because the context and meaning are different, and the word might be translated differently.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Another example is the use of the strings "on" and "off".</source>
          <target state="new">Another example is the use of the strings "on" and "off".</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>In the English language, "on" and "off" can be used for a toggle for Flight Mode, Bluetooth, and devices.</source>
          <target state="new">In the English language, "on" and "off" can be used for a toggle for Flight Mode, Bluetooth, and devices.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>But in Italian, the translation depends on the context of what is being turned on and off.</source>
          <target state="new">But in Italian, the translation depends on the context of what is being turned on and off.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>You would need to create a pair of strings for each context.</source>
          <target state="new">You would need to create a pair of strings for each context.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Additionally, a string like "text" or "fax" could be used as both a verb and a noun in the English language, which can confuse the translation process.</source>
          <target state="new">Additionally, a string like "text" or "fax" could be used as both a verb and a noun in the English language, which can confuse the translation process.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Instead, create a separate string for both the verb and noun format.</source>
          <target state="new">Instead, create a separate string for both the verb and noun format.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>When you're not sure whether the contexts are the same, err on the safe side and use a distinct string.</source>
          <target state="new">When you're not sure whether the contexts are the same, err on the safe side and use a distinct string.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Identify resources with unique attributes.</source>
          <target state="new">Identify resources with unique attributes.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Resource identifiers are case insensitive and must be unique per resource file.</source>
          <target state="new">Resource identifiers are case insensitive and must be unique per resource file.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>When accessing a resource, use the resource identifier, not the actual value of the resource.</source>
          <target state="new">When accessing a resource, use the resource identifier, not the actual value of the resource.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Resource identifiers don't change, but the actual values of the resources do change depending on the language.</source>
          <target state="new">Resource identifiers don't change, but the actual values of the resources do change depending on the language.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Be sure to use meaningful resource identifiers to provide additional context for translation.</source>
          <target state="new">Be sure to use meaningful resource identifiers to provide additional context for translation.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Don't change the resource identifiers after the string resources are sent to translation.</source>
          <target state="new">Don't change the resource identifiers after the string resources are sent to translation.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Localization teams use the resource identifier to track additions, deletions, and updates in the resources.</source>
          <target state="new">Localization teams use the resource identifier to track additions, deletions, and updates in the resources.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Changes in resource identifiers—also known as "resource identifiers shift"—require strings to be retranslated, because it will appear as though strings were deleted and others added.</source>
          <target state="new">Changes in resource identifiers—also known as "resource identifiers shift"—require strings to be retranslated, because it will appear as though strings were deleted and others added.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Choose an appropriate translation approach.</source>
          <target state="new">Choose an appropriate translation approach.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>After strings are separated into resource files, they can be translated.</source>
          <target state="new">After strings are separated into resource files, they can be translated.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The ideal time to translate strings is after the strings in your project are finalized, which usually happens toward the end of a project.</source>
          <target state="new">The ideal time to translate strings is after the strings in your project are finalized, which usually happens toward the end of a project.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>You can approach the translation process in number of ways.</source>
          <target state="new">You can approach the translation process in number of ways.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>This may depend on the volume of strings to be translated, the number of languages to be translated, and how the translation will be done (such as in-house versus hiring an external vendor).</source>
          <target state="new">This may depend on the volume of strings to be translated, the number of languages to be translated, and how the translation will be done (such as in-house versus hiring an external vendor).</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Consider the following options:</source>
          <target state="new">Consider the following options:</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The resource files can be translated by opening them directly in the project.</source>
          <target state="new">The resource files can be translated by opening them directly in the project.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>This approach works well for a project that has a small volume of strings and that needs to be translated into two or three languages.</source>
          <target state="new">This approach works well for a project that has a small volume of strings and that needs to be translated into two or three languages.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>It could be suitable for a scenario where a developer speaks more than one language and is willing to handle the translation process.</source>
          <target state="new">It could be suitable for a scenario where a developer speaks more than one language and is willing to handle the translation process.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>This approach benefits by being quick, requires no tools, and minimizes the risk of mistranslations, but it is not scalable.</source>
          <target state="new">This approach benefits by being quick, requires no tools, and minimizes the risk of mistranslations, but it is not scalable.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>In particular, the resources in different languages can easily get out of sync, causing bad user experiences and maintenance headaches.</source>
          <target state="new">In particular, the resources in different languages can easily get out of sync, causing bad user experiences and maintenance headaches.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The string resource files are in XML or ResJSON text format, so could be handed off for translation using any text editor.</source>
          <target state="new">The string resource files are in XML or ResJSON text format, so could be handed off for translation using any text editor.</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The translated files would then be copied back into the project.</source>
          <target state="new">The translated files would then be copied back into the project.</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>This approach carries a risk of translators accidentally editing the XML tags, but it lets translation work take place outside of the Microsoft Visual Studio project.</source>
          <target state="new">This approach carries a risk of translators accidentally editing the XML tags, but it lets translation work take place outside of the Microsoft Visual Studio project.</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>This approach could work well for projects that need to be translated into a small number of languages.</source>
          <target state="new">This approach could work well for projects that need to be translated into a small number of languages.</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The XLIFF format is an XML format specifically designed for use in localization, and should be well supported by some localization vendors or localization tools.</source>
          <target state="new">The XLIFF format is an XML format specifically designed for use in localization, and should be well supported by some localization vendors or localization tools.</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">[</bpt>Multilingual App Toolkit<ept id="p1">](https://msdn.microsoft.com/en-us/library/windows/apps/xaml/jj572370.aspx)</ept> to generate XLIFF files from other resource files, such as .resw or .resjson.</source>
          <target state="new">You can use the <bpt id="p1">[</bpt>Multilingual App Toolkit<ept id="p1">](https://msdn.microsoft.com/en-us/library/windows/apps/xaml/jj572370.aspx)</ept> to generate XLIFF files from other resource files, such as .resw or .resjson.</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Handoffs to localizers may need to occur for other files, such as images or audio files.</source>
          <target state="new">Handoffs to localizers may need to occur for other files, such as images or audio files.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Typically, we don't recommend creating culturally dependent files because they can be difficult to localize.</source>
          <target state="new">Typically, we don't recommend creating culturally dependent files because they can be difficult to localize.</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Additionally, consider the following suggestions:</source>
          <target state="new">Additionally, consider the following suggestions:</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Use a localization tool.</source>
          <target state="new">Use a localization tool.</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>A number of localization tools are available for parsing resource files and allowing only the translatable strings to be edited by translators.</source>
          <target state="new">A number of localization tools are available for parsing resource files and allowing only the translatable strings to be edited by translators.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>This approach reduces the risk of a translator accidentally editing the XML tags.</source>
          <target state="new">This approach reduces the risk of a translator accidentally editing the XML tags.</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>But it has the drawback of introducing a new tool and process to the localization process.</source>
          <target state="new">But it has the drawback of introducing a new tool and process to the localization process.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>A localization tool is good for projects with a large volume of strings, but a small number of languages.</source>
          <target state="new">A localization tool is good for projects with a large volume of strings, but a small number of languages.</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>To learn more, see <bpt id="p1">[</bpt>How to use the Multilingual App Toolkit<ept id="p1">](https://msdn.microsoft.com/en-us/library/windows/apps/xaml/jj572370.aspx)</ept>.</source>
          <target state="new">To learn more, see <bpt id="p1">[</bpt>How to use the Multilingual App Toolkit<ept id="p1">](https://msdn.microsoft.com/en-us/library/windows/apps/xaml/jj572370.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Use a localization vendor.</source>
          <target state="new">Use a localization vendor.</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Consider using a localization vendor if your project contains a large volume of strings and needs to be translated for many languages.</source>
          <target state="new">Consider using a localization vendor if your project contains a large volume of strings and needs to be translated for many languages.</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>A localization vendor can give advice about tools and processes, as well as translating your resource files.</source>
          <target state="new">A localization vendor can give advice about tools and processes, as well as translating your resource files.</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>This is an ideal solution, but is also the most costly option, and may increase the turnaround time for your translated content.</source>
          <target state="new">This is an ideal solution, but is also the most costly option, and may increase the turnaround time for your translated content.</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Keep your localizers informed.</source>
          <target state="new">Keep your localizers informed.</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Inform localizers of strings that can be considered a noun or a verb.</source>
          <target state="new">Inform localizers of strings that can be considered a noun or a verb.</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Explain fabricated words to your localizers by using terminology tools.</source>
          <target state="new">Explain fabricated words to your localizers by using terminology tools.</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Keep strings grammatically correct, unambiguous, and as nontechnical as possible to avoid confusion.</source>
          <target state="new">Keep strings grammatically correct, unambiguous, and as nontechnical as possible to avoid confusion.</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Keep access keys and labels consistent.</source>
          <target state="new">Keep access keys and labels consistent.</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>It is a challenge to "synchronize" the access keys used in accessibility with the display of the localized access keys, because the two string resources are categorized in two separate sections.</source>
          <target state="new">It is a challenge to "synchronize" the access keys used in accessibility with the display of the localized access keys, because the two string resources are categorized in two separate sections.</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Be sure to provide comments for the label string such as:</source>
          <target state="new">Be sure to provide comments for the label string such as:</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>HTML:</source>
          <target state="new">HTML:</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>You can follow the implementation shown below.</source>
          <target state="new">You can follow the implementation shown below.</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Again, be sure to properly comment the label string to link it to the access key definition.</source>
          <target state="new">Again, be sure to properly comment the label string to link it to the access key definition.</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Support Furigana for Japanese strings that can be sorted.</source>
          <target state="new">Support Furigana for Japanese strings that can be sorted.</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Japanese Kanji characters have the unique property of having more than one pronunciation depending on the word and context they are used in.</source>
          <target state="new">Japanese Kanji characters have the unique property of having more than one pronunciation depending on the word and context they are used in.</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>This leads to problems when you try to sort Japanese named objects, such as application names, files, songs, and so on.</source>
          <target state="new">This leads to problems when you try to sort Japanese named objects, such as application names, files, songs, and so on.</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Japanese Kanji have, in the past, usually been sorted in a machine-understandable order called XJIS.</source>
          <target state="new">Japanese Kanji have, in the past, usually been sorted in a machine-understandable order called XJIS.</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Unfortunately, because this sorting order is not phonetic it is not very useful for humans.</source>
          <target state="new">Unfortunately, because this sorting order is not phonetic it is not very useful for humans.</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Furigana works around this problem by allowing the user or creator to specify the phonetics for the characters they are using.</source>
          <target state="new">Furigana works around this problem by allowing the user or creator to specify the phonetics for the characters they are using.</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>If you use the following procedure to add Furigana to your app name, you can ensure that it is sorted in the proper location in the app list.</source>
          <target state="new">If you use the following procedure to add Furigana to your app name, you can ensure that it is sorted in the proper location in the app list.</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>If your app name contains Kanji characters and Furigana is not provided when the user’s UI language or the sort order is set to Japanese, Windows makes its best effort to generate the appropriate pronunciation.</source>
          <target state="new">If your app name contains Kanji characters and Furigana is not provided when the user’s UI language or the sort order is set to Japanese, Windows makes its best effort to generate the appropriate pronunciation.</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>However, there is a possibility for app names containing rare or unique readings to be sorted under a more common reading instead.</source>
          <target state="new">However, there is a possibility for app names containing rare or unique readings to be sorted under a more common reading instead.</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Therefore, the best practice for Japanese applications (especially those containing Kanji characters in their names) is to provide a Furigana version of their app name as part of the Japanese localization process.</source>
          <target state="new">Therefore, the best practice for Japanese applications (especially those containing Kanji characters in their names) is to provide a Furigana version of their app name as part of the Japanese localization process.</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Add "ms-resource:Appname" as the Package Display Name and the Application Display Name.</source>
          <target state="new">Add "ms-resource:Appname" as the Package Display Name and the Application Display Name.</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Create a ja-JP folder under strings, and add two resource files as follows:</source>
          <target state="new">Create a ja-JP folder under strings, and add two resource files as follows:</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>In Resources.resw for general ja-JP: Add a string resource for Appname "希蒼"</source>
          <target state="new">In Resources.resw for general ja-JP: Add a string resource for Appname "希蒼"</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>In Resources.altform-msft-phonetic.resw for Japanese furigana resources: Add Furigana value for AppName "のあ"</source>
          <target state="new">In Resources.altform-msft-phonetic.resw for Japanese furigana resources: Add Furigana value for AppName "のあ"</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The user can search for the app name "希蒼" using both the Furigana value "のあ" (noa),　and the phonetic value (using the <bpt id="p1">**</bpt>GetPhonetic<ept id="p1">**</ept> function from Input Method Editor (IME)) "まれあお" (mare-ao).</source>
          <target state="new">The user can search for the app name "希蒼" using both the Furigana value "のあ" (noa),　and the phonetic value (using the <bpt id="p1">**</bpt>GetPhonetic<ept id="p1">**</ept> function from Input Method Editor (IME)) "まれあお" (mare-ao).</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Sorting follows the <bpt id="p1">**</bpt>Regional Control Panel<ept id="p1">**</ept> format:</source>
          <target state="new">Sorting follows the <bpt id="p1">**</bpt>Regional Control Panel<ept id="p1">**</ept> format:</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Under Japanese user locale,</source>
          <target state="new">Under Japanese user locale,</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>If Furigana is enabled, the "希蒼" is sorted under "の".</source>
          <target state="new">If Furigana is enabled, the "希蒼" is sorted under "の".</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>If Furigana is missing, the "希蒼" is sorted under "ま".</source>
          <target state="new">If Furigana is missing, the "希蒼" is sorted under "ま".</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Under non-Japanese user locale,</source>
          <target state="new">Under non-Japanese user locale,</target>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>If Furigana is enabled, the "希蒼" is sorted under "の".</source>
          <target state="new">If Furigana is enabled, the "希蒼" is sorted under "の".</target>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>If Furigana is missing, the "希蒼" is sorted under "漢字".</source>
          <target state="new">If Furigana is missing, the "希蒼" is sorted under "漢字".</target>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Related topics</source>
          <target state="new">Related topics</target>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Globalization and localization do's and don'ts</source>
          <target state="new">Globalization and localization do's and don'ts</target>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Put UI strings into resources</source>
          <target state="new">Put UI strings into resources</target>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>How to name resources using qualifiers</source>
          <target state="new">How to name resources using qualifiers</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>