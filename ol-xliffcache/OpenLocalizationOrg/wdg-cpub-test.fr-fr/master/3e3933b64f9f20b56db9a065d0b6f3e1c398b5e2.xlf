<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-48076a9" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3e3933b64f9f20b56db9a065d0b6f3e1c398b5e2</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci1\devices-sensors\send-or-receive-files-with-rfcomm.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Bluetooth RFCOMM</source>
          <target state="new">Bluetooth RFCOMM</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This article provides an overview of Bluetooth RFCOMM in Universal Windows Platform (UWP) apps, along with example code on how to send or receive a file.</source>
          <target state="new">This article provides an overview of Bluetooth RFCOMM in Universal Windows Platform (UWP) apps, along with example code on how to send or receive a file.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Bluetooth RFCOMM</source>
          <target state="new">Bluetooth RFCOMM</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>\[ Updated for UWP apps on Windows 10.</source>
          <target state="new">\[ Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Important APIs</source>
          <target state="new">Important APIs</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Windows.Devices.Bluetooth</source>
          <target state="new">Windows.Devices.Bluetooth</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Windows.Devices.Bluetooth.Rfcomm</source>
          <target state="new">Windows.Devices.Bluetooth.Rfcomm</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This article provides an overview of Bluetooth RFCOMM in Universal Windows Platform (UWP) apps, along with example code on how to send or receive a file..</source>
          <target state="new">This article provides an overview of Bluetooth RFCOMM in Universal Windows Platform (UWP) apps, along with example code on how to send or receive a file..</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="new">Overview</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The APIs in the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows.Devices.Bluetooth.Rfcomm<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Dn263529)</ept> namespace build on existing patterns for Windows.Devices, including <bpt id="p3">[</bpt><bpt id="p4">**</bpt>enumeration<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR225459)</ept> and <bpt id="p5">[</bpt><bpt id="p6">**</bpt>instantiation<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/BR225654)</ept>.</source>
          <target state="new">The APIs in the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows.Devices.Bluetooth.Rfcomm<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Dn263529)</ept> namespace build on existing patterns for Windows.Devices, including <bpt id="p3">[</bpt><bpt id="p4">**</bpt>enumeration<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR225459)</ept> and <bpt id="p5">[</bpt><bpt id="p6">**</bpt>instantiation<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/BR225654)</ept>.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Data reading and writing is designed to take advantage of <bpt id="p1">[</bpt><bpt id="p2">**</bpt>established data stream patterns<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR208119)</ept> and objects in <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Windows.Storage.Streams<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR241791)</ept>.</source>
          <target state="new">Data reading and writing is designed to take advantage of <bpt id="p1">[</bpt><bpt id="p2">**</bpt>established data stream patterns<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR208119)</ept> and objects in <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Windows.Storage.Streams<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR241791)</ept>.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Session Description Protocol (SDP) attributes have a value and an expected type.</source>
          <target state="new">Session Description Protocol (SDP) attributes have a value and an expected type.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>However, some common devices have faulty implementations of SDP attributes where the value is not of the expected type.</source>
          <target state="new">However, some common devices have faulty implementations of SDP attributes where the value is not of the expected type.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Additionally, many usages of RFCOMM do not require additional SDP attributes at all.</source>
          <target state="new">Additionally, many usages of RFCOMM do not require additional SDP attributes at all.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For these reasons, this API offers access to the unparsed SDP data, from which developers can obtain the information they need.</source>
          <target state="new">For these reasons, this API offers access to the unparsed SDP data, from which developers can obtain the information they need.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The RFCOMM APIs use the concept of service identifiers.</source>
          <target state="new">The RFCOMM APIs use the concept of service identifiers.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Although a service identifier is simply a 128-bit GUID, it is also commonly specified as either a 16- or 32-bit integer.</source>
          <target state="new">Although a service identifier is simply a 128-bit GUID, it is also commonly specified as either a 16- or 32-bit integer.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The RFCOMM API offers a wrapper for service identifiers that allows them be specified and consumed as 128-bit GUIDs as well as 32-bit integers but does not offer 16-bit integers.</source>
          <target state="new">The RFCOMM API offers a wrapper for service identifiers that allows them be specified and consumed as 128-bit GUIDs as well as 32-bit integers but does not offer 16-bit integers.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This is not an issue for the API because languages will automatically upsize to a 32-bit integer and the identifier can still be correctly generated.</source>
          <target state="new">This is not an issue for the API because languages will automatically upsize to a 32-bit integer and the identifier can still be correctly generated.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Apps can perform multi-step device operations in a background task so that they can run to completion even if the app is moved to the background and suspended.</source>
          <target state="new">Apps can perform multi-step device operations in a background task so that they can run to completion even if the app is moved to the background and suspended.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This allows for reliable device servicing such as changes to persistent settings or firmware, and content synchronization, without requiring the user to sit and watch a progress bar.</source>
          <target state="new">This allows for reliable device servicing such as changes to persistent settings or firmware, and content synchronization, without requiring the user to sit and watch a progress bar.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DeviceServicingTrigger<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Dn297315)</ept> for device servicing and the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>DeviceUseTrigger<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/Dn297337)</ept> for content synchronization.</source>
          <target state="new">Use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DeviceServicingTrigger<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Dn297315)</ept> for device servicing and the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>DeviceUseTrigger<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/Dn297337)</ept> for content synchronization.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Note that these background tasks constrain the amount of time the app can run in the background, and are not intended to allow indefinite operation or infinite synchronization.</source>
          <target state="new">Note that these background tasks constrain the amount of time the app can run in the background, and are not intended to allow indefinite operation or infinite synchronization.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Send a file as a client</source>
          <target state="new">Send a file as a client</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>When sending a file, the most basic scenario is to connect to a paired device based on a desired service.</source>
          <target state="new">When sending a file, the most basic scenario is to connect to a paired device based on a desired service.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This involves the following steps:</source>
          <target state="new">This involves the following steps:</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">**</bpt>RfcommDeviceService.GetDeviceSelector\*<ept id="p1">**</ept> functions to help generate an AQS query that can be used to enumerated paired device instances of the desired service.</source>
          <target state="new">Use the <bpt id="p1">**</bpt>RfcommDeviceService.GetDeviceSelector\*<ept id="p1">**</ept> functions to help generate an AQS query that can be used to enumerated paired device instances of the desired service.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Pick an enumerated device, create an <bpt id="p1">[</bpt><bpt id="p2">**</bpt>RfcommDeviceService<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Dn263463)</ept>, and read the SDP attributes as needed (using <bpt id="p3">[</bpt><bpt id="p4">**</bpt>established data helpers<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR208119)</ept> to parse the attribute's data).</source>
          <target state="new">Pick an enumerated device, create an <bpt id="p1">[</bpt><bpt id="p2">**</bpt>RfcommDeviceService<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Dn263463)</ept>, and read the SDP attributes as needed (using <bpt id="p3">[</bpt><bpt id="p4">**</bpt>established data helpers<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR208119)</ept> to parse the attribute's data).</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Create a socket and use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>RfcommDeviceService.ConnectionHostName<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.devices.bluetooth.rfcomm.rfcommdeviceservice.connectionhostname.aspx)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>RfcommDeviceService.ConnectionServiceName<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.devices.bluetooth.rfcomm.rfcommdeviceservice.connectionservicename.aspx)</ept> properties to <bpt id="p5">[</bpt><bpt id="p6">**</bpt>StreamSocket.ConnectAsync<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/Hh701504)</ept> to the remote device service with the appropriate parameters.</source>
          <target state="new">Create a socket and use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>RfcommDeviceService.ConnectionHostName<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.devices.bluetooth.rfcomm.rfcommdeviceservice.connectionhostname.aspx)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>RfcommDeviceService.ConnectionServiceName<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/en-us/library/windows/apps/windows.devices.bluetooth.rfcomm.rfcommdeviceservice.connectionservicename.aspx)</ept> properties to <bpt id="p5">[</bpt><bpt id="p6">**</bpt>StreamSocket.ConnectAsync<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/Hh701504)</ept> to the remote device service with the appropriate parameters.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Follow established data stream patterns to read chunks of data from the file and send it on the socket's <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StreamSocket.OutputStream<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR226920)</ept> to the device.</source>
          <target state="new">Follow established data stream patterns to read chunks of data from the file and send it on the socket's <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StreamSocket.OutputStream<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR226920)</ept> to the device.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Receive File as a Server</source>
          <target state="new">Receive File as a Server</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Another common RFCOMM App scenario is to host a service on the PC and expose it for other devices.</source>
          <target state="new">Another common RFCOMM App scenario is to host a service on the PC and expose it for other devices.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Create a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>RfcommServiceProvider<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Dn263511)</ept> to advertise the desired service.</source>
          <target state="new">Create a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>RfcommServiceProvider<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Dn263511)</ept> to advertise the desired service.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Set the SDP attributes as needed (using <bpt id="p1">[</bpt><bpt id="p2">**</bpt>established data helpers<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR208119)</ept> to generate the attribute’s Data) and starts advertising the SDP records for other devices to retrieve.</source>
          <target state="new">Set the SDP attributes as needed (using <bpt id="p1">[</bpt><bpt id="p2">**</bpt>established data helpers<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR208119)</ept> to generate the attribute’s Data) and starts advertising the SDP records for other devices to retrieve.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>To connect to a client device, create a socket listener to start listening for incoming connection requests.</source>
          <target state="new">To connect to a client device, create a socket listener to start listening for incoming connection requests.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>When a connection is received, store the connected socket for later processing.</source>
          <target state="new">When a connection is received, store the connected socket for later processing.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Follow established data stream patterns to read chunks of data from the socket's InputStream and save it to a file.</source>
          <target state="new">Follow established data stream patterns to read chunks of data from the socket's InputStream and save it to a file.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>