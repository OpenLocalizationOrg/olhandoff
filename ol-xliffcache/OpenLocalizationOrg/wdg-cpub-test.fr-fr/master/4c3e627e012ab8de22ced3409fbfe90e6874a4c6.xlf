<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-48076a9" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4c3e627e012ab8de22ced3409fbfe90e6874a4c6</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci\devices-sensors\scan-from-your-app.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Scan from your app</source>
          <target state="new">Scan from your app</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>\[ Updated for UWP apps on Windows 10.</source>
          <target state="new">\[ Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Important APIs</source>
          <target state="new">Important APIs</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Windows.Devices.Scanners</source>
          <target state="new">Windows.Devices.Scanners</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>DeviceInformation</source>
          <target state="new">DeviceInformation</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>DeviceClass</source>
          <target state="new">DeviceClass</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Learn here how to scan content from your app by using a flatbed, feeder, or auto-configured scan source.</source>
          <target state="new">Learn here how to scan content from your app by using a flatbed, feeder, or auto-configured scan source.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Important<ept id="p1">**</ept>  The <bpt id="p2">[</bpt><bpt id="p3">**</bpt>Windows.Devices.Scanners<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/Dn264250)</ept> APIs are part of the desktop <bpt id="p4">[</bpt>device family<ept id="p4">](https://msdn.microsoft.com/library/windows/apps/Dn894631)</ept>.</source>
          <target state="new"><bpt id="p1">**</bpt>Important<ept id="p1">**</ept>  The <bpt id="p2">[</bpt><bpt id="p3">**</bpt>Windows.Devices.Scanners<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/Dn264250)</ept> APIs are part of the desktop <bpt id="p4">[</bpt>device family<ept id="p4">](https://msdn.microsoft.com/library/windows/apps/Dn894631)</ept>.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Apps can use these APIs only on the desktop version of Windows 10.</source>
          <target state="new">Apps can use these APIs only on the desktop version of Windows 10.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>To scan from your app, you must first list the available scanners by declaring a new <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DeviceInformation<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR225393)</ept> object and getting the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>DeviceClass<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR225381)</ept> type.</source>
          <target state="new">To scan from your app, you must first list the available scanners by declaring a new <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DeviceInformation<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR225393)</ept> object and getting the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>DeviceClass<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/BR225381)</ept> type.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Only scanners that are installed locally with WIA drivers are listed and available to your app.</source>
          <target state="new">Only scanners that are installed locally with WIA drivers are listed and available to your app.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>After your app has listed available scanners, it can use the auto-configured scan settings based on the scanner type, or just scan using the available flatbed or feeder scan source.</source>
          <target state="new">After your app has listed available scanners, it can use the auto-configured scan settings based on the scanner type, or just scan using the available flatbed or feeder scan source.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>To use auto-configured settings, the scanner must be enabled for auto-configuration must not be equipped with both a flatbed and a feeder scanner.</source>
          <target state="new">To use auto-configured settings, the scanner must be enabled for auto-configuration must not be equipped with both a flatbed and a feeder scanner.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For more info, see <bpt id="p1">[</bpt>Auto-Configured Scanning<ept id="p1">](https://msdn.microsoft.com/library/windows/hardware/Ff539393)</ept>.</source>
          <target state="new">For more info, see <bpt id="p1">[</bpt>Auto-Configured Scanning<ept id="p1">](https://msdn.microsoft.com/library/windows/hardware/Ff539393)</ept>.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Enumerate available scanners</source>
          <target state="new">Enumerate available scanners</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Windows does not detect scanners automatically.</source>
          <target state="new">Windows does not detect scanners automatically.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You must perform this step in order for your app to communicate with the scanner.</source>
          <target state="new">You must perform this step in order for your app to communicate with the scanner.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>In this example, the scanner device enumeration is done using the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows.Devices.Enumeration<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR225459)</ept> namespace.</source>
          <target state="new">In this example, the scanner device enumeration is done using the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows.Devices.Enumeration<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR225459)</ept> namespace.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>First, add these using statements to your class definition file.</source>
          <target state="new">First, add these using statements to your class definition file.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Next, implement a device watcher to start enumerating scanners.</source>
          <target state="new">Next, implement a device watcher to start enumerating scanners.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For more info, see <bpt id="p1">[</bpt>Enumerate devices<ept id="p1">](enumerate-devices.md)</ept>.</source>
          <target state="new">For more info, see <bpt id="p1">[</bpt>Enumerate devices<ept id="p1">](enumerate-devices.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Create an event handler for when a scanner is added.</source>
          <target state="new">Create an event handler for when a scanner is added.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Scan</source>
          <target state="new">Scan</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Get an ImageScanner object</source>
          <target state="new">Get an ImageScanner object</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For each <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ImageScannerScanSource<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Dn264238)</ept> enumeration type, whether it's <bpt id="p3">**</bpt>Default<ept id="p3">**</ept>, <bpt id="p4">**</bpt>AutoConfigured<ept id="p4">**</ept>, <bpt id="p5">**</bpt>Flatbed<ept id="p5">**</ept>, or <bpt id="p6">**</bpt>Feeder<ept id="p6">**</ept>, you must first create an <bpt id="p7">[</bpt><bpt id="p8">**</bpt>ImageScanner<ept id="p8">**</ept><ept id="p7">](https://msdn.microsoft.com/library/windows/apps/Dn263806)</ept> object by calling the <bpt id="p9">[</bpt><bpt id="p10">**</bpt>ImageScanner.FromIdAsync<ept id="p10">**</ept><ept id="p9">](https://msdn.microsoft.com/library/windows/apps/windows.devices.scanners.imagescanner.fromidasync)</ept> method, like this.</source>
          <target state="new">For each <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ImageScannerScanSource<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Dn264238)</ept> enumeration type, whether it's <bpt id="p3">**</bpt>Default<ept id="p3">**</ept>, <bpt id="p4">**</bpt>AutoConfigured<ept id="p4">**</ept>, <bpt id="p5">**</bpt>Flatbed<ept id="p5">**</ept>, or <bpt id="p6">**</bpt>Feeder<ept id="p6">**</ept>, you must first create an <bpt id="p7">[</bpt><bpt id="p8">**</bpt>ImageScanner<ept id="p8">**</ept><ept id="p7">](https://msdn.microsoft.com/library/windows/apps/Dn263806)</ept> object by calling the <bpt id="p9">[</bpt><bpt id="p10">**</bpt>ImageScanner.FromIdAsync<ept id="p10">**</ept><ept id="p9">](https://msdn.microsoft.com/library/windows/apps/windows.devices.scanners.imagescanner.fromidasync)</ept> method, like this.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Just scan</source>
          <target state="new">Just scan</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>To scan with the default settings, your app relies on the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows.Devices.Scanners<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Dn264250)</ept> namespace to select a scanner and scans from that source.</source>
          <target state="new">To scan with the default settings, your app relies on the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows.Devices.Scanners<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Dn264250)</ept> namespace to select a scanner and scans from that source.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>No scan settings are changed.</source>
          <target state="new">No scan settings are changed.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The possible scanners are auto-configure, flatbed, or feeder.</source>
          <target state="new">The possible scanners are auto-configure, flatbed, or feeder.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This type of scan will most likely produce a successful scan operation, even if it scans from the wrong source, like flatbed instead of feeder.</source>
          <target state="new">This type of scan will most likely produce a successful scan operation, even if it scans from the wrong source, like flatbed instead of feeder.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  If the user places the document to scan in the feeder, the scanner will scan from the flatbed instead.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  If the user places the document to scan in the feeder, the scanner will scan from the flatbed instead.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>If the user tries to scan from an empty feeder, the scan job won't produce any scanned files.</source>
          <target state="new">If the user tries to scan from an empty feeder, the scan job won't produce any scanned files.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Scan from Auto-configured, Flatbed, or Feeder source</source>
          <target state="new">Scan from Auto-configured, Flatbed, or Feeder source</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Your app can use the device's <bpt id="p1">[</bpt>Auto-Configured Scanning<ept id="p1">](https://msdn.microsoft.com/library/windows/hardware/Ff539393)</ept> to scan with the most optimal scan settings.</source>
          <target state="new">Your app can use the device's <bpt id="p1">[</bpt>Auto-Configured Scanning<ept id="p1">](https://msdn.microsoft.com/library/windows/hardware/Ff539393)</ept> to scan with the most optimal scan settings.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>With this option, the device itself can determine the best scan settings, like color mode and scan resolution, based on the content being scanned.</source>
          <target state="new">With this option, the device itself can determine the best scan settings, like color mode and scan resolution, based on the content being scanned.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The device selects the scan settings at run time for each new scan job.</source>
          <target state="new">The device selects the scan settings at run time for each new scan job.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  Not all scanners support this feature, so the app must check if the scanner supports this feature before using this setting.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  Not all scanners support this feature, so the app must check if the scanner supports this feature before using this setting.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>In this example, the app first checks if the scanner is capable of auto-configuration and then scans.</source>
          <target state="new">In this example, the app first checks if the scanner is capable of auto-configuration and then scans.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>To specify either flatbed or feeder scanner, simply replace <bpt id="p1">**</bpt>AutoConfigured<ept id="p1">**</ept> with <bpt id="p2">**</bpt>Flatbed<ept id="p2">**</ept> or <bpt id="p3">**</bpt>Feeder<ept id="p3">**</ept>.</source>
          <target state="new">To specify either flatbed or feeder scanner, simply replace <bpt id="p1">**</bpt>AutoConfigured<ept id="p1">**</ept> with <bpt id="p2">**</bpt>Flatbed<ept id="p2">**</ept> or <bpt id="p3">**</bpt>Feeder<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Preview the scan</source>
          <target state="new">Preview the scan</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>You can add code to preview the scan before scanning to a folder.</source>
          <target state="new">You can add code to preview the scan before scanning to a folder.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>In the example below, the app checks if the <bpt id="p1">**</bpt>Flatbed<ept id="p1">**</ept> scanner supports preview, then previews the scan.</source>
          <target state="new">In the example below, the app checks if the <bpt id="p1">**</bpt>Flatbed<ept id="p1">**</ept> scanner supports preview, then previews the scan.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Cancel the scan</source>
          <target state="new">Cancel the scan</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>You can let users cancel the scan job midway through a scan, like this.</source>
          <target state="new">You can let users cancel the scan job midway through a scan, like this.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Scan with progress</source>
          <target state="new">Scan with progress</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Create a <bpt id="p1">**</bpt>System.Threading.CancellationTokenSource<ept id="p1">**</ept> object.</source>
          <target state="new">Create a <bpt id="p1">**</bpt>System.Threading.CancellationTokenSource<ept id="p1">**</ept> object.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Set up the progress event handler and get the progress of the scan.</source>
          <target state="new">Set up the progress event handler and get the progress of the scan.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Scanning to the pictures library</source>
          <target state="new">Scanning to the pictures library</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Users can scan to any folder dynamically using the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>FolderPicker<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR207881)</ept> class, but you must declare the <bpt id="p3">*</bpt>Pictures Library<ept id="p3">*</ept> capability in the manifest to allow users to scan to that folder.</source>
          <target state="new">Users can scan to any folder dynamically using the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>FolderPicker<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/BR207881)</ept> class, but you must declare the <bpt id="p3">*</bpt>Pictures Library<ept id="p3">*</ept> capability in the manifest to allow users to scan to that folder.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>For more info on app capabilities, see <bpt id="p1">[</bpt>App capability declarations<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Mt270968)</ept>.</source>
          <target state="new">For more info on app capabilities, see <bpt id="p1">[</bpt>App capability declarations<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/Mt270968)</ept>.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>