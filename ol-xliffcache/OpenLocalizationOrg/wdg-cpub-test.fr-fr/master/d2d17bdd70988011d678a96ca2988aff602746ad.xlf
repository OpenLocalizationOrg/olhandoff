<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-48076a9" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d2d17bdd70988011d678a96ca2988aff602746ad</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci2\controls-and-patterns\tiles-and-notifications-raw-notification-overview.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Raw notifications are short, general purpose push notifications.</source>
          <target state="new">Raw notifications are short, general purpose push notifications.</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Raw notification overview</source>
          <target state="new">Raw notification overview</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Raw notification overview</source>
          <target state="new">Raw notification overview</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>\[ Updated for UWP apps on Windows 10.</source>
          <target state="new">\[ Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Raw notifications are short, general purpose push notifications.</source>
          <target state="new">Raw notifications are short, general purpose push notifications.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>They are strictly instructional and do not include a UI component.</source>
          <target state="new">They are strictly instructional and do not include a UI component.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>As with other push notifications, the Windows Push Notification Services (WNS) feature delivers raw notifications from your cloud service to your app.</source>
          <target state="new">As with other push notifications, the Windows Push Notification Services (WNS) feature delivers raw notifications from your cloud service to your app.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You can use raw notifications for a variety of purposes, including to trigger your app to run a background task if the user has given the app permission to do so.</source>
          <target state="new">You can use raw notifications for a variety of purposes, including to trigger your app to run a background task if the user has given the app permission to do so.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>By using WNS to communicate with your app, you can avoid the processing overhead of creating persistent socket connections, sending HTTP GET messages, and other service-to-app connections.</source>
          <target state="new">By using WNS to communicate with your app, you can avoid the processing overhead of creating persistent socket connections, sending HTTP GET messages, and other service-to-app connections.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Important<ept id="p1">**</ept>   To understand raw notifications, it's best to be familiar with the concepts discussed in the <bpt id="p2">[</bpt>Windows Push Notification Services (WNS) overview<ept id="p2">](tiles-and-notifications-windows-push-notification-services--wns--overview.md)</ept>.</source>
          <target state="new"><bpt id="p1">**</bpt>Important<ept id="p1">**</ept>   To understand raw notifications, it's best to be familiar with the concepts discussed in the <bpt id="p2">[</bpt>Windows Push Notification Services (WNS) overview<ept id="p2">](tiles-and-notifications-windows-push-notification-services--wns--overview.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>As with toast, tile, and badge push notifications, a raw notification is pushed from your app's cloud service over an assigned channel Uniform Resource Identifier (URI) to WNS.</source>
          <target state="new">As with toast, tile, and badge push notifications, a raw notification is pushed from your app's cloud service over an assigned channel Uniform Resource Identifier (URI) to WNS.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>WNS, in turn, delivers the notification to the device and user account associated with that channel.</source>
          <target state="new">WNS, in turn, delivers the notification to the device and user account associated with that channel.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Unlike other push notifications, raw notifications don't have a specified format.</source>
          <target state="new">Unlike other push notifications, raw notifications don't have a specified format.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The content of the payload is entirely app-defined.</source>
          <target state="new">The content of the payload is entirely app-defined.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>As an illustration of an app that could benefit from raw notifications, let's look at a theoretical document collaboration app.</source>
          <target state="new">As an illustration of an app that could benefit from raw notifications, let's look at a theoretical document collaboration app.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Consider two users who are editing the same document at the same time.</source>
          <target state="new">Consider two users who are editing the same document at the same time.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The cloud service, which hosts the shared document, could use raw notifications to notify each user when changes are made by the other user.</source>
          <target state="new">The cloud service, which hosts the shared document, could use raw notifications to notify each user when changes are made by the other user.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The raw notifications would not necessarily contain the changes to the document, but instead would signal each user's copy of the app to contact the central location and sync the available changes.</source>
          <target state="new">The raw notifications would not necessarily contain the changes to the document, but instead would signal each user's copy of the app to contact the central location and sync the available changes.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>By using raw notifications, the app and the its cloud service can save the overhead of maintaining persistent connections the entire time the document is open.</source>
          <target state="new">By using raw notifications, the app and the its cloud service can save the overhead of maintaining persistent connections the entire time the document is open.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>How raw notifications work</source>
          <target state="new">How raw notifications work</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>All raw notifications are push notifications.</source>
          <target state="new">All raw notifications are push notifications.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Therefore, the setup required to send and receive push notifications applies to raw notifications as well:</source>
          <target state="new">Therefore, the setup required to send and receive push notifications applies to raw notifications as well:</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>You must have a valid WNS channel to send raw notifications.</source>
          <target state="new">You must have a valid WNS channel to send raw notifications.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>For more information about acquiring a push notification channel, see <bpt id="p1">[</bpt>How to request, create, and save a notification channel<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh465412)</ept>.</source>
          <target state="new">For more information about acquiring a push notification channel, see <bpt id="p1">[</bpt>How to request, create, and save a notification channel<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh465412)</ept>.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>You must include the <bpt id="p1">**</bpt>Internet<ept id="p1">**</ept> capability in your app's manifest.</source>
          <target state="new">You must include the <bpt id="p1">**</bpt>Internet<ept id="p1">**</ept> capability in your app's manifest.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>In the Microsoft Visual Studio manifest editor, you will find this option under the <bpt id="p1">**</bpt>Capabilities<ept id="p1">**</ept> tab as <bpt id="p2">**</bpt>Internet (Client)<ept id="p2">**</ept>.</source>
          <target state="new">In the Microsoft Visual Studio manifest editor, you will find this option under the <bpt id="p1">**</bpt>Capabilities<ept id="p1">**</ept> tab as <bpt id="p2">**</bpt>Internet (Client)<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Capabilities<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br211422)</ept>.</source>
          <target state="new">For more information, see <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Capabilities<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br211422)</ept>.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The body of the notification is in an app-defined format.</source>
          <target state="new">The body of the notification is in an app-defined format.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The client receives the data as a null-terminated string (<bpt id="p1">**</bpt>HSTRING<ept id="p1">**</ept>) that only needs to be understood by the app.</source>
          <target state="new">The client receives the data as a null-terminated string (<bpt id="p1">**</bpt>HSTRING<ept id="p1">**</ept>) that only needs to be understood by the app.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>If the client is offline, raw notifications will be cached by WNS only if the <bpt id="p1">[</bpt>X-WNS-Cache-Policy<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh465435.aspx#pncodes_x_wns_cache)</ept> header is included in the notification.</source>
          <target state="new">If the client is offline, raw notifications will be cached by WNS only if the <bpt id="p1">[</bpt>X-WNS-Cache-Policy<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh465435.aspx#pncodes_x_wns_cache)</ept> header is included in the notification.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>However, only one raw notification will be cached and delivered once the device comes back online.</source>
          <target state="new">However, only one raw notification will be cached and delivered once the device comes back online.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>There are only three possible paths for a raw notification to take on the client: they will be delivered to your running app through a notification delivery event, sent to a background task, or dropped.</source>
          <target state="new">There are only three possible paths for a raw notification to take on the client: they will be delivered to your running app through a notification delivery event, sent to a background task, or dropped.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Therefore, if the client is offline and WNS attempts to deliver a raw notification, the notification is dropped.</source>
          <target state="new">Therefore, if the client is offline and WNS attempts to deliver a raw notification, the notification is dropped.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Creating a raw notification</source>
          <target state="new">Creating a raw notification</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Sending a raw notification is similar to sending a tile, toast, or badge push notification, with these differences:</source>
          <target state="new">Sending a raw notification is similar to sending a tile, toast, or badge push notification, with these differences:</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The HTTP Content-Type header must be set to "application/octet-stream".</source>
          <target state="new">The HTTP Content-Type header must be set to "application/octet-stream".</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The HTTP <bpt id="p1">[</bpt>X-WNS-Type<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh465435.aspx#pncodes_x_wns_type)</ept> header must be set to "wns/raw".</source>
          <target state="new">The HTTP <bpt id="p1">[</bpt>X-WNS-Type<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh465435.aspx#pncodes_x_wns_type)</ept> header must be set to "wns/raw".</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The notification body can contain any string payload smaller than 5 KB in size.</source>
          <target state="new">The notification body can contain any string payload smaller than 5 KB in size.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Raw notifications are intended to be used as short messages that trigger your app to take an action, such as to directly contact the service to sync a larger amount of data or to make a local state modification based on the notification content.</source>
          <target state="new">Raw notifications are intended to be used as short messages that trigger your app to take an action, such as to directly contact the service to sync a larger amount of data or to make a local state modification based on the notification content.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Note that WNS push notifications cannot be guaranteed to be delivered, so your app and cloud service must account for the possibility that the raw notification might not reach the client, such as when the client is offline.</source>
          <target state="new">Note that WNS push notifications cannot be guaranteed to be delivered, so your app and cloud service must account for the possibility that the raw notification might not reach the client, such as when the client is offline.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For more information on sending push notifications, see <bpt id="p1">[</bpt>Quickstart: Sending a push notification<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/hh868252)</ept>.</source>
          <target state="new">For more information on sending push notifications, see <bpt id="p1">[</bpt>Quickstart: Sending a push notification<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/xaml/hh868252)</ept>.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Receiving a raw notification</source>
          <target state="new">Receiving a raw notification</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>There are two avenues through which your app can be receive raw notifications:</source>
          <target state="new">There are two avenues through which your app can be receive raw notifications:</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Through <bpt id="p1">[</bpt>notification delivery events<ept id="p1">](#notification_delivery_events)</ept> while your application is running.</source>
          <target state="new">Through <bpt id="p1">[</bpt>notification delivery events<ept id="p1">](#notification_delivery_events)</ept> while your application is running.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Through <bpt id="p1">[</bpt>background tasks triggered by the raw notification<ept id="p1">](#bg_tasks)</ept> if your app is enabled to run background tasks.</source>
          <target state="new">Through <bpt id="p1">[</bpt>background tasks triggered by the raw notification<ept id="p1">](#bg_tasks)</ept> if your app is enabled to run background tasks.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>An app can use both mechanisms to receive raw notifications.</source>
          <target state="new">An app can use both mechanisms to receive raw notifications.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>If an app implements both the notification delivery event handler and background tasks that are triggered by raw notifications, the notification delivery event will take priority when the app is running.</source>
          <target state="new">If an app implements both the notification delivery event handler and background tasks that are triggered by raw notifications, the notification delivery event will take priority when the app is running.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>If the app is running, the notification delivery event will take priority over the background task and the app will have the first opportunity to process the notification.</source>
          <target state="new">If the app is running, the notification delivery event will take priority over the background task and the app will have the first opportunity to process the notification.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The notification delivery event handler can specify, by setting the event's <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PushNotificationReceivedEventArgs.Cancel<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br241297)</ept> property to <bpt id="p3">**</bpt>true<ept id="p3">**</ept>, that the raw notification should not be passed to its background task once the handler exits.</source>
          <target state="new">The notification delivery event handler can specify, by setting the event's <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PushNotificationReceivedEventArgs.Cancel<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br241297)</ept> property to <bpt id="p3">**</bpt>true<ept id="p3">**</ept>, that the raw notification should not be passed to its background task once the handler exits.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>If the <bpt id="p1">**</bpt>Cancel<ept id="p1">**</ept> property is set to <bpt id="p2">**</bpt>false<ept id="p2">**</ept> or is not set (the default value is <bpt id="p3">**</bpt>false<ept id="p3">**</ept>), the raw notification will trigger the background task after the notification delivery event handler has done its work.</source>
          <target state="new">If the <bpt id="p1">**</bpt>Cancel<ept id="p1">**</ept> property is set to <bpt id="p2">**</bpt>false<ept id="p2">**</ept> or is not set (the default value is <bpt id="p3">**</bpt>false<ept id="p3">**</ept>), the raw notification will trigger the background task after the notification delivery event handler has done its work.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Notification delivery events</source>
          <target state="new">Notification delivery events</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Your app can use a notification delivery event (<bpt id="p1">[</bpt><bpt id="p2">**</bpt>PushNotificationReceived<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br241292)</ept>) to receive raw notifications while the app is in use.</source>
          <target state="new">Your app can use a notification delivery event (<bpt id="p1">[</bpt><bpt id="p2">**</bpt>PushNotificationReceived<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br241292)</ept>) to receive raw notifications while the app is in use.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>When the cloud service sends a raw notification, the running app can receive it by handling the notification delivery event on the channel URI.</source>
          <target state="new">When the cloud service sends a raw notification, the running app can receive it by handling the notification delivery event on the channel URI.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>If your app is not running and does not use <bpt id="p1">[</bpt>background tasks<ept id="p1">](#bg_tasks)</ept>, any raw notification sent to that app is dropped by WNS on receipt.</source>
          <target state="new">If your app is not running and does not use <bpt id="p1">[</bpt>background tasks<ept id="p1">](#bg_tasks)</ept>, any raw notification sent to that app is dropped by WNS on receipt.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>To avoid wasting your cloud service's resources, you should consider implementing logic on the service to track whether the app is active.</source>
          <target state="new">To avoid wasting your cloud service's resources, you should consider implementing logic on the service to track whether the app is active.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>There are two sources of this information: an app can explicitly tell the service that it's ready to start receiving notifications, and WNS can tell the service when to stop.</source>
          <target state="new">There are two sources of this information: an app can explicitly tell the service that it's ready to start receiving notifications, and WNS can tell the service when to stop.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>The app notifies the cloud service<ept id="p1">**</ept>: The app can contact its service to let it know that the app is running in the foreground.</source>
          <target state="new"><bpt id="p1">**</bpt>The app notifies the cloud service<ept id="p1">**</ept>: The app can contact its service to let it know that the app is running in the foreground.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The disadvantage of this approach is that the app can end up contacting your service very frequently.</source>
          <target state="new">The disadvantage of this approach is that the app can end up contacting your service very frequently.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>However, it has the advantage that the service will always know when the app is ready to receive incoming raw notifications.</source>
          <target state="new">However, it has the advantage that the service will always know when the app is ready to receive incoming raw notifications.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Another advantage is that when the app contacts its service, the service then knows to send raw notifications to the specific instance of that app rather than broadcast.</source>
          <target state="new">Another advantage is that when the app contacts its service, the service then knows to send raw notifications to the specific instance of that app rather than broadcast.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>The cloud service responds to WNS response messages<ept id="p1">**</ept> : Your app service can use the <bpt id="p2">[</bpt>X-WNS-NotificationStatus<ept id="p2">](https://msdn.microsoft.com/library/windows/apps/hh465435.aspx#pncodes_x_wns_notification)</ept> and <bpt id="p3">[</bpt>X-WNS-DeviceConnectionStatus<ept id="p3">](https://msdn.microsoft.com/library/windows/apps/hh465435.aspx#pncodes_x_wns_dcs)</ept> information returned by WNS to determine when to stop sending raw notifications to the app.</source>
          <target state="new"><bpt id="p1">**</bpt>The cloud service responds to WNS response messages<ept id="p1">**</ept> : Your app service can use the <bpt id="p2">[</bpt>X-WNS-NotificationStatus<ept id="p2">](https://msdn.microsoft.com/library/windows/apps/hh465435.aspx#pncodes_x_wns_notification)</ept> and <bpt id="p3">[</bpt>X-WNS-DeviceConnectionStatus<ept id="p3">](https://msdn.microsoft.com/library/windows/apps/hh465435.aspx#pncodes_x_wns_dcs)</ept> information returned by WNS to determine when to stop sending raw notifications to the app.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>When your service sends a notification to a channel as an HTTP POST, it can receive one of these messages in the response:</source>
          <target state="new">When your service sends a notification to a channel as an HTTP POST, it can receive one of these messages in the response:</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>X-WNS-NotificationStatus: dropped<ept id="p1">**</ept>: This indicates that the notification was not received by the client.</source>
          <target state="new"><bpt id="p1">**</bpt>X-WNS-NotificationStatus: dropped<ept id="p1">**</ept>: This indicates that the notification was not received by the client.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>It's a safe assumption that the <bpt id="p1">**</bpt>dropped<ept id="p1">**</ept> response is caused by your app no longer being in the foreground on the user's device.</source>
          <target state="new">It's a safe assumption that the <bpt id="p1">**</bpt>dropped<ept id="p1">**</ept> response is caused by your app no longer being in the foreground on the user's device.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>X-WNS-DeviceConnectionStatus: disconnected<ept id="p1">**</ept> or <bpt id="p2">**</bpt>X-WNS-DeviceConnectionStatus: tempconnected<ept id="p2">**</ept>: This indicates that the Windows client no longer has a connection to WNS.</source>
          <target state="new"><bpt id="p1">**</bpt>X-WNS-DeviceConnectionStatus: disconnected<ept id="p1">**</ept> or <bpt id="p2">**</bpt>X-WNS-DeviceConnectionStatus: tempconnected<ept id="p2">**</ept>: This indicates that the Windows client no longer has a connection to WNS.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Note that to receive this message from WNS, you have to ask for it by setting the <bpt id="p1">[</bpt>X-WNS-RequestForStatus<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh465435.aspx#pncodes_x_wns_request)</ept> header in the notification's HTTP POST.</source>
          <target state="new">Note that to receive this message from WNS, you have to ask for it by setting the <bpt id="p1">[</bpt>X-WNS-RequestForStatus<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh465435.aspx#pncodes_x_wns_request)</ept> header in the notification's HTTP POST.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Your app's cloud service can use the information in these status messages to cease communication attempts through raw notifications.</source>
          <target state="new">Your app's cloud service can use the information in these status messages to cease communication attempts through raw notifications.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The service can resume sending raw notifications once it is contacted by the app, when the app switches back into the foreground.</source>
          <target state="new">The service can resume sending raw notifications once it is contacted by the app, when the app switches back into the foreground.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Note that you should not rely on <bpt id="p1">[</bpt>X-WNS-NotificationStatus<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh465435.aspx#pncodes_x_wns_notification)</ept> to determine whether the notification was successfully delivered to the client.</source>
          <target state="new">Note that you should not rely on <bpt id="p1">[</bpt>X-WNS-NotificationStatus<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh465435.aspx#pncodes_x_wns_notification)</ept> to determine whether the notification was successfully delivered to the client.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Push notification service request and response headers<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh465435)</ept></source>
          <target state="new">For more information, see <bpt id="p1">[</bpt>Push notification service request and response headers<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh465435)</ept></target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Background tasks triggered by raw notifications</source>
          <target state="new">Background tasks triggered by raw notifications</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Important<ept id="p1">**</ept>   Before using raw notification background tasks, an app must be granted background access via <bpt id="p2">[</bpt><bpt id="p3">**</bpt>BackgroundExecutionManager.RequestAccessAsync<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/hh700485)</ept>.</source>
          <target state="new"><bpt id="p1">**</bpt>Important<ept id="p1">**</ept>   Before using raw notification background tasks, an app must be granted background access via <bpt id="p2">[</bpt><bpt id="p3">**</bpt>BackgroundExecutionManager.RequestAccessAsync<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/hh700485)</ept>.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Your background task must be registered with a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PushNotificationTrigger<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh700543)</ept>.</source>
          <target state="new">Your background task must be registered with a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PushNotificationTrigger<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh700543)</ept>.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>If it is not registered, the task will not run when a raw notification is received.</source>
          <target state="new">If it is not registered, the task will not run when a raw notification is received.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>A background task that is triggered by a raw notification enables your app's cloud service to contact your app, even when the app is not running (though it might trigger it to run).</source>
          <target state="new">A background task that is triggered by a raw notification enables your app's cloud service to contact your app, even when the app is not running (though it might trigger it to run).</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>This happens without the app having to maintain a continuous connection.</source>
          <target state="new">This happens without the app having to maintain a continuous connection.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Raw notifications are the only notification type that can trigger background tasks.</source>
          <target state="new">Raw notifications are the only notification type that can trigger background tasks.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>However, while toast, tile, and badge push notifications cannot trigger background tasks, background tasks triggered by raw notifications can update tiles and invoke toast notifications through local API calls.</source>
          <target state="new">However, while toast, tile, and badge push notifications cannot trigger background tasks, background tasks triggered by raw notifications can update tiles and invoke toast notifications through local API calls.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>As an illustration of how background tasks that are triggered by raw notifications work, let's consider an app used to read e-books.</source>
          <target state="new">As an illustration of how background tasks that are triggered by raw notifications work, let's consider an app used to read e-books.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>First, a user purchases a book online, possibly on another device.</source>
          <target state="new">First, a user purchases a book online, possibly on another device.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>In response, the app's cloud service can send a raw notification to each of the user's devices, with a payload that states that the book was purchased and the app should download it.</source>
          <target state="new">In response, the app's cloud service can send a raw notification to each of the user's devices, with a payload that states that the book was purchased and the app should download it.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The app then directly contacts the app's cloud service to begin a background download of the new book so that later, when the user launches the app, the book is already there and ready for reading.</source>
          <target state="new">The app then directly contacts the app's cloud service to begin a background download of the new book so that later, when the user launches the app, the book is already there and ready for reading.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>To use a raw notification to trigger a background task, your app must:</source>
          <target state="new">To use a raw notification to trigger a background task, your app must:</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Request permission to run tasks in the background (which the user can revoke at any time) by using <bpt id="p1">[</bpt><bpt id="p2">**</bpt>BackgroundExecutionManager.RequestAccessAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh700485)</ept>.</source>
          <target state="new">Request permission to run tasks in the background (which the user can revoke at any time) by using <bpt id="p1">[</bpt><bpt id="p2">**</bpt>BackgroundExecutionManager.RequestAccessAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh700485)</ept>.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Implement the background task.</source>
          <target state="new">Implement the background task.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Supporting your app with background tasks<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh977046)</ept></source>
          <target state="new">For more information, see <bpt id="p1">[</bpt>Supporting your app with background tasks<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh977046)</ept></target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Your background task is then invoked in response to the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PushNotificationTrigger<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh700543)</ept>, each time a raw notification is received for your app.</source>
          <target state="new">Your background task is then invoked in response to the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PushNotificationTrigger<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh700543)</ept>, each time a raw notification is received for your app.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Your background task interprets the raw notification's app-specific payload and acts on it.</source>
          <target state="new">Your background task interprets the raw notification's app-specific payload and acts on it.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>For each app, only one background task can run at a time.</source>
          <target state="new">For each app, only one background task can run at a time.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>If a background task is triggered for an app for which a background task is already running, the first background task must complete before the new one is run.</source>
          <target state="new">If a background task is triggered for an app for which a background task is already running, the first background task must complete before the new one is run.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Other resources</source>
          <target state="new">Other resources</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>You can learn more by downloading the <bpt id="p1">[</bpt>Raw notifications sample<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=241553)</ept> for Windows 8.1, and the <bpt id="p2">[</bpt>Push and periodic notifications sample<ept id="p2">](http://go.microsoft.com/fwlink/p/?LinkId=231476)</ept> for Windows 8.1, and re-using their source code in your Windows 10 app.</source>
          <target state="new">You can learn more by downloading the <bpt id="p1">[</bpt>Raw notifications sample<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=241553)</ept> for Windows 8.1, and the <bpt id="p2">[</bpt>Push and periodic notifications sample<ept id="p2">](http://go.microsoft.com/fwlink/p/?LinkId=231476)</ept> for Windows 8.1, and re-using their source code in your Windows 10 app.</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Related topics</source>
          <target state="new">Related topics</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Guidelines for raw notifications</source>
          <target state="new">Guidelines for raw notifications</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Quickstart: Creating and registering a raw notification background task</source>
          <target state="new">Quickstart: Creating and registering a raw notification background task</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Quickstart: Intercepting push notifications for running apps</source>
          <target state="new">Quickstart: Intercepting push notifications for running apps</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>RawNotification</source>
          <target state="new">RawNotification</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>BackgroundExecutionManager.RequestAccessAsync</source>
          <target state="new">BackgroundExecutionManager.RequestAccessAsync</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>