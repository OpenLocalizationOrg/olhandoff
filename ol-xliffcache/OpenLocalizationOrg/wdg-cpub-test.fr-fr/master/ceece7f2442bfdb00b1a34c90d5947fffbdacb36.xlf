<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-48076a9" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ceece7f2442bfdb00b1a34c90d5947fffbdacb36</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci1\porting\wpsl-to-uwp-case-study-bookstore1.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>ms.assetid: e4582717-afb5-4cde-86bb-31fb1c5fc8f3 description: This topic presents a case study of porting a very simple Windows Phone Silverlight app to a Windows 10&amp;\#160;Universal Windows Platform (UWP) app.</source>
          <target state="new">ms.assetid: e4582717-afb5-4cde-86bb-31fb1c5fc8f3 description: This topic presents a case study of porting a very simple Windows Phone Silverlight app to a Windows 10&amp;\#160;Universal Windows Platform (UWP) app.</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>title: Windows Phone Silverlight to UWP case study: Bookstore1</source>
          <target state="new">title: Windows Phone Silverlight to UWP case study: Bookstore1</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Windows Phone Silverlight to UWP case study: Bookstore1</source>
          <target state="new">Windows Phone Silverlight to UWP case study: Bookstore1</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>\[ Updated for UWP apps on Windows 10.</source>
          <target state="new">\[ Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This topic presents a case study of porting a very simple Windows Phone Silverlight app to a Windows 10 Universal Windows Platform (UWP) app.</source>
          <target state="new">This topic presents a case study of porting a very simple Windows Phone Silverlight app to a Windows 10 Universal Windows Platform (UWP) app.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>With Windows 10, you can create a single app package that your customers can install onto a wide range of devices, and that's what we'll do in this case study.</source>
          <target state="new">With Windows 10, you can create a single app package that your customers can install onto a wide range of devices, and that's what we'll do in this case study.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Guide to UWP apps<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn894631)</ept>.</source>
          <target state="new">See <bpt id="p1">[</bpt>Guide to UWP apps<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/dn894631)</ept>.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The app we'll port consists of a <bpt id="p1">**</bpt>ListBox<ept id="p1">**</ept> bound to a view model.</source>
          <target state="new">The app we'll port consists of a <bpt id="p1">**</bpt>ListBox<ept id="p1">**</ept> bound to a view model.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The view model has a list of books that shows title, author, and book cover.</source>
          <target state="new">The view model has a list of books that shows title, author, and book cover.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The book cover images have <bpt id="p1">**</bpt>Build Action<ept id="p1">**</ept> set to <bpt id="p2">**</bpt>Content<ept id="p2">**</ept> and <bpt id="p3">**</bpt>Copy to Output Directory<ept id="p3">**</ept> set to <bpt id="p4">**</bpt>Do not copy<ept id="p4">**</ept>.</source>
          <target state="new">The book cover images have <bpt id="p1">**</bpt>Build Action<ept id="p1">**</ept> set to <bpt id="p2">**</bpt>Content<ept id="p2">**</ept> and <bpt id="p3">**</bpt>Copy to Output Directory<ept id="p3">**</ept> set to <bpt id="p4">**</bpt>Do not copy<ept id="p4">**</ept>.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The previous topics in this section describe the differences between the platforms, and they give details and guidance on the porting process for various aspects of an app from XAML markup, through binding to a view model, down to accessing data.</source>
          <target state="new">The previous topics in this section describe the differences between the platforms, and they give details and guidance on the porting process for various aspects of an app from XAML markup, through binding to a view model, down to accessing data.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A case study aims to complement that guidance by showing it in action in a real example.</source>
          <target state="new">A case study aims to complement that guidance by showing it in action in a real example.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The case studies assume you've read the guidance, which they do not repeat.</source>
          <target state="new">The case studies assume you've read the guidance, which they do not repeat.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>   When opening Bookstore1Universal\_10 in Visual Studio, if you see the message "Visual Studio update required", then follow the steps in <bpt id="p2">[</bpt>TargetPlatformVersion<ept id="p2">](wpsl-to-uwp-troubleshooting.md#targetplatformversion)</ept>.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>   When opening Bookstore1Universal\_10 in Visual Studio, if you see the message "Visual Studio update required", then follow the steps in <bpt id="p2">[</bpt>TargetPlatformVersion<ept id="p2">](wpsl-to-uwp-troubleshooting.md#targetplatformversion)</ept>.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Downloads</source>
          <target state="new">Downloads</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Download the Bookstore1WPSL8 Windows Phone Silverlight app<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=517053)</ept>.</source>
          <target state="new"><bpt id="p1">[</bpt>Download the Bookstore1WPSL8 Windows Phone Silverlight app<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=517053)</ept>.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Download the Bookstore1Universal\_10 Windows 10 app<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=532950)</ept>.</source>
          <target state="new"><bpt id="p1">[</bpt>Download the Bookstore1Universal\_10 Windows 10 app<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=532950)</ept>.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The Windows Phone Silverlight app</source>
          <target state="new">The Windows Phone Silverlight app</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Here’s what Bookstore1WPSL8—the app that we're going to port—looks like.</source>
          <target state="new">Here’s what Bookstore1WPSL8—the app that we're going to port—looks like.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>It's just a vertically-scrolling list box of books beneath the heading of the app's name and page title.</source>
          <target state="new">It's just a vertically-scrolling list box of books beneath the heading of the app's name and page title.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>how bookstore1wpsl8 looks</source>
          <target state="new">how bookstore1wpsl8 looks</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Porting to a Windows 10 project</source>
          <target state="new">Porting to a Windows 10 project</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>It's a very quick task to create a new project in Visual Studio, copy files over to it from Bookstore1WPSL8, and include the copied files in the new project.</source>
          <target state="new">It's a very quick task to create a new project in Visual Studio, copy files over to it from Bookstore1WPSL8, and include the copied files in the new project.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Start by creating a new Blank Application (Windows Universal) project.</source>
          <target state="new">Start by creating a new Blank Application (Windows Universal) project.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Name it Bookstore1Universal\_10.</source>
          <target state="new">Name it Bookstore1Universal\_10.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>These are the files to copy over from Bookstore1WPSL8 to Bookstore1Universal\_10.</source>
          <target state="new">These are the files to copy over from Bookstore1WPSL8 to Bookstore1Universal\_10.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Copy the folder containing the book cover image PNG files (the folder is \\Assets\\CoverImages).</source>
          <target state="new">Copy the folder containing the book cover image PNG files (the folder is \\Assets\\CoverImages).</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>After copying the folder, in <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, make sure <bpt id="p2">**</bpt>Show All Files<ept id="p2">**</ept> is toggled on.</source>
          <target state="new">After copying the folder, in <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, make sure <bpt id="p2">**</bpt>Show All Files<ept id="p2">**</ept> is toggled on.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Right-click the folder that you copied and click <bpt id="p1">**</bpt>Include In Project<ept id="p1">**</ept>.</source>
          <target state="new">Right-click the folder that you copied and click <bpt id="p1">**</bpt>Include In Project<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>That command is what we mean by "including" files or folders in a project.</source>
          <target state="new">That command is what we mean by "including" files or folders in a project.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Each time you copy a file or folder, click <bpt id="p1">**</bpt>Refresh<ept id="p1">**</ept> in <bpt id="p2">**</bpt>Solution Explorer<ept id="p2">**</ept> and then include the file or folder in the project.</source>
          <target state="new">Each time you copy a file or folder, click <bpt id="p1">**</bpt>Refresh<ept id="p1">**</ept> in <bpt id="p2">**</bpt>Solution Explorer<ept id="p2">**</ept> and then include the file or folder in the project.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>There's no need to do this for files that you're replacing in the destination.</source>
          <target state="new">There's no need to do this for files that you're replacing in the destination.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Copy the folder containing the view model source file (the folder is \\ViewModel).</source>
          <target state="new">Copy the folder containing the view model source file (the folder is \\ViewModel).</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Copy MainPage.xaml and replace the file in the destination.</source>
          <target state="new">Copy MainPage.xaml and replace the file in the destination.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>We can keep the App.xaml, and App.xaml.cs that Visual Studio generated for us in the Windows 10 project.</source>
          <target state="new">We can keep the App.xaml, and App.xaml.cs that Visual Studio generated for us in the Windows 10 project.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Edit the source code and markup files that you just copied and change any references to the Bookstore1WPSL8 namespace to Bookstore1Universal\_10.</source>
          <target state="new">Edit the source code and markup files that you just copied and change any references to the Bookstore1WPSL8 namespace to Bookstore1Universal\_10.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>A quick way to do that is to use the <bpt id="p1">**</bpt>Replace In Files<ept id="p1">**</ept> feature.</source>
          <target state="new">A quick way to do that is to use the <bpt id="p1">**</bpt>Replace In Files<ept id="p1">**</ept> feature.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>In the imperative code in the view model source file, these porting changes are needed:</source>
          <target state="new">In the imperative code in the view model source file, these porting changes are needed:</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Change <ph id="ph1">`System.ComponentModel.DesignerProperties`</ph> to <ph id="ph2">`DesignMode`</ph> and then use the <bpt id="p1">**</bpt>Resolve<ept id="p1">**</ept> command on it.</source>
          <target state="new">Change <ph id="ph1">`System.ComponentModel.DesignerProperties`</ph> to <ph id="ph2">`DesignMode`</ph> and then use the <bpt id="p1">**</bpt>Resolve<ept id="p1">**</ept> command on it.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Delete the <ph id="ph1">`IsInDesignTool`</ph> property and use IntelliSense to add the correct property name: <ph id="ph2">`DesignModeEnabled`</ph>.</source>
          <target state="new">Delete the <ph id="ph1">`IsInDesignTool`</ph> property and use IntelliSense to add the correct property name: <ph id="ph2">`DesignModeEnabled`</ph>.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">**</bpt>Resolve<ept id="p1">**</ept> command on <ph id="ph1">`ImageSource`</ph>.</source>
          <target state="new">Use the <bpt id="p1">**</bpt>Resolve<ept id="p1">**</ept> command on <ph id="ph1">`ImageSource`</ph>.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">**</bpt>Resolve<ept id="p1">**</ept> command on <ph id="ph1">`BitmapImage`</ph>.</source>
          <target state="new">Use the <bpt id="p1">**</bpt>Resolve<ept id="p1">**</ept> command on <ph id="ph1">`BitmapImage`</ph>.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Delete using <ph id="ph1">`System.Windows.Media;`</ph> and <ph id="ph2">`using System.Windows.Media.Imaging;`</ph>.</source>
          <target state="new">Delete using <ph id="ph1">`System.Windows.Media;`</ph> and <ph id="ph2">`using System.Windows.Media.Imaging;`</ph>.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Change the value returned by the <bpt id="p1">**</bpt>Bookstore1Universal\_10.BookstoreViewModel.AppName<ept id="p1">**</ept> property from "BOOKSTORE1WPSL8" to "BOOKSTORE1UNIVERSAL".</source>
          <target state="new">Change the value returned by the <bpt id="p1">**</bpt>Bookstore1Universal\_10.BookstoreViewModel.AppName<ept id="p1">**</ept> property from "BOOKSTORE1WPSL8" to "BOOKSTORE1UNIVERSAL".</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>In MainPage.xaml, these porting changes are needed:</source>
          <target state="new">In MainPage.xaml, these porting changes are needed:</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Change <ph id="ph1">`phone:PhoneApplicationPage`</ph> to <ph id="ph2">`Page`</ph> (don't forget the occurrences in property element syntax).</source>
          <target state="new">Change <ph id="ph1">`phone:PhoneApplicationPage`</ph> to <ph id="ph2">`Page`</ph> (don't forget the occurrences in property element syntax).</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Delete the <ph id="ph1">`phone`</ph> and <ph id="ph2">`shell`</ph> namespace prefix declarations.</source>
          <target state="new">Delete the <ph id="ph1">`phone`</ph> and <ph id="ph2">`shell`</ph> namespace prefix declarations.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Change "clr-namespace" to "using" in the remaining namespace prefix declaration.</source>
          <target state="new">Change "clr-namespace" to "using" in the remaining namespace prefix declaration.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>We can choose to correct markup compilation errors very cheaply if we want to see results soonest, even if that means temporarily removing markup.</source>
          <target state="new">We can choose to correct markup compilation errors very cheaply if we want to see results soonest, even if that means temporarily removing markup.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>But, let's keep a record of the debt we accrue by doing so.</source>
          <target state="new">But, let's keep a record of the debt we accrue by doing so.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Here it is in this case.</source>
          <target state="new">Here it is in this case.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>In the root <bpt id="p1">**</bpt>Page<ept id="p1">**</ept> element in <bpt id="p2">**</bpt>MainPage.xaml<ept id="p2">**</ept>, delete <ph id="ph1">`SupportedOrientations="Portrait"`</ph>.</source>
          <target state="new">In the root <bpt id="p1">**</bpt>Page<ept id="p1">**</ept> element in <bpt id="p2">**</bpt>MainPage.xaml<ept id="p2">**</ept>, delete <ph id="ph1">`SupportedOrientations="Portrait"`</ph>.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>In the root <bpt id="p1">**</bpt>Page<ept id="p1">**</ept> element in <bpt id="p2">**</bpt>MainPage.xaml<ept id="p2">**</ept>, delete <ph id="ph1">`Orientation="Portrait"`</ph>.</source>
          <target state="new">In the root <bpt id="p1">**</bpt>Page<ept id="p1">**</ept> element in <bpt id="p2">**</bpt>MainPage.xaml<ept id="p2">**</ept>, delete <ph id="ph1">`Orientation="Portrait"`</ph>.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>In the root <bpt id="p1">**</bpt>Page<ept id="p1">**</ept> element in <bpt id="p2">**</bpt>MainPage.xaml<ept id="p2">**</ept>, delete <ph id="ph1">`shell:SystemTray.IsVisible="True"`</ph>.</source>
          <target state="new">In the root <bpt id="p1">**</bpt>Page<ept id="p1">**</ept> element in <bpt id="p2">**</bpt>MainPage.xaml<ept id="p2">**</ept>, delete <ph id="ph1">`shell:SystemTray.IsVisible="True"`</ph>.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">`BookTemplate`</ph> data template, delete the references to the <ph id="ph2">`PhoneTextExtraLargeStyle`</ph> and <ph id="ph3">`PhoneTextSubtleStyle`</ph><bpt id="p1"> **</bpt>TextBlock<ept id="p1">**</ept> styles.</source>
          <target state="new">In the <ph id="ph1">`BookTemplate`</ph> data template, delete the references to the <ph id="ph2">`PhoneTextExtraLargeStyle`</ph> and <ph id="ph3">`PhoneTextSubtleStyle`</ph><bpt id="p1"> **</bpt>TextBlock<ept id="p1">**</ept> styles.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">`TitlePanel`</ph><bpt id="p1"> **</bpt>StackPanel<ept id="p1">**</ept>, delete the references to the <ph id="ph2">`PhoneTextNormalStyle`</ph> and <ph id="ph3">`PhoneTextTitle1Style`</ph><bpt id="p2"> **</bpt>TextBlock<ept id="p2">**</ept> styles.</source>
          <target state="new">In the <ph id="ph1">`TitlePanel`</ph><bpt id="p1"> **</bpt>StackPanel<ept id="p1">**</ept>, delete the references to the <ph id="ph2">`PhoneTextNormalStyle`</ph> and <ph id="ph3">`PhoneTextTitle1Style`</ph><bpt id="p2"> **</bpt>TextBlock<ept id="p2">**</ept> styles.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Let's work on the UI for the mobile device family first, and we can consider other form factors after that.</source>
          <target state="new">Let's work on the UI for the mobile device family first, and we can consider other form factors after that.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>You can build and run the app now.</source>
          <target state="new">You can build and run the app now.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Here's how it looks on the mobile emulator.</source>
          <target state="new">Here's how it looks on the mobile emulator.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>the uwp app on mobile with initial source code changes</source>
          <target state="new">the uwp app on mobile with initial source code changes</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The view and the view model are working together correctly, and the <bpt id="p1">**</bpt>ListBox<ept id="p1">**</ept> is functioning.</source>
          <target state="new">The view and the view model are working together correctly, and the <bpt id="p1">**</bpt>ListBox<ept id="p1">**</ept> is functioning.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>We mostly just need to fix the styling and get the images to show up.</source>
          <target state="new">We mostly just need to fix the styling and get the images to show up.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Paying off the debt items, and some initial styling</source>
          <target state="new">Paying off the debt items, and some initial styling</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>By default, all orientations are supported.</source>
          <target state="new">By default, all orientations are supported.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The Windows Phone Silverlight app explicitly constrains itself to portrait-only, though, so debt items \#1 and \#2 are paid off by going into the app package manifest in the new project and checking <bpt id="p1">**</bpt>Portrait<ept id="p1">**</ept> under <bpt id="p2">**</bpt>Supported orientations<ept id="p2">**</ept>.</source>
          <target state="new">The Windows Phone Silverlight app explicitly constrains itself to portrait-only, though, so debt items \#1 and \#2 are paid off by going into the app package manifest in the new project and checking <bpt id="p1">**</bpt>Portrait<ept id="p1">**</ept> under <bpt id="p2">**</bpt>Supported orientations<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>For this app, item \#3 is not a debt since the status bar (formerly called the system tray) is shown by default.</source>
          <target state="new">For this app, item \#3 is not a debt since the status bar (formerly called the system tray) is shown by default.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>For items \#4 and \#5, we need to find four Universal Windows Platform (UWP)<bpt id="p1"> **</bpt>TextBlock<ept id="p1">**</ept> styles that correspond to the Windows Phone Silverlight styles that we were using.</source>
          <target state="new">For items \#4 and \#5, we need to find four Universal Windows Platform (UWP)<bpt id="p1"> **</bpt>TextBlock<ept id="p1">**</ept> styles that correspond to the Windows Phone Silverlight styles that we were using.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>You can run the Windows Phone Silverlight app in the emulator and compare it side-by-side with the illustration in the <bpt id="p1">[</bpt>Text<ept id="p1">](wpsl-to-uwp-porting-xaml-and-ui.md#text)</ept> section.</source>
          <target state="new">You can run the Windows Phone Silverlight app in the emulator and compare it side-by-side with the illustration in the <bpt id="p1">[</bpt>Text<ept id="p1">](wpsl-to-uwp-porting-xaml-and-ui.md#text)</ept> section.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>From doing that, and from looking at the properties of the Windows Phone Silverlight system styles, we can make this table.</source>
          <target state="new">From doing that, and from looking at the properties of the Windows Phone Silverlight system styles, we can make this table.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Windows Phone Silverlight style key</source>
          <target state="new">Windows Phone Silverlight style key</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>UWP style key</source>
          <target state="new">UWP style key</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>PhoneTextExtraLargeStyle</source>
          <target state="new">PhoneTextExtraLargeStyle</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>TitleTextBlockStyle</source>
          <target state="new">TitleTextBlockStyle</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>PhoneTextSubtleStyle</source>
          <target state="new">PhoneTextSubtleStyle</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>SubtitleTextBlockStyle</source>
          <target state="new">SubtitleTextBlockStyle</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>PhoneTextNormalStyle</source>
          <target state="new">PhoneTextNormalStyle</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>CaptionTextBlockStyle</source>
          <target state="new">CaptionTextBlockStyle</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>PhoneTextTitle1Style</source>
          <target state="new">PhoneTextTitle1Style</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>HeaderTextBlockStyle</source>
          <target state="new">HeaderTextBlockStyle</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>To set those styles, you can just type them into the markup editor or you can use the Visual Studio XAML Tools and set them without typing a thing.</source>
          <target state="new">To set those styles, you can just type them into the markup editor or you can use the Visual Studio XAML Tools and set them without typing a thing.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>To do that, you right-click a <bpt id="p1">**</bpt>TextBlock<ept id="p1">**</ept> and click <bpt id="p2">**</bpt>Edit Style<ept id="p2">**</ept> <ph id="ph1">&amp;gt;</ph> <bpt id="p3">**</bpt>Apply Resource<ept id="p3">**</ept>.</source>
          <target state="new">To do that, you right-click a <bpt id="p1">**</bpt>TextBlock<ept id="p1">**</ept> and click <bpt id="p2">**</bpt>Edit Style<ept id="p2">**</ept> <ph id="ph1">&amp;gt;</ph> <bpt id="p3">**</bpt>Apply Resource<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>To do that with the <bpt id="p1">**</bpt>TextBlock<ept id="p1">**</ept>s in the item template, right click the <bpt id="p2">**</bpt>ListBox<ept id="p2">**</ept> and click <bpt id="p3">**</bpt>Edit Additional Templates<ept id="p3">**</ept> <ph id="ph1">&amp;gt;</ph> <bpt id="p4">**</bpt>Edit Generated Items (ItemTemplate)<ept id="p4">**</ept>.</source>
          <target state="new">To do that with the <bpt id="p1">**</bpt>TextBlock<ept id="p1">**</ept>s in the item template, right click the <bpt id="p2">**</bpt>ListBox<ept id="p2">**</ept> and click <bpt id="p3">**</bpt>Edit Additional Templates<ept id="p3">**</ept> <ph id="ph1">&amp;gt;</ph> <bpt id="p4">**</bpt>Edit Generated Items (ItemTemplate)<ept id="p4">**</ept>.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>There is an 80% opaque white background behind the items, because the default style of the <bpt id="p1">**</bpt>ListBox<ept id="p1">**</ept> control sets its background to the <ph id="ph1">`ListBoxBackgroundThemeBrush`</ph> system resource.</source>
          <target state="new">There is an 80% opaque white background behind the items, because the default style of the <bpt id="p1">**</bpt>ListBox<ept id="p1">**</ept> control sets its background to the <ph id="ph1">`ListBoxBackgroundThemeBrush`</ph> system resource.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Set <ph id="ph1">`Background="Transparent"`</ph> on the <bpt id="p1">**</bpt>ListBox<ept id="p1">**</ept> to clear that background.</source>
          <target state="new">Set <ph id="ph1">`Background="Transparent"`</ph> on the <bpt id="p1">**</bpt>ListBox<ept id="p1">**</ept> to clear that background.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>To left-align the <bpt id="p1">**</bpt>TextBlock<ept id="p1">**</ept>s in the item template, edit it again the same way as described above and set a <bpt id="p2">**</bpt>Margin<ept id="p2">**</ept> of <ph id="ph1">`"9.6,0"`</ph> on both <bpt id="p3">**</bpt>TextBlock<ept id="p3">**</ept>s.</source>
          <target state="new">To left-align the <bpt id="p1">**</bpt>TextBlock<ept id="p1">**</ept>s in the item template, edit it again the same way as described above and set a <bpt id="p2">**</bpt>Margin<ept id="p2">**</ept> of <ph id="ph1">`"9.6,0"`</ph> on both <bpt id="p3">**</bpt>TextBlock<ept id="p3">**</ept>s.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>After that is done, because of <bpt id="p1">[</bpt>changes related to view pixels<ept id="p1">](wpsl-to-uwp-porting-xaml-and-ui.md#effective-pixels)</ept>, we need to go through and multiply any fixed size dimension that we haven’t yet changed (margins, width, height, etc) by 0.8.</source>
          <target state="new">After that is done, because of <bpt id="p1">[</bpt>changes related to view pixels<ept id="p1">](wpsl-to-uwp-porting-xaml-and-ui.md#effective-pixels)</ept>, we need to go through and multiply any fixed size dimension that we haven’t yet changed (margins, width, height, etc) by 0.8.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>So, for example, the images should change from 70x70px to 56x56px.</source>
          <target state="new">So, for example, the images should change from 70x70px to 56x56px.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>But, let’s get those images to render before we show the results of our styling.</source>
          <target state="new">But, let’s get those images to render before we show the results of our styling.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Binding an Image to a view model</source>
          <target state="new">Binding an Image to a view model</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>In Bookstore1WPSL8, we did this:</source>
          <target state="new">In Bookstore1WPSL8, we did this:</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>In Bookstore1Universal, we use the ms-appx <bpt id="p1">[</bpt>URI scheme<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/jj655406)</ept>.</source>
          <target state="new">In Bookstore1Universal, we use the ms-appx <bpt id="p1">[</bpt>URI scheme<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/jj655406)</ept>.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>So that we can keep the rest of our code the same, we can use a different overload of the <bpt id="p1">**</bpt>System.Uri<ept id="p1">**</ept> constructor to put the ms-appx URI scheme in a base URI and append the rest of the path onto that.</source>
          <target state="new">So that we can keep the rest of our code the same, we can use a different overload of the <bpt id="p1">**</bpt>System.Uri<ept id="p1">**</ept> constructor to put the ms-appx URI scheme in a base URI and append the rest of the path onto that.</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Like this:</source>
          <target state="new">Like this:</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Universal styling</source>
          <target state="new">Universal styling</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Now, we just need to make some final styling tweaks and confirm that the app looks good on desktop (and other) form factors as well as mobile.</source>
          <target state="new">Now, we just need to make some final styling tweaks and confirm that the app looks good on desktop (and other) form factors as well as mobile.</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The steps are below.</source>
          <target state="new">The steps are below.</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>And you can use the links at the top of this topic to download the projects and see the results of all the changes between here and the end of the case study.</source>
          <target state="new">And you can use the links at the top of this topic to download the projects and see the results of all the changes between here and the end of the case study.</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>To tighten up the spacing between items, find the <ph id="ph1">`BookTemplate`</ph> data template in MainPage.xaml and delete the <ph id="ph2">`Margin`</ph> attribute from the root <bpt id="p1">**</bpt>Grid<ept id="p1">**</ept>.</source>
          <target state="new">To tighten up the spacing between items, find the <ph id="ph1">`BookTemplate`</ph> data template in MainPage.xaml and delete the <ph id="ph2">`Margin`</ph> attribute from the root <bpt id="p1">**</bpt>Grid<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>If you want to give the page title a little more breathing room, you can reset the bottom margin of <ph id="ph1">`-5.6`</ph> to <ph id="ph2">`0`</ph> on the page title <bpt id="p1">**</bpt>TextBlock<ept id="p1">**</ept>.</source>
          <target state="new">If you want to give the page title a little more breathing room, you can reset the bottom margin of <ph id="ph1">`-5.6`</ph> to <ph id="ph2">`0`</ph> on the page title <bpt id="p1">**</bpt>TextBlock<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Now, we need to set <ph id="ph1">`LayoutRoot`</ph>'s Background to the correct default value so that the app looks appropriate when running on all devices no matter what the theme is.</source>
          <target state="new">Now, we need to set <ph id="ph1">`LayoutRoot`</ph>'s Background to the correct default value so that the app looks appropriate when running on all devices no matter what the theme is.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Change it from <ph id="ph1">`"Transparent"`</ph> to <ph id="ph2">`"{ThemeResource ApplicationPageBackgroundThemeBrush}"`</ph>.</source>
          <target state="new">Change it from <ph id="ph1">`"Transparent"`</ph> to <ph id="ph2">`"{ThemeResource ApplicationPageBackgroundThemeBrush}"`</ph>.</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>With a more sophisticated app, this would be the point at which we'd use the guidance in <bpt id="p1">[</bpt>Porting for form factor and user experience<ept id="p1">](wpsl-to-uwp-form-factors-and-ux.md)</ept> and really make optimal use of the form factor of each of the many devices the app can now run on.</source>
          <target state="new">With a more sophisticated app, this would be the point at which we'd use the guidance in <bpt id="p1">[</bpt>Porting for form factor and user experience<ept id="p1">](wpsl-to-uwp-form-factors-and-ux.md)</ept> and really make optimal use of the form factor of each of the many devices the app can now run on.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>But, for this simple app, we can stop here and see how the app looks after that last sequence of styling operations.</source>
          <target state="new">But, for this simple app, we can stop here and see how the app looks after that last sequence of styling operations.</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>It actually looks the same on mobile and desktop devices, although it's not making best use of space on wide form factors (but we'll investigate how to do that in a later case study).</source>
          <target state="new">It actually looks the same on mobile and desktop devices, although it's not making best use of space on wide form factors (but we'll investigate how to do that in a later case study).</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Theme changes<ept id="p1">](wpsl-to-uwp-porting-xaml-and-ui.md#theme-changes)</ept> to see how to control the theme of your app.</source>
          <target state="new">See <bpt id="p1">[</bpt>Theme changes<ept id="p1">](wpsl-to-uwp-porting-xaml-and-ui.md#theme-changes)</ept> to see how to control the theme of your app.</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>the ported windows 10 app</source>
          <target state="new">the ported windows 10 app</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The ported Windows 10 app running on a Mobile device</source>
          <target state="new">The ported Windows 10 app running on a Mobile device</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>An optional adjustment to the list box for Mobile devices</source>
          <target state="new">An optional adjustment to the list box for Mobile devices</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>When the app is running on a Mobile device, the background of a list box is light by default in both themes.</source>
          <target state="new">When the app is running on a Mobile device, the background of a list box is light by default in both themes.</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>That may be the style that you prefer and, if so, then there's nothing more to do.</source>
          <target state="new">That may be the style that you prefer and, if so, then there's nothing more to do.</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>But, controls are designed so that you can customize their look while leaving their behavior unaffected.</source>
          <target state="new">But, controls are designed so that you can customize their look while leaving their behavior unaffected.</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>So, if you want the list box to be dark in the dark theme—the way the original app looked—then follow <bpt id="p1">[</bpt>these instructions<ept id="p1">](w8x-to-uwp-case-study-bookstore1.md#an-optional-adjustment)</ept>.</source>
          <target state="new">So, if you want the list box to be dark in the dark theme—the way the original app looked—then follow <bpt id="p1">[</bpt>these instructions<ept id="p1">](w8x-to-uwp-case-study-bookstore1.md#an-optional-adjustment)</ept>.</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Conclusion</source>
          <target state="new">Conclusion</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>This case study showed the process of porting a very simple app—arguably an unrealistically simple one.</source>
          <target state="new">This case study showed the process of porting a very simple app—arguably an unrealistically simple one.</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>For instance, list controls can be used for selection or for establishing a context for navigation; the app navigates to a page with more details about the item that was tapped.</source>
          <target state="new">For instance, list controls can be used for selection or for establishing a context for navigation; the app navigates to a page with more details about the item that was tapped.</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>This particular app does nothing with the user's selection, and it has no navigation.</source>
          <target state="new">This particular app does nothing with the user's selection, and it has no navigation.</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Even so, the case study served to break the ice, to introduce the porting process, and to demonstrate important techniques that you can use in real UWP apps.</source>
          <target state="new">Even so, the case study served to break the ice, to introduce the porting process, and to demonstrate important techniques that you can use in real UWP apps.</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The next case study is <bpt id="p1">[</bpt>Bookstore2<ept id="p1">](wpsl-to-uwp-case-study-bookstore2.md)</ept>, in which we look at accessing and displaying grouped data.</source>
          <target state="new">The next case study is <bpt id="p1">[</bpt>Bookstore2<ept id="p1">](wpsl-to-uwp-case-study-bookstore2.md)</ept>, in which we look at accessing and displaying grouped data.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>