<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-48076a9" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3f54ae1cd1b590f31927a5348c34cad31d159fc3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci2\networking\websockets.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>WebSockets provide a mechanism for fast, secure two-way communication between a client and a server over the web using HTTP(S).</source>
          <target state="new">WebSockets provide a mechanism for fast, secure two-way communication between a client and a server over the web using HTTP(S).</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>WebSockets</source>
          <target state="new">WebSockets</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>WebSockets</source>
          <target state="new">WebSockets</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>\[ Updated for UWP apps on Windows 10.</source>
          <target state="new">\[ Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Important APIs</source>
          <target state="new">Important APIs</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>MessageWebSocket</source>
          <target state="new">MessageWebSocket</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>StreamWebSocket</source>
          <target state="new">StreamWebSocket</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>WebSockets provide a mechanism for fast, secure two-way communication between a client and a server over the web using HTTP(S).</source>
          <target state="new">WebSockets provide a mechanism for fast, secure two-way communication between a client and a server over the web using HTTP(S).</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Under the <bpt id="p1">[</bpt>WebSocket Protocol<ept id="p1">](http://tools.ietf.org/html/rfc6455)</ept>, data is transferred immediately over a full-duplex single socket connection, allowing messages to be sent and received from both endpoints in real time.</source>
          <target state="new">Under the <bpt id="p1">[</bpt>WebSocket Protocol<ept id="p1">](http://tools.ietf.org/html/rfc6455)</ept>, data is transferred immediately over a full-duplex single socket connection, allowing messages to be sent and received from both endpoints in real time.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>WebSockets are ideal for use in real-time gaming where instant social network notifications and up-to-date displays of information (game statistics ) need to be secure and use fast data transfer.</source>
          <target state="new">WebSockets are ideal for use in real-time gaming where instant social network notifications and up-to-date displays of information (game statistics ) need to be secure and use fast data transfer.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Universal Windows Platform (UWP) developers can use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MessageWebSocket<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226842)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>StreamWebSocket<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br226923)</ept> classes to connect with servers that support the Websocket protocol.</source>
          <target state="new">Universal Windows Platform (UWP) developers can use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MessageWebSocket<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226842)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>StreamWebSocket<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br226923)</ept> classes to connect with servers that support the Websocket protocol.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>MessageWebSocket</source>
          <target state="new">MessageWebSocket</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>StreamWebSocket</source>
          <target state="new">StreamWebSocket</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Suitable for typical scenarios where messages are not extremely large.</source>
          <target state="new">Suitable for typical scenarios where messages are not extremely large.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Suitable for scenarios in which large files (such as photos or videos) are being transferred.</source>
          <target state="new">Suitable for scenarios in which large files (such as photos or videos) are being transferred.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Enables notification that an entire WebSocket message has been received.</source>
          <target state="new">Enables notification that an entire WebSocket message has been received.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Allows sections of a message to be read with each read operation.</source>
          <target state="new">Allows sections of a message to be read with each read operation.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Supports both UTF-8 and binary messages.</source>
          <target state="new">Supports both UTF-8 and binary messages.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Supports only binary messages.</source>
          <target state="new">Supports only binary messages.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Similar to a UDP or datagram socket.</source>
          <target state="new">Similar to a UDP or datagram socket.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Similar to a TCP or stream socket.</source>
          <target state="new">Similar to a TCP or stream socket.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>In most cases you'll want to use a secure WebSocket connection to encrypt data sent and received.</source>
          <target state="new">In most cases you'll want to use a secure WebSocket connection to encrypt data sent and received.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This will also increase the chances that your connection will succeed, as many proxies will reject unencrypted WebSocket connections.</source>
          <target state="new">This will also increase the chances that your connection will succeed, as many proxies will reject unencrypted WebSocket connections.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The WebSocket protocol defines the following two URI schemes.</source>
          <target state="new">The WebSocket protocol defines the following two URI schemes.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>ws: - use for unencrypted connections.</source>
          <target state="new">ws: - use for unencrypted connections.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>wss: - use for secure connections that should be encrypted.</source>
          <target state="new">wss: - use for secure connections that should be encrypted.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>To encrypt a WebSocket connection, use the wss: URI scheme, for example, <ph id="ph1">`wss://www.contoso.com/mywebservice`</ph>.</source>
          <target state="new">To encrypt a WebSocket connection, use the wss: URI scheme, for example, <ph id="ph1">`wss://www.contoso.com/mywebservice`</ph>.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Using MessageWebSocket</source>
          <target state="new">Using MessageWebSocket</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MessageWebSocket<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226842)</ept> allows sections of a message to be read with each read operation.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MessageWebSocket<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226842)</ept> allows sections of a message to be read with each read operation.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">**</bpt>MessageWebSocket<ept id="p1">**</ept> is typically used in scenarios where messages are not extremely large.</source>
          <target state="new">A <bpt id="p1">**</bpt>MessageWebSocket<ept id="p1">**</ept> is typically used in scenarios where messages are not extremely large.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Both UTF-8 and binary files are supported.</source>
          <target state="new">Both UTF-8 and binary files are supported.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The code in this section creates a new <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MessageWebSocket<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226842)</ept>, connects to a WebSocket server, and sends data to the server.</source>
          <target state="new">The code in this section creates a new <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MessageWebSocket<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226842)</ept>, connects to a WebSocket server, and sends data to the server.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Once a successful connection is established, the app waits for the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MessageWebSocket.MessageReceived<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br241358)</ept> event to be triggered, indicating that data was received.</source>
          <target state="new">Once a successful connection is established, the app waits for the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MessageWebSocket.MessageReceived<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br241358)</ept> event to be triggered, indicating that data was received.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This sample uses the WebSocket.org echo server, a service which simply echoes back to the sender any string sent to it.</source>
          <target state="new">This sample uses the WebSocket.org echo server, a service which simply echoes back to the sender any string sent to it.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>By using the "wss:" protocol specifier, this sample uses a secure connection to send and receive messages.</source>
          <target state="new">By using the "wss:" protocol specifier, this sample uses a secure connection to send and receive messages.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Once you have initialized the WebSocket connection, your code must perform the following activities to properly send and receive data.</source>
          <target state="new">Once you have initialized the WebSocket connection, your code must perform the following activities to properly send and receive data.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Implement a callback for the MessageWebSocket.MessageReceived event</source>
          <target state="new">Implement a callback for the MessageWebSocket.MessageReceived event</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Before establishing a connection and sending data with a WebSocket, your app needs to register an event callback to receive notification when data is received.</source>
          <target state="new">Before establishing a connection and sending data with a WebSocket, your app needs to register an event callback to receive notification when data is received.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>When the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MessageWebSocket.MessageReceived<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br241358)</ept> event occurs, the registered callback is called and receives data from <bpt id="p3">[</bpt><bpt id="p4">**</bpt>MessageWebSocketMessageReceivedEventArgs<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br226852)</ept>.</source>
          <target state="new">When the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MessageWebSocket.MessageReceived<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br241358)</ept> event occurs, the registered callback is called and receives data from <bpt id="p3">[</bpt><bpt id="p4">**</bpt>MessageWebSocketMessageReceivedEventArgs<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br226852)</ept>.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>This example is written with the assumption that the messages being sent are in UTF-8 format.</source>
          <target state="new">This example is written with the assumption that the messages being sent are in UTF-8 format.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The following sample function receives a string from a connected WebSocket server and prints the string to the debugger output window.</source>
          <target state="new">The following sample function receives a string from a connected WebSocket server and prints the string to the debugger output window.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Implement a callback for the MessageWebSocket.Closed event</source>
          <target state="new">Implement a callback for the MessageWebSocket.Closed event</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Before establishing a connection and sending data with a WebSocket, your app needs to register an event callback to receive notification when the WebSocket is closed by the WebSocket server.</source>
          <target state="new">Before establishing a connection and sending data with a WebSocket, your app needs to register an event callback to receive notification when the WebSocket is closed by the WebSocket server.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>When the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MessageWebSocket.Closed<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh701364)</ept> event occurs, the registered callback is called to indicate the connection was closed by the WebSocket server.</source>
          <target state="new">When the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MessageWebSocket.Closed<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh701364)</ept> event occurs, the registered callback is called to indicate the connection was closed by the WebSocket server.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Send a message on a WebSocket</source>
          <target state="new">Send a message on a WebSocket</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Once a connection is established, the WebSocket client can send data to the server.</source>
          <target state="new">Once a connection is established, the WebSocket client can send data to the server.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DataWriter.StoreAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208171)</ept> method returns a parameter that maps to an unsigned int.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>DataWriter.StoreAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208171)</ept> method returns a parameter that maps to an unsigned int.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>This changes how we define the task to send the message compared with the task to make the connection.</source>
          <target state="new">This changes how we define the task to send the message compared with the task to make the connection.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>   When you create a new DataWriter object using the MessageWebSocket's OutputStream, the DataWriter takes ownership of the OutputStream, and will deallocate the Outputstream when the DataWriter goes out of scope.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>   When you create a new DataWriter object using the MessageWebSocket's OutputStream, the DataWriter takes ownership of the OutputStream, and will deallocate the Outputstream when the DataWriter goes out of scope.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>This causes any subsequent attempts to use the OutputStream to fail with an HRESULT value of 0x80000013.</source>
          <target state="new">This causes any subsequent attempts to use the OutputStream to fail with an HRESULT value of 0x80000013.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>To avoid deallocating the OutputStream, this code calls the DataWriter's DetachStream method, which returns ownership of the stream to the WebSocket object.</source>
          <target state="new">To avoid deallocating the OutputStream, this code calls the DataWriter's DetachStream method, which returns ownership of the stream to the WebSocket object.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The following function sends the given string to a connected WebSocket, and prints a verification message in the debugger output window.</source>
          <target state="new">The following function sends the given string to a connected WebSocket, and prints a verification message in the debugger output window.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Using advanced controls with WebSockets</source>
          <target state="new">Using advanced controls with WebSockets</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>MessageWebSocket<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226842)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>StreamWebSocket<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br226923)</ept> follow the same model for using advanced controls.</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>MessageWebSocket<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226842)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>StreamWebSocket<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br226923)</ept> follow the same model for using advanced controls.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Corresponding with each of the above primary classes are related classes to access advanced controls.</source>
          <target state="new">Corresponding with each of the above primary classes are related classes to access advanced controls.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>MessageWebSocketControl<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226843)</ept> provides socket control data on a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>MessageWebSocket<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br226842)</ept> object.</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>MessageWebSocketControl<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226843)</ept> provides socket control data on a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>MessageWebSocket<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br226842)</ept> object.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>StreamWebSocketControl<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226924)</ept> provides socket control data on a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>StreamWebSocket<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br226923)</ept> object.</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>StreamWebSocketControl<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226924)</ept> provides socket control data on a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>StreamWebSocket<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br226923)</ept> object.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The basic model to use advanced controls is the same for both types of WebSockets.</source>
          <target state="new">The basic model to use advanced controls is the same for both types of WebSockets.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The following discussion uses a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StreamWebSocket<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226923)</ept> as an example, but the same process can be used with a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>MessageWebSocket<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br226842)</ept>.</source>
          <target state="new">The following discussion uses a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StreamWebSocket<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226923)</ept> as an example, but the same process can be used with a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>MessageWebSocket<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br226842)</ept>.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Create the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StreamWebSocket<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226923)</ept> object.</source>
          <target state="new">Create the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StreamWebSocket<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226923)</ept> object.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StreamWebSocket.Control<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226934)</ept> property to retrieve the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>StreamWebSocketControl<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br226924)</ept> instance associated with this <bpt id="p5">[</bpt><bpt id="p6">**</bpt>StreamWebSocket<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/br226923)</ept> object.</source>
          <target state="new">Use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StreamWebSocket.Control<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226934)</ept> property to retrieve the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>StreamWebSocketControl<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br226924)</ept> instance associated with this <bpt id="p5">[</bpt><bpt id="p6">**</bpt>StreamWebSocket<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/br226923)</ept> object.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Get or set properties on the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StreamWebSocketControl<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226924)</ept> instance to get or set specific advanced controls.</source>
          <target state="new">Get or set properties on the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StreamWebSocketControl<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226924)</ept> instance to get or set specific advanced controls.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Both <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StreamWebSocket<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226923)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>MessageWebSocket<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br226842)</ept> impose requirements on when advanced controls can be set.</source>
          <target state="new">Both <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StreamWebSocket<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226923)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>MessageWebSocket<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br226842)</ept> impose requirements on when advanced controls can be set.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>For all advanced controls on the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StreamWebSocket<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226923)</ept>, the app must always set the property before issuing a Connect operation.</source>
          <target state="new">For all advanced controls on the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StreamWebSocket<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226923)</ept>, the app must always set the property before issuing a Connect operation.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Because of this requirement, it is best practice to set all control properties immediately after creating the <bpt id="p1">**</bpt>StreamWebSocket<ept id="p1">**</ept> object.</source>
          <target state="new">Because of this requirement, it is best practice to set all control properties immediately after creating the <bpt id="p1">**</bpt>StreamWebSocket<ept id="p1">**</ept> object.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Do not try to set a control property after the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StreamWebSocket.ConnectAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226933)</ept> method has been called.</source>
          <target state="new">Do not try to set a control property after the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>StreamWebSocket.ConnectAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226933)</ept> method has been called.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>For all of the advanced controls on the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MessageWebSocket<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226842)</ept> except the message type, you must set the property before issuing a Connect operation.</source>
          <target state="new">For all of the advanced controls on the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MessageWebSocket<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226842)</ept> except the message type, you must set the property before issuing a Connect operation.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>It is best practice to set all control properties immediately after creating the <bpt id="p1">**</bpt>MessageWebSocket<ept id="p1">**</ept> object.</source>
          <target state="new">It is best practice to set all control properties immediately after creating the <bpt id="p1">**</bpt>MessageWebSocket<ept id="p1">**</ept> object.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Except for the message type, do not attempt to change a control property after <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MessageWebSocket.ConnectAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226859)</ept> has been called.</source>
          <target state="new">Except for the message type, do not attempt to change a control property after <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MessageWebSocket.ConnectAsync<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226859)</ept> has been called.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>WebSocket information classes</source>
          <target state="new">WebSocket information classes</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>MessageWebSocket<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226842)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>StreamWebSocket<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br226923)</ept> each have a corresponding class that provides additional information about a WebSocket instance.</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>MessageWebSocket<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226842)</ept> and <bpt id="p3">[</bpt><bpt id="p4">**</bpt>StreamWebSocket<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br226923)</ept> each have a corresponding class that provides additional information about a WebSocket instance.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>MessageWebSocketInformation<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226849)</ept> provides information about a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>MessageWebSocket<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br226842)</ept>, and you retrieve an instance of the information class using the <bpt id="p5">[</bpt><bpt id="p6">**</bpt>MessageWebSocket.Information<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/br226861)</ept> property.</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>MessageWebSocketInformation<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226849)</ept> provides information about a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>MessageWebSocket<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br226842)</ept>, and you retrieve an instance of the information class using the <bpt id="p5">[</bpt><bpt id="p6">**</bpt>MessageWebSocket.Information<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/br226861)</ept> property.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>StreamWebSocketInformation<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226929)</ept> provides information about a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>StreamWebSocket<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br226923)</ept>, and you retrieve an instance of the information class using the <bpt id="p5">[</bpt><bpt id="p6">**</bpt>StreamWebSocket.Information<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/br226935)</ept> property.</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>StreamWebSocketInformation<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226929)</ept> provides information about a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>StreamWebSocket<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br226923)</ept>, and you retrieve an instance of the information class using the <bpt id="p5">[</bpt><bpt id="p6">**</bpt>StreamWebSocket.Information<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/br226935)</ept> property.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Note that all of the properties on both Information classes are read-only, and that you can retrieve current information at any time during the lifetime of a web socket object.</source>
          <target state="new">Note that all of the properties on both Information classes are read-only, and that you can retrieve current information at any time during the lifetime of a web socket object.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Handling network exceptions</source>
          <target state="new">Handling network exceptions</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>An error encountered on a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MessageWebSocket<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226842)</ept> or <bpt id="p3">[</bpt><bpt id="p4">**</bpt>StreamWebSocket<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br226923)</ept> operation is returned as an <bpt id="p5">**</bpt>HRESULT<ept id="p5">**</ept> value.</source>
          <target state="new">An error encountered on a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>MessageWebSocket<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br226842)</ept> or <bpt id="p3">[</bpt><bpt id="p4">**</bpt>StreamWebSocket<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br226923)</ept> operation is returned as an <bpt id="p5">**</bpt>HRESULT<ept id="p5">**</ept> value.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>WebSocketError.GetStatus<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh701529)</ept> method is used to convert a network error from a WebSocket operation to a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>WebErrorStatus<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/hh747818)</ept> enumeration value.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>WebSocketError.GetStatus<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh701529)</ept> method is used to convert a network error from a WebSocket operation to a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>WebErrorStatus<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/hh747818)</ept> enumeration value.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Most of the <bpt id="p1">**</bpt>WebErrorStatus<ept id="p1">**</ept> enumeration values correspond to an error returned by the native HTTP client operation.</source>
          <target state="new">Most of the <bpt id="p1">**</bpt>WebErrorStatus<ept id="p1">**</ept> enumeration values correspond to an error returned by the native HTTP client operation.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Your app can filter on specific <bpt id="p1">**</bpt>WebErrorStatus<ept id="p1">**</ept> enumeration values to modify app behavior depending on the cause of the exception.</source>
          <target state="new">Your app can filter on specific <bpt id="p1">**</bpt>WebErrorStatus<ept id="p1">**</ept> enumeration values to modify app behavior depending on the cause of the exception.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>For parameter validation errors, an app can also use the <bpt id="p1">**</bpt>HRESULT<ept id="p1">**</ept> from the exception to learn more detailed information on the error that caused the exception.</source>
          <target state="new">For parameter validation errors, an app can also use the <bpt id="p1">**</bpt>HRESULT<ept id="p1">**</ept> from the exception to learn more detailed information on the error that caused the exception.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Possible <bpt id="p1">**</bpt>HRESULT<ept id="p1">**</ept> values are listed in the <bpt id="p2">*</bpt>Winerror.h<ept id="p2">*</ept> header file.</source>
          <target state="new">Possible <bpt id="p1">**</bpt>HRESULT<ept id="p1">**</ept> values are listed in the <bpt id="p2">*</bpt>Winerror.h<ept id="p2">*</ept> header file.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>For most parameter validation errors, the <bpt id="p1">**</bpt>HRESULT<ept id="p1">**</ept> returned is <bpt id="p2">**</bpt>E\_INVALIDARG<ept id="p2">**</ept>.</source>
          <target state="new">For most parameter validation errors, the <bpt id="p1">**</bpt>HRESULT<ept id="p1">**</ept> returned is <bpt id="p2">**</bpt>E\_INVALIDARG<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Setting timeouts on WebSocket operations</source>
          <target state="new">Setting timeouts on WebSocket operations</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The MessageWebSocket and StreamWebSocket classes uses an internal system service to send WebSocket client requests and receive responses from a server.</source>
          <target state="new">The MessageWebSocket and StreamWebSocket classes uses an internal system service to send WebSocket client requests and receive responses from a server.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The default timeout value used for a WebSocket connect operation is 60 seconds.</source>
          <target state="new">The default timeout value used for a WebSocket connect operation is 60 seconds.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>If the HTTP server that supports WebSockets is temporarily down or blocked by a network outage and the server doesn't or can't respond to the WebSocket connection request, the internal system service waits the default 60 seconds before it returns an error which causes an exception to be thrown on the WebSocket ConnectAsync method.</source>
          <target state="new">If the HTTP server that supports WebSockets is temporarily down or blocked by a network outage and the server doesn't or can't respond to the WebSocket connection request, the internal system service waits the default 60 seconds before it returns an error which causes an exception to be thrown on the WebSocket ConnectAsync method.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>If the name query for an HTTP server name in the URI returns multiple IP addresses for the name, the internal system service tries up to 5 IP addresses for the site each with a default timeout of 60 seconds before it fails.</source>
          <target state="new">If the name query for an HTTP server name in the URI returns multiple IP addresses for the name, the internal system service tries up to 5 IP addresses for the site each with a default timeout of 60 seconds before it fails.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>An app making a WebSocket connection request could wait several minutes trying to connect to multiple IP addresses before an error is returned and an exception is thrown.</source>
          <target state="new">An app making a WebSocket connection request could wait several minutes trying to connect to multiple IP addresses before an error is returned and an exception is thrown.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>This behavior could appear to the user as if the app stopped working.</source>
          <target state="new">This behavior could appear to the user as if the app stopped working.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The default timeout used for send and receive operations after a WebSocket connection has been established is 30 seconds.</source>
          <target state="new">The default timeout used for send and receive operations after a WebSocket connection has been established is 30 seconds.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>To make your app more responsive and minimize these issues, it can set a shorter timeout on connection requests so that the operation fails due to timeout sooner than from the default settings.</source>
          <target state="new">To make your app more responsive and minimize these issues, it can set a shorter timeout on connection requests so that the operation fails due to timeout sooner than from the default settings.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>You set timeouts similarly for both StreamWebSockets and MessageWebSockets.</source>
          <target state="new">You set timeouts similarly for both StreamWebSockets and MessageWebSockets.</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The following example shows how to set a timeout on StreamWebSocket, but the process is similar for a MessageWebSocket.</source>
          <target state="new">The following example shows how to set a timeout on StreamWebSocket, but the process is similar for a MessageWebSocket.</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Create a task that completes after a specified delay using a timer.</source>
          <target state="new">Create a task that completes after a specified delay using a timer.</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Create a task for the WebSocket operation with a cancellation\_token\_source to support cancellation.</source>
          <target state="new">Create a task for the WebSocket operation with a cancellation\_token\_source to support cancellation.</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>If the task with the specified timeout delay completes before the WebSocket connect operation, cancel the task for the WebSocket operation.</source>
          <target state="new">If the task with the specified timeout delay completes before the WebSocket connect operation, cancel the task for the WebSocket operation.</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The following example creates one task that completes after a specified delay, and creates a second task that cancels after a specified delay.</source>
          <target state="new">The following example creates one task that completes after a specified delay, and creates a second task that cancels after a specified delay.</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>These classes can be used with StreamWebSocket and MessageWebSocket when trying to establish a connection to set a specific timeout.</source>
          <target state="new">These classes can be used with StreamWebSocket and MessageWebSocket when trying to establish a connection to set a specific timeout.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>An example usage would be calling the StreamWebSocket.ConnectAsync method in a task with a cancellation\_token\_source that supports cancellation.</source>
          <target state="new">An example usage would be calling the StreamWebSocket.ConnectAsync method in a task with a cancellation\_token\_source that supports cancellation.</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>If timeout completes first, then the cancellation\_token\_source is used to cancel the task for the WebSocket connect operation.</source>
          <target state="new">If timeout completes first, then the cancellation\_token\_source is used to cancel the task for the WebSocket connect operation.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>