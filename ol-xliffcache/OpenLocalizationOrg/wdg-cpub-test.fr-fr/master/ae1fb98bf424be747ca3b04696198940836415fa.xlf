<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-48076a9" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ae1fb98bf424be747ca3b04696198940836415fa</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci1\xaml-platform\property-path-syntax.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>You can use the PropertyPath class and the string syntax to instantiate a PropertyPath value either in XAML or in code.</source>
          <target state="new">You can use the PropertyPath class and the string syntax to instantiate a PropertyPath value either in XAML or in code.</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Property-path syntax'</source>
          <target state="new">Property-path syntax'</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Property-path syntax</source>
          <target state="new">Property-path syntax</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>\[ Updated for UWP apps on Windows 10.</source>
          <target state="new">\[ Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PropertyPath<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br244259)</ept> class and the string syntax to instantiate a <bpt id="p3">**</bpt>PropertyPath<ept id="p3">**</ept> value either in XAML or in code.</source>
          <target state="new">You can use the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PropertyPath<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br244259)</ept> class and the string syntax to instantiate a <bpt id="p3">**</bpt>PropertyPath<ept id="p3">**</ept> value either in XAML or in code.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>PropertyPath<ept id="p1">**</ept> values are used by data binding.</source>
          <target state="new"><bpt id="p1">**</bpt>PropertyPath<ept id="p1">**</ept> values are used by data binding.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>A similar syntax is used for targeting storyboarded animations.</source>
          <target state="new">A similar syntax is used for targeting storyboarded animations.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>But animation targeting doesn't create underlying Property-path syntax values, it keeps the info as a string.</source>
          <target state="new">But animation targeting doesn't create underlying Property-path syntax values, it keeps the info as a string.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For both scenarios, a property path describes a traversal of one or more object-property relationships that eventually resolve to a single property.</source>
          <target state="new">For both scenarios, a property path describes a traversal of one or more object-property relationships that eventually resolve to a single property.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You can set a property path string directly to an attribute in XAML.</source>
          <target state="new">You can set a property path string directly to an attribute in XAML.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You can use the same string syntax to construct a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PropertyPath<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br244259)</ept> that sets a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Binding<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br209820)</ept> in code, or to set an animation target in code using <bpt id="p5">[</bpt><bpt id="p6">**</bpt>SetTargetProperty<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/br210503)</ept>.</source>
          <target state="new">You can use the same string syntax to construct a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PropertyPath<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br244259)</ept> that sets a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Binding<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br209820)</ept> in code, or to set an animation target in code using <bpt id="p5">[</bpt><bpt id="p6">**</bpt>SetTargetProperty<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/br210503)</ept>.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>There are two distinct feature areas in the Windows Runtime that use a property path: data binding, and animation targeting.</source>
          <target state="new">There are two distinct feature areas in the Windows Runtime that use a property path: data binding, and animation targeting.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Animation targeting doesn't create underlying Property-path syntax values in the Windows Runtime implementation, it keeps the info as a string, but the concepts of object-property traversal are very similar.</source>
          <target state="new">Animation targeting doesn't create underlying Property-path syntax values in the Windows Runtime implementation, it keeps the info as a string, but the concepts of object-property traversal are very similar.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Data binding and animation targeting each evaluate a property path slightly differently, so we describe property path syntax separately for each.</source>
          <target state="new">Data binding and animation targeting each evaluate a property path slightly differently, so we describe property path syntax separately for each.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Property path for objects in data binding</source>
          <target state="new">Property path for objects in data binding</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>In Windows Runtime, you can bind to the target value of any dependency property.</source>
          <target state="new">In Windows Runtime, you can bind to the target value of any dependency property.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The source property value for a data binding doesn't have to be a dependency property; it can be a property on a business object (for example a class written in a Microsoft .NET language or C++).</source>
          <target state="new">The source property value for a data binding doesn't have to be a dependency property; it can be a property on a business object (for example a class written in a Microsoft .NET language or C++).</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Or, the source object for the binding value can be an existing dependency object already defined by the app.</source>
          <target state="new">Or, the source object for the binding value can be an existing dependency object already defined by the app.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The source can be referenced either by a simple property name, or by a traversal of the object-property relationships in the object graph of the business object.</source>
          <target state="new">The source can be referenced either by a simple property name, or by a traversal of the object-property relationships in the object graph of the business object.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You can bind to an individual property value, or you can bind to a target property that holds lists or collections.</source>
          <target state="new">You can bind to an individual property value, or you can bind to a target property that holds lists or collections.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If your source is a collection, or if the path specifies a collection property, the data-binding engine matches the collection items of the source to the binding target, resulting in behavior such as populating a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ListBox<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242868)</ept> with a list of items from a data source collection without needing to anticipate the specific items in that collection.</source>
          <target state="new">If your source is a collection, or if the path specifies a collection property, the data-binding engine matches the collection items of the source to the binding target, resulting in behavior such as populating a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ListBox<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242868)</ept> with a list of items from a data source collection without needing to anticipate the specific items in that collection.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Traversing an object graph</source>
          <target state="new">Traversing an object graph</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The element of the syntax that denotes the traversal of an object-property relationship in an object graph is the dot (<bpt id="p1">**</bpt>.<ept id="p1">**</ept>) character.</source>
          <target state="new">The element of the syntax that denotes the traversal of an object-property relationship in an object graph is the dot (<bpt id="p1">**</bpt>.<ept id="p1">**</ept>) character.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Each dot in a property path string indicates a division between an object (left side of the dot) and a property of that object (right side of the dot).</source>
          <target state="new">Each dot in a property path string indicates a division between an object (left side of the dot) and a property of that object (right side of the dot).</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The string is evaluated left-to-right, which enables stepping through multiple object-property relationships.</source>
          <target state="new">The string is evaluated left-to-right, which enables stepping through multiple object-property relationships.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Let's look at an example:</source>
          <target state="new">Let's look at an example:</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Here's how this path is evaluated:</source>
          <target state="new">Here's how this path is evaluated:</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The data context object (or a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Source<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br209832)</ept> specified by the same <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Binding<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br209820)</ept>) is searched for a property named "Customer".</source>
          <target state="new">The data context object (or a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Source<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br209832)</ept> specified by the same <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Binding<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br209820)</ept>) is searched for a property named "Customer".</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The object that is the value of the "Customer" property is searched for a property named "Address".</source>
          <target state="new">The object that is the value of the "Customer" property is searched for a property named "Address".</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The object that is the value of the "Address" property is searched for a property named "StreetAddress1".</source>
          <target state="new">The object that is the value of the "Address" property is searched for a property named "StreetAddress1".</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>At each of these steps, the value is treated as an object.</source>
          <target state="new">At each of these steps, the value is treated as an object.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The type of the result is checked only when the binding is applied to a specific property.</source>
          <target state="new">The type of the result is checked only when the binding is applied to a specific property.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This example would fail if "Address" were just a string value that didn't expose what part of the string was the street address.</source>
          <target state="new">This example would fail if "Address" were just a string value that didn't expose what part of the string was the street address.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Typically, the binding is pointing to the specific nested property values of a business object that has a known and deliberate information structure.</source>
          <target state="new">Typically, the binding is pointing to the specific nested property values of a business object that has a known and deliberate information structure.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Rules for the properties in a data-binding property path</source>
          <target state="new">Rules for the properties in a data-binding property path</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>All properties referenced by a property path must be public in the source business object.</source>
          <target state="new">All properties referenced by a property path must be public in the source business object.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The end property (the property that is the last named property in the path) must be public and must be mutable – you can't bind to static values.</source>
          <target state="new">The end property (the property that is the last named property in the path) must be public and must be mutable – you can't bind to static values.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The end property must be read/write if this path is used as the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Path<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br209830)</ept> information for a two-way binding.</source>
          <target state="new">The end property must be read/write if this path is used as the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Path<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br209830)</ept> information for a two-way binding.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Indexers</source>
          <target state="new">Indexers</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A property path for data-binding can include references to indexed properties.</source>
          <target state="new">A property path for data-binding can include references to indexed properties.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>This enables binding to ordered lists/vectors, or to dictionaries/maps.</source>
          <target state="new">This enables binding to ordered lists/vectors, or to dictionaries/maps.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Use square brackets "\[\]" characters to indicate an indexed property.</source>
          <target state="new">Use square brackets "\[\]" characters to indicate an indexed property.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The contents of these brackets can be either an integer (for ordered list) or an unquoted string (for dictionaries).</source>
          <target state="new">The contents of these brackets can be either an integer (for ordered list) or an unquoted string (for dictionaries).</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>You can also bind to a dictionary where the key is an integer.</source>
          <target state="new">You can also bind to a dictionary where the key is an integer.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>You can use different indexed properties in the same path with a dot separating the object-property.</source>
          <target state="new">You can use different indexed properties in the same path with a dot separating the object-property.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For example, consider a business object where there is a list of "Teams" (ordered list), each of which has a dictionary of "Players" where each player is keyed by last name.</source>
          <target state="new">For example, consider a business object where there is a list of "Teams" (ordered list), each of which has a dictionary of "Players" where each player is keyed by last name.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>An example property path to a specific player on the second team is: "Teams\[1\].Players\[Smith\]".</source>
          <target state="new">An example property path to a specific player on the second team is: "Teams\[1\].Players\[Smith\]".</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>(You use 1 to indicate the second item in "Teams" because the list is zero-indexed.)</source>
          <target state="new">(You use 1 to indicate the second item in "Teams" because the list is zero-indexed.)</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  Indexing support for C++ data sources is limited; see <bpt id="p2">[</bpt>Data binding in depth<ept id="p2">](https://msdn.microsoft.com/library/windows/apps/mt210946)</ept>.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  Indexing support for C++ data sources is limited; see <bpt id="p2">[</bpt>Data binding in depth<ept id="p2">](https://msdn.microsoft.com/library/windows/apps/mt210946)</ept>.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Attached properties</source>
          <target state="new">Attached properties</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Property paths can include references to attached properties.</source>
          <target state="new">Property paths can include references to attached properties.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Because the identifying name of an attached property already includes a dot, you must enclose any attached property name within parentheses so that the dot isn't treated as an object-property step.</source>
          <target state="new">Because the identifying name of an attached property already includes a dot, you must enclose any attached property name within parentheses so that the dot isn't treated as an object-property step.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>For example, the string to specify that you want to use <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Canvas.ZIndex<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh759773)</ept> as a binding path is "(Canvas.ZIndex)".</source>
          <target state="new">For example, the string to specify that you want to use <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Canvas.ZIndex<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh759773)</ept> as a binding path is "(Canvas.ZIndex)".</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>For more info on attached properties see <bpt id="p1">[</bpt>Attached properties overview<ept id="p1">](attached-properties-overview.md)</ept>.</source>
          <target state="new">For more info on attached properties see <bpt id="p1">[</bpt>Attached properties overview<ept id="p1">](attached-properties-overview.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Combining property path syntax</source>
          <target state="new">Combining property path syntax</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>You can combine various elements of property path syntax in a single string.</source>
          <target state="new">You can combine various elements of property path syntax in a single string.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>For example, you can define a property path that references an indexed attached property, if your data source had such a property.</source>
          <target state="new">For example, you can define a property path that references an indexed attached property, if your data source had such a property.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Debugging a binding property path</source>
          <target state="new">Debugging a binding property path</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Because a property path is interpreted by a binding engine and relies on info that may be present only at run-time, you must often debug a property path for binding without being able to rely on conventional design-time or compile-time support in the development tools.</source>
          <target state="new">Because a property path is interpreted by a binding engine and relies on info that may be present only at run-time, you must often debug a property path for binding without being able to rely on conventional design-time or compile-time support in the development tools.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>In many cases the run-time result of failing to resolve a property path is a blank value with no error, because that is the by-design fallback behavior of binding resolution.</source>
          <target state="new">In many cases the run-time result of failing to resolve a property path is a blank value with no error, because that is the by-design fallback behavior of binding resolution.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Fortunately, Microsoft Visual Studio provides a debug output mode that can isolate which part of a property path that's specifying a binding source failed to resolve.</source>
          <target state="new">Fortunately, Microsoft Visual Studio provides a debug output mode that can isolate which part of a property path that's specifying a binding source failed to resolve.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>For more info on using this development tool feature, see <bpt id="p1">[</bpt>"Debugging" section of Data binding in depth<ept id="p1">](../data-binding/data-binding-in-depth.md#debugging)</ept>.</source>
          <target state="new">For more info on using this development tool feature, see <bpt id="p1">[</bpt>"Debugging" section of Data binding in depth<ept id="p1">](../data-binding/data-binding-in-depth.md#debugging)</ept>.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Property path for animation targeting</source>
          <target state="new">Property path for animation targeting</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Animations rely on targeting a dependency property where storyboarded values are applied when the animation runs.</source>
          <target state="new">Animations rely on targeting a dependency property where storyboarded values are applied when the animation runs.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>To identify the object where the property to be animated exists, the animation targets an element by name (<bpt id="p1">[</bpt>x:Name attribute<ept id="p1">](x-name-attribute.md)</ept>).</source>
          <target state="new">To identify the object where the property to be animated exists, the animation targets an element by name (<bpt id="p1">[</bpt>x:Name attribute<ept id="p1">](x-name-attribute.md)</ept>).</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>It is often necessary to define a property path that starts with the object identified as the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Storyboard.TargetName<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh759823)</ept>, and ends with the particular dependency property value where the animation should apply.</source>
          <target state="new">It is often necessary to define a property path that starts with the object identified as the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Storyboard.TargetName<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh759823)</ept>, and ends with the particular dependency property value where the animation should apply.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>That property path is used as the value for <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Storyboard.TargetProperty<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh759824)</ept>.</source>
          <target state="new">That property path is used as the value for <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Storyboard.TargetProperty<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh759824)</ept>.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>For more info on the how to define animations in XAML, see <bpt id="p1">[</bpt>Storyboarded animations<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/mt187354)</ept>.</source>
          <target state="new">For more info on the how to define animations in XAML, see <bpt id="p1">[</bpt>Storyboarded animations<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/mt187354)</ept>.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Simple targeting</source>
          <target state="new">Simple targeting</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>If you are animating a property that exists on the targeted object itself, and that property's type can have an animation applied directly to it (rather than to a sub-property of a property's value) then you can simply name the property being animated without any further qualification.</source>
          <target state="new">If you are animating a property that exists on the targeted object itself, and that property's type can have an animation applied directly to it (rather than to a sub-property of a property's value) then you can simply name the property being animated without any further qualification.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>For example, if you are targeting a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Shape<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br243377)</ept> subclass such as <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Rectangle<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br243371)</ept>, and you are applying an animated <bpt id="p5">[</bpt><bpt id="p6">**</bpt>Color<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/hh673723)</ept> to the <bpt id="p7">[</bpt><bpt id="p8">**</bpt>Fill<ept id="p8">**</ept><ept id="p7">](https://msdn.microsoft.com/library/windows/apps/br243378)</ept> property, your property path can be "Fill".</source>
          <target state="new">For example, if you are targeting a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Shape<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br243377)</ept> subclass such as <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Rectangle<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br243371)</ept>, and you are applying an animated <bpt id="p5">[</bpt><bpt id="p6">**</bpt>Color<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/hh673723)</ept> to the <bpt id="p7">[</bpt><bpt id="p8">**</bpt>Fill<ept id="p8">**</ept><ept id="p7">](https://msdn.microsoft.com/library/windows/apps/br243378)</ept> property, your property path can be "Fill".</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Indirect property targeting</source>
          <target state="new">Indirect property targeting</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>You can animate a property that is a sub-property of the target object.</source>
          <target state="new">You can animate a property that is a sub-property of the target object.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>In other words, if there's a property of the target object that's an object itself, and that object has properties, you must define a property path that explains how to step through that object-property relationship.</source>
          <target state="new">In other words, if there's a property of the target object that's an object itself, and that object has properties, you must define a property path that explains how to step through that object-property relationship.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Whenever you are specifying an object where you want to animate a sub-property, you enclose the property name in parentheses, and you specify the property in <bpt id="p1">*</bpt>typename<ept id="p1">*</ept>.<bpt id="p2">*</bpt>propertyname<ept id="p2">*</ept> format.</source>
          <target state="new">Whenever you are specifying an object where you want to animate a sub-property, you enclose the property name in parentheses, and you specify the property in <bpt id="p1">*</bpt>typename<ept id="p1">*</ept>.<bpt id="p2">*</bpt>propertyname<ept id="p2">*</ept> format.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>For example, to specify that you want the object value of a target object's <bpt id="p1">[</bpt><bpt id="p2">**</bpt>RenderTransform<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208980)</ept> property, you specify "(UIElement.RenderTransform)" as the first step in the property path.</source>
          <target state="new">For example, to specify that you want the object value of a target object's <bpt id="p1">[</bpt><bpt id="p2">**</bpt>RenderTransform<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208980)</ept> property, you specify "(UIElement.RenderTransform)" as the first step in the property path.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>This isn't yet a complete path, because there are no animations that can apply to a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Transform<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br243006)</ept> value directly.</source>
          <target state="new">This isn't yet a complete path, because there are no animations that can apply to a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Transform<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br243006)</ept> value directly.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>So for this example, you now complete the property path so that the end property is a property of a <bpt id="p1">**</bpt>Transform<ept id="p1">**</ept> subclass that can be animated by a <bpt id="p2">**</bpt>Double<ept id="p2">**</ept> value: "(UIElement.RenderTransform).(CompositeTransform.TranslateX)"</source>
          <target state="new">So for this example, you now complete the property path so that the end property is a property of a <bpt id="p1">**</bpt>Transform<ept id="p1">**</ept> subclass that can be animated by a <bpt id="p2">**</bpt>Double<ept id="p2">**</ept> value: "(UIElement.RenderTransform).(CompositeTransform.TranslateX)"</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Specifying a particular child in a collection</source>
          <target state="new">Specifying a particular child in a collection</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>To specify a child item in a collection property, you can use a numeric indexer.</source>
          <target state="new">To specify a child item in a collection property, you can use a numeric indexer.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Use square brackets "\[\]" characters around the integer index value.</source>
          <target state="new">Use square brackets "\[\]" characters around the integer index value.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>You can reference only ordered lists, not dictionaries.</source>
          <target state="new">You can reference only ordered lists, not dictionaries.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Because a collection isn't a value that can be animated, an indexer usage can never be the end property in a property path.</source>
          <target state="new">Because a collection isn't a value that can be animated, an indexer usage can never be the end property in a property path.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>For example, to specify that you want to animate the first color stop color in a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>LinearGradientBrush<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br210108)</ept> that is applied to a control's <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Background<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br209395)</ept> property, this is the property path: "(Control.Background).(GradientBrush.GradientStops)\[0\].(GradientStop.Color)".</source>
          <target state="new">For example, to specify that you want to animate the first color stop color in a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>LinearGradientBrush<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br210108)</ept> that is applied to a control's <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Background<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br209395)</ept> property, this is the property path: "(Control.Background).(GradientBrush.GradientStops)\[0\].(GradientStop.Color)".</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Note how the indexer is not the last step in the path, and that the last step particularly must reference the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>GradientStop.Color<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br210094)</ept> property of item 0 in the collection to apply a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Color<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/hh673723)</ept> animated value to it.</source>
          <target state="new">Note how the indexer is not the last step in the path, and that the last step particularly must reference the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>GradientStop.Color<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br210094)</ept> property of item 0 in the collection to apply a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Color<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/hh673723)</ept> animated value to it.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Animating an attached property</source>
          <target state="new">Animating an attached property</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>It isn't a common scenario, but it is possible to animate an attached property, so long as that attached property has a property value that matches an animation type.</source>
          <target state="new">It isn't a common scenario, but it is possible to animate an attached property, so long as that attached property has a property value that matches an animation type.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Because the identifying name of an attached property already includes a dot, you must enclose any attached property name within parentheses so that the dot isn't treated as an object-property step.</source>
          <target state="new">Because the identifying name of an attached property already includes a dot, you must enclose any attached property name within parentheses so that the dot isn't treated as an object-property step.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>For example, the string to specify that you want to animate the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Grid.Row<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh759795)</ept> attached property on an object, use the property path "(Grid.Row)".</source>
          <target state="new">For example, the string to specify that you want to animate the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Grid.Row<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh759795)</ept> attached property on an object, use the property path "(Grid.Row)".</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  For this example, the value of <bpt id="p2">[</bpt><bpt id="p3">**</bpt>Grid.Row<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/hh759795)</ept> is an <bpt id="p4">**</bpt>Int32<ept id="p4">**</ept> property type.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  For this example, the value of <bpt id="p2">[</bpt><bpt id="p3">**</bpt>Grid.Row<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/hh759795)</ept> is an <bpt id="p4">**</bpt>Int32<ept id="p4">**</ept> property type.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>so you can't animate it with a <bpt id="p1">**</bpt>Double<ept id="p1">**</ept> animation.</source>
          <target state="new">so you can't animate it with a <bpt id="p1">**</bpt>Double<ept id="p1">**</ept> animation.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Instead, you'd define an <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ObjectAnimationUsingKeyFrames<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br210320)</ept> that has <bpt id="p3">[</bpt><bpt id="p4">**</bpt>DiscreteObjectKeyFrame<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br243132)</ept> components, where the <bpt id="p5">[</bpt><bpt id="p6">**</bpt>ObjectKeyFrame.Value<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/br210344)</ept> is set to an integer such as "0" or "1".</source>
          <target state="new">Instead, you'd define an <bpt id="p1">[</bpt><bpt id="p2">**</bpt>ObjectAnimationUsingKeyFrames<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br210320)</ept> that has <bpt id="p3">[</bpt><bpt id="p4">**</bpt>DiscreteObjectKeyFrame<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br243132)</ept> components, where the <bpt id="p5">[</bpt><bpt id="p6">**</bpt>ObjectKeyFrame.Value<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/br210344)</ept> is set to an integer such as "0" or "1".</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Rules for the properties in an animation targeting property path</source>
          <target state="new">Rules for the properties in an animation targeting property path</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The assumed starting point of the property path is the object identified by a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Storyboard.TargetName<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh759823)</ept>.</source>
          <target state="new">The assumed starting point of the property path is the object identified by a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Storyboard.TargetName<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh759823)</ept>.</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>All objects and properties referenced along the property path must be public.</source>
          <target state="new">All objects and properties referenced along the property path must be public.</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The end property (the property that is the last named property in the path) must be public, be read-write, and be a dependency property.</source>
          <target state="new">The end property (the property that is the last named property in the path) must be public, be read-write, and be a dependency property.</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The end property must have a property type that is able to be animated by one of the broad classes of animation types (<bpt id="p1">[</bpt><bpt id="p2">**</bpt>Color<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh673723)</ept> animations, <bpt id="p3">**</bpt>Double<ept id="p3">**</ept> animations, <bpt id="p4">[</bpt><bpt id="p5">**</bpt>Point<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/br225870)</ept> animations, <bpt id="p6">[</bpt><bpt id="p7">**</bpt>ObjectAnimationUsingKeyFrames<ept id="p7">**</ept><ept id="p6">](https://msdn.microsoft.com/library/windows/apps/br210320)</ept>).</source>
          <target state="new">The end property must have a property type that is able to be animated by one of the broad classes of animation types (<bpt id="p1">[</bpt><bpt id="p2">**</bpt>Color<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh673723)</ept> animations, <bpt id="p3">**</bpt>Double<ept id="p3">**</ept> animations, <bpt id="p4">[</bpt><bpt id="p5">**</bpt>Point<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/br225870)</ept> animations, <bpt id="p6">[</bpt><bpt id="p7">**</bpt>ObjectAnimationUsingKeyFrames<ept id="p7">**</ept><ept id="p6">](https://msdn.microsoft.com/library/windows/apps/br210320)</ept>).</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The PropertyPath class</source>
          <target state="new">The PropertyPath class</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PropertyPath<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br244259)</ept> class is the underlying property type of <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Binding.Path<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br209830)</ept> for the binding scenario.</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PropertyPath<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br244259)</ept> class is the underlying property type of <bpt id="p3">[</bpt><bpt id="p4">**</bpt>Binding.Path<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br209830)</ept> for the binding scenario.</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Most of the time, you can apply a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PropertyPath<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br244259)</ept> in XAML without using any code at all.</source>
          <target state="new">Most of the time, you can apply a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PropertyPath<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br244259)</ept> in XAML without using any code at all.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>But in some cases you may want to define a <bpt id="p1">**</bpt>PropertyPath<ept id="p1">**</ept> object using code and assign it to a property at run-time.</source>
          <target state="new">But in some cases you may want to define a <bpt id="p1">**</bpt>PropertyPath<ept id="p1">**</ept> object using code and assign it to a property at run-time.</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>PropertyPath<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br244259)</ept> has a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>PropertyPath(String)<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br244261)</ept> constructor, and doesn't have a default constructor.</source>
          <target state="new"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>PropertyPath<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br244259)</ept> has a <bpt id="p3">[</bpt><bpt id="p4">**</bpt>PropertyPath(String)<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br244261)</ept> constructor, and doesn't have a default constructor.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The string you pass to this constructor is a string that's defined using the property path syntax as we explained earlier.</source>
          <target state="new">The string you pass to this constructor is a string that's defined using the property path syntax as we explained earlier.</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>This is also the same string you'd use to assign <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Path<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br209830)</ept> as a XAML attribute.</source>
          <target state="new">This is also the same string you'd use to assign <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Path<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br209830)</ept> as a XAML attribute.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The only other API of the <bpt id="p1">**</bpt>PropertyPath<ept id="p1">**</ept> class is the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>Path<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br244260)</ept> property, which is read-only.</source>
          <target state="new">The only other API of the <bpt id="p1">**</bpt>PropertyPath<ept id="p1">**</ept> class is the <bpt id="p2">[</bpt><bpt id="p3">**</bpt>Path<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br244260)</ept> property, which is read-only.</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>You could use this property as the construction string for another <bpt id="p1">**</bpt>PropertyPath<ept id="p1">**</ept> instance.</source>
          <target state="new">You could use this property as the construction string for another <bpt id="p1">**</bpt>PropertyPath<ept id="p1">**</ept> instance.</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Related topics</source>
          <target state="new">Related topics</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Data binding in depth</source>
          <target state="new">Data binding in depth</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Storyboarded animations</source>
          <target state="new">Storyboarded animations</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>{Binding} markup extension</source>
          <target state="new">{Binding} markup extension</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>PropertyPath</source>
          <target state="new">PropertyPath</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Binding</source>
          <target state="new">Binding</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Binding constructor</source>
          <target state="new">Binding constructor</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>DataContext</source>
          <target state="new">DataContext</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>