<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-48076a9" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9f449718b718beb9512b2d05828d2ad326c1a38c</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wdg-cpub-test\ndolci2\input-and-devices\handle-pointer-input.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Receive, process, and manage input data from pointing devices, such as touch, mouse, pen/stylus, and touchpad, in Universal Windows Platform (UWP) apps.</source>
          <target state="new">Receive, process, and manage input data from pointing devices, such as touch, mouse, pen/stylus, and touchpad, in Universal Windows Platform (UWP) apps.</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Handle pointer input</source>
          <target state="new">Handle pointer input</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Handle pointer input</source>
          <target state="new">Handle pointer input</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>\[ Updated for UWP apps on Windows 10.</source>
          <target state="new">\[ Updated for UWP apps on Windows 10.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</source>
          <target state="new">For Windows 8.x articles, see the <bpt id="p1">[</bpt>archive<ept id="p1">](http://go.microsoft.com/fwlink/p/?linkid=619132)</ept> \]</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Receive, process, and manage input data from pointing devices, such as touch, mouse, pen/stylus, and touchpad, in Universal Windows Platform (UWP) apps.</source>
          <target state="new">Receive, process, and manage input data from pointing devices, such as touch, mouse, pen/stylus, and touchpad, in Universal Windows Platform (UWP) apps.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Important APIs</source>
          <target state="new">Important APIs</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Windows.Devices.Input</source>
          <target state="new">Windows.Devices.Input</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Windows.UI.Input</source>
          <target state="new">Windows.UI.Input</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Windows.UI.Xaml.Input</source>
          <target state="new">Windows.UI.Xaml.Input</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Important</source>
          <target state="new">Important</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If you implement your own interaction support, keep in mind that users expect an intuitive experience involving direct interaction with the UI elements in your app.</source>
          <target state="new">If you implement your own interaction support, keep in mind that users expect an intuitive experience involving direct interaction with the UI elements in your app.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>We recommend that you model your custom interactions on the <bpt id="p1">[</bpt>Controls list<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/mt185406)</ept> to keep things consistent and discoverable.</source>
          <target state="new">We recommend that you model your custom interactions on the <bpt id="p1">[</bpt>Controls list<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/mt185406)</ept> to keep things consistent and discoverable.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The platform controls provide the full Universal Windows Platform (UWP) user interaction experience, including standard interactions, animated physics effects, visual feedback, and accessibility.</source>
          <target state="new">The platform controls provide the full Universal Windows Platform (UWP) user interaction experience, including standard interactions, animated physics effects, visual feedback, and accessibility.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Create custom interactions only if there is a clear, well-defined requirement and basic interactions don't support your scenario.</source>
          <target state="new">Create custom interactions only if there is a clear, well-defined requirement and basic interactions don't support your scenario.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Pointers</source>
          <target state="new">Pointers</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Many interaction experiences involve the user identifying the object they want to interact with by pointing at it using input devices such as touch, mouse, pen/stylus, and touchpad.</source>
          <target state="new">Many interaction experiences involve the user identifying the object they want to interact with by pointing at it using input devices such as touch, mouse, pen/stylus, and touchpad.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Because the raw Human Interface Device (HID) data provided by these input devices includes many common properties, the info is promoted into a unified input stack and exposed as consolidated, device-agnostic pointer data.</source>
          <target state="new">Because the raw Human Interface Device (HID) data provided by these input devices includes many common properties, the info is promoted into a unified input stack and exposed as consolidated, device-agnostic pointer data.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Your UWP apps can then consume this data without worrying about the input device being used.</source>
          <target state="new">Your UWP apps can then consume this data without worrying about the input device being used.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  Device-specific info is also promoted from the raw HID data should your app require it.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  Device-specific info is also promoted from the raw HID data should your app require it.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Each input point (or contact) on the input stack is represented by a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Pointer<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br227968)</ept> object exposed through the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>PointerRoutedEventArgs<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/hh943076)</ept> parameter provided by various pointer events.</source>
          <target state="new">Each input point (or contact) on the input stack is represented by a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Pointer<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br227968)</ept> object exposed through the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>PointerRoutedEventArgs<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/hh943076)</ept> parameter provided by various pointer events.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>In the case of multi-pen or multi-touch input, each contact is treated as a unique input point.</source>
          <target state="new">In the case of multi-pen or multi-touch input, each contact is treated as a unique input point.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Pointer events</source>
          <target state="new">Pointer events</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Pointer events expose basic info such as detection state (in range or in contact) and device type, and extended info such as location, pressure, and contact geometry.</source>
          <target state="new">Pointer events expose basic info such as detection state (in range or in contact) and device type, and extended info such as location, pressure, and contact geometry.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>In addition, specific device properties such as which mouse button a user pressed or whether the pen eraser tip is being used are also available.</source>
          <target state="new">In addition, specific device properties such as which mouse button a user pressed or whether the pen eraser tip is being used are also available.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>If your app needs to differentiate between input devices and their capabilities, see <bpt id="p1">[</bpt>Identify input devices<ept id="p1">](identify-input-devices.md)</ept>.</source>
          <target state="new">If your app needs to differentiate between input devices and their capabilities, see <bpt id="p1">[</bpt>Identify input devices<ept id="p1">](identify-input-devices.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>UWP apps can listen for the following pointer events:</source>
          <target state="new">UWP apps can listen for the following pointer events:</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  Call <bpt id="p2">[</bpt><bpt id="p3">**</bpt>CapturePointer<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br208918)</ept> to constrain pointer input to a specific UI element.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  Call <bpt id="p2">[</bpt><bpt id="p3">**</bpt>CapturePointer<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br208918)</ept> to constrain pointer input to a specific UI element.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>When a pointer is captured by an element, only that object receives the pointer input events, even when the pointer moves outside the bounding area of the object.</source>
          <target state="new">When a pointer is captured by an element, only that object receives the pointer input events, even when the pointer moves outside the bounding area of the object.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>You typically capture the pointer within a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PointerPressed<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208971)</ept> event handler as <bpt id="p3">[</bpt><bpt id="p4">**</bpt>IsInContact<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br227976)</ept> (mouse button pressed, touch or stylus in contact) must be true for <bpt id="p5">**</bpt>CapturePointer<ept id="p5">**</ept> to be successful.</source>
          <target state="new">You typically capture the pointer within a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PointerPressed<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208971)</ept> event handler as <bpt id="p3">[</bpt><bpt id="p4">**</bpt>IsInContact<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br227976)</ept> (mouse button pressed, touch or stylus in contact) must be true for <bpt id="p5">**</bpt>CapturePointer<ept id="p5">**</ept> to be successful.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Event</source>
          <target state="new">Event</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="new">Description</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>[<ph id="ph1">&lt;strong&gt;</ph>PointerCanceled<ph id="ph2">&lt;/strong&gt;</ph>](https://msdn.microsoft.com/library/windows/apps/br208964)</source>
          <target state="new">[<ph id="ph1">&lt;strong&gt;</ph>PointerCanceled<ph id="ph2">&lt;/strong&gt;</ph>](https://msdn.microsoft.com/library/windows/apps/br208964)</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Occurs when a pointer is canceled by the platform.</source>
          <target state="new">Occurs when a pointer is canceled by the platform.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Touch pointers are canceled when a pen is detected within range of the input surface.</source>
          <target state="new">Touch pointers are canceled when a pen is detected within range of the input surface.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>An active contact is not detected for more than 100 ms.</source>
          <target state="new">An active contact is not detected for more than 100 ms.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Monitor/display is changed (resolution, settings, multi-mon configuration).</source>
          <target state="new">Monitor/display is changed (resolution, settings, multi-mon configuration).</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The desktop is locked or the user has logged off.</source>
          <target state="new">The desktop is locked or the user has logged off.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The number of simultaneous contacts exceeded the number supported by the device.</source>
          <target state="new">The number of simultaneous contacts exceeded the number supported by the device.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>[<ph id="ph1">&lt;strong&gt;</ph>PointerCaptureLost<ph id="ph2">&lt;/strong&gt;</ph>](https://msdn.microsoft.com/library/windows/apps/br208965)</source>
          <target state="new">[<ph id="ph1">&lt;strong&gt;</ph>PointerCaptureLost<ph id="ph2">&lt;/strong&gt;</ph>](https://msdn.microsoft.com/library/windows/apps/br208965)</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Occurs when another UI element captures the pointer, the pointer was released, or another pointer was programmatically captured.</source>
          <target state="new">Occurs when another UI element captures the pointer, the pointer was released, or another pointer was programmatically captured.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Note<ph id="ph1">&lt;/strong&gt;</ph>  There is no corresponding pointer capture event.</source>
          <target state="new">Note<ph id="ph1">&lt;/strong&gt;</ph>  There is no corresponding pointer capture event.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>[<ph id="ph1">&lt;strong&gt;</ph>PointerEntered<ph id="ph2">&lt;/strong&gt;</ph>](https://msdn.microsoft.com/library/windows/apps/br208968)</source>
          <target state="new">[<ph id="ph1">&lt;strong&gt;</ph>PointerEntered<ph id="ph2">&lt;/strong&gt;</ph>](https://msdn.microsoft.com/library/windows/apps/br208968)</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Occurs when a pointer enters the bounding area of an element.</source>
          <target state="new">Occurs when a pointer enters the bounding area of an element.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>This can happen in slightly different ways for touch, touchpad, mouse, and pen input.</source>
          <target state="new">This can happen in slightly different ways for touch, touchpad, mouse, and pen input.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Touch requires a finger contact to fire this event, either from a direct touch down on the element or from moving into the bounding area of the element.</source>
          <target state="new">Touch requires a finger contact to fire this event, either from a direct touch down on the element or from moving into the bounding area of the element.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Mouse and touchpad both have an on-screen cursor that is always visible and fires this event even if no mouse or touchpad button is pressed.</source>
          <target state="new">Mouse and touchpad both have an on-screen cursor that is always visible and fires this event even if no mouse or touchpad button is pressed.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Like touch, pen fires this event with a direct pen down on the element or from moving into the bounding area of the element.</source>
          <target state="new">Like touch, pen fires this event with a direct pen down on the element or from moving into the bounding area of the element.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>However, pen also has a hover state ([<ph id="ph1">&lt;strong&gt;</ph>IsInRange<ph id="ph2">&lt;/strong&gt;</ph>](https://msdn.microsoft.com/library/windows/apps/br227977)) that, when true, fires this event.</source>
          <target state="new">However, pen also has a hover state ([<ph id="ph1">&lt;strong&gt;</ph>IsInRange<ph id="ph2">&lt;/strong&gt;</ph>](https://msdn.microsoft.com/library/windows/apps/br227977)) that, when true, fires this event.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>[<ph id="ph1">&lt;strong&gt;</ph>PointerExited<ph id="ph2">&lt;/strong&gt;</ph>](https://msdn.microsoft.com/library/windows/apps/br208969)</source>
          <target state="new">[<ph id="ph1">&lt;strong&gt;</ph>PointerExited<ph id="ph2">&lt;/strong&gt;</ph>](https://msdn.microsoft.com/library/windows/apps/br208969)</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Occurs when a pointer leaves the bounding area of an element.</source>
          <target state="new">Occurs when a pointer leaves the bounding area of an element.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This can happen in slightly different ways for touch, touchpad, mouse, and pen input.</source>
          <target state="new">This can happen in slightly different ways for touch, touchpad, mouse, and pen input.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Touch requires a finger contact and fires this event when the pointer moves out of the bounding area of the element.</source>
          <target state="new">Touch requires a finger contact and fires this event when the pointer moves out of the bounding area of the element.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Mouse and touchpad both have an on-screen cursor that is always visible and fires this event even if no mouse or touchpad button is pressed.</source>
          <target state="new">Mouse and touchpad both have an on-screen cursor that is always visible and fires this event even if no mouse or touchpad button is pressed.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Like touch, pen fires this event when moving out of the bounding area of the element.</source>
          <target state="new">Like touch, pen fires this event when moving out of the bounding area of the element.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>However, pen also has a hover state ([<ph id="ph1">&lt;strong&gt;</ph>IsInRange<ph id="ph2">&lt;/strong&gt;</ph>](https://msdn.microsoft.com/library/windows/apps/br227977)) that fires this event when the state changes from true to false.</source>
          <target state="new">However, pen also has a hover state ([<ph id="ph1">&lt;strong&gt;</ph>IsInRange<ph id="ph2">&lt;/strong&gt;</ph>](https://msdn.microsoft.com/library/windows/apps/br227977)) that fires this event when the state changes from true to false.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>[<ph id="ph1">&lt;strong&gt;</ph>PointerMoved<ph id="ph2">&lt;/strong&gt;</ph>](https://msdn.microsoft.com/library/windows/apps/br208970)</source>
          <target state="new">[<ph id="ph1">&lt;strong&gt;</ph>PointerMoved<ph id="ph2">&lt;/strong&gt;</ph>](https://msdn.microsoft.com/library/windows/apps/br208970)</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Occurs when a pointer changes coordinates, button state, pressure, tilt, or contact geometry (for example, width and height) within the bounding area of an element.</source>
          <target state="new">Occurs when a pointer changes coordinates, button state, pressure, tilt, or contact geometry (for example, width and height) within the bounding area of an element.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>This can happen in slightly different ways for touch, touchpad, mouse, and pen input.</source>
          <target state="new">This can happen in slightly different ways for touch, touchpad, mouse, and pen input.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Touch requires a finger contact and fires this event only when in contact within the bounding area of the element.</source>
          <target state="new">Touch requires a finger contact and fires this event only when in contact within the bounding area of the element.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Mouse and touchpad both have an on-screen cursor that is always visible and fires this event even if no mouse or touchpad button is pressed.</source>
          <target state="new">Mouse and touchpad both have an on-screen cursor that is always visible and fires this event even if no mouse or touchpad button is pressed.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Like touch, pen fires this event when in contact within the bounding area of the element.</source>
          <target state="new">Like touch, pen fires this event when in contact within the bounding area of the element.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>However, pen also has a hover state ([<ph id="ph1">&lt;strong&gt;</ph>IsInRange<ph id="ph2">&lt;/strong&gt;</ph>](https://msdn.microsoft.com/library/windows/apps/br227977)) that, when true and within the bounding area of the element, fires this event.</source>
          <target state="new">However, pen also has a hover state ([<ph id="ph1">&lt;strong&gt;</ph>IsInRange<ph id="ph2">&lt;/strong&gt;</ph>](https://msdn.microsoft.com/library/windows/apps/br227977)) that, when true and within the bounding area of the element, fires this event.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>[<ph id="ph1">&lt;strong&gt;</ph>PointerPressed<ph id="ph2">&lt;/strong&gt;</ph>](https://msdn.microsoft.com/library/windows/apps/br208971)</source>
          <target state="new">[<ph id="ph1">&lt;strong&gt;</ph>PointerPressed<ph id="ph2">&lt;/strong&gt;</ph>](https://msdn.microsoft.com/library/windows/apps/br208971)</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Occurs when the pointer indicates a press action (such as a touch down, mouse button down, pen down, or touchpad button down) within the bounding area of an element.</source>
          <target state="new">Occurs when the pointer indicates a press action (such as a touch down, mouse button down, pen down, or touchpad button down) within the bounding area of an element.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>[<ph id="ph1">&lt;strong&gt;</ph>CapturePointer<ph id="ph2">&lt;/strong&gt;</ph>](https://msdn.microsoft.com/library/windows/apps/br208918) must be called from the handler for this event.</source>
          <target state="new">[<ph id="ph1">&lt;strong&gt;</ph>CapturePointer<ph id="ph2">&lt;/strong&gt;</ph>](https://msdn.microsoft.com/library/windows/apps/br208918) must be called from the handler for this event.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>[<ph id="ph1">&lt;strong&gt;</ph>PointerReleased<ph id="ph2">&lt;/strong&gt;</ph>](https://msdn.microsoft.com/library/windows/apps/br208972)</source>
          <target state="new">[<ph id="ph1">&lt;strong&gt;</ph>PointerReleased<ph id="ph2">&lt;/strong&gt;</ph>](https://msdn.microsoft.com/library/windows/apps/br208972)</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Occurs when the pointer indicates a release action (such as a touch up, mouse button up, pen up, or touchpad button up) within the bounding area of an element or, if the pointer is captured, outside the bounding area.</source>
          <target state="new">Occurs when the pointer indicates a release action (such as a touch up, mouse button up, pen up, or touchpad button up) within the bounding area of an element or, if the pointer is captured, outside the bounding area.</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>[<ph id="ph1">&lt;strong&gt;</ph>PointerWheelChanged<ph id="ph2">&lt;/strong&gt;</ph>](https://msdn.microsoft.com/library/windows/apps/br208973)</source>
          <target state="new">[<ph id="ph1">&lt;strong&gt;</ph>PointerWheelChanged<ph id="ph2">&lt;/strong&gt;</ph>](https://msdn.microsoft.com/library/windows/apps/br208973)</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Occurs when the mouse wheel is rotated.</source>
          <target state="new">Occurs when the mouse wheel is rotated.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Mouse input is associated with a single pointer assigned when mouse input is first detected.</source>
          <target state="new">Mouse input is associated with a single pointer assigned when mouse input is first detected.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Clicking a mouse button (left, wheel, or right) creates a secondary association between the pointer and that button through the [<ph id="ph1">&lt;strong&gt;</ph>PointerMoved<ph id="ph2">&lt;/strong&gt;</ph>](https://msdn.microsoft.com/library/windows/apps/br208970) event.</source>
          <target state="new">Clicking a mouse button (left, wheel, or right) creates a secondary association between the pointer and that button through the [<ph id="ph1">&lt;strong&gt;</ph>PointerMoved<ph id="ph2">&lt;/strong&gt;</ph>](https://msdn.microsoft.com/library/windows/apps/br208970) event.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="new">Example</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Here's some code examples from a basic pointer tracking app that show how to listen for and handle pointer events and get various properties for active pointers.</source>
          <target state="new">Here's some code examples from a basic pointer tracking app that show how to listen for and handle pointer events and get various properties for active pointers.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Create the UI</source>
          <target state="new">Create the UI</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>For this example, we use a rectangle (<ph id="ph1">`targetContainer`</ph>) as the target object for pointer input.</source>
          <target state="new">For this example, we use a rectangle (<ph id="ph1">`targetContainer`</ph>) as the target object for pointer input.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The color of the target changes when the pointer status changes.</source>
          <target state="new">The color of the target changes when the pointer status changes.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Details for each pointer are displayed in a floating text block that moves with the pointer.</source>
          <target state="new">Details for each pointer are displayed in a floating text block that moves with the pointer.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The pointer events themselves are displayed to the left of the rectangle (for reporting event sequence).</source>
          <target state="new">The pointer events themselves are displayed to the left of the rectangle (for reporting event sequence).</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>This is the Extensible Application Markup Language (XAML) for this example.</source>
          <target state="new">This is the Extensible Application Markup Language (XAML) for this example.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Listen for pointer events</source>
          <target state="new">Listen for pointer events</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>In most cases, we recommend that you get pointer info through the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PointerRoutedEventArgs<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh943076)</ept> of the event handler.</source>
          <target state="new">In most cases, we recommend that you get pointer info through the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PointerRoutedEventArgs<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/hh943076)</ept> of the event handler.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>If the event argument doesn't expose the pointer details required, you can get access to extended <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PointerPoint<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242038)</ept> info exposed through the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>GetCurrentPoint<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/hh943077)</ept> and <bpt id="p5">[</bpt><bpt id="p6">**</bpt>GetIntermediatePoints<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/hh943078)</ept> methods of <bpt id="p7">[</bpt><bpt id="p8">**</bpt>PointerRoutedEventArgs<ept id="p8">**</ept><ept id="p7">](https://msdn.microsoft.com/library/windows/apps/hh943076)</ept>.</source>
          <target state="new">If the event argument doesn't expose the pointer details required, you can get access to extended <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PointerPoint<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242038)</ept> info exposed through the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>GetCurrentPoint<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/hh943077)</ept> and <bpt id="p5">[</bpt><bpt id="p6">**</bpt>GetIntermediatePoints<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/hh943078)</ept> methods of <bpt id="p7">[</bpt><bpt id="p8">**</bpt>PointerRoutedEventArgs<ept id="p8">**</ept><ept id="p7">](https://msdn.microsoft.com/library/windows/apps/hh943076)</ept>.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>For this example, we use a rectangle (<ph id="ph1">`targetContainer`</ph>) as the target object for pointer input.</source>
          <target state="new">For this example, we use a rectangle (<ph id="ph1">`targetContainer`</ph>) as the target object for pointer input.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The color of the target changes when the pointer status changes.</source>
          <target state="new">The color of the target changes when the pointer status changes.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The following code sets up the target object, declares global variables, and identifies the various pointer event listeners for the target.</source>
          <target state="new">The following code sets up the target object, declares global variables, and identifies the various pointer event listeners for the target.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Handle pointer events</source>
          <target state="new">Handle pointer events</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Next, we use UI feedback to demonstrate basic pointer event handlers.</source>
          <target state="new">Next, we use UI feedback to demonstrate basic pointer event handlers.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>This handler manages a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PointerPressed<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208971)</ept> event.</source>
          <target state="new">This handler manages a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PointerPressed<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208971)</ept> event.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>We add the event to the event log, add the pointer to the pointer array used for tracking the pointers of interest, and display the pointer details.</source>
          <target state="new">We add the event to the event log, add the pointer to the pointer array used for tracking the pointers of interest, and display the pointer details.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  <bpt id="p2">[</bpt><bpt id="p3">**</bpt>PointerPressed<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br208971)</ept> and <bpt id="p4">[</bpt><bpt id="p5">**</bpt>PointerReleased<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/br208972)</ept> events do not always occur in pairs.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  <bpt id="p2">[</bpt><bpt id="p3">**</bpt>PointerPressed<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br208971)</ept> and <bpt id="p4">[</bpt><bpt id="p5">**</bpt>PointerReleased<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/br208972)</ept> events do not always occur in pairs.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Your app should listen for and handle any event that might conclude a pointer down action (such as <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PointerExited<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208969)</ept>, <bpt id="p3">[</bpt><bpt id="p4">**</bpt>PointerCanceled<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br208964)</ept>, and <bpt id="p5">[</bpt><bpt id="p6">**</bpt>PointerCaptureLost<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/br208965)</ept>).</source>
          <target state="new">Your app should listen for and handle any event that might conclude a pointer down action (such as <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PointerExited<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208969)</ept>, <bpt id="p3">[</bpt><bpt id="p4">**</bpt>PointerCanceled<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/br208964)</ept>, and <bpt id="p5">[</bpt><bpt id="p6">**</bpt>PointerCaptureLost<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/br208965)</ept>).</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>This handler manages a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PointerEntered<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208968)</ept> event.</source>
          <target state="new">This handler manages a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PointerEntered<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208968)</ept> event.</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>We add the event to the event log, add the pointer to the pointer collection, and display the pointer details.</source>
          <target state="new">We add the event to the event log, add the pointer to the pointer collection, and display the pointer details.</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>This handler manages a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PointerMoved<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208970)</ept> event.</source>
          <target state="new">This handler manages a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PointerMoved<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208970)</ept> event.</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>We add the event to the event log and update the pointer details.</source>
          <target state="new">We add the event to the event log and update the pointer details.</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Important<ept id="p1">**</ept>  Mouse input is associated with a single pointer assigned when mouse input is first detected.</source>
          <target state="new"><bpt id="p1">**</bpt>Important<ept id="p1">**</ept>  Mouse input is associated with a single pointer assigned when mouse input is first detected.</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Clicking a mouse button (left, wheel, or right) creates a secondary association between the pointer and that button through the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PointerPressed<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208971)</ept> event.</source>
          <target state="new">Clicking a mouse button (left, wheel, or right) creates a secondary association between the pointer and that button through the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PointerPressed<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208971)</ept> event.</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PointerReleased<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208972)</ept> event is fired only when that same mouse button is released (no other button can be associated with the pointer until this event is complete).</source>
          <target state="new">The <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PointerReleased<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208972)</ept> event is fired only when that same mouse button is released (no other button can be associated with the pointer until this event is complete).</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Because of this exclusive association, other mouse button clicks are routed through the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PointerMoved<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208970)</ept> event.</source>
          <target state="new">Because of this exclusive association, other mouse button clicks are routed through the <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PointerMoved<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208970)</ept> event.</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>This handler manages a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PointerWheelChanged<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208973)</ept> event.</source>
          <target state="new">This handler manages a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PointerWheelChanged<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208973)</ept> event.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>We add the event to the event log, add the pointer to the pointer array (if necessary), and display the pointer details.</source>
          <target state="new">We add the event to the event log, add the pointer to the pointer array (if necessary), and display the pointer details.</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>This handler manages a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PointerReleased<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208972)</ept> event where contact with the digitizer is terminated.</source>
          <target state="new">This handler manages a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PointerReleased<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208972)</ept> event where contact with the digitizer is terminated.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>We add the event to the event log, remove the pointer from the pointer collection, and update the pointer details.</source>
          <target state="new">We add the event to the event log, remove the pointer from the pointer collection, and update the pointer details.</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>This handler manages a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PointerExited<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208969)</ept> event where contact with the digitizer is maintained.</source>
          <target state="new">This handler manages a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PointerExited<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208969)</ept> event where contact with the digitizer is maintained.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>We add the event to the event log, remove the pointer from the pointer array, and update the pointer details.</source>
          <target state="new">We add the event to the event log, remove the pointer from the pointer array, and update the pointer details.</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>This handler manages a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PointerCanceled<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208964)</ept> event.</source>
          <target state="new">This handler manages a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PointerCanceled<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208964)</ept> event.</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>We add the event to the event log, remove the pointer from the pointer array, and update the pointer details.</source>
          <target state="new">We add the event to the event log, remove the pointer from the pointer array, and update the pointer details.</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>This handler manages a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PointerCaptureLost<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208965)</ept> event.</source>
          <target state="new">This handler manages a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>PointerCaptureLost<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br208965)</ept> event.</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>We add the event to the event log, remove the pointer from the pointer array, and update the pointer details.</source>
          <target state="new">We add the event to the event log, remove the pointer from the pointer array, and update the pointer details.</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  <bpt id="p2">[</bpt><bpt id="p3">**</bpt>PointerCaptureLost<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br208965)</ept> can occur instead of <bpt id="p4">[</bpt><bpt id="p5">**</bpt>PointerReleased<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/br208972)</ept>.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>  <bpt id="p2">[</bpt><bpt id="p3">**</bpt>PointerCaptureLost<ept id="p3">**</ept><ept id="p2">](https://msdn.microsoft.com/library/windows/apps/br208965)</ept> can occur instead of <bpt id="p4">[</bpt><bpt id="p5">**</bpt>PointerReleased<ept id="p5">**</ept><ept id="p4">](https://msdn.microsoft.com/library/windows/apps/br208972)</ept>.</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Pointer capture can be lost for various reasons.</source>
          <target state="new">Pointer capture can be lost for various reasons.</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Get pointer properties</source>
          <target state="new">Get pointer properties</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>As stated earlier, you must get most extended pointer info from a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows.UI.Input.PointerPoint<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242038)</ept> object obtained through the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>GetCurrentPoint<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/hh943077)</ept> and <bpt id="p5">[</bpt><bpt id="p6">**</bpt>GetIntermediatePoints<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/hh943078)</ept> methods of <bpt id="p7">[</bpt><bpt id="p8">**</bpt>PointerRoutedEventArgs<ept id="p8">**</ept><ept id="p7">](https://msdn.microsoft.com/library/windows/apps/hh943076)</ept>.</source>
          <target state="new">As stated earlier, you must get most extended pointer info from a <bpt id="p1">[</bpt><bpt id="p2">**</bpt>Windows.UI.Input.PointerPoint<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br242038)</ept> object obtained through the <bpt id="p3">[</bpt><bpt id="p4">**</bpt>GetCurrentPoint<ept id="p4">**</ept><ept id="p3">](https://msdn.microsoft.com/library/windows/apps/hh943077)</ept> and <bpt id="p5">[</bpt><bpt id="p6">**</bpt>GetIntermediatePoints<ept id="p6">**</ept><ept id="p5">](https://msdn.microsoft.com/library/windows/apps/hh943078)</ept> methods of <bpt id="p7">[</bpt><bpt id="p8">**</bpt>PointerRoutedEventArgs<ept id="p8">**</ept><ept id="p7">](https://msdn.microsoft.com/library/windows/apps/hh943076)</ept>.</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>First, we create a new <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TextBlock<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br209652)</ept> for each pointer.</source>
          <target state="new">First, we create a new <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TextBlock<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br209652)</ept> for each pointer.</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Then we provide a way to update the pointer info in an existing <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TextBlock<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br209652)</ept> associated with that pointer.</source>
          <target state="new">Then we provide a way to update the pointer info in an existing <bpt id="p1">[</bpt><bpt id="p2">**</bpt>TextBlock<ept id="p2">**</ept><ept id="p1">](https://msdn.microsoft.com/library/windows/apps/br209652)</ept> associated with that pointer.</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Finally, we query various pointer properties.</source>
          <target state="new">Finally, we query various pointer properties.</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Complete example</source>
          <target state="new">Complete example</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The following is the C# code for this example.</source>
          <target state="new">The following is the C# code for this example.</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>For links to more complex samples, see Related articles at the bottom of this page .</source>
          <target state="new">For links to more complex samples, see Related articles at the bottom of this page .</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Related articles</source>
          <target state="new">Related articles</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Samples</source>
          <target state="new">Samples</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Basic input sample</source>
          <target state="new">Basic input sample</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Low latency input sample</source>
          <target state="new">Low latency input sample</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>User interaction mode sample</source>
          <target state="new">User interaction mode sample</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Focus visuals sample<ept id="p1">](http://go.microsoft.com/fwlink/p/?LinkID=619895)</ept><ph id="ph1">
</ph><bpt id="p2">**</bpt>Archive samples<ept id="p2">**</ept></source>
          <target state="new"><bpt id="p1">[</bpt>Focus visuals sample<ept id="p1">](http://go.microsoft.com/fwlink/p/?LinkID=619895)</ept><ph id="ph1">
</ph><bpt id="p2">**</bpt>Archive samples<ept id="p2">**</ept></target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Input: XAML user input events sample</source>
          <target state="new">Input: XAML user input events sample</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Input: Device capabilities sample</source>
          <target state="new">Input: Device capabilities sample</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Input: Manipulations and gestures (C++) sample</source>
          <target state="new">Input: Manipulations and gestures (C++) sample</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Input: Touch hit testing sample</source>
          <target state="new">Input: Touch hit testing sample</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>XAML scrolling, panning, and zooming sample</source>
          <target state="new">XAML scrolling, panning, and zooming sample</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Input: Simplified ink sample</source>
          <target state="new">Input: Simplified ink sample</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>